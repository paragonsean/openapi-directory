openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "The Amazon Chime SDK messaging APIs in this section allow software\
    \ developers to send and receive messages in custom messaging applications. These\
    \ APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs.\
    \ For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\"\
    >Amazon Chime SDK messaging</a>."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Chime SDK Messaging
  version: 2021-05-15
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: chime-sdk-messaging
  x-aws-signingName: chime
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/chime-sdk-messaging-2021-05-15.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/messaging-chime/
servers:
- description: The Amazon Chime SDK Messaging multi-region endpoint
  url: "http://messaging-chime.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Chime SDK Messaging multi-region endpoint
  url: "https://messaging-chime.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Chime SDK Messaging endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://messaging-chime.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Chime SDK Messaging endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://messaging-chime.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /channels/{channelArn}/channel-flow#x-amz-chime-bearer:
    put:
      description: "<p>Associates a channel flow with a channel. Once associated,\
        \ all messages to that channel go through channel flow processors. To stop\
        \ processing, use the <code>DisassociateChannelFlow</code> API.</p> <note>\
        \ <p>Only administrators or channel moderators can associate a channel flow.\
        \ The <code>x-amz-chime-bearer</code> request header is mandatory. Use the\
        \ ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that\
        \ makes the API call as the value in the header.</p> </note>"
      operationId: AssociateChannelFlow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The <code>AppInstanceUserArn</code> of the user making the API
          call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateChannelFlow_request'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels/{channelArn}/memberships#operation=batch-create&x-amz-chime-bearer:
    post:
      description: 'Adds a specified number of users and bots to a channel. '
      operationId: BatchCreateChannelMembership
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel to which you're adding users or bots.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - explode: true
        in: query
        name: operation
        required: true
        schema:
          enum:
          - batch-create
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateChannelMembership_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreateChannelMembershipResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels/{channelArn}#operation=channel-flow-callback:
    post:
      description: <p>Calls back Amazon Chime SDK messaging with a processing response
        message. This should be invoked from the processor Lambda. This is a developer
        API.</p> <p>You can return one of the following processing responses:</p>
        <ul> <li> <p>Update message content or metadata</p> </li> <li> <p>Deny a message</p>
        </li> <li> <p>Make no changes to the message</p> </li> </ul>
      operationId: ChannelFlowCallback
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - explode: true
        in: query
        name: operation
        required: true
        schema:
          enum:
          - channel-flow-callback
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelFlowCallback_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelFlowCallbackResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels#x-amz-chime-bearer:
    post:
      description: "<p>Creates a channel to which you can add users and send messages.</p>\
        \ <p> <b>Restriction</b>: You can't change a channel's privacy.</p> <note>\
        \ <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use\
        \ the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>\
        \ that makes the API call as the value in the header.</p> </note>"
      operationId: CreateChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannel_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels/{channelArn}/bans#x-amz-chime-bearer:
    get:
      description: <p>Lists all the users and bots banned from a particular channel.</p>
        <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory.
        Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
        that makes the API call as the value in the header.</p> </note>
      operationId: ListChannelBans
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The maximum number of bans that you want returned.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token passed by previous API calls until all requested bans
          are returned.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelBansResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    post:
      description: "<p>Permanently bans a member from a channel. Moderators can't\
        \ add banned members to a channel. To undo a ban, you first have to <code>DeleteChannelBan</code>,\
        \ and then <code>CreateChannelMembership</code>. Bans are cleaned up when\
        \ you delete users or channels.</p> <p>If you ban a user who is already part\
        \ of a channel, that user is automatically kicked from the channel.</p> <note>\
        \ <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use\
        \ the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>\
        \ that makes the API call as the value in the header.</p> </note>"
      operationId: CreateChannelBan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the ban request.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannelBan_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelBanResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channel-flows:
    post:
      description: "<p>Creates a channel flow, a container for processors. Processors\
        \ are AWS Lambda functions that perform actions on chat messages, such as\
        \ stripping out profanity. You can associate channel flows with channels,\
        \ and the processors in the channel flow then take action on all messages\
        \ sent to that channel. This is a developer API.</p> <p>Channel flows process\
        \ the following items:</p> <ol> <li> <p>New and updated messages</p> </li>\
        \ <li> <p>Persistent and non-persistent messages</p> </li> <li> <p>The Standard\
        \ message type</p> </li> </ol> <note> <p>Channel flows don't process Control\
        \ or System messages. For more information about the message types provided\
        \ by Chime SDK messaging, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/dg/using-the-messaging-sdk.html#msg-types\"\
        >Message types</a> in the <i>Amazon Chime developer guide</i>.</p> </note>"
      operationId: CreateChannelFlow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannelFlow_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels/{channelArn}/memberships#x-amz-chime-bearer:
    get:
      description: "<p>Lists all channel memberships in a channel.</p> <note> <p>The\
        \ <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN\
        \ of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that\
        \ makes the API call as the value in the header.</p> </note> <p>If you want\
        \ to list the channels to which a specific app instance user belongs, see\
        \ the <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_messaging-chime_ListChannelMembershipsForAppInstanceUser.html\"\
        >ListChannelMembershipsForAppInstanceUser</a> API.</p>"
      operationId: ListChannelMemberships
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of channel memberships that you want returned.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>.\
          \ Default members are returned as part of <code>ListChannelMemberships</code>\
          \ if no type is specified. Hidden members are only returned if the type\
          \ filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>."
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - DEFAULT
          - HIDDEN
          type: string
        style: form
      - description: The maximum number of channel memberships that you want returned.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token passed by previous API calls until all requested channel
          memberships are returned.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only
          required when listing a user's memberships in a particular sub-channel of
          an elastic channel.</p> </note>
        explode: true
        in: query
        name: sub-channel-id
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelMembershipsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    post:
      description: "<p>Adds a member to a channel. The <code>InvitedBy</code> field\
        \ in <code>ChannelMembership</code> is derived from the request header. A\
        \ channel member can:</p> <ul> <li> <p>List messages</p> </li> <li> <p>Send\
        \ messages</p> </li> <li> <p>Receive messages</p> </li> <li> <p>Edit their\
        \ own messages</p> </li> <li> <p>Leave the channel</p> </li> </ul> <p>Privacy\
        \ settings impact this action as follows:</p> <ul> <li> <p>Public Channels:\
        \ You do not need to be a member to list messages, but you must be a member\
        \ to send messages.</p> </li> <li> <p>Private Channels: You must be a member\
        \ to list or send messages.</p> </li> </ul> <note> <p>The <code>x-amz-chime-bearer</code>\
        \ request header is mandatory. Use the ARN of the <code>AppInstanceUserArn</code>\
        \ or <code>AppInstanceBot</code> that makes the API call as the value in the\
        \ header.</p> </note>"
      operationId: CreateChannelMembership
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel to which you're adding users.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannelMembership_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelMembershipResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels/{channelArn}/moderators#x-amz-chime-bearer:
    get:
      description: <p>Lists all the moderators for a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code>
        request header is mandatory. Use the ARN of the <code>AppInstanceUser</code>
        or <code>AppInstanceBot</code> that makes the API call as the value in the
        header.</p> </note>
      operationId: ListChannelModerators
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The maximum number of moderators that you want returned.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token passed by previous API calls until all requested moderators
          are returned.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelModeratorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    post:
      description: <p>Creates a new <code>ChannelModerator</code>. A channel moderator
        can:</p> <ul> <li> <p>Add and remove other members of the channel.</p> </li>
        <li> <p>Add and remove other moderators of the channel.</p> </li> <li> <p>Add
        and remove user bans for the channel.</p> </li> <li> <p>Redact messages in
        the channel.</p> </li> <li> <p>List messages in the channel.</p> </li> </ul>
        <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory.
        Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>of
        the user that makes the API call as the value in the header.</p> </note>
      operationId: CreateChannelModerator
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannelModerator_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelModeratorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels/{channelArn}#x-amz-chime-bearer:
    delete:
      description: <p>Immediately makes a channel and its memberships inaccessible
        and marks them for deletion. This is an irreversible process.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of
        the <code>AppInstanceUserArn</code> or <code>AppInstanceBot</code> that makes
        the API call as the value in the header.</p> </note>
      operationId: DeleteChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel being deleted.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    get:
      description: <p>Returns the full details of a channel in an Amazon Chime <code>AppInstance</code>.</p>
        <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory.
        Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
        that makes the API call as the value in the header.</p> </note>
      operationId: DescribeChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    put:
      description: "<p>Update a channel's attributes.</p> <p> <b>Restriction</b>:\
        \ You can't change a channel's privacy. </p> <note> <p>The <code>x-amz-chime-bearer</code>\
        \ request header is mandatory. Use the ARN of the <code>AppInstanceUser</code>\
        \ or <code>AppInstanceBot</code> that makes the API call as the value in the\
        \ header.</p> </note>"
      operationId: UpdateChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels/{channelArn}/bans/{memberArn}#x-amz-chime-bearer:
    delete:
      description: <p>Removes a member from a channel's ban list.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of
        the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes
        the API call as the value in the header.</p> </note>
      operationId: DeleteChannelBan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel from which the <code>AppInstanceUser</code>
          was banned.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> that you want to
          reinstate.
        explode: false
        in: path
        name: memberArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    get:
      description: <p>Returns the full details of a channel ban.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of
        the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes
        the API call as the value in the header.</p> </note>
      operationId: DescribeChannelBan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel from which the user is banned.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The <code>AppInstanceUserArn</code> of the member being banned.
        explode: false
        in: path
        name: memberArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelBanResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /channel-flows/{channelFlowArn}:
    delete:
      description: "<p>Deletes a channel flow, an irreversible process. This is a\
        \ developer API.</p> <note> <p> This API works only when the channel flow\
        \ is not associated with any channel. To get a list of all channels that a\
        \ channel flow is associated with, use the <code>ListChannelsAssociatedWithChannelFlow</code>\
        \ API. Use the <code>DisassociateChannelFlow</code> API to disassociate a\
        \ channel flow from all channels. </p> </note>"
      operationId: DeleteChannelFlow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel flow.
        explode: false
        in: path
        name: channelFlowArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    get:
      description: Returns the full details of a channel flow in an Amazon Chime <code>AppInstance</code>.
        This is a developer API.
      operationId: DescribeChannelFlow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel flow.
        explode: false
        in: path
        name: channelFlowArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    put:
      description: Updates channel flow attributes. This is a developer API.
      operationId: UpdateChannelFlow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel flow.
        explode: false
        in: path
        name: channelFlowArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelFlow_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels/{channelArn}/memberships/{memberArn}#x-amz-chime-bearer:
    delete:
      description: <p>Removes a member from a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code>
        request header is mandatory. Use the <code>AppInstanceUserArn</code> of the
        user that makes the API call as the value in the header.</p> </note>
      operationId: DeleteChannelMembership
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel from which you want to remove the user.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The <code>AppInstanceUserArn</code> of the member that you're
          removing from the channel.
        explode: false
        in: path
        name: memberArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only
          for use by moderators.</p> </note>
        explode: true
        in: query
        name: sub-channel-id
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        style: form
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    get:
      description: <p>Returns the full details of a user's channel membership.</p>
        <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory.
        Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
        that makes the API call as the value in the header.</p> </note>
      operationId: DescribeChannelMembership
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The <code>AppInstanceUserArn</code> of the member.
        explode: false
        in: path
        name: memberArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: <p>The ID of the SubChannel in the request. The response contains
          an <code>ElasticChannelConfiguration</code> object.</p> <note> <p>Only required
          to get a user’s SubChannel membership details.</p> </note>
        explode: true
        in: query
        name: sub-channel-id
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelMembershipResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /channels/{channelArn}/messages/{messageId}#x-amz-chime-bearer:
    delete:
      description: <p>Deletes a channel message. Only admins can perform this action.
        Deletion makes messages inaccessible immediately. A background process deletes
        any revisions created by <code>UpdateChannelMessage</code>.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of
        the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes
        the API call as the value in the header.</p> </note>
      operationId: DeleteChannelMessage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ID of the message being deleted.
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only
          required when deleting messages in a SubChannel that the user belongs to.</p>
          </note>
        explode: true
        in: query
        name: sub-channel-id
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        style: form
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    get:
      description: <p>Gets the full details of a channel message.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of
        the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes
        the API call as the value in the header.</p> </note>
      operationId: GetChannelMessage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ID of the message.
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only
          required when getting messages in a SubChannel that the user belongs to.</p>
          </note>
        explode: true
        in: query
        name: sub-channel-id
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelMessageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    put:
      description: <p>Updates the content of a message.</p> <note> <p>The <code>x-amz-chime-bearer</code>
        request header is mandatory. Use the ARN of the <code>AppInstanceUser</code>
        or <code>AppInstanceBot</code> that makes the API call as the value in the
        header.</p> </note>
      operationId: UpdateChannelMessage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ID string of the message being updated.
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelMessage_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelMessageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels/{channelArn}/moderators/{channelModeratorArn}#x-amz-chime-bearer:
    delete:
      description: <p>Deletes a channel moderator.</p> <note> <p>The <code>x-amz-chime-bearer</code>
        request header is mandatory. Use the ARN of the <code>AppInstanceUser</code>
        or <code>AppInstanceBot</code> that makes the API call as the value in the
        header.</p> </note>
      operationId: DeleteChannelModerator
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The <code>AppInstanceUserArn</code> of the moderator being deleted.
        explode: false
        in: path
        name: channelModeratorArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    get:
      description: <p>Returns the full details of a single ChannelModerator.</p> <note>
        <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        <code>AppInstanceUserArn</code> of the user that makes the API call as the
        value in the header.</p> </note>
      operationId: DescribeChannelModerator
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The <code>AppInstanceUserArn</code> of the channel moderator.
        explode: false
        in: path
        name: channelModeratorArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelModeratorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /app-instances/{appInstanceArn}/streaming-configurations:
    delete:
      description: "Deletes the streaming configurations for an <code>AppInstance</code>.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/streaming-export.html\"\
        >Streaming messaging data</a> in the <i>Amazon Chime SDK Developer Guide</i>."
      operationId: DeleteMessagingStreamingConfigurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the streaming configurations being deleted.
        explode: false
        in: path
        name: appInstanceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    get:
      description: "Retrieves the data streaming configuration for an <code>AppInstance</code>.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/streaming-export.html\"\
        >Streaming messaging data</a> in the <i>Amazon Chime SDK Developer Guide</i>."
      operationId: GetMessagingStreamingConfigurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the streaming configurations.
        explode: false
        in: path
        name: appInstanceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessagingStreamingConfigurationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    put:
      description: "Sets the data streaming configuration for an <code>AppInstance</code>.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/streaming-export.html\"\
        >Streaming messaging data</a> in the <i>Amazon Chime SDK Developer Guide</i>."
      operationId: PutMessagingStreamingConfigurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the streaming configuration.
        explode: false
        in: path
        name: appInstanceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMessagingStreamingConfigurations_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutMessagingStreamingConfigurationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels/{channelArn}#scope=app-instance-user-membership&app-instance-user-arn&x-amz-chime-bearer:
    get:
      description: <p> Returns the details of a channel based on the membership of
        the specified <code>AppInstanceUser</code> or <code>AppInstanceBot</code>.</p>
        <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory.
        Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
        that makes the API call as the value in the header.</p> </note>
      operationId: DescribeChannelMembershipForAppInstanceUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel to which the user belongs.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the user or bot in a channel.
        explode: true
        in: query
        name: app-instance-user-arn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: form
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - explode: true
        in: query
        name: scope
        required: true
        schema:
          enum:
          - app-instance-user-membership
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelMembershipForAppInstanceUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /channels/{channelArn}#scope=app-instance-user-moderated-channel&app-instance-user-arn&x-amz-chime-bearer:
    get:
      description: <p>Returns the full details of a channel moderated by the specified
        <code>AppInstanceUser</code> or <code>AppInstanceBot</code>.</p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of
        the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes
        the API call as the value in the header.</p> </note>
      operationId: DescribeChannelModeratedByAppInstanceUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the moderated channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the user or bot in the moderated channel.
        explode: true
        in: query
        name: app-instance-user-arn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: form
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - explode: true
        in: query
        name: scope
        required: true
        schema:
          enum:
          - app-instance-user-moderated-channel
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelModeratedByAppInstanceUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /channels/{channelArn}/channel-flow/{channelFlowArn}#x-amz-chime-bearer:
    delete:
      description: "<p>Disassociates a channel flow from all its channels. Once disassociated,\
        \ all messages to that channel stop going through the channel flow processor.</p>\
        \ <note> <p>Only administrators or channel moderators can disassociate a channel\
        \ flow.</p> <p>The <code>x-amz-chime-bearer</code> request header is mandatory.\
        \ Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>\
        \ that makes the API call as the value in the header.</p> </note>"
      operationId: DisassociateChannelFlow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the channel flow.
        explode: false
        in: path
        name: channelFlowArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The <code>AppInstanceUserArn</code> of the user making the API
          call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /channels/{channelArn}/memberships/{memberArn}/preferences#x-amz-chime-bearer:
    get:
      description: <p>Gets the membership preferences of an <code>AppInstanceUser</code>
        or <code>AppInstanceBot</code> for the specified channel. A user or a bot
        must be a member of the channel and own the membership in order to retrieve
        membership preferences. Users or bots in the <code>AppInstanceAdmin</code>
        and channel moderator roles can't retrieve preferences for other users or
        bots. Banned users or bots can't retrieve membership preferences for the channel
        from which they are banned.</p> <note> <p>The <code>x-amz-chime-bearer</code>
        request header is mandatory. Use the ARN of the <code>AppInstanceUser</code>
        or <code>AppInstanceBot</code> that makes the API call as the value in the
        header.</p> </note>
      operationId: GetChannelMembershipPreferences
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The <code>AppInstanceUserArn</code> of the member retrieving
          the preferences.
        explode: false
        in: path
        name: memberArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelMembershipPreferencesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    put:
      description: <p>Sets the membership preferences of an <code>AppInstanceUser</code>
        or <code>AppInstanceBot</code> for the specified channel. The user or bot
        must be a member of the channel. Only the user or bot who owns the membership
        can set preferences. Users or bots in the <code>AppInstanceAdmin</code> and
        channel moderator roles can't set preferences for other users. Banned users
        or bots can't set membership preferences for the channel from which they are
        banned.</p> <note> <p>The x-amz-chime-bearer request header is mandatory.
        Use the ARN of an <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
        that makes the API call as the value in the header.</p> </note>
      operationId: PutChannelMembershipPreferences
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the member setting the preferences.
        explode: false
        in: path
        name: memberArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutChannelMembershipPreferences_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutChannelMembershipPreferencesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels/{channelArn}/messages/{messageId}#scope=message-status&x-amz-chime-bearer:
    get:
      description: "<p>Gets message status for a specified <code>messageId</code>.\
        \ Use this API to determine the intermediate status of messages going through\
        \ channel flow processing. The API provides an alternative to retrieving message\
        \ status if the event was not received because a client wasn't connected to\
        \ a websocket. </p> <p>Messages can have any one of these statuses.</p> <dl>\
        \ <dt>SENT</dt> <dd> <p>Message processed successfully</p> </dd> <dt>PENDING</dt>\
        \ <dd> <p>Ongoing processing</p> </dd> <dt>FAILED</dt> <dd> <p>Processing\
        \ failed</p> </dd> <dt>DENIED</dt> <dd> <p>Message denied by the processor</p>\
        \ </dd> </dl> <note> <ul> <li> <p>This API does not return statuses for denied\
        \ messages, because we don't store them once the processor denies them. </p>\
        \ </li> <li> <p>Only the message sender can invoke this API.</p> </li> <li>\
        \ <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use\
        \ the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>\
        \ that makes the API call as the value in the header.</p> </li> </ul> </note>"
      operationId: GetChannelMessageStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ID of the message.
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        style: simple
      - description: The <code>AppInstanceUserArn</code> of the user making the API
          call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only
          required when getting message status in a SubChannel that the user belongs
          to.</p> </note>
        explode: true
        in: query
        name: sub-channel-id
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        style: form
      - explode: true
        in: query
        name: scope
        required: true
        schema:
          enum:
          - message-status
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelMessageStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /endpoints/messaging-session:
    get:
      description: The details of the endpoint for the messaging session.
      operationId: GetMessagingSessionEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessagingSessionEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /channel-flows#app-instance-arn:
    get:
      description: Returns a paginated lists of all the channel flows created under
        a single Chime. This is a developer API.
      operationId: ListChannelFlows
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the app instance.
        explode: true
        in: query
        name: app-instance-arn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: form
      - description: The maximum number of channel flows that you want to return.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token passed by previous API calls until all requested channel
          flows are returned.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelFlowsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /channels#scope=app-instance-user-memberships&x-amz-chime-bearer:
    get:
      description: <p> Lists all channels that an <code>AppInstanceUser</code> or
        <code>AppInstanceBot</code> is a part of. Only an <code>AppInstanceAdmin</code>
        can call the API with a user ARN that is not their own. </p> <note> <p>The
        <code>x-amz-chime-bearer</code> request header is mandatory. Use the ARN of
        the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes
        the API call as the value in the header.</p> </note>
      operationId: ListChannelMembershipsForAppInstanceUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the user or bot.
        explode: true
        in: query
        name: app-instance-user-arn
        required: false
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: form
      - description: The maximum number of users that you want returned.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token returned from previous API requests until the number
          of channel memberships is reached.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: scope
        required: true
        schema:
          enum:
          - app-instance-user-memberships
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelMembershipsForAppInstanceUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /channels/{channelArn}/messages#x-amz-chime-bearer:
    get:
      description: "<p>List all the messages in a channel. Returns a paginated list\
        \ of <code>ChannelMessages</code>. By default, sorted by creation timestamp\
        \ in descending order.</p> <note> <p>Redacted messages appear in the results\
        \ as empty, since they are only redacted, not deleted. Deleted messages do\
        \ not appear in the results. This action always returns the latest version\
        \ of an edited message.</p> <p>Also, the <code>x-amz-chime-bearer</code> request\
        \ header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or\
        \ <code>AppInstanceBot</code> that makes the API call as the value in the\
        \ header.</p> </note>"
      operationId: ListChannelMessages
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: "The order in which you want messages sorted. Default is Descending,\
          \ based on time created."
        explode: true
        in: query
        name: sort-order
        required: false
        schema:
          enum:
          - ASCENDING
          - DESCENDING
          type: string
        style: form
      - description: The initial or starting time stamp for your requested messages.
        explode: true
        in: query
        name: not-before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The final or ending time stamp for your requested messages.
        explode: true
        in: query
        name: not-after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The maximum number of messages that you want returned.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token passed by previous API calls until all requested messages
          are returned.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only
          required when listing the messages in a SubChannel that the user belongs
          to.</p> </note>
        explode: true
        in: query
        name: sub-channel-id
        required: false
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelMessagesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    post:
      description: "<p>Sends a message to a particular channel that the member is\
        \ a part of.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header\
        \ is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>\
        \ that makes the API call as the value in the header.</p> <p>Also, <code>STANDARD</code>\
        \ messages can be up to 4KB in size and contain metadata. Metadata is arbitrary,\
        \ and you can use it in a variety of ways, such as containing a link to an\
        \ attachment.</p> <p> <code>CONTROL</code> messages are limited to 30 bytes\
        \ and do not contain metadata.</p> </note>"
      operationId: SendChannelMessage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendChannelMessage_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendChannelMessageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels#app-instance-arn&x-amz-chime-bearer:
    get:
      description: <p>Lists all Channels created under a single Chime App as a paginated
        list. You can specify filters to narrow results.</p> <p class="title"> <b>Functionality
        &amp; restrictions</b> </p> <ul> <li> <p>Use privacy = <code>PUBLIC</code>
        to retrieve all public channels in the account.</p> </li> <li> <p>Only an
        <code>AppInstanceAdmin</code> can set privacy = <code>PRIVATE</code> to list
        the private channels in an account.</p> </li> </ul> <note> <p>The <code>x-amz-chime-bearer</code>
        request header is mandatory. Use the ARN of the <code>AppInstanceUser</code>
        or <code>AppInstanceBot</code> that makes the API call as the value in the
        header.</p> </note>
      operationId: ListChannels
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstance</code>.
        explode: true
        in: query
        name: app-instance-arn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: form
      - description: 'The privacy setting. <code>PUBLIC</code> retrieves all the public
          channels. <code>PRIVATE</code> retrieves private channels. Only an <code>AppInstanceAdmin</code>
          can retrieve private channels. '
        explode: true
        in: query
        name: privacy
        required: false
        schema:
          enum:
          - PUBLIC
          - PRIVATE
          type: string
        style: form
      - description: The maximum number of channels that you want to return.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token passed by previous API calls until all requested channels
          are returned.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /channels#scope=channel-flow-associations&channel-flow-arn:
    get:
      description: "Lists all channels associated with a specified channel flow. You\
        \ can associate a channel flow with multiple channels, but you can only associate\
        \ a channel with one channel flow. This is a developer API."
      operationId: ListChannelsAssociatedWithChannelFlow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel flow.
        explode: true
        in: query
        name: channel-flow-arn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: form
      - description: The maximum number of channels that you want to return.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token passed by previous API calls until all requested channels
          are returned.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: scope
        required: true
        schema:
          enum:
          - channel-flow-associations
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsAssociatedWithChannelFlowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /channels#scope=app-instance-user-moderated-channels&x-amz-chime-bearer:
    get:
      description: <p>A list of the channels moderated by an <code>AppInstanceUser</code>.</p>
        <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory.
        Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
        that makes the API call as the value in the header.</p> </note>
      operationId: ListChannelsModeratedByAppInstanceUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the user or bot in the moderated channel.
        explode: true
        in: query
        name: app-instance-user-arn
        required: false
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: form
      - description: The maximum number of channels in the request.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token returned from previous API requests until the number
          of channels moderated by the user is reached.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: scope
        required: true
        schema:
          enum:
          - app-instance-user-moderated-channels
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsModeratedByAppInstanceUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /channels/{channelArn}/subchannels#x-amz-chime-bearer:
    get:
      description: Lists all the SubChannels in an elastic channel when given a channel
        ID. Available only to the app instance admins and channel moderators of elastic
        channels.
      operationId: ListSubChannels
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of elastic channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The <code>AppInstanceUserArn</code> of the user making the API
          call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The maximum number of sub-channels that you want to return.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token passed by previous API calls until all requested sub-channels
          are returned.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubChannelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /tags#arn:
    get:
      description: Lists the tags applied to an Amazon Chime SDK messaging resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource.
        explode: true
        in: query
        name: arn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /channels/{channelArn}/expiration-settings:
    put:
      description: "<p>Sets the number of days before the channel is automatically\
        \ deleted.</p> <note> <ul> <li> <p>A background process deletes expired channels\
        \ within 6 hours of expiration. Actual deletion times may vary.</p> </li>\
        \ <li> <p>Expired channels that have not yet been deleted appear as active,\
        \ and you can update their expiration settings. The system honors the new\
        \ settings.</p> </li> <li> <p>The <code>x-amz-chime-bearer</code> request\
        \ header is mandatory. Use the ARN of the <code>AppInstanceUser</code> or\
        \ <code>AppInstanceBot</code> that makes the API call as the value in the\
        \ header.</p> </li> </ul> </note>"
      operationId: PutChannelExpirationSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: false
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutChannelExpirationSettings_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutChannelExpirationSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels/{channelArn}/messages/{messageId}#operation=redact&x-amz-chime-bearer:
    post:
      description: "<p>Redacts message content, but not metadata. The message exists\
        \ in the back end, but the action returns null content, and the state shows\
        \ as redacted.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header\
        \ is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>\
        \ that makes the API call as the value in the header.</p> </note>"
      operationId: RedactChannelMessage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel containing the messages that you want
          to redact.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ID of the message being redacted.
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - explode: true
        in: query
        name: operation
        required: true
        schema:
          enum:
          - redact
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedactChannelMessage_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedactChannelMessageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels#operation=search:
    post:
      description: <p>Allows the <code>ChimeBearer</code> to search channels by channel
        members. Users or bots can search across the channels that they belong to.
        Users in the <code>AppInstanceAdmin</code> role can search across all channels.</p>
        <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the
        ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that
        makes the API call as the value in the header.</p>
      operationId: SearchChannels
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The <code>AppInstanceUserArn</code> of the user making the API
          call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: false
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The maximum number of channels that you want returned.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token returned from previous API requests until the number
          of channels is reached.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: operation
        required: true
        schema:
          enum:
          - search
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchChannels_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchChannelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags#operation=tag-resource:
    post:
      description: Applies the specified tags to the specified Amazon Chime SDK messaging
        resource.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: operation
        required: true
        schema:
          enum:
          - tag-resource
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags#operation=untag-resource:
    post:
      description: Removes the specified tags from the specified Amazon Chime SDK
        messaging resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: operation
        required: true
        schema:
          enum:
          - untag-resource
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResource_request'
        required: true
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels/{channelArn}/readMarker#x-amz-chime-bearer:
    put:
      description: <p>The details of the time when a user last read messages in a
        channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header
        is mandatory. Use the ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
        that makes the API call as the value in the header.</p> </note>
      operationId: UpdateChannelReadMarker
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the channel.
        explode: false
        in: path
        name: channelArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
          that makes the API call.
        explode: false
        in: header
        name: x-amz-chime-bearer
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelReadMarkerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BadRequestException: {}
    ForbiddenException: {}
    NotFoundException: {}
    UnauthorizedClientException: {}
    ConflictException: {}
    ThrottledClientException: {}
    ServiceUnavailableException: {}
    ServiceFailureException: {}
    BatchCreateChannelMembershipResponse:
      example:
        Errors: ""
        BatchChannelMemberships:
          SubChannelId: ""
          InvitedBy:
            Arn: ""
            Name: ""
          ChannelArn: ""
          Type: ""
          Members: ""
      properties:
        BatchChannelMemberships:
          $ref: '#/components/schemas/BatchCreateChannelMembershipResponse_BatchChannelMemberships'
        Errors:
          allOf:
          - $ref: '#/components/schemas/BatchCreateChannelMembershipErrors'
          - description: "If the action fails for one or more of the memberships in\
              \ the request, a list of the memberships is returned, along with error\
              \ codes and error messages."
      type: object
    ChimeArn:
      maxLength: 1600
      minLength: 5
      pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
        .]{0,63}:[^/].{0,1023}"
      type: string
    ResourceLimitExceededException: {}
    ChannelFlowCallbackResponse:
      example:
        ChannelArn: ""
        CallbackId: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
        CallbackId:
          allOf:
          - $ref: '#/components/schemas/CallbackIdType'
          - description: The call back ID passed in the request.
      type: object
    MessageId:
      maxLength: 128
      minLength: 1
      pattern: "[-_a-zA-Z0-9]*"
      type: string
    NonEmptyContent:
      format: password
      minLength: 1
      pattern: "[\\s\\S]*"
      type: string
    Metadata:
      format: password
      maxLength: 1024
      minLength: 0
      pattern: .*
      type: string
    PushNotificationConfiguration:
      description: The push notification configuration of the message.
      properties:
        Title:
          allOf:
          - $ref: '#/components/schemas/PushNotificationTitle'
          - description: The title of the push notification.
        Body:
          allOf:
          - $ref: '#/components/schemas/PushNotificationBody'
          - description: The body of the push notification.
        Type:
          allOf:
          - $ref: '#/components/schemas/PushNotificationType'
          - description: "Enum value that indicates the type of the push notification\
              \ for a message. <code>DEFAULT</code>: Normal mobile push notification.\
              \ <code>VOIP</code>: VOIP mobile push notification."
      type: object
    MessageAttributeMap:
      additionalProperties:
        $ref: '#/components/schemas/MessageAttributeValue'
      type: object
    SubChannelId:
      maxLength: 128
      minLength: 1
      pattern: "[-_a-zA-Z0-9]*"
      type: string
    ContentType:
      format: password
      maxLength: 45
      minLength: 0
      pattern: "[\\s\\S]*"
      type: string
    CreateChannelResponse:
      example:
        ChannelArn: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
      type: object
    Tag:
      description: A tag object containing a key-value pair.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key in a tag.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value in a tag.
      required:
      - Key
      - Value
      type: object
    MaximumSubChannels:
      minimum: 2
      type: integer
    TargetMembershipsPerSubChannel:
      minimum: 2
      type: integer
    MinimumMembershipPercentage:
      maximum: 40
      minimum: 1
      type: integer
    ExpirationDays:
      maximum: 5475
      minimum: 1
      type: integer
    ExpirationCriterion:
      enum:
      - CREATED_TIMESTAMP
      - LAST_MESSAGE_TIMESTAMP
      type: string
    CreateChannelBanResponse:
      example:
        ChannelArn: ""
        Member:
          Arn: ""
          Name: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the response to the ban request.
        Member:
          $ref: '#/components/schemas/CreateChannelBanResponse_Member'
      type: object
    CreateChannelFlowResponse:
      example:
        ChannelFlowArn: ""
      properties:
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel flow.
      type: object
    Processor:
      description: The information about a processor in a channel flow.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          - description: The name of the channel flow.
        Configuration:
          $ref: '#/components/schemas/Processor_Configuration'
        ExecutionOrder:
          allOf:
          - $ref: '#/components/schemas/ChannelFlowExecutionOrder'
          - description: "The sequence in which processors run. If you have multiple\
              \ processors in a channel flow, message processing goes through each\
              \ processor in the sequence. The value determines the sequence. At this\
              \ point, we support only 1 processor within a flow."
        FallbackAction:
          allOf:
          - $ref: '#/components/schemas/FallbackAction'
          - description: "Determines whether to continue with message processing or\
              \ stop it in cases where communication with a processor fails. If a\
              \ processor has a fallback action of <code>ABORT</code> and communication\
              \ with it fails, the processor sets the message status to <code>FAILED</code>\
              \ and does not send the message to any recipients. Note that if the\
              \ last processor in the channel flow sequence has a fallback action\
              \ of <code>CONTINUE</code> and communication with the processor fails,\
              \ then the message is considered processed and sent to recipients of\
              \ the channel."
      required:
      - Configuration
      - ExecutionOrder
      - FallbackAction
      - Name
      type: object
    CreateChannelMembershipResponse:
      example:
        SubChannelId: ""
        ChannelArn: ""
        Member:
          Arn: ""
          Name: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
        Member:
          $ref: '#/components/schemas/CreateChannelMembershipResponse_Member'
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: The ID of the SubChannel in the response.
      type: object
    CreateChannelModeratorResponse:
      example:
        ChannelArn: ""
        ChannelModerator:
          Arn: ""
          Name: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
        ChannelModerator:
          $ref: '#/components/schemas/CreateChannelModeratorResponse_ChannelModerator'
      type: object
    DescribeChannelResponse:
      example:
        Channel:
          ChannelArn: ""
          Privacy: ""
          CreatedBy:
            Arn: ""
            Name: ""
          CreatedTimestamp: ""
          ElasticChannelConfiguration:
            MinimumMembershipPercentage: ""
            MaximumSubChannels: ""
            TargetMembershipsPerSubChannel: ""
          ExpirationSettings:
            ExpirationCriterion: ""
            ExpirationDays: ""
          Mode: ""
          LastMessageTimestamp: ""
          LastUpdatedTimestamp: ""
          ChannelFlowArn: ""
          Metadata: ""
          Name: ""
      properties:
        Channel:
          $ref: '#/components/schemas/DescribeChannelResponse_Channel'
      type: object
    DescribeChannelBanResponse:
      example:
        ChannelBan:
          ChannelArn: ""
          CreatedTimestamp: ""
          CreatedBy:
            Arn: ""
            Name: ""
          Member:
            Arn: ""
            Name: ""
      properties:
        ChannelBan:
          $ref: '#/components/schemas/DescribeChannelBanResponse_ChannelBan'
      type: object
    DescribeChannelFlowResponse:
      example:
        ChannelFlow:
          CreatedTimestamp: ""
          ChannelFlowArn: ""
          LastUpdatedTimestamp: ""
          Processors: ""
          Name: ""
      properties:
        ChannelFlow:
          $ref: '#/components/schemas/DescribeChannelFlowResponse_ChannelFlow'
      type: object
    DescribeChannelMembershipResponse:
      example:
        ChannelMembership:
          SubChannelId: ""
          InvitedBy:
            Arn: ""
            Name: ""
          ChannelArn: ""
          Type: ""
          CreatedTimestamp: ""
          LastUpdatedTimestamp: ""
          Member:
            Arn: ""
            Name: ""
      properties:
        ChannelMembership:
          $ref: '#/components/schemas/DescribeChannelMembershipResponse_ChannelMembership'
      type: object
    DescribeChannelMembershipForAppInstanceUserResponse:
      example:
        ChannelMembership:
          ChannelSummary:
            ChannelArn: ""
            Privacy: ""
            Mode: ""
            LastMessageTimestamp: ""
            Metadata: ""
            Name: ""
          AppInstanceUserMembershipSummary:
            SubChannelId: ""
            Type: ""
            ReadMarkerTimestamp: ""
      properties:
        ChannelMembership:
          $ref: '#/components/schemas/DescribeChannelMembershipForAppInstanceUserResponse_ChannelMembership'
      type: object
    DescribeChannelModeratedByAppInstanceUserResponse:
      example:
        Channel:
          ChannelSummary:
            ChannelArn: ""
            Privacy: ""
            Mode: ""
            LastMessageTimestamp: ""
            Metadata: ""
            Name: ""
      properties:
        Channel:
          $ref: '#/components/schemas/DescribeChannelModeratedByAppInstanceUserResponse_Channel'
      type: object
    DescribeChannelModeratorResponse:
      example:
        ChannelModerator:
          Moderator:
            Arn: ""
            Name: ""
          ChannelArn: ""
          CreatedTimestamp: ""
          CreatedBy:
            Arn: ""
            Name: ""
      properties:
        ChannelModerator:
          $ref: '#/components/schemas/DescribeChannelModeratorResponse_ChannelModerator'
      type: object
    GetChannelMembershipPreferencesResponse:
      example:
        ChannelArn: ""
        Preferences:
          PushNotifications:
            AllowNotifications: ""
            FilterRule: ""
        Member:
          Arn: ""
          Name: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
        Member:
          $ref: '#/components/schemas/GetChannelMembershipPreferencesResponse_Member'
        Preferences:
          $ref: '#/components/schemas/GetChannelMembershipPreferencesResponse_Preferences'
      type: object
    GetChannelMessageResponse:
      example:
        ChannelMessage:
          Redacted: ""
          Status:
            Value: ""
            Detail: ""
          ChannelArn: ""
          CreatedTimestamp: ""
          ContentType: ""
          LastUpdatedTimestamp: ""
          Metadata: ""
          Sender:
            Arn: ""
            Name: ""
          Persistence: ""
          SubChannelId: ""
          MessageAttributes: ""
          Type: ""
          Target: ""
          Content: ""
          LastEditedTimestamp: ""
          MessageId: ""
      properties:
        ChannelMessage:
          $ref: '#/components/schemas/GetChannelMessageResponse_ChannelMessage'
      type: object
    GetChannelMessageStatusResponse:
      example:
        Status:
          Value: ""
          Detail: ""
      properties:
        Status:
          $ref: '#/components/schemas/GetChannelMessageStatusResponse_Status'
      type: object
    GetMessagingSessionEndpointResponse:
      example:
        Endpoint:
          Url: ""
      properties:
        Endpoint:
          $ref: '#/components/schemas/GetMessagingSessionEndpointResponse_Endpoint'
      type: object
    GetMessagingStreamingConfigurationsResponse:
      example:
        StreamingConfigurations: ""
      properties:
        StreamingConfigurations:
          allOf:
          - $ref: '#/components/schemas/StreamingConfigurationList'
          - description: The streaming settings.
      type: object
    ListChannelBansResponse:
      example:
        ChannelArn: ""
        NextToken: ""
        ChannelBans: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token passed by previous API calls until all requested
              bans are returned.
        ChannelBans:
          allOf:
          - $ref: '#/components/schemas/ChannelBanSummaryList'
          - description: The information for each requested ban.
      type: object
    ListChannelFlowsResponse:
      example:
        ChannelFlows: ""
        NextToken: ""
      properties:
        ChannelFlows:
          allOf:
          - $ref: '#/components/schemas/ChannelFlowSummaryList'
          - description: The information about each channel flow.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token passed by previous API calls until all requested
              channels are returned.
      type: object
    ListChannelMembershipsResponse:
      example:
        ChannelMemberships: ""
        ChannelArn: ""
        NextToken: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
        ChannelMemberships:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipSummaryList'
          - description: The information for the requested channel memberships.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token passed by previous API calls until all requested
              channel memberships are returned.
      type: object
    ListChannelMembershipsForAppInstanceUserResponse:
      example:
        ChannelMemberships: ""
        NextToken: ""
      properties:
        ChannelMemberships:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipForAppInstanceUserSummaryList'
          - description: The information for the requested channel memberships.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token passed by previous API calls until all requested
              users are returned.
      type: object
    ListChannelMessagesResponse:
      example:
        SubChannelId: ""
        ChannelArn: ""
        ChannelMessages: ""
        NextToken: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel containing the requested messages.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token passed by previous API calls until all requested
              messages are returned.
        ChannelMessages:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageSummaryList'
          - description: "The information about, and content of, each requested message."
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: The ID of the SubChannel in the response.
      type: object
    ListChannelModeratorsResponse:
      example:
        ChannelArn: ""
        NextToken: ""
        ChannelModerators: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token passed by previous API calls until all requested
              moderators are returned.
        ChannelModerators:
          allOf:
          - $ref: '#/components/schemas/ChannelModeratorSummaryList'
          - description: The information about and names of each moderator.
      type: object
    ListChannelsResponse:
      example:
        NextToken: ""
        Channels: ""
      properties:
        Channels:
          allOf:
          - $ref: '#/components/schemas/ChannelSummaryList'
          - description: The information about each channel.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned from previous API requests until the number
              of channels is reached.
      type: object
    ListChannelsAssociatedWithChannelFlowResponse:
      example:
        NextToken: ""
        Channels: ""
      properties:
        Channels:
          allOf:
          - $ref: '#/components/schemas/ChannelAssociatedWithFlowSummaryList'
          - description: The information about each channel.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token passed by previous API calls until all requested
              channels are returned.
      type: object
    ListChannelsModeratedByAppInstanceUserResponse:
      example:
        NextToken: ""
        Channels: ""
      properties:
        Channels:
          allOf:
          - $ref: '#/components/schemas/ChannelModeratedByAppInstanceUserSummaryList'
          - description: The moderated channels in the request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned from previous API requests until the number
              of channels moderated by the user is reached.
      type: object
    ListSubChannelsResponse:
      example:
        ChannelArn: ""
        NextToken: ""
        SubChannels: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of elastic channel.
        SubChannels:
          allOf:
          - $ref: '#/components/schemas/SubChannelSummaryList'
          - description: The information about each sub-channel.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token passed by previous API calls until all requested
              sub-channels are returned.
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tag key-value pairs.
      type: object
    PutChannelExpirationSettingsResponse:
      example:
        ChannelArn: ""
        ExpirationSettings:
          ExpirationCriterion: ""
          ExpirationDays: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The channel ARN.
        ExpirationSettings:
          $ref: '#/components/schemas/PutChannelExpirationSettingsResponse_ExpirationSettings'
      type: object
    PutChannelMembershipPreferencesResponse:
      example:
        ChannelArn: ""
        Preferences:
          PushNotifications:
            AllowNotifications: ""
            FilterRule: ""
        Member:
          Arn: ""
          Name: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
        Member:
          $ref: '#/components/schemas/GetChannelMembershipPreferencesResponse_Member'
        Preferences:
          $ref: '#/components/schemas/PutChannelMembershipPreferencesResponse_Preferences'
      type: object
    PushNotificationPreferences:
      description: The channel membership preferences for push notification.
      properties:
        AllowNotifications:
          allOf:
          - $ref: '#/components/schemas/AllowNotifications'
          - description: "Enum value that indicates which push notifications to send\
              \ to the requested member of a channel. <code>ALL</code> sends all push\
              \ notifications, <code>NONE</code> sends no push notifications, <code>FILTERED</code>\
              \ sends only filtered push notifications. "
        FilterRule:
          allOf:
          - $ref: '#/components/schemas/FilterRule'
          - description: The simple JSON object used to send a subset of a push notification
              to the requested member.
      required:
      - AllowNotifications
      type: object
    PutMessagingStreamingConfigurationsResponse:
      example:
        StreamingConfigurations: ""
      properties:
        StreamingConfigurations:
          allOf:
          - $ref: '#/components/schemas/StreamingConfigurationList'
          - description: The requested streaming configurations.
      type: object
    StreamingConfiguration:
      description: The configuration for connecting a messaging stream to Amazon Kinesis.
      properties:
        DataType:
          allOf:
          - $ref: '#/components/schemas/MessagingDataType'
          - description: The data type of the configuration.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: 'The ARN of the resource in the configuration. '
      required:
      - DataType
      - ResourceArn
      type: object
    RedactChannelMessageResponse:
      example:
        SubChannelId: ""
        ChannelArn: ""
        MessageId: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel containing the messages that you want
              to redact.
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          - description: The ID of the message being redacted.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: <p>The ID of the SubChannel in the response.</p> <note> <p>Only
              required when redacting messages in a SubChannel that the user belongs
              to.</p> </note>
      type: object
    SearchChannelsResponse:
      example:
        NextToken: ""
        Channels: ""
      properties:
        Channels:
          allOf:
          - $ref: '#/components/schemas/ChannelSummaryList'
          - description: A list of the channels in the request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned from previous API responses until the
              number of channels is reached.
      type: object
    SearchField:
      description: A <code>Field</code> of the channel that you want to search.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/SearchFieldKey'
          - description: "An <code>enum</code> value that indicates the key to search\
              \ the channel on. <code>MEMBERS</code> allows you to search channels\
              \ based on memberships. You can use it with the <code>EQUALS</code>\
              \ operator to get channels whose memberships are equal to the specified\
              \ values, and with the <code>INCLUDES</code> operator to get channels\
              \ whose memberships include the specified values."
        Values:
          allOf:
          - $ref: '#/components/schemas/SearchFieldValues'
          - description: "<p>The values that you want to search for, a list of strings.\
              \ The values must be <code>AppInstanceUserArns</code> specified as a\
              \ list of strings.</p> <note> <p>This operation isn't supported for\
              \ <code>AppInstanceUsers</code> with large number of memberships.</p>\
              \ </note>"
        Operator:
          allOf:
          - $ref: '#/components/schemas/SearchFieldOperator'
          - description: "The operator used to compare field values, currently <code>EQUALS</code>\
              \ or <code>INCLUDES</code>. Use the <code>EQUALS</code> operator to\
              \ find channels whose memberships equal the specified values. Use the\
              \ <code>INCLUDES</code> operator to find channels whose memberships\
              \ include the specified values."
      required:
      - Key
      - Operator
      - Values
      type: object
    SendChannelMessageResponse:
      example:
        Status:
          Value: ""
          Detail: ""
        SubChannelId: ""
        ChannelArn: ""
        MessageId: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          - description: The ID string assigned to each message.
        Status:
          $ref: '#/components/schemas/SendChannelMessageResponse_Status'
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: The ID of the SubChannel in the response.
      type: object
    PushNotificationTitle:
      format: password
      maxLength: 50
      minLength: 1
      pattern: .*
      type: string
    PushNotificationBody:
      format: password
      maxLength: 150
      minLength: 1
      pattern: "[\\s\\S]*"
      type: string
    PushNotificationType:
      enum:
      - DEFAULT
      - VOIP
      type: string
    MessageAttributeValue:
      description: A list of message attribute values.
      properties:
        StringValues:
          allOf:
          - $ref: '#/components/schemas/MessageAttributeStringValues'
          - description: The strings in a message attribute value.
      type: object
    Target:
      description: "The target of a message, a sender, a user, or a bot. Only the\
        \ target and the sender can view targeted messages. Only users who can see\
        \ targeted messages can take actions on them. However, administrators can\
        \ delete targeted messages that they can’t see."
      properties:
        MemberArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the target channel member.
      type: object
    TagKey:
      format: password
      maxLength: 128
      minLength: 1
      type: string
    UpdateChannelResponse:
      example:
        ChannelArn: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
      type: object
    UpdateChannelFlowResponse:
      example:
        ChannelFlowArn: ""
      properties:
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel flow.
      type: object
    UpdateChannelMessageResponse:
      example:
        Status:
          Value: ""
          Detail: ""
        SubChannelId: ""
        ChannelArn: ""
        MessageId: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          - description: The ID string of the message being updated.
        Status:
          $ref: '#/components/schemas/UpdateChannelMessageResponse_Status'
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: The ID of the SubChannel in the response.
      type: object
    UpdateChannelReadMarkerResponse:
      example:
        ChannelArn: ""
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
      type: object
    AllowNotifications:
      enum:
      - ALL
      - NONE
      - FILTERED
      type: string
    ChannelMembershipType:
      enum:
      - DEFAULT
      - HIDDEN
      type: string
    Timestamp:
      format: date-time
      type: string
    AppInstanceUserMembershipSummary:
      description: Summary of the membership details of an <code>AppInstanceUser</code>.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipType'
          - description: The type of <code>ChannelMembership</code>.
        ReadMarkerTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which an <code>AppInstanceUser</code> last marked
              a channel as read.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: The ID of the SubChannel that the <code>AppInstanceUser</code>
              is a member of.
      type: object
    AssociateChannelFlowRequest:
      example:
        ChannelFlowArn: ""
      properties:
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel flow.
      required:
      - ChannelFlowArn
      title: AssociateChannelFlowRequest
      type: object
    Identity:
      description: The details of a user or bot.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN in an Identity.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name in an Identity.
      type: object
    Members:
      items:
        $ref: '#/components/schemas/Identity'
      type: array
    BatchChannelMemberships:
      description: "The membership information, including member ARNs, the channel\
        \ ARN, and membership types."
      properties:
        InvitedBy:
          $ref: '#/components/schemas/BatchChannelMemberships_InvitedBy'
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipType'
          - description: The membership types set for the channel members.
        Members:
          allOf:
          - $ref: '#/components/schemas/Members'
          - description: The users successfully added to the request.
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel to which you're adding members.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: The ID of the SubChannel.
      type: object
    ErrorCode:
      enum:
      - BadRequest
      - Conflict
      - Forbidden
      - NotFound
      - PreconditionFailed
      - ResourceLimitExceeded
      - ServiceFailure
      - AccessDenied
      - ServiceUnavailable
      - Throttled
      - Throttling
      - Unauthorized
      - Unprocessable
      - VoiceConnectorGroupAssociationsExist
      - PhoneNumberAssociationsExist
      type: string
    String:
      type: string
    BatchCreateChannelMembershipError:
      description: "A list of failed member ARNs, error codes, and error messages."
      properties:
        MemberArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The <code>AppInstanceUserArn</code> of the member that the
              service couldn't add.
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: The error code.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message.
      type: object
    BatchCreateChannelMembershipErrors:
      items:
        $ref: '#/components/schemas/BatchCreateChannelMembershipError'
      type: array
    MemberArns:
      items:
        $ref: '#/components/schemas/ChimeArn'
      maxItems: 100
      minItems: 1
      type: array
    BatchCreateChannelMembershipRequest:
      example:
        SubChannelId: ""
        Type: ""
        MemberArns: ""
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipType'
          - description: "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>.\
              \ Default members are always returned as part of <code>ListChannelMemberships</code>.\
              \ Hidden members are only returned if the type filter in <code>ListChannelMemberships</code>\
              \ equals <code>HIDDEN</code>. Otherwise hidden members are not returned.\
              \ This is only supported by moderators."
        MemberArns:
          allOf:
          - $ref: '#/components/schemas/MemberArns'
          - description: The ARNs of the members you want to add to the channel. Only
              <code>AppInstanceUsers</code> and <code>AppInstanceBots</code> can be
              added as a channel member.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: <p>The ID of the SubChannel in the request. </p> <note> <p>Only
              required when creating membership in a SubChannel for a moderator in
              an elastic channel.</p> </note>
      required:
      - MemberArns
      title: BatchCreateChannelMembershipRequest
      type: object
    CallbackIdType:
      maxLength: 64
      minLength: 32
      type: string
    NonEmptyResourceName:
      format: password
      maxLength: 256
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    ChannelMode:
      enum:
      - UNRESTRICTED
      - RESTRICTED
      type: string
    ChannelPrivacy:
      enum:
      - PUBLIC
      - PRIVATE
      type: string
    ElasticChannelConfiguration:
      description: The attributes required to configure and create an elastic channel.
        An elastic channel can support a maximum of 1-million members.
      properties:
        MaximumSubChannels:
          allOf:
          - $ref: '#/components/schemas/MaximumSubChannels'
          - description: The maximum number of SubChannels that you want to allow
              in the elastic channel.
        TargetMembershipsPerSubChannel:
          allOf:
          - $ref: '#/components/schemas/TargetMembershipsPerSubChannel'
          - description: The maximum number of members allowed in a SubChannel.
        MinimumMembershipPercentage:
          allOf:
          - $ref: '#/components/schemas/MinimumMembershipPercentage'
          - description: The minimum allowed percentage of TargetMembershipsPerSubChannel
              users. Ceil of the calculated value is used in balancing members among
              SubChannels of the elastic channel.
      required:
      - MaximumSubChannels
      - MinimumMembershipPercentage
      - TargetMembershipsPerSubChannel
      type: object
    ExpirationSettings:
      description: Settings that control the interval after which a channel is deleted.
      properties:
        ExpirationDays:
          allOf:
          - $ref: '#/components/schemas/ExpirationDays'
          - description: The period in days after which the system automatically deletes
              a channel.
        ExpirationCriterion:
          allOf:
          - $ref: '#/components/schemas/ExpirationCriterion'
          - description: The conditions that must be met for a channel to expire.
      required:
      - ExpirationCriterion
      - ExpirationDays
      type: object
    Channel:
      description: The details of a channel.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          - description: The name of a channel.
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of a channel.
        Mode:
          allOf:
          - $ref: '#/components/schemas/ChannelMode'
          - description: The mode of the channel.
        Privacy:
          allOf:
          - $ref: '#/components/schemas/ChannelPrivacy'
          - description: The channel's privacy setting.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The channel's metadata.
        CreatedBy:
          $ref: '#/components/schemas/Channel_CreatedBy'
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the <code>AppInstanceUser</code> created
              the channel.
        LastMessageTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which a member sent the last message in the channel.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which a channel was last updated.
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel flow.
        ElasticChannelConfiguration:
          $ref: '#/components/schemas/Channel_ElasticChannelConfiguration'
        ExpirationSettings:
          $ref: '#/components/schemas/Channel_ExpirationSettings'
      type: object
    ChannelAssociatedWithFlowSummary:
      description: Summary of details of a channel associated with channel flow.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          - description: The name of the channel flow.
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
        Mode:
          allOf:
          - $ref: '#/components/schemas/ChannelMode'
          - description: The mode of the channel.
        Privacy:
          allOf:
          - $ref: '#/components/schemas/ChannelPrivacy'
          - description: The channel's privacy setting.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The channel's metadata.
      type: object
    ChannelAssociatedWithFlowSummaryList:
      items:
        $ref: '#/components/schemas/ChannelAssociatedWithFlowSummary'
      type: array
    ChannelBan:
      description: The details of a channel ban.
      properties:
        Member:
          $ref: '#/components/schemas/ChannelBan_Member'
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel from which a member is being banned.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the ban was created.
        CreatedBy:
          $ref: '#/components/schemas/ChannelBan_CreatedBy'
      type: object
    ChannelBanSummary:
      description: Summary of the details of a <code>ChannelBan</code>.
      properties:
        Member:
          $ref: '#/components/schemas/ChannelBanSummary_Member'
      type: object
    ChannelBanSummaryList:
      items:
        $ref: '#/components/schemas/ChannelBanSummary'
      type: array
    ProcessorList:
      items:
        $ref: '#/components/schemas/Processor'
      maxItems: 3
      minItems: 1
      type: array
    ChannelFlow:
      description: The details of a channel flow.
      properties:
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel flow.
        Processors:
          allOf:
          - $ref: '#/components/schemas/ProcessorList'
          - description: Information about the processor Lambda functions.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          - description: The name of the channel flow.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the channel flow was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which a channel flow was updated.
      type: object
    NonNullableBoolean:
      type: boolean
    ChannelMessageCallback:
      description: Stores information about a callback.
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          - description: The message ID.
        Content:
          allOf:
          - $ref: '#/components/schemas/NonEmptyContent'
          - description: "The message content. For Amazon Lex V2 bot responses, this\
              \ field holds a list of messages originating from the bot. For more\
              \ information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html\"\
              >Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime\
              \ SDK Messaging Developer Guide</i>."
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The message metadata.
        PushNotification:
          $ref: '#/components/schemas/ChannelFlowCallback_request_ChannelMessage_PushNotification'
        MessageAttributes:
          allOf:
          - $ref: '#/components/schemas/MessageAttributeMap'
          - description: "The attributes for the channel message. For Amazon Lex V2\
              \ bot responses, the attributes are mapped to specific fields from the\
              \ bot. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html\"\
              >Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime\
              \ SDK Messaging Developer Guide</i>."
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: The ID of the SubChannel.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: "The content type of the call-back message. For Amazon Lex\
              \ V2 bot responses, the content type is <code>application/amz-chime-lex-msgs</code>\
              \ for success responses and <code>application/amz-chime-lex-error</code>\
              \ for failure responses. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html\"\
              >Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime\
              \ SDK Messaging Developer Guide</i>."
      required:
      - MessageId
      type: object
    ChannelFlowCallbackRequest:
      example:
        CallbackId: ""
        DeleteResource: ""
        ChannelMessage:
          SubChannelId: ""
          MessageAttributes: ""
          ContentType: ""
          Content: ""
          Metadata: ""
          PushNotification:
            Type: ""
            Title: ""
            Body: ""
          MessageId: ""
      properties:
        CallbackId:
          allOf:
          - $ref: '#/components/schemas/CallbackIdType'
          - description: The identifier passed to the processor by the service when
              invoked. Use the identifier to call back the service.
        DeleteResource:
          allOf:
          - $ref: '#/components/schemas/NonNullableBoolean'
          - description: "When a processor determines that a message needs to be <code>DENIED</code>,\
              \ pass this parameter with a value of true."
        ChannelMessage:
          $ref: '#/components/schemas/ChannelFlowCallbackRequest_ChannelMessage'
      required:
      - CallbackId
      - ChannelMessage
      title: ChannelFlowCallbackRequest
      type: object
    ChannelFlowExecutionOrder:
      maximum: 3
      minimum: 1
      type: integer
    ChannelFlowSummary:
      description: Summary of details of a channel flow.
      properties:
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel flow.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          - description: The name of the channel flow.
        Processors:
          allOf:
          - $ref: '#/components/schemas/ProcessorList'
          - description: Information about the processor Lambda functions.
      type: object
    ChannelFlowSummaryList:
      items:
        $ref: '#/components/schemas/ChannelFlowSummary'
      type: array
    ChannelId:
      format: password
      maxLength: 64
      minLength: 1
      pattern: "[A-Za-z0-9]([A-Za-z0-9\\:\\-\\_\\.\\@]{0,62}[A-Za-z0-9])?"
      type: string
    ChannelMemberArns:
      items:
        $ref: '#/components/schemas/ChimeArn'
      maxItems: 10
      minItems: 1
      type: array
    ChannelMembership:
      description: The details of a channel member.
      properties:
        InvitedBy:
          $ref: '#/components/schemas/BatchChannelMemberships_InvitedBy'
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipType'
          - description: The membership type set for the channel member.
        Member:
          $ref: '#/components/schemas/ChannelMembership_Member'
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the member's channel.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the channel membership was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which a channel membership was last updated.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: The ID of the SubChannel that a user belongs to.
      type: object
    ChannelSummary:
      description: Summary of the details of a <code>Channel</code>.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          - description: The name of the channel.
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
        Mode:
          allOf:
          - $ref: '#/components/schemas/ChannelMode'
          - description: The mode of the channel.
        Privacy:
          allOf:
          - $ref: '#/components/schemas/ChannelPrivacy'
          - description: The privacy setting of the channel.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The metadata of the channel.
        LastMessageTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the last persistent message visible to
              the caller in a channel was sent.
      type: object
    ChannelMembershipForAppInstanceUserSummary:
      description: Summary of the channel membership details of an <code>AppInstanceUser</code>.
      properties:
        ChannelSummary:
          $ref: '#/components/schemas/ChannelMembershipForAppInstanceUserSummary_ChannelSummary'
        AppInstanceUserMembershipSummary:
          $ref: '#/components/schemas/ChannelMembershipForAppInstanceUserSummary_AppInstanceUserMembershipSummary'
      type: object
    ChannelMembershipForAppInstanceUserSummaryList:
      items:
        $ref: '#/components/schemas/ChannelMembershipForAppInstanceUserSummary'
      type: array
    ChannelMembershipPreferences:
      description: The channel membership preferences for an <code>AppInstanceUser</code>.
      properties:
        PushNotifications:
          $ref: '#/components/schemas/PutChannelMembershipPreferences_request_Preferences_PushNotifications'
      type: object
    ChannelMembershipSummary:
      description: Summary of the details of a <code>ChannelMembership</code>.
      properties:
        Member:
          $ref: '#/components/schemas/ChannelMembershipSummary_Member'
      type: object
    ChannelMembershipSummaryList:
      items:
        $ref: '#/components/schemas/ChannelMembershipSummary'
      type: array
    Content:
      format: password
      maxLength: 4096
      minLength: 0
      pattern: "[\\s\\S]*"
      type: string
    ChannelMessageType:
      enum:
      - STANDARD
      - CONTROL
      type: string
    ChannelMessagePersistenceType:
      enum:
      - PERSISTENT
      - NON_PERSISTENT
      type: string
    ChannelMessageStatusStructure:
      description: Stores information about a message status.
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageStatus'
          - description: The message status value.
        Detail:
          allOf:
          - $ref: '#/components/schemas/StatusDetail'
          - description: Contains more details about the message status.
      type: object
    TargetList:
      items:
        $ref: '#/components/schemas/Target'
      maxItems: 1
      minItems: 1
      type: array
    ChannelMessage:
      description: The details of a message in a channel.
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel.
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          - description: The ID of a message.
        Content:
          allOf:
          - $ref: '#/components/schemas/Content'
          - description: "The content of the channel message. For Amazon Lex V2 bot\
              \ responses, this field holds a list of messages originating from the\
              \ bot. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html\"\
              >Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime\
              \ SDK Messaging Developer Guide</i>."
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The message metadata.
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageType'
          - description: The message type.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the message was created.
        LastEditedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which a message was edited.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which a message was updated.
        Sender:
          $ref: '#/components/schemas/ChannelMessage_Sender'
        Redacted:
          allOf:
          - $ref: '#/components/schemas/NonNullableBoolean'
          - description: Hides the content of a message.
        Persistence:
          allOf:
          - $ref: '#/components/schemas/ChannelMessagePersistenceType'
          - description: The persistence setting for a channel message.
        Status:
          $ref: '#/components/schemas/SendChannelMessageResponse_Status'
        MessageAttributes:
          allOf:
          - $ref: '#/components/schemas/MessageAttributeMap'
          - description: "The attributes for the channel message. For Amazon Lex V2\
              \ bot responses, the attributes are mapped to specific fields from the\
              \ bot. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html\"\
              >Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime\
              \ SDK Messaging Developer Guide</i>."
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: The ID of the SubChannel.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: "The content type of the channel message. For Amazon Lex\
              \ V2 bot responses, the content type is <code>application/amz-chime-lex-msgs</code>\
              \ for success responses and <code>application/amz-chime-lex-error</code>\
              \ for failure responses. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html\"\
              >Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime\
              \ SDK Messaging Developer Guide</i>."
        Target:
          allOf:
          - $ref: '#/components/schemas/TargetList'
          - description: "The target of a message, a sender, a user, or a bot. Only\
              \ the target and the sender can view targeted messages. Only users who\
              \ can see targeted messages can take actions on them. However, administrators\
              \ can delete targeted messages that they can’t see."
      type: object
    ChannelMessageStatus:
      enum:
      - SENT
      - PENDING
      - FAILED
      - DENIED
      type: string
    StatusDetail:
      maxLength: 256
      minLength: 0
      pattern: "[\\s\\S]*"
      type: string
    ChannelMessageSummary:
      description: Summary of the messages in a <code>Channel</code>.
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          - description: The ID of the message.
        Content:
          allOf:
          - $ref: '#/components/schemas/Content'
          - description: "The content of the channel message. For Amazon Lex V2 bot\
              \ responses, this field holds a list of messages originating from the\
              \ bot. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html\"\
              >Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime\
              \ SDK Messaging Developer Guide</i>."
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The metadata of the message.
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageType'
          - description: The type of message.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the message summary was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which a message was last updated.
        LastEditedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which a message was last edited.
        Sender:
          $ref: '#/components/schemas/ChannelMessage_Sender'
        Redacted:
          allOf:
          - $ref: '#/components/schemas/NonNullableBoolean'
          - description: Indicates whether a message was redacted.
        Status:
          $ref: '#/components/schemas/ChannelMessageSummary_Status'
        MessageAttributes:
          allOf:
          - $ref: '#/components/schemas/MessageAttributeMap'
          - description: "The attributes for the channel message. For Amazon Lex V2\
              \ bot responses, the attributes are mapped to specific fields from the\
              \ bot. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html\"\
              >Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime\
              \ SDK Messaging Developer Guide</i>."
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: "The content type of the channel message listed in the summary.\
              \ For Amazon Lex V2 bot responses, the content type is <code>application/amz-chime-lex-msgs</code>\
              \ for success responses and <code>application/amz-chime-lex-error</code>\
              \ for failure responses. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html\"\
              >Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime\
              \ SDK Messaging Developer Guide</i>."
        Target:
          allOf:
          - $ref: '#/components/schemas/TargetList'
          - description: "The target of a message, a sender, a user, or a bot. Only\
              \ the target and the sender can view targeted messages. Only users who\
              \ can see targeted messages can take actions on them. However, administrators\
              \ can delete targeted messages that they can’t see."
      type: object
    ChannelMessageSummaryList:
      items:
        $ref: '#/components/schemas/ChannelMessageSummary'
      type: array
    ChannelModeratedByAppInstanceUserSummary:
      description: Summary of the details of a moderated channel.
      properties:
        ChannelSummary:
          $ref: '#/components/schemas/ChannelModeratedByAppInstanceUserSummary_ChannelSummary'
      type: object
    ChannelModeratedByAppInstanceUserSummaryList:
      items:
        $ref: '#/components/schemas/ChannelModeratedByAppInstanceUserSummary'
      type: array
    ChannelModerator:
      description: The details of a channel moderator.
      properties:
        Moderator:
          $ref: '#/components/schemas/ChannelModerator_Moderator'
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the moderator's channel.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the moderator was created.
        CreatedBy:
          $ref: '#/components/schemas/ChannelModerator_CreatedBy'
      type: object
    ChannelModeratorArns:
      items:
        $ref: '#/components/schemas/ChimeArn'
      maxItems: 10
      minItems: 1
      type: array
    ChannelModeratorSummary:
      description: Summary of the details of a <code>ChannelModerator</code>.
      properties:
        Moderator:
          $ref: '#/components/schemas/ChannelModeratorSummary_Moderator'
      type: object
    ChannelModeratorSummaryList:
      items:
        $ref: '#/components/schemas/ChannelModeratorSummary'
      type: array
    ChannelSummaryList:
      items:
        $ref: '#/components/schemas/ChannelSummary'
      type: array
    ClientRequestToken:
      format: password
      maxLength: 64
      minLength: 2
      pattern: "[-_a-zA-Z0-9]*"
      type: string
    CreateChannelBanRequest:
      example:
        MemberArn: ""
      properties:
        MemberArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The <code>AppInstanceUserArn</code> of the member being banned.
      required:
      - MemberArn
      title: CreateChannelBanRequest
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      minItems: 1
      type: array
    CreateChannelFlowRequest:
      example:
        ClientRequestToken: ""
        AppInstanceArn: ""
        Processors: ""
        Tags: ""
        Name: ""
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel flow request.
        Processors:
          allOf:
          - $ref: '#/components/schemas/ProcessorList'
          - description: Information about the processor Lambda functions.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          - description: The name of the channel flow.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags for the creation request.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The client token for the request. An Idempotency token.
      required:
      - AppInstanceArn
      - ClientRequestToken
      - Name
      - Processors
      title: CreateChannelFlowRequest
      type: object
    CreateChannelMembershipRequest:
      example:
        SubChannelId: ""
        MemberArn: ""
        Type: ""
      properties:
        MemberArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The <code>AppInstanceUserArn</code> of the member you want
              to add to the channel.
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipType'
          - description: "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>.\
              \ Default members are always returned as part of <code>ListChannelMemberships</code>.\
              \ Hidden members are only returned if the type filter in <code>ListChannelMemberships</code>\
              \ equals <code>HIDDEN</code>. Otherwise hidden members are not returned.\
              \ This is only supported by moderators."
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only
              required when creating membership in a SubChannel for a moderator in
              an elastic channel.</p> </note>
      required:
      - MemberArn
      - Type
      title: CreateChannelMembershipRequest
      type: object
    CreateChannelModeratorRequest:
      example:
        ChannelModeratorArn: ""
      properties:
        ChannelModeratorArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The <code>AppInstanceUserArn</code> of the moderator.
      required:
      - ChannelModeratorArn
      title: CreateChannelModeratorRequest
      type: object
    CreateChannelRequest:
      example:
        Privacy: ""
        ClientRequestToken: ""
        ElasticChannelConfiguration:
          MinimumMembershipPercentage: ""
          MaximumSubChannels: ""
          TargetMembershipsPerSubChannel: ""
        ModeratorArns: ""
        ExpirationSettings:
          ExpirationCriterion: ""
          ExpirationDays: ""
        Mode: ""
        Metadata: ""
        MemberArns: ""
        ChannelId: ""
        AppInstanceArn: ""
        Tags: ""
        Name: ""
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the channel request.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          - description: The name of the channel.
        Mode:
          allOf:
          - $ref: '#/components/schemas/ChannelMode'
          - description: "The channel mode: <code>UNRESTRICTED</code> or <code>RESTRICTED</code>.\
              \ Administrators, moderators, and channel members can add themselves\
              \ and other members to unrestricted channels. Only administrators and\
              \ moderators can add members to restricted channels."
        Privacy:
          allOf:
          - $ref: '#/components/schemas/ChannelPrivacy'
          - description: "The channel's privacy level: <code>PUBLIC</code> or <code>PRIVATE</code>.\
              \ Private channels aren't discoverable by users outside the channel.\
              \ Public channels are discoverable by anyone in the <code>AppInstance</code>."
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The metadata of the creation request. Limited to 1KB and
              UTF-8.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The client token for the request. An <code>Idempotency</code>
              token.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags for the creation request.
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/ChannelId'
          - description: The ID of the channel in the request.
        MemberArns:
          allOf:
          - $ref: '#/components/schemas/ChannelMemberArns'
          - description: The ARNs of the channel members in the request.
        ModeratorArns:
          allOf:
          - $ref: '#/components/schemas/ChannelModeratorArns'
          - description: The ARNs of the channel moderators in the request.
        ElasticChannelConfiguration:
          $ref: '#/components/schemas/CreateChannelRequest_ElasticChannelConfiguration'
        ExpirationSettings:
          $ref: '#/components/schemas/CreateChannelRequest_ExpirationSettings'
      required:
      - AppInstanceArn
      - ClientRequestToken
      - Name
      title: CreateChannelRequest
      type: object
    DeleteChannelBanRequest:
      properties: {}
      title: DeleteChannelBanRequest
      type: object
    DeleteChannelFlowRequest:
      properties: {}
      title: DeleteChannelFlowRequest
      type: object
    DeleteChannelMembershipRequest:
      properties: {}
      title: DeleteChannelMembershipRequest
      type: object
    DeleteChannelMessageRequest:
      properties: {}
      title: DeleteChannelMessageRequest
      type: object
    DeleteChannelModeratorRequest:
      properties: {}
      title: DeleteChannelModeratorRequest
      type: object
    DeleteChannelRequest:
      properties: {}
      title: DeleteChannelRequest
      type: object
    DeleteMessagingStreamingConfigurationsRequest:
      properties: {}
      title: DeleteMessagingStreamingConfigurationsRequest
      type: object
    DescribeChannelBanRequest:
      properties: {}
      title: DescribeChannelBanRequest
      type: object
    DescribeChannelFlowRequest:
      properties: {}
      title: DescribeChannelFlowRequest
      type: object
    DescribeChannelMembershipForAppInstanceUserRequest:
      properties: {}
      title: DescribeChannelMembershipForAppInstanceUserRequest
      type: object
    DescribeChannelMembershipRequest:
      properties: {}
      title: DescribeChannelMembershipRequest
      type: object
    DescribeChannelModeratedByAppInstanceUserRequest:
      properties: {}
      title: DescribeChannelModeratedByAppInstanceUserRequest
      type: object
    DescribeChannelModeratorRequest:
      properties: {}
      title: DescribeChannelModeratorRequest
      type: object
    DescribeChannelRequest:
      properties: {}
      title: DescribeChannelRequest
      type: object
    DisassociateChannelFlowRequest:
      properties: {}
      title: DisassociateChannelFlowRequest
      type: object
    FallbackAction:
      enum:
      - CONTINUE
      - ABORT
      type: string
    FilterRule:
      format: password
      minLength: 1
      pattern: "[\\s\\S]*"
      type: string
    GetChannelMembershipPreferencesRequest:
      properties: {}
      title: GetChannelMembershipPreferencesRequest
      type: object
    GetChannelMessageRequest:
      properties: {}
      title: GetChannelMessageRequest
      type: object
    GetChannelMessageStatusRequest:
      properties: {}
      title: GetChannelMessageStatusRequest
      type: object
    GetMessagingSessionEndpointRequest:
      properties: {}
      title: GetMessagingSessionEndpointRequest
      type: object
    MessagingSessionEndpoint:
      description: The websocket endpoint used to connect to Amazon Chime SDK messaging.
      properties:
        Url:
          allOf:
          - $ref: '#/components/schemas/UrlType'
          - description: The endpoint to which you establish a websocket connection.
      type: object
    GetMessagingStreamingConfigurationsRequest:
      properties: {}
      title: GetMessagingStreamingConfigurationsRequest
      type: object
    StreamingConfigurationList:
      items:
        $ref: '#/components/schemas/StreamingConfiguration'
      maxItems: 2
      minItems: 1
      type: array
    ResourceName:
      format: password
      maxLength: 256
      minLength: 0
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    InvocationType:
      enum:
      - ASYNC
      type: string
    LambdaFunctionArn:
      maxLength: 2048
      minLength: 15
      pattern: "arn:aws:lambda:[a-z]{2}-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9\\\
        -_\\.]+(:(\\$LATEST|[a-zA-Z0-9\\-_]+))?"
      type: string
    LambdaConfiguration:
      description: Stores metadata about a Lambda processor.
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/LambdaFunctionArn'
          - description: The ARN of the Lambda message processing function.
        InvocationType:
          allOf:
          - $ref: '#/components/schemas/InvocationType'
          - description: Controls how the Lambda function is invoked.
      required:
      - InvocationType
      - ResourceArn
      type: object
    MaxResults:
      maximum: 50
      minimum: 1
      type: integer
    NextToken:
      format: password
      maxLength: 2048
      minLength: 0
      pattern: .*
      type: string
    ListChannelBansRequest:
      properties: {}
      title: ListChannelBansRequest
      type: object
    ListChannelFlowsRequest:
      properties: {}
      title: ListChannelFlowsRequest
      type: object
    ListChannelMembershipsForAppInstanceUserRequest:
      properties: {}
      title: ListChannelMembershipsForAppInstanceUserRequest
      type: object
    ListChannelMembershipsRequest:
      properties: {}
      title: ListChannelMembershipsRequest
      type: object
    SortOrder:
      enum:
      - ASCENDING
      - DESCENDING
      type: string
    ListChannelMessagesRequest:
      properties: {}
      title: ListChannelMessagesRequest
      type: object
    ListChannelModeratorsRequest:
      properties: {}
      title: ListChannelModeratorsRequest
      type: object
    ListChannelsAssociatedWithChannelFlowRequest:
      properties: {}
      title: ListChannelsAssociatedWithChannelFlowRequest
      type: object
    ListChannelsModeratedByAppInstanceUserRequest:
      properties: {}
      title: ListChannelsModeratedByAppInstanceUserRequest
      type: object
    ListChannelsRequest:
      properties: {}
      title: ListChannelsRequest
      type: object
    ListSubChannelsRequest:
      properties: {}
      title: ListSubChannelsRequest
      type: object
    SubChannelSummaryList:
      items:
        $ref: '#/components/schemas/SubChannelSummary'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    MembershipCount:
      type: integer
    MessageAttributeName:
      format: password
      maxLength: 64
      minLength: 1
      pattern: "[\\s\\S]*"
      type: string
    MessageAttributeStringValue:
      format: password
      maxLength: 512
      minLength: 1
      pattern: "[\\s\\S]*"
      type: string
    MessageAttributeStringValues:
      items:
        $ref: '#/components/schemas/MessageAttributeStringValue'
      type: array
    MessagingDataType:
      enum:
      - Channel
      - ChannelMessage
      type: string
    UrlType:
      maxLength: 4096
      type: string
    ProcessorConfiguration:
      description: A processor's metadata.
      properties:
        Lambda:
          $ref: '#/components/schemas/ProcessorConfiguration_Lambda'
      required:
      - Lambda
      type: object
    PutChannelExpirationSettingsRequest:
      example:
        ExpirationSettings:
          ExpirationCriterion: ""
          ExpirationDays: ""
      properties:
        ExpirationSettings:
          $ref: '#/components/schemas/PutChannelExpirationSettingsResponse_ExpirationSettings'
      title: PutChannelExpirationSettingsRequest
      type: object
    PutChannelMembershipPreferencesRequest:
      example:
        Preferences:
          PushNotifications:
            AllowNotifications: ""
            FilterRule: ""
      properties:
        Preferences:
          $ref: '#/components/schemas/PutChannelMembershipPreferencesRequest_Preferences'
      required:
      - Preferences
      title: PutChannelMembershipPreferencesRequest
      type: object
    PutMessagingStreamingConfigurationsRequest:
      example:
        StreamingConfigurations: ""
      properties:
        StreamingConfigurations:
          allOf:
          - $ref: '#/components/schemas/StreamingConfigurationList'
          - description: The streaming configurations.
      required:
      - StreamingConfigurations
      title: PutMessagingStreamingConfigurationsRequest
      type: object
    RedactChannelMessageRequest:
      example:
        SubChannelId: ""
      properties:
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: The ID of the SubChannel in the request.
      title: RedactChannelMessageRequest
      type: object
    SearchFields:
      items:
        $ref: '#/components/schemas/SearchField'
      maxItems: 20
      minItems: 1
      type: array
    SearchChannelsRequest:
      example:
        Fields: ""
      properties:
        Fields:
          allOf:
          - $ref: '#/components/schemas/SearchFields'
          - description: A list of the <code>Field</code> objects in the channel being
              searched.
      required:
      - Fields
      title: SearchChannelsRequest
      type: object
    SearchFieldKey:
      enum:
      - MEMBERS
      type: string
    SearchFieldValues:
      items:
        $ref: '#/components/schemas/SearchFieldValue'
      maxItems: 20
      minItems: 1
      type: array
    SearchFieldOperator:
      enum:
      - EQUALS
      - INCLUDES
      type: string
    SearchFieldValue:
      maxLength: 512
      minLength: 1
      pattern: "[\\s\\S]*"
      type: string
    SendChannelMessageRequest:
      example:
        Persistence: ""
        SubChannelId: ""
        ClientRequestToken: ""
        MessageAttributes: ""
        Type: ""
        Target: ""
        ContentType: ""
        Content: ""
        Metadata: ""
        PushNotification:
          Type: ""
          Title: ""
          Body: ""
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/NonEmptyContent'
          - description: The content of the channel message.
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageType'
          - description: "<p>The type of message, <code>STANDARD</code> or <code>CONTROL</code>.</p>\
              \ <p> <code>STANDARD</code> messages can be up to 4KB in size and contain\
              \ metadata. Metadata is arbitrary, and you can use it in a variety of\
              \ ways, such as containing a link to an attachment.</p> <p> <code>CONTROL</code>\
              \ messages are limited to 30 bytes and do not contain metadata.</p>"
        Persistence:
          allOf:
          - $ref: '#/components/schemas/ChannelMessagePersistenceType'
          - description: Boolean that controls whether the message is persisted on
              the back end. Required.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The optional metadata for each message.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The <code>Idempotency</code> token for each client request.
        PushNotification:
          $ref: '#/components/schemas/ChannelFlowCallback_request_ChannelMessage_PushNotification'
        MessageAttributes:
          allOf:
          - $ref: '#/components/schemas/MessageAttributeMap'
          - description: "The attributes for the message, used for message filtering\
              \ along with a <code>FilterRule</code> defined in the <code>PushNotificationPreferences</code>."
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: The ID of the SubChannel in the request.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: The content type of the channel message.
        Target:
          allOf:
          - $ref: '#/components/schemas/TargetList'
          - description: "The target of a message. Must be a member of the channel,\
              \ such as another user, a bot, or the sender. Only the target and the\
              \ sender can view targeted messages. Only users who can see targeted\
              \ messages can take actions on them. However, administrators can delete\
              \ targeted messages that they can’t see. "
      required:
      - ClientRequestToken
      - Content
      - Persistence
      - Type
      title: SendChannelMessageRequest
      type: object
    SubChannelSummary:
      description: Summary of the sub-channels associated with the elastic channel.
      properties:
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: The unique ID of a SubChannel.
        MembershipCount:
          allOf:
          - $ref: '#/components/schemas/MembershipCount'
          - description: The number of members in a SubChannel.
      type: object
    TagValue:
      format: password
      maxLength: 256
      minLength: 1
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    TagResourceRequest:
      example:
        ResourceARN: ""
        Tags: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The resource ARN.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tag key-value pairs.
      required:
      - ResourceARN
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      example:
        ResourceARN: ""
        TagKeys: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The resource ARN.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The tag keys.
      required:
      - ResourceARN
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateChannelFlowRequest:
      example:
        Processors: ""
        Name: ""
      properties:
        Processors:
          allOf:
          - $ref: '#/components/schemas/ProcessorList'
          - description: 'Information about the processor Lambda functions '
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          - description: The name of the channel flow.
      required:
      - Name
      - Processors
      title: UpdateChannelFlowRequest
      type: object
    UpdateChannelMessageRequest:
      example:
        SubChannelId: ""
        ContentType: ""
        Content: ""
        Metadata: ""
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/NonEmptyContent'
          - description: 'The content of the channel message. '
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The metadata of the message being updated.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only
              required when updating messages in a SubChannel that the user belongs
              to.</p> </note>
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: The content type of the channel message.
      required:
      - Content
      title: UpdateChannelMessageRequest
      type: object
    UpdateChannelReadMarkerRequest:
      properties: {}
      title: UpdateChannelReadMarkerRequest
      type: object
    UpdateChannelRequest:
      example:
        Mode: ""
        Metadata: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          - description: The name of the channel.
        Mode:
          allOf:
          - $ref: '#/components/schemas/ChannelMode'
          - description: The mode of the update request.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The metadata for the update request.
      title: UpdateChannelRequest
      type: object
    AssociateChannelFlow_request:
      properties:
        ChannelFlowArn:
          description: The ARN of the channel flow.
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
      required:
      - ChannelFlowArn
      type: object
    BatchCreateChannelMembership_request:
      properties:
        Type:
          description: "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>.\
            \ Default members are always returned as part of <code>ListChannelMemberships</code>.\
            \ Hidden members are only returned if the type filter in <code>ListChannelMemberships</code>\
            \ equals <code>HIDDEN</code>. Otherwise hidden members are not returned.\
            \ This is only supported by moderators."
          enum:
          - DEFAULT
          - HIDDEN
          type: string
        MemberArns:
          description: The ARNs of the members you want to add to the channel. Only
            <code>AppInstanceUsers</code> and <code>AppInstanceBots</code> can be
            added as a channel member.
          items:
            $ref: '#/components/schemas/ChimeArn'
          maxItems: 100
          minItems: 1
          type: array
        SubChannelId:
          description: <p>The ID of the SubChannel in the request. </p> <note> <p>Only
            required when creating membership in a SubChannel for a moderator in an
            elastic channel.</p> </note>
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
      required:
      - MemberArns
      type: object
    ChannelFlowCallback_request_ChannelMessage_PushNotification:
      allOf:
      - $ref: '#/components/schemas/PushNotificationConfiguration'
      - description: The push notification configuration of the message.
      example:
        Type: ""
        Title: ""
        Body: ""
    ChannelFlowCallback_request_ChannelMessage:
      description: Stores information about a callback.
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          - description: The message ID.
        Content:
          allOf:
          - $ref: '#/components/schemas/NonEmptyContent'
          - description: "The message content. For Amazon Lex V2 bot responses, this\
              \ field holds a list of messages originating from the bot. For more\
              \ information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html\"\
              >Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime\
              \ SDK Messaging Developer Guide</i>."
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The message metadata.
        PushNotification:
          $ref: '#/components/schemas/ChannelFlowCallback_request_ChannelMessage_PushNotification'
        MessageAttributes:
          allOf:
          - $ref: '#/components/schemas/MessageAttributeMap'
          - description: "The attributes for the channel message. For Amazon Lex V2\
              \ bot responses, the attributes are mapped to specific fields from the\
              \ bot. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html\"\
              >Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime\
              \ SDK Messaging Developer Guide</i>."
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          - description: The ID of the SubChannel.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: "The content type of the call-back message. For Amazon Lex\
              \ V2 bot responses, the content type is <code>application/amz-chime-lex-msgs</code>\
              \ for success responses and <code>application/amz-chime-lex-error</code>\
              \ for failure responses. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html\"\
              >Processing responses from an AppInstanceBot</a> in the <i>Amazon Chime\
              \ SDK Messaging Developer Guide</i>."
      type: object
    ChannelFlowCallback_request:
      properties:
        CallbackId:
          description: The identifier passed to the processor by the service when
            invoked. Use the identifier to call back the service.
          maxLength: 64
          minLength: 32
          type: string
        DeleteResource:
          description: "When a processor determines that a message needs to be <code>DENIED</code>,\
            \ pass this parameter with a value of true."
          type: boolean
        ChannelMessage:
          $ref: '#/components/schemas/ChannelFlowCallback_request_ChannelMessage'
      required:
      - CallbackId
      - ChannelMessage
      type: object
    CreateChannel_request_ElasticChannelConfiguration:
      description: The attributes required to configure and create an elastic channel.
        An elastic channel can support a maximum of 1-million members.
      properties:
        MaximumSubChannels:
          allOf:
          - $ref: '#/components/schemas/MaximumSubChannels'
          - description: The maximum number of SubChannels that you want to allow
              in the elastic channel.
        TargetMembershipsPerSubChannel:
          allOf:
          - $ref: '#/components/schemas/TargetMembershipsPerSubChannel'
          - description: The maximum number of members allowed in a SubChannel.
        MinimumMembershipPercentage:
          allOf:
          - $ref: '#/components/schemas/MinimumMembershipPercentage'
          - description: The minimum allowed percentage of TargetMembershipsPerSubChannel
              users. Ceil of the calculated value is used in balancing members among
              SubChannels of the elastic channel.
      type: object
    CreateChannel_request_ExpirationSettings:
      description: Settings that control the interval after which a channel is deleted.
      properties:
        ExpirationDays:
          allOf:
          - $ref: '#/components/schemas/ExpirationDays'
          - description: The period in days after which the system automatically deletes
              a channel.
        ExpirationCriterion:
          allOf:
          - $ref: '#/components/schemas/ExpirationCriterion'
          - description: The conditions that must be met for a channel to expire.
      type: object
    CreateChannel_request:
      properties:
        AppInstanceArn:
          description: The ARN of the channel request.
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        Name:
          description: The name of the channel.
          format: password
          maxLength: 256
          minLength: 1
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
            uE000-\\uFFFD\\u10000-\\u10FFFF]*"
          type: string
        Mode:
          description: "The channel mode: <code>UNRESTRICTED</code> or <code>RESTRICTED</code>.\
            \ Administrators, moderators, and channel members can add themselves and\
            \ other members to unrestricted channels. Only administrators and moderators\
            \ can add members to restricted channels."
          enum:
          - UNRESTRICTED
          - RESTRICTED
          type: string
        Privacy:
          description: "The channel's privacy level: <code>PUBLIC</code> or <code>PRIVATE</code>.\
            \ Private channels aren't discoverable by users outside the channel. Public\
            \ channels are discoverable by anyone in the <code>AppInstance</code>."
          enum:
          - PUBLIC
          - PRIVATE
          type: string
        Metadata:
          description: The metadata of the creation request. Limited to 1KB and UTF-8.
          format: password
          maxLength: 1024
          minLength: 0
          pattern: .*
          type: string
        ClientRequestToken:
          description: The client token for the request. An <code>Idempotency</code>
            token.
          format: password
          maxLength: 64
          minLength: 2
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        Tags:
          description: The tags for the creation request.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 1
          type: array
        ChannelId:
          description: The ID of the channel in the request.
          format: password
          maxLength: 64
          minLength: 1
          pattern: "[A-Za-z0-9]([A-Za-z0-9\\:\\-\\_\\.\\@]{0,62}[A-Za-z0-9])?"
          type: string
        MemberArns:
          description: The ARNs of the channel members in the request.
          items:
            $ref: '#/components/schemas/ChimeArn'
          maxItems: 10
          minItems: 1
          type: array
        ModeratorArns:
          description: The ARNs of the channel moderators in the request.
          items:
            $ref: '#/components/schemas/ChimeArn'
          maxItems: 10
          minItems: 1
          type: array
        ElasticChannelConfiguration:
          $ref: '#/components/schemas/CreateChannel_request_ElasticChannelConfiguration'
        ExpirationSettings:
          $ref: '#/components/schemas/CreateChannel_request_ExpirationSettings'
      required:
      - AppInstanceArn
      - ClientRequestToken
      - Name
      type: object
    CreateChannelBan_request:
      properties:
        MemberArn:
          description: The <code>AppInstanceUserArn</code> of the member being banned.
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
      required:
      - MemberArn
      type: object
    CreateChannelFlow_request:
      properties:
        AppInstanceArn:
          description: The ARN of the channel flow request.
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        Processors:
          description: Information about the processor Lambda functions.
          items:
            $ref: '#/components/schemas/Processor'
          maxItems: 3
          minItems: 1
          type: array
        Name:
          description: The name of the channel flow.
          format: password
          maxLength: 256
          minLength: 1
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
            uE000-\\uFFFD\\u10000-\\u10FFFF]*"
          type: string
        Tags:
          description: The tags for the creation request.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 1
          type: array
        ClientRequestToken:
          description: The client token for the request. An Idempotency token.
          format: password
          maxLength: 64
          minLength: 2
          pattern: "[-_a-zA-Z0-9]*"
          type: string
      required:
      - AppInstanceArn
      - ClientRequestToken
      - Name
      - Processors
      type: object
    CreateChannelMembership_request:
      properties:
        MemberArn:
          description: The <code>AppInstanceUserArn</code> of the member you want
            to add to the channel.
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        Type:
          description: "The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>.\
            \ Default members are always returned as part of <code>ListChannelMemberships</code>.\
            \ Hidden members are only returned if the type filter in <code>ListChannelMemberships</code>\
            \ equals <code>HIDDEN</code>. Otherwise hidden members are not returned.\
            \ This is only supported by moderators."
          enum:
          - DEFAULT
          - HIDDEN
          type: string
        SubChannelId:
          description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only
            required when creating membership in a SubChannel for a moderator in an
            elastic channel.</p> </note>
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
      required:
      - MemberArn
      - Type
      type: object
    CreateChannelModerator_request:
      properties:
        ChannelModeratorArn:
          description: The <code>AppInstanceUserArn</code> of the moderator.
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
      required:
      - ChannelModeratorArn
      type: object
    UpdateChannel_request:
      properties:
        Name:
          description: The name of the channel.
          format: password
          maxLength: 256
          minLength: 1
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
            uE000-\\uFFFD\\u10000-\\u10FFFF]*"
          type: string
        Mode:
          description: The mode of the update request.
          enum:
          - UNRESTRICTED
          - RESTRICTED
          type: string
        Metadata:
          description: The metadata for the update request.
          format: password
          maxLength: 1024
          minLength: 0
          pattern: .*
          type: string
      type: object
    UpdateChannelFlow_request:
      properties:
        Processors:
          description: 'Information about the processor Lambda functions '
          items:
            $ref: '#/components/schemas/Processor'
          maxItems: 3
          minItems: 1
          type: array
        Name:
          description: The name of the channel flow.
          format: password
          maxLength: 256
          minLength: 1
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
            uE000-\\uFFFD\\u10000-\\u10FFFF]*"
          type: string
      required:
      - Name
      - Processors
      type: object
    UpdateChannelMessage_request:
      properties:
        Content:
          description: 'The content of the channel message. '
          format: password
          minLength: 1
          pattern: "[\\s\\S]*"
          type: string
        Metadata:
          description: The metadata of the message being updated.
          format: password
          maxLength: 1024
          minLength: 0
          pattern: .*
          type: string
        SubChannelId:
          description: <p>The ID of the SubChannel in the request.</p> <note> <p>Only
            required when updating messages in a SubChannel that the user belongs
            to.</p> </note>
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        ContentType:
          description: The content type of the channel message.
          format: password
          maxLength: 45
          minLength: 0
          pattern: "[\\s\\S]*"
          type: string
      required:
      - Content
      type: object
    PutMessagingStreamingConfigurations_request:
      properties:
        StreamingConfigurations:
          description: The streaming configurations.
          items:
            $ref: '#/components/schemas/StreamingConfiguration'
          maxItems: 2
          minItems: 1
          type: array
      required:
      - StreamingConfigurations
      type: object
    PutChannelMembershipPreferences_request_Preferences_PushNotifications:
      allOf:
      - $ref: '#/components/schemas/PushNotificationPreferences'
      - description: The push notification configuration of a message.
      example:
        AllowNotifications: ""
        FilterRule: ""
    PutChannelMembershipPreferences_request_Preferences:
      description: The channel membership preferences for an <code>AppInstanceUser</code>.
      properties:
        PushNotifications:
          $ref: '#/components/schemas/PutChannelMembershipPreferences_request_Preferences_PushNotifications'
      type: object
    PutChannelMembershipPreferences_request:
      properties:
        Preferences:
          $ref: '#/components/schemas/PutChannelMembershipPreferences_request_Preferences'
      required:
      - Preferences
      type: object
    SendChannelMessage_request_PushNotification:
      description: The push notification configuration of the message.
      properties:
        Title:
          allOf:
          - $ref: '#/components/schemas/PushNotificationTitle'
          - description: The title of the push notification.
        Body:
          allOf:
          - $ref: '#/components/schemas/PushNotificationBody'
          - description: The body of the push notification.
        Type:
          allOf:
          - $ref: '#/components/schemas/PushNotificationType'
          - description: "Enum value that indicates the type of the push notification\
              \ for a message. <code>DEFAULT</code>: Normal mobile push notification.\
              \ <code>VOIP</code>: VOIP mobile push notification."
      type: object
    SendChannelMessage_request:
      properties:
        Content:
          description: The content of the channel message.
          format: password
          minLength: 1
          pattern: "[\\s\\S]*"
          type: string
        Type:
          description: "<p>The type of message, <code>STANDARD</code> or <code>CONTROL</code>.</p>\
            \ <p> <code>STANDARD</code> messages can be up to 4KB in size and contain\
            \ metadata. Metadata is arbitrary, and you can use it in a variety of\
            \ ways, such as containing a link to an attachment.</p> <p> <code>CONTROL</code>\
            \ messages are limited to 30 bytes and do not contain metadata.</p>"
          enum:
          - STANDARD
          - CONTROL
          type: string
        Persistence:
          description: Boolean that controls whether the message is persisted on the
            back end. Required.
          enum:
          - PERSISTENT
          - NON_PERSISTENT
          type: string
        Metadata:
          description: The optional metadata for each message.
          format: password
          maxLength: 1024
          minLength: 0
          pattern: .*
          type: string
        ClientRequestToken:
          description: The <code>Idempotency</code> token for each client request.
          format: password
          maxLength: 64
          minLength: 2
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        PushNotification:
          $ref: '#/components/schemas/SendChannelMessage_request_PushNotification'
        MessageAttributes:
          additionalProperties:
            $ref: '#/components/schemas/MessageAttributeValue'
          description: "The attributes for the message, used for message filtering\
            \ along with a <code>FilterRule</code> defined in the <code>PushNotificationPreferences</code>."
          type: object
        SubChannelId:
          description: The ID of the SubChannel in the request.
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        ContentType:
          description: The content type of the channel message.
          format: password
          maxLength: 45
          minLength: 0
          pattern: "[\\s\\S]*"
          type: string
        Target:
          description: "The target of a message. Must be a member of the channel,\
            \ such as another user, a bot, or the sender. Only the target and the\
            \ sender can view targeted messages. Only users who can see targeted messages\
            \ can take actions on them. However, administrators can delete targeted\
            \ messages that they can’t see. "
          items:
            $ref: '#/components/schemas/Target'
          maxItems: 1
          minItems: 1
          type: array
      required:
      - ClientRequestToken
      - Content
      - Persistence
      - Type
      type: object
    PutChannelExpirationSettings_request:
      properties:
        ExpirationSettings:
          $ref: '#/components/schemas/CreateChannel_request_ExpirationSettings'
      type: object
    RedactChannelMessage_request:
      properties:
        SubChannelId:
          description: The ID of the SubChannel in the request.
          maxLength: 128
          minLength: 1
          pattern: "[-_a-zA-Z0-9]*"
          type: string
      type: object
    SearchChannels_request:
      properties:
        Fields:
          description: A list of the <code>Field</code> objects in the channel being
            searched.
          items:
            $ref: '#/components/schemas/SearchField'
          maxItems: 20
          minItems: 1
          type: array
      required:
      - Fields
      type: object
    TagResource_request:
      properties:
        ResourceARN:
          description: The resource ARN.
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        Tags:
          description: The tag key-value pairs.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - ResourceARN
      - Tags
      type: object
    UntagResource_request:
      properties:
        ResourceARN:
          description: The resource ARN.
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        TagKeys:
          description: The tag keys.
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - ResourceARN
      - TagKeys
      type: object
    BatchCreateChannelMembershipResponse_BatchChannelMemberships:
      allOf:
      - $ref: '#/components/schemas/BatchChannelMemberships'
      - description: The list of channel memberships in the response.
      example:
        SubChannelId: ""
        InvitedBy:
          Arn: ""
          Name: ""
        ChannelArn: ""
        Type: ""
        Members: ""
    CreateChannelBanResponse_Member:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The <code>ChannelArn</code> and <code>BannedIdentity</code> of
          the member in the ban response.
      example:
        Arn: ""
        Name: ""
    Processor_Configuration:
      allOf:
      - $ref: '#/components/schemas/ProcessorConfiguration'
      - description: The information about the type of processor and its identifier.
    CreateChannelMembershipResponse_Member:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The ARN and metadata of the member being added.
      example:
        Arn: ""
        Name: ""
    CreateChannelModeratorResponse_ChannelModerator:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The ARNs of the channel and the moderator.
      example:
        Arn: ""
        Name: ""
    DescribeChannelResponse_Channel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      - description: The channel details.
      example:
        ChannelArn: ""
        Privacy: ""
        CreatedBy:
          Arn: ""
          Name: ""
        CreatedTimestamp: ""
        ElasticChannelConfiguration:
          MinimumMembershipPercentage: ""
          MaximumSubChannels: ""
          TargetMembershipsPerSubChannel: ""
        ExpirationSettings:
          ExpirationCriterion: ""
          ExpirationDays: ""
        Mode: ""
        LastMessageTimestamp: ""
        LastUpdatedTimestamp: ""
        ChannelFlowArn: ""
        Metadata: ""
        Name: ""
    DescribeChannelBanResponse_ChannelBan:
      allOf:
      - $ref: '#/components/schemas/ChannelBan'
      - description: The details of the ban.
      example:
        ChannelArn: ""
        CreatedTimestamp: ""
        CreatedBy:
          Arn: ""
          Name: ""
        Member:
          Arn: ""
          Name: ""
    DescribeChannelFlowResponse_ChannelFlow:
      allOf:
      - $ref: '#/components/schemas/ChannelFlow'
      - description: The channel flow details.
      example:
        CreatedTimestamp: ""
        ChannelFlowArn: ""
        LastUpdatedTimestamp: ""
        Processors: ""
        Name: ""
    DescribeChannelMembershipResponse_ChannelMembership:
      allOf:
      - $ref: '#/components/schemas/ChannelMembership'
      - description: The details of the membership.
      example:
        SubChannelId: ""
        InvitedBy:
          Arn: ""
          Name: ""
        ChannelArn: ""
        Type: ""
        CreatedTimestamp: ""
        LastUpdatedTimestamp: ""
        Member:
          Arn: ""
          Name: ""
    DescribeChannelMembershipForAppInstanceUserResponse_ChannelMembership:
      allOf:
      - $ref: '#/components/schemas/ChannelMembershipForAppInstanceUserSummary'
      - description: The channel to which a user belongs.
      example:
        ChannelSummary:
          ChannelArn: ""
          Privacy: ""
          Mode: ""
          LastMessageTimestamp: ""
          Metadata: ""
          Name: ""
        AppInstanceUserMembershipSummary:
          SubChannelId: ""
          Type: ""
          ReadMarkerTimestamp: ""
    DescribeChannelModeratedByAppInstanceUserResponse_Channel:
      allOf:
      - $ref: '#/components/schemas/ChannelModeratedByAppInstanceUserSummary'
      - description: The moderated channel.
      example:
        ChannelSummary:
          ChannelArn: ""
          Privacy: ""
          Mode: ""
          LastMessageTimestamp: ""
          Metadata: ""
          Name: ""
    DescribeChannelModeratorResponse_ChannelModerator:
      allOf:
      - $ref: '#/components/schemas/ChannelModerator'
      - description: The details of the channel moderator.
      example:
        Moderator:
          Arn: ""
          Name: ""
        ChannelArn: ""
        CreatedTimestamp: ""
        CreatedBy:
          Arn: ""
          Name: ""
    GetChannelMembershipPreferencesResponse_Member:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The details of a user.
      example:
        Arn: ""
        Name: ""
    GetChannelMembershipPreferencesResponse_Preferences:
      allOf:
      - $ref: '#/components/schemas/ChannelMembershipPreferences'
      - description: The channel membership preferences for an <code>AppInstanceUser</code>
          .
      example:
        PushNotifications:
          AllowNotifications: ""
          FilterRule: ""
    GetChannelMessageResponse_ChannelMessage:
      allOf:
      - $ref: '#/components/schemas/ChannelMessage'
      - description: The details of and content in the message.
      example:
        Redacted: ""
        Status:
          Value: ""
          Detail: ""
        ChannelArn: ""
        CreatedTimestamp: ""
        ContentType: ""
        LastUpdatedTimestamp: ""
        Metadata: ""
        Sender:
          Arn: ""
          Name: ""
        Persistence: ""
        SubChannelId: ""
        MessageAttributes: ""
        Type: ""
        Target: ""
        Content: ""
        LastEditedTimestamp: ""
        MessageId: ""
    GetChannelMessageStatusResponse_Status:
      allOf:
      - $ref: '#/components/schemas/ChannelMessageStatusStructure'
      - description: The message status and details.
      example:
        Value: ""
        Detail: ""
    GetMessagingSessionEndpointResponse_Endpoint:
      allOf:
      - $ref: '#/components/schemas/MessagingSessionEndpoint'
      - description: The endpoint returned in the response.
      example:
        Url: ""
    PutChannelExpirationSettingsResponse_ExpirationSettings:
      allOf:
      - $ref: '#/components/schemas/ExpirationSettings'
      - description: Settings that control the interval after which a channel is deleted.
      example:
        ExpirationCriterion: ""
        ExpirationDays: ""
    PutChannelMembershipPreferencesResponse_Preferences:
      allOf:
      - $ref: '#/components/schemas/ChannelMembershipPreferences'
      - description: The ARN and metadata of the member being added.
      example:
        PushNotifications:
          AllowNotifications: ""
          FilterRule: ""
    SendChannelMessageResponse_Status:
      allOf:
      - $ref: '#/components/schemas/ChannelMessageStatusStructure'
      - description: The status of the channel message.
      example:
        Value: ""
        Detail: ""
    UpdateChannelMessageResponse_Status:
      allOf:
      - $ref: '#/components/schemas/ChannelMessageStatusStructure'
      - description: The status of the message update.
      example:
        Value: ""
        Detail: ""
    BatchChannelMemberships_InvitedBy:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The identifier of the member who invited another member.
      example:
        Arn: ""
        Name: ""
    Channel_CreatedBy:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The <code>AppInstanceUser</code> who created the channel.
      example:
        Arn: ""
        Name: ""
    Channel_ElasticChannelConfiguration:
      allOf:
      - $ref: '#/components/schemas/ElasticChannelConfiguration'
      - description: The attributes required to configure and create an elastic channel.
          An elastic channel can support a maximum of 1-million members.
      example:
        MinimumMembershipPercentage: ""
        MaximumSubChannels: ""
        TargetMembershipsPerSubChannel: ""
    Channel_ExpirationSettings:
      allOf:
      - $ref: '#/components/schemas/ExpirationSettings'
      - description: Settings that control when a channel expires.
      example:
        ExpirationCriterion: ""
        ExpirationDays: ""
    ChannelBan_Member:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The member being banned from the channel.
      example:
        Arn: ""
        Name: ""
    ChannelBan_CreatedBy:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The <code>AppInstanceUser</code> who created the ban.
      example:
        Arn: ""
        Name: ""
    ChannelBanSummary_Member:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The member being banned from a channel.
    ChannelFlowCallbackRequest_ChannelMessage:
      allOf:
      - $ref: '#/components/schemas/ChannelMessageCallback'
      - description: Stores information about the processed message.
      example:
        SubChannelId: ""
        MessageAttributes: ""
        ContentType: ""
        Content: ""
        Metadata: ""
        PushNotification:
          Type: ""
          Title: ""
          Body: ""
        MessageId: ""
    ChannelMembership_Member:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The data of the channel member.
      example:
        Arn: ""
        Name: ""
    ChannelMembershipForAppInstanceUserSummary_ChannelSummary:
      allOf:
      - $ref: '#/components/schemas/ChannelSummary'
      - description: Returns the channel data for an <code>AppInstance</code>.
      example:
        ChannelArn: ""
        Privacy: ""
        Mode: ""
        LastMessageTimestamp: ""
        Metadata: ""
        Name: ""
    ChannelMembershipForAppInstanceUserSummary_AppInstanceUserMembershipSummary:
      allOf:
      - $ref: '#/components/schemas/AppInstanceUserMembershipSummary'
      - description: Returns the channel membership data for an <code>AppInstance</code>.
      example:
        SubChannelId: ""
        Type: ""
        ReadMarkerTimestamp: ""
    ChannelMembershipSummary_Member:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: A member's summary data.
    ChannelMessage_Sender:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The message sender.
      example:
        Arn: ""
        Name: ""
    ChannelMessageSummary_Status:
      allOf:
      - $ref: '#/components/schemas/ChannelMessageStatusStructure'
      - description: "The message status. The status value is <code>SENT</code> for\
          \ messages sent to a channel without a channel flow. For channels associated\
          \ with channel flow, the value determines the processing stage."
    ChannelModeratedByAppInstanceUserSummary_ChannelSummary:
      allOf:
      - $ref: '#/components/schemas/ChannelSummary'
      - description: Summary of the details of a <code>Channel</code>.
      example:
        ChannelArn: ""
        Privacy: ""
        Mode: ""
        LastMessageTimestamp: ""
        Metadata: ""
        Name: ""
    ChannelModerator_Moderator:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The moderator's data.
      example:
        Arn: ""
        Name: ""
    ChannelModerator_CreatedBy:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The <code>AppInstanceUser</code> who created the moderator.
      example:
        Arn: ""
        Name: ""
    ChannelModeratorSummary_Moderator:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The data for a moderator.
    CreateChannelRequest_ElasticChannelConfiguration:
      allOf:
      - $ref: '#/components/schemas/ElasticChannelConfiguration'
      - description: "The attributes required to configure and create an elastic channel.\
          \ An elastic channel can support a maximum of 1-million users, excluding\
          \ moderators."
      example:
        MinimumMembershipPercentage: ""
        MaximumSubChannels: ""
        TargetMembershipsPerSubChannel: ""
    CreateChannelRequest_ExpirationSettings:
      allOf:
      - $ref: '#/components/schemas/ExpirationSettings'
      - description: Settings that control the interval after which the channel is
          automatically deleted.
      example:
        ExpirationCriterion: ""
        ExpirationDays: ""
    ProcessorConfiguration_Lambda:
      allOf:
      - $ref: '#/components/schemas/LambdaConfiguration'
      - description: Indicates that the processor is of type Lambda.
    PutChannelMembershipPreferencesRequest_Preferences:
      allOf:
      - $ref: '#/components/schemas/ChannelMembershipPreferences'
      - description: The channel membership preferences of an <code>AppInstanceUser</code>
          .
      example:
        PushNotifications:
          AllowNotifications: ""
          FilterRule: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

