/*
 * Amazon Chime SDK Messaging
 * The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html\">Amazon Chime SDK messaging</a>.
 *
 * The version of the OpenAPI document: 2021-05-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ChannelMode;
import org.openapitools.client.model.ChannelPrivacy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ChannelModeratedByAppInstanceUserSummaryChannelSummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:28.676748-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ChannelModeratedByAppInstanceUserSummaryChannelSummary {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CHANNEL_ARN = "ChannelArn";
  @SerializedName(SERIALIZED_NAME_CHANNEL_ARN)
  private String channelArn;

  public static final String SERIALIZED_NAME_MODE = "Mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private ChannelMode mode;

  public static final String SERIALIZED_NAME_PRIVACY = "Privacy";
  @SerializedName(SERIALIZED_NAME_PRIVACY)
  private ChannelPrivacy privacy;

  public static final String SERIALIZED_NAME_METADATA = "Metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private String metadata;

  public static final String SERIALIZED_NAME_LAST_MESSAGE_TIMESTAMP = "LastMessageTimestamp";
  @SerializedName(SERIALIZED_NAME_LAST_MESSAGE_TIMESTAMP)
  private OffsetDateTime lastMessageTimestamp;

  public ChannelModeratedByAppInstanceUserSummaryChannelSummary() {
  }

  public ChannelModeratedByAppInstanceUserSummaryChannelSummary name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ChannelModeratedByAppInstanceUserSummaryChannelSummary channelArn(String channelArn) {
    this.channelArn = channelArn;
    return this;
  }

  /**
   * Get channelArn
   * @return channelArn
   */
  @javax.annotation.Nullable
  public String getChannelArn() {
    return channelArn;
  }

  public void setChannelArn(String channelArn) {
    this.channelArn = channelArn;
  }


  public ChannelModeratedByAppInstanceUserSummaryChannelSummary mode(ChannelMode mode) {
    this.mode = mode;
    return this;
  }

  /**
   * Get mode
   * @return mode
   */
  @javax.annotation.Nullable
  public ChannelMode getMode() {
    return mode;
  }

  public void setMode(ChannelMode mode) {
    this.mode = mode;
  }


  public ChannelModeratedByAppInstanceUserSummaryChannelSummary privacy(ChannelPrivacy privacy) {
    this.privacy = privacy;
    return this;
  }

  /**
   * Get privacy
   * @return privacy
   */
  @javax.annotation.Nullable
  public ChannelPrivacy getPrivacy() {
    return privacy;
  }

  public void setPrivacy(ChannelPrivacy privacy) {
    this.privacy = privacy;
  }


  public ChannelModeratedByAppInstanceUserSummaryChannelSummary metadata(String metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public String getMetadata() {
    return metadata;
  }

  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }


  public ChannelModeratedByAppInstanceUserSummaryChannelSummary lastMessageTimestamp(OffsetDateTime lastMessageTimestamp) {
    this.lastMessageTimestamp = lastMessageTimestamp;
    return this;
  }

  /**
   * Get lastMessageTimestamp
   * @return lastMessageTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastMessageTimestamp() {
    return lastMessageTimestamp;
  }

  public void setLastMessageTimestamp(OffsetDateTime lastMessageTimestamp) {
    this.lastMessageTimestamp = lastMessageTimestamp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChannelModeratedByAppInstanceUserSummaryChannelSummary channelModeratedByAppInstanceUserSummaryChannelSummary = (ChannelModeratedByAppInstanceUserSummaryChannelSummary) o;
    return Objects.equals(this.name, channelModeratedByAppInstanceUserSummaryChannelSummary.name) &&
        Objects.equals(this.channelArn, channelModeratedByAppInstanceUserSummaryChannelSummary.channelArn) &&
        Objects.equals(this.mode, channelModeratedByAppInstanceUserSummaryChannelSummary.mode) &&
        Objects.equals(this.privacy, channelModeratedByAppInstanceUserSummaryChannelSummary.privacy) &&
        Objects.equals(this.metadata, channelModeratedByAppInstanceUserSummaryChannelSummary.metadata) &&
        Objects.equals(this.lastMessageTimestamp, channelModeratedByAppInstanceUserSummaryChannelSummary.lastMessageTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, channelArn, mode, privacy, metadata, lastMessageTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChannelModeratedByAppInstanceUserSummaryChannelSummary {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    channelArn: ").append(toIndentedString(channelArn)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    privacy: ").append(toIndentedString(privacy)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    lastMessageTimestamp: ").append(toIndentedString(lastMessageTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("ChannelArn");
    openapiFields.add("Mode");
    openapiFields.add("Privacy");
    openapiFields.add("Metadata");
    openapiFields.add("LastMessageTimestamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ChannelModeratedByAppInstanceUserSummaryChannelSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ChannelModeratedByAppInstanceUserSummaryChannelSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ChannelModeratedByAppInstanceUserSummaryChannelSummary is not found in the empty JSON string", ChannelModeratedByAppInstanceUserSummaryChannelSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ChannelModeratedByAppInstanceUserSummaryChannelSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ChannelModeratedByAppInstanceUserSummaryChannelSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `ChannelArn`
      if (jsonObj.get("ChannelArn") != null && !jsonObj.get("ChannelArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ChannelArn"));
      }
      // validate the optional field `Mode`
      if (jsonObj.get("Mode") != null && !jsonObj.get("Mode").isJsonNull()) {
        ChannelMode.validateJsonElement(jsonObj.get("Mode"));
      }
      // validate the optional field `Privacy`
      if (jsonObj.get("Privacy") != null && !jsonObj.get("Privacy").isJsonNull()) {
        ChannelPrivacy.validateJsonElement(jsonObj.get("Privacy"));
      }
      // validate the optional field `Metadata`
      if (jsonObj.get("Metadata") != null && !jsonObj.get("Metadata").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Metadata"));
      }
      // validate the optional field `LastMessageTimestamp`
      if (jsonObj.get("LastMessageTimestamp") != null && !jsonObj.get("LastMessageTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastMessageTimestamp"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ChannelModeratedByAppInstanceUserSummaryChannelSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ChannelModeratedByAppInstanceUserSummaryChannelSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ChannelModeratedByAppInstanceUserSummaryChannelSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ChannelModeratedByAppInstanceUserSummaryChannelSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<ChannelModeratedByAppInstanceUserSummaryChannelSummary>() {
           @Override
           public void write(JsonWriter out, ChannelModeratedByAppInstanceUserSummaryChannelSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ChannelModeratedByAppInstanceUserSummaryChannelSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ChannelModeratedByAppInstanceUserSummaryChannelSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ChannelModeratedByAppInstanceUserSummaryChannelSummary
   * @throws IOException if the JSON string is invalid with respect to ChannelModeratedByAppInstanceUserSummaryChannelSummary
   */
  public static ChannelModeratedByAppInstanceUserSummaryChannelSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ChannelModeratedByAppInstanceUserSummaryChannelSummary.class);
  }

  /**
   * Convert an instance of ChannelModeratedByAppInstanceUserSummaryChannelSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

