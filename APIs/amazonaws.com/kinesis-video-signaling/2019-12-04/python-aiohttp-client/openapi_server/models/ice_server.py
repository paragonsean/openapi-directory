# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IceServer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, uris: List=None, username: str=None, password: str=None, ttl: int=None):
        """IceServer - a model defined in OpenAPI

        :param uris: The uris of this IceServer.
        :param username: The username of this IceServer.
        :param password: The password of this IceServer.
        :param ttl: The ttl of this IceServer.
        """
        self.openapi_types = {
            'uris': List,
            'username': str,
            'password': str,
            'ttl': int
        }

        self.attribute_map = {
            'uris': 'Uris',
            'username': 'Username',
            'password': 'Password',
            'ttl': 'Ttl'
        }

        self._uris = uris
        self._username = username
        self._password = password
        self._ttl = ttl

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IceServer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IceServer of this IceServer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uris(self):
        """Gets the uris of this IceServer.


        :return: The uris of this IceServer.
        :rtype: List
        """
        return self._uris

    @uris.setter
    def uris(self, uris):
        """Sets the uris of this IceServer.


        :param uris: The uris of this IceServer.
        :type uris: List
        """

        self._uris = uris

    @property
    def username(self):
        """Gets the username of this IceServer.


        :return: The username of this IceServer.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this IceServer.


        :param username: The username of this IceServer.
        :type username: str
        """

        self._username = username

    @property
    def password(self):
        """Gets the password of this IceServer.


        :return: The password of this IceServer.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this IceServer.


        :param password: The password of this IceServer.
        :type password: str
        """

        self._password = password

    @property
    def ttl(self):
        """Gets the ttl of this IceServer.


        :return: The ttl of this IceServer.
        :rtype: int
        """
        return self._ttl

    @ttl.setter
    def ttl(self, ttl):
        """Sets the ttl of this IceServer.


        :param ttl: The ttl of this IceServer.
        :type ttl: int
        """

        self._ttl = ttl
