/**
 * Amazon Kinesis Video Signaling Channels
 * Kinesis Video Streams Signaling Service is a intermediate service that establishes a communication channel for discovering peers, transmitting offers and answers in order to establish peer-to-peer connection in webRTC technology.
 *
 * The version of the OpenAPI document: 2019-12-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import GetIceServerConfigRequest from './model/GetIceServerConfigRequest';
import GetIceServerConfigResponse from './model/GetIceServerConfigResponse';
import IceServer from './model/IceServer';
import SendAlexaOfferToMasterRequest from './model/SendAlexaOfferToMasterRequest';
import SendAlexaOfferToMasterResponse from './model/SendAlexaOfferToMasterResponse';
import Service from './model/Service';
import DefaultApi from './api/DefaultApi';


/**
* Kinesis Video Streams Signaling Service is a intermediate service that establishes a communication channel for discovering peers, transmitting offers and answers in order to establish peer-to-peer connection in webRTC technology..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AmazonKinesisVideoSignalingChannels = require('index'); // See note below*.
* var xxxSvc = new AmazonKinesisVideoSignalingChannels.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AmazonKinesisVideoSignalingChannels.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AmazonKinesisVideoSignalingChannels.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AmazonKinesisVideoSignalingChannels.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-12-04
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The GetIceServerConfigRequest model constructor.
     * @property {module:model/GetIceServerConfigRequest}
     */
    GetIceServerConfigRequest,

    /**
     * The GetIceServerConfigResponse model constructor.
     * @property {module:model/GetIceServerConfigResponse}
     */
    GetIceServerConfigResponse,

    /**
     * The IceServer model constructor.
     * @property {module:model/IceServer}
     */
    IceServer,

    /**
     * The SendAlexaOfferToMasterRequest model constructor.
     * @property {module:model/SendAlexaOfferToMasterRequest}
     */
    SendAlexaOfferToMasterRequest,

    /**
     * The SendAlexaOfferToMasterResponse model constructor.
     * @property {module:model/SendAlexaOfferToMasterResponse}
     */
    SendAlexaOfferToMasterResponse,

    /**
     * The Service model constructor.
     * @property {module:model/Service}
     */
    Service,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
