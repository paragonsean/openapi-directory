/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateActiveModelVersionResponse model module.
 * @module model/UpdateActiveModelVersionResponse
 * @version 2020-12-15
 */
class UpdateActiveModelVersionResponse {
    /**
     * Constructs a new <code>UpdateActiveModelVersionResponse</code>.
     * @alias module:model/UpdateActiveModelVersionResponse
     */
    constructor() { 
        
        UpdateActiveModelVersionResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateActiveModelVersionResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateActiveModelVersionResponse} obj Optional instance to populate.
     * @return {module:model/UpdateActiveModelVersionResponse} The populated <code>UpdateActiveModelVersionResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateActiveModelVersionResponse();

            if (data.hasOwnProperty('ModelName')) {
                obj['ModelName'] = ApiClient.convertToType(data['ModelName'], 'String');
            }
            if (data.hasOwnProperty('ModelArn')) {
                obj['ModelArn'] = ApiClient.convertToType(data['ModelArn'], 'String');
            }
            if (data.hasOwnProperty('CurrentActiveVersion')) {
                obj['CurrentActiveVersion'] = ApiClient.convertToType(data['CurrentActiveVersion'], 'Number');
            }
            if (data.hasOwnProperty('PreviousActiveVersion')) {
                obj['PreviousActiveVersion'] = ApiClient.convertToType(data['PreviousActiveVersion'], 'Number');
            }
            if (data.hasOwnProperty('CurrentActiveVersionArn')) {
                obj['CurrentActiveVersionArn'] = ApiClient.convertToType(data['CurrentActiveVersionArn'], 'String');
            }
            if (data.hasOwnProperty('PreviousActiveVersionArn')) {
                obj['PreviousActiveVersionArn'] = ApiClient.convertToType(data['PreviousActiveVersionArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateActiveModelVersionResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateActiveModelVersionResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ModelName`
        if (data['ModelName']) { // data not null
          String.validateJSON(data['ModelName']);
        }
        // validate the optional field `ModelArn`
        if (data['ModelArn']) { // data not null
          String.validateJSON(data['ModelArn']);
        }
        // validate the optional field `CurrentActiveVersion`
        if (data['CurrentActiveVersion']) { // data not null
          Number.validateJSON(data['CurrentActiveVersion']);
        }
        // validate the optional field `PreviousActiveVersion`
        if (data['PreviousActiveVersion']) { // data not null
          Number.validateJSON(data['PreviousActiveVersion']);
        }
        // validate the optional field `CurrentActiveVersionArn`
        if (data['CurrentActiveVersionArn']) { // data not null
          String.validateJSON(data['CurrentActiveVersionArn']);
        }
        // validate the optional field `PreviousActiveVersionArn`
        if (data['PreviousActiveVersionArn']) { // data not null
          String.validateJSON(data['PreviousActiveVersionArn']);
        }

        return true;
    }


}



/**
 * @member {String} ModelName
 */
UpdateActiveModelVersionResponse.prototype['ModelName'] = undefined;

/**
 * @member {String} ModelArn
 */
UpdateActiveModelVersionResponse.prototype['ModelArn'] = undefined;

/**
 * @member {Number} CurrentActiveVersion
 */
UpdateActiveModelVersionResponse.prototype['CurrentActiveVersion'] = undefined;

/**
 * @member {Number} PreviousActiveVersion
 */
UpdateActiveModelVersionResponse.prototype['PreviousActiveVersion'] = undefined;

/**
 * @member {String} CurrentActiveVersionArn
 */
UpdateActiveModelVersionResponse.prototype['CurrentActiveVersionArn'] = undefined;

/**
 * @member {String} PreviousActiveVersionArn
 */
UpdateActiveModelVersionResponse.prototype['PreviousActiveVersionArn'] = undefined;






export default UpdateActiveModelVersionResponse;

