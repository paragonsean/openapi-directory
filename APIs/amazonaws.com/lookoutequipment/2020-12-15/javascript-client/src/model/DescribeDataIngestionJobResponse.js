/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeDataIngestionJobResponseDataQualitySummary from './DescribeDataIngestionJobResponseDataQualitySummary';
import DescribeDataIngestionJobResponseIngestionInputConfiguration from './DescribeDataIngestionJobResponseIngestionInputConfiguration';
import IngestedFilesSummary from './IngestedFilesSummary';
import IngestionJobStatus from './IngestionJobStatus';

/**
 * The DescribeDataIngestionJobResponse model module.
 * @module model/DescribeDataIngestionJobResponse
 * @version 2020-12-15
 */
class DescribeDataIngestionJobResponse {
    /**
     * Constructs a new <code>DescribeDataIngestionJobResponse</code>.
     * @alias module:model/DescribeDataIngestionJobResponse
     */
    constructor() { 
        
        DescribeDataIngestionJobResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeDataIngestionJobResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeDataIngestionJobResponse} obj Optional instance to populate.
     * @return {module:model/DescribeDataIngestionJobResponse} The populated <code>DescribeDataIngestionJobResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeDataIngestionJobResponse();

            if (data.hasOwnProperty('JobId')) {
                obj['JobId'] = ApiClient.convertToType(data['JobId'], 'String');
            }
            if (data.hasOwnProperty('DatasetArn')) {
                obj['DatasetArn'] = ApiClient.convertToType(data['DatasetArn'], 'String');
            }
            if (data.hasOwnProperty('IngestionInputConfiguration')) {
                obj['IngestionInputConfiguration'] = DescribeDataIngestionJobResponseIngestionInputConfiguration.constructFromObject(data['IngestionInputConfiguration']);
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('CreatedAt')) {
                obj['CreatedAt'] = ApiClient.convertToType(data['CreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], IngestionJobStatus);
            }
            if (data.hasOwnProperty('FailedReason')) {
                obj['FailedReason'] = ApiClient.convertToType(data['FailedReason'], 'String');
            }
            if (data.hasOwnProperty('DataQualitySummary')) {
                obj['DataQualitySummary'] = DescribeDataIngestionJobResponseDataQualitySummary.constructFromObject(data['DataQualitySummary']);
            }
            if (data.hasOwnProperty('IngestedFilesSummary')) {
                obj['IngestedFilesSummary'] = IngestedFilesSummary.constructFromObject(data['IngestedFilesSummary']);
            }
            if (data.hasOwnProperty('StatusDetail')) {
                obj['StatusDetail'] = ApiClient.convertToType(data['StatusDetail'], 'String');
            }
            if (data.hasOwnProperty('IngestedDataSize')) {
                obj['IngestedDataSize'] = ApiClient.convertToType(data['IngestedDataSize'], 'Number');
            }
            if (data.hasOwnProperty('DataStartTime')) {
                obj['DataStartTime'] = ApiClient.convertToType(data['DataStartTime'], 'Date');
            }
            if (data.hasOwnProperty('DataEndTime')) {
                obj['DataEndTime'] = ApiClient.convertToType(data['DataEndTime'], 'Date');
            }
            if (data.hasOwnProperty('SourceDatasetArn')) {
                obj['SourceDatasetArn'] = ApiClient.convertToType(data['SourceDatasetArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeDataIngestionJobResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeDataIngestionJobResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `JobId`
        if (data['JobId']) { // data not null
          String.validateJSON(data['JobId']);
        }
        // validate the optional field `DatasetArn`
        if (data['DatasetArn']) { // data not null
          String.validateJSON(data['DatasetArn']);
        }
        // validate the optional field `IngestionInputConfiguration`
        if (data['IngestionInputConfiguration']) { // data not null
          DescribeDataIngestionJobResponseIngestionInputConfiguration.validateJSON(data['IngestionInputConfiguration']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `CreatedAt`
        if (data['CreatedAt']) { // data not null
          Date.validateJSON(data['CreatedAt']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          IngestionJobStatus.validateJSON(data['Status']);
        }
        // validate the optional field `FailedReason`
        if (data['FailedReason']) { // data not null
          String.validateJSON(data['FailedReason']);
        }
        // validate the optional field `DataQualitySummary`
        if (data['DataQualitySummary']) { // data not null
          DescribeDataIngestionJobResponseDataQualitySummary.validateJSON(data['DataQualitySummary']);
        }
        // validate the optional field `IngestedFilesSummary`
        if (data['IngestedFilesSummary']) { // data not null
          IngestedFilesSummary.validateJSON(data['IngestedFilesSummary']);
        }
        // validate the optional field `StatusDetail`
        if (data['StatusDetail']) { // data not null
          String.validateJSON(data['StatusDetail']);
        }
        // validate the optional field `IngestedDataSize`
        if (data['IngestedDataSize']) { // data not null
          Number.validateJSON(data['IngestedDataSize']);
        }
        // validate the optional field `DataStartTime`
        if (data['DataStartTime']) { // data not null
          Date.validateJSON(data['DataStartTime']);
        }
        // validate the optional field `DataEndTime`
        if (data['DataEndTime']) { // data not null
          Date.validateJSON(data['DataEndTime']);
        }
        // validate the optional field `SourceDatasetArn`
        if (data['SourceDatasetArn']) { // data not null
          String.validateJSON(data['SourceDatasetArn']);
        }

        return true;
    }


}



/**
 * @member {String} JobId
 */
DescribeDataIngestionJobResponse.prototype['JobId'] = undefined;

/**
 * @member {String} DatasetArn
 */
DescribeDataIngestionJobResponse.prototype['DatasetArn'] = undefined;

/**
 * @member {module:model/DescribeDataIngestionJobResponseIngestionInputConfiguration} IngestionInputConfiguration
 */
DescribeDataIngestionJobResponse.prototype['IngestionInputConfiguration'] = undefined;

/**
 * @member {String} RoleArn
 */
DescribeDataIngestionJobResponse.prototype['RoleArn'] = undefined;

/**
 * @member {Date} CreatedAt
 */
DescribeDataIngestionJobResponse.prototype['CreatedAt'] = undefined;

/**
 * @member {module:model/IngestionJobStatus} Status
 */
DescribeDataIngestionJobResponse.prototype['Status'] = undefined;

/**
 * @member {String} FailedReason
 */
DescribeDataIngestionJobResponse.prototype['FailedReason'] = undefined;

/**
 * @member {module:model/DescribeDataIngestionJobResponseDataQualitySummary} DataQualitySummary
 */
DescribeDataIngestionJobResponse.prototype['DataQualitySummary'] = undefined;

/**
 * @member {module:model/IngestedFilesSummary} IngestedFilesSummary
 */
DescribeDataIngestionJobResponse.prototype['IngestedFilesSummary'] = undefined;

/**
 * @member {String} StatusDetail
 */
DescribeDataIngestionJobResponse.prototype['StatusDetail'] = undefined;

/**
 * @member {Number} IngestedDataSize
 */
DescribeDataIngestionJobResponse.prototype['IngestedDataSize'] = undefined;

/**
 * @member {Date} DataStartTime
 */
DescribeDataIngestionJobResponse.prototype['DataStartTime'] = undefined;

/**
 * @member {Date} DataEndTime
 */
DescribeDataIngestionJobResponse.prototype['DataEndTime'] = undefined;

/**
 * @member {String} SourceDatasetArn
 */
DescribeDataIngestionJobResponse.prototype['SourceDatasetArn'] = undefined;






export default DescribeDataIngestionJobResponse;

