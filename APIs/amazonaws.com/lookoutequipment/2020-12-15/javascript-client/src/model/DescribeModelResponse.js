/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateModelRequestDataPreProcessingConfiguration from './CreateModelRequestDataPreProcessingConfiguration';
import DescribeModelResponseLabelsInputConfiguration from './DescribeModelResponseLabelsInputConfiguration';
import ModelStatus from './ModelStatus';

/**
 * The DescribeModelResponse model module.
 * @module model/DescribeModelResponse
 * @version 2020-12-15
 */
class DescribeModelResponse {
    /**
     * Constructs a new <code>DescribeModelResponse</code>.
     * @alias module:model/DescribeModelResponse
     */
    constructor() { 
        
        DescribeModelResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeModelResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeModelResponse} obj Optional instance to populate.
     * @return {module:model/DescribeModelResponse} The populated <code>DescribeModelResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeModelResponse();

            if (data.hasOwnProperty('ModelName')) {
                obj['ModelName'] = ApiClient.convertToType(data['ModelName'], 'String');
            }
            if (data.hasOwnProperty('ModelArn')) {
                obj['ModelArn'] = ApiClient.convertToType(data['ModelArn'], 'String');
            }
            if (data.hasOwnProperty('DatasetName')) {
                obj['DatasetName'] = ApiClient.convertToType(data['DatasetName'], 'String');
            }
            if (data.hasOwnProperty('DatasetArn')) {
                obj['DatasetArn'] = ApiClient.convertToType(data['DatasetArn'], 'String');
            }
            if (data.hasOwnProperty('Schema')) {
                obj['Schema'] = ApiClient.convertToType(data['Schema'], 'String');
            }
            if (data.hasOwnProperty('LabelsInputConfiguration')) {
                obj['LabelsInputConfiguration'] = DescribeModelResponseLabelsInputConfiguration.constructFromObject(data['LabelsInputConfiguration']);
            }
            if (data.hasOwnProperty('TrainingDataStartTime')) {
                obj['TrainingDataStartTime'] = ApiClient.convertToType(data['TrainingDataStartTime'], 'Date');
            }
            if (data.hasOwnProperty('TrainingDataEndTime')) {
                obj['TrainingDataEndTime'] = ApiClient.convertToType(data['TrainingDataEndTime'], 'Date');
            }
            if (data.hasOwnProperty('EvaluationDataStartTime')) {
                obj['EvaluationDataStartTime'] = ApiClient.convertToType(data['EvaluationDataStartTime'], 'Date');
            }
            if (data.hasOwnProperty('EvaluationDataEndTime')) {
                obj['EvaluationDataEndTime'] = ApiClient.convertToType(data['EvaluationDataEndTime'], 'Date');
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('DataPreProcessingConfiguration')) {
                obj['DataPreProcessingConfiguration'] = CreateModelRequestDataPreProcessingConfiguration.constructFromObject(data['DataPreProcessingConfiguration']);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], ModelStatus);
            }
            if (data.hasOwnProperty('TrainingExecutionStartTime')) {
                obj['TrainingExecutionStartTime'] = ApiClient.convertToType(data['TrainingExecutionStartTime'], 'Date');
            }
            if (data.hasOwnProperty('TrainingExecutionEndTime')) {
                obj['TrainingExecutionEndTime'] = ApiClient.convertToType(data['TrainingExecutionEndTime'], 'Date');
            }
            if (data.hasOwnProperty('FailedReason')) {
                obj['FailedReason'] = ApiClient.convertToType(data['FailedReason'], 'String');
            }
            if (data.hasOwnProperty('ModelMetrics')) {
                obj['ModelMetrics'] = ApiClient.convertToType(data['ModelMetrics'], 'String');
            }
            if (data.hasOwnProperty('LastUpdatedTime')) {
                obj['LastUpdatedTime'] = ApiClient.convertToType(data['LastUpdatedTime'], 'Date');
            }
            if (data.hasOwnProperty('CreatedAt')) {
                obj['CreatedAt'] = ApiClient.convertToType(data['CreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('ServerSideKmsKeyId')) {
                obj['ServerSideKmsKeyId'] = ApiClient.convertToType(data['ServerSideKmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('OffCondition')) {
                obj['OffCondition'] = ApiClient.convertToType(data['OffCondition'], 'String');
            }
            if (data.hasOwnProperty('SourceModelVersionArn')) {
                obj['SourceModelVersionArn'] = ApiClient.convertToType(data['SourceModelVersionArn'], 'String');
            }
            if (data.hasOwnProperty('ImportJobStartTime')) {
                obj['ImportJobStartTime'] = ApiClient.convertToType(data['ImportJobStartTime'], 'Date');
            }
            if (data.hasOwnProperty('ImportJobEndTime')) {
                obj['ImportJobEndTime'] = ApiClient.convertToType(data['ImportJobEndTime'], 'Date');
            }
            if (data.hasOwnProperty('ActiveModelVersion')) {
                obj['ActiveModelVersion'] = ApiClient.convertToType(data['ActiveModelVersion'], 'Number');
            }
            if (data.hasOwnProperty('ActiveModelVersionArn')) {
                obj['ActiveModelVersionArn'] = ApiClient.convertToType(data['ActiveModelVersionArn'], 'String');
            }
            if (data.hasOwnProperty('ModelVersionActivatedAt')) {
                obj['ModelVersionActivatedAt'] = ApiClient.convertToType(data['ModelVersionActivatedAt'], 'Date');
            }
            if (data.hasOwnProperty('PreviousActiveModelVersion')) {
                obj['PreviousActiveModelVersion'] = ApiClient.convertToType(data['PreviousActiveModelVersion'], 'Number');
            }
            if (data.hasOwnProperty('PreviousActiveModelVersionArn')) {
                obj['PreviousActiveModelVersionArn'] = ApiClient.convertToType(data['PreviousActiveModelVersionArn'], 'String');
            }
            if (data.hasOwnProperty('PreviousModelVersionActivatedAt')) {
                obj['PreviousModelVersionActivatedAt'] = ApiClient.convertToType(data['PreviousModelVersionActivatedAt'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeModelResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeModelResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ModelName`
        if (data['ModelName']) { // data not null
          String.validateJSON(data['ModelName']);
        }
        // validate the optional field `ModelArn`
        if (data['ModelArn']) { // data not null
          String.validateJSON(data['ModelArn']);
        }
        // validate the optional field `DatasetName`
        if (data['DatasetName']) { // data not null
          String.validateJSON(data['DatasetName']);
        }
        // validate the optional field `DatasetArn`
        if (data['DatasetArn']) { // data not null
          String.validateJSON(data['DatasetArn']);
        }
        // validate the optional field `Schema`
        if (data['Schema']) { // data not null
          String.validateJSON(data['Schema']);
        }
        // validate the optional field `LabelsInputConfiguration`
        if (data['LabelsInputConfiguration']) { // data not null
          DescribeModelResponseLabelsInputConfiguration.validateJSON(data['LabelsInputConfiguration']);
        }
        // validate the optional field `TrainingDataStartTime`
        if (data['TrainingDataStartTime']) { // data not null
          Date.validateJSON(data['TrainingDataStartTime']);
        }
        // validate the optional field `TrainingDataEndTime`
        if (data['TrainingDataEndTime']) { // data not null
          Date.validateJSON(data['TrainingDataEndTime']);
        }
        // validate the optional field `EvaluationDataStartTime`
        if (data['EvaluationDataStartTime']) { // data not null
          Date.validateJSON(data['EvaluationDataStartTime']);
        }
        // validate the optional field `EvaluationDataEndTime`
        if (data['EvaluationDataEndTime']) { // data not null
          Date.validateJSON(data['EvaluationDataEndTime']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `DataPreProcessingConfiguration`
        if (data['DataPreProcessingConfiguration']) { // data not null
          CreateModelRequestDataPreProcessingConfiguration.validateJSON(data['DataPreProcessingConfiguration']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          ModelStatus.validateJSON(data['Status']);
        }
        // validate the optional field `TrainingExecutionStartTime`
        if (data['TrainingExecutionStartTime']) { // data not null
          Date.validateJSON(data['TrainingExecutionStartTime']);
        }
        // validate the optional field `TrainingExecutionEndTime`
        if (data['TrainingExecutionEndTime']) { // data not null
          Date.validateJSON(data['TrainingExecutionEndTime']);
        }
        // validate the optional field `FailedReason`
        if (data['FailedReason']) { // data not null
          String.validateJSON(data['FailedReason']);
        }
        // validate the optional field `ModelMetrics`
        if (data['ModelMetrics']) { // data not null
          String.validateJSON(data['ModelMetrics']);
        }
        // validate the optional field `LastUpdatedTime`
        if (data['LastUpdatedTime']) { // data not null
          Date.validateJSON(data['LastUpdatedTime']);
        }
        // validate the optional field `CreatedAt`
        if (data['CreatedAt']) { // data not null
          Date.validateJSON(data['CreatedAt']);
        }
        // validate the optional field `ServerSideKmsKeyId`
        if (data['ServerSideKmsKeyId']) { // data not null
          String.validateJSON(data['ServerSideKmsKeyId']);
        }
        // validate the optional field `OffCondition`
        if (data['OffCondition']) { // data not null
          String.validateJSON(data['OffCondition']);
        }
        // validate the optional field `SourceModelVersionArn`
        if (data['SourceModelVersionArn']) { // data not null
          String.validateJSON(data['SourceModelVersionArn']);
        }
        // validate the optional field `ImportJobStartTime`
        if (data['ImportJobStartTime']) { // data not null
          Date.validateJSON(data['ImportJobStartTime']);
        }
        // validate the optional field `ImportJobEndTime`
        if (data['ImportJobEndTime']) { // data not null
          Date.validateJSON(data['ImportJobEndTime']);
        }
        // validate the optional field `ActiveModelVersion`
        if (data['ActiveModelVersion']) { // data not null
          Number.validateJSON(data['ActiveModelVersion']);
        }
        // validate the optional field `ActiveModelVersionArn`
        if (data['ActiveModelVersionArn']) { // data not null
          String.validateJSON(data['ActiveModelVersionArn']);
        }
        // validate the optional field `ModelVersionActivatedAt`
        if (data['ModelVersionActivatedAt']) { // data not null
          Date.validateJSON(data['ModelVersionActivatedAt']);
        }
        // validate the optional field `PreviousActiveModelVersion`
        if (data['PreviousActiveModelVersion']) { // data not null
          Number.validateJSON(data['PreviousActiveModelVersion']);
        }
        // validate the optional field `PreviousActiveModelVersionArn`
        if (data['PreviousActiveModelVersionArn']) { // data not null
          String.validateJSON(data['PreviousActiveModelVersionArn']);
        }
        // validate the optional field `PreviousModelVersionActivatedAt`
        if (data['PreviousModelVersionActivatedAt']) { // data not null
          Date.validateJSON(data['PreviousModelVersionActivatedAt']);
        }

        return true;
    }


}



/**
 * @member {String} ModelName
 */
DescribeModelResponse.prototype['ModelName'] = undefined;

/**
 * @member {String} ModelArn
 */
DescribeModelResponse.prototype['ModelArn'] = undefined;

/**
 * @member {String} DatasetName
 */
DescribeModelResponse.prototype['DatasetName'] = undefined;

/**
 * @member {String} DatasetArn
 */
DescribeModelResponse.prototype['DatasetArn'] = undefined;

/**
 * @member {String} Schema
 */
DescribeModelResponse.prototype['Schema'] = undefined;

/**
 * @member {module:model/DescribeModelResponseLabelsInputConfiguration} LabelsInputConfiguration
 */
DescribeModelResponse.prototype['LabelsInputConfiguration'] = undefined;

/**
 * @member {Date} TrainingDataStartTime
 */
DescribeModelResponse.prototype['TrainingDataStartTime'] = undefined;

/**
 * @member {Date} TrainingDataEndTime
 */
DescribeModelResponse.prototype['TrainingDataEndTime'] = undefined;

/**
 * @member {Date} EvaluationDataStartTime
 */
DescribeModelResponse.prototype['EvaluationDataStartTime'] = undefined;

/**
 * @member {Date} EvaluationDataEndTime
 */
DescribeModelResponse.prototype['EvaluationDataEndTime'] = undefined;

/**
 * @member {String} RoleArn
 */
DescribeModelResponse.prototype['RoleArn'] = undefined;

/**
 * @member {module:model/CreateModelRequestDataPreProcessingConfiguration} DataPreProcessingConfiguration
 */
DescribeModelResponse.prototype['DataPreProcessingConfiguration'] = undefined;

/**
 * @member {module:model/ModelStatus} Status
 */
DescribeModelResponse.prototype['Status'] = undefined;

/**
 * @member {Date} TrainingExecutionStartTime
 */
DescribeModelResponse.prototype['TrainingExecutionStartTime'] = undefined;

/**
 * @member {Date} TrainingExecutionEndTime
 */
DescribeModelResponse.prototype['TrainingExecutionEndTime'] = undefined;

/**
 * @member {String} FailedReason
 */
DescribeModelResponse.prototype['FailedReason'] = undefined;

/**
 * @member {String} ModelMetrics
 */
DescribeModelResponse.prototype['ModelMetrics'] = undefined;

/**
 * @member {Date} LastUpdatedTime
 */
DescribeModelResponse.prototype['LastUpdatedTime'] = undefined;

/**
 * @member {Date} CreatedAt
 */
DescribeModelResponse.prototype['CreatedAt'] = undefined;

/**
 * @member {String} ServerSideKmsKeyId
 */
DescribeModelResponse.prototype['ServerSideKmsKeyId'] = undefined;

/**
 * @member {String} OffCondition
 */
DescribeModelResponse.prototype['OffCondition'] = undefined;

/**
 * @member {String} SourceModelVersionArn
 */
DescribeModelResponse.prototype['SourceModelVersionArn'] = undefined;

/**
 * @member {Date} ImportJobStartTime
 */
DescribeModelResponse.prototype['ImportJobStartTime'] = undefined;

/**
 * @member {Date} ImportJobEndTime
 */
DescribeModelResponse.prototype['ImportJobEndTime'] = undefined;

/**
 * @member {Number} ActiveModelVersion
 */
DescribeModelResponse.prototype['ActiveModelVersion'] = undefined;

/**
 * @member {String} ActiveModelVersionArn
 */
DescribeModelResponse.prototype['ActiveModelVersionArn'] = undefined;

/**
 * @member {Date} ModelVersionActivatedAt
 */
DescribeModelResponse.prototype['ModelVersionActivatedAt'] = undefined;

/**
 * @member {Number} PreviousActiveModelVersion
 */
DescribeModelResponse.prototype['PreviousActiveModelVersion'] = undefined;

/**
 * @member {String} PreviousActiveModelVersionArn
 */
DescribeModelResponse.prototype['PreviousActiveModelVersionArn'] = undefined;

/**
 * @member {Date} PreviousModelVersionActivatedAt
 */
DescribeModelResponse.prototype['PreviousModelVersionActivatedAt'] = undefined;






export default DescribeModelResponse;

