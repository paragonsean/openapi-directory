/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IngestionInputConfiguration from './IngestionInputConfiguration';
import IngestionInputConfigurationS3InputConfiguration from './IngestionInputConfigurationS3InputConfiguration';

/**
 * The StartDataIngestionJobRequestIngestionInputConfiguration model module.
 * @module model/StartDataIngestionJobRequestIngestionInputConfiguration
 * @version 2020-12-15
 */
class StartDataIngestionJobRequestIngestionInputConfiguration {
    /**
     * Constructs a new <code>StartDataIngestionJobRequestIngestionInputConfiguration</code>.
     * @alias module:model/StartDataIngestionJobRequestIngestionInputConfiguration
     * @implements module:model/IngestionInputConfiguration
     * @param s3InputConfiguration {module:model/IngestionInputConfigurationS3InputConfiguration} 
     */
    constructor(s3InputConfiguration) { 
        IngestionInputConfiguration.initialize(this, s3InputConfiguration);
        StartDataIngestionJobRequestIngestionInputConfiguration.initialize(this, s3InputConfiguration);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, s3InputConfiguration) { 
        obj['S3InputConfiguration'] = s3InputConfiguration;
    }

    /**
     * Constructs a <code>StartDataIngestionJobRequestIngestionInputConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartDataIngestionJobRequestIngestionInputConfiguration} obj Optional instance to populate.
     * @return {module:model/StartDataIngestionJobRequestIngestionInputConfiguration} The populated <code>StartDataIngestionJobRequestIngestionInputConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartDataIngestionJobRequestIngestionInputConfiguration();
            IngestionInputConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('S3InputConfiguration')) {
                obj['S3InputConfiguration'] = IngestionInputConfigurationS3InputConfiguration.constructFromObject(data['S3InputConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartDataIngestionJobRequestIngestionInputConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartDataIngestionJobRequestIngestionInputConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StartDataIngestionJobRequestIngestionInputConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `S3InputConfiguration`
        if (data['S3InputConfiguration']) { // data not null
          IngestionInputConfigurationS3InputConfiguration.validateJSON(data['S3InputConfiguration']);
        }

        return true;
    }


}

StartDataIngestionJobRequestIngestionInputConfiguration.RequiredProperties = ["S3InputConfiguration"];

/**
 * @member {module:model/IngestionInputConfigurationS3InputConfiguration} S3InputConfiguration
 */
StartDataIngestionJobRequestIngestionInputConfiguration.prototype['S3InputConfiguration'] = undefined;


// Implement IngestionInputConfiguration interface:
/**
 * @member {module:model/IngestionInputConfigurationS3InputConfiguration} S3InputConfiguration
 */
IngestionInputConfiguration.prototype['S3InputConfiguration'] = undefined;




export default StartDataIngestionJobRequestIngestionInputConfiguration;

