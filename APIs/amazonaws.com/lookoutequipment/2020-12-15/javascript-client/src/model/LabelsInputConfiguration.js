/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LabelsInputConfigurationS3InputConfiguration from './LabelsInputConfigurationS3InputConfiguration';

/**
 * The LabelsInputConfiguration model module.
 * @module model/LabelsInputConfiguration
 * @version 2020-12-15
 */
class LabelsInputConfiguration {
    /**
     * Constructs a new <code>LabelsInputConfiguration</code>.
     * Contains the configuration information for the S3 location being used to hold label data. 
     * @alias module:model/LabelsInputConfiguration
     */
    constructor() { 
        
        LabelsInputConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LabelsInputConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LabelsInputConfiguration} obj Optional instance to populate.
     * @return {module:model/LabelsInputConfiguration} The populated <code>LabelsInputConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LabelsInputConfiguration();

            if (data.hasOwnProperty('S3InputConfiguration')) {
                obj['S3InputConfiguration'] = LabelsInputConfigurationS3InputConfiguration.constructFromObject(data['S3InputConfiguration']);
            }
            if (data.hasOwnProperty('LabelGroupName')) {
                obj['LabelGroupName'] = ApiClient.convertToType(data['LabelGroupName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LabelsInputConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LabelsInputConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `S3InputConfiguration`
        if (data['S3InputConfiguration']) { // data not null
          LabelsInputConfigurationS3InputConfiguration.validateJSON(data['S3InputConfiguration']);
        }
        // validate the optional field `LabelGroupName`
        if (data['LabelGroupName']) { // data not null
          String.validateJSON(data['LabelGroupName']);
        }

        return true;
    }


}



/**
 * @member {module:model/LabelsInputConfigurationS3InputConfiguration} S3InputConfiguration
 */
LabelsInputConfiguration.prototype['S3InputConfiguration'] = undefined;

/**
 * @member {String} LabelGroupName
 */
LabelsInputConfiguration.prototype['LabelGroupName'] = undefined;






export default LabelsInputConfiguration;

