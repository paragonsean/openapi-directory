/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DescribeInferenceSchedulerResponseDataInputConfiguration from './DescribeInferenceSchedulerResponseDataInputConfiguration';
import InferenceExecutionStatus from './InferenceExecutionStatus';
import InferenceExecutionSummaryCustomerResultObject from './InferenceExecutionSummaryCustomerResultObject';
import InferenceExecutionSummaryDataOutputConfiguration from './InferenceExecutionSummaryDataOutputConfiguration';

/**
 * The InferenceExecutionSummary model module.
 * @module model/InferenceExecutionSummary
 * @version 2020-12-15
 */
class InferenceExecutionSummary {
    /**
     * Constructs a new <code>InferenceExecutionSummary</code>.
     * Contains information about the specific inference execution, including input and output data configuration, inference scheduling information, status, and so on. 
     * @alias module:model/InferenceExecutionSummary
     */
    constructor() { 
        
        InferenceExecutionSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InferenceExecutionSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InferenceExecutionSummary} obj Optional instance to populate.
     * @return {module:model/InferenceExecutionSummary} The populated <code>InferenceExecutionSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InferenceExecutionSummary();

            if (data.hasOwnProperty('ModelName')) {
                obj['ModelName'] = ApiClient.convertToType(data['ModelName'], 'String');
            }
            if (data.hasOwnProperty('ModelArn')) {
                obj['ModelArn'] = ApiClient.convertToType(data['ModelArn'], 'String');
            }
            if (data.hasOwnProperty('InferenceSchedulerName')) {
                obj['InferenceSchedulerName'] = ApiClient.convertToType(data['InferenceSchedulerName'], 'String');
            }
            if (data.hasOwnProperty('InferenceSchedulerArn')) {
                obj['InferenceSchedulerArn'] = ApiClient.convertToType(data['InferenceSchedulerArn'], 'String');
            }
            if (data.hasOwnProperty('ScheduledStartTime')) {
                obj['ScheduledStartTime'] = ApiClient.convertToType(data['ScheduledStartTime'], 'Date');
            }
            if (data.hasOwnProperty('DataStartTime')) {
                obj['DataStartTime'] = ApiClient.convertToType(data['DataStartTime'], 'Date');
            }
            if (data.hasOwnProperty('DataEndTime')) {
                obj['DataEndTime'] = ApiClient.convertToType(data['DataEndTime'], 'Date');
            }
            if (data.hasOwnProperty('DataInputConfiguration')) {
                obj['DataInputConfiguration'] = DescribeInferenceSchedulerResponseDataInputConfiguration.constructFromObject(data['DataInputConfiguration']);
            }
            if (data.hasOwnProperty('DataOutputConfiguration')) {
                obj['DataOutputConfiguration'] = InferenceExecutionSummaryDataOutputConfiguration.constructFromObject(data['DataOutputConfiguration']);
            }
            if (data.hasOwnProperty('CustomerResultObject')) {
                obj['CustomerResultObject'] = InferenceExecutionSummaryCustomerResultObject.constructFromObject(data['CustomerResultObject']);
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], InferenceExecutionStatus);
            }
            if (data.hasOwnProperty('FailedReason')) {
                obj['FailedReason'] = ApiClient.convertToType(data['FailedReason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InferenceExecutionSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InferenceExecutionSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ModelName`
        if (data['ModelName']) { // data not null
          String.validateJSON(data['ModelName']);
        }
        // validate the optional field `ModelArn`
        if (data['ModelArn']) { // data not null
          String.validateJSON(data['ModelArn']);
        }
        // validate the optional field `InferenceSchedulerName`
        if (data['InferenceSchedulerName']) { // data not null
          String.validateJSON(data['InferenceSchedulerName']);
        }
        // validate the optional field `InferenceSchedulerArn`
        if (data['InferenceSchedulerArn']) { // data not null
          String.validateJSON(data['InferenceSchedulerArn']);
        }
        // validate the optional field `ScheduledStartTime`
        if (data['ScheduledStartTime']) { // data not null
          Date.validateJSON(data['ScheduledStartTime']);
        }
        // validate the optional field `DataStartTime`
        if (data['DataStartTime']) { // data not null
          Date.validateJSON(data['DataStartTime']);
        }
        // validate the optional field `DataEndTime`
        if (data['DataEndTime']) { // data not null
          Date.validateJSON(data['DataEndTime']);
        }
        // validate the optional field `DataInputConfiguration`
        if (data['DataInputConfiguration']) { // data not null
          DescribeInferenceSchedulerResponseDataInputConfiguration.validateJSON(data['DataInputConfiguration']);
        }
        // validate the optional field `DataOutputConfiguration`
        if (data['DataOutputConfiguration']) { // data not null
          InferenceExecutionSummaryDataOutputConfiguration.validateJSON(data['DataOutputConfiguration']);
        }
        // validate the optional field `CustomerResultObject`
        if (data['CustomerResultObject']) { // data not null
          InferenceExecutionSummaryCustomerResultObject.validateJSON(data['CustomerResultObject']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          InferenceExecutionStatus.validateJSON(data['Status']);
        }
        // validate the optional field `FailedReason`
        if (data['FailedReason']) { // data not null
          String.validateJSON(data['FailedReason']);
        }

        return true;
    }


}



/**
 * @member {String} ModelName
 */
InferenceExecutionSummary.prototype['ModelName'] = undefined;

/**
 * @member {String} ModelArn
 */
InferenceExecutionSummary.prototype['ModelArn'] = undefined;

/**
 * @member {String} InferenceSchedulerName
 */
InferenceExecutionSummary.prototype['InferenceSchedulerName'] = undefined;

/**
 * @member {String} InferenceSchedulerArn
 */
InferenceExecutionSummary.prototype['InferenceSchedulerArn'] = undefined;

/**
 * @member {Date} ScheduledStartTime
 */
InferenceExecutionSummary.prototype['ScheduledStartTime'] = undefined;

/**
 * @member {Date} DataStartTime
 */
InferenceExecutionSummary.prototype['DataStartTime'] = undefined;

/**
 * @member {Date} DataEndTime
 */
InferenceExecutionSummary.prototype['DataEndTime'] = undefined;

/**
 * @member {module:model/DescribeInferenceSchedulerResponseDataInputConfiguration} DataInputConfiguration
 */
InferenceExecutionSummary.prototype['DataInputConfiguration'] = undefined;

/**
 * @member {module:model/InferenceExecutionSummaryDataOutputConfiguration} DataOutputConfiguration
 */
InferenceExecutionSummary.prototype['DataOutputConfiguration'] = undefined;

/**
 * @member {module:model/InferenceExecutionSummaryCustomerResultObject} CustomerResultObject
 */
InferenceExecutionSummary.prototype['CustomerResultObject'] = undefined;

/**
 * @member {module:model/InferenceExecutionStatus} Status
 */
InferenceExecutionSummary.prototype['Status'] = undefined;

/**
 * @member {String} FailedReason
 */
InferenceExecutionSummary.prototype['FailedReason'] = undefined;






export default InferenceExecutionSummary;

