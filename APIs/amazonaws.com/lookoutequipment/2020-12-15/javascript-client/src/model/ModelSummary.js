/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelStatus from './ModelStatus';

/**
 * The ModelSummary model module.
 * @module model/ModelSummary
 * @version 2020-12-15
 */
class ModelSummary {
    /**
     * Constructs a new <code>ModelSummary</code>.
     * Provides information about the specified ML model, including dataset and model names and ARNs, as well as status. 
     * @alias module:model/ModelSummary
     */
    constructor() { 
        
        ModelSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModelSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelSummary} obj Optional instance to populate.
     * @return {module:model/ModelSummary} The populated <code>ModelSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelSummary();

            if (data.hasOwnProperty('ModelName')) {
                obj['ModelName'] = ApiClient.convertToType(data['ModelName'], 'String');
            }
            if (data.hasOwnProperty('ModelArn')) {
                obj['ModelArn'] = ApiClient.convertToType(data['ModelArn'], 'String');
            }
            if (data.hasOwnProperty('DatasetName')) {
                obj['DatasetName'] = ApiClient.convertToType(data['DatasetName'], 'String');
            }
            if (data.hasOwnProperty('DatasetArn')) {
                obj['DatasetArn'] = ApiClient.convertToType(data['DatasetArn'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], ModelStatus);
            }
            if (data.hasOwnProperty('CreatedAt')) {
                obj['CreatedAt'] = ApiClient.convertToType(data['CreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('ActiveModelVersion')) {
                obj['ActiveModelVersion'] = ApiClient.convertToType(data['ActiveModelVersion'], 'Number');
            }
            if (data.hasOwnProperty('ActiveModelVersionArn')) {
                obj['ActiveModelVersionArn'] = ApiClient.convertToType(data['ActiveModelVersionArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ModelName`
        if (data['ModelName']) { // data not null
          String.validateJSON(data['ModelName']);
        }
        // validate the optional field `ModelArn`
        if (data['ModelArn']) { // data not null
          String.validateJSON(data['ModelArn']);
        }
        // validate the optional field `DatasetName`
        if (data['DatasetName']) { // data not null
          String.validateJSON(data['DatasetName']);
        }
        // validate the optional field `DatasetArn`
        if (data['DatasetArn']) { // data not null
          String.validateJSON(data['DatasetArn']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          ModelStatus.validateJSON(data['Status']);
        }
        // validate the optional field `CreatedAt`
        if (data['CreatedAt']) { // data not null
          Date.validateJSON(data['CreatedAt']);
        }
        // validate the optional field `ActiveModelVersion`
        if (data['ActiveModelVersion']) { // data not null
          Number.validateJSON(data['ActiveModelVersion']);
        }
        // validate the optional field `ActiveModelVersionArn`
        if (data['ActiveModelVersionArn']) { // data not null
          String.validateJSON(data['ActiveModelVersionArn']);
        }

        return true;
    }


}



/**
 * @member {String} ModelName
 */
ModelSummary.prototype['ModelName'] = undefined;

/**
 * @member {String} ModelArn
 */
ModelSummary.prototype['ModelArn'] = undefined;

/**
 * @member {String} DatasetName
 */
ModelSummary.prototype['DatasetName'] = undefined;

/**
 * @member {String} DatasetArn
 */
ModelSummary.prototype['DatasetArn'] = undefined;

/**
 * @member {module:model/ModelStatus} Status
 */
ModelSummary.prototype['Status'] = undefined;

/**
 * @member {Date} CreatedAt
 */
ModelSummary.prototype['CreatedAt'] = undefined;

/**
 * @member {Number} ActiveModelVersion
 */
ModelSummary.prototype['ActiveModelVersion'] = undefined;

/**
 * @member {String} ActiveModelVersionArn
 */
ModelSummary.prototype['ActiveModelVersionArn'] = undefined;






export default ModelSummary;

