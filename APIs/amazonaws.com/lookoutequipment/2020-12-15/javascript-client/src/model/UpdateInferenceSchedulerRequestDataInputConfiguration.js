/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InferenceInputConfiguration from './InferenceInputConfiguration';
import InferenceInputConfigurationInferenceInputNameConfiguration from './InferenceInputConfigurationInferenceInputNameConfiguration';
import InferenceInputConfigurationS3InputConfiguration from './InferenceInputConfigurationS3InputConfiguration';

/**
 * The UpdateInferenceSchedulerRequestDataInputConfiguration model module.
 * @module model/UpdateInferenceSchedulerRequestDataInputConfiguration
 * @version 2020-12-15
 */
class UpdateInferenceSchedulerRequestDataInputConfiguration {
    /**
     * Constructs a new <code>UpdateInferenceSchedulerRequestDataInputConfiguration</code>.
     * @alias module:model/UpdateInferenceSchedulerRequestDataInputConfiguration
     * @implements module:model/InferenceInputConfiguration
     */
    constructor() { 
        InferenceInputConfiguration.initialize(this);
        UpdateInferenceSchedulerRequestDataInputConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateInferenceSchedulerRequestDataInputConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateInferenceSchedulerRequestDataInputConfiguration} obj Optional instance to populate.
     * @return {module:model/UpdateInferenceSchedulerRequestDataInputConfiguration} The populated <code>UpdateInferenceSchedulerRequestDataInputConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateInferenceSchedulerRequestDataInputConfiguration();
            InferenceInputConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('S3InputConfiguration')) {
                obj['S3InputConfiguration'] = InferenceInputConfigurationS3InputConfiguration.constructFromObject(data['S3InputConfiguration']);
            }
            if (data.hasOwnProperty('InputTimeZoneOffset')) {
                obj['InputTimeZoneOffset'] = ApiClient.convertToType(data['InputTimeZoneOffset'], 'String');
            }
            if (data.hasOwnProperty('InferenceInputNameConfiguration')) {
                obj['InferenceInputNameConfiguration'] = InferenceInputConfigurationInferenceInputNameConfiguration.constructFromObject(data['InferenceInputNameConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateInferenceSchedulerRequestDataInputConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateInferenceSchedulerRequestDataInputConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `S3InputConfiguration`
        if (data['S3InputConfiguration']) { // data not null
          InferenceInputConfigurationS3InputConfiguration.validateJSON(data['S3InputConfiguration']);
        }
        // validate the optional field `InputTimeZoneOffset`
        if (data['InputTimeZoneOffset']) { // data not null
          String.validateJSON(data['InputTimeZoneOffset']);
        }
        // validate the optional field `InferenceInputNameConfiguration`
        if (data['InferenceInputNameConfiguration']) { // data not null
          InferenceInputConfigurationInferenceInputNameConfiguration.validateJSON(data['InferenceInputNameConfiguration']);
        }

        return true;
    }


}



/**
 * @member {module:model/InferenceInputConfigurationS3InputConfiguration} S3InputConfiguration
 */
UpdateInferenceSchedulerRequestDataInputConfiguration.prototype['S3InputConfiguration'] = undefined;

/**
 * @member {String} InputTimeZoneOffset
 */
UpdateInferenceSchedulerRequestDataInputConfiguration.prototype['InputTimeZoneOffset'] = undefined;

/**
 * @member {module:model/InferenceInputConfigurationInferenceInputNameConfiguration} InferenceInputNameConfiguration
 */
UpdateInferenceSchedulerRequestDataInputConfiguration.prototype['InferenceInputNameConfiguration'] = undefined;


// Implement InferenceInputConfiguration interface:
/**
 * @member {module:model/InferenceInputConfigurationS3InputConfiguration} S3InputConfiguration
 */
InferenceInputConfiguration.prototype['S3InputConfiguration'] = undefined;
/**
 * @member {String} InputTimeZoneOffset
 */
InferenceInputConfiguration.prototype['InputTimeZoneOffset'] = undefined;
/**
 * @member {module:model/InferenceInputConfigurationInferenceInputNameConfiguration} InferenceInputNameConfiguration
 */
InferenceInputConfiguration.prototype['InferenceInputNameConfiguration'] = undefined;




export default UpdateInferenceSchedulerRequestDataInputConfiguration;

