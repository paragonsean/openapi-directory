/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelVersionStatus from './ModelVersionStatus';

/**
 * The ImportModelVersionResponse model module.
 * @module model/ImportModelVersionResponse
 * @version 2020-12-15
 */
class ImportModelVersionResponse {
    /**
     * Constructs a new <code>ImportModelVersionResponse</code>.
     * @alias module:model/ImportModelVersionResponse
     */
    constructor() { 
        
        ImportModelVersionResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImportModelVersionResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportModelVersionResponse} obj Optional instance to populate.
     * @return {module:model/ImportModelVersionResponse} The populated <code>ImportModelVersionResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportModelVersionResponse();

            if (data.hasOwnProperty('ModelName')) {
                obj['ModelName'] = ApiClient.convertToType(data['ModelName'], 'String');
            }
            if (data.hasOwnProperty('ModelArn')) {
                obj['ModelArn'] = ApiClient.convertToType(data['ModelArn'], 'String');
            }
            if (data.hasOwnProperty('ModelVersionArn')) {
                obj['ModelVersionArn'] = ApiClient.convertToType(data['ModelVersionArn'], 'String');
            }
            if (data.hasOwnProperty('ModelVersion')) {
                obj['ModelVersion'] = ApiClient.convertToType(data['ModelVersion'], 'Number');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], ModelVersionStatus);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportModelVersionResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportModelVersionResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ModelName`
        if (data['ModelName']) { // data not null
          String.validateJSON(data['ModelName']);
        }
        // validate the optional field `ModelArn`
        if (data['ModelArn']) { // data not null
          String.validateJSON(data['ModelArn']);
        }
        // validate the optional field `ModelVersionArn`
        if (data['ModelVersionArn']) { // data not null
          String.validateJSON(data['ModelVersionArn']);
        }
        // validate the optional field `ModelVersion`
        if (data['ModelVersion']) { // data not null
          Number.validateJSON(data['ModelVersion']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          ModelVersionStatus.validateJSON(data['Status']);
        }

        return true;
    }


}



/**
 * @member {String} ModelName
 */
ImportModelVersionResponse.prototype['ModelName'] = undefined;

/**
 * @member {String} ModelArn
 */
ImportModelVersionResponse.prototype['ModelArn'] = undefined;

/**
 * @member {String} ModelVersionArn
 */
ImportModelVersionResponse.prototype['ModelVersionArn'] = undefined;

/**
 * @member {Number} ModelVersion
 */
ImportModelVersionResponse.prototype['ModelVersion'] = undefined;

/**
 * @member {module:model/ModelVersionStatus} Status
 */
ImportModelVersionResponse.prototype['Status'] = undefined;






export default ImportModelVersionResponse;

