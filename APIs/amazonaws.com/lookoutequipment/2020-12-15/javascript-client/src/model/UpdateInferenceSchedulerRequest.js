/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataUploadFrequency from './DataUploadFrequency';
import UpdateInferenceSchedulerRequestDataInputConfiguration from './UpdateInferenceSchedulerRequestDataInputConfiguration';
import UpdateInferenceSchedulerRequestDataOutputConfiguration from './UpdateInferenceSchedulerRequestDataOutputConfiguration';

/**
 * The UpdateInferenceSchedulerRequest model module.
 * @module model/UpdateInferenceSchedulerRequest
 * @version 2020-12-15
 */
class UpdateInferenceSchedulerRequest {
    /**
     * Constructs a new <code>UpdateInferenceSchedulerRequest</code>.
     * @alias module:model/UpdateInferenceSchedulerRequest
     * @param inferenceSchedulerName {String} 
     */
    constructor(inferenceSchedulerName) { 
        
        UpdateInferenceSchedulerRequest.initialize(this, inferenceSchedulerName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, inferenceSchedulerName) { 
        obj['InferenceSchedulerName'] = inferenceSchedulerName;
    }

    /**
     * Constructs a <code>UpdateInferenceSchedulerRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateInferenceSchedulerRequest} obj Optional instance to populate.
     * @return {module:model/UpdateInferenceSchedulerRequest} The populated <code>UpdateInferenceSchedulerRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateInferenceSchedulerRequest();

            if (data.hasOwnProperty('InferenceSchedulerName')) {
                obj['InferenceSchedulerName'] = ApiClient.convertToType(data['InferenceSchedulerName'], 'String');
            }
            if (data.hasOwnProperty('DataDelayOffsetInMinutes')) {
                obj['DataDelayOffsetInMinutes'] = ApiClient.convertToType(data['DataDelayOffsetInMinutes'], 'Number');
            }
            if (data.hasOwnProperty('DataUploadFrequency')) {
                obj['DataUploadFrequency'] = ApiClient.convertToType(data['DataUploadFrequency'], DataUploadFrequency);
            }
            if (data.hasOwnProperty('DataInputConfiguration')) {
                obj['DataInputConfiguration'] = UpdateInferenceSchedulerRequestDataInputConfiguration.constructFromObject(data['DataInputConfiguration']);
            }
            if (data.hasOwnProperty('DataOutputConfiguration')) {
                obj['DataOutputConfiguration'] = UpdateInferenceSchedulerRequestDataOutputConfiguration.constructFromObject(data['DataOutputConfiguration']);
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateInferenceSchedulerRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateInferenceSchedulerRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateInferenceSchedulerRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `InferenceSchedulerName`
        if (data['InferenceSchedulerName']) { // data not null
          String.validateJSON(data['InferenceSchedulerName']);
        }
        // validate the optional field `DataDelayOffsetInMinutes`
        if (data['DataDelayOffsetInMinutes']) { // data not null
          Number.validateJSON(data['DataDelayOffsetInMinutes']);
        }
        // validate the optional field `DataUploadFrequency`
        if (data['DataUploadFrequency']) { // data not null
          DataUploadFrequency.validateJSON(data['DataUploadFrequency']);
        }
        // validate the optional field `DataInputConfiguration`
        if (data['DataInputConfiguration']) { // data not null
          UpdateInferenceSchedulerRequestDataInputConfiguration.validateJSON(data['DataInputConfiguration']);
        }
        // validate the optional field `DataOutputConfiguration`
        if (data['DataOutputConfiguration']) { // data not null
          UpdateInferenceSchedulerRequestDataOutputConfiguration.validateJSON(data['DataOutputConfiguration']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }

        return true;
    }


}

UpdateInferenceSchedulerRequest.RequiredProperties = ["InferenceSchedulerName"];

/**
 * @member {String} InferenceSchedulerName
 */
UpdateInferenceSchedulerRequest.prototype['InferenceSchedulerName'] = undefined;

/**
 * @member {Number} DataDelayOffsetInMinutes
 */
UpdateInferenceSchedulerRequest.prototype['DataDelayOffsetInMinutes'] = undefined;

/**
 * @member {module:model/DataUploadFrequency} DataUploadFrequency
 */
UpdateInferenceSchedulerRequest.prototype['DataUploadFrequency'] = undefined;

/**
 * @member {module:model/UpdateInferenceSchedulerRequestDataInputConfiguration} DataInputConfiguration
 */
UpdateInferenceSchedulerRequest.prototype['DataInputConfiguration'] = undefined;

/**
 * @member {module:model/UpdateInferenceSchedulerRequestDataOutputConfiguration} DataOutputConfiguration
 */
UpdateInferenceSchedulerRequest.prototype['DataOutputConfiguration'] = undefined;

/**
 * @member {String} RoleArn
 */
UpdateInferenceSchedulerRequest.prototype['RoleArn'] = undefined;






export default UpdateInferenceSchedulerRequest;

