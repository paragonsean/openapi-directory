/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InferenceS3OutputConfiguration model module.
 * @module model/InferenceS3OutputConfiguration
 * @version 2020-12-15
 */
class InferenceS3OutputConfiguration {
    /**
     * Constructs a new <code>InferenceS3OutputConfiguration</code>.
     *  Specifies configuration information for the output results from the inference, including output S3 location. 
     * @alias module:model/InferenceS3OutputConfiguration
     * @param bucket {String} 
     */
    constructor(bucket) { 
        
        InferenceS3OutputConfiguration.initialize(this, bucket);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bucket) { 
        obj['Bucket'] = bucket;
    }

    /**
     * Constructs a <code>InferenceS3OutputConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InferenceS3OutputConfiguration} obj Optional instance to populate.
     * @return {module:model/InferenceS3OutputConfiguration} The populated <code>InferenceS3OutputConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InferenceS3OutputConfiguration();

            if (data.hasOwnProperty('Bucket')) {
                obj['Bucket'] = ApiClient.convertToType(data['Bucket'], 'String');
            }
            if (data.hasOwnProperty('Prefix')) {
                obj['Prefix'] = ApiClient.convertToType(data['Prefix'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InferenceS3OutputConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InferenceS3OutputConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InferenceS3OutputConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Bucket`
        if (data['Bucket']) { // data not null
          String.validateJSON(data['Bucket']);
        }
        // validate the optional field `Prefix`
        if (data['Prefix']) { // data not null
          String.validateJSON(data['Prefix']);
        }

        return true;
    }


}

InferenceS3OutputConfiguration.RequiredProperties = ["Bucket"];

/**
 * @member {String} Bucket
 */
InferenceS3OutputConfiguration.prototype['Bucket'] = undefined;

/**
 * @member {String} Prefix
 */
InferenceS3OutputConfiguration.prototype['Prefix'] = undefined;






export default InferenceS3OutputConfiguration;

