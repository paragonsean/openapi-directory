/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonLookoutForEquipment);
  }
}(this, function(expect, AmazonLookoutForEquipment) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DescribeDataIngestionJobResponse', function() {
    it('should create an instance of DescribeDataIngestionJobResponse', function() {
      // uncomment below and update the code to test DescribeDataIngestionJobResponse
      //var instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
      //expect(instance).to.be.a(AmazonLookoutForEquipment.DescribeDataIngestionJobResponse);
    });

    it('should have the property jobId (base name: "JobId")', function() {
      // uncomment below and update the code to test the property jobId
      //var instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
      //expect(instance).to.be();
    });

    it('should have the property datasetArn (base name: "DatasetArn")', function() {
      // uncomment below and update the code to test the property datasetArn
      //var instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
      //expect(instance).to.be();
    });

    it('should have the property ingestionInputConfiguration (base name: "IngestionInputConfiguration")', function() {
      // uncomment below and update the code to test the property ingestionInputConfiguration
      //var instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
      //expect(instance).to.be();
    });

    it('should have the property roleArn (base name: "RoleArn")', function() {
      // uncomment below and update the code to test the property roleArn
      //var instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "CreatedAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
      //expect(instance).to.be();
    });

    it('should have the property failedReason (base name: "FailedReason")', function() {
      // uncomment below and update the code to test the property failedReason
      //var instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
      //expect(instance).to.be();
    });

    it('should have the property dataQualitySummary (base name: "DataQualitySummary")', function() {
      // uncomment below and update the code to test the property dataQualitySummary
      //var instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
      //expect(instance).to.be();
    });

    it('should have the property ingestedFilesSummary (base name: "IngestedFilesSummary")', function() {
      // uncomment below and update the code to test the property ingestedFilesSummary
      //var instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
      //expect(instance).to.be();
    });

    it('should have the property statusDetail (base name: "StatusDetail")', function() {
      // uncomment below and update the code to test the property statusDetail
      //var instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
      //expect(instance).to.be();
    });

    it('should have the property ingestedDataSize (base name: "IngestedDataSize")', function() {
      // uncomment below and update the code to test the property ingestedDataSize
      //var instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
      //expect(instance).to.be();
    });

    it('should have the property dataStartTime (base name: "DataStartTime")', function() {
      // uncomment below and update the code to test the property dataStartTime
      //var instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
      //expect(instance).to.be();
    });

    it('should have the property dataEndTime (base name: "DataEndTime")', function() {
      // uncomment below and update the code to test the property dataEndTime
      //var instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
      //expect(instance).to.be();
    });

    it('should have the property sourceDatasetArn (base name: "SourceDatasetArn")', function() {
      // uncomment below and update the code to test the property sourceDatasetArn
      //var instance = new AmazonLookoutForEquipment.DescribeDataIngestionJobResponse();
      //expect(instance).to.be();
    });

  });

}));
