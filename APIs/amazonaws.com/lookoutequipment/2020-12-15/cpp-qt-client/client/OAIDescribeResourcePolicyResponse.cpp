/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeResourcePolicyResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeResourcePolicyResponse::OAIDescribeResourcePolicyResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeResourcePolicyResponse::OAIDescribeResourcePolicyResponse() {
    this->initializeModel();
}

OAIDescribeResourcePolicyResponse::~OAIDescribeResourcePolicyResponse() {}

void OAIDescribeResourcePolicyResponse::initializeModel() {

    m_policy_revision_id_isSet = false;
    m_policy_revision_id_isValid = false;

    m_resource_policy_isSet = false;
    m_resource_policy_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;
}

void OAIDescribeResourcePolicyResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeResourcePolicyResponse::fromJsonObject(QJsonObject json) {

    m_policy_revision_id_isValid = ::OpenAPI::fromJsonValue(m_policy_revision_id, json[QString("PolicyRevisionId")]);
    m_policy_revision_id_isSet = !json[QString("PolicyRevisionId")].isNull() && m_policy_revision_id_isValid;

    m_resource_policy_isValid = ::OpenAPI::fromJsonValue(m_resource_policy, json[QString("ResourcePolicy")]);
    m_resource_policy_isSet = !json[QString("ResourcePolicy")].isNull() && m_resource_policy_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("LastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("LastModifiedTime")].isNull() && m_last_modified_time_isValid;
}

QString OAIDescribeResourcePolicyResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeResourcePolicyResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_policy_revision_id_isSet) {
        obj.insert(QString("PolicyRevisionId"), ::OpenAPI::toJsonValue(m_policy_revision_id));
    }
    if (m_resource_policy_isSet) {
        obj.insert(QString("ResourcePolicy"), ::OpenAPI::toJsonValue(m_resource_policy));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("LastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    return obj;
}

QString OAIDescribeResourcePolicyResponse::getPolicyRevisionId() const {
    return m_policy_revision_id;
}
void OAIDescribeResourcePolicyResponse::setPolicyRevisionId(const QString &policy_revision_id) {
    m_policy_revision_id = policy_revision_id;
    m_policy_revision_id_isSet = true;
}

bool OAIDescribeResourcePolicyResponse::is_policy_revision_id_Set() const{
    return m_policy_revision_id_isSet;
}

bool OAIDescribeResourcePolicyResponse::is_policy_revision_id_Valid() const{
    return m_policy_revision_id_isValid;
}

QString OAIDescribeResourcePolicyResponse::getResourcePolicy() const {
    return m_resource_policy;
}
void OAIDescribeResourcePolicyResponse::setResourcePolicy(const QString &resource_policy) {
    m_resource_policy = resource_policy;
    m_resource_policy_isSet = true;
}

bool OAIDescribeResourcePolicyResponse::is_resource_policy_Set() const{
    return m_resource_policy_isSet;
}

bool OAIDescribeResourcePolicyResponse::is_resource_policy_Valid() const{
    return m_resource_policy_isValid;
}

QDateTime OAIDescribeResourcePolicyResponse::getCreationTime() const {
    return m_creation_time;
}
void OAIDescribeResourcePolicyResponse::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIDescribeResourcePolicyResponse::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIDescribeResourcePolicyResponse::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIDescribeResourcePolicyResponse::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIDescribeResourcePolicyResponse::setLastModifiedTime(const QDateTime &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIDescribeResourcePolicyResponse::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIDescribeResourcePolicyResponse::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

bool OAIDescribeResourcePolicyResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_policy_revision_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_policy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeResourcePolicyResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
