/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateDatasetRequest.h
 *
 * 
 */

#ifndef OAICreateDatasetRequest_H
#define OAICreateDatasetRequest_H

#include <QJsonObject>

#include "OAICreateDatasetRequest_DatasetSchema.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateDatasetRequest_DatasetSchema;

class OAICreateDatasetRequest : public OAIObject {
public:
    OAICreateDatasetRequest();
    OAICreateDatasetRequest(QString json);
    ~OAICreateDatasetRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatasetName() const;
    void setDatasetName(const QString &dataset_name);
    bool is_dataset_name_Set() const;
    bool is_dataset_name_Valid() const;

    OAICreateDatasetRequest_DatasetSchema getDatasetSchema() const;
    void setDatasetSchema(const OAICreateDatasetRequest_DatasetSchema &dataset_schema);
    bool is_dataset_schema_Set() const;
    bool is_dataset_schema_Valid() const;

    QString getServerSideKmsKeyId() const;
    void setServerSideKmsKeyId(const QString &server_side_kms_key_id);
    bool is_server_side_kms_key_id_Set() const;
    bool is_server_side_kms_key_id_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dataset_name;
    bool m_dataset_name_isSet;
    bool m_dataset_name_isValid;

    OAICreateDatasetRequest_DatasetSchema m_dataset_schema;
    bool m_dataset_schema_isSet;
    bool m_dataset_schema_isValid;

    QString m_server_side_kms_key_id;
    bool m_server_side_kms_key_id_isSet;
    bool m_server_side_kms_key_id_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateDatasetRequest)

#endif // OAICreateDatasetRequest_H
