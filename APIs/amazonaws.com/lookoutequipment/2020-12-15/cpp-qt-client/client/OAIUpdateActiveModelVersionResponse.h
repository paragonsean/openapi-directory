/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateActiveModelVersionResponse.h
 *
 * 
 */

#ifndef OAIUpdateActiveModelVersionResponse_H
#define OAIUpdateActiveModelVersionResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateActiveModelVersionResponse : public OAIObject {
public:
    OAIUpdateActiveModelVersionResponse();
    OAIUpdateActiveModelVersionResponse(QString json);
    ~OAIUpdateActiveModelVersionResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getModelName() const;
    void setModelName(const QString &model_name);
    bool is_model_name_Set() const;
    bool is_model_name_Valid() const;

    QString getModelArn() const;
    void setModelArn(const QString &model_arn);
    bool is_model_arn_Set() const;
    bool is_model_arn_Valid() const;

    qint32 getCurrentActiveVersion() const;
    void setCurrentActiveVersion(const qint32 &current_active_version);
    bool is_current_active_version_Set() const;
    bool is_current_active_version_Valid() const;

    qint32 getPreviousActiveVersion() const;
    void setPreviousActiveVersion(const qint32 &previous_active_version);
    bool is_previous_active_version_Set() const;
    bool is_previous_active_version_Valid() const;

    QString getCurrentActiveVersionArn() const;
    void setCurrentActiveVersionArn(const QString &current_active_version_arn);
    bool is_current_active_version_arn_Set() const;
    bool is_current_active_version_arn_Valid() const;

    QString getPreviousActiveVersionArn() const;
    void setPreviousActiveVersionArn(const QString &previous_active_version_arn);
    bool is_previous_active_version_arn_Set() const;
    bool is_previous_active_version_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_model_name;
    bool m_model_name_isSet;
    bool m_model_name_isValid;

    QString m_model_arn;
    bool m_model_arn_isSet;
    bool m_model_arn_isValid;

    qint32 m_current_active_version;
    bool m_current_active_version_isSet;
    bool m_current_active_version_isValid;

    qint32 m_previous_active_version;
    bool m_previous_active_version_isSet;
    bool m_previous_active_version_isValid;

    QString m_current_active_version_arn;
    bool m_current_active_version_arn_isSet;
    bool m_current_active_version_arn_isValid;

    QString m_previous_active_version_arn;
    bool m_previous_active_version_arn_isSet;
    bool m_previous_active_version_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateActiveModelVersionResponse)

#endif // OAIUpdateActiveModelVersionResponse_H
