/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartInferenceSchedulerResponse.h
 *
 * 
 */

#ifndef OAIStartInferenceSchedulerResponse_H
#define OAIStartInferenceSchedulerResponse_H

#include <QJsonObject>

#include "OAIInferenceSchedulerStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStartInferenceSchedulerResponse : public OAIObject {
public:
    OAIStartInferenceSchedulerResponse();
    OAIStartInferenceSchedulerResponse(QString json);
    ~OAIStartInferenceSchedulerResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getModelArn() const;
    void setModelArn(const QString &model_arn);
    bool is_model_arn_Set() const;
    bool is_model_arn_Valid() const;

    QString getModelName() const;
    void setModelName(const QString &model_name);
    bool is_model_name_Set() const;
    bool is_model_name_Valid() const;

    QString getInferenceSchedulerName() const;
    void setInferenceSchedulerName(const QString &inference_scheduler_name);
    bool is_inference_scheduler_name_Set() const;
    bool is_inference_scheduler_name_Valid() const;

    QString getInferenceSchedulerArn() const;
    void setInferenceSchedulerArn(const QString &inference_scheduler_arn);
    bool is_inference_scheduler_arn_Set() const;
    bool is_inference_scheduler_arn_Valid() const;

    OAIInferenceSchedulerStatus getStatus() const;
    void setStatus(const OAIInferenceSchedulerStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_model_arn;
    bool m_model_arn_isSet;
    bool m_model_arn_isValid;

    QString m_model_name;
    bool m_model_name_isSet;
    bool m_model_name_isValid;

    QString m_inference_scheduler_name;
    bool m_inference_scheduler_name_isSet;
    bool m_inference_scheduler_name_isValid;

    QString m_inference_scheduler_arn;
    bool m_inference_scheduler_arn_isSet;
    bool m_inference_scheduler_arn_isValid;

    OAIInferenceSchedulerStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartInferenceSchedulerResponse)

#endif // OAIStartInferenceSchedulerResponse_H
