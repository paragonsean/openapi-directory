/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeLabelGroupResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeLabelGroupResponse::OAIDescribeLabelGroupResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeLabelGroupResponse::OAIDescribeLabelGroupResponse() {
    this->initializeModel();
}

OAIDescribeLabelGroupResponse::~OAIDescribeLabelGroupResponse() {}

void OAIDescribeLabelGroupResponse::initializeModel() {

    m_label_group_name_isSet = false;
    m_label_group_name_isValid = false;

    m_label_group_arn_isSet = false;
    m_label_group_arn_isValid = false;

    m_fault_codes_isSet = false;
    m_fault_codes_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAIDescribeLabelGroupResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeLabelGroupResponse::fromJsonObject(QJsonObject json) {

    m_label_group_name_isValid = ::OpenAPI::fromJsonValue(m_label_group_name, json[QString("LabelGroupName")]);
    m_label_group_name_isSet = !json[QString("LabelGroupName")].isNull() && m_label_group_name_isValid;

    m_label_group_arn_isValid = ::OpenAPI::fromJsonValue(m_label_group_arn, json[QString("LabelGroupArn")]);
    m_label_group_arn_isSet = !json[QString("LabelGroupArn")].isNull() && m_label_group_arn_isValid;

    m_fault_codes_isValid = ::OpenAPI::fromJsonValue(m_fault_codes, json[QString("FaultCodes")]);
    m_fault_codes_isSet = !json[QString("FaultCodes")].isNull() && m_fault_codes_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("CreatedAt")]);
    m_created_at_isSet = !json[QString("CreatedAt")].isNull() && m_created_at_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("UpdatedAt")]);
    m_updated_at_isSet = !json[QString("UpdatedAt")].isNull() && m_updated_at_isValid;
}

QString OAIDescribeLabelGroupResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeLabelGroupResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_label_group_name_isSet) {
        obj.insert(QString("LabelGroupName"), ::OpenAPI::toJsonValue(m_label_group_name));
    }
    if (m_label_group_arn_isSet) {
        obj.insert(QString("LabelGroupArn"), ::OpenAPI::toJsonValue(m_label_group_arn));
    }
    if (m_fault_codes.isSet()) {
        obj.insert(QString("FaultCodes"), ::OpenAPI::toJsonValue(m_fault_codes));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("CreatedAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("UpdatedAt"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

QString OAIDescribeLabelGroupResponse::getLabelGroupName() const {
    return m_label_group_name;
}
void OAIDescribeLabelGroupResponse::setLabelGroupName(const QString &label_group_name) {
    m_label_group_name = label_group_name;
    m_label_group_name_isSet = true;
}

bool OAIDescribeLabelGroupResponse::is_label_group_name_Set() const{
    return m_label_group_name_isSet;
}

bool OAIDescribeLabelGroupResponse::is_label_group_name_Valid() const{
    return m_label_group_name_isValid;
}

QString OAIDescribeLabelGroupResponse::getLabelGroupArn() const {
    return m_label_group_arn;
}
void OAIDescribeLabelGroupResponse::setLabelGroupArn(const QString &label_group_arn) {
    m_label_group_arn = label_group_arn;
    m_label_group_arn_isSet = true;
}

bool OAIDescribeLabelGroupResponse::is_label_group_arn_Set() const{
    return m_label_group_arn_isSet;
}

bool OAIDescribeLabelGroupResponse::is_label_group_arn_Valid() const{
    return m_label_group_arn_isValid;
}

QList OAIDescribeLabelGroupResponse::getFaultCodes() const {
    return m_fault_codes;
}
void OAIDescribeLabelGroupResponse::setFaultCodes(const QList &fault_codes) {
    m_fault_codes = fault_codes;
    m_fault_codes_isSet = true;
}

bool OAIDescribeLabelGroupResponse::is_fault_codes_Set() const{
    return m_fault_codes_isSet;
}

bool OAIDescribeLabelGroupResponse::is_fault_codes_Valid() const{
    return m_fault_codes_isValid;
}

QDateTime OAIDescribeLabelGroupResponse::getCreatedAt() const {
    return m_created_at;
}
void OAIDescribeLabelGroupResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIDescribeLabelGroupResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIDescribeLabelGroupResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QDateTime OAIDescribeLabelGroupResponse::getUpdatedAt() const {
    return m_updated_at;
}
void OAIDescribeLabelGroupResponse::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIDescribeLabelGroupResponse::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIDescribeLabelGroupResponse::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAIDescribeLabelGroupResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_label_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_group_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fault_codes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeLabelGroupResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
