/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeModelVersionResponse.h
 *
 * 
 */

#ifndef OAIDescribeModelVersionResponse_H
#define OAIDescribeModelVersionResponse_H

#include <QJsonObject>

#include "OAIDataPreProcessingConfiguration.h"
#include "OAILabelsInputConfiguration.h"
#include "OAIModelVersionSourceType.h"
#include "OAIModelVersionStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILabelsInputConfiguration;
class OAIDataPreProcessingConfiguration;

class OAIDescribeModelVersionResponse : public OAIObject {
public:
    OAIDescribeModelVersionResponse();
    OAIDescribeModelVersionResponse(QString json);
    ~OAIDescribeModelVersionResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getModelName() const;
    void setModelName(const QString &model_name);
    bool is_model_name_Set() const;
    bool is_model_name_Valid() const;

    QString getModelArn() const;
    void setModelArn(const QString &model_arn);
    bool is_model_arn_Set() const;
    bool is_model_arn_Valid() const;

    qint32 getModelVersion() const;
    void setModelVersion(const qint32 &model_version);
    bool is_model_version_Set() const;
    bool is_model_version_Valid() const;

    QString getModelVersionArn() const;
    void setModelVersionArn(const QString &model_version_arn);
    bool is_model_version_arn_Set() const;
    bool is_model_version_arn_Valid() const;

    OAIModelVersionStatus getStatus() const;
    void setStatus(const OAIModelVersionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIModelVersionSourceType getSourceType() const;
    void setSourceType(const OAIModelVersionSourceType &source_type);
    bool is_source_type_Set() const;
    bool is_source_type_Valid() const;

    QString getDatasetName() const;
    void setDatasetName(const QString &dataset_name);
    bool is_dataset_name_Set() const;
    bool is_dataset_name_Valid() const;

    QString getDatasetArn() const;
    void setDatasetArn(const QString &dataset_arn);
    bool is_dataset_arn_Set() const;
    bool is_dataset_arn_Valid() const;

    QString getSchema() const;
    void setSchema(const QString &schema);
    bool is_schema_Set() const;
    bool is_schema_Valid() const;

    OAILabelsInputConfiguration getLabelsInputConfiguration() const;
    void setLabelsInputConfiguration(const OAILabelsInputConfiguration &labels_input_configuration);
    bool is_labels_input_configuration_Set() const;
    bool is_labels_input_configuration_Valid() const;

    QDateTime getTrainingDataStartTime() const;
    void setTrainingDataStartTime(const QDateTime &training_data_start_time);
    bool is_training_data_start_time_Set() const;
    bool is_training_data_start_time_Valid() const;

    QDateTime getTrainingDataEndTime() const;
    void setTrainingDataEndTime(const QDateTime &training_data_end_time);
    bool is_training_data_end_time_Set() const;
    bool is_training_data_end_time_Valid() const;

    QDateTime getEvaluationDataStartTime() const;
    void setEvaluationDataStartTime(const QDateTime &evaluation_data_start_time);
    bool is_evaluation_data_start_time_Set() const;
    bool is_evaluation_data_start_time_Valid() const;

    QDateTime getEvaluationDataEndTime() const;
    void setEvaluationDataEndTime(const QDateTime &evaluation_data_end_time);
    bool is_evaluation_data_end_time_Set() const;
    bool is_evaluation_data_end_time_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    OAIDataPreProcessingConfiguration getDataPreProcessingConfiguration() const;
    void setDataPreProcessingConfiguration(const OAIDataPreProcessingConfiguration &data_pre_processing_configuration);
    bool is_data_pre_processing_configuration_Set() const;
    bool is_data_pre_processing_configuration_Valid() const;

    QDateTime getTrainingExecutionStartTime() const;
    void setTrainingExecutionStartTime(const QDateTime &training_execution_start_time);
    bool is_training_execution_start_time_Set() const;
    bool is_training_execution_start_time_Valid() const;

    QDateTime getTrainingExecutionEndTime() const;
    void setTrainingExecutionEndTime(const QDateTime &training_execution_end_time);
    bool is_training_execution_end_time_Set() const;
    bool is_training_execution_end_time_Valid() const;

    QString getFailedReason() const;
    void setFailedReason(const QString &failed_reason);
    bool is_failed_reason_Set() const;
    bool is_failed_reason_Valid() const;

    QString getModelMetrics() const;
    void setModelMetrics(const QString &model_metrics);
    bool is_model_metrics_Set() const;
    bool is_model_metrics_Valid() const;

    QDateTime getLastUpdatedTime() const;
    void setLastUpdatedTime(const QDateTime &last_updated_time);
    bool is_last_updated_time_Set() const;
    bool is_last_updated_time_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getServerSideKmsKeyId() const;
    void setServerSideKmsKeyId(const QString &server_side_kms_key_id);
    bool is_server_side_kms_key_id_Set() const;
    bool is_server_side_kms_key_id_Valid() const;

    QString getOffCondition() const;
    void setOffCondition(const QString &off_condition);
    bool is_off_condition_Set() const;
    bool is_off_condition_Valid() const;

    QString getSourceModelVersionArn() const;
    void setSourceModelVersionArn(const QString &source_model_version_arn);
    bool is_source_model_version_arn_Set() const;
    bool is_source_model_version_arn_Valid() const;

    QDateTime getImportJobStartTime() const;
    void setImportJobStartTime(const QDateTime &import_job_start_time);
    bool is_import_job_start_time_Set() const;
    bool is_import_job_start_time_Valid() const;

    QDateTime getImportJobEndTime() const;
    void setImportJobEndTime(const QDateTime &import_job_end_time);
    bool is_import_job_end_time_Set() const;
    bool is_import_job_end_time_Valid() const;

    qint32 getImportedDataSizeInBytes() const;
    void setImportedDataSizeInBytes(const qint32 &imported_data_size_in_bytes);
    bool is_imported_data_size_in_bytes_Set() const;
    bool is_imported_data_size_in_bytes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_model_name;
    bool m_model_name_isSet;
    bool m_model_name_isValid;

    QString m_model_arn;
    bool m_model_arn_isSet;
    bool m_model_arn_isValid;

    qint32 m_model_version;
    bool m_model_version_isSet;
    bool m_model_version_isValid;

    QString m_model_version_arn;
    bool m_model_version_arn_isSet;
    bool m_model_version_arn_isValid;

    OAIModelVersionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIModelVersionSourceType m_source_type;
    bool m_source_type_isSet;
    bool m_source_type_isValid;

    QString m_dataset_name;
    bool m_dataset_name_isSet;
    bool m_dataset_name_isValid;

    QString m_dataset_arn;
    bool m_dataset_arn_isSet;
    bool m_dataset_arn_isValid;

    QString m_schema;
    bool m_schema_isSet;
    bool m_schema_isValid;

    OAILabelsInputConfiguration m_labels_input_configuration;
    bool m_labels_input_configuration_isSet;
    bool m_labels_input_configuration_isValid;

    QDateTime m_training_data_start_time;
    bool m_training_data_start_time_isSet;
    bool m_training_data_start_time_isValid;

    QDateTime m_training_data_end_time;
    bool m_training_data_end_time_isSet;
    bool m_training_data_end_time_isValid;

    QDateTime m_evaluation_data_start_time;
    bool m_evaluation_data_start_time_isSet;
    bool m_evaluation_data_start_time_isValid;

    QDateTime m_evaluation_data_end_time;
    bool m_evaluation_data_end_time_isSet;
    bool m_evaluation_data_end_time_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    OAIDataPreProcessingConfiguration m_data_pre_processing_configuration;
    bool m_data_pre_processing_configuration_isSet;
    bool m_data_pre_processing_configuration_isValid;

    QDateTime m_training_execution_start_time;
    bool m_training_execution_start_time_isSet;
    bool m_training_execution_start_time_isValid;

    QDateTime m_training_execution_end_time;
    bool m_training_execution_end_time_isSet;
    bool m_training_execution_end_time_isValid;

    QString m_failed_reason;
    bool m_failed_reason_isSet;
    bool m_failed_reason_isValid;

    QString m_model_metrics;
    bool m_model_metrics_isSet;
    bool m_model_metrics_isValid;

    QDateTime m_last_updated_time;
    bool m_last_updated_time_isSet;
    bool m_last_updated_time_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_server_side_kms_key_id;
    bool m_server_side_kms_key_id_isSet;
    bool m_server_side_kms_key_id_isValid;

    QString m_off_condition;
    bool m_off_condition_isSet;
    bool m_off_condition_isValid;

    QString m_source_model_version_arn;
    bool m_source_model_version_arn_isSet;
    bool m_source_model_version_arn_isValid;

    QDateTime m_import_job_start_time;
    bool m_import_job_start_time_isSet;
    bool m_import_job_start_time_isValid;

    QDateTime m_import_job_end_time;
    bool m_import_job_end_time_isSet;
    bool m_import_job_end_time_isValid;

    qint32 m_imported_data_size_in_bytes;
    bool m_imported_data_size_in_bytes_isSet;
    bool m_imported_data_size_in_bytes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeModelVersionResponse)

#endif // OAIDescribeModelVersionResponse_H
