/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateInferenceSchedulerRequest_DataInputConfiguration.h
 *
 * 
 */

#ifndef OAICreateInferenceSchedulerRequest_DataInputConfiguration_H
#define OAICreateInferenceSchedulerRequest_DataInputConfiguration_H

#include <QJsonObject>

#include "OAIInferenceInputConfiguration_InferenceInputNameConfiguration.h"
#include "OAIInferenceInputConfiguration_S3InputConfiguration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInferenceInputConfiguration_S3InputConfiguration;
class OAIInferenceInputConfiguration_InferenceInputNameConfiguration;

class OAICreateInferenceSchedulerRequest_DataInputConfiguration : public OAIObject {
public:
    OAICreateInferenceSchedulerRequest_DataInputConfiguration();
    OAICreateInferenceSchedulerRequest_DataInputConfiguration(QString json);
    ~OAICreateInferenceSchedulerRequest_DataInputConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIInferenceInputConfiguration_S3InputConfiguration getS3InputConfiguration() const;
    void setS3InputConfiguration(const OAIInferenceInputConfiguration_S3InputConfiguration &s3_input_configuration);
    bool is_s3_input_configuration_Set() const;
    bool is_s3_input_configuration_Valid() const;

    QString getInputTimeZoneOffset() const;
    void setInputTimeZoneOffset(const QString &input_time_zone_offset);
    bool is_input_time_zone_offset_Set() const;
    bool is_input_time_zone_offset_Valid() const;

    OAIInferenceInputConfiguration_InferenceInputNameConfiguration getInferenceInputNameConfiguration() const;
    void setInferenceInputNameConfiguration(const OAIInferenceInputConfiguration_InferenceInputNameConfiguration &inference_input_name_configuration);
    bool is_inference_input_name_configuration_Set() const;
    bool is_inference_input_name_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIInferenceInputConfiguration_S3InputConfiguration m_s3_input_configuration;
    bool m_s3_input_configuration_isSet;
    bool m_s3_input_configuration_isValid;

    QString m_input_time_zone_offset;
    bool m_input_time_zone_offset_isSet;
    bool m_input_time_zone_offset_isValid;

    OAIInferenceInputConfiguration_InferenceInputNameConfiguration m_inference_input_name_configuration;
    bool m_inference_input_name_configuration_isSet;
    bool m_inference_input_name_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateInferenceSchedulerRequest_DataInputConfiguration)

#endif // OAICreateInferenceSchedulerRequest_DataInputConfiguration_H
