/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeInferenceSchedulerResponse.h
 *
 * 
 */

#ifndef OAIDescribeInferenceSchedulerResponse_H
#define OAIDescribeInferenceSchedulerResponse_H

#include <QJsonObject>

#include "OAIDataUploadFrequency.h"
#include "OAIDescribeInferenceSchedulerResponse_DataInputConfiguration.h"
#include "OAIDescribeInferenceSchedulerResponse_DataOutputConfiguration.h"
#include "OAIInferenceSchedulerStatus.h"
#include "OAILatestInferenceResult.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeInferenceSchedulerResponse_DataInputConfiguration;
class OAIDescribeInferenceSchedulerResponse_DataOutputConfiguration;

class OAIDescribeInferenceSchedulerResponse : public OAIObject {
public:
    OAIDescribeInferenceSchedulerResponse();
    OAIDescribeInferenceSchedulerResponse(QString json);
    ~OAIDescribeInferenceSchedulerResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getModelArn() const;
    void setModelArn(const QString &model_arn);
    bool is_model_arn_Set() const;
    bool is_model_arn_Valid() const;

    QString getModelName() const;
    void setModelName(const QString &model_name);
    bool is_model_name_Set() const;
    bool is_model_name_Valid() const;

    QString getInferenceSchedulerName() const;
    void setInferenceSchedulerName(const QString &inference_scheduler_name);
    bool is_inference_scheduler_name_Set() const;
    bool is_inference_scheduler_name_Valid() const;

    QString getInferenceSchedulerArn() const;
    void setInferenceSchedulerArn(const QString &inference_scheduler_arn);
    bool is_inference_scheduler_arn_Set() const;
    bool is_inference_scheduler_arn_Valid() const;

    OAIInferenceSchedulerStatus getStatus() const;
    void setStatus(const OAIInferenceSchedulerStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getDataDelayOffsetInMinutes() const;
    void setDataDelayOffsetInMinutes(const qint32 &data_delay_offset_in_minutes);
    bool is_data_delay_offset_in_minutes_Set() const;
    bool is_data_delay_offset_in_minutes_Valid() const;

    OAIDataUploadFrequency getDataUploadFrequency() const;
    void setDataUploadFrequency(const OAIDataUploadFrequency &data_upload_frequency);
    bool is_data_upload_frequency_Set() const;
    bool is_data_upload_frequency_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIDescribeInferenceSchedulerResponse_DataInputConfiguration getDataInputConfiguration() const;
    void setDataInputConfiguration(const OAIDescribeInferenceSchedulerResponse_DataInputConfiguration &data_input_configuration);
    bool is_data_input_configuration_Set() const;
    bool is_data_input_configuration_Valid() const;

    OAIDescribeInferenceSchedulerResponse_DataOutputConfiguration getDataOutputConfiguration() const;
    void setDataOutputConfiguration(const OAIDescribeInferenceSchedulerResponse_DataOutputConfiguration &data_output_configuration);
    bool is_data_output_configuration_Set() const;
    bool is_data_output_configuration_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QString getServerSideKmsKeyId() const;
    void setServerSideKmsKeyId(const QString &server_side_kms_key_id);
    bool is_server_side_kms_key_id_Set() const;
    bool is_server_side_kms_key_id_Valid() const;

    OAILatestInferenceResult getLatestInferenceResult() const;
    void setLatestInferenceResult(const OAILatestInferenceResult &latest_inference_result);
    bool is_latest_inference_result_Set() const;
    bool is_latest_inference_result_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_model_arn;
    bool m_model_arn_isSet;
    bool m_model_arn_isValid;

    QString m_model_name;
    bool m_model_name_isSet;
    bool m_model_name_isValid;

    QString m_inference_scheduler_name;
    bool m_inference_scheduler_name_isSet;
    bool m_inference_scheduler_name_isValid;

    QString m_inference_scheduler_arn;
    bool m_inference_scheduler_arn_isSet;
    bool m_inference_scheduler_arn_isValid;

    OAIInferenceSchedulerStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_data_delay_offset_in_minutes;
    bool m_data_delay_offset_in_minutes_isSet;
    bool m_data_delay_offset_in_minutes_isValid;

    OAIDataUploadFrequency m_data_upload_frequency;
    bool m_data_upload_frequency_isSet;
    bool m_data_upload_frequency_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIDescribeInferenceSchedulerResponse_DataInputConfiguration m_data_input_configuration;
    bool m_data_input_configuration_isSet;
    bool m_data_input_configuration_isValid;

    OAIDescribeInferenceSchedulerResponse_DataOutputConfiguration m_data_output_configuration;
    bool m_data_output_configuration_isSet;
    bool m_data_output_configuration_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QString m_server_side_kms_key_id;
    bool m_server_side_kms_key_id_isSet;
    bool m_server_side_kms_key_id_isValid;

    OAILatestInferenceResult m_latest_inference_result;
    bool m_latest_inference_result_isSet;
    bool m_latest_inference_result_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeInferenceSchedulerResponse)

#endif // OAIDescribeInferenceSchedulerResponse_H
