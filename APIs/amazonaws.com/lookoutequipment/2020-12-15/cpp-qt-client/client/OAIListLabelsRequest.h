/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListLabelsRequest.h
 *
 * 
 */

#ifndef OAIListLabelsRequest_H
#define OAIListLabelsRequest_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIListLabelsRequest : public OAIObject {
public:
    OAIListLabelsRequest();
    OAIListLabelsRequest(QString json);
    ~OAIListLabelsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLabelGroupName() const;
    void setLabelGroupName(const QString &label_group_name);
    bool is_label_group_name_Set() const;
    bool is_label_group_name_Valid() const;

    QDateTime getIntervalStartTime() const;
    void setIntervalStartTime(const QDateTime &interval_start_time);
    bool is_interval_start_time_Set() const;
    bool is_interval_start_time_Valid() const;

    QDateTime getIntervalEndTime() const;
    void setIntervalEndTime(const QDateTime &interval_end_time);
    bool is_interval_end_time_Set() const;
    bool is_interval_end_time_Valid() const;

    QString getFaultCode() const;
    void setFaultCode(const QString &fault_code);
    bool is_fault_code_Set() const;
    bool is_fault_code_Valid() const;

    QString getEquipment() const;
    void setEquipment(const QString &equipment);
    bool is_equipment_Set() const;
    bool is_equipment_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_label_group_name;
    bool m_label_group_name_isSet;
    bool m_label_group_name_isValid;

    QDateTime m_interval_start_time;
    bool m_interval_start_time_isSet;
    bool m_interval_start_time_isValid;

    QDateTime m_interval_end_time;
    bool m_interval_end_time_isSet;
    bool m_interval_end_time_isValid;

    QString m_fault_code;
    bool m_fault_code_isSet;
    bool m_fault_code_isValid;

    QString m_equipment;
    bool m_equipment_isSet;
    bool m_equipment_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListLabelsRequest)

#endif // OAIListLabelsRequest_H
