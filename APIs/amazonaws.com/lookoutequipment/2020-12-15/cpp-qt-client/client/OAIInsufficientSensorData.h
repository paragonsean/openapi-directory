/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInsufficientSensorData.h
 *
 *  Entity that comprises aggregated information on sensors having insufficient data. 
 */

#ifndef OAIInsufficientSensorData_H
#define OAIInsufficientSensorData_H

#include <QJsonObject>

#include "OAIInsufficientSensorData_MissingCompleteSensorData.h"
#include "OAIInsufficientSensorData_SensorsWithShortDateRange.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInsufficientSensorData_MissingCompleteSensorData;
class OAIInsufficientSensorData_SensorsWithShortDateRange;

class OAIInsufficientSensorData : public OAIObject {
public:
    OAIInsufficientSensorData();
    OAIInsufficientSensorData(QString json);
    ~OAIInsufficientSensorData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIInsufficientSensorData_MissingCompleteSensorData getMissingCompleteSensorData() const;
    void setMissingCompleteSensorData(const OAIInsufficientSensorData_MissingCompleteSensorData &missing_complete_sensor_data);
    bool is_missing_complete_sensor_data_Set() const;
    bool is_missing_complete_sensor_data_Valid() const;

    OAIInsufficientSensorData_SensorsWithShortDateRange getSensorsWithShortDateRange() const;
    void setSensorsWithShortDateRange(const OAIInsufficientSensorData_SensorsWithShortDateRange &sensors_with_short_date_range);
    bool is_sensors_with_short_date_range_Set() const;
    bool is_sensors_with_short_date_range_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIInsufficientSensorData_MissingCompleteSensorData m_missing_complete_sensor_data;
    bool m_missing_complete_sensor_data_isSet;
    bool m_missing_complete_sensor_data_isValid;

    OAIInsufficientSensorData_SensorsWithShortDateRange m_sensors_with_short_date_range;
    bool m_sensors_with_short_date_range_isSet;
    bool m_sensors_with_short_date_range_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInsufficientSensorData)

#endif // OAIInsufficientSensorData_H
