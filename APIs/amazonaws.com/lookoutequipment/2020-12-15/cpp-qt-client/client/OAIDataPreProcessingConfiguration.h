/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataPreProcessingConfiguration.h
 *
 * &lt;p&gt;The configuration is the &lt;code&gt;TargetSamplingRate&lt;/code&gt;, which is the sampling rate of the data after post processing by Amazon Lookout for Equipment. For example, if you provide data that has been collected at a 1 second level and you want the system to resample the data at a 1 minute rate before training, the &lt;code&gt;TargetSamplingRate&lt;/code&gt; is 1 minute.&lt;/p&gt; &lt;p&gt;When providing a value for the &lt;code&gt;TargetSamplingRate&lt;/code&gt;, you must attach the prefix \&quot;PT\&quot; to the rate you want. The value for a 1 second rate is therefore &lt;i&gt;PT1S&lt;/i&gt;, the value for a 15 minute rate is &lt;i&gt;PT15M&lt;/i&gt;, and the value for a 1 hour rate is &lt;i&gt;PT1H&lt;/i&gt; &lt;/p&gt;
 */

#ifndef OAIDataPreProcessingConfiguration_H
#define OAIDataPreProcessingConfiguration_H

#include <QJsonObject>

#include "OAITargetSamplingRate.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDataPreProcessingConfiguration : public OAIObject {
public:
    OAIDataPreProcessingConfiguration();
    OAIDataPreProcessingConfiguration(QString json);
    ~OAIDataPreProcessingConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITargetSamplingRate getTargetSamplingRate() const;
    void setTargetSamplingRate(const OAITargetSamplingRate &target_sampling_rate);
    bool is_target_sampling_rate_Set() const;
    bool is_target_sampling_rate_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITargetSamplingRate m_target_sampling_rate;
    bool m_target_sampling_rate_isSet;
    bool m_target_sampling_rate_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataPreProcessingConfiguration)

#endif // OAIDataPreProcessingConfiguration_H
