/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListInferenceSchedulersRequest.h
 *
 * 
 */

#ifndef OAIListInferenceSchedulersRequest_H
#define OAIListInferenceSchedulersRequest_H

#include <QJsonObject>

#include "OAIInferenceSchedulerStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIListInferenceSchedulersRequest : public OAIObject {
public:
    OAIListInferenceSchedulersRequest();
    OAIListInferenceSchedulersRequest(QString json);
    ~OAIListInferenceSchedulersRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getInferenceSchedulerNameBeginsWith() const;
    void setInferenceSchedulerNameBeginsWith(const QString &inference_scheduler_name_begins_with);
    bool is_inference_scheduler_name_begins_with_Set() const;
    bool is_inference_scheduler_name_begins_with_Valid() const;

    QString getModelName() const;
    void setModelName(const QString &model_name);
    bool is_model_name_Set() const;
    bool is_model_name_Valid() const;

    OAIInferenceSchedulerStatus getStatus() const;
    void setStatus(const OAIInferenceSchedulerStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_inference_scheduler_name_begins_with;
    bool m_inference_scheduler_name_begins_with_isSet;
    bool m_inference_scheduler_name_begins_with_isValid;

    QString m_model_name;
    bool m_model_name_isSet;
    bool m_model_name_isValid;

    OAIInferenceSchedulerStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListInferenceSchedulersRequest)

#endif // OAIListInferenceSchedulersRequest_H
