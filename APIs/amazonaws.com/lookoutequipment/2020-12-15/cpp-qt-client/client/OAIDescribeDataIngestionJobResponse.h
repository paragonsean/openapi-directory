/**
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeDataIngestionJobResponse.h
 *
 * 
 */

#ifndef OAIDescribeDataIngestionJobResponse_H
#define OAIDescribeDataIngestionJobResponse_H

#include <QJsonObject>

#include "OAIDescribeDataIngestionJobResponse_DataQualitySummary.h"
#include "OAIDescribeDataIngestionJobResponse_IngestionInputConfiguration.h"
#include "OAIIngestedFilesSummary.h"
#include "OAIIngestionJobStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeDataIngestionJobResponse_IngestionInputConfiguration;
class OAIDescribeDataIngestionJobResponse_DataQualitySummary;
class OAIIngestedFilesSummary;

class OAIDescribeDataIngestionJobResponse : public OAIObject {
public:
    OAIDescribeDataIngestionJobResponse();
    OAIDescribeDataIngestionJobResponse(QString json);
    ~OAIDescribeDataIngestionJobResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getJobId() const;
    void setJobId(const QString &job_id);
    bool is_job_id_Set() const;
    bool is_job_id_Valid() const;

    QString getDatasetArn() const;
    void setDatasetArn(const QString &dataset_arn);
    bool is_dataset_arn_Set() const;
    bool is_dataset_arn_Valid() const;

    OAIDescribeDataIngestionJobResponse_IngestionInputConfiguration getIngestionInputConfiguration() const;
    void setIngestionInputConfiguration(const OAIDescribeDataIngestionJobResponse_IngestionInputConfiguration &ingestion_input_configuration);
    bool is_ingestion_input_configuration_Set() const;
    bool is_ingestion_input_configuration_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIIngestionJobStatus getStatus() const;
    void setStatus(const OAIIngestionJobStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getFailedReason() const;
    void setFailedReason(const QString &failed_reason);
    bool is_failed_reason_Set() const;
    bool is_failed_reason_Valid() const;

    OAIDescribeDataIngestionJobResponse_DataQualitySummary getDataQualitySummary() const;
    void setDataQualitySummary(const OAIDescribeDataIngestionJobResponse_DataQualitySummary &data_quality_summary);
    bool is_data_quality_summary_Set() const;
    bool is_data_quality_summary_Valid() const;

    OAIIngestedFilesSummary getIngestedFilesSummary() const;
    void setIngestedFilesSummary(const OAIIngestedFilesSummary &ingested_files_summary);
    bool is_ingested_files_summary_Set() const;
    bool is_ingested_files_summary_Valid() const;

    QString getStatusDetail() const;
    void setStatusDetail(const QString &status_detail);
    bool is_status_detail_Set() const;
    bool is_status_detail_Valid() const;

    qint32 getIngestedDataSize() const;
    void setIngestedDataSize(const qint32 &ingested_data_size);
    bool is_ingested_data_size_Set() const;
    bool is_ingested_data_size_Valid() const;

    QDateTime getDataStartTime() const;
    void setDataStartTime(const QDateTime &data_start_time);
    bool is_data_start_time_Set() const;
    bool is_data_start_time_Valid() const;

    QDateTime getDataEndTime() const;
    void setDataEndTime(const QDateTime &data_end_time);
    bool is_data_end_time_Set() const;
    bool is_data_end_time_Valid() const;

    QString getSourceDatasetArn() const;
    void setSourceDatasetArn(const QString &source_dataset_arn);
    bool is_source_dataset_arn_Set() const;
    bool is_source_dataset_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_job_id;
    bool m_job_id_isSet;
    bool m_job_id_isValid;

    QString m_dataset_arn;
    bool m_dataset_arn_isSet;
    bool m_dataset_arn_isValid;

    OAIDescribeDataIngestionJobResponse_IngestionInputConfiguration m_ingestion_input_configuration;
    bool m_ingestion_input_configuration_isSet;
    bool m_ingestion_input_configuration_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIIngestionJobStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_failed_reason;
    bool m_failed_reason_isSet;
    bool m_failed_reason_isValid;

    OAIDescribeDataIngestionJobResponse_DataQualitySummary m_data_quality_summary;
    bool m_data_quality_summary_isSet;
    bool m_data_quality_summary_isValid;

    OAIIngestedFilesSummary m_ingested_files_summary;
    bool m_ingested_files_summary_isSet;
    bool m_ingested_files_summary_isValid;

    QString m_status_detail;
    bool m_status_detail_isSet;
    bool m_status_detail_isValid;

    qint32 m_ingested_data_size;
    bool m_ingested_data_size_isSet;
    bool m_ingested_data_size_isValid;

    QDateTime m_data_start_time;
    bool m_data_start_time_isSet;
    bool m_data_start_time_isValid;

    QDateTime m_data_end_time;
    bool m_data_end_time_isSet;
    bool m_data_end_time_isValid;

    QString m_source_dataset_arn;
    bool m_source_dataset_arn_isSet;
    bool m_source_dataset_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeDataIngestionJobResponse)

#endif // OAIDescribeDataIngestionJobResponse_H
