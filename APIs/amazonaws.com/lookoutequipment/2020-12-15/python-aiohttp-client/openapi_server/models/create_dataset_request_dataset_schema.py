# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateDatasetRequestDatasetSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inline_data_schema: str=None):
        """CreateDatasetRequestDatasetSchema - a model defined in OpenAPI

        :param inline_data_schema: The inline_data_schema of this CreateDatasetRequestDatasetSchema.
        """
        self.openapi_types = {
            'inline_data_schema': str
        }

        self.attribute_map = {
            'inline_data_schema': 'InlineDataSchema'
        }

        self._inline_data_schema = inline_data_schema

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDatasetRequestDatasetSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDatasetRequest_DatasetSchema of this CreateDatasetRequestDatasetSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inline_data_schema(self):
        """Gets the inline_data_schema of this CreateDatasetRequestDatasetSchema.


        :return: The inline_data_schema of this CreateDatasetRequestDatasetSchema.
        :rtype: str
        """
        return self._inline_data_schema

    @inline_data_schema.setter
    def inline_data_schema(self, inline_data_schema):
        """Sets the inline_data_schema of this CreateDatasetRequestDatasetSchema.


        :param inline_data_schema: The inline_data_schema of this CreateDatasetRequestDatasetSchema.
        :type inline_data_schema: str
        """

        self._inline_data_schema = inline_data_schema
