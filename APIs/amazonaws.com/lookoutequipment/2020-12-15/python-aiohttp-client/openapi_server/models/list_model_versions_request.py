# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_version_source_type import ModelVersionSourceType
from openapi_server.models.model_version_status import ModelVersionStatus
from openapi_server import util


class ListModelVersionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_name: str=None, next_token: str=None, max_results: int=None, status: ModelVersionStatus=None, source_type: ModelVersionSourceType=None, created_at_end_time: datetime=None, created_at_start_time: datetime=None, max_model_version: int=None, min_model_version: int=None):
        """ListModelVersionsRequest - a model defined in OpenAPI

        :param model_name: The model_name of this ListModelVersionsRequest.
        :param next_token: The next_token of this ListModelVersionsRequest.
        :param max_results: The max_results of this ListModelVersionsRequest.
        :param status: The status of this ListModelVersionsRequest.
        :param source_type: The source_type of this ListModelVersionsRequest.
        :param created_at_end_time: The created_at_end_time of this ListModelVersionsRequest.
        :param created_at_start_time: The created_at_start_time of this ListModelVersionsRequest.
        :param max_model_version: The max_model_version of this ListModelVersionsRequest.
        :param min_model_version: The min_model_version of this ListModelVersionsRequest.
        """
        self.openapi_types = {
            'model_name': str,
            'next_token': str,
            'max_results': int,
            'status': ModelVersionStatus,
            'source_type': ModelVersionSourceType,
            'created_at_end_time': datetime,
            'created_at_start_time': datetime,
            'max_model_version': int,
            'min_model_version': int
        }

        self.attribute_map = {
            'model_name': 'ModelName',
            'next_token': 'NextToken',
            'max_results': 'MaxResults',
            'status': 'Status',
            'source_type': 'SourceType',
            'created_at_end_time': 'CreatedAtEndTime',
            'created_at_start_time': 'CreatedAtStartTime',
            'max_model_version': 'MaxModelVersion',
            'min_model_version': 'MinModelVersion'
        }

        self._model_name = model_name
        self._next_token = next_token
        self._max_results = max_results
        self._status = status
        self._source_type = source_type
        self._created_at_end_time = created_at_end_time
        self._created_at_start_time = created_at_start_time
        self._max_model_version = max_model_version
        self._min_model_version = min_model_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListModelVersionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListModelVersionsRequest of this ListModelVersionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_name(self):
        """Gets the model_name of this ListModelVersionsRequest.


        :return: The model_name of this ListModelVersionsRequest.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name):
        """Sets the model_name of this ListModelVersionsRequest.


        :param model_name: The model_name of this ListModelVersionsRequest.
        :type model_name: str
        """
        if model_name is None:
            raise ValueError("Invalid value for `model_name`, must not be `None`")

        self._model_name = model_name

    @property
    def next_token(self):
        """Gets the next_token of this ListModelVersionsRequest.


        :return: The next_token of this ListModelVersionsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListModelVersionsRequest.


        :param next_token: The next_token of this ListModelVersionsRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListModelVersionsRequest.


        :return: The max_results of this ListModelVersionsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListModelVersionsRequest.


        :param max_results: The max_results of this ListModelVersionsRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def status(self):
        """Gets the status of this ListModelVersionsRequest.


        :return: The status of this ListModelVersionsRequest.
        :rtype: ModelVersionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ListModelVersionsRequest.


        :param status: The status of this ListModelVersionsRequest.
        :type status: ModelVersionStatus
        """

        self._status = status

    @property
    def source_type(self):
        """Gets the source_type of this ListModelVersionsRequest.


        :return: The source_type of this ListModelVersionsRequest.
        :rtype: ModelVersionSourceType
        """
        return self._source_type

    @source_type.setter
    def source_type(self, source_type):
        """Sets the source_type of this ListModelVersionsRequest.


        :param source_type: The source_type of this ListModelVersionsRequest.
        :type source_type: ModelVersionSourceType
        """

        self._source_type = source_type

    @property
    def created_at_end_time(self):
        """Gets the created_at_end_time of this ListModelVersionsRequest.


        :return: The created_at_end_time of this ListModelVersionsRequest.
        :rtype: datetime
        """
        return self._created_at_end_time

    @created_at_end_time.setter
    def created_at_end_time(self, created_at_end_time):
        """Sets the created_at_end_time of this ListModelVersionsRequest.


        :param created_at_end_time: The created_at_end_time of this ListModelVersionsRequest.
        :type created_at_end_time: datetime
        """

        self._created_at_end_time = created_at_end_time

    @property
    def created_at_start_time(self):
        """Gets the created_at_start_time of this ListModelVersionsRequest.


        :return: The created_at_start_time of this ListModelVersionsRequest.
        :rtype: datetime
        """
        return self._created_at_start_time

    @created_at_start_time.setter
    def created_at_start_time(self, created_at_start_time):
        """Sets the created_at_start_time of this ListModelVersionsRequest.


        :param created_at_start_time: The created_at_start_time of this ListModelVersionsRequest.
        :type created_at_start_time: datetime
        """

        self._created_at_start_time = created_at_start_time

    @property
    def max_model_version(self):
        """Gets the max_model_version of this ListModelVersionsRequest.


        :return: The max_model_version of this ListModelVersionsRequest.
        :rtype: int
        """
        return self._max_model_version

    @max_model_version.setter
    def max_model_version(self, max_model_version):
        """Sets the max_model_version of this ListModelVersionsRequest.


        :param max_model_version: The max_model_version of this ListModelVersionsRequest.
        :type max_model_version: int
        """

        self._max_model_version = max_model_version

    @property
    def min_model_version(self):
        """Gets the min_model_version of this ListModelVersionsRequest.


        :return: The min_model_version of this ListModelVersionsRequest.
        :rtype: int
        """
        return self._min_model_version

    @min_model_version.setter
    def min_model_version(self, min_model_version):
        """Sets the min_model_version of this ListModelVersionsRequest.


        :param min_model_version: The min_model_version of this ListModelVersionsRequest.
        :type min_model_version: int
        """

        self._min_model_version = min_model_version
