# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_model_request_data_pre_processing_configuration import CreateModelRequestDataPreProcessingConfiguration
from openapi_server.models.create_model_request_dataset_schema import CreateModelRequestDatasetSchema
from openapi_server.models.create_model_request_labels_input_configuration import CreateModelRequestLabelsInputConfiguration
from openapi_server import util


class CreateModelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_name: str=None, dataset_name: str=None, dataset_schema: CreateModelRequestDatasetSchema=None, labels_input_configuration: CreateModelRequestLabelsInputConfiguration=None, client_token: str=None, training_data_start_time: datetime=None, training_data_end_time: datetime=None, evaluation_data_start_time: datetime=None, evaluation_data_end_time: datetime=None, role_arn: str=None, data_pre_processing_configuration: CreateModelRequestDataPreProcessingConfiguration=None, server_side_kms_key_id: str=None, tags: List=None, off_condition: str=None):
        """CreateModelRequest - a model defined in OpenAPI

        :param model_name: The model_name of this CreateModelRequest.
        :param dataset_name: The dataset_name of this CreateModelRequest.
        :param dataset_schema: The dataset_schema of this CreateModelRequest.
        :param labels_input_configuration: The labels_input_configuration of this CreateModelRequest.
        :param client_token: The client_token of this CreateModelRequest.
        :param training_data_start_time: The training_data_start_time of this CreateModelRequest.
        :param training_data_end_time: The training_data_end_time of this CreateModelRequest.
        :param evaluation_data_start_time: The evaluation_data_start_time of this CreateModelRequest.
        :param evaluation_data_end_time: The evaluation_data_end_time of this CreateModelRequest.
        :param role_arn: The role_arn of this CreateModelRequest.
        :param data_pre_processing_configuration: The data_pre_processing_configuration of this CreateModelRequest.
        :param server_side_kms_key_id: The server_side_kms_key_id of this CreateModelRequest.
        :param tags: The tags of this CreateModelRequest.
        :param off_condition: The off_condition of this CreateModelRequest.
        """
        self.openapi_types = {
            'model_name': str,
            'dataset_name': str,
            'dataset_schema': CreateModelRequestDatasetSchema,
            'labels_input_configuration': CreateModelRequestLabelsInputConfiguration,
            'client_token': str,
            'training_data_start_time': datetime,
            'training_data_end_time': datetime,
            'evaluation_data_start_time': datetime,
            'evaluation_data_end_time': datetime,
            'role_arn': str,
            'data_pre_processing_configuration': CreateModelRequestDataPreProcessingConfiguration,
            'server_side_kms_key_id': str,
            'tags': List,
            'off_condition': str
        }

        self.attribute_map = {
            'model_name': 'ModelName',
            'dataset_name': 'DatasetName',
            'dataset_schema': 'DatasetSchema',
            'labels_input_configuration': 'LabelsInputConfiguration',
            'client_token': 'ClientToken',
            'training_data_start_time': 'TrainingDataStartTime',
            'training_data_end_time': 'TrainingDataEndTime',
            'evaluation_data_start_time': 'EvaluationDataStartTime',
            'evaluation_data_end_time': 'EvaluationDataEndTime',
            'role_arn': 'RoleArn',
            'data_pre_processing_configuration': 'DataPreProcessingConfiguration',
            'server_side_kms_key_id': 'ServerSideKmsKeyId',
            'tags': 'Tags',
            'off_condition': 'OffCondition'
        }

        self._model_name = model_name
        self._dataset_name = dataset_name
        self._dataset_schema = dataset_schema
        self._labels_input_configuration = labels_input_configuration
        self._client_token = client_token
        self._training_data_start_time = training_data_start_time
        self._training_data_end_time = training_data_end_time
        self._evaluation_data_start_time = evaluation_data_start_time
        self._evaluation_data_end_time = evaluation_data_end_time
        self._role_arn = role_arn
        self._data_pre_processing_configuration = data_pre_processing_configuration
        self._server_side_kms_key_id = server_side_kms_key_id
        self._tags = tags
        self._off_condition = off_condition

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateModelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateModelRequest of this CreateModelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_name(self):
        """Gets the model_name of this CreateModelRequest.


        :return: The model_name of this CreateModelRequest.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name):
        """Sets the model_name of this CreateModelRequest.


        :param model_name: The model_name of this CreateModelRequest.
        :type model_name: str
        """
        if model_name is None:
            raise ValueError("Invalid value for `model_name`, must not be `None`")

        self._model_name = model_name

    @property
    def dataset_name(self):
        """Gets the dataset_name of this CreateModelRequest.


        :return: The dataset_name of this CreateModelRequest.
        :rtype: str
        """
        return self._dataset_name

    @dataset_name.setter
    def dataset_name(self, dataset_name):
        """Sets the dataset_name of this CreateModelRequest.


        :param dataset_name: The dataset_name of this CreateModelRequest.
        :type dataset_name: str
        """
        if dataset_name is None:
            raise ValueError("Invalid value for `dataset_name`, must not be `None`")

        self._dataset_name = dataset_name

    @property
    def dataset_schema(self):
        """Gets the dataset_schema of this CreateModelRequest.


        :return: The dataset_schema of this CreateModelRequest.
        :rtype: CreateModelRequestDatasetSchema
        """
        return self._dataset_schema

    @dataset_schema.setter
    def dataset_schema(self, dataset_schema):
        """Sets the dataset_schema of this CreateModelRequest.


        :param dataset_schema: The dataset_schema of this CreateModelRequest.
        :type dataset_schema: CreateModelRequestDatasetSchema
        """

        self._dataset_schema = dataset_schema

    @property
    def labels_input_configuration(self):
        """Gets the labels_input_configuration of this CreateModelRequest.


        :return: The labels_input_configuration of this CreateModelRequest.
        :rtype: CreateModelRequestLabelsInputConfiguration
        """
        return self._labels_input_configuration

    @labels_input_configuration.setter
    def labels_input_configuration(self, labels_input_configuration):
        """Sets the labels_input_configuration of this CreateModelRequest.


        :param labels_input_configuration: The labels_input_configuration of this CreateModelRequest.
        :type labels_input_configuration: CreateModelRequestLabelsInputConfiguration
        """

        self._labels_input_configuration = labels_input_configuration

    @property
    def client_token(self):
        """Gets the client_token of this CreateModelRequest.


        :return: The client_token of this CreateModelRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this CreateModelRequest.


        :param client_token: The client_token of this CreateModelRequest.
        :type client_token: str
        """
        if client_token is None:
            raise ValueError("Invalid value for `client_token`, must not be `None`")

        self._client_token = client_token

    @property
    def training_data_start_time(self):
        """Gets the training_data_start_time of this CreateModelRequest.


        :return: The training_data_start_time of this CreateModelRequest.
        :rtype: datetime
        """
        return self._training_data_start_time

    @training_data_start_time.setter
    def training_data_start_time(self, training_data_start_time):
        """Sets the training_data_start_time of this CreateModelRequest.


        :param training_data_start_time: The training_data_start_time of this CreateModelRequest.
        :type training_data_start_time: datetime
        """

        self._training_data_start_time = training_data_start_time

    @property
    def training_data_end_time(self):
        """Gets the training_data_end_time of this CreateModelRequest.


        :return: The training_data_end_time of this CreateModelRequest.
        :rtype: datetime
        """
        return self._training_data_end_time

    @training_data_end_time.setter
    def training_data_end_time(self, training_data_end_time):
        """Sets the training_data_end_time of this CreateModelRequest.


        :param training_data_end_time: The training_data_end_time of this CreateModelRequest.
        :type training_data_end_time: datetime
        """

        self._training_data_end_time = training_data_end_time

    @property
    def evaluation_data_start_time(self):
        """Gets the evaluation_data_start_time of this CreateModelRequest.


        :return: The evaluation_data_start_time of this CreateModelRequest.
        :rtype: datetime
        """
        return self._evaluation_data_start_time

    @evaluation_data_start_time.setter
    def evaluation_data_start_time(self, evaluation_data_start_time):
        """Sets the evaluation_data_start_time of this CreateModelRequest.


        :param evaluation_data_start_time: The evaluation_data_start_time of this CreateModelRequest.
        :type evaluation_data_start_time: datetime
        """

        self._evaluation_data_start_time = evaluation_data_start_time

    @property
    def evaluation_data_end_time(self):
        """Gets the evaluation_data_end_time of this CreateModelRequest.


        :return: The evaluation_data_end_time of this CreateModelRequest.
        :rtype: datetime
        """
        return self._evaluation_data_end_time

    @evaluation_data_end_time.setter
    def evaluation_data_end_time(self, evaluation_data_end_time):
        """Sets the evaluation_data_end_time of this CreateModelRequest.


        :param evaluation_data_end_time: The evaluation_data_end_time of this CreateModelRequest.
        :type evaluation_data_end_time: datetime
        """

        self._evaluation_data_end_time = evaluation_data_end_time

    @property
    def role_arn(self):
        """Gets the role_arn of this CreateModelRequest.


        :return: The role_arn of this CreateModelRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreateModelRequest.


        :param role_arn: The role_arn of this CreateModelRequest.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def data_pre_processing_configuration(self):
        """Gets the data_pre_processing_configuration of this CreateModelRequest.


        :return: The data_pre_processing_configuration of this CreateModelRequest.
        :rtype: CreateModelRequestDataPreProcessingConfiguration
        """
        return self._data_pre_processing_configuration

    @data_pre_processing_configuration.setter
    def data_pre_processing_configuration(self, data_pre_processing_configuration):
        """Sets the data_pre_processing_configuration of this CreateModelRequest.


        :param data_pre_processing_configuration: The data_pre_processing_configuration of this CreateModelRequest.
        :type data_pre_processing_configuration: CreateModelRequestDataPreProcessingConfiguration
        """

        self._data_pre_processing_configuration = data_pre_processing_configuration

    @property
    def server_side_kms_key_id(self):
        """Gets the server_side_kms_key_id of this CreateModelRequest.


        :return: The server_side_kms_key_id of this CreateModelRequest.
        :rtype: str
        """
        return self._server_side_kms_key_id

    @server_side_kms_key_id.setter
    def server_side_kms_key_id(self, server_side_kms_key_id):
        """Sets the server_side_kms_key_id of this CreateModelRequest.


        :param server_side_kms_key_id: The server_side_kms_key_id of this CreateModelRequest.
        :type server_side_kms_key_id: str
        """

        self._server_side_kms_key_id = server_side_kms_key_id

    @property
    def tags(self):
        """Gets the tags of this CreateModelRequest.


        :return: The tags of this CreateModelRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateModelRequest.


        :param tags: The tags of this CreateModelRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def off_condition(self):
        """Gets the off_condition of this CreateModelRequest.


        :return: The off_condition of this CreateModelRequest.
        :rtype: str
        """
        return self._off_condition

    @off_condition.setter
    def off_condition(self, off_condition):
        """Sets the off_condition of this CreateModelRequest.


        :param off_condition: The off_condition of this CreateModelRequest.
        :type off_condition: str
        """

        self._off_condition = off_condition
