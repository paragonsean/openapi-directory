# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_version_status import ModelVersionStatus
from openapi_server import util


class ImportModelVersionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_name: str=None, model_arn: str=None, model_version_arn: str=None, model_version: int=None, status: ModelVersionStatus=None):
        """ImportModelVersionResponse - a model defined in OpenAPI

        :param model_name: The model_name of this ImportModelVersionResponse.
        :param model_arn: The model_arn of this ImportModelVersionResponse.
        :param model_version_arn: The model_version_arn of this ImportModelVersionResponse.
        :param model_version: The model_version of this ImportModelVersionResponse.
        :param status: The status of this ImportModelVersionResponse.
        """
        self.openapi_types = {
            'model_name': str,
            'model_arn': str,
            'model_version_arn': str,
            'model_version': int,
            'status': ModelVersionStatus
        }

        self.attribute_map = {
            'model_name': 'ModelName',
            'model_arn': 'ModelArn',
            'model_version_arn': 'ModelVersionArn',
            'model_version': 'ModelVersion',
            'status': 'Status'
        }

        self._model_name = model_name
        self._model_arn = model_arn
        self._model_version_arn = model_version_arn
        self._model_version = model_version
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportModelVersionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportModelVersionResponse of this ImportModelVersionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_name(self):
        """Gets the model_name of this ImportModelVersionResponse.


        :return: The model_name of this ImportModelVersionResponse.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name):
        """Sets the model_name of this ImportModelVersionResponse.


        :param model_name: The model_name of this ImportModelVersionResponse.
        :type model_name: str
        """

        self._model_name = model_name

    @property
    def model_arn(self):
        """Gets the model_arn of this ImportModelVersionResponse.


        :return: The model_arn of this ImportModelVersionResponse.
        :rtype: str
        """
        return self._model_arn

    @model_arn.setter
    def model_arn(self, model_arn):
        """Sets the model_arn of this ImportModelVersionResponse.


        :param model_arn: The model_arn of this ImportModelVersionResponse.
        :type model_arn: str
        """

        self._model_arn = model_arn

    @property
    def model_version_arn(self):
        """Gets the model_version_arn of this ImportModelVersionResponse.


        :return: The model_version_arn of this ImportModelVersionResponse.
        :rtype: str
        """
        return self._model_version_arn

    @model_version_arn.setter
    def model_version_arn(self, model_version_arn):
        """Sets the model_version_arn of this ImportModelVersionResponse.


        :param model_version_arn: The model_version_arn of this ImportModelVersionResponse.
        :type model_version_arn: str
        """

        self._model_version_arn = model_version_arn

    @property
    def model_version(self):
        """Gets the model_version of this ImportModelVersionResponse.


        :return: The model_version of this ImportModelVersionResponse.
        :rtype: int
        """
        return self._model_version

    @model_version.setter
    def model_version(self, model_version):
        """Sets the model_version of this ImportModelVersionResponse.


        :param model_version: The model_version of this ImportModelVersionResponse.
        :type model_version: int
        """

        self._model_version = model_version

    @property
    def status(self):
        """Gets the status of this ImportModelVersionResponse.


        :return: The status of this ImportModelVersionResponse.
        :rtype: ModelVersionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ImportModelVersionResponse.


        :param status: The status of this ImportModelVersionResponse.
        :type status: ModelVersionStatus
        """

        self._status = status
