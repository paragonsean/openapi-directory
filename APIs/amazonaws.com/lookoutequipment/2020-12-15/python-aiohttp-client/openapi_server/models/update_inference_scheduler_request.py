# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_upload_frequency import DataUploadFrequency
from openapi_server.models.update_inference_scheduler_request_data_input_configuration import UpdateInferenceSchedulerRequestDataInputConfiguration
from openapi_server.models.update_inference_scheduler_request_data_output_configuration import UpdateInferenceSchedulerRequestDataOutputConfiguration
from openapi_server import util


class UpdateInferenceSchedulerRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inference_scheduler_name: str=None, data_delay_offset_in_minutes: int=None, data_upload_frequency: DataUploadFrequency=None, data_input_configuration: UpdateInferenceSchedulerRequestDataInputConfiguration=None, data_output_configuration: UpdateInferenceSchedulerRequestDataOutputConfiguration=None, role_arn: str=None):
        """UpdateInferenceSchedulerRequest - a model defined in OpenAPI

        :param inference_scheduler_name: The inference_scheduler_name of this UpdateInferenceSchedulerRequest.
        :param data_delay_offset_in_minutes: The data_delay_offset_in_minutes of this UpdateInferenceSchedulerRequest.
        :param data_upload_frequency: The data_upload_frequency of this UpdateInferenceSchedulerRequest.
        :param data_input_configuration: The data_input_configuration of this UpdateInferenceSchedulerRequest.
        :param data_output_configuration: The data_output_configuration of this UpdateInferenceSchedulerRequest.
        :param role_arn: The role_arn of this UpdateInferenceSchedulerRequest.
        """
        self.openapi_types = {
            'inference_scheduler_name': str,
            'data_delay_offset_in_minutes': int,
            'data_upload_frequency': DataUploadFrequency,
            'data_input_configuration': UpdateInferenceSchedulerRequestDataInputConfiguration,
            'data_output_configuration': UpdateInferenceSchedulerRequestDataOutputConfiguration,
            'role_arn': str
        }

        self.attribute_map = {
            'inference_scheduler_name': 'InferenceSchedulerName',
            'data_delay_offset_in_minutes': 'DataDelayOffsetInMinutes',
            'data_upload_frequency': 'DataUploadFrequency',
            'data_input_configuration': 'DataInputConfiguration',
            'data_output_configuration': 'DataOutputConfiguration',
            'role_arn': 'RoleArn'
        }

        self._inference_scheduler_name = inference_scheduler_name
        self._data_delay_offset_in_minutes = data_delay_offset_in_minutes
        self._data_upload_frequency = data_upload_frequency
        self._data_input_configuration = data_input_configuration
        self._data_output_configuration = data_output_configuration
        self._role_arn = role_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateInferenceSchedulerRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateInferenceSchedulerRequest of this UpdateInferenceSchedulerRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inference_scheduler_name(self):
        """Gets the inference_scheduler_name of this UpdateInferenceSchedulerRequest.


        :return: The inference_scheduler_name of this UpdateInferenceSchedulerRequest.
        :rtype: str
        """
        return self._inference_scheduler_name

    @inference_scheduler_name.setter
    def inference_scheduler_name(self, inference_scheduler_name):
        """Sets the inference_scheduler_name of this UpdateInferenceSchedulerRequest.


        :param inference_scheduler_name: The inference_scheduler_name of this UpdateInferenceSchedulerRequest.
        :type inference_scheduler_name: str
        """
        if inference_scheduler_name is None:
            raise ValueError("Invalid value for `inference_scheduler_name`, must not be `None`")

        self._inference_scheduler_name = inference_scheduler_name

    @property
    def data_delay_offset_in_minutes(self):
        """Gets the data_delay_offset_in_minutes of this UpdateInferenceSchedulerRequest.


        :return: The data_delay_offset_in_minutes of this UpdateInferenceSchedulerRequest.
        :rtype: int
        """
        return self._data_delay_offset_in_minutes

    @data_delay_offset_in_minutes.setter
    def data_delay_offset_in_minutes(self, data_delay_offset_in_minutes):
        """Sets the data_delay_offset_in_minutes of this UpdateInferenceSchedulerRequest.


        :param data_delay_offset_in_minutes: The data_delay_offset_in_minutes of this UpdateInferenceSchedulerRequest.
        :type data_delay_offset_in_minutes: int
        """

        self._data_delay_offset_in_minutes = data_delay_offset_in_minutes

    @property
    def data_upload_frequency(self):
        """Gets the data_upload_frequency of this UpdateInferenceSchedulerRequest.


        :return: The data_upload_frequency of this UpdateInferenceSchedulerRequest.
        :rtype: DataUploadFrequency
        """
        return self._data_upload_frequency

    @data_upload_frequency.setter
    def data_upload_frequency(self, data_upload_frequency):
        """Sets the data_upload_frequency of this UpdateInferenceSchedulerRequest.


        :param data_upload_frequency: The data_upload_frequency of this UpdateInferenceSchedulerRequest.
        :type data_upload_frequency: DataUploadFrequency
        """

        self._data_upload_frequency = data_upload_frequency

    @property
    def data_input_configuration(self):
        """Gets the data_input_configuration of this UpdateInferenceSchedulerRequest.


        :return: The data_input_configuration of this UpdateInferenceSchedulerRequest.
        :rtype: UpdateInferenceSchedulerRequestDataInputConfiguration
        """
        return self._data_input_configuration

    @data_input_configuration.setter
    def data_input_configuration(self, data_input_configuration):
        """Sets the data_input_configuration of this UpdateInferenceSchedulerRequest.


        :param data_input_configuration: The data_input_configuration of this UpdateInferenceSchedulerRequest.
        :type data_input_configuration: UpdateInferenceSchedulerRequestDataInputConfiguration
        """

        self._data_input_configuration = data_input_configuration

    @property
    def data_output_configuration(self):
        """Gets the data_output_configuration of this UpdateInferenceSchedulerRequest.


        :return: The data_output_configuration of this UpdateInferenceSchedulerRequest.
        :rtype: UpdateInferenceSchedulerRequestDataOutputConfiguration
        """
        return self._data_output_configuration

    @data_output_configuration.setter
    def data_output_configuration(self, data_output_configuration):
        """Sets the data_output_configuration of this UpdateInferenceSchedulerRequest.


        :param data_output_configuration: The data_output_configuration of this UpdateInferenceSchedulerRequest.
        :type data_output_configuration: UpdateInferenceSchedulerRequestDataOutputConfiguration
        """

        self._data_output_configuration = data_output_configuration

    @property
    def role_arn(self):
        """Gets the role_arn of this UpdateInferenceSchedulerRequest.


        :return: The role_arn of this UpdateInferenceSchedulerRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this UpdateInferenceSchedulerRequest.


        :param role_arn: The role_arn of this UpdateInferenceSchedulerRequest.
        :type role_arn: str
        """

        self._role_arn = role_arn
