# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.target_sampling_rate import TargetSamplingRate
from openapi_server import util


class DataPreProcessingConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_sampling_rate: TargetSamplingRate=None):
        """DataPreProcessingConfiguration - a model defined in OpenAPI

        :param target_sampling_rate: The target_sampling_rate of this DataPreProcessingConfiguration.
        """
        self.openapi_types = {
            'target_sampling_rate': TargetSamplingRate
        }

        self.attribute_map = {
            'target_sampling_rate': 'TargetSamplingRate'
        }

        self._target_sampling_rate = target_sampling_rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataPreProcessingConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataPreProcessingConfiguration of this DataPreProcessingConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_sampling_rate(self):
        """Gets the target_sampling_rate of this DataPreProcessingConfiguration.


        :return: The target_sampling_rate of this DataPreProcessingConfiguration.
        :rtype: TargetSamplingRate
        """
        return self._target_sampling_rate

    @target_sampling_rate.setter
    def target_sampling_rate(self, target_sampling_rate):
        """Sets the target_sampling_rate of this DataPreProcessingConfiguration.


        :param target_sampling_rate: The target_sampling_rate of this DataPreProcessingConfiguration.
        :type target_sampling_rate: TargetSamplingRate
        """

        self._target_sampling_rate = target_sampling_rate
