# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.inference_input_configuration_inference_input_name_configuration import InferenceInputConfigurationInferenceInputNameConfiguration
from openapi_server.models.inference_input_configuration_s3_input_configuration import InferenceInputConfigurationS3InputConfiguration
from openapi_server import util


class DescribeInferenceSchedulerResponseDataInputConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_input_configuration: InferenceInputConfigurationS3InputConfiguration=None, input_time_zone_offset: str=None, inference_input_name_configuration: InferenceInputConfigurationInferenceInputNameConfiguration=None):
        """DescribeInferenceSchedulerResponseDataInputConfiguration - a model defined in OpenAPI

        :param s3_input_configuration: The s3_input_configuration of this DescribeInferenceSchedulerResponseDataInputConfiguration.
        :param input_time_zone_offset: The input_time_zone_offset of this DescribeInferenceSchedulerResponseDataInputConfiguration.
        :param inference_input_name_configuration: The inference_input_name_configuration of this DescribeInferenceSchedulerResponseDataInputConfiguration.
        """
        self.openapi_types = {
            's3_input_configuration': InferenceInputConfigurationS3InputConfiguration,
            'input_time_zone_offset': str,
            'inference_input_name_configuration': InferenceInputConfigurationInferenceInputNameConfiguration
        }

        self.attribute_map = {
            's3_input_configuration': 'S3InputConfiguration',
            'input_time_zone_offset': 'InputTimeZoneOffset',
            'inference_input_name_configuration': 'InferenceInputNameConfiguration'
        }

        self._s3_input_configuration = s3_input_configuration
        self._input_time_zone_offset = input_time_zone_offset
        self._inference_input_name_configuration = inference_input_name_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeInferenceSchedulerResponseDataInputConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeInferenceSchedulerResponse_DataInputConfiguration of this DescribeInferenceSchedulerResponseDataInputConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_input_configuration(self):
        """Gets the s3_input_configuration of this DescribeInferenceSchedulerResponseDataInputConfiguration.


        :return: The s3_input_configuration of this DescribeInferenceSchedulerResponseDataInputConfiguration.
        :rtype: InferenceInputConfigurationS3InputConfiguration
        """
        return self._s3_input_configuration

    @s3_input_configuration.setter
    def s3_input_configuration(self, s3_input_configuration):
        """Sets the s3_input_configuration of this DescribeInferenceSchedulerResponseDataInputConfiguration.


        :param s3_input_configuration: The s3_input_configuration of this DescribeInferenceSchedulerResponseDataInputConfiguration.
        :type s3_input_configuration: InferenceInputConfigurationS3InputConfiguration
        """

        self._s3_input_configuration = s3_input_configuration

    @property
    def input_time_zone_offset(self):
        """Gets the input_time_zone_offset of this DescribeInferenceSchedulerResponseDataInputConfiguration.


        :return: The input_time_zone_offset of this DescribeInferenceSchedulerResponseDataInputConfiguration.
        :rtype: str
        """
        return self._input_time_zone_offset

    @input_time_zone_offset.setter
    def input_time_zone_offset(self, input_time_zone_offset):
        """Sets the input_time_zone_offset of this DescribeInferenceSchedulerResponseDataInputConfiguration.


        :param input_time_zone_offset: The input_time_zone_offset of this DescribeInferenceSchedulerResponseDataInputConfiguration.
        :type input_time_zone_offset: str
        """

        self._input_time_zone_offset = input_time_zone_offset

    @property
    def inference_input_name_configuration(self):
        """Gets the inference_input_name_configuration of this DescribeInferenceSchedulerResponseDataInputConfiguration.


        :return: The inference_input_name_configuration of this DescribeInferenceSchedulerResponseDataInputConfiguration.
        :rtype: InferenceInputConfigurationInferenceInputNameConfiguration
        """
        return self._inference_input_name_configuration

    @inference_input_name_configuration.setter
    def inference_input_name_configuration(self, inference_input_name_configuration):
        """Sets the inference_input_name_configuration of this DescribeInferenceSchedulerResponseDataInputConfiguration.


        :param inference_input_name_configuration: The inference_input_name_configuration of this DescribeInferenceSchedulerResponseDataInputConfiguration.
        :type inference_input_name_configuration: InferenceInputConfigurationInferenceInputNameConfiguration
        """

        self._inference_input_name_configuration = inference_input_name_configuration
