# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateActiveModelVersionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_name: str=None, model_arn: str=None, current_active_version: int=None, previous_active_version: int=None, current_active_version_arn: str=None, previous_active_version_arn: str=None):
        """UpdateActiveModelVersionResponse - a model defined in OpenAPI

        :param model_name: The model_name of this UpdateActiveModelVersionResponse.
        :param model_arn: The model_arn of this UpdateActiveModelVersionResponse.
        :param current_active_version: The current_active_version of this UpdateActiveModelVersionResponse.
        :param previous_active_version: The previous_active_version of this UpdateActiveModelVersionResponse.
        :param current_active_version_arn: The current_active_version_arn of this UpdateActiveModelVersionResponse.
        :param previous_active_version_arn: The previous_active_version_arn of this UpdateActiveModelVersionResponse.
        """
        self.openapi_types = {
            'model_name': str,
            'model_arn': str,
            'current_active_version': int,
            'previous_active_version': int,
            'current_active_version_arn': str,
            'previous_active_version_arn': str
        }

        self.attribute_map = {
            'model_name': 'ModelName',
            'model_arn': 'ModelArn',
            'current_active_version': 'CurrentActiveVersion',
            'previous_active_version': 'PreviousActiveVersion',
            'current_active_version_arn': 'CurrentActiveVersionArn',
            'previous_active_version_arn': 'PreviousActiveVersionArn'
        }

        self._model_name = model_name
        self._model_arn = model_arn
        self._current_active_version = current_active_version
        self._previous_active_version = previous_active_version
        self._current_active_version_arn = current_active_version_arn
        self._previous_active_version_arn = previous_active_version_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateActiveModelVersionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateActiveModelVersionResponse of this UpdateActiveModelVersionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_name(self):
        """Gets the model_name of this UpdateActiveModelVersionResponse.


        :return: The model_name of this UpdateActiveModelVersionResponse.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name):
        """Sets the model_name of this UpdateActiveModelVersionResponse.


        :param model_name: The model_name of this UpdateActiveModelVersionResponse.
        :type model_name: str
        """

        self._model_name = model_name

    @property
    def model_arn(self):
        """Gets the model_arn of this UpdateActiveModelVersionResponse.


        :return: The model_arn of this UpdateActiveModelVersionResponse.
        :rtype: str
        """
        return self._model_arn

    @model_arn.setter
    def model_arn(self, model_arn):
        """Sets the model_arn of this UpdateActiveModelVersionResponse.


        :param model_arn: The model_arn of this UpdateActiveModelVersionResponse.
        :type model_arn: str
        """

        self._model_arn = model_arn

    @property
    def current_active_version(self):
        """Gets the current_active_version of this UpdateActiveModelVersionResponse.


        :return: The current_active_version of this UpdateActiveModelVersionResponse.
        :rtype: int
        """
        return self._current_active_version

    @current_active_version.setter
    def current_active_version(self, current_active_version):
        """Sets the current_active_version of this UpdateActiveModelVersionResponse.


        :param current_active_version: The current_active_version of this UpdateActiveModelVersionResponse.
        :type current_active_version: int
        """

        self._current_active_version = current_active_version

    @property
    def previous_active_version(self):
        """Gets the previous_active_version of this UpdateActiveModelVersionResponse.


        :return: The previous_active_version of this UpdateActiveModelVersionResponse.
        :rtype: int
        """
        return self._previous_active_version

    @previous_active_version.setter
    def previous_active_version(self, previous_active_version):
        """Sets the previous_active_version of this UpdateActiveModelVersionResponse.


        :param previous_active_version: The previous_active_version of this UpdateActiveModelVersionResponse.
        :type previous_active_version: int
        """

        self._previous_active_version = previous_active_version

    @property
    def current_active_version_arn(self):
        """Gets the current_active_version_arn of this UpdateActiveModelVersionResponse.


        :return: The current_active_version_arn of this UpdateActiveModelVersionResponse.
        :rtype: str
        """
        return self._current_active_version_arn

    @current_active_version_arn.setter
    def current_active_version_arn(self, current_active_version_arn):
        """Sets the current_active_version_arn of this UpdateActiveModelVersionResponse.


        :param current_active_version_arn: The current_active_version_arn of this UpdateActiveModelVersionResponse.
        :type current_active_version_arn: str
        """

        self._current_active_version_arn = current_active_version_arn

    @property
    def previous_active_version_arn(self):
        """Gets the previous_active_version_arn of this UpdateActiveModelVersionResponse.


        :return: The previous_active_version_arn of this UpdateActiveModelVersionResponse.
        :rtype: str
        """
        return self._previous_active_version_arn

    @previous_active_version_arn.setter
    def previous_active_version_arn(self, previous_active_version_arn):
        """Sets the previous_active_version_arn of this UpdateActiveModelVersionResponse.


        :param previous_active_version_arn: The previous_active_version_arn of this UpdateActiveModelVersionResponse.
        :type previous_active_version_arn: str
        """

        self._previous_active_version_arn = previous_active_version_arn
