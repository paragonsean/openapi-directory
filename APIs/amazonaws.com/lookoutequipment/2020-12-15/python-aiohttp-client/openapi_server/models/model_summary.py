# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_status import ModelStatus
from openapi_server import util


class ModelSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_name: str=None, model_arn: str=None, dataset_name: str=None, dataset_arn: str=None, status: ModelStatus=None, created_at: datetime=None, active_model_version: int=None, active_model_version_arn: str=None):
        """ModelSummary - a model defined in OpenAPI

        :param model_name: The model_name of this ModelSummary.
        :param model_arn: The model_arn of this ModelSummary.
        :param dataset_name: The dataset_name of this ModelSummary.
        :param dataset_arn: The dataset_arn of this ModelSummary.
        :param status: The status of this ModelSummary.
        :param created_at: The created_at of this ModelSummary.
        :param active_model_version: The active_model_version of this ModelSummary.
        :param active_model_version_arn: The active_model_version_arn of this ModelSummary.
        """
        self.openapi_types = {
            'model_name': str,
            'model_arn': str,
            'dataset_name': str,
            'dataset_arn': str,
            'status': ModelStatus,
            'created_at': datetime,
            'active_model_version': int,
            'active_model_version_arn': str
        }

        self.attribute_map = {
            'model_name': 'ModelName',
            'model_arn': 'ModelArn',
            'dataset_name': 'DatasetName',
            'dataset_arn': 'DatasetArn',
            'status': 'Status',
            'created_at': 'CreatedAt',
            'active_model_version': 'ActiveModelVersion',
            'active_model_version_arn': 'ActiveModelVersionArn'
        }

        self._model_name = model_name
        self._model_arn = model_arn
        self._dataset_name = dataset_name
        self._dataset_arn = dataset_arn
        self._status = status
        self._created_at = created_at
        self._active_model_version = active_model_version
        self._active_model_version_arn = active_model_version_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModelSummary of this ModelSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_name(self):
        """Gets the model_name of this ModelSummary.


        :return: The model_name of this ModelSummary.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name):
        """Sets the model_name of this ModelSummary.


        :param model_name: The model_name of this ModelSummary.
        :type model_name: str
        """

        self._model_name = model_name

    @property
    def model_arn(self):
        """Gets the model_arn of this ModelSummary.


        :return: The model_arn of this ModelSummary.
        :rtype: str
        """
        return self._model_arn

    @model_arn.setter
    def model_arn(self, model_arn):
        """Sets the model_arn of this ModelSummary.


        :param model_arn: The model_arn of this ModelSummary.
        :type model_arn: str
        """

        self._model_arn = model_arn

    @property
    def dataset_name(self):
        """Gets the dataset_name of this ModelSummary.


        :return: The dataset_name of this ModelSummary.
        :rtype: str
        """
        return self._dataset_name

    @dataset_name.setter
    def dataset_name(self, dataset_name):
        """Sets the dataset_name of this ModelSummary.


        :param dataset_name: The dataset_name of this ModelSummary.
        :type dataset_name: str
        """

        self._dataset_name = dataset_name

    @property
    def dataset_arn(self):
        """Gets the dataset_arn of this ModelSummary.


        :return: The dataset_arn of this ModelSummary.
        :rtype: str
        """
        return self._dataset_arn

    @dataset_arn.setter
    def dataset_arn(self, dataset_arn):
        """Sets the dataset_arn of this ModelSummary.


        :param dataset_arn: The dataset_arn of this ModelSummary.
        :type dataset_arn: str
        """

        self._dataset_arn = dataset_arn

    @property
    def status(self):
        """Gets the status of this ModelSummary.


        :return: The status of this ModelSummary.
        :rtype: ModelStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ModelSummary.


        :param status: The status of this ModelSummary.
        :type status: ModelStatus
        """

        self._status = status

    @property
    def created_at(self):
        """Gets the created_at of this ModelSummary.


        :return: The created_at of this ModelSummary.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ModelSummary.


        :param created_at: The created_at of this ModelSummary.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def active_model_version(self):
        """Gets the active_model_version of this ModelSummary.


        :return: The active_model_version of this ModelSummary.
        :rtype: int
        """
        return self._active_model_version

    @active_model_version.setter
    def active_model_version(self, active_model_version):
        """Sets the active_model_version of this ModelSummary.


        :param active_model_version: The active_model_version of this ModelSummary.
        :type active_model_version: int
        """

        self._active_model_version = active_model_version

    @property
    def active_model_version_arn(self):
        """Gets the active_model_version_arn of this ModelSummary.


        :return: The active_model_version_arn of this ModelSummary.
        :rtype: str
        """
        return self._active_model_version_arn

    @active_model_version_arn.setter
    def active_model_version_arn(self, active_model_version_arn):
        """Sets the active_model_version_arn of this ModelSummary.


        :param active_model_version_arn: The active_model_version_arn of this ModelSummary.
        :type active_model_version_arn: str
        """

        self._active_model_version_arn = active_model_version_arn
