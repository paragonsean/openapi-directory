# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_inference_scheduler_response_data_input_configuration import DescribeInferenceSchedulerResponseDataInputConfiguration
from openapi_server.models.inference_execution_status import InferenceExecutionStatus
from openapi_server.models.inference_execution_summary_customer_result_object import InferenceExecutionSummaryCustomerResultObject
from openapi_server.models.inference_execution_summary_data_output_configuration import InferenceExecutionSummaryDataOutputConfiguration
from openapi_server import util


class InferenceExecutionSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_name: str=None, model_arn: str=None, inference_scheduler_name: str=None, inference_scheduler_arn: str=None, scheduled_start_time: datetime=None, data_start_time: datetime=None, data_end_time: datetime=None, data_input_configuration: DescribeInferenceSchedulerResponseDataInputConfiguration=None, data_output_configuration: InferenceExecutionSummaryDataOutputConfiguration=None, customer_result_object: InferenceExecutionSummaryCustomerResultObject=None, status: InferenceExecutionStatus=None, failed_reason: str=None):
        """InferenceExecutionSummary - a model defined in OpenAPI

        :param model_name: The model_name of this InferenceExecutionSummary.
        :param model_arn: The model_arn of this InferenceExecutionSummary.
        :param inference_scheduler_name: The inference_scheduler_name of this InferenceExecutionSummary.
        :param inference_scheduler_arn: The inference_scheduler_arn of this InferenceExecutionSummary.
        :param scheduled_start_time: The scheduled_start_time of this InferenceExecutionSummary.
        :param data_start_time: The data_start_time of this InferenceExecutionSummary.
        :param data_end_time: The data_end_time of this InferenceExecutionSummary.
        :param data_input_configuration: The data_input_configuration of this InferenceExecutionSummary.
        :param data_output_configuration: The data_output_configuration of this InferenceExecutionSummary.
        :param customer_result_object: The customer_result_object of this InferenceExecutionSummary.
        :param status: The status of this InferenceExecutionSummary.
        :param failed_reason: The failed_reason of this InferenceExecutionSummary.
        """
        self.openapi_types = {
            'model_name': str,
            'model_arn': str,
            'inference_scheduler_name': str,
            'inference_scheduler_arn': str,
            'scheduled_start_time': datetime,
            'data_start_time': datetime,
            'data_end_time': datetime,
            'data_input_configuration': DescribeInferenceSchedulerResponseDataInputConfiguration,
            'data_output_configuration': InferenceExecutionSummaryDataOutputConfiguration,
            'customer_result_object': InferenceExecutionSummaryCustomerResultObject,
            'status': InferenceExecutionStatus,
            'failed_reason': str
        }

        self.attribute_map = {
            'model_name': 'ModelName',
            'model_arn': 'ModelArn',
            'inference_scheduler_name': 'InferenceSchedulerName',
            'inference_scheduler_arn': 'InferenceSchedulerArn',
            'scheduled_start_time': 'ScheduledStartTime',
            'data_start_time': 'DataStartTime',
            'data_end_time': 'DataEndTime',
            'data_input_configuration': 'DataInputConfiguration',
            'data_output_configuration': 'DataOutputConfiguration',
            'customer_result_object': 'CustomerResultObject',
            'status': 'Status',
            'failed_reason': 'FailedReason'
        }

        self._model_name = model_name
        self._model_arn = model_arn
        self._inference_scheduler_name = inference_scheduler_name
        self._inference_scheduler_arn = inference_scheduler_arn
        self._scheduled_start_time = scheduled_start_time
        self._data_start_time = data_start_time
        self._data_end_time = data_end_time
        self._data_input_configuration = data_input_configuration
        self._data_output_configuration = data_output_configuration
        self._customer_result_object = customer_result_object
        self._status = status
        self._failed_reason = failed_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InferenceExecutionSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InferenceExecutionSummary of this InferenceExecutionSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_name(self):
        """Gets the model_name of this InferenceExecutionSummary.


        :return: The model_name of this InferenceExecutionSummary.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name):
        """Sets the model_name of this InferenceExecutionSummary.


        :param model_name: The model_name of this InferenceExecutionSummary.
        :type model_name: str
        """

        self._model_name = model_name

    @property
    def model_arn(self):
        """Gets the model_arn of this InferenceExecutionSummary.


        :return: The model_arn of this InferenceExecutionSummary.
        :rtype: str
        """
        return self._model_arn

    @model_arn.setter
    def model_arn(self, model_arn):
        """Sets the model_arn of this InferenceExecutionSummary.


        :param model_arn: The model_arn of this InferenceExecutionSummary.
        :type model_arn: str
        """

        self._model_arn = model_arn

    @property
    def inference_scheduler_name(self):
        """Gets the inference_scheduler_name of this InferenceExecutionSummary.


        :return: The inference_scheduler_name of this InferenceExecutionSummary.
        :rtype: str
        """
        return self._inference_scheduler_name

    @inference_scheduler_name.setter
    def inference_scheduler_name(self, inference_scheduler_name):
        """Sets the inference_scheduler_name of this InferenceExecutionSummary.


        :param inference_scheduler_name: The inference_scheduler_name of this InferenceExecutionSummary.
        :type inference_scheduler_name: str
        """

        self._inference_scheduler_name = inference_scheduler_name

    @property
    def inference_scheduler_arn(self):
        """Gets the inference_scheduler_arn of this InferenceExecutionSummary.


        :return: The inference_scheduler_arn of this InferenceExecutionSummary.
        :rtype: str
        """
        return self._inference_scheduler_arn

    @inference_scheduler_arn.setter
    def inference_scheduler_arn(self, inference_scheduler_arn):
        """Sets the inference_scheduler_arn of this InferenceExecutionSummary.


        :param inference_scheduler_arn: The inference_scheduler_arn of this InferenceExecutionSummary.
        :type inference_scheduler_arn: str
        """

        self._inference_scheduler_arn = inference_scheduler_arn

    @property
    def scheduled_start_time(self):
        """Gets the scheduled_start_time of this InferenceExecutionSummary.


        :return: The scheduled_start_time of this InferenceExecutionSummary.
        :rtype: datetime
        """
        return self._scheduled_start_time

    @scheduled_start_time.setter
    def scheduled_start_time(self, scheduled_start_time):
        """Sets the scheduled_start_time of this InferenceExecutionSummary.


        :param scheduled_start_time: The scheduled_start_time of this InferenceExecutionSummary.
        :type scheduled_start_time: datetime
        """

        self._scheduled_start_time = scheduled_start_time

    @property
    def data_start_time(self):
        """Gets the data_start_time of this InferenceExecutionSummary.


        :return: The data_start_time of this InferenceExecutionSummary.
        :rtype: datetime
        """
        return self._data_start_time

    @data_start_time.setter
    def data_start_time(self, data_start_time):
        """Sets the data_start_time of this InferenceExecutionSummary.


        :param data_start_time: The data_start_time of this InferenceExecutionSummary.
        :type data_start_time: datetime
        """

        self._data_start_time = data_start_time

    @property
    def data_end_time(self):
        """Gets the data_end_time of this InferenceExecutionSummary.


        :return: The data_end_time of this InferenceExecutionSummary.
        :rtype: datetime
        """
        return self._data_end_time

    @data_end_time.setter
    def data_end_time(self, data_end_time):
        """Sets the data_end_time of this InferenceExecutionSummary.


        :param data_end_time: The data_end_time of this InferenceExecutionSummary.
        :type data_end_time: datetime
        """

        self._data_end_time = data_end_time

    @property
    def data_input_configuration(self):
        """Gets the data_input_configuration of this InferenceExecutionSummary.


        :return: The data_input_configuration of this InferenceExecutionSummary.
        :rtype: DescribeInferenceSchedulerResponseDataInputConfiguration
        """
        return self._data_input_configuration

    @data_input_configuration.setter
    def data_input_configuration(self, data_input_configuration):
        """Sets the data_input_configuration of this InferenceExecutionSummary.


        :param data_input_configuration: The data_input_configuration of this InferenceExecutionSummary.
        :type data_input_configuration: DescribeInferenceSchedulerResponseDataInputConfiguration
        """

        self._data_input_configuration = data_input_configuration

    @property
    def data_output_configuration(self):
        """Gets the data_output_configuration of this InferenceExecutionSummary.


        :return: The data_output_configuration of this InferenceExecutionSummary.
        :rtype: InferenceExecutionSummaryDataOutputConfiguration
        """
        return self._data_output_configuration

    @data_output_configuration.setter
    def data_output_configuration(self, data_output_configuration):
        """Sets the data_output_configuration of this InferenceExecutionSummary.


        :param data_output_configuration: The data_output_configuration of this InferenceExecutionSummary.
        :type data_output_configuration: InferenceExecutionSummaryDataOutputConfiguration
        """

        self._data_output_configuration = data_output_configuration

    @property
    def customer_result_object(self):
        """Gets the customer_result_object of this InferenceExecutionSummary.


        :return: The customer_result_object of this InferenceExecutionSummary.
        :rtype: InferenceExecutionSummaryCustomerResultObject
        """
        return self._customer_result_object

    @customer_result_object.setter
    def customer_result_object(self, customer_result_object):
        """Sets the customer_result_object of this InferenceExecutionSummary.


        :param customer_result_object: The customer_result_object of this InferenceExecutionSummary.
        :type customer_result_object: InferenceExecutionSummaryCustomerResultObject
        """

        self._customer_result_object = customer_result_object

    @property
    def status(self):
        """Gets the status of this InferenceExecutionSummary.


        :return: The status of this InferenceExecutionSummary.
        :rtype: InferenceExecutionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InferenceExecutionSummary.


        :param status: The status of this InferenceExecutionSummary.
        :type status: InferenceExecutionStatus
        """

        self._status = status

    @property
    def failed_reason(self):
        """Gets the failed_reason of this InferenceExecutionSummary.


        :return: The failed_reason of this InferenceExecutionSummary.
        :rtype: str
        """
        return self._failed_reason

    @failed_reason.setter
    def failed_reason(self, failed_reason):
        """Sets the failed_reason of this InferenceExecutionSummary.


        :param failed_reason: The failed_reason of this InferenceExecutionSummary.
        :type failed_reason: str
        """

        self._failed_reason = failed_reason
