# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.inference_output_configuration_s3_output_configuration import InferenceOutputConfigurationS3OutputConfiguration
from openapi_server import util


class InferenceExecutionSummaryDataOutputConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_output_configuration: InferenceOutputConfigurationS3OutputConfiguration=None, kms_key_id: str=None):
        """InferenceExecutionSummaryDataOutputConfiguration - a model defined in OpenAPI

        :param s3_output_configuration: The s3_output_configuration of this InferenceExecutionSummaryDataOutputConfiguration.
        :param kms_key_id: The kms_key_id of this InferenceExecutionSummaryDataOutputConfiguration.
        """
        self.openapi_types = {
            's3_output_configuration': InferenceOutputConfigurationS3OutputConfiguration,
            'kms_key_id': str
        }

        self.attribute_map = {
            's3_output_configuration': 'S3OutputConfiguration',
            'kms_key_id': 'KmsKeyId'
        }

        self._s3_output_configuration = s3_output_configuration
        self._kms_key_id = kms_key_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InferenceExecutionSummaryDataOutputConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InferenceExecutionSummary_DataOutputConfiguration of this InferenceExecutionSummaryDataOutputConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_output_configuration(self):
        """Gets the s3_output_configuration of this InferenceExecutionSummaryDataOutputConfiguration.


        :return: The s3_output_configuration of this InferenceExecutionSummaryDataOutputConfiguration.
        :rtype: InferenceOutputConfigurationS3OutputConfiguration
        """
        return self._s3_output_configuration

    @s3_output_configuration.setter
    def s3_output_configuration(self, s3_output_configuration):
        """Sets the s3_output_configuration of this InferenceExecutionSummaryDataOutputConfiguration.


        :param s3_output_configuration: The s3_output_configuration of this InferenceExecutionSummaryDataOutputConfiguration.
        :type s3_output_configuration: InferenceOutputConfigurationS3OutputConfiguration
        """
        if s3_output_configuration is None:
            raise ValueError("Invalid value for `s3_output_configuration`, must not be `None`")

        self._s3_output_configuration = s3_output_configuration

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this InferenceExecutionSummaryDataOutputConfiguration.


        :return: The kms_key_id of this InferenceExecutionSummaryDataOutputConfiguration.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this InferenceExecutionSummaryDataOutputConfiguration.


        :param kms_key_id: The kms_key_id of this InferenceExecutionSummaryDataOutputConfiguration.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id
