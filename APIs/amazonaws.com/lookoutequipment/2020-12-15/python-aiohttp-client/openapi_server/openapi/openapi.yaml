openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: 'Amazon Lookout for Equipment is a machine learning service that uses
    advanced analytics to identify anomalies in machines from sensor data for use
    in predictive maintenance. '
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Lookout for Equipment
  version: 2020-12-15
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: lookoutequipment
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lookoutequipment-2020-12-15.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/lookoutequipment/
servers:
- description: The LookoutEquipment multi-region endpoint
  url: "http://lookoutequipment.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The LookoutEquipment multi-region endpoint
  url: "https://lookoutequipment.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The LookoutEquipment endpoint for China (Beijing) and China (Ningxia)
  url: "http://lookoutequipment.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The LookoutEquipment endpoint for China (Beijing) and China (Ningxia)
  url: "https://lookoutequipment.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.CreateDataset:
    post:
      description: "Creates a container for a collection of data being ingested for\
        \ analysis. The dataset contains the metadata describing where the data is\
        \ and what the data actually looks like. For example, it contains the location\
        \ of the data source, the data schema, and other information. A dataset also\
        \ contains any tags associated with the ingested data. "
      operationId: create_dataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.CreateDataset
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.CreateInferenceScheduler:
    post:
      description: " Creates a scheduled inference. Scheduling an inference is setting\
        \ up a continuous real-time inference plan to analyze new measurement data.\
        \ When setting up the schedule, you provide an S3 bucket location for the\
        \ input data, assign it a delimiter between separate entries in the data,\
        \ set an offset delay if desired, and set the frequency of inferencing. You\
        \ must also provide an S3 bucket location for the output data. "
      operationId: create_inference_scheduler
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.CreateInferenceScheduler
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInferenceSchedulerRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInferenceSchedulerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.CreateLabel:
    post:
      description: ' Creates a label for an event. '
      operationId: create_label
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.CreateLabel
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLabelRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLabelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.CreateLabelGroup:
    post:
      description: ' Creates a group of labels. '
      operationId: create_label_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.CreateLabelGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLabelGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLabelGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.CreateModel:
    post:
      description: "<p>Creates an ML model for data inference. </p> <p>A machine-learning\
        \ (ML) model is a mathematical model that finds patterns in your data. In\
        \ Amazon Lookout for Equipment, the model learns the patterns of normal behavior\
        \ and detects abnormal behavior that could be potential equipment failure\
        \ (or maintenance events). The models are made by analyzing normal data and\
        \ abnormalities in machine behavior that have already occurred.</p> <p>Your\
        \ model is trained using a portion of the data from your dataset and uses\
        \ that data to learn patterns of normal behavior and abnormal patterns that\
        \ lead to equipment failure. Another portion of the data is used to evaluate\
        \ the model's accuracy. </p>"
      operationId: create_model
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.CreateModel
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModelRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateModelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DeleteDataset:
    post:
      description: " Deletes a dataset and associated artifacts. The operation will\
        \ check to see if any inference scheduler or data ingestion job is currently\
        \ using the dataset, and if there isn't, the dataset, its metadata, and any\
        \ associated data stored in S3 will be deleted. This does not affect any models\
        \ that used this dataset for training and evaluation, but does prevent it\
        \ from being used in the future. "
      operationId: delete_dataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.DeleteDataset
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDatasetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DeleteInferenceScheduler:
    post:
      description: 'Deletes an inference scheduler that has been set up. Already processed
        output results are not affected. '
      operationId: delete_inference_scheduler
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.DeleteInferenceScheduler
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteInferenceSchedulerRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DeleteLabel:
    post:
      description: ' Deletes a label. '
      operationId: delete_label
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.DeleteLabel
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLabelRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DeleteLabelGroup:
    post:
      description: ' Deletes a group of labels. '
      operationId: delete_label_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.DeleteLabelGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLabelGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DeleteModel:
    post:
      description: "Deletes an ML model currently available for Amazon Lookout for\
        \ Equipment. This will prevent it from being used with an inference scheduler,\
        \ even one that is already set up. "
      operationId: delete_model
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.DeleteModel
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteModelRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DeleteResourcePolicy:
    post:
      description: Deletes the resource policy attached to the resource.
      operationId: delete_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.DeleteResourcePolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourcePolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DescribeDataIngestionJob:
    post:
      description: "Provides information on a specific data ingestion job such as\
        \ creation time, dataset ARN, and status."
      operationId: describe_data_ingestion_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.DescribeDataIngestionJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDataIngestionJobRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDataIngestionJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DescribeDataset:
    post:
      description: "Provides a JSON description of the data in each time series dataset,\
        \ including names, column names, and data types."
      operationId: describe_dataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.DescribeDataset
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDatasetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DescribeInferenceScheduler:
    post:
      description: " Specifies information about the inference scheduler being used,\
        \ including name, model, status, and associated metadata "
      operationId: describe_inference_scheduler
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.DescribeInferenceScheduler
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeInferenceSchedulerRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInferenceSchedulerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DescribeLabel:
    post:
      description: ' Returns the name of the label. '
      operationId: describe_label
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.DescribeLabel
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeLabelRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLabelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DescribeLabelGroup:
    post:
      description: ' Returns information about the label group. '
      operationId: describe_label_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.DescribeLabelGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeLabelGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLabelGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DescribeModel:
    post:
      description: "Provides a JSON containing the overall information about a specific\
        \ ML model, including model name and ARN, dataset, training and evaluation\
        \ information, status, and so on. "
      operationId: describe_model
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.DescribeModel
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeModelRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeModelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DescribeModelVersion:
    post:
      description: Retrieves information about a specific machine learning model version.
      operationId: describe_model_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.DescribeModelVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeModelVersionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeModelVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.DescribeResourcePolicy:
    post:
      description: Provides the details of a resource policy attached to a resource.
      operationId: describe_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.DescribeResourcePolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeResourcePolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ImportDataset:
    post:
      description: Imports a dataset.
      operationId: import_dataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.ImportDataset
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportDatasetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportDatasetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ImportModelVersion:
    post:
      description: Imports a model that has been trained successfully.
      operationId: import_model_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.ImportModelVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportModelVersionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportModelVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListDataIngestionJobs:
    post:
      description: "Provides a list of all data ingestion jobs, including dataset\
        \ name and ARN, S3 location of the input data, status, and so on. "
      operationId: list_data_ingestion_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.ListDataIngestionJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDataIngestionJobsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataIngestionJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListDatasets:
    post:
      description: "Lists all datasets currently available in your account, filtering\
        \ on the dataset name. "
      operationId: list_datasets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.ListDatasets
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatasetsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListInferenceEvents:
    post:
      description: ' Lists all inference events that have been found for the specified
        inference scheduler. '
      operationId: list_inference_events
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.ListInferenceEvents
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInferenceEventsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInferenceEventsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListInferenceExecutions:
    post:
      description: ' Lists all inference executions that have been performed by the
        specified inference scheduler. '
      operationId: list_inference_executions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.ListInferenceExecutions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInferenceExecutionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInferenceExecutionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListInferenceSchedulers:
    post:
      description: 'Retrieves a list of all inference schedulers currently available
        for your account. '
      operationId: list_inference_schedulers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.ListInferenceSchedulers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInferenceSchedulersRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInferenceSchedulersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListLabelGroups:
    post:
      description: ' Returns a list of the label groups. '
      operationId: list_label_groups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.ListLabelGroups
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLabelGroupsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLabelGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListLabels:
    post:
      description: ' Provides a list of labels. '
      operationId: list_labels
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.ListLabels
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLabelsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLabelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListModelVersions:
    post:
      description: "Generates a list of all model versions for a given model, including\
        \ the model version, model version ARN, and status. To list a subset of versions,\
        \ use the <code>MaxModelVersion</code> and <code>MinModelVersion</code> fields."
      operationId: list_model_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.ListModelVersions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListModelVersionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListModels:
    post:
      description: "Generates a list of all models in the account, including model\
        \ name and ARN, dataset, and status. "
      operationId: list_models
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.ListModels
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListModelsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListSensorStatistics:
    post:
      description: ' Lists statistics about the data collected for each of the sensors
        that have been successfully ingested in the particular dataset. Can also be
        used to retreive Sensor Statistics for a previous ingestion job. '
      operationId: list_sensor_statistics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.ListSensorStatistics
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSensorStatisticsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSensorStatisticsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.ListTagsForResource:
    post:
      description: "Lists all the tags for a specified resource, including key and\
        \ value. "
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.PutResourcePolicy:
    post:
      description: Creates a resource control policy for a given resource.
      operationId: put_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.PutResourcePolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourcePolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.StartDataIngestionJob:
    post:
      description: 'Starts a data ingestion job. Amazon Lookout for Equipment returns
        the job status. '
      operationId: start_data_ingestion_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.StartDataIngestionJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDataIngestionJobRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDataIngestionJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.StartInferenceScheduler:
    post:
      description: 'Starts an inference scheduler. '
      operationId: start_inference_scheduler
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.StartInferenceScheduler
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartInferenceSchedulerRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartInferenceSchedulerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.StopInferenceScheduler:
    post:
      description: 'Stops an inference scheduler. '
      operationId: stop_inference_scheduler
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.StopInferenceScheduler
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopInferenceSchedulerRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopInferenceSchedulerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.TagResource:
    post:
      description: "Associates a given tag to a resource in your account. A tag is\
        \ a key-value pair which can be added to an Amazon Lookout for Equipment resource\
        \ as metadata. Tags can be used for organizing your resources as well as helping\
        \ you to search and filter by tag. Multiple tags can be added to a resource,\
        \ either when you create it, or later. Up to 50 tags can be associated with\
        \ each resource. "
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.UntagResource:
    post:
      description: 'Removes a specific tag from a given resource. The tag is specified
        by its key. '
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.UpdateActiveModelVersion:
    post:
      description: Sets the active model version for a given machine learning model.
      operationId: update_active_model_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.UpdateActiveModelVersion
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActiveModelVersionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateActiveModelVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.UpdateInferenceScheduler:
    post:
      description: 'Updates an inference scheduler. '
      operationId: update_inference_scheduler
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.UpdateInferenceScheduler
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInferenceSchedulerRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSLookoutEquipmentFrontendService.UpdateLabelGroup:
    post:
      description: ' Updates the label group. '
      operationId: update_label_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSLookoutEquipmentFrontendService.UpdateLabelGroup
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLabelGroupRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateDatasetResponse:
      example:
        Status: ""
        DatasetArn: ""
        DatasetName: ""
      properties:
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          - description: 'The name of the dataset being created. '
          title: DatasetName
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/DatasetArn'
          - description: ' The Amazon Resource Name (ARN) of the dataset being created. '
          title: DatasetArn
        Status:
          allOf:
          - $ref: '#/components/schemas/DatasetStatus'
          - description: 'Indicates the status of the <code>CreateDataset</code> operation. '
          title: Status
      title: CreateDatasetResponse
      type: object
    CreateDatasetRequest:
      example:
        DatasetName: ""
        DatasetSchema:
          InlineDataSchema: ""
        ServerSideKmsKeyId: ""
        ClientToken: ""
        Tags: ""
      properties:
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          - description: 'The name of the dataset being created. '
          title: DatasetName
        DatasetSchema:
          $ref: '#/components/schemas/CreateDatasetRequest_DatasetSchema'
        ServerSideKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NameOrArn'
          - description: 'Provides the identifier of the KMS key used to encrypt dataset
              data by Amazon Lookout for Equipment. '
          title: ServerSideKmsKeyId
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotenceToken'
          - description: " A unique identifier for the request. If you do not set\
              \ the client request token, Amazon Lookout for Equipment generates one. "
          title: ClientToken
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: 'Any tags associated with the ingested data described in
              the dataset. '
          title: Tags
      required:
      - ClientToken
      - DatasetName
      title: CreateDatasetRequest
      type: object
    ValidationException: {}
    ConflictException: {}
    ThrottlingException: {}
    ServiceQuotaExceededException: {}
    AccessDeniedException: {}
    InternalServerException: {}
    CreateInferenceSchedulerResponse:
      example:
        InferenceSchedulerName: ""
        Status: ""
        InferenceSchedulerArn: ""
      properties:
        InferenceSchedulerArn:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerArn'
          - description: 'The Amazon Resource Name (ARN) of the inference scheduler
              being created. '
          title: InferenceSchedulerArn
        InferenceSchedulerName:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerName'
          - description: 'The name of inference scheduler being created. '
          title: InferenceSchedulerName
        Status:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerStatus'
          - description: 'Indicates the status of the <code>CreateInferenceScheduler</code>
              operation. '
          title: Status
      title: CreateInferenceSchedulerResponse
      type: object
    CreateInferenceSchedulerRequest:
      example:
        InferenceSchedulerName: ""
        DataUploadFrequency: ""
        ModelName: ""
        DataInputConfiguration:
          InferenceInputNameConfiguration:
            ComponentTimestampDelimiter: ""
            TimestampFormat: ""
          S3InputConfiguration:
            Bucket: ""
            Prefix: ""
          InputTimeZoneOffset: ""
        DataOutputConfiguration:
          KmsKeyId: ""
          S3OutputConfiguration:
            Bucket: ""
            Prefix: ""
        ServerSideKmsKeyId: ""
        ClientToken: ""
        DataDelayOffsetInMinutes: ""
        RoleArn: ""
        Tags: ""
      properties:
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: 'The name of the previously trained ML model being used to
              create the inference scheduler. '
          title: ModelName
        InferenceSchedulerName:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerName'
          - description: 'The name of the inference scheduler being created. '
          title: InferenceSchedulerName
        DataDelayOffsetInMinutes:
          allOf:
          - $ref: '#/components/schemas/DataDelayOffsetInMinutes'
          - description: "<p>The interval (in minutes) of planned delay at the start\
              \ of each inference segment. For example, if inference is set to run\
              \ every ten minutes, the delay is set to five minutes and the time is\
              \ 09:08. The inference scheduler will wake up at the configured interval\
              \ (which, without a delay configured, would be 09:10) plus the additional\
              \ five minute delay time (so 09:15) to check your Amazon S3 bucket.\
              \ The delay provides a buffer for you to upload data at the same frequency,\
              \ so that you don't have to stop and restart the scheduler when uploading\
              \ new data.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/lookout-for-equipment/latest/ug/understanding-inference-process.html\"\
              >Understanding the inference process</a>.</p>"
          title: DataDelayOffsetInMinutes
        DataUploadFrequency:
          allOf:
          - $ref: '#/components/schemas/DataUploadFrequency'
          - description: "<p> How often data is uploaded to the source Amazon S3 bucket\
              \ for the input data. The value chosen is the length of time between\
              \ data uploads. For instance, if you select 5 minutes, Amazon Lookout\
              \ for Equipment will upload the real-time data to the source bucket\
              \ once every 5 minutes. This frequency also determines how often Amazon\
              \ Lookout for Equipment runs inference on your data.</p> <p>For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/lookout-for-equipment/latest/ug/understanding-inference-process.html\"\
              >Understanding the inference process</a>.</p>"
          title: DataUploadFrequency
        DataInputConfiguration:
          $ref: '#/components/schemas/CreateInferenceSchedulerRequest_DataInputConfiguration'
        DataOutputConfiguration:
          $ref: '#/components/schemas/CreateInferenceSchedulerRequest_DataOutputConfiguration'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: 'The Amazon Resource Name (ARN) of a role with permission
              to access the data source being used for the inference. '
          title: RoleArn
        ServerSideKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NameOrArn'
          - description: 'Provides the identifier of the KMS key used to encrypt inference
              scheduler data by Amazon Lookout for Equipment. '
          title: ServerSideKmsKeyId
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotenceToken'
          - description: " A unique identifier for the request. If you do not set\
              \ the client request token, Amazon Lookout for Equipment generates one. "
          title: ClientToken
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: 'Any tags associated with the inference scheduler. '
          title: Tags
      required:
      - ClientToken
      - DataInputConfiguration
      - DataOutputConfiguration
      - DataUploadFrequency
      - InferenceSchedulerName
      - ModelName
      - RoleArn
      title: CreateInferenceSchedulerRequest
      type: object
    ResourceNotFoundException: {}
    CreateLabelResponse:
      example:
        LabelId: ""
      properties:
        LabelId:
          allOf:
          - $ref: '#/components/schemas/LabelId'
          - description: ' The ID of the label that you have created. '
          title: LabelId
      title: CreateLabelResponse
      type: object
    CreateLabelRequest:
      example:
        FaultCode: ""
        EndTime: ""
        Equipment: ""
        Rating: ""
        StartTime: ""
        LabelGroupName: ""
        ClientToken: ""
        Notes: ""
      properties:
        LabelGroupName:
          allOf:
          - $ref: '#/components/schemas/LabelGroupName'
          - description: <p> The name of a group of labels. </p> <p>Data in this field
              will be retained for service usage. Follow best practices for the security
              of your data. </p>
          title: LabelGroupName
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The start time of the labeled event. '
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The end time of the labeled event. '
          title: EndTime
        Rating:
          allOf:
          - $ref: '#/components/schemas/LabelRating'
          - description: ' Indicates whether a labeled event represents an anomaly. '
          title: Rating
        FaultCode:
          allOf:
          - $ref: '#/components/schemas/FaultCode'
          - description: <p> Provides additional information about the label. The
              fault code must be defined in the FaultCodes attribute of the label
              group.</p> <p>Data in this field will be retained for service usage.
              Follow best practices for the security of your data. </p>
          title: FaultCode
        Notes:
          allOf:
          - $ref: '#/components/schemas/Comments'
          - description: <p> Metadata providing additional information about the label.
              </p> <p>Data in this field will be retained for service usage. Follow
              best practices for the security of your data.</p>
          title: Notes
        Equipment:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          - description: <p> Indicates that a label pertains to a particular piece
              of equipment. </p> <p>Data in this field will be retained for service
              usage. Follow best practices for the security of your data.</p>
          title: Equipment
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotenceToken'
          - description: " A unique identifier for the request to create a label.\
              \ If you do not set the client request token, Lookout for Equipment\
              \ generates one. "
          title: ClientToken
      required:
      - ClientToken
      - EndTime
      - LabelGroupName
      - Rating
      - StartTime
      title: CreateLabelRequest
      type: object
    CreateLabelGroupResponse:
      example:
        LabelGroupArn: ""
        LabelGroupName: ""
      properties:
        LabelGroupName:
          allOf:
          - $ref: '#/components/schemas/LabelGroupName'
          - description: ' The name of the label group that you have created. Data
              in this field will be retained for service usage. Follow best practices
              for the security of your data. '
          title: LabelGroupName
        LabelGroupArn:
          allOf:
          - $ref: '#/components/schemas/LabelGroupArn'
          - description: ' The Amazon Resource Name (ARN) of the label group that
              you have created. '
          title: LabelGroupArn
      title: CreateLabelGroupResponse
      type: object
    CreateLabelGroupRequest:
      example:
        FaultCodes: ""
        LabelGroupName: ""
        ClientToken: ""
        Tags: ""
      properties:
        LabelGroupName:
          allOf:
          - $ref: '#/components/schemas/LabelGroupName'
          - description: <p> Names a group of labels.</p> <p>Data in this field will
              be retained for service usage. Follow best practices for the security
              of your data. </p>
          title: LabelGroupName
        FaultCodes:
          allOf:
          - $ref: '#/components/schemas/FaultCodes'
          - description: <p> The acceptable fault codes (indicating the type of anomaly
              associated with the label) that can be used with this label group.</p>
              <p>Data in this field will be retained for service usage. Follow best
              practices for the security of your data.</p>
          title: FaultCodes
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotenceToken'
          - description: " A unique identifier for the request to create a label group.\
              \ If you do not set the client request token, Lookout for Equipment\
              \ generates one. "
          title: ClientToken
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: <p> Tags that provide metadata about the label group you
              are creating. </p> <p>Data in this field will be retained for service
              usage. Follow best practices for the security of your data.</p>
          title: Tags
      required:
      - ClientToken
      - LabelGroupName
      title: CreateLabelGroupRequest
      type: object
    CreateModelResponse:
      example:
        ModelArn: ""
        Status: ""
      properties:
        ModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          - description: 'The Amazon Resource Name (ARN) of the model being created. '
          title: ModelArn
        Status:
          allOf:
          - $ref: '#/components/schemas/ModelStatus'
          - description: 'Indicates the status of the <code>CreateModel</code> operation. '
          title: Status
      title: CreateModelResponse
      type: object
    CreateModelRequest:
      example:
        DataPreProcessingConfiguration:
          TargetSamplingRate: ""
        ModelName: ""
        OffCondition: ""
        DatasetSchema:
          InlineDataSchema: ""
        ServerSideKmsKeyId: ""
        TrainingDataEndTime: ""
        RoleArn: ""
        EvaluationDataStartTime: ""
        EvaluationDataEndTime: ""
        DatasetName: ""
        LabelsInputConfiguration:
          S3InputConfiguration:
            Bucket: ""
            Prefix: ""
          LabelGroupName: ""
        ClientToken: ""
        TrainingDataStartTime: ""
        Tags: ""
      properties:
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: The name for the ML model to be created.
          title: ModelName
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetIdentifier'
          - description: 'The name of the dataset for the ML model being created. '
          title: DatasetName
        DatasetSchema:
          $ref: '#/components/schemas/CreateModelRequest_DatasetSchema'
        LabelsInputConfiguration:
          $ref: '#/components/schemas/CreateModelRequest_LabelsInputConfiguration'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotenceToken'
          - description: "A unique identifier for the request. If you do not set the\
              \ client request token, Amazon Lookout for Equipment generates one. "
          title: ClientToken
        TrainingDataStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'Indicates the time reference in the dataset that should
              be used to begin the subset of training data for the ML model. '
          title: TrainingDataStartTime
        TrainingDataEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'Indicates the time reference in the dataset that should
              be used to end the subset of training data for the ML model. '
          title: TrainingDataEndTime
        EvaluationDataStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'Indicates the time reference in the dataset that should
              be used to begin the subset of evaluation data for the ML model. '
          title: EvaluationDataStartTime
        EvaluationDataEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' Indicates the time reference in the dataset that should
              be used to end the subset of evaluation data for the ML model. '
          title: EvaluationDataEndTime
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: ' The Amazon Resource Name (ARN) of a role with permission
              to access the data source being used to create the ML model. '
          title: RoleArn
        DataPreProcessingConfiguration:
          $ref: '#/components/schemas/CreateModelRequest_DataPreProcessingConfiguration'
        ServerSideKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NameOrArn'
          - description: 'Provides the identifier of the KMS key used to encrypt model
              data by Amazon Lookout for Equipment. '
          title: ServerSideKmsKeyId
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: ' Any tags associated with the ML model being created. '
          title: Tags
        OffCondition:
          allOf:
          - $ref: '#/components/schemas/OffCondition'
          - description: "Indicates that the asset associated with this sensor has\
              \ been shut off. As long as this condition is met, Lookout for Equipment\
              \ will not use data from this asset for training, evaluation, or inference."
          title: OffCondition
      required:
      - ClientToken
      - DatasetName
      - ModelName
      title: CreateModelRequest
      type: object
    DeleteDatasetRequest:
      example:
        DatasetName: ""
      properties:
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetIdentifier'
          - description: 'The name of the dataset to be deleted. '
          title: DatasetName
      required:
      - DatasetName
      title: DeleteDatasetRequest
      type: object
    DeleteInferenceSchedulerRequest:
      example:
        InferenceSchedulerName: ""
      properties:
        InferenceSchedulerName:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerIdentifier'
          - description: 'The name of the inference scheduler to be deleted. '
          title: InferenceSchedulerName
      required:
      - InferenceSchedulerName
      title: DeleteInferenceSchedulerRequest
      type: object
    DeleteLabelRequest:
      example:
        LabelGroupName: ""
        LabelId: ""
      properties:
        LabelGroupName:
          allOf:
          - $ref: '#/components/schemas/LabelGroupName'
          - description: ' The name of the label group that contains the label that
              you want to delete. Data in this field will be retained for service
              usage. Follow best practices for the security of your data. '
          title: LabelGroupName
        LabelId:
          allOf:
          - $ref: '#/components/schemas/LabelId'
          - description: ' The ID of the label that you want to delete. '
          title: LabelId
      required:
      - LabelGroupName
      - LabelId
      title: DeleteLabelRequest
      type: object
    DeleteLabelGroupRequest:
      example:
        LabelGroupName: ""
      properties:
        LabelGroupName:
          allOf:
          - $ref: '#/components/schemas/LabelGroupName'
          - description: ' The name of the label group that you want to delete. Data
              in this field will be retained for service usage. Follow best practices
              for the security of your data. '
          title: LabelGroupName
      required:
      - LabelGroupName
      title: DeleteLabelGroupRequest
      type: object
    DeleteModelRequest:
      example:
        ModelName: ""
      properties:
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: 'The name of the ML model to be deleted. '
          title: ModelName
      required:
      - ModelName
      title: DeleteModelRequest
      type: object
    DeleteResourcePolicyRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the resource for which
              the resource policy should be deleted.
          title: ResourceArn
      required:
      - ResourceArn
      title: DeleteResourcePolicyRequest
      type: object
    DescribeDataIngestionJobResponse:
      example:
        Status: ""
        IngestedDataSize: ""
        IngestedFilesSummary:
          IngestedNumberOfFiles: ""
          DiscardedFiles: ""
          TotalNumberOfFiles: ""
        CreatedAt: ""
        FailedReason: ""
        SourceDatasetArn: ""
        DataEndTime: ""
        RoleArn: ""
        DataQualitySummary:
          InsufficientSensorData:
            MissingCompleteSensorData:
              AffectedSensorCount: ""
            SensorsWithShortDateRange:
              AffectedSensorCount: ""
          DuplicateTimestamps:
            TotalNumberOfDuplicateTimestamps: ""
          MissingSensorData:
            TotalNumberOfMissingValues: ""
            AffectedSensorCount: ""
          UnsupportedTimestamps:
            TotalNumberOfUnsupportedTimestamps: ""
          InvalidSensorData:
            TotalNumberOfInvalidValues: ""
            AffectedSensorCount: ""
        DatasetArn: ""
        StatusDetail: ""
        IngestionInputConfiguration:
          S3InputConfiguration:
            KeyPattern: ""
            Bucket: ""
            Prefix: ""
        DataStartTime: ""
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/IngestionJobId'
          - description: 'Indicates the job ID of the data ingestion job. '
          title: JobId
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/DatasetArn'
          - description: 'The Amazon Resource Name (ARN) of the dataset being used
              in the data ingestion job. '
          title: DatasetArn
        IngestionInputConfiguration:
          $ref: '#/components/schemas/DescribeDataIngestionJobResponse_IngestionInputConfiguration'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: 'The Amazon Resource Name (ARN) of an IAM role with permission
              to access the data source being ingested. '
          title: RoleArn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'The time at which the data ingestion job was created. '
          title: CreatedAt
        Status:
          allOf:
          - $ref: '#/components/schemas/IngestionJobStatus'
          - description: 'Indicates the status of the <code>DataIngestionJob</code>
              operation. '
          title: Status
        FailedReason:
          allOf:
          - $ref: '#/components/schemas/BoundedLengthString'
          - description: 'Specifies the reason for failure when a data ingestion job
              has failed. '
          title: FailedReason
        DataQualitySummary:
          $ref: '#/components/schemas/DescribeDataIngestionJobResponse_DataQualitySummary'
        IngestedFilesSummary:
          $ref: '#/components/schemas/IngestedFilesSummary'
        StatusDetail:
          allOf:
          - $ref: '#/components/schemas/BoundedLengthString'
          - description: ' Provides details about status of the ingestion job that
              is currently in progress. '
          title: StatusDetail
        IngestedDataSize:
          allOf:
          - $ref: '#/components/schemas/DataSizeInBytes'
          - description: ' Indicates the size of the ingested dataset. '
          title: IngestedDataSize
        DataStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' Indicates the earliest timestamp corresponding to data
              that was successfully ingested during this specific ingestion job. '
          title: DataStartTime
        DataEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' Indicates the latest timestamp corresponding to data that
              was successfully ingested during this specific ingestion job. '
          title: DataEndTime
        SourceDatasetArn:
          allOf:
          - $ref: '#/components/schemas/DatasetArn'
          - description: The Amazon Resource Name (ARN) of the source dataset from
              which the data used for the data ingestion job was imported from.
          title: SourceDatasetArn
      title: DescribeDataIngestionJobResponse
      type: object
    DescribeDataIngestionJobRequest:
      example:
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/IngestionJobId'
          - description: 'The job ID of the data ingestion job. '
          title: JobId
      required:
      - JobId
      title: DescribeDataIngestionJobRequest
      type: object
    DescribeDatasetResponse:
      example:
        Status: ""
        LastUpdatedAt: ""
        IngestedFilesSummary:
          IngestedNumberOfFiles: ""
          DiscardedFiles: ""
          TotalNumberOfFiles: ""
        ServerSideKmsKeyId: ""
        CreatedAt: ""
        Schema: ""
        SourceDatasetArn: ""
        DataEndTime: ""
        RoleArn: ""
        DataQualitySummary:
          InsufficientSensorData:
            MissingCompleteSensorData:
              AffectedSensorCount: ""
            SensorsWithShortDateRange:
              AffectedSensorCount: ""
          DuplicateTimestamps:
            TotalNumberOfDuplicateTimestamps: ""
          MissingSensorData:
            TotalNumberOfMissingValues: ""
            AffectedSensorCount: ""
          UnsupportedTimestamps:
            TotalNumberOfUnsupportedTimestamps: ""
          InvalidSensorData:
            TotalNumberOfInvalidValues: ""
            AffectedSensorCount: ""
        DatasetArn: ""
        DatasetName: ""
        IngestionInputConfiguration:
          S3InputConfiguration:
            KeyPattern: ""
            Bucket: ""
            Prefix: ""
        DataStartTime: ""
      properties:
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          - description: 'The name of the dataset being described. '
          title: DatasetName
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/DatasetArn'
          - description: 'The Amazon Resource Name (ARN) of the dataset being described. '
          title: DatasetArn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'Specifies the time the dataset was created in Lookout for
              Equipment. '
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "Specifies the time the dataset was last updated, if it was. "
          title: LastUpdatedAt
        Status:
          allOf:
          - $ref: '#/components/schemas/DatasetStatus'
          - description: 'Indicates the status of the dataset. '
          title: Status
        Schema:
          allOf:
          - $ref: '#/components/schemas/InlineDataSchema'
          - description: "A JSON description of the data that is in each time series\
              \ dataset, including names, column names, and data types. "
          title: Schema
        ServerSideKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: 'Provides the identifier of the KMS key used to encrypt dataset
              data by Amazon Lookout for Equipment. '
          title: ServerSideKmsKeyId
        IngestionInputConfiguration:
          $ref: '#/components/schemas/DescribeDataIngestionJobResponse_IngestionInputConfiguration'
        DataQualitySummary:
          $ref: '#/components/schemas/DescribeDatasetResponse_DataQualitySummary'
        IngestedFilesSummary:
          $ref: '#/components/schemas/DescribeDatasetResponse_IngestedFilesSummary'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: ' The Amazon Resource Name (ARN) of the IAM role that you
              are using for this the data ingestion job. '
          title: RoleArn
        DataStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' Indicates the earliest timestamp corresponding to data
              that was successfully ingested during the most recent ingestion of this
              particular dataset. '
          title: DataStartTime
        DataEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' Indicates the latest timestamp corresponding to data that
              was successfully ingested during the most recent ingestion of this particular
              dataset. '
          title: DataEndTime
        SourceDatasetArn:
          allOf:
          - $ref: '#/components/schemas/DatasetArn'
          - description: The Amazon Resource Name (ARN) of the source dataset from
              which the current data being described was imported from.
          title: SourceDatasetArn
      title: DescribeDatasetResponse
      type: object
    DescribeDatasetRequest:
      example:
        DatasetName: ""
      properties:
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetIdentifier'
          - description: 'The name of the dataset to be described. '
          title: DatasetName
      required:
      - DatasetName
      title: DescribeDatasetRequest
      type: object
    DescribeInferenceSchedulerResponse:
      example:
        ModelArn: ""
        InferenceSchedulerName: ""
        Status: ""
        DataUploadFrequency: ""
        ModelName: ""
        ServerSideKmsKeyId: ""
        CreatedAt: ""
        LatestInferenceResult: ""
        UpdatedAt: ""
        DataDelayOffsetInMinutes: ""
        RoleArn: ""
        DataInputConfiguration:
          InferenceInputNameConfiguration:
            ComponentTimestampDelimiter: ""
            TimestampFormat: ""
          S3InputConfiguration:
            Bucket: ""
            Prefix: ""
          InputTimeZoneOffset: ""
        DataOutputConfiguration:
          KmsKeyId: ""
          S3OutputConfiguration:
            Bucket: ""
            Prefix: ""
        InferenceSchedulerArn: ""
      properties:
        ModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          - description: 'The Amazon Resource Name (ARN) of the ML model of the inference
              scheduler being described. '
          title: ModelArn
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: 'The name of the ML model of the inference scheduler being
              described. '
          title: ModelName
        InferenceSchedulerName:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerName'
          - description: 'The name of the inference scheduler being described. '
          title: InferenceSchedulerName
        InferenceSchedulerArn:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerArn'
          - description: 'The Amazon Resource Name (ARN) of the inference scheduler
              being described. '
          title: InferenceSchedulerArn
        Status:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerStatus'
          - description: 'Indicates the status of the inference scheduler. '
          title: Status
        DataDelayOffsetInMinutes:
          allOf:
          - $ref: '#/components/schemas/DataDelayOffsetInMinutes'
          - description: " A period of time (in minutes) by which inference on the\
              \ data is delayed after the data starts. For instance, if you select\
              \ an offset delay time of five minutes, inference will not begin on\
              \ the data until the first data measurement after the five minute mark.\
              \ For example, if five minutes is selected, the inference scheduler\
              \ will wake up at the configured frequency with the additional five\
              \ minute delay time to check the customer S3 bucket. The customer can\
              \ upload data at the same frequency and they don't need to stop and\
              \ restart the scheduler when uploading new data."
          title: DataDelayOffsetInMinutes
        DataUploadFrequency:
          allOf:
          - $ref: '#/components/schemas/DataUploadFrequency'
          - description: "Specifies how often data is uploaded to the source S3 bucket\
              \ for the input data. This value is the length of time between data\
              \ uploads. For instance, if you select 5 minutes, Amazon Lookout for\
              \ Equipment will upload the real-time data to the source bucket once\
              \ every 5 minutes. This frequency also determines how often Amazon Lookout\
              \ for Equipment starts a scheduled inference on your data. In this example,\
              \ it starts once every 5 minutes. "
          title: DataUploadFrequency
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'Specifies the time at which the inference scheduler was
              created. '
          title: CreatedAt
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "Specifies the time at which the inference scheduler was\
              \ last updated, if it was. "
          title: UpdatedAt
        DataInputConfiguration:
          $ref: '#/components/schemas/DescribeInferenceSchedulerResponse_DataInputConfiguration'
        DataOutputConfiguration:
          $ref: '#/components/schemas/DescribeInferenceSchedulerResponse_DataOutputConfiguration'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: ' The Amazon Resource Name (ARN) of a role with permission
              to access the data source for the inference scheduler being described. '
          title: RoleArn
        ServerSideKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: 'Provides the identifier of the KMS key used to encrypt inference
              scheduler data by Amazon Lookout for Equipment. '
          title: ServerSideKmsKeyId
        LatestInferenceResult:
          allOf:
          - $ref: '#/components/schemas/LatestInferenceResult'
          - description: Indicates whether the latest execution for the inference
              scheduler was Anomalous (anomalous events found) or Normal (no anomalous
              events found).
          title: LatestInferenceResult
      title: DescribeInferenceSchedulerResponse
      type: object
    DescribeInferenceSchedulerRequest:
      example:
        InferenceSchedulerName: ""
      properties:
        InferenceSchedulerName:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerIdentifier'
          - description: 'The name of the inference scheduler being described. '
          title: InferenceSchedulerName
      required:
      - InferenceSchedulerName
      title: DescribeInferenceSchedulerRequest
      type: object
    DescribeLabelResponse:
      example:
        LabelGroupArn: ""
        FaultCode: ""
        EndTime: ""
        Equipment: ""
        Rating: ""
        CreatedAt: ""
        StartTime: ""
        LabelGroupName: ""
        LabelId: ""
        Notes: ""
      properties:
        LabelGroupName:
          allOf:
          - $ref: '#/components/schemas/LabelGroupName'
          - description: ' The name of the requested label group. '
          title: LabelGroupName
        LabelGroupArn:
          allOf:
          - $ref: '#/components/schemas/LabelGroupArn'
          - description: ' The Amazon Resource Name (ARN) of the requested label group. '
          title: LabelGroupArn
        LabelId:
          allOf:
          - $ref: '#/components/schemas/LabelId'
          - description: ' The ID of the requested label. '
          title: LabelId
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The start time of the requested label. '
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The end time of the requested label. '
          title: EndTime
        Rating:
          allOf:
          - $ref: '#/components/schemas/LabelRating'
          - description: ' Indicates whether a labeled event represents an anomaly. '
          title: Rating
        FaultCode:
          allOf:
          - $ref: '#/components/schemas/FaultCode'
          - description: <p> Indicates the type of anomaly associated with the label.
              </p> <p>Data in this field will be retained for service usage. Follow
              best practices for the security of your data.</p>
          title: FaultCode
        Notes:
          allOf:
          - $ref: '#/components/schemas/Comments'
          - description: <p>Metadata providing additional information about the label.</p>
              <p>Data in this field will be retained for service usage. Follow best
              practices for the security of your data.</p>
          title: Notes
        Equipment:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          - description: ' Indicates that a label pertains to a particular piece of
              equipment. '
          title: Equipment
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The time at which the label was created. '
          title: CreatedAt
      title: DescribeLabelResponse
      type: object
    DescribeLabelRequest:
      example:
        LabelGroupName: ""
        LabelId: ""
      properties:
        LabelGroupName:
          allOf:
          - $ref: '#/components/schemas/LabelGroupName'
          - description: ' Returns the name of the group containing the label. '
          title: LabelGroupName
        LabelId:
          allOf:
          - $ref: '#/components/schemas/LabelId'
          - description: ' Returns the ID of the label. '
          title: LabelId
      required:
      - LabelGroupName
      - LabelId
      title: DescribeLabelRequest
      type: object
    DescribeLabelGroupResponse:
      example:
        LabelGroupArn: ""
        FaultCodes: ""
        CreatedAt: ""
        LabelGroupName: ""
        UpdatedAt: ""
      properties:
        LabelGroupName:
          allOf:
          - $ref: '#/components/schemas/LabelGroupName'
          - description: ' The name of the label group. '
          title: LabelGroupName
        LabelGroupArn:
          allOf:
          - $ref: '#/components/schemas/LabelGroupArn'
          - description: ' The Amazon Resource Name (ARN) of the label group. '
          title: LabelGroupArn
        FaultCodes:
          allOf:
          - $ref: '#/components/schemas/FaultCodes'
          - description: ' Codes indicating the type of anomaly associated with the
              labels in the lagbel group. '
          title: FaultCodes
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The time at which the label group was created. '
          title: CreatedAt
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The time at which the label group was updated. '
          title: UpdatedAt
      title: DescribeLabelGroupResponse
      type: object
    DescribeLabelGroupRequest:
      example:
        LabelGroupName: ""
      properties:
        LabelGroupName:
          allOf:
          - $ref: '#/components/schemas/LabelGroupName'
          - description: ' Returns the name of the label group. '
          title: LabelGroupName
      required:
      - LabelGroupName
      title: DescribeLabelGroupRequest
      type: object
    DescribeModelResponse:
      example:
        ModelMetrics: ""
        ModelVersionActivatedAt: ""
        OffCondition: ""
        PreviousModelVersionActivatedAt: ""
        ActiveModelVersion: ""
        Schema: ""
        CreatedAt: ""
        PreviousActiveModelVersion: ""
        TrainingDataEndTime: ""
        TrainingExecutionStartTime: ""
        DatasetArn: ""
        LabelsInputConfiguration:
          S3InputConfiguration:
            Bucket: ""
            Prefix: ""
          LabelGroupName: ""
        ImportJobStartTime: ""
        ModelArn: ""
        Status: ""
        DataPreProcessingConfiguration:
          TargetSamplingRate: ""
        ModelName: ""
        ServerSideKmsKeyId: ""
        FailedReason: ""
        LastUpdatedTime: ""
        SourceModelVersionArn: ""
        RoleArn: ""
        ImportJobEndTime: ""
        EvaluationDataStartTime: ""
        EvaluationDataEndTime: ""
        PreviousActiveModelVersionArn: ""
        DatasetName: ""
        ActiveModelVersionArn: ""
        TrainingExecutionEndTime: ""
        TrainingDataStartTime: ""
      properties:
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: 'The name of the ML model being described. '
          title: ModelName
        ModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          - description: 'The Amazon Resource Name (ARN) of the ML model being described. '
          title: ModelArn
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          - description: 'The name of the dataset being used by the ML being described. '
          title: DatasetName
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/DatasetArn'
          - description: 'The Amazon Resouce Name (ARN) of the dataset used to create
              the ML model being described. '
          title: DatasetArn
        Schema:
          allOf:
          - $ref: '#/components/schemas/InlineDataSchema'
          - description: "A JSON description of the data that is in each time series\
              \ dataset, including names, column names, and data types. "
          title: Schema
        LabelsInputConfiguration:
          $ref: '#/components/schemas/DescribeModelResponse_LabelsInputConfiguration'
        TrainingDataStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' Indicates the time reference in the dataset that was used
              to begin the subset of training data for the ML model. '
          title: TrainingDataStartTime
        TrainingDataEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' Indicates the time reference in the dataset that was used
              to end the subset of training data for the ML model. '
          title: TrainingDataEndTime
        EvaluationDataStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' Indicates the time reference in the dataset that was used
              to begin the subset of evaluation data for the ML model. '
          title: EvaluationDataStartTime
        EvaluationDataEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' Indicates the time reference in the dataset that was used
              to end the subset of evaluation data for the ML model. '
          title: EvaluationDataEndTime
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: ' The Amazon Resource Name (ARN) of a role with permission
              to access the data source for the ML model being described. '
          title: RoleArn
        DataPreProcessingConfiguration:
          $ref: '#/components/schemas/CreateModelRequest_DataPreProcessingConfiguration'
        Status:
          allOf:
          - $ref: '#/components/schemas/ModelStatus'
          - description: 'Specifies the current status of the model being described.
              Status describes the status of the most recent action of the model. '
          title: Status
        TrainingExecutionStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'Indicates the time at which the training of the ML model
              began. '
          title: TrainingExecutionStartTime
        TrainingExecutionEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'Indicates the time at which the training of the ML model
              was completed. '
          title: TrainingExecutionEndTime
        FailedReason:
          allOf:
          - $ref: '#/components/schemas/BoundedLengthString'
          - description: "If the training of the ML model failed, this indicates the\
              \ reason for that failure. "
          title: FailedReason
        ModelMetrics:
          allOf:
          - $ref: '#/components/schemas/ModelMetrics'
          - description: 'The Model Metrics show an aggregated summary of the model''s
              performance within the evaluation time range. This is the JSON content
              of the metrics created when evaluating the model. '
          title: ModelMetrics
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'Indicates the last time the ML model was updated. The type
              of update is not specified. '
          title: LastUpdatedTime
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'Indicates the time and date at which the ML model was created. '
          title: CreatedAt
        ServerSideKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: 'Provides the identifier of the KMS key used to encrypt model
              data by Amazon Lookout for Equipment. '
          title: ServerSideKmsKeyId
        OffCondition:
          allOf:
          - $ref: '#/components/schemas/OffCondition'
          - description: "Indicates that the asset associated with this sensor has\
              \ been shut off. As long as this condition is met, Lookout for Equipment\
              \ will not use data from this asset for training, evaluation, or inference."
          title: OffCondition
        SourceModelVersionArn:
          allOf:
          - $ref: '#/components/schemas/ModelVersionArn'
          - description: The Amazon Resource Name (ARN) of the source model version.
              This field appears if the active model version was imported.
          title: SourceModelVersionArn
        ImportJobStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the import job was started. This field
              appears if the active model version was imported.
          title: ImportJobStartTime
        ImportJobEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the import job was completed. This
              field appears if the active model version was imported.
          title: ImportJobEndTime
        ActiveModelVersion:
          allOf:
          - $ref: '#/components/schemas/ModelVersion'
          - description: The name of the model version used by the inference schedular
              when running a scheduled inference execution.
          title: ActiveModelVersion
        ActiveModelVersionArn:
          allOf:
          - $ref: '#/components/schemas/ModelVersionArn'
          - description: The Amazon Resource Name (ARN) of the model version used
              by the inference scheduler when running a scheduled inference execution.
          title: ActiveModelVersionArn
        ModelVersionActivatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date the active model version was activated.
          title: ModelVersionActivatedAt
        PreviousActiveModelVersion:
          allOf:
          - $ref: '#/components/schemas/ModelVersion'
          - description: The model version that was set as the active model version
              prior to the current active model version.
          title: PreviousActiveModelVersion
        PreviousActiveModelVersionArn:
          allOf:
          - $ref: '#/components/schemas/ModelVersionArn'
          - description: The ARN of the model version that was set as the active model
              version prior to the current active model version.
          title: PreviousActiveModelVersionArn
        PreviousModelVersionActivatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the previous active model version
              was activated.
          title: PreviousModelVersionActivatedAt
      title: DescribeModelResponse
      type: object
    DescribeModelRequest:
      example:
        ModelName: ""
      properties:
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: 'The name of the ML model to be described. '
          title: ModelName
      required:
      - ModelName
      title: DescribeModelRequest
      type: object
    DescribeModelVersionResponse:
      example:
        ModelMetrics: ""
        OffCondition: ""
        SourceType: ""
        Schema: ""
        CreatedAt: ""
        ModelVersionArn: ""
        TrainingDataEndTime: ""
        TrainingExecutionStartTime: ""
        DatasetArn: ""
        LabelsInputConfiguration:
          S3InputConfiguration:
            Bucket: ""
            Prefix: ""
          LabelGroupName: ""
        ImportJobStartTime: ""
        ModelArn: ""
        Status: ""
        DataPreProcessingConfiguration:
          TargetSamplingRate: ""
        ImportedDataSizeInBytes: ""
        ModelName: ""
        ServerSideKmsKeyId: ""
        FailedReason: ""
        LastUpdatedTime: ""
        SourceModelVersionArn: ""
        RoleArn: ""
        ImportJobEndTime: ""
        EvaluationDataStartTime: ""
        EvaluationDataEndTime: ""
        DatasetName: ""
        ModelVersion: ""
        TrainingExecutionEndTime: ""
        TrainingDataStartTime: ""
      properties:
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: The name of the machine learning model that this version
              belongs to.
          title: ModelName
        ModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          - description: The Amazon Resource Name (ARN) of the parent machine learning
              model that this version belong to.
          title: ModelArn
        ModelVersion:
          allOf:
          - $ref: '#/components/schemas/ModelVersion'
          - description: The version of the machine learning model.
          title: ModelVersion
        ModelVersionArn:
          allOf:
          - $ref: '#/components/schemas/ModelVersionArn'
          - description: The Amazon Resource Name (ARN) of the model version.
          title: ModelVersionArn
        Status:
          allOf:
          - $ref: '#/components/schemas/ModelVersionStatus'
          - description: The current status of the model version.
          title: Status
        SourceType:
          allOf:
          - $ref: '#/components/schemas/ModelVersionSourceType'
          - description: Indicates whether this model version was created by training
              or by importing.
          title: SourceType
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          - description: The name of the dataset used to train the model version.
          title: DatasetName
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/DatasetArn'
          - description: The Amazon Resource Name (ARN) of the dataset used to train
              the model version.
          title: DatasetArn
        Schema:
          allOf:
          - $ref: '#/components/schemas/InlineDataSchema'
          - description: The schema of the data used to train the model version.
          title: Schema
        LabelsInputConfiguration:
          $ref: '#/components/schemas/LabelsInputConfiguration'
        TrainingDataStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date on which the training data began being gathered.\
              \ If you imported the version, this is the date that the training data\
              \ in the source version began being gathered."
          title: TrainingDataStartTime
        TrainingDataEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date on which the training data finished being gathered.\
              \ If you imported the version, this is the date that the training data\
              \ in the source version finished being gathered."
          title: TrainingDataEndTime
        EvaluationDataStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date on which the data in the evaluation set began being\
              \ gathered. If you imported the version, this is the date that the evaluation\
              \ set data in the source version began being gathered."
          title: EvaluationDataStartTime
        EvaluationDataEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date on which the data in the evaluation set began being\
              \ gathered. If you imported the version, this is the date that the evaluation\
              \ set data in the source version finished being gathered."
          title: EvaluationDataEndTime
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The Amazon Resource Name (ARN) of the role that was used
              to train the model version.
          title: RoleArn
        DataPreProcessingConfiguration:
          $ref: '#/components/schemas/DataPreProcessingConfiguration'
        TrainingExecutionStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the training of the version began.
          title: TrainingExecutionStartTime
        TrainingExecutionEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the training of the version completed.
          title: TrainingExecutionEndTime
        FailedReason:
          allOf:
          - $ref: '#/components/schemas/BoundedLengthString'
          - description: The failure message if the training of the model version
              failed.
          title: FailedReason
        ModelMetrics:
          allOf:
          - $ref: '#/components/schemas/ModelMetrics'
          - description: "Shows an aggregated summary, in JSON format, of the model's\
              \ performance within the evaluation time range. These metrics are created\
              \ when evaluating the model."
          title: ModelMetrics
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Indicates the last time the machine learning model version
              was updated.
          title: LastUpdatedTime
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Indicates the time and date at which the machine learning
              model version was created.
          title: CreatedAt
        ServerSideKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The identifier of the KMS key key used to encrypt model version
              data by Amazon Lookout for Equipment.
          title: ServerSideKmsKeyId
        OffCondition:
          allOf:
          - $ref: '#/components/schemas/OffCondition'
          - description: "Indicates that the asset associated with this sensor has\
              \ been shut off. As long as this condition is met, Lookout for Equipment\
              \ will not use data from this asset for training, evaluation, or inference."
          title: OffCondition
        SourceModelVersionArn:
          allOf:
          - $ref: '#/components/schemas/ModelVersionArn'
          - description: "If model version was imported, then this field is the arn\
              \ of the source model version."
          title: SourceModelVersionArn
        ImportJobStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the import job began. This field appears
              if the model version was imported.
          title: ImportJobStartTime
        ImportJobEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the import job completed. This field
              appears if the model version was imported.
          title: ImportJobEndTime
        ImportedDataSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/DataSizeInBytes'
          - description: The size in bytes of the imported data. This field appears
              if the model version was imported.
          title: ImportedDataSizeInBytes
      title: DescribeModelVersionResponse
      type: object
    DescribeModelVersionRequest:
      example:
        ModelName: ""
        ModelVersion: ""
      properties:
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: The name of the machine learning model that this version
              belongs to.
          title: ModelName
        ModelVersion:
          allOf:
          - $ref: '#/components/schemas/ModelVersion'
          - description: The version of the machine learning model.
          title: ModelVersion
      required:
      - ModelName
      - ModelVersion
      title: DescribeModelVersionRequest
      type: object
    DescribeResourcePolicyResponse:
      example:
        PolicyRevisionId: ""
        CreationTime: ""
        LastModifiedTime: ""
        ResourcePolicy: ""
      properties:
        PolicyRevisionId:
          allOf:
          - $ref: '#/components/schemas/PolicyRevisionId'
          - description: A unique identifier for a revision of the resource policy.
          title: PolicyRevisionId
        ResourcePolicy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: The resource policy in a JSON-formatted string.
          title: ResourcePolicy
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the resource policy was created.
          title: CreationTime
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the resource policy was last modified.
          title: LastModifiedTime
      title: DescribeResourcePolicyResponse
      type: object
    DescribeResourcePolicyRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the resource that is associated
              with the resource policy.
          title: ResourceArn
      required:
      - ResourceArn
      title: DescribeResourcePolicyRequest
      type: object
    ImportDatasetResponse:
      example:
        Status: ""
        DatasetArn: ""
        DatasetName: ""
        JobId: ""
      properties:
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          - description: The name of the created machine learning dataset.
          title: DatasetName
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/DatasetArn'
          - description: The Amazon Resource Name (ARN) of the dataset that was imported.
          title: DatasetArn
        Status:
          allOf:
          - $ref: '#/components/schemas/DatasetStatus'
          - description: The status of the <code>ImportDataset</code> operation.
          title: Status
        JobId:
          allOf:
          - $ref: '#/components/schemas/IngestionJobId'
          - description: A unique identifier for the job of importing the dataset.
          title: JobId
      title: ImportDatasetResponse
      type: object
    ImportDatasetRequest:
      example:
        DatasetName: ""
        ServerSideKmsKeyId: ""
        SourceDatasetArn: ""
        ClientToken: ""
        Tags: ""
      properties:
        SourceDatasetArn:
          allOf:
          - $ref: '#/components/schemas/DatasetArn'
          - description: The Amazon Resource Name (ARN) of the dataset to import.
          title: SourceDatasetArn
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          - description: "The name of the machine learning dataset to be created.\
              \ If the dataset already exists, Amazon Lookout for Equipment overwrites\
              \ the existing dataset. If you don't specify this field, it is filled\
              \ with the name of the source dataset."
          title: DatasetName
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotenceToken'
          - description: "A unique identifier for the request. If you do not set the\
              \ client request token, Amazon Lookout for Equipment generates one. "
          title: ClientToken
        ServerSideKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NameOrArn'
          - description: 'Provides the identifier of the KMS key key used to encrypt
              model data by Amazon Lookout for Equipment. '
          title: ServerSideKmsKeyId
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Any tags associated with the dataset to be created.
          title: Tags
      required:
      - ClientToken
      - SourceDatasetArn
      title: ImportDatasetRequest
      type: object
    ImportModelVersionResponse:
      example:
        ModelArn: ""
        Status: ""
        ModelName: ""
        ModelVersionArn: ""
        ModelVersion: ""
      properties:
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: The name for the machine learning model.
          title: ModelName
        ModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          - description: 'The Amazon Resource Name (ARN) of the model being created. '
          title: ModelArn
        ModelVersionArn:
          allOf:
          - $ref: '#/components/schemas/ModelVersionArn'
          - description: 'The Amazon Resource Name (ARN) of the model version being
              created. '
          title: ModelVersionArn
        ModelVersion:
          allOf:
          - $ref: '#/components/schemas/ModelVersion'
          - description: The version of the model being created.
          title: ModelVersion
        Status:
          allOf:
          - $ref: '#/components/schemas/ModelVersionStatus'
          - description: 'The status of the <code>ImportModelVersion</code> operation. '
          title: Status
      title: ImportModelVersionResponse
      type: object
    ImportModelVersionRequest:
      example:
        ModelName: ""
        DatasetName: ""
        LabelsInputConfiguration:
          S3InputConfiguration:
            Bucket: ""
            Prefix: ""
          LabelGroupName: ""
        ServerSideKmsKeyId: ""
        SourceModelVersionArn: ""
        ClientToken: ""
        RoleArn: ""
        Tags: ""
      properties:
        SourceModelVersionArn:
          allOf:
          - $ref: '#/components/schemas/ModelVersionArn'
          - description: The Amazon Resource Name (ARN) of the model version to import.
          title: SourceModelVersionArn
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: "The name for the machine learning model to be created. If\
              \ the model already exists, Amazon Lookout for Equipment creates a new\
              \ version. If you do not specify this field, it is filled with the name\
              \ of the source model."
          title: ModelName
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetIdentifier'
          - description: 'The name of the dataset for the machine learning model being
              imported. '
          title: DatasetName
        LabelsInputConfiguration:
          $ref: '#/components/schemas/LabelsInputConfiguration'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotenceToken'
          - description: "A unique identifier for the request. If you do not set the\
              \ client request token, Amazon Lookout for Equipment generates one. "
          title: ClientToken
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: 'The Amazon Resource Name (ARN) of a role with permission
              to access the data source being used to create the machine learning
              model. '
          title: RoleArn
        ServerSideKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NameOrArn'
          - description: 'Provides the identifier of the KMS key key used to encrypt
              model data by Amazon Lookout for Equipment. '
          title: ServerSideKmsKeyId
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: 'The tags associated with the machine learning model to be
              created. '
          title: Tags
      required:
      - ClientToken
      - DatasetName
      - SourceModelVersionArn
      title: ImportModelVersionRequest
      type: object
    ListDataIngestionJobsResponse:
      example:
        NextToken: ""
        DataIngestionJobSummaries: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' An opaque pagination token indicating where to continue
              the listing of data ingestion jobs. '
          title: NextToken
        DataIngestionJobSummaries:
          allOf:
          - $ref: '#/components/schemas/DataIngestionJobSummaries'
          - description: "Specifies information about the specific data ingestion\
              \ job, including dataset name and status. "
          title: DataIngestionJobSummaries
      title: ListDataIngestionJobsResponse
      type: object
    ListDataIngestionJobsRequest:
      example:
        Status: ""
        NextToken: ""
        DatasetName: ""
        MaxResults: ""
      properties:
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          - description: 'The name of the dataset being used for the data ingestion
              job. '
          title: DatasetName
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'An opaque pagination token indicating where to continue
              the listing of data ingestion jobs. '
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: ' Specifies the maximum number of data ingestion jobs to
              list. '
          title: MaxResults
        Status:
          allOf:
          - $ref: '#/components/schemas/IngestionJobStatus'
          - description: 'Indicates the status of the data ingestion job. '
          title: Status
      title: ListDataIngestionJobsRequest
      type: object
    ListDatasetsResponse:
      example:
        NextToken: ""
        DatasetSummaries: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' An opaque pagination token indicating where to continue
              the listing of datasets. '
          title: NextToken
        DatasetSummaries:
          allOf:
          - $ref: '#/components/schemas/DatasetSummaries'
          - description: "Provides information about the specified dataset, including\
              \ creation time, dataset ARN, and status. "
          title: DatasetSummaries
      title: ListDatasetsResponse
      type: object
    ListDatasetsRequest:
      example:
        NextToken: ""
        DatasetNameBeginsWith: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' An opaque pagination token indicating where to continue
              the listing of datasets. '
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: ' Specifies the maximum number of datasets to list. '
          title: MaxResults
        DatasetNameBeginsWith:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          - description: 'The beginning of the name of the datasets to be listed. '
          title: DatasetNameBeginsWith
      title: ListDatasetsRequest
      type: object
    ListInferenceEventsResponse:
      example:
        NextToken: ""
        InferenceEventSummaries: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'An opaque pagination token indicating where to continue
              the listing of inference executions. '
          title: NextToken
        InferenceEventSummaries:
          allOf:
          - $ref: '#/components/schemas/InferenceEventSummaries'
          - description: "Provides an array of information about the individual inference\
              \ events returned from the <code>ListInferenceEvents</code> operation,\
              \ including scheduler used, event start time, event end time, diagnostics,\
              \ and so on. "
          title: InferenceEventSummaries
      title: ListInferenceEventsResponse
      type: object
    ListInferenceEventsRequest:
      example:
        InferenceSchedulerName: ""
        NextToken: ""
        MaxResults: ""
        IntervalStartTime: ""
        IntervalEndTime: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: An opaque pagination token indicating where to continue the
              listing of inference events.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: 'Specifies the maximum number of inference events to list. '
          title: MaxResults
        InferenceSchedulerName:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerIdentifier'
          - description: 'The name of the inference scheduler for the inference events
              listed. '
          title: InferenceSchedulerName
        IntervalStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' Lookout for Equipment will return all the inference events
              with an end time equal to or greater than the start time given.'
          title: IntervalStartTime
        IntervalEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Returns all the inference events with an end start time equal
              to or greater than less than the end time given.
          title: IntervalEndTime
      required:
      - InferenceSchedulerName
      - IntervalEndTime
      - IntervalStartTime
      title: ListInferenceEventsRequest
      type: object
    ListInferenceExecutionsResponse:
      example:
        NextToken: ""
        InferenceExecutionSummaries: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' An opaque pagination token indicating where to continue
              the listing of inference executions. '
          title: NextToken
        InferenceExecutionSummaries:
          allOf:
          - $ref: '#/components/schemas/InferenceExecutionSummaries'
          - description: "Provides an array of information about the individual inference\
              \ executions returned from the <code>ListInferenceExecutions</code>\
              \ operation, including model used, inference scheduler, data configuration,\
              \ and so on. "
          title: InferenceExecutionSummaries
      title: ListInferenceExecutionsResponse
      type: object
    ListInferenceExecutionsRequest:
      example:
        InferenceSchedulerName: ""
        Status: ""
        NextToken: ""
        DataStartTimeAfter: ""
        MaxResults: ""
        DataEndTimeBefore: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: An opaque pagination token indicating where to continue the
              listing of inference executions.
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: 'Specifies the maximum number of inference executions to
              list. '
          title: MaxResults
        InferenceSchedulerName:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerIdentifier'
          - description: 'The name of the inference scheduler for the inference execution
              listed. '
          title: InferenceSchedulerName
        DataStartTimeAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'The time reference in the inferenced dataset after which
              Amazon Lookout for Equipment started the inference execution. '
          title: DataStartTimeAfter
        DataEndTimeBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'The time reference in the inferenced dataset before which
              Amazon Lookout for Equipment stopped the inference execution. '
          title: DataEndTimeBefore
        Status:
          allOf:
          - $ref: '#/components/schemas/InferenceExecutionStatus'
          - description: 'The status of the inference execution. '
          title: Status
      required:
      - InferenceSchedulerName
      title: ListInferenceExecutionsRequest
      type: object
    ListInferenceSchedulersResponse:
      example:
        NextToken: ""
        InferenceSchedulerSummaries: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' An opaque pagination token indicating where to continue
              the listing of inference schedulers. '
          title: NextToken
        InferenceSchedulerSummaries:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerSummaries'
          - description: "Provides information about the specified inference scheduler,\
              \ including data upload frequency, model name and ARN, and status. "
          title: InferenceSchedulerSummaries
      title: ListInferenceSchedulersResponse
      type: object
    ListInferenceSchedulersRequest:
      example:
        Status: ""
        ModelName: ""
        NextToken: ""
        MaxResults: ""
        InferenceSchedulerNameBeginsWith: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' An opaque pagination token indicating where to continue
              the listing of inference schedulers. '
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: ' Specifies the maximum number of inference schedulers to
              list. '
          title: MaxResults
        InferenceSchedulerNameBeginsWith:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerIdentifier'
          - description: 'The beginning of the name of the inference schedulers to
              be listed. '
          title: InferenceSchedulerNameBeginsWith
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: 'The name of the ML model used by the inference scheduler
              to be listed. '
          title: ModelName
        Status:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerStatus'
          - description: Specifies the current status of the inference schedulers.
          title: Status
      title: ListInferenceSchedulersRequest
      type: object
    ListLabelGroupsResponse:
      example:
        NextToken: ""
        LabelGroupSummaries: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' An opaque pagination token indicating where to continue
              the listing of label groups. '
          title: NextToken
        LabelGroupSummaries:
          allOf:
          - $ref: '#/components/schemas/LabelGroupSummaries'
          - description: ' A summary of the label groups. '
          title: LabelGroupSummaries
      title: ListLabelGroupsResponse
      type: object
    ListLabelGroupsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        LabelGroupNameBeginsWith: ""
      properties:
        LabelGroupNameBeginsWith:
          allOf:
          - $ref: '#/components/schemas/LabelGroupName'
          - description: ' The beginning of the name of the label groups to be listed. '
          title: LabelGroupNameBeginsWith
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' An opaque pagination token indicating where to continue
              the listing of label groups. '
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: ' Specifies the maximum number of label groups to list. '
          title: MaxResults
      title: ListLabelGroupsRequest
      type: object
    ListLabelsResponse:
      example:
        LabelSummaries: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' An opaque pagination token indicating where to continue
              the listing of datasets. '
          title: NextToken
        LabelSummaries:
          allOf:
          - $ref: '#/components/schemas/LabelSummaries'
          - description: ' A summary of the items in the label group. '
          title: LabelSummaries
      title: ListLabelsResponse
      type: object
    ListLabelsRequest:
      example:
        FaultCode: ""
        Equipment: ""
        NextToken: ""
        MaxResults: ""
        LabelGroupName: ""
        IntervalStartTime: ""
        IntervalEndTime: ""
      properties:
        LabelGroupName:
          allOf:
          - $ref: '#/components/schemas/LabelGroupName'
          - description: ' Retruns the name of the label group. '
          title: LabelGroupName
        IntervalStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' Returns all the labels with a end time equal to or later
              than the start time given. '
          title: IntervalStartTime
        IntervalEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' Returns all labels with a start time earlier than the end
              time given. '
          title: IntervalEndTime
        FaultCode:
          allOf:
          - $ref: '#/components/schemas/FaultCode'
          - description: ' Returns labels with a particular fault code. '
          title: FaultCode
        Equipment:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          - description: ' Lists the labels that pertain to a particular piece of
              equipment. '
          title: Equipment
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' An opaque pagination token indicating where to continue
              the listing of label groups. '
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: ' Specifies the maximum number of labels to list. '
          title: MaxResults
      required:
      - LabelGroupName
      title: ListLabelsRequest
      type: object
    ListModelVersionsResponse:
      example:
        ModelVersionSummaries: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the total number of results exceeds the limit that the\
              \ response can display, the response returns an opaque pagination token\
              \ indicating where to continue the listing of machine learning model\
              \ versions. Use this token in the <code>NextToken</code> field in the\
              \ request to list the next page of results."
          title: NextToken
        ModelVersionSummaries:
          allOf:
          - $ref: '#/components/schemas/ModelVersionSummaries'
          - description: "Provides information on the specified model version, including\
              \ the created time, model and dataset ARNs, and status."
          title: ModelVersionSummaries
      title: ListModelVersionsResponse
      type: object
    ListModelVersionsRequest:
      example:
        Status: ""
        ModelName: ""
        NextToken: ""
        MaxResults: ""
        SourceType: ""
        MinModelVersion: ""
        CreatedAtEndTime: ""
        MaxModelVersion: ""
        CreatedAtStartTime: ""
      properties:
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: Then name of the machine learning model for which the model
              versions are to be listed.
          title: ModelName
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the total number of results exceeds the limit that the\
              \ response can display, the response returns an opaque pagination token\
              \ indicating where to continue the listing of machine learning model\
              \ versions. Use this token in the <code>NextToken</code> field in the\
              \ request to list the next page of results."
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: Specifies the maximum number of machine learning model versions
              to list.
          title: MaxResults
        Status:
          allOf:
          - $ref: '#/components/schemas/ModelVersionStatus'
          - description: Filter the results based on the current status of the model
              version.
          title: Status
        SourceType:
          allOf:
          - $ref: '#/components/schemas/ModelVersionSourceType'
          - description: Filter the results based on the way the model version was
              generated.
          title: SourceType
        CreatedAtEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter results to return all the model versions created before
              this time.
          title: CreatedAtEndTime
        CreatedAtStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Filter results to return all the model versions created after
              this time.
          title: CreatedAtStartTime
        MaxModelVersion:
          allOf:
          - $ref: '#/components/schemas/ModelVersion'
          - description: Specifies the highest version of the model to return in the
              list.
          title: MaxModelVersion
        MinModelVersion:
          allOf:
          - $ref: '#/components/schemas/ModelVersion'
          - description: Specifies the lowest version of the model to return in the
              list.
          title: MinModelVersion
      required:
      - ModelName
      title: ListModelVersionsRequest
      type: object
    ListModelsResponse:
      example:
        NextToken: ""
        ModelSummaries: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' An opaque pagination token indicating where to continue
              the listing of ML models. '
          title: NextToken
        ModelSummaries:
          allOf:
          - $ref: '#/components/schemas/ModelSummaries'
          - description: "Provides information on the specified model, including created\
              \ time, model and dataset ARNs, and status. "
          title: ModelSummaries
      title: ListModelsResponse
      type: object
    ListModelsRequest:
      example:
        Status: ""
        NextToken: ""
        DatasetNameBeginsWith: ""
        MaxResults: ""
        ModelNameBeginsWith: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' An opaque pagination token indicating where to continue
              the listing of ML models. '
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: ' Specifies the maximum number of ML models to list. '
          title: MaxResults
        Status:
          allOf:
          - $ref: '#/components/schemas/ModelStatus'
          - description: 'The status of the ML model. '
          title: Status
        ModelNameBeginsWith:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: 'The beginning of the name of the ML models being listed. '
          title: ModelNameBeginsWith
        DatasetNameBeginsWith:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          - description: 'The beginning of the name of the dataset of the ML models
              to be listed. '
          title: DatasetNameBeginsWith
      title: ListModelsRequest
      type: object
    ListSensorStatisticsResponse:
      example:
        NextToken: ""
        SensorStatisticsSummaries: ""
      properties:
        SensorStatisticsSummaries:
          allOf:
          - $ref: '#/components/schemas/SensorStatisticsSummaries'
          - description: "Provides ingestion-based statistics regarding the specified\
              \ sensor with respect to various validation types, such as whether data\
              \ exists, the number and percentage of missing values, and the number\
              \ and percentage of duplicate timestamps. "
          title: SensorStatisticsSummaries
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'An opaque pagination token indicating where to continue
              the listing of sensor statistics. '
          title: NextToken
      title: ListSensorStatisticsResponse
      type: object
    ListSensorStatisticsRequest:
      example:
        NextToken: ""
        DatasetName: ""
        MaxResults: ""
        IngestionJobId: ""
      properties:
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          - description: ' The name of the dataset associated with the list of Sensor
              Statistics. '
          title: DatasetName
        IngestionJobId:
          allOf:
          - $ref: '#/components/schemas/IngestionJobId'
          - description: " The ingestion job id associated with the list of Sensor\
              \ Statistics. To get sensor statistics for a particular ingestion job\
              \ id, both dataset name and ingestion job id must be submitted as inputs. "
          title: IngestionJobId
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: 'Specifies the maximum number of sensors for which to retrieve
              statistics. '
          title: MaxResults
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'An opaque pagination token indicating where to continue
              the listing of sensor statistics. '
          title: NextToken
      required:
      - DatasetName
      title: ListSensorStatisticsRequest
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: ' Any tags associated with the resource. '
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceArn: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceArn'
          - description: 'The Amazon Resource Name (ARN) of the resource (such as
              the dataset or model) that is the focus of the <code>ListTagsForResource</code>
              operation. '
          title: ResourceArn
      required:
      - ResourceArn
      title: ListTagsForResourceRequest
      type: object
    PutResourcePolicyResponse:
      example:
        ResourceArn: ""
        PolicyRevisionId: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the resource for which
              the policy was created.
          title: ResourceArn
        PolicyRevisionId:
          allOf:
          - $ref: '#/components/schemas/PolicyRevisionId'
          - description: A unique identifier for a revision of the resource policy.
          title: PolicyRevisionId
      title: PutResourcePolicyResponse
      type: object
    PutResourcePolicyRequest:
      example:
        ResourceArn: ""
        PolicyRevisionId: ""
        ResourcePolicy: ""
        ClientToken: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the resource for which
              the policy is being created.
          title: ResourceArn
        ResourcePolicy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: The JSON-formatted resource policy to create.
          title: ResourcePolicy
        PolicyRevisionId:
          allOf:
          - $ref: '#/components/schemas/PolicyRevisionId'
          - description: A unique identifier for a revision of the resource policy.
          title: PolicyRevisionId
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotenceToken'
          - description: "A unique identifier for the request. If you do not set the\
              \ client request token, Amazon Lookout for Equipment generates one. "
          title: ClientToken
      required:
      - ClientToken
      - ResourceArn
      - ResourcePolicy
      title: PutResourcePolicyRequest
      type: object
    StartDataIngestionJobResponse:
      example:
        Status: ""
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/IngestionJobId'
          - description: 'Indicates the job ID of the data ingestion job. '
          title: JobId
        Status:
          allOf:
          - $ref: '#/components/schemas/IngestionJobStatus'
          - description: 'Indicates the status of the <code>StartDataIngestionJob</code>
              operation. '
          title: Status
      title: StartDataIngestionJobResponse
      type: object
    StartDataIngestionJobRequest:
      example:
        DatasetName: ""
        IngestionInputConfiguration:
          S3InputConfiguration:
            KeyPattern: ""
            Bucket: ""
            Prefix: ""
        ClientToken: ""
        RoleArn: ""
      properties:
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetIdentifier'
          - description: 'The name of the dataset being used by the data ingestion
              job. '
          title: DatasetName
        IngestionInputConfiguration:
          $ref: '#/components/schemas/StartDataIngestionJobRequest_IngestionInputConfiguration'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: ' The Amazon Resource Name (ARN) of a role with permission
              to access the data source for the data ingestion job. '
          title: RoleArn
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotenceToken'
          - description: " A unique identifier for the request. If you do not set\
              \ the client request token, Amazon Lookout for Equipment generates one. "
          title: ClientToken
      required:
      - ClientToken
      - DatasetName
      - IngestionInputConfiguration
      - RoleArn
      title: StartDataIngestionJobRequest
      type: object
    StartInferenceSchedulerResponse:
      example:
        ModelArn: ""
        InferenceSchedulerName: ""
        Status: ""
        ModelName: ""
        InferenceSchedulerArn: ""
      properties:
        ModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          - description: 'The Amazon Resource Name (ARN) of the ML model being used
              by the inference scheduler. '
          title: ModelArn
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: 'The name of the ML model being used by the inference scheduler. '
          title: ModelName
        InferenceSchedulerName:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerName'
          - description: 'The name of the inference scheduler being started. '
          title: InferenceSchedulerName
        InferenceSchedulerArn:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerArn'
          - description: 'The Amazon Resource Name (ARN) of the inference scheduler
              being started. '
          title: InferenceSchedulerArn
        Status:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerStatus'
          - description: 'Indicates the status of the inference scheduler. '
          title: Status
      title: StartInferenceSchedulerResponse
      type: object
    StartInferenceSchedulerRequest:
      example:
        InferenceSchedulerName: ""
      properties:
        InferenceSchedulerName:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerIdentifier'
          - description: 'The name of the inference scheduler to be started. '
          title: InferenceSchedulerName
      required:
      - InferenceSchedulerName
      title: StartInferenceSchedulerRequest
      type: object
    StopInferenceSchedulerResponse:
      example:
        ModelArn: ""
        InferenceSchedulerName: ""
        Status: ""
        ModelName: ""
        InferenceSchedulerArn: ""
      properties:
        ModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          - description: 'The Amazon Resource Name (ARN) of the ML model used by the
              inference scheduler being stopped. '
          title: ModelArn
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: 'The name of the ML model used by the inference scheduler
              being stopped. '
          title: ModelName
        InferenceSchedulerName:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerName'
          - description: 'The name of the inference scheduler being stopped. '
          title: InferenceSchedulerName
        InferenceSchedulerArn:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerArn'
          - description: 'The Amazon Resource Name (ARN) of the inference schedule
              being stopped. '
          title: InferenceSchedulerArn
        Status:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerStatus'
          - description: 'Indicates the status of the inference scheduler. '
          title: Status
      title: StopInferenceSchedulerResponse
      type: object
    StopInferenceSchedulerRequest:
      example:
        InferenceSchedulerName: ""
      properties:
        InferenceSchedulerName:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerIdentifier'
          - description: 'The name of the inference scheduler to be stopped. '
          title: InferenceSchedulerName
      required:
      - InferenceSchedulerName
      title: StopInferenceSchedulerRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceArn'
          - description: 'The Amazon Resource Name (ARN) of the specific resource
              to which the tag should be associated. '
          title: ResourceArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: 'The tag or tags to be associated with a specific resource.
              Both the tag key and value are specified. '
          title: Tags
      required:
      - ResourceArn
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceArn: ""
        TagKeys: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceArn'
          - description: 'The Amazon Resource Name (ARN) of the resource to which
              the tag is currently associated. '
          title: ResourceArn
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: 'Specifies the key of the tag to be removed from a specified
              resource. '
          title: TagKeys
      required:
      - ResourceArn
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateActiveModelVersionResponse:
      example:
        ModelArn: ""
        ModelName: ""
        CurrentActiveVersionArn: ""
        PreviousActiveVersionArn: ""
        CurrentActiveVersion: ""
        PreviousActiveVersion: ""
      properties:
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: The name of the machine learning model for which the active
              model version was set.
          title: ModelName
        ModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          - description: The Amazon Resource Name (ARN) of the machine learning model
              for which the active model version was set.
          title: ModelArn
        CurrentActiveVersion:
          allOf:
          - $ref: '#/components/schemas/ModelVersion'
          - description: The version that is currently active of the machine learning
              model for which the active model version was set.
          title: CurrentActiveVersion
        PreviousActiveVersion:
          allOf:
          - $ref: '#/components/schemas/ModelVersion'
          - description: The previous version that was active of the machine learning
              model for which the active model version was set.
          title: PreviousActiveVersion
        CurrentActiveVersionArn:
          allOf:
          - $ref: '#/components/schemas/ModelVersionArn'
          - description: The Amazon Resource Name (ARN) of the machine learning model
              version that is the current active model version.
          title: CurrentActiveVersionArn
        PreviousActiveVersionArn:
          allOf:
          - $ref: '#/components/schemas/ModelVersionArn'
          - description: The Amazon Resource Name (ARN) of the machine learning model
              version that was the previous active model version.
          title: PreviousActiveVersionArn
      title: UpdateActiveModelVersionResponse
      type: object
    UpdateActiveModelVersionRequest:
      example:
        ModelName: ""
        ModelVersion: ""
      properties:
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: The name of the machine learning model for which the active
              model version is being set.
          title: ModelName
        ModelVersion:
          allOf:
          - $ref: '#/components/schemas/ModelVersion'
          - description: The version of the machine learning model for which the active
              model version is being set.
          title: ModelVersion
      required:
      - ModelName
      - ModelVersion
      title: UpdateActiveModelVersionRequest
      type: object
    UpdateInferenceSchedulerRequest:
      example:
        InferenceSchedulerName: ""
        DataUploadFrequency: ""
        DataInputConfiguration:
          InferenceInputNameConfiguration:
            ComponentTimestampDelimiter: ""
            TimestampFormat: ""
          S3InputConfiguration:
            Bucket: ""
            Prefix: ""
          InputTimeZoneOffset: ""
        DataOutputConfiguration:
          KmsKeyId: ""
          S3OutputConfiguration:
            Bucket: ""
            Prefix: ""
        DataDelayOffsetInMinutes: ""
        RoleArn: ""
      properties:
        InferenceSchedulerName:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerIdentifier'
          - description: 'The name of the inference scheduler to be updated. '
          title: InferenceSchedulerName
        DataDelayOffsetInMinutes:
          allOf:
          - $ref: '#/components/schemas/DataDelayOffsetInMinutes'
          - description: " A period of time (in minutes) by which inference on the\
              \ data is delayed after the data starts. For instance, if you select\
              \ an offset delay time of five minutes, inference will not begin on\
              \ the data until the first data measurement after the five minute mark.\
              \ For example, if five minutes is selected, the inference scheduler\
              \ will wake up at the configured frequency with the additional five\
              \ minute delay time to check the customer S3 bucket. The customer can\
              \ upload data at the same frequency and they don't need to stop and\
              \ restart the scheduler when uploading new data."
          title: DataDelayOffsetInMinutes
        DataUploadFrequency:
          allOf:
          - $ref: '#/components/schemas/DataUploadFrequency'
          - description: "How often data is uploaded to the source S3 bucket for the\
              \ input data. The value chosen is the length of time between data uploads.\
              \ For instance, if you select 5 minutes, Amazon Lookout for Equipment\
              \ will upload the real-time data to the source bucket once every 5 minutes.\
              \ This frequency also determines how often Amazon Lookout for Equipment\
              \ starts a scheduled inference on your data. In this example, it starts\
              \ once every 5 minutes. "
          title: DataUploadFrequency
        DataInputConfiguration:
          $ref: '#/components/schemas/UpdateInferenceSchedulerRequest_DataInputConfiguration'
        DataOutputConfiguration:
          $ref: '#/components/schemas/UpdateInferenceSchedulerRequest_DataOutputConfiguration'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: ' The Amazon Resource Name (ARN) of a role with permission
              to access the data source for the inference scheduler. '
          title: RoleArn
      required:
      - InferenceSchedulerName
      title: UpdateInferenceSchedulerRequest
      type: object
    UpdateLabelGroupRequest:
      example:
        FaultCodes: ""
        LabelGroupName: ""
      properties:
        LabelGroupName:
          allOf:
          - $ref: '#/components/schemas/LabelGroupName'
          - description: ' The name of the label group to be updated. '
          title: LabelGroupName
        FaultCodes:
          allOf:
          - $ref: '#/components/schemas/FaultCodes'
          - description: <p> Updates the code indicating the type of anomaly associated
              with the label. </p> <p>Data in this field will be retained for service
              usage. Follow best practices for the security of your data.</p>
          title: FaultCodes
      required:
      - LabelGroupName
      title: UpdateLabelGroupRequest
      type: object
    AmazonResourceArn:
      maxLength: 1011
      minLength: 1
      type: string
    Boolean:
      type: boolean
    BoundedLengthString:
      maxLength: 5000
      minLength: 1
      pattern: "[\\P{M}\\p{M}]{1,5000}"
      type: string
    StatisticalIssueStatus:
      enum:
      - POTENTIAL_ISSUE_DETECTED
      - NO_ISSUE_DETECTED
      title: StatisticalIssueStatus
      type: string
    Integer:
      type: integer
    CategoricalValues:
      description: ' Entity that comprises information on categorical values in data. '
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/StatisticalIssueStatus'
          - description: ' Indicates whether there is a potential data issue related
              to categorical values. '
          title: Status
        NumberOfCategory:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' Indicates the number of categories in the data. '
          title: NumberOfCategory
      required:
      - Status
      title: CategoricalValues
      type: object
    Comments:
      maxLength: 2560
      minLength: 1
      pattern: "[\\P{M}\\p{M}]{1,2560}"
      type: string
    ComponentName:
      maxLength: 200
      minLength: 1
      pattern: "^[0-9a-zA-Z._\\-]{1,200}$"
      type: string
    ComponentTimestampDelimiter:
      maxLength: 1
      minLength: 0
      pattern: ^(\-|\_|\s)?$
      type: string
    Float:
      format: float
      type: number
    CountPercent:
      description: ' Entity that comprises information of count and percentage. '
      properties:
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' Indicates the count of occurences of the given statistic. '
          title: Count
        Percentage:
          allOf:
          - $ref: '#/components/schemas/Float'
          - description: ' Indicates the percentage of occurances of the given statistic. '
          title: Percentage
      required:
      - Count
      - Percentage
      title: CountPercent
      type: object
    DatasetName:
      maxLength: 200
      minLength: 1
      pattern: "^[0-9a-zA-Z_-]{1,200}$"
      type: string
    DatasetSchema:
      description: 'Provides information about the data schema used with the given
        dataset. '
      properties:
        InlineDataSchema:
          allOf:
          - $ref: '#/components/schemas/InlineDataSchema'
          - description: ' '
          title: InlineDataSchema
      title: DatasetSchema
      type: object
    NameOrArn:
      maxLength: 2048
      minLength: 1
      pattern: "^[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,2048}$"
      type: string
    IdempotenceToken:
      maxLength: 256
      minLength: 1
      pattern: "\\p{ASCII}{1,256}"
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      minItems: 0
      type: array
    DatasetArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws(-[^:]+)?:lookoutequipment:[a-zA-Z0-9\\-]*:[0-9]{12}:dataset\\\
        /.+"
      type: string
    DatasetStatus:
      enum:
      - CREATED
      - INGESTION_IN_PROGRESS
      - ACTIVE
      - IMPORT_IN_PROGRESS
      title: DatasetStatus
      type: string
    ModelName:
      maxLength: 200
      minLength: 1
      pattern: "^[0-9a-zA-Z_-]{1,200}$"
      type: string
    InferenceSchedulerName:
      maxLength: 200
      minLength: 1
      pattern: "^[0-9a-zA-Z_-]{1,200}$"
      type: string
    DataDelayOffsetInMinutes:
      maximum: 60
      minimum: 0
      type: integer
    DataUploadFrequency:
      enum:
      - PT5M
      - PT10M
      - PT15M
      - PT30M
      - PT1H
      title: DataUploadFrequency
      type: string
    InferenceInputConfiguration:
      description: "Specifies configuration information for the input data for the\
        \ inference, including Amazon S3 location of input data.. "
      properties:
        S3InputConfiguration:
          $ref: '#/components/schemas/InferenceInputConfiguration_S3InputConfiguration'
        InputTimeZoneOffset:
          allOf:
          - $ref: '#/components/schemas/TimeZoneOffset'
          - description: Indicates the difference between your time zone and Coordinated
              Universal Time (UTC).
          title: InputTimeZoneOffset
        InferenceInputNameConfiguration:
          $ref: '#/components/schemas/InferenceInputConfiguration_InferenceInputNameConfiguration'
      title: InferenceInputConfiguration
      type: object
    InferenceOutputConfiguration:
      description: " Specifies configuration information for the output results from\
        \ for the inference, including KMS key ID and output S3 location. "
      properties:
        S3OutputConfiguration:
          $ref: '#/components/schemas/InferenceOutputConfiguration_S3OutputConfiguration'
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NameOrArn'
          - description: 'The ID number for the KMS key key used to encrypt the inference
              output. '
          title: KmsKeyId
      required:
      - S3OutputConfiguration
      title: InferenceOutputConfiguration
      type: object
    IamRoleArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+"
      type: string
    InferenceSchedulerArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws(-[^:]+)?:lookoutequipment:[a-zA-Z0-9\\-]*:[0-9]{12}:inference-scheduler\\\
        /.+"
      type: string
    InferenceSchedulerStatus:
      enum:
      - PENDING
      - RUNNING
      - STOPPING
      - STOPPED
      title: InferenceSchedulerStatus
      type: string
    LabelGroupName:
      maxLength: 200
      minLength: 1
      pattern: "^[0-9a-zA-Z_-]{1,200}$"
      type: string
    FaultCodes:
      items:
        $ref: '#/components/schemas/FaultCode'
      maxItems: 50
      minItems: 0
      type: array
    LabelGroupArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws(-[^:]+)?:lookoutequipment:[a-zA-Z0-9\\-]*:[0-9]{12}:label-group\\\
        /.+"
      type: string
    Timestamp:
      format: date-time
      type: string
    LabelRating:
      enum:
      - ANOMALY
      - NO_ANOMALY
      - NEUTRAL
      title: LabelRating
      type: string
    FaultCode:
      maxLength: 100
      minLength: 1
      pattern: "[\\P{M}\\p{M}]{1,100}"
      title: FaultCode
      type: string
    Equipment:
      maxLength: 200
      minLength: 1
      pattern: "[\\P{M}\\p{M}]{1,200}"
      type: string
    LabelId:
      maxLength: 32
      pattern: "[A-Fa-f0-9]{0,32}"
      type: string
    DatasetIdentifier:
      maxLength: 200
      minLength: 1
      pattern: "^[0-9a-zA-Z_-]{1,200}$"
      type: string
    LabelsInputConfiguration:
      description: 'Contains the configuration information for the S3 location being
        used to hold label data. '
      example:
        S3InputConfiguration:
          Bucket: ""
          Prefix: ""
        LabelGroupName: ""
      properties:
        S3InputConfiguration:
          $ref: '#/components/schemas/LabelsInputConfiguration_S3InputConfiguration'
        LabelGroupName:
          allOf:
          - $ref: '#/components/schemas/LabelGroupName'
          - description: ' The name of the label group to be used for label data. '
          title: LabelGroupName
      title: LabelsInputConfiguration
      type: object
    DataPreProcessingConfiguration:
      description: "<p>The configuration is the <code>TargetSamplingRate</code>, which\
        \ is the sampling rate of the data after post processing by Amazon Lookout\
        \ for Equipment. For example, if you provide data that has been collected\
        \ at a 1 second level and you want the system to resample the data at a 1\
        \ minute rate before training, the <code>TargetSamplingRate</code> is 1 minute.</p>\
        \ <p>When providing a value for the <code>TargetSamplingRate</code>, you must\
        \ attach the prefix \"PT\" to the rate you want. The value for a 1 second\
        \ rate is therefore <i>PT1S</i>, the value for a 15 minute rate is <i>PT15M</i>,\
        \ and the value for a 1 hour rate is <i>PT1H</i> </p>"
      example:
        TargetSamplingRate: ""
      properties:
        TargetSamplingRate:
          allOf:
          - $ref: '#/components/schemas/TargetSamplingRate'
          - description: "<p>The sampling rate of the data after post processing by\
              \ Amazon Lookout for Equipment. For example, if you provide data that\
              \ has been collected at a 1 second level and you want the system to\
              \ resample the data at a 1 minute rate before training, the <code>TargetSamplingRate</code>\
              \ is 1 minute.</p> <p>When providing a value for the <code>TargetSamplingRate</code>,\
              \ you must attach the prefix \"PT\" to the rate you want. The value\
              \ for a 1 second rate is therefore <i>PT1S</i>, the value for a 15 minute\
              \ rate is <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i>\
              \ </p>"
          title: TargetSamplingRate
      title: DataPreProcessingConfiguration
      type: object
    OffCondition:
      maxLength: 2048
      minLength: 1
      type: string
    ModelArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws(-[^:]+)?:lookoutequipment:[a-zA-Z0-9\\-]*:[0-9]{12}:model\\\
        /.+"
      type: string
    ModelStatus:
      enum:
      - IN_PROGRESS
      - SUCCESS
      - FAILED
      - IMPORT_IN_PROGRESS
      title: ModelStatus
      type: string
    DataIngestionJobSummary:
      description: "Provides information about a specified data ingestion job, including\
        \ dataset information, data ingestion configuration, and status. "
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/IngestionJobId'
          - description: 'Indicates the job ID of the data ingestion job. '
          title: JobId
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          - description: 'The name of the dataset used for the data ingestion job. '
          title: DatasetName
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/DatasetArn'
          - description: 'The Amazon Resource Name (ARN) of the dataset used in the
              data ingestion job. '
          title: DatasetArn
        IngestionInputConfiguration:
          $ref: '#/components/schemas/DataIngestionJobSummary_IngestionInputConfiguration'
        Status:
          allOf:
          - $ref: '#/components/schemas/IngestionJobStatus'
          - description: 'Indicates the status of the data ingestion job. '
          title: Status
      title: DataIngestionJobSummary
      type: object
    DataIngestionJobSummaries:
      items:
        $ref: '#/components/schemas/DataIngestionJobSummary'
      type: array
    IngestionJobId:
      maxLength: 32
      pattern: "[A-Fa-f0-9]{0,32}"
      type: string
    IngestionInputConfiguration:
      description: " Specifies configuration information for the input data for the\
        \ data ingestion job, including input data S3 location. "
      properties:
        S3InputConfiguration:
          $ref: '#/components/schemas/IngestionInputConfiguration_S3InputConfiguration'
      required:
      - S3InputConfiguration
      title: IngestionInputConfiguration
      type: object
    IngestionJobStatus:
      enum:
      - IN_PROGRESS
      - SUCCESS
      - FAILED
      - IMPORT_IN_PROGRESS
      title: IngestionJobStatus
      type: string
    TargetSamplingRate:
      enum:
      - PT1S
      - PT5S
      - PT10S
      - PT15S
      - PT30S
      - PT1M
      - PT5M
      - PT10M
      - PT15M
      - PT30M
      - PT1H
      title: TargetSamplingRate
      type: string
    InsufficientSensorData:
      description: ' Entity that comprises aggregated information on sensors having
        insufficient data. '
      properties:
        MissingCompleteSensorData:
          $ref: '#/components/schemas/InsufficientSensorData_MissingCompleteSensorData'
        SensorsWithShortDateRange:
          $ref: '#/components/schemas/InsufficientSensorData_SensorsWithShortDateRange'
      required:
      - MissingCompleteSensorData
      - SensorsWithShortDateRange
      title: InsufficientSensorData
      type: object
    MissingSensorData:
      description: ' Entity that comprises aggregated information on sensors having
        missing data. '
      properties:
        AffectedSensorCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' Indicates the number of sensors that have atleast some
              data missing. '
          title: AffectedSensorCount
        TotalNumberOfMissingValues:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' Indicates the total number of missing values across all
              the sensors. '
          title: TotalNumberOfMissingValues
      required:
      - AffectedSensorCount
      - TotalNumberOfMissingValues
      title: MissingSensorData
      type: object
    InvalidSensorData:
      description: ' Entity that comprises aggregated information on sensors having
        insufficient data. '
      properties:
        AffectedSensorCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' Indicates the number of sensors that have at least some
              invalid values. '
          title: AffectedSensorCount
        TotalNumberOfInvalidValues:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' Indicates the total number of invalid values across all
              the sensors. '
          title: TotalNumberOfInvalidValues
      required:
      - AffectedSensorCount
      - TotalNumberOfInvalidValues
      title: InvalidSensorData
      type: object
    UnsupportedTimestamps:
      description: ' Entity that comprises information abount unsupported timestamps
        in the dataset. '
      properties:
        TotalNumberOfUnsupportedTimestamps:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' Indicates the total number of unsupported timestamps across
              the ingested data. '
          title: TotalNumberOfUnsupportedTimestamps
      required:
      - TotalNumberOfUnsupportedTimestamps
      title: UnsupportedTimestamps
      type: object
    DuplicateTimestamps:
      description: ' Entity that comprises information abount duplicate timestamps
        in the dataset. '
      properties:
        TotalNumberOfDuplicateTimestamps:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' Indicates the total number of duplicate timestamps. '
          title: TotalNumberOfDuplicateTimestamps
      required:
      - TotalNumberOfDuplicateTimestamps
      title: DuplicateTimestamps
      type: object
    DataQualitySummary:
      description: " DataQualitySummary gives aggregated statistics over all the sensors\
        \ about a completed ingestion job. It primarily gives more information about\
        \ statistics over different incorrect data like MissingCompleteSensorData,\
        \ MissingSensorData, UnsupportedDateFormats, InsufficientSensorData, DuplicateTimeStamps. "
      properties:
        InsufficientSensorData:
          $ref: '#/components/schemas/DataQualitySummary_InsufficientSensorData'
        MissingSensorData:
          $ref: '#/components/schemas/DataQualitySummary_MissingSensorData'
        InvalidSensorData:
          $ref: '#/components/schemas/DataQualitySummary_InvalidSensorData'
        UnsupportedTimestamps:
          $ref: '#/components/schemas/DataQualitySummary_UnsupportedTimestamps'
        DuplicateTimestamps:
          $ref: '#/components/schemas/DataQualitySummary_DuplicateTimestamps'
      required:
      - DuplicateTimestamps
      - InsufficientSensorData
      - InvalidSensorData
      - MissingSensorData
      - UnsupportedTimestamps
      title: DataQualitySummary
      type: object
    DataSizeInBytes:
      minimum: 0
      type: integer
    InlineDataSchema:
      maxLength: 1000000
      minLength: 1
      type: string
    DatasetSummary:
      description: "Contains information about the specific data set, including name,\
        \ ARN, and status. "
      properties:
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          - description: 'The name of the dataset. '
          title: DatasetName
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/DatasetArn'
          - description: 'The Amazon Resource Name (ARN) of the specified dataset. '
          title: DatasetArn
        Status:
          allOf:
          - $ref: '#/components/schemas/DatasetStatus'
          - description: 'Indicates the status of the dataset. '
          title: Status
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'The time at which the dataset was created in Amazon Lookout
              for Equipment. '
          title: CreatedAt
      title: DatasetSummary
      type: object
    DatasetSummaries:
      items:
        $ref: '#/components/schemas/DatasetSummary'
      type: array
    InferenceSchedulerIdentifier:
      maxLength: 200
      minLength: 1
      pattern: "^[0-9a-zA-Z_-]{1,200}$"
      type: string
    ResourceArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws(-[^:]+)?:lookoutequipment:[a-zA-Z0-9\\-]*:[0-9]{12}:.+"
      type: string
    IngestedFilesSummary:
      description: "Gives statistics about how many files have been ingested, and\
        \ which files have not been ingested, for a particular ingestion job."
      example:
        IngestedNumberOfFiles: ""
        DiscardedFiles: ""
        TotalNumberOfFiles: ""
      properties:
        TotalNumberOfFiles:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Indicates the total number of files that were submitted for
              ingestion.
          title: TotalNumberOfFiles
        IngestedNumberOfFiles:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Indicates the number of files that were successfully ingested.
          title: IngestedNumberOfFiles
        DiscardedFiles:
          allOf:
          - $ref: '#/components/schemas/ListOfDiscardedFiles'
          - description: "Indicates the number of files that were discarded. A file\
              \ could be discarded because its format is invalid (for example, a jpg\
              \ or pdf) or not readable."
          title: DiscardedFiles
      required:
      - IngestedNumberOfFiles
      - TotalNumberOfFiles
      title: IngestedFilesSummary
      type: object
    KmsKeyArn:
      maxLength: 1024
      minLength: 1
      pattern: "arn:aws[a-z\\-]*:kms:[a-z0-9\\-]*:\\d{12}:[\\w\\-\\/]+"
      type: string
    LatestInferenceResult:
      enum:
      - ANOMALOUS
      - NORMAL
      title: LatestInferenceResult
      type: string
    ModelMetrics:
      maxLength: 50000
      minLength: 1
      type: string
    ModelVersionArn:
      maxLength: 2048
      minLength: 20
      pattern: "^arn:aws(-[^:]+)?:lookoutequipment:[a-zA-Z0-9\\-]*:[0-9]{12}:model\\\
        /.+\\/.+\\/model-version\\/[0-9]{1,}$"
      type: string
    ModelVersion:
      minimum: 1
      type: integer
    ModelVersionStatus:
      enum:
      - IN_PROGRESS
      - SUCCESS
      - FAILED
      - IMPORT_IN_PROGRESS
      - CANCELED
      title: ModelVersionStatus
      type: string
    ModelVersionSourceType:
      enum:
      - TRAINING
      - RETRAINING
      - IMPORT
      title: ModelVersionSourceType
      type: string
    PolicyRevisionId:
      maxLength: 50
      pattern: "[0-9A-Fa-f]+"
      type: string
    Policy:
      maxLength: 20000
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+"
      type: string
    EventDurationInSeconds:
      minimum: 0
      type: integer
    FileNameTimestampFormat:
      pattern: ^EPOCH|yyyy-MM-dd-HH-mm-ss|yyyyMMddHHmmss$
      type: string
    InferenceEventSummary:
      description: "Contains information about the specific inference event, including\
        \ start and end time, diagnostics information, event duration and so on."
      properties:
        InferenceSchedulerArn:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerArn'
          - description: ' The Amazon Resource Name (ARN) of the inference scheduler
              being used for the inference event. '
          title: InferenceSchedulerArn
        InferenceSchedulerName:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerName'
          - description: 'The name of the inference scheduler being used for the inference
              events. '
          title: InferenceSchedulerName
        EventStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'Indicates the starting time of an inference event. '
          title: EventStartTime
        EventEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'Indicates the ending time of an inference event. '
          title: EventEndTime
        Diagnostics:
          allOf:
          - $ref: '#/components/schemas/ModelMetrics'
          - description: ' An array which specifies the names and values of all sensors
              contributing to an inference event.'
          title: Diagnostics
        EventDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/EventDurationInSeconds'
          - description: ' Indicates the size of an inference event in seconds. '
          title: EventDurationInSeconds
      title: InferenceEventSummary
      type: object
    InferenceEventSummaries:
      items:
        $ref: '#/components/schemas/InferenceEventSummary'
      type: array
    InferenceExecutionStatus:
      enum:
      - IN_PROGRESS
      - SUCCESS
      - FAILED
      title: InferenceExecutionStatus
      type: string
    InferenceExecutionSummary:
      description: "Contains information about the specific inference execution, including\
        \ input and output data configuration, inference scheduling information, status,\
        \ and so on. "
      properties:
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: 'The name of the ML model being used for the inference execution. '
          title: ModelName
        ModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          - description: 'The Amazon Resource Name (ARN) of the ML model used for
              the inference execution. '
          title: ModelArn
        InferenceSchedulerName:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerName'
          - description: 'The name of the inference scheduler being used for the inference
              execution. '
          title: InferenceSchedulerName
        InferenceSchedulerArn:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerArn'
          - description: ' The Amazon Resource Name (ARN) of the inference scheduler
              being used for the inference execution. '
          title: InferenceSchedulerArn
        ScheduledStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'Indicates the start time at which the inference scheduler
              began the specific inference execution. '
          title: ScheduledStartTime
        DataStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'Indicates the time reference in the dataset at which the
              inference execution began. '
          title: DataStartTime
        DataEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'Indicates the time reference in the dataset at which the
              inference execution stopped. '
          title: DataEndTime
        DataInputConfiguration:
          $ref: '#/components/schemas/DescribeInferenceSchedulerResponse_DataInputConfiguration'
        DataOutputConfiguration:
          $ref: '#/components/schemas/InferenceExecutionSummary_DataOutputConfiguration'
        CustomerResultObject:
          $ref: '#/components/schemas/InferenceExecutionSummary_CustomerResultObject'
        Status:
          allOf:
          - $ref: '#/components/schemas/InferenceExecutionStatus'
          - description: 'Indicates the status of the inference execution. '
          title: Status
        FailedReason:
          allOf:
          - $ref: '#/components/schemas/BoundedLengthString'
          - description: ' Specifies the reason for failure when an inference execution
              has failed. '
          title: FailedReason
      title: InferenceExecutionSummary
      type: object
    InferenceExecutionSummaries:
      items:
        $ref: '#/components/schemas/InferenceExecutionSummary'
      type: array
    S3Object:
      description: 'Contains information about an S3 bucket. '
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: 'The name of the specific S3 bucket. '
          title: Bucket
        Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: "The Amazon Web Services Key Management Service (KMS key)\
              \ key being used to encrypt the S3 object. Without this key, data in\
              \ the bucket is not accessible. "
          title: Key
      required:
      - Bucket
      - Key
      title: S3Object
      type: object
    InferenceS3InputConfiguration:
      description: " Specifies configuration information for the input data for the\
        \ inference, including input data S3 location. "
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: 'The bucket containing the input dataset for the inference. '
          title: Bucket
        Prefix:
          allOf:
          - $ref: '#/components/schemas/S3Prefix'
          - description: 'The prefix for the S3 bucket used for the input data for
              the inference. '
          title: Prefix
      required:
      - Bucket
      title: InferenceS3InputConfiguration
      type: object
    TimeZoneOffset:
      pattern: "^(\\+|\\-)[0-9]{2}\\:[0-9]{2}$"
      type: string
    InferenceInputNameConfiguration:
      description: "Specifies configuration information for the input data for the\
        \ inference, including timestamp format and delimiter. "
      properties:
        TimestampFormat:
          allOf:
          - $ref: '#/components/schemas/FileNameTimestampFormat'
          - description: "The format of the timestamp, whether Epoch time, or standard,\
              \ with or without hyphens (-). "
          title: TimestampFormat
        ComponentTimestampDelimiter:
          allOf:
          - $ref: '#/components/schemas/ComponentTimestampDelimiter'
          - description: 'Indicates the delimiter character used between items in
              the data. '
          title: ComponentTimestampDelimiter
      title: InferenceInputNameConfiguration
      type: object
    InferenceS3OutputConfiguration:
      description: " Specifies configuration information for the output results from\
        \ the inference, including output S3 location. "
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: ' The bucket containing the output results from the inference '
          title: Bucket
        Prefix:
          allOf:
          - $ref: '#/components/schemas/S3Prefix'
          - description: ' The prefix for the S3 bucket used for the output results
              from the inference. '
          title: Prefix
      required:
      - Bucket
      title: InferenceS3OutputConfiguration
      type: object
    S3Bucket:
      maxLength: 63
      minLength: 3
      pattern: "^[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]$"
      type: string
    S3Prefix:
      maxLength: 1024
      minLength: 0
      pattern: "(^$)|([\\u0009\\u000A\\u000D\\u0020-\\u00FF]{1,1023}/$)"
      type: string
    InferenceSchedulerSummary:
      description: "Contains information about the specific inference scheduler, including\
        \ data delay offset, model name and ARN, status, and so on. "
      properties:
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: 'The name of the ML model used for the inference scheduler. '
          title: ModelName
        ModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          - description: ' The Amazon Resource Name (ARN) of the ML model used by
              the inference scheduler. '
          title: ModelArn
        InferenceSchedulerName:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerName'
          - description: 'The name of the inference scheduler. '
          title: InferenceSchedulerName
        InferenceSchedulerArn:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerArn'
          - description: ' The Amazon Resource Name (ARN) of the inference scheduler. '
          title: InferenceSchedulerArn
        Status:
          allOf:
          - $ref: '#/components/schemas/InferenceSchedulerStatus'
          - description: 'Indicates the status of the inference scheduler. '
          title: Status
        DataDelayOffsetInMinutes:
          allOf:
          - $ref: '#/components/schemas/DataDelayOffsetInMinutes'
          - description: "A period of time (in minutes) by which inference on the\
              \ data is delayed after the data starts. For instance, if an offset\
              \ delay time of five minutes was selected, inference will not begin\
              \ on the data until the first data measurement after the five minute\
              \ mark. For example, if five minutes is selected, the inference scheduler\
              \ will wake up at the configured frequency with the additional five\
              \ minute delay time to check the customer S3 bucket. The customer can\
              \ upload data at the same frequency and they don't need to stop and\
              \ restart the scheduler when uploading new data. "
          title: DataDelayOffsetInMinutes
        DataUploadFrequency:
          allOf:
          - $ref: '#/components/schemas/DataUploadFrequency'
          - description: "How often data is uploaded to the source S3 bucket for the\
              \ input data. This value is the length of time between data uploads.\
              \ For instance, if you select 5 minutes, Amazon Lookout for Equipment\
              \ will upload the real-time data to the source bucket once every 5 minutes.\
              \ This frequency also determines how often Amazon Lookout for Equipment\
              \ starts a scheduled inference on your data. In this example, it starts\
              \ once every 5 minutes. "
          title: DataUploadFrequency
        LatestInferenceResult:
          allOf:
          - $ref: '#/components/schemas/LatestInferenceResult'
          - description: Indicates whether the latest execution for the inference
              scheduler was Anomalous (anomalous events found) or Normal (no anomalous
              events found).
          title: LatestInferenceResult
      title: InferenceSchedulerSummary
      type: object
    InferenceSchedulerSummaries:
      items:
        $ref: '#/components/schemas/InferenceSchedulerSummary'
      type: array
    ListOfDiscardedFiles:
      items:
        $ref: '#/components/schemas/S3Object'
      minItems: 0
      type: array
    IngestionS3InputConfiguration:
      description: ' Specifies S3 configuration information for the input data for
        the data ingestion job. '
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: 'The name of the S3 bucket used for the input data for the
              data ingestion. '
          title: Bucket
        Prefix:
          allOf:
          - $ref: '#/components/schemas/S3Prefix'
          - description: 'The prefix for the S3 location being used for the input
              data for the data ingestion. '
          title: Prefix
        KeyPattern:
          allOf:
          - $ref: '#/components/schemas/KeyPattern'
          - description: "<p> The pattern for matching the Amazon S3 files that will\
              \ be used for ingestion. If the schema was created previously without\
              \ any KeyPattern, then the default KeyPattern {prefix}/{component_name}/*\
              \ is used to download files from Amazon S3 according to the schema.\
              \ This field is required when ingestion is being done for the first\
              \ time.</p> <p>Valid Values: {prefix}/{component_name}_* | {prefix}/{component_name}/*\
              \ | {prefix}/{component_name}[DELIMITER]* (Allowed delimiters : space,\
              \ dot, underscore, hyphen)</p>"
          title: KeyPattern
      required:
      - Bucket
      title: IngestionS3InputConfiguration
      type: object
    KeyPattern:
      maxLength: 2048
      minLength: 1
      type: string
    MissingCompleteSensorData:
      description: ' Entity that comprises information on sensors that have sensor
        data completely missing. '
      properties:
        AffectedSensorCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' Indicates the number of sensors that have data missing
              completely. '
          title: AffectedSensorCount
      required:
      - AffectedSensorCount
      title: MissingCompleteSensorData
      type: object
    SensorsWithShortDateRange:
      description: ' Entity that comprises information on sensors that have shorter
        date range. '
      properties:
        AffectedSensorCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' Indicates the number of sensors that have less than 90
              days of data. '
          title: AffectedSensorCount
      required:
      - AffectedSensorCount
      title: SensorsWithShortDateRange
      type: object
    LabelGroupSummary:
      description: ' Contains information about the label group. '
      properties:
        LabelGroupName:
          allOf:
          - $ref: '#/components/schemas/LabelGroupName'
          - description: ' The name of the label group. '
          title: LabelGroupName
        LabelGroupArn:
          allOf:
          - $ref: '#/components/schemas/LabelGroupArn'
          - description: ' The Amazon Resource Name (ARN) of the label group. '
          title: LabelGroupArn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The time at which the label group was created. '
          title: CreatedAt
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The time at which the label group was updated. '
          title: UpdatedAt
      title: LabelGroupSummary
      type: object
    LabelGroupSummaries:
      items:
        $ref: '#/components/schemas/LabelGroupSummary'
      type: array
    LabelSummary:
      description: ' Information about the label. '
      properties:
        LabelGroupName:
          allOf:
          - $ref: '#/components/schemas/LabelGroupName'
          - description: ' The name of the label group. '
          title: LabelGroupName
        LabelId:
          allOf:
          - $ref: '#/components/schemas/LabelId'
          - description: ' The ID of the label. '
          title: LabelId
        LabelGroupArn:
          allOf:
          - $ref: '#/components/schemas/LabelGroupArn'
          - description: ' The Amazon Resource Name (ARN) of the label group. '
          title: LabelGroupArn
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The timestamp indicating the start of the label. '
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The timestamp indicating the end of the label. '
          title: EndTime
        Rating:
          allOf:
          - $ref: '#/components/schemas/LabelRating'
          - description: ' Indicates whether a labeled event represents an anomaly. '
          title: Rating
        FaultCode:
          allOf:
          - $ref: '#/components/schemas/FaultCode'
          - description: <p> Indicates the type of anomaly associated with the label.
              </p> <p>Data in this field will be retained for service usage. Follow
              best practices for the security of your data.</p>
          title: FaultCode
        Equipment:
          allOf:
          - $ref: '#/components/schemas/Equipment'
          - description: ' Indicates that a label pertains to a particular piece of
              equipment. '
          title: Equipment
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The time at which the label was created. '
          title: CreatedAt
      title: LabelSummary
      type: object
    LabelSummaries:
      items:
        $ref: '#/components/schemas/LabelSummary'
      type: array
    LabelsS3InputConfiguration:
      description: 'The location information (prefix and bucket name) for the s3 location
        being used for label data. '
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: 'The name of the S3 bucket holding the label data. '
          title: Bucket
        Prefix:
          allOf:
          - $ref: '#/components/schemas/S3Prefix'
          - description: ' The prefix for the S3 bucket used for the label data. '
          title: Prefix
      required:
      - Bucket
      title: LabelsS3InputConfiguration
      type: object
    LargeTimestampGaps:
      description: ' Entity that comprises information on large gaps between consecutive
        timestamps in data. '
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/StatisticalIssueStatus'
          - description: ' Indicates whether there is a potential data issue related
              to large gaps in timestamps. '
          title: Status
        NumberOfLargeTimestampGaps:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: " Indicates the number of large timestamp gaps, if there\
              \ are any. "
          title: NumberOfLargeTimestampGaps
        MaxTimestampGapInDays:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: " Indicates the size of the largest timestamp gap, in days. "
          title: MaxTimestampGapInDays
      required:
      - Status
      title: LargeTimestampGaps
      type: object
    NextToken:
      maxLength: 8192
      pattern: "\\p{ASCII}{0,8192}"
      type: string
    MaxResults:
      maximum: 500
      minimum: 1
      type: integer
    ModelVersionSummaries:
      items:
        $ref: '#/components/schemas/ModelVersionSummary'
      type: array
    ModelSummaries:
      items:
        $ref: '#/components/schemas/ModelSummary'
      type: array
    SensorStatisticsSummaries:
      items:
        $ref: '#/components/schemas/SensorStatisticsSummary'
      type: array
    ModelSummary:
      description: "Provides information about the specified ML model, including dataset\
        \ and model names and ARNs, as well as status. "
      properties:
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: 'The name of the ML model. '
          title: ModelName
        ModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          - description: ' The Amazon Resource Name (ARN) of the ML model. '
          title: ModelArn
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          - description: 'The name of the dataset being used for the ML model. '
          title: DatasetName
        DatasetArn:
          allOf:
          - $ref: '#/components/schemas/DatasetArn'
          - description: ' The Amazon Resource Name (ARN) of the dataset used to create
              the model. '
          title: DatasetArn
        Status:
          allOf:
          - $ref: '#/components/schemas/ModelStatus'
          - description: 'Indicates the status of the ML model. '
          title: Status
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'The time at which the specific model was created. '
          title: CreatedAt
        ActiveModelVersion:
          allOf:
          - $ref: '#/components/schemas/ModelVersion'
          - description: The model version that the inference scheduler uses to run
              an inference execution.
          title: ActiveModelVersion
        ActiveModelVersionArn:
          allOf:
          - $ref: '#/components/schemas/ModelVersionArn'
          - description: The Amazon Resource Name (ARN) of the model version that
              is set as active. The active model version is the model version that
              the inference scheduler uses to run an inference execution.
          title: ActiveModelVersionArn
      title: ModelSummary
      type: object
    ModelVersionSummary:
      description: Contains information about the specific model version.
      properties:
        ModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          - description: The name of the model that this model version is a version
              of.
          title: ModelName
        ModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          - description: The Amazon Resource Name (ARN) of the model that this model
              version is a version of.
          title: ModelArn
        ModelVersion:
          allOf:
          - $ref: '#/components/schemas/ModelVersion'
          - description: The version of the model.
          title: ModelVersion
        ModelVersionArn:
          allOf:
          - $ref: '#/components/schemas/ModelVersionArn'
          - description: The Amazon Resource Name (ARN) of the model version.
          title: ModelVersionArn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when this model version was created.
          title: CreatedAt
        Status:
          allOf:
          - $ref: '#/components/schemas/ModelVersionStatus'
          - description: The current status of the model version.
          title: Status
        SourceType:
          allOf:
          - $ref: '#/components/schemas/ModelVersionSourceType'
          - description: Indicates how this model version was generated.
          title: SourceType
      title: ModelVersionSummary
      type: object
    Monotonicity:
      enum:
      - DECREASING
      - INCREASING
      - STATIC
      title: Monotonicity
      type: string
    MonotonicValues:
      description: ' Entity that comprises information on monotonic values in the
        data. '
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/StatisticalIssueStatus'
          - description: ' Indicates whether there is a potential data issue related
              to having monotonic values. '
          title: Status
        Monotonicity:
          allOf:
          - $ref: '#/components/schemas/Monotonicity'
          - description: " Indicates the monotonicity of values. Can be INCREASING,\
              \ DECREASING, or STATIC. "
          title: Monotonicity
      required:
      - Status
      title: MonotonicValues
      type: object
    MultipleOperatingModes:
      description: ' Entity that comprises information on operating modes in data. '
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/StatisticalIssueStatus'
          - description: ' Indicates whether there is a potential data issue related
              to having multiple operating modes. '
          title: Status
      required:
      - Status
      title: MultipleOperatingModes
      type: object
    S3Key:
      maxLength: 1024
      minLength: 1
      pattern: "[\\P{M}\\p{M}]{1,1024}[^/]$"
      type: string
    SensorName:
      maxLength: 200
      minLength: 1
      pattern: "^[0-9a-zA-Z:#$.\\-_]{1,200}$"
      type: string
    SensorStatisticsSummary:
      description: " Summary of ingestion statistics like whether data exists, number\
        \ of missing values, number of invalid values and so on related to the particular\
        \ sensor. "
      properties:
        ComponentName:
          allOf:
          - $ref: '#/components/schemas/ComponentName'
          - description: ' Name of the component to which the particular sensor belongs
              for which the statistics belong to. '
          title: ComponentName
        SensorName:
          allOf:
          - $ref: '#/components/schemas/SensorName'
          - description: ' Name of the sensor that the statistics belong to. '
          title: SensorName
        DataExists:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Parameter that indicates whether data exists for the sensor
              that the statistics belong to. '
          title: DataExists
        MissingValues:
          $ref: '#/components/schemas/SensorStatisticsSummary_MissingValues'
        InvalidValues:
          $ref: '#/components/schemas/SensorStatisticsSummary_InvalidValues'
        InvalidDateEntries:
          $ref: '#/components/schemas/SensorStatisticsSummary_InvalidDateEntries'
        DuplicateTimestamps:
          $ref: '#/components/schemas/SensorStatisticsSummary_DuplicateTimestamps'
        CategoricalValues:
          $ref: '#/components/schemas/SensorStatisticsSummary_CategoricalValues'
        MultipleOperatingModes:
          $ref: '#/components/schemas/SensorStatisticsSummary_MultipleOperatingModes'
        LargeTimestampGaps:
          $ref: '#/components/schemas/SensorStatisticsSummary_LargeTimestampGaps'
        MonotonicValues:
          $ref: '#/components/schemas/SensorStatisticsSummary_MonotonicValues'
        DataStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' Indicates the time reference to indicate the beginning
              of valid data associated with the sensor that the statistics belong
              to. '
          title: DataStartTime
        DataEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' Indicates the time reference to indicate the end of valid
              data associated with the sensor that the statistics belong to. '
          title: DataEndTime
      title: SensorStatisticsSummary
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(?!aws:)[a-zA-Z+-=._:/]+$"
      title: TagKey
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "[\\s\\w+-=\\.:/@]*"
      type: string
    Tag:
      description: 'A tag is a key-value pair that can be added to a resource as metadata. '
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: 'The key for the specified tag. '
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: 'The value for the specified tag. '
          title: Value
      required:
      - Key
      - Value
      title: Tag
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    CreateDatasetRequest_DatasetSchema:
      allOf:
      - $ref: '#/components/schemas/DatasetSchema'
      - description: "A JSON description of the data that is in each time series dataset,\
          \ including names, column names, and data types. "
      example:
        InlineDataSchema: ""
      title: CreateDatasetRequest_DatasetSchema
    CreateInferenceSchedulerRequest_DataInputConfiguration:
      allOf:
      - $ref: '#/components/schemas/InferenceInputConfiguration'
      - description: "Specifies configuration information for the input data for the\
          \ inference scheduler, including delimiter, format, and dataset location. "
      example:
        InferenceInputNameConfiguration:
          ComponentTimestampDelimiter: ""
          TimestampFormat: ""
        S3InputConfiguration:
          Bucket: ""
          Prefix: ""
        InputTimeZoneOffset: ""
      title: CreateInferenceSchedulerRequest_DataInputConfiguration
    CreateInferenceSchedulerRequest_DataOutputConfiguration:
      allOf:
      - $ref: '#/components/schemas/InferenceOutputConfiguration'
      - description: "Specifies configuration information for the output results for\
          \ the inference scheduler, including the S3 location for the output. "
      example:
        KmsKeyId: ""
        S3OutputConfiguration:
          Bucket: ""
          Prefix: ""
      title: CreateInferenceSchedulerRequest_DataOutputConfiguration
    CreateModelRequest_DatasetSchema:
      allOf:
      - $ref: '#/components/schemas/DatasetSchema'
      - description: 'The data schema for the ML model being created. '
      example:
        InlineDataSchema: ""
      title: CreateModelRequest_DatasetSchema
    CreateModelRequest_LabelsInputConfiguration:
      allOf:
      - $ref: '#/components/schemas/LabelsInputConfiguration'
      - description: 'The input configuration for the labels being used for the ML
          model that''s being created. '
      example:
        S3InputConfiguration:
          Bucket: ""
          Prefix: ""
        LabelGroupName: ""
      title: CreateModelRequest_LabelsInputConfiguration
    CreateModelRequest_DataPreProcessingConfiguration:
      allOf:
      - $ref: '#/components/schemas/DataPreProcessingConfiguration'
      - description: "<p>The configuration is the <code>TargetSamplingRate</code>,\
          \ which is the sampling rate of the data after post processing by Amazon\
          \ Lookout for Equipment. For example, if you provide data that has been\
          \ collected at a 1 second level and you want the system to resample the\
          \ data at a 1 minute rate before training, the <code>TargetSamplingRate</code>\
          \ is 1 minute.</p> <p>When providing a value for the <code>TargetSamplingRate</code>,\
          \ you must attach the prefix \"PT\" to the rate you want. The value for\
          \ a 1 second rate is therefore <i>PT1S</i>, the value for a 15 minute rate\
          \ is <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i> </p>"
      example:
        TargetSamplingRate: ""
      title: CreateModelRequest_DataPreProcessingConfiguration
    DescribeDataIngestionJobResponse_IngestionInputConfiguration:
      allOf:
      - $ref: '#/components/schemas/IngestionInputConfiguration'
      - description: 'Specifies the S3 location configuration for the data input for
          the data ingestion job. '
      example:
        S3InputConfiguration:
          KeyPattern: ""
          Bucket: ""
          Prefix: ""
      title: DescribeDataIngestionJobResponse_IngestionInputConfiguration
    DescribeDataIngestionJobResponse_DataQualitySummary:
      allOf:
      - $ref: '#/components/schemas/DataQualitySummary'
      - description: " Gives statistics about a completed ingestion job. These statistics\
          \ primarily relate to quantifying incorrect data such as MissingCompleteSensorData,\
          \ MissingSensorData, UnsupportedDateFormats, InsufficientSensorData, and\
          \ DuplicateTimeStamps. "
      example:
        InsufficientSensorData:
          MissingCompleteSensorData:
            AffectedSensorCount: ""
          SensorsWithShortDateRange:
            AffectedSensorCount: ""
        DuplicateTimestamps:
          TotalNumberOfDuplicateTimestamps: ""
        MissingSensorData:
          TotalNumberOfMissingValues: ""
          AffectedSensorCount: ""
        UnsupportedTimestamps:
          TotalNumberOfUnsupportedTimestamps: ""
        InvalidSensorData:
          TotalNumberOfInvalidValues: ""
          AffectedSensorCount: ""
      title: DescribeDataIngestionJobResponse_DataQualitySummary
    DescribeDatasetResponse_DataQualitySummary:
      allOf:
      - $ref: '#/components/schemas/DataQualitySummary'
      - description: " Gives statistics associated with the given dataset for the\
          \ latest successful associated ingestion job id. These statistics primarily\
          \ relate to quantifying incorrect data such as MissingCompleteSensorData,\
          \ MissingSensorData, UnsupportedDateFormats, InsufficientSensorData, and\
          \ DuplicateTimeStamps. "
      example:
        InsufficientSensorData:
          MissingCompleteSensorData:
            AffectedSensorCount: ""
          SensorsWithShortDateRange:
            AffectedSensorCount: ""
        DuplicateTimestamps:
          TotalNumberOfDuplicateTimestamps: ""
        MissingSensorData:
          TotalNumberOfMissingValues: ""
          AffectedSensorCount: ""
        UnsupportedTimestamps:
          TotalNumberOfUnsupportedTimestamps: ""
        InvalidSensorData:
          TotalNumberOfInvalidValues: ""
          AffectedSensorCount: ""
      title: DescribeDatasetResponse_DataQualitySummary
    DescribeDatasetResponse_IngestedFilesSummary:
      allOf:
      - $ref: '#/components/schemas/IngestedFilesSummary'
      - description: ' IngestedFilesSummary associated with the given dataset for
          the latest successful associated ingestion job id. '
      example:
        IngestedNumberOfFiles: ""
        DiscardedFiles: ""
        TotalNumberOfFiles: ""
      title: DescribeDatasetResponse_IngestedFilesSummary
    DescribeInferenceSchedulerResponse_DataInputConfiguration:
      allOf:
      - $ref: '#/components/schemas/InferenceInputConfiguration'
      - description: " Specifies configuration information for the input data for\
          \ the inference scheduler, including delimiter, format, and dataset location. "
      example:
        InferenceInputNameConfiguration:
          ComponentTimestampDelimiter: ""
          TimestampFormat: ""
        S3InputConfiguration:
          Bucket: ""
          Prefix: ""
        InputTimeZoneOffset: ""
      title: DescribeInferenceSchedulerResponse_DataInputConfiguration
    DescribeInferenceSchedulerResponse_DataOutputConfiguration:
      allOf:
      - $ref: '#/components/schemas/InferenceOutputConfiguration'
      - description: " Specifies information for the output results for the inference\
          \ scheduler, including the output S3 location. "
      example:
        KmsKeyId: ""
        S3OutputConfiguration:
          Bucket: ""
          Prefix: ""
      title: DescribeInferenceSchedulerResponse_DataOutputConfiguration
    DescribeModelResponse_LabelsInputConfiguration:
      allOf:
      - $ref: '#/components/schemas/LabelsInputConfiguration'
      - description: "Specifies configuration information about the labels input,\
          \ including its S3 location. "
      example:
        S3InputConfiguration:
          Bucket: ""
          Prefix: ""
        LabelGroupName: ""
      title: DescribeModelResponse_LabelsInputConfiguration
    StartDataIngestionJobRequest_IngestionInputConfiguration:
      allOf:
      - $ref: '#/components/schemas/IngestionInputConfiguration'
      - description: " Specifies information for the input data for the data ingestion\
          \ job, including dataset S3 location. "
      example:
        S3InputConfiguration:
          KeyPattern: ""
          Bucket: ""
          Prefix: ""
      title: StartDataIngestionJobRequest_IngestionInputConfiguration
    UpdateInferenceSchedulerRequest_DataInputConfiguration:
      allOf:
      - $ref: '#/components/schemas/InferenceInputConfiguration'
      - description: " Specifies information for the input data for the inference\
          \ scheduler, including delimiter, format, and dataset location. "
      example:
        InferenceInputNameConfiguration:
          ComponentTimestampDelimiter: ""
          TimestampFormat: ""
        S3InputConfiguration:
          Bucket: ""
          Prefix: ""
        InputTimeZoneOffset: ""
      title: UpdateInferenceSchedulerRequest_DataInputConfiguration
    UpdateInferenceSchedulerRequest_DataOutputConfiguration:
      allOf:
      - $ref: '#/components/schemas/InferenceOutputConfiguration'
      - description: " Specifies information for the output results from the inference\
          \ scheduler, including the output S3 location. "
      example:
        KmsKeyId: ""
        S3OutputConfiguration:
          Bucket: ""
          Prefix: ""
      title: UpdateInferenceSchedulerRequest_DataOutputConfiguration
    InferenceInputConfiguration_S3InputConfiguration:
      allOf:
      - $ref: '#/components/schemas/InferenceS3InputConfiguration'
      - description: " Specifies configuration information for the input data for\
          \ the inference, including Amazon S3 location of input data."
      example:
        Bucket: ""
        Prefix: ""
      title: InferenceInputConfiguration_S3InputConfiguration
    InferenceInputConfiguration_InferenceInputNameConfiguration:
      allOf:
      - $ref: '#/components/schemas/InferenceInputNameConfiguration'
      - description: "Specifies configuration information for the input data for the\
          \ inference, including timestamp format and delimiter. "
      example:
        ComponentTimestampDelimiter: ""
        TimestampFormat: ""
      title: InferenceInputConfiguration_InferenceInputNameConfiguration
    InferenceOutputConfiguration_S3OutputConfiguration:
      allOf:
      - $ref: '#/components/schemas/InferenceS3OutputConfiguration'
      - description: " Specifies configuration information for the output results\
          \ from for the inference, output S3 location. "
      example:
        Bucket: ""
        Prefix: ""
      title: InferenceOutputConfiguration_S3OutputConfiguration
    LabelsInputConfiguration_S3InputConfiguration:
      allOf:
      - $ref: '#/components/schemas/LabelsS3InputConfiguration'
      - description: 'Contains location information for the S3 location being used
          for label data. '
      example:
        Bucket: ""
        Prefix: ""
      title: LabelsInputConfiguration_S3InputConfiguration
    DataIngestionJobSummary_IngestionInputConfiguration:
      allOf:
      - $ref: '#/components/schemas/IngestionInputConfiguration'
      - description: " Specifies information for the input data for the data inference\
          \ job, including data Amazon S3 location parameters. "
      title: DataIngestionJobSummary_IngestionInputConfiguration
    IngestionInputConfiguration_S3InputConfiguration:
      allOf:
      - $ref: '#/components/schemas/IngestionS3InputConfiguration'
      - description: 'The location information for the S3 bucket used for input data
          for the data ingestion. '
      example:
        KeyPattern: ""
        Bucket: ""
        Prefix: ""
      title: IngestionInputConfiguration_S3InputConfiguration
    InsufficientSensorData_MissingCompleteSensorData:
      allOf:
      - $ref: '#/components/schemas/MissingCompleteSensorData'
      - description: ' Parameter that describes the total number of sensors that have
          data completely missing for it. '
      example:
        AffectedSensorCount: ""
      title: InsufficientSensorData_MissingCompleteSensorData
    InsufficientSensorData_SensorsWithShortDateRange:
      allOf:
      - $ref: '#/components/schemas/SensorsWithShortDateRange'
      - description: ' Parameter that describes the total number of sensors that have
          a short date range of less than 90 days of data overall. '
      example:
        AffectedSensorCount: ""
      title: InsufficientSensorData_SensorsWithShortDateRange
    DataQualitySummary_InsufficientSensorData:
      allOf:
      - $ref: '#/components/schemas/InsufficientSensorData'
      - description: ' Parameter that gives information about insufficient data for
          sensors in the dataset. This includes information about those sensors that
          have complete data missing and those with a short date range. '
      example:
        MissingCompleteSensorData:
          AffectedSensorCount: ""
        SensorsWithShortDateRange:
          AffectedSensorCount: ""
      title: DataQualitySummary_InsufficientSensorData
    DataQualitySummary_MissingSensorData:
      allOf:
      - $ref: '#/components/schemas/MissingSensorData'
      - description: ' Parameter that gives information about data that is missing
          over all the sensors in the input data. '
      example:
        TotalNumberOfMissingValues: ""
        AffectedSensorCount: ""
      title: DataQualitySummary_MissingSensorData
    DataQualitySummary_InvalidSensorData:
      allOf:
      - $ref: '#/components/schemas/InvalidSensorData'
      - description: ' Parameter that gives information about data that is invalid
          over all the sensors in the input data. '
      example:
        TotalNumberOfInvalidValues: ""
        AffectedSensorCount: ""
      title: DataQualitySummary_InvalidSensorData
    DataQualitySummary_UnsupportedTimestamps:
      allOf:
      - $ref: '#/components/schemas/UnsupportedTimestamps'
      - description: ' Parameter that gives information about unsupported timestamps
          in the input data. '
      example:
        TotalNumberOfUnsupportedTimestamps: ""
      title: DataQualitySummary_UnsupportedTimestamps
    DataQualitySummary_DuplicateTimestamps:
      allOf:
      - $ref: '#/components/schemas/DuplicateTimestamps'
      - description: ' Parameter that gives information about duplicate timestamps
          in the input data. '
      example:
        TotalNumberOfDuplicateTimestamps: ""
      title: DataQualitySummary_DuplicateTimestamps
    InferenceExecutionSummary_DataOutputConfiguration:
      allOf:
      - $ref: '#/components/schemas/InferenceOutputConfiguration'
      - description: " Specifies configuration information for the output results\
          \ from for the inference execution, including the output Amazon S3 location. "
      title: InferenceExecutionSummary_DataOutputConfiguration
    InferenceExecutionSummary_CustomerResultObject:
      allOf:
      - $ref: '#/components/schemas/S3Object'
      - description: ' '
      title: InferenceExecutionSummary_CustomerResultObject
    SensorStatisticsSummary_MissingValues:
      allOf:
      - $ref: '#/components/schemas/CountPercent'
      - description: " Parameter that describes the total number of, and percentage\
          \ of, values that are missing for the sensor that the statistics belong\
          \ to. "
      title: SensorStatisticsSummary_MissingValues
    SensorStatisticsSummary_InvalidValues:
      allOf:
      - $ref: '#/components/schemas/CountPercent'
      - description: " Parameter that describes the total number of, and percentage\
          \ of, values that are invalid for the sensor that the statistics belong\
          \ to. "
      title: SensorStatisticsSummary_InvalidValues
    SensorStatisticsSummary_InvalidDateEntries:
      allOf:
      - $ref: '#/components/schemas/CountPercent'
      - description: ' Parameter that describes the total number of invalid date entries
          associated with the sensor that the statistics belong to. '
      title: SensorStatisticsSummary_InvalidDateEntries
    SensorStatisticsSummary_DuplicateTimestamps:
      allOf:
      - $ref: '#/components/schemas/CountPercent'
      - description: ' Parameter that describes the total number of duplicate timestamp
          records associated with the sensor that the statistics belong to. '
      title: SensorStatisticsSummary_DuplicateTimestamps
    SensorStatisticsSummary_CategoricalValues:
      allOf:
      - $ref: '#/components/schemas/CategoricalValues'
      - description: ' Parameter that describes potential risk about whether data
          associated with the sensor is categorical. '
      title: SensorStatisticsSummary_CategoricalValues
    SensorStatisticsSummary_MultipleOperatingModes:
      allOf:
      - $ref: '#/components/schemas/MultipleOperatingModes'
      - description: ' Parameter that describes potential risk about whether data
          associated with the sensor has more than one operating mode. '
      title: SensorStatisticsSummary_MultipleOperatingModes
    SensorStatisticsSummary_LargeTimestampGaps:
      allOf:
      - $ref: '#/components/schemas/LargeTimestampGaps'
      - description: ' Parameter that describes potential risk about whether data
          associated with the sensor contains one or more large gaps between consecutive
          timestamps. '
      title: SensorStatisticsSummary_LargeTimestampGaps
    SensorStatisticsSummary_MonotonicValues:
      allOf:
      - $ref: '#/components/schemas/MonotonicValues'
      - description: ' Parameter that describes potential risk about whether data
          associated with the sensor is mostly monotonic. '
      title: SensorStatisticsSummary_MonotonicValues
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
