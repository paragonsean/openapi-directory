/*
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateModelRequestDataPreProcessingConfiguration;
import org.openapitools.client.model.CreateModelRequestDatasetSchema;
import org.openapitools.client.model.CreateModelRequestLabelsInputConfiguration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateModelRequest
 */
public class CreateModelRequestTest {
    private final CreateModelRequest model = new CreateModelRequest();

    /**
     * Model tests for CreateModelRequest
     */
    @Test
    public void testCreateModelRequest() {
        // TODO: test CreateModelRequest
    }

    /**
     * Test the property 'modelName'
     */
    @Test
    public void modelNameTest() {
        // TODO: test modelName
    }

    /**
     * Test the property 'datasetName'
     */
    @Test
    public void datasetNameTest() {
        // TODO: test datasetName
    }

    /**
     * Test the property 'datasetSchema'
     */
    @Test
    public void datasetSchemaTest() {
        // TODO: test datasetSchema
    }

    /**
     * Test the property 'labelsInputConfiguration'
     */
    @Test
    public void labelsInputConfigurationTest() {
        // TODO: test labelsInputConfiguration
    }

    /**
     * Test the property 'clientToken'
     */
    @Test
    public void clientTokenTest() {
        // TODO: test clientToken
    }

    /**
     * Test the property 'trainingDataStartTime'
     */
    @Test
    public void trainingDataStartTimeTest() {
        // TODO: test trainingDataStartTime
    }

    /**
     * Test the property 'trainingDataEndTime'
     */
    @Test
    public void trainingDataEndTimeTest() {
        // TODO: test trainingDataEndTime
    }

    /**
     * Test the property 'evaluationDataStartTime'
     */
    @Test
    public void evaluationDataStartTimeTest() {
        // TODO: test evaluationDataStartTime
    }

    /**
     * Test the property 'evaluationDataEndTime'
     */
    @Test
    public void evaluationDataEndTimeTest() {
        // TODO: test evaluationDataEndTime
    }

    /**
     * Test the property 'roleArn'
     */
    @Test
    public void roleArnTest() {
        // TODO: test roleArn
    }

    /**
     * Test the property 'dataPreProcessingConfiguration'
     */
    @Test
    public void dataPreProcessingConfigurationTest() {
        // TODO: test dataPreProcessingConfiguration
    }

    /**
     * Test the property 'serverSideKmsKeyId'
     */
    @Test
    public void serverSideKmsKeyIdTest() {
        // TODO: test serverSideKmsKeyId
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'offCondition'
     */
    @Test
    public void offConditionTest() {
        // TODO: test offCondition
    }

}
