/*
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.SensorStatisticsSummaryCategoricalValues;
import org.openapitools.client.model.SensorStatisticsSummaryDuplicateTimestamps;
import org.openapitools.client.model.SensorStatisticsSummaryInvalidDateEntries;
import org.openapitools.client.model.SensorStatisticsSummaryInvalidValues;
import org.openapitools.client.model.SensorStatisticsSummaryLargeTimestampGaps;
import org.openapitools.client.model.SensorStatisticsSummaryMissingValues;
import org.openapitools.client.model.SensorStatisticsSummaryMonotonicValues;
import org.openapitools.client.model.SensorStatisticsSummaryMultipleOperatingModes;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SensorStatisticsSummary
 */
public class SensorStatisticsSummaryTest {
    private final SensorStatisticsSummary model = new SensorStatisticsSummary();

    /**
     * Model tests for SensorStatisticsSummary
     */
    @Test
    public void testSensorStatisticsSummary() {
        // TODO: test SensorStatisticsSummary
    }

    /**
     * Test the property 'componentName'
     */
    @Test
    public void componentNameTest() {
        // TODO: test componentName
    }

    /**
     * Test the property 'sensorName'
     */
    @Test
    public void sensorNameTest() {
        // TODO: test sensorName
    }

    /**
     * Test the property 'dataExists'
     */
    @Test
    public void dataExistsTest() {
        // TODO: test dataExists
    }

    /**
     * Test the property 'missingValues'
     */
    @Test
    public void missingValuesTest() {
        // TODO: test missingValues
    }

    /**
     * Test the property 'invalidValues'
     */
    @Test
    public void invalidValuesTest() {
        // TODO: test invalidValues
    }

    /**
     * Test the property 'invalidDateEntries'
     */
    @Test
    public void invalidDateEntriesTest() {
        // TODO: test invalidDateEntries
    }

    /**
     * Test the property 'duplicateTimestamps'
     */
    @Test
    public void duplicateTimestampsTest() {
        // TODO: test duplicateTimestamps
    }

    /**
     * Test the property 'categoricalValues'
     */
    @Test
    public void categoricalValuesTest() {
        // TODO: test categoricalValues
    }

    /**
     * Test the property 'multipleOperatingModes'
     */
    @Test
    public void multipleOperatingModesTest() {
        // TODO: test multipleOperatingModes
    }

    /**
     * Test the property 'largeTimestampGaps'
     */
    @Test
    public void largeTimestampGapsTest() {
        // TODO: test largeTimestampGaps
    }

    /**
     * Test the property 'monotonicValues'
     */
    @Test
    public void monotonicValuesTest() {
        // TODO: test monotonicValues
    }

    /**
     * Test the property 'dataStartTime'
     */
    @Test
    public void dataStartTimeTest() {
        // TODO: test dataStartTime
    }

    /**
     * Test the property 'dataEndTime'
     */
    @Test
    public void dataEndTimeTest() {
        // TODO: test dataEndTime
    }

}
