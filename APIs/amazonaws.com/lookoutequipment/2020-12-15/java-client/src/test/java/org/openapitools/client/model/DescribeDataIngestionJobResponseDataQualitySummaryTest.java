/*
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DataQualitySummaryDuplicateTimestamps;
import org.openapitools.client.model.DataQualitySummaryInsufficientSensorData;
import org.openapitools.client.model.DataQualitySummaryInvalidSensorData;
import org.openapitools.client.model.DataQualitySummaryMissingSensorData;
import org.openapitools.client.model.DataQualitySummaryUnsupportedTimestamps;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DescribeDataIngestionJobResponseDataQualitySummary
 */
public class DescribeDataIngestionJobResponseDataQualitySummaryTest {
    private final DescribeDataIngestionJobResponseDataQualitySummary model = new DescribeDataIngestionJobResponseDataQualitySummary();

    /**
     * Model tests for DescribeDataIngestionJobResponseDataQualitySummary
     */
    @Test
    public void testDescribeDataIngestionJobResponseDataQualitySummary() {
        // TODO: test DescribeDataIngestionJobResponseDataQualitySummary
    }

    /**
     * Test the property 'insufficientSensorData'
     */
    @Test
    public void insufficientSensorDataTest() {
        // TODO: test insufficientSensorData
    }

    /**
     * Test the property 'missingSensorData'
     */
    @Test
    public void missingSensorDataTest() {
        // TODO: test missingSensorData
    }

    /**
     * Test the property 'invalidSensorData'
     */
    @Test
    public void invalidSensorDataTest() {
        // TODO: test invalidSensorData
    }

    /**
     * Test the property 'unsupportedTimestamps'
     */
    @Test
    public void unsupportedTimestampsTest() {
        // TODO: test unsupportedTimestamps
    }

    /**
     * Test the property 'duplicateTimestamps'
     */
    @Test
    public void duplicateTimestampsTest() {
        // TODO: test duplicateTimestamps
    }

}
