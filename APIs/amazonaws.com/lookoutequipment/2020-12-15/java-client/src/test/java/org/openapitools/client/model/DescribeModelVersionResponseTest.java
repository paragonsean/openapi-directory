/*
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DataPreProcessingConfiguration;
import org.openapitools.client.model.LabelsInputConfiguration;
import org.openapitools.client.model.ModelVersionSourceType;
import org.openapitools.client.model.ModelVersionStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DescribeModelVersionResponse
 */
public class DescribeModelVersionResponseTest {
    private final DescribeModelVersionResponse model = new DescribeModelVersionResponse();

    /**
     * Model tests for DescribeModelVersionResponse
     */
    @Test
    public void testDescribeModelVersionResponse() {
        // TODO: test DescribeModelVersionResponse
    }

    /**
     * Test the property 'modelName'
     */
    @Test
    public void modelNameTest() {
        // TODO: test modelName
    }

    /**
     * Test the property 'modelArn'
     */
    @Test
    public void modelArnTest() {
        // TODO: test modelArn
    }

    /**
     * Test the property 'modelVersion'
     */
    @Test
    public void modelVersionTest() {
        // TODO: test modelVersion
    }

    /**
     * Test the property 'modelVersionArn'
     */
    @Test
    public void modelVersionArnTest() {
        // TODO: test modelVersionArn
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'sourceType'
     */
    @Test
    public void sourceTypeTest() {
        // TODO: test sourceType
    }

    /**
     * Test the property 'datasetName'
     */
    @Test
    public void datasetNameTest() {
        // TODO: test datasetName
    }

    /**
     * Test the property 'datasetArn'
     */
    @Test
    public void datasetArnTest() {
        // TODO: test datasetArn
    }

    /**
     * Test the property 'schema'
     */
    @Test
    public void schemaTest() {
        // TODO: test schema
    }

    /**
     * Test the property 'labelsInputConfiguration'
     */
    @Test
    public void labelsInputConfigurationTest() {
        // TODO: test labelsInputConfiguration
    }

    /**
     * Test the property 'trainingDataStartTime'
     */
    @Test
    public void trainingDataStartTimeTest() {
        // TODO: test trainingDataStartTime
    }

    /**
     * Test the property 'trainingDataEndTime'
     */
    @Test
    public void trainingDataEndTimeTest() {
        // TODO: test trainingDataEndTime
    }

    /**
     * Test the property 'evaluationDataStartTime'
     */
    @Test
    public void evaluationDataStartTimeTest() {
        // TODO: test evaluationDataStartTime
    }

    /**
     * Test the property 'evaluationDataEndTime'
     */
    @Test
    public void evaluationDataEndTimeTest() {
        // TODO: test evaluationDataEndTime
    }

    /**
     * Test the property 'roleArn'
     */
    @Test
    public void roleArnTest() {
        // TODO: test roleArn
    }

    /**
     * Test the property 'dataPreProcessingConfiguration'
     */
    @Test
    public void dataPreProcessingConfigurationTest() {
        // TODO: test dataPreProcessingConfiguration
    }

    /**
     * Test the property 'trainingExecutionStartTime'
     */
    @Test
    public void trainingExecutionStartTimeTest() {
        // TODO: test trainingExecutionStartTime
    }

    /**
     * Test the property 'trainingExecutionEndTime'
     */
    @Test
    public void trainingExecutionEndTimeTest() {
        // TODO: test trainingExecutionEndTime
    }

    /**
     * Test the property 'failedReason'
     */
    @Test
    public void failedReasonTest() {
        // TODO: test failedReason
    }

    /**
     * Test the property 'modelMetrics'
     */
    @Test
    public void modelMetricsTest() {
        // TODO: test modelMetrics
    }

    /**
     * Test the property 'lastUpdatedTime'
     */
    @Test
    public void lastUpdatedTimeTest() {
        // TODO: test lastUpdatedTime
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'serverSideKmsKeyId'
     */
    @Test
    public void serverSideKmsKeyIdTest() {
        // TODO: test serverSideKmsKeyId
    }

    /**
     * Test the property 'offCondition'
     */
    @Test
    public void offConditionTest() {
        // TODO: test offCondition
    }

    /**
     * Test the property 'sourceModelVersionArn'
     */
    @Test
    public void sourceModelVersionArnTest() {
        // TODO: test sourceModelVersionArn
    }

    /**
     * Test the property 'importJobStartTime'
     */
    @Test
    public void importJobStartTimeTest() {
        // TODO: test importJobStartTime
    }

    /**
     * Test the property 'importJobEndTime'
     */
    @Test
    public void importJobEndTimeTest() {
        // TODO: test importJobEndTime
    }

    /**
     * Test the property 'importedDataSizeInBytes'
     */
    @Test
    public void importedDataSizeInBytesTest() {
        // TODO: test importedDataSizeInBytes
    }

}
