/*
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DataUploadFrequency;
import org.openapitools.client.model.DescribeInferenceSchedulerResponseDataInputConfiguration;
import org.openapitools.client.model.DescribeInferenceSchedulerResponseDataOutputConfiguration;
import org.openapitools.client.model.InferenceSchedulerStatus;
import org.openapitools.client.model.LatestInferenceResult;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeInferenceSchedulerResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:18.043707-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeInferenceSchedulerResponse {
  public static final String SERIALIZED_NAME_MODEL_ARN = "ModelArn";
  @SerializedName(SERIALIZED_NAME_MODEL_ARN)
  private String modelArn;

  public static final String SERIALIZED_NAME_MODEL_NAME = "ModelName";
  @SerializedName(SERIALIZED_NAME_MODEL_NAME)
  private String modelName;

  public static final String SERIALIZED_NAME_INFERENCE_SCHEDULER_NAME = "InferenceSchedulerName";
  @SerializedName(SERIALIZED_NAME_INFERENCE_SCHEDULER_NAME)
  private String inferenceSchedulerName;

  public static final String SERIALIZED_NAME_INFERENCE_SCHEDULER_ARN = "InferenceSchedulerArn";
  @SerializedName(SERIALIZED_NAME_INFERENCE_SCHEDULER_ARN)
  private String inferenceSchedulerArn;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private InferenceSchedulerStatus status;

  public static final String SERIALIZED_NAME_DATA_DELAY_OFFSET_IN_MINUTES = "DataDelayOffsetInMinutes";
  @SerializedName(SERIALIZED_NAME_DATA_DELAY_OFFSET_IN_MINUTES)
  private Integer dataDelayOffsetInMinutes;

  public static final String SERIALIZED_NAME_DATA_UPLOAD_FREQUENCY = "DataUploadFrequency";
  @SerializedName(SERIALIZED_NAME_DATA_UPLOAD_FREQUENCY)
  private DataUploadFrequency dataUploadFrequency;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "UpdatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_DATA_INPUT_CONFIGURATION = "DataInputConfiguration";
  @SerializedName(SERIALIZED_NAME_DATA_INPUT_CONFIGURATION)
  private DescribeInferenceSchedulerResponseDataInputConfiguration dataInputConfiguration;

  public static final String SERIALIZED_NAME_DATA_OUTPUT_CONFIGURATION = "DataOutputConfiguration";
  @SerializedName(SERIALIZED_NAME_DATA_OUTPUT_CONFIGURATION)
  private DescribeInferenceSchedulerResponseDataOutputConfiguration dataOutputConfiguration;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_SERVER_SIDE_KMS_KEY_ID = "ServerSideKmsKeyId";
  @SerializedName(SERIALIZED_NAME_SERVER_SIDE_KMS_KEY_ID)
  private String serverSideKmsKeyId;

  public static final String SERIALIZED_NAME_LATEST_INFERENCE_RESULT = "LatestInferenceResult";
  @SerializedName(SERIALIZED_NAME_LATEST_INFERENCE_RESULT)
  private LatestInferenceResult latestInferenceResult;

  public DescribeInferenceSchedulerResponse() {
  }

  public DescribeInferenceSchedulerResponse modelArn(String modelArn) {
    this.modelArn = modelArn;
    return this;
  }

  /**
   * Get modelArn
   * @return modelArn
   */
  @javax.annotation.Nullable
  public String getModelArn() {
    return modelArn;
  }

  public void setModelArn(String modelArn) {
    this.modelArn = modelArn;
  }


  public DescribeInferenceSchedulerResponse modelName(String modelName) {
    this.modelName = modelName;
    return this;
  }

  /**
   * Get modelName
   * @return modelName
   */
  @javax.annotation.Nullable
  public String getModelName() {
    return modelName;
  }

  public void setModelName(String modelName) {
    this.modelName = modelName;
  }


  public DescribeInferenceSchedulerResponse inferenceSchedulerName(String inferenceSchedulerName) {
    this.inferenceSchedulerName = inferenceSchedulerName;
    return this;
  }

  /**
   * Get inferenceSchedulerName
   * @return inferenceSchedulerName
   */
  @javax.annotation.Nullable
  public String getInferenceSchedulerName() {
    return inferenceSchedulerName;
  }

  public void setInferenceSchedulerName(String inferenceSchedulerName) {
    this.inferenceSchedulerName = inferenceSchedulerName;
  }


  public DescribeInferenceSchedulerResponse inferenceSchedulerArn(String inferenceSchedulerArn) {
    this.inferenceSchedulerArn = inferenceSchedulerArn;
    return this;
  }

  /**
   * Get inferenceSchedulerArn
   * @return inferenceSchedulerArn
   */
  @javax.annotation.Nullable
  public String getInferenceSchedulerArn() {
    return inferenceSchedulerArn;
  }

  public void setInferenceSchedulerArn(String inferenceSchedulerArn) {
    this.inferenceSchedulerArn = inferenceSchedulerArn;
  }


  public DescribeInferenceSchedulerResponse status(InferenceSchedulerStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public InferenceSchedulerStatus getStatus() {
    return status;
  }

  public void setStatus(InferenceSchedulerStatus status) {
    this.status = status;
  }


  public DescribeInferenceSchedulerResponse dataDelayOffsetInMinutes(Integer dataDelayOffsetInMinutes) {
    this.dataDelayOffsetInMinutes = dataDelayOffsetInMinutes;
    return this;
  }

  /**
   * Get dataDelayOffsetInMinutes
   * @return dataDelayOffsetInMinutes
   */
  @javax.annotation.Nullable
  public Integer getDataDelayOffsetInMinutes() {
    return dataDelayOffsetInMinutes;
  }

  public void setDataDelayOffsetInMinutes(Integer dataDelayOffsetInMinutes) {
    this.dataDelayOffsetInMinutes = dataDelayOffsetInMinutes;
  }


  public DescribeInferenceSchedulerResponse dataUploadFrequency(DataUploadFrequency dataUploadFrequency) {
    this.dataUploadFrequency = dataUploadFrequency;
    return this;
  }

  /**
   * Get dataUploadFrequency
   * @return dataUploadFrequency
   */
  @javax.annotation.Nullable
  public DataUploadFrequency getDataUploadFrequency() {
    return dataUploadFrequency;
  }

  public void setDataUploadFrequency(DataUploadFrequency dataUploadFrequency) {
    this.dataUploadFrequency = dataUploadFrequency;
  }


  public DescribeInferenceSchedulerResponse createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public DescribeInferenceSchedulerResponse updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public DescribeInferenceSchedulerResponse dataInputConfiguration(DescribeInferenceSchedulerResponseDataInputConfiguration dataInputConfiguration) {
    this.dataInputConfiguration = dataInputConfiguration;
    return this;
  }

  /**
   * Get dataInputConfiguration
   * @return dataInputConfiguration
   */
  @javax.annotation.Nullable
  public DescribeInferenceSchedulerResponseDataInputConfiguration getDataInputConfiguration() {
    return dataInputConfiguration;
  }

  public void setDataInputConfiguration(DescribeInferenceSchedulerResponseDataInputConfiguration dataInputConfiguration) {
    this.dataInputConfiguration = dataInputConfiguration;
  }


  public DescribeInferenceSchedulerResponse dataOutputConfiguration(DescribeInferenceSchedulerResponseDataOutputConfiguration dataOutputConfiguration) {
    this.dataOutputConfiguration = dataOutputConfiguration;
    return this;
  }

  /**
   * Get dataOutputConfiguration
   * @return dataOutputConfiguration
   */
  @javax.annotation.Nullable
  public DescribeInferenceSchedulerResponseDataOutputConfiguration getDataOutputConfiguration() {
    return dataOutputConfiguration;
  }

  public void setDataOutputConfiguration(DescribeInferenceSchedulerResponseDataOutputConfiguration dataOutputConfiguration) {
    this.dataOutputConfiguration = dataOutputConfiguration;
  }


  public DescribeInferenceSchedulerResponse roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public DescribeInferenceSchedulerResponse serverSideKmsKeyId(String serverSideKmsKeyId) {
    this.serverSideKmsKeyId = serverSideKmsKeyId;
    return this;
  }

  /**
   * Get serverSideKmsKeyId
   * @return serverSideKmsKeyId
   */
  @javax.annotation.Nullable
  public String getServerSideKmsKeyId() {
    return serverSideKmsKeyId;
  }

  public void setServerSideKmsKeyId(String serverSideKmsKeyId) {
    this.serverSideKmsKeyId = serverSideKmsKeyId;
  }


  public DescribeInferenceSchedulerResponse latestInferenceResult(LatestInferenceResult latestInferenceResult) {
    this.latestInferenceResult = latestInferenceResult;
    return this;
  }

  /**
   * Get latestInferenceResult
   * @return latestInferenceResult
   */
  @javax.annotation.Nullable
  public LatestInferenceResult getLatestInferenceResult() {
    return latestInferenceResult;
  }

  public void setLatestInferenceResult(LatestInferenceResult latestInferenceResult) {
    this.latestInferenceResult = latestInferenceResult;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeInferenceSchedulerResponse describeInferenceSchedulerResponse = (DescribeInferenceSchedulerResponse) o;
    return Objects.equals(this.modelArn, describeInferenceSchedulerResponse.modelArn) &&
        Objects.equals(this.modelName, describeInferenceSchedulerResponse.modelName) &&
        Objects.equals(this.inferenceSchedulerName, describeInferenceSchedulerResponse.inferenceSchedulerName) &&
        Objects.equals(this.inferenceSchedulerArn, describeInferenceSchedulerResponse.inferenceSchedulerArn) &&
        Objects.equals(this.status, describeInferenceSchedulerResponse.status) &&
        Objects.equals(this.dataDelayOffsetInMinutes, describeInferenceSchedulerResponse.dataDelayOffsetInMinutes) &&
        Objects.equals(this.dataUploadFrequency, describeInferenceSchedulerResponse.dataUploadFrequency) &&
        Objects.equals(this.createdAt, describeInferenceSchedulerResponse.createdAt) &&
        Objects.equals(this.updatedAt, describeInferenceSchedulerResponse.updatedAt) &&
        Objects.equals(this.dataInputConfiguration, describeInferenceSchedulerResponse.dataInputConfiguration) &&
        Objects.equals(this.dataOutputConfiguration, describeInferenceSchedulerResponse.dataOutputConfiguration) &&
        Objects.equals(this.roleArn, describeInferenceSchedulerResponse.roleArn) &&
        Objects.equals(this.serverSideKmsKeyId, describeInferenceSchedulerResponse.serverSideKmsKeyId) &&
        Objects.equals(this.latestInferenceResult, describeInferenceSchedulerResponse.latestInferenceResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelArn, modelName, inferenceSchedulerName, inferenceSchedulerArn, status, dataDelayOffsetInMinutes, dataUploadFrequency, createdAt, updatedAt, dataInputConfiguration, dataOutputConfiguration, roleArn, serverSideKmsKeyId, latestInferenceResult);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeInferenceSchedulerResponse {\n");
    sb.append("    modelArn: ").append(toIndentedString(modelArn)).append("\n");
    sb.append("    modelName: ").append(toIndentedString(modelName)).append("\n");
    sb.append("    inferenceSchedulerName: ").append(toIndentedString(inferenceSchedulerName)).append("\n");
    sb.append("    inferenceSchedulerArn: ").append(toIndentedString(inferenceSchedulerArn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    dataDelayOffsetInMinutes: ").append(toIndentedString(dataDelayOffsetInMinutes)).append("\n");
    sb.append("    dataUploadFrequency: ").append(toIndentedString(dataUploadFrequency)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    dataInputConfiguration: ").append(toIndentedString(dataInputConfiguration)).append("\n");
    sb.append("    dataOutputConfiguration: ").append(toIndentedString(dataOutputConfiguration)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    serverSideKmsKeyId: ").append(toIndentedString(serverSideKmsKeyId)).append("\n");
    sb.append("    latestInferenceResult: ").append(toIndentedString(latestInferenceResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ModelArn");
    openapiFields.add("ModelName");
    openapiFields.add("InferenceSchedulerName");
    openapiFields.add("InferenceSchedulerArn");
    openapiFields.add("Status");
    openapiFields.add("DataDelayOffsetInMinutes");
    openapiFields.add("DataUploadFrequency");
    openapiFields.add("CreatedAt");
    openapiFields.add("UpdatedAt");
    openapiFields.add("DataInputConfiguration");
    openapiFields.add("DataOutputConfiguration");
    openapiFields.add("RoleArn");
    openapiFields.add("ServerSideKmsKeyId");
    openapiFields.add("LatestInferenceResult");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeInferenceSchedulerResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeInferenceSchedulerResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeInferenceSchedulerResponse is not found in the empty JSON string", DescribeInferenceSchedulerResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeInferenceSchedulerResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeInferenceSchedulerResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ModelArn`
      if (jsonObj.get("ModelArn") != null && !jsonObj.get("ModelArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelArn"));
      }
      // validate the optional field `ModelName`
      if (jsonObj.get("ModelName") != null && !jsonObj.get("ModelName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelName"));
      }
      // validate the optional field `InferenceSchedulerName`
      if (jsonObj.get("InferenceSchedulerName") != null && !jsonObj.get("InferenceSchedulerName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InferenceSchedulerName"));
      }
      // validate the optional field `InferenceSchedulerArn`
      if (jsonObj.get("InferenceSchedulerArn") != null && !jsonObj.get("InferenceSchedulerArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InferenceSchedulerArn"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        InferenceSchedulerStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `DataDelayOffsetInMinutes`
      if (jsonObj.get("DataDelayOffsetInMinutes") != null && !jsonObj.get("DataDelayOffsetInMinutes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("DataDelayOffsetInMinutes"));
      }
      // validate the optional field `DataUploadFrequency`
      if (jsonObj.get("DataUploadFrequency") != null && !jsonObj.get("DataUploadFrequency").isJsonNull()) {
        DataUploadFrequency.validateJsonElement(jsonObj.get("DataUploadFrequency"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `UpdatedAt`
      if (jsonObj.get("UpdatedAt") != null && !jsonObj.get("UpdatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("UpdatedAt"));
      }
      // validate the optional field `DataInputConfiguration`
      if (jsonObj.get("DataInputConfiguration") != null && !jsonObj.get("DataInputConfiguration").isJsonNull()) {
        DescribeInferenceSchedulerResponseDataInputConfiguration.validateJsonElement(jsonObj.get("DataInputConfiguration"));
      }
      // validate the optional field `DataOutputConfiguration`
      if (jsonObj.get("DataOutputConfiguration") != null && !jsonObj.get("DataOutputConfiguration").isJsonNull()) {
        DescribeInferenceSchedulerResponseDataOutputConfiguration.validateJsonElement(jsonObj.get("DataOutputConfiguration"));
      }
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `ServerSideKmsKeyId`
      if (jsonObj.get("ServerSideKmsKeyId") != null && !jsonObj.get("ServerSideKmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServerSideKmsKeyId"));
      }
      // validate the optional field `LatestInferenceResult`
      if (jsonObj.get("LatestInferenceResult") != null && !jsonObj.get("LatestInferenceResult").isJsonNull()) {
        LatestInferenceResult.validateJsonElement(jsonObj.get("LatestInferenceResult"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeInferenceSchedulerResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeInferenceSchedulerResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeInferenceSchedulerResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeInferenceSchedulerResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeInferenceSchedulerResponse>() {
           @Override
           public void write(JsonWriter out, DescribeInferenceSchedulerResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeInferenceSchedulerResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeInferenceSchedulerResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeInferenceSchedulerResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeInferenceSchedulerResponse
   */
  public static DescribeInferenceSchedulerResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeInferenceSchedulerResponse.class);
  }

  /**
   * Convert an instance of DescribeInferenceSchedulerResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

