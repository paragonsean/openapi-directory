/*
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DataPreProcessingConfiguration;
import org.openapitools.client.model.LabelsInputConfiguration;
import org.openapitools.client.model.ModelVersionSourceType;
import org.openapitools.client.model.ModelVersionStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeModelVersionResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:18.043707-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeModelVersionResponse {
  public static final String SERIALIZED_NAME_MODEL_NAME = "ModelName";
  @SerializedName(SERIALIZED_NAME_MODEL_NAME)
  private String modelName;

  public static final String SERIALIZED_NAME_MODEL_ARN = "ModelArn";
  @SerializedName(SERIALIZED_NAME_MODEL_ARN)
  private String modelArn;

  public static final String SERIALIZED_NAME_MODEL_VERSION = "ModelVersion";
  @SerializedName(SERIALIZED_NAME_MODEL_VERSION)
  private Integer modelVersion;

  public static final String SERIALIZED_NAME_MODEL_VERSION_ARN = "ModelVersionArn";
  @SerializedName(SERIALIZED_NAME_MODEL_VERSION_ARN)
  private String modelVersionArn;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ModelVersionStatus status;

  public static final String SERIALIZED_NAME_SOURCE_TYPE = "SourceType";
  @SerializedName(SERIALIZED_NAME_SOURCE_TYPE)
  private ModelVersionSourceType sourceType;

  public static final String SERIALIZED_NAME_DATASET_NAME = "DatasetName";
  @SerializedName(SERIALIZED_NAME_DATASET_NAME)
  private String datasetName;

  public static final String SERIALIZED_NAME_DATASET_ARN = "DatasetArn";
  @SerializedName(SERIALIZED_NAME_DATASET_ARN)
  private String datasetArn;

  public static final String SERIALIZED_NAME_SCHEMA = "Schema";
  @SerializedName(SERIALIZED_NAME_SCHEMA)
  private String schema;

  public static final String SERIALIZED_NAME_LABELS_INPUT_CONFIGURATION = "LabelsInputConfiguration";
  @SerializedName(SERIALIZED_NAME_LABELS_INPUT_CONFIGURATION)
  private LabelsInputConfiguration labelsInputConfiguration;

  public static final String SERIALIZED_NAME_TRAINING_DATA_START_TIME = "TrainingDataStartTime";
  @SerializedName(SERIALIZED_NAME_TRAINING_DATA_START_TIME)
  private OffsetDateTime trainingDataStartTime;

  public static final String SERIALIZED_NAME_TRAINING_DATA_END_TIME = "TrainingDataEndTime";
  @SerializedName(SERIALIZED_NAME_TRAINING_DATA_END_TIME)
  private OffsetDateTime trainingDataEndTime;

  public static final String SERIALIZED_NAME_EVALUATION_DATA_START_TIME = "EvaluationDataStartTime";
  @SerializedName(SERIALIZED_NAME_EVALUATION_DATA_START_TIME)
  private OffsetDateTime evaluationDataStartTime;

  public static final String SERIALIZED_NAME_EVALUATION_DATA_END_TIME = "EvaluationDataEndTime";
  @SerializedName(SERIALIZED_NAME_EVALUATION_DATA_END_TIME)
  private OffsetDateTime evaluationDataEndTime;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_DATA_PRE_PROCESSING_CONFIGURATION = "DataPreProcessingConfiguration";
  @SerializedName(SERIALIZED_NAME_DATA_PRE_PROCESSING_CONFIGURATION)
  private DataPreProcessingConfiguration dataPreProcessingConfiguration;

  public static final String SERIALIZED_NAME_TRAINING_EXECUTION_START_TIME = "TrainingExecutionStartTime";
  @SerializedName(SERIALIZED_NAME_TRAINING_EXECUTION_START_TIME)
  private OffsetDateTime trainingExecutionStartTime;

  public static final String SERIALIZED_NAME_TRAINING_EXECUTION_END_TIME = "TrainingExecutionEndTime";
  @SerializedName(SERIALIZED_NAME_TRAINING_EXECUTION_END_TIME)
  private OffsetDateTime trainingExecutionEndTime;

  public static final String SERIALIZED_NAME_FAILED_REASON = "FailedReason";
  @SerializedName(SERIALIZED_NAME_FAILED_REASON)
  private String failedReason;

  public static final String SERIALIZED_NAME_MODEL_METRICS = "ModelMetrics";
  @SerializedName(SERIALIZED_NAME_MODEL_METRICS)
  private String modelMetrics;

  public static final String SERIALIZED_NAME_LAST_UPDATED_TIME = "LastUpdatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_TIME)
  private OffsetDateTime lastUpdatedTime;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_SERVER_SIDE_KMS_KEY_ID = "ServerSideKmsKeyId";
  @SerializedName(SERIALIZED_NAME_SERVER_SIDE_KMS_KEY_ID)
  private String serverSideKmsKeyId;

  public static final String SERIALIZED_NAME_OFF_CONDITION = "OffCondition";
  @SerializedName(SERIALIZED_NAME_OFF_CONDITION)
  private String offCondition;

  public static final String SERIALIZED_NAME_SOURCE_MODEL_VERSION_ARN = "SourceModelVersionArn";
  @SerializedName(SERIALIZED_NAME_SOURCE_MODEL_VERSION_ARN)
  private String sourceModelVersionArn;

  public static final String SERIALIZED_NAME_IMPORT_JOB_START_TIME = "ImportJobStartTime";
  @SerializedName(SERIALIZED_NAME_IMPORT_JOB_START_TIME)
  private OffsetDateTime importJobStartTime;

  public static final String SERIALIZED_NAME_IMPORT_JOB_END_TIME = "ImportJobEndTime";
  @SerializedName(SERIALIZED_NAME_IMPORT_JOB_END_TIME)
  private OffsetDateTime importJobEndTime;

  public static final String SERIALIZED_NAME_IMPORTED_DATA_SIZE_IN_BYTES = "ImportedDataSizeInBytes";
  @SerializedName(SERIALIZED_NAME_IMPORTED_DATA_SIZE_IN_BYTES)
  private Integer importedDataSizeInBytes;

  public DescribeModelVersionResponse() {
  }

  public DescribeModelVersionResponse modelName(String modelName) {
    this.modelName = modelName;
    return this;
  }

  /**
   * Get modelName
   * @return modelName
   */
  @javax.annotation.Nullable
  public String getModelName() {
    return modelName;
  }

  public void setModelName(String modelName) {
    this.modelName = modelName;
  }


  public DescribeModelVersionResponse modelArn(String modelArn) {
    this.modelArn = modelArn;
    return this;
  }

  /**
   * Get modelArn
   * @return modelArn
   */
  @javax.annotation.Nullable
  public String getModelArn() {
    return modelArn;
  }

  public void setModelArn(String modelArn) {
    this.modelArn = modelArn;
  }


  public DescribeModelVersionResponse modelVersion(Integer modelVersion) {
    this.modelVersion = modelVersion;
    return this;
  }

  /**
   * Get modelVersion
   * @return modelVersion
   */
  @javax.annotation.Nullable
  public Integer getModelVersion() {
    return modelVersion;
  }

  public void setModelVersion(Integer modelVersion) {
    this.modelVersion = modelVersion;
  }


  public DescribeModelVersionResponse modelVersionArn(String modelVersionArn) {
    this.modelVersionArn = modelVersionArn;
    return this;
  }

  /**
   * Get modelVersionArn
   * @return modelVersionArn
   */
  @javax.annotation.Nullable
  public String getModelVersionArn() {
    return modelVersionArn;
  }

  public void setModelVersionArn(String modelVersionArn) {
    this.modelVersionArn = modelVersionArn;
  }


  public DescribeModelVersionResponse status(ModelVersionStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ModelVersionStatus getStatus() {
    return status;
  }

  public void setStatus(ModelVersionStatus status) {
    this.status = status;
  }


  public DescribeModelVersionResponse sourceType(ModelVersionSourceType sourceType) {
    this.sourceType = sourceType;
    return this;
  }

  /**
   * Get sourceType
   * @return sourceType
   */
  @javax.annotation.Nullable
  public ModelVersionSourceType getSourceType() {
    return sourceType;
  }

  public void setSourceType(ModelVersionSourceType sourceType) {
    this.sourceType = sourceType;
  }


  public DescribeModelVersionResponse datasetName(String datasetName) {
    this.datasetName = datasetName;
    return this;
  }

  /**
   * Get datasetName
   * @return datasetName
   */
  @javax.annotation.Nullable
  public String getDatasetName() {
    return datasetName;
  }

  public void setDatasetName(String datasetName) {
    this.datasetName = datasetName;
  }


  public DescribeModelVersionResponse datasetArn(String datasetArn) {
    this.datasetArn = datasetArn;
    return this;
  }

  /**
   * Get datasetArn
   * @return datasetArn
   */
  @javax.annotation.Nullable
  public String getDatasetArn() {
    return datasetArn;
  }

  public void setDatasetArn(String datasetArn) {
    this.datasetArn = datasetArn;
  }


  public DescribeModelVersionResponse schema(String schema) {
    this.schema = schema;
    return this;
  }

  /**
   * Get schema
   * @return schema
   */
  @javax.annotation.Nullable
  public String getSchema() {
    return schema;
  }

  public void setSchema(String schema) {
    this.schema = schema;
  }


  public DescribeModelVersionResponse labelsInputConfiguration(LabelsInputConfiguration labelsInputConfiguration) {
    this.labelsInputConfiguration = labelsInputConfiguration;
    return this;
  }

  /**
   * Get labelsInputConfiguration
   * @return labelsInputConfiguration
   */
  @javax.annotation.Nullable
  public LabelsInputConfiguration getLabelsInputConfiguration() {
    return labelsInputConfiguration;
  }

  public void setLabelsInputConfiguration(LabelsInputConfiguration labelsInputConfiguration) {
    this.labelsInputConfiguration = labelsInputConfiguration;
  }


  public DescribeModelVersionResponse trainingDataStartTime(OffsetDateTime trainingDataStartTime) {
    this.trainingDataStartTime = trainingDataStartTime;
    return this;
  }

  /**
   * Get trainingDataStartTime
   * @return trainingDataStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTrainingDataStartTime() {
    return trainingDataStartTime;
  }

  public void setTrainingDataStartTime(OffsetDateTime trainingDataStartTime) {
    this.trainingDataStartTime = trainingDataStartTime;
  }


  public DescribeModelVersionResponse trainingDataEndTime(OffsetDateTime trainingDataEndTime) {
    this.trainingDataEndTime = trainingDataEndTime;
    return this;
  }

  /**
   * Get trainingDataEndTime
   * @return trainingDataEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTrainingDataEndTime() {
    return trainingDataEndTime;
  }

  public void setTrainingDataEndTime(OffsetDateTime trainingDataEndTime) {
    this.trainingDataEndTime = trainingDataEndTime;
  }


  public DescribeModelVersionResponse evaluationDataStartTime(OffsetDateTime evaluationDataStartTime) {
    this.evaluationDataStartTime = evaluationDataStartTime;
    return this;
  }

  /**
   * Get evaluationDataStartTime
   * @return evaluationDataStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEvaluationDataStartTime() {
    return evaluationDataStartTime;
  }

  public void setEvaluationDataStartTime(OffsetDateTime evaluationDataStartTime) {
    this.evaluationDataStartTime = evaluationDataStartTime;
  }


  public DescribeModelVersionResponse evaluationDataEndTime(OffsetDateTime evaluationDataEndTime) {
    this.evaluationDataEndTime = evaluationDataEndTime;
    return this;
  }

  /**
   * Get evaluationDataEndTime
   * @return evaluationDataEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEvaluationDataEndTime() {
    return evaluationDataEndTime;
  }

  public void setEvaluationDataEndTime(OffsetDateTime evaluationDataEndTime) {
    this.evaluationDataEndTime = evaluationDataEndTime;
  }


  public DescribeModelVersionResponse roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public DescribeModelVersionResponse dataPreProcessingConfiguration(DataPreProcessingConfiguration dataPreProcessingConfiguration) {
    this.dataPreProcessingConfiguration = dataPreProcessingConfiguration;
    return this;
  }

  /**
   * Get dataPreProcessingConfiguration
   * @return dataPreProcessingConfiguration
   */
  @javax.annotation.Nullable
  public DataPreProcessingConfiguration getDataPreProcessingConfiguration() {
    return dataPreProcessingConfiguration;
  }

  public void setDataPreProcessingConfiguration(DataPreProcessingConfiguration dataPreProcessingConfiguration) {
    this.dataPreProcessingConfiguration = dataPreProcessingConfiguration;
  }


  public DescribeModelVersionResponse trainingExecutionStartTime(OffsetDateTime trainingExecutionStartTime) {
    this.trainingExecutionStartTime = trainingExecutionStartTime;
    return this;
  }

  /**
   * Get trainingExecutionStartTime
   * @return trainingExecutionStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTrainingExecutionStartTime() {
    return trainingExecutionStartTime;
  }

  public void setTrainingExecutionStartTime(OffsetDateTime trainingExecutionStartTime) {
    this.trainingExecutionStartTime = trainingExecutionStartTime;
  }


  public DescribeModelVersionResponse trainingExecutionEndTime(OffsetDateTime trainingExecutionEndTime) {
    this.trainingExecutionEndTime = trainingExecutionEndTime;
    return this;
  }

  /**
   * Get trainingExecutionEndTime
   * @return trainingExecutionEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTrainingExecutionEndTime() {
    return trainingExecutionEndTime;
  }

  public void setTrainingExecutionEndTime(OffsetDateTime trainingExecutionEndTime) {
    this.trainingExecutionEndTime = trainingExecutionEndTime;
  }


  public DescribeModelVersionResponse failedReason(String failedReason) {
    this.failedReason = failedReason;
    return this;
  }

  /**
   * Get failedReason
   * @return failedReason
   */
  @javax.annotation.Nullable
  public String getFailedReason() {
    return failedReason;
  }

  public void setFailedReason(String failedReason) {
    this.failedReason = failedReason;
  }


  public DescribeModelVersionResponse modelMetrics(String modelMetrics) {
    this.modelMetrics = modelMetrics;
    return this;
  }

  /**
   * Get modelMetrics
   * @return modelMetrics
   */
  @javax.annotation.Nullable
  public String getModelMetrics() {
    return modelMetrics;
  }

  public void setModelMetrics(String modelMetrics) {
    this.modelMetrics = modelMetrics;
  }


  public DescribeModelVersionResponse lastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
    return this;
  }

  /**
   * Get lastUpdatedTime
   * @return lastUpdatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedTime() {
    return lastUpdatedTime;
  }

  public void setLastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
  }


  public DescribeModelVersionResponse createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public DescribeModelVersionResponse serverSideKmsKeyId(String serverSideKmsKeyId) {
    this.serverSideKmsKeyId = serverSideKmsKeyId;
    return this;
  }

  /**
   * Get serverSideKmsKeyId
   * @return serverSideKmsKeyId
   */
  @javax.annotation.Nullable
  public String getServerSideKmsKeyId() {
    return serverSideKmsKeyId;
  }

  public void setServerSideKmsKeyId(String serverSideKmsKeyId) {
    this.serverSideKmsKeyId = serverSideKmsKeyId;
  }


  public DescribeModelVersionResponse offCondition(String offCondition) {
    this.offCondition = offCondition;
    return this;
  }

  /**
   * Get offCondition
   * @return offCondition
   */
  @javax.annotation.Nullable
  public String getOffCondition() {
    return offCondition;
  }

  public void setOffCondition(String offCondition) {
    this.offCondition = offCondition;
  }


  public DescribeModelVersionResponse sourceModelVersionArn(String sourceModelVersionArn) {
    this.sourceModelVersionArn = sourceModelVersionArn;
    return this;
  }

  /**
   * Get sourceModelVersionArn
   * @return sourceModelVersionArn
   */
  @javax.annotation.Nullable
  public String getSourceModelVersionArn() {
    return sourceModelVersionArn;
  }

  public void setSourceModelVersionArn(String sourceModelVersionArn) {
    this.sourceModelVersionArn = sourceModelVersionArn;
  }


  public DescribeModelVersionResponse importJobStartTime(OffsetDateTime importJobStartTime) {
    this.importJobStartTime = importJobStartTime;
    return this;
  }

  /**
   * Get importJobStartTime
   * @return importJobStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getImportJobStartTime() {
    return importJobStartTime;
  }

  public void setImportJobStartTime(OffsetDateTime importJobStartTime) {
    this.importJobStartTime = importJobStartTime;
  }


  public DescribeModelVersionResponse importJobEndTime(OffsetDateTime importJobEndTime) {
    this.importJobEndTime = importJobEndTime;
    return this;
  }

  /**
   * Get importJobEndTime
   * @return importJobEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getImportJobEndTime() {
    return importJobEndTime;
  }

  public void setImportJobEndTime(OffsetDateTime importJobEndTime) {
    this.importJobEndTime = importJobEndTime;
  }


  public DescribeModelVersionResponse importedDataSizeInBytes(Integer importedDataSizeInBytes) {
    this.importedDataSizeInBytes = importedDataSizeInBytes;
    return this;
  }

  /**
   * Get importedDataSizeInBytes
   * @return importedDataSizeInBytes
   */
  @javax.annotation.Nullable
  public Integer getImportedDataSizeInBytes() {
    return importedDataSizeInBytes;
  }

  public void setImportedDataSizeInBytes(Integer importedDataSizeInBytes) {
    this.importedDataSizeInBytes = importedDataSizeInBytes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeModelVersionResponse describeModelVersionResponse = (DescribeModelVersionResponse) o;
    return Objects.equals(this.modelName, describeModelVersionResponse.modelName) &&
        Objects.equals(this.modelArn, describeModelVersionResponse.modelArn) &&
        Objects.equals(this.modelVersion, describeModelVersionResponse.modelVersion) &&
        Objects.equals(this.modelVersionArn, describeModelVersionResponse.modelVersionArn) &&
        Objects.equals(this.status, describeModelVersionResponse.status) &&
        Objects.equals(this.sourceType, describeModelVersionResponse.sourceType) &&
        Objects.equals(this.datasetName, describeModelVersionResponse.datasetName) &&
        Objects.equals(this.datasetArn, describeModelVersionResponse.datasetArn) &&
        Objects.equals(this.schema, describeModelVersionResponse.schema) &&
        Objects.equals(this.labelsInputConfiguration, describeModelVersionResponse.labelsInputConfiguration) &&
        Objects.equals(this.trainingDataStartTime, describeModelVersionResponse.trainingDataStartTime) &&
        Objects.equals(this.trainingDataEndTime, describeModelVersionResponse.trainingDataEndTime) &&
        Objects.equals(this.evaluationDataStartTime, describeModelVersionResponse.evaluationDataStartTime) &&
        Objects.equals(this.evaluationDataEndTime, describeModelVersionResponse.evaluationDataEndTime) &&
        Objects.equals(this.roleArn, describeModelVersionResponse.roleArn) &&
        Objects.equals(this.dataPreProcessingConfiguration, describeModelVersionResponse.dataPreProcessingConfiguration) &&
        Objects.equals(this.trainingExecutionStartTime, describeModelVersionResponse.trainingExecutionStartTime) &&
        Objects.equals(this.trainingExecutionEndTime, describeModelVersionResponse.trainingExecutionEndTime) &&
        Objects.equals(this.failedReason, describeModelVersionResponse.failedReason) &&
        Objects.equals(this.modelMetrics, describeModelVersionResponse.modelMetrics) &&
        Objects.equals(this.lastUpdatedTime, describeModelVersionResponse.lastUpdatedTime) &&
        Objects.equals(this.createdAt, describeModelVersionResponse.createdAt) &&
        Objects.equals(this.serverSideKmsKeyId, describeModelVersionResponse.serverSideKmsKeyId) &&
        Objects.equals(this.offCondition, describeModelVersionResponse.offCondition) &&
        Objects.equals(this.sourceModelVersionArn, describeModelVersionResponse.sourceModelVersionArn) &&
        Objects.equals(this.importJobStartTime, describeModelVersionResponse.importJobStartTime) &&
        Objects.equals(this.importJobEndTime, describeModelVersionResponse.importJobEndTime) &&
        Objects.equals(this.importedDataSizeInBytes, describeModelVersionResponse.importedDataSizeInBytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelName, modelArn, modelVersion, modelVersionArn, status, sourceType, datasetName, datasetArn, schema, labelsInputConfiguration, trainingDataStartTime, trainingDataEndTime, evaluationDataStartTime, evaluationDataEndTime, roleArn, dataPreProcessingConfiguration, trainingExecutionStartTime, trainingExecutionEndTime, failedReason, modelMetrics, lastUpdatedTime, createdAt, serverSideKmsKeyId, offCondition, sourceModelVersionArn, importJobStartTime, importJobEndTime, importedDataSizeInBytes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeModelVersionResponse {\n");
    sb.append("    modelName: ").append(toIndentedString(modelName)).append("\n");
    sb.append("    modelArn: ").append(toIndentedString(modelArn)).append("\n");
    sb.append("    modelVersion: ").append(toIndentedString(modelVersion)).append("\n");
    sb.append("    modelVersionArn: ").append(toIndentedString(modelVersionArn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    datasetName: ").append(toIndentedString(datasetName)).append("\n");
    sb.append("    datasetArn: ").append(toIndentedString(datasetArn)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    labelsInputConfiguration: ").append(toIndentedString(labelsInputConfiguration)).append("\n");
    sb.append("    trainingDataStartTime: ").append(toIndentedString(trainingDataStartTime)).append("\n");
    sb.append("    trainingDataEndTime: ").append(toIndentedString(trainingDataEndTime)).append("\n");
    sb.append("    evaluationDataStartTime: ").append(toIndentedString(evaluationDataStartTime)).append("\n");
    sb.append("    evaluationDataEndTime: ").append(toIndentedString(evaluationDataEndTime)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    dataPreProcessingConfiguration: ").append(toIndentedString(dataPreProcessingConfiguration)).append("\n");
    sb.append("    trainingExecutionStartTime: ").append(toIndentedString(trainingExecutionStartTime)).append("\n");
    sb.append("    trainingExecutionEndTime: ").append(toIndentedString(trainingExecutionEndTime)).append("\n");
    sb.append("    failedReason: ").append(toIndentedString(failedReason)).append("\n");
    sb.append("    modelMetrics: ").append(toIndentedString(modelMetrics)).append("\n");
    sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    serverSideKmsKeyId: ").append(toIndentedString(serverSideKmsKeyId)).append("\n");
    sb.append("    offCondition: ").append(toIndentedString(offCondition)).append("\n");
    sb.append("    sourceModelVersionArn: ").append(toIndentedString(sourceModelVersionArn)).append("\n");
    sb.append("    importJobStartTime: ").append(toIndentedString(importJobStartTime)).append("\n");
    sb.append("    importJobEndTime: ").append(toIndentedString(importJobEndTime)).append("\n");
    sb.append("    importedDataSizeInBytes: ").append(toIndentedString(importedDataSizeInBytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ModelName");
    openapiFields.add("ModelArn");
    openapiFields.add("ModelVersion");
    openapiFields.add("ModelVersionArn");
    openapiFields.add("Status");
    openapiFields.add("SourceType");
    openapiFields.add("DatasetName");
    openapiFields.add("DatasetArn");
    openapiFields.add("Schema");
    openapiFields.add("LabelsInputConfiguration");
    openapiFields.add("TrainingDataStartTime");
    openapiFields.add("TrainingDataEndTime");
    openapiFields.add("EvaluationDataStartTime");
    openapiFields.add("EvaluationDataEndTime");
    openapiFields.add("RoleArn");
    openapiFields.add("DataPreProcessingConfiguration");
    openapiFields.add("TrainingExecutionStartTime");
    openapiFields.add("TrainingExecutionEndTime");
    openapiFields.add("FailedReason");
    openapiFields.add("ModelMetrics");
    openapiFields.add("LastUpdatedTime");
    openapiFields.add("CreatedAt");
    openapiFields.add("ServerSideKmsKeyId");
    openapiFields.add("OffCondition");
    openapiFields.add("SourceModelVersionArn");
    openapiFields.add("ImportJobStartTime");
    openapiFields.add("ImportJobEndTime");
    openapiFields.add("ImportedDataSizeInBytes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeModelVersionResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeModelVersionResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeModelVersionResponse is not found in the empty JSON string", DescribeModelVersionResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeModelVersionResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeModelVersionResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ModelName`
      if (jsonObj.get("ModelName") != null && !jsonObj.get("ModelName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelName"));
      }
      // validate the optional field `ModelArn`
      if (jsonObj.get("ModelArn") != null && !jsonObj.get("ModelArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelArn"));
      }
      // validate the optional field `ModelVersion`
      if (jsonObj.get("ModelVersion") != null && !jsonObj.get("ModelVersion").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ModelVersion"));
      }
      // validate the optional field `ModelVersionArn`
      if (jsonObj.get("ModelVersionArn") != null && !jsonObj.get("ModelVersionArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelVersionArn"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        ModelVersionStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `SourceType`
      if (jsonObj.get("SourceType") != null && !jsonObj.get("SourceType").isJsonNull()) {
        ModelVersionSourceType.validateJsonElement(jsonObj.get("SourceType"));
      }
      // validate the optional field `DatasetName`
      if (jsonObj.get("DatasetName") != null && !jsonObj.get("DatasetName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DatasetName"));
      }
      // validate the optional field `DatasetArn`
      if (jsonObj.get("DatasetArn") != null && !jsonObj.get("DatasetArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DatasetArn"));
      }
      // validate the optional field `Schema`
      if (jsonObj.get("Schema") != null && !jsonObj.get("Schema").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Schema"));
      }
      // validate the optional field `LabelsInputConfiguration`
      if (jsonObj.get("LabelsInputConfiguration") != null && !jsonObj.get("LabelsInputConfiguration").isJsonNull()) {
        LabelsInputConfiguration.validateJsonElement(jsonObj.get("LabelsInputConfiguration"));
      }
      // validate the optional field `TrainingDataStartTime`
      if (jsonObj.get("TrainingDataStartTime") != null && !jsonObj.get("TrainingDataStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("TrainingDataStartTime"));
      }
      // validate the optional field `TrainingDataEndTime`
      if (jsonObj.get("TrainingDataEndTime") != null && !jsonObj.get("TrainingDataEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("TrainingDataEndTime"));
      }
      // validate the optional field `EvaluationDataStartTime`
      if (jsonObj.get("EvaluationDataStartTime") != null && !jsonObj.get("EvaluationDataStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EvaluationDataStartTime"));
      }
      // validate the optional field `EvaluationDataEndTime`
      if (jsonObj.get("EvaluationDataEndTime") != null && !jsonObj.get("EvaluationDataEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EvaluationDataEndTime"));
      }
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `DataPreProcessingConfiguration`
      if (jsonObj.get("DataPreProcessingConfiguration") != null && !jsonObj.get("DataPreProcessingConfiguration").isJsonNull()) {
        DataPreProcessingConfiguration.validateJsonElement(jsonObj.get("DataPreProcessingConfiguration"));
      }
      // validate the optional field `TrainingExecutionStartTime`
      if (jsonObj.get("TrainingExecutionStartTime") != null && !jsonObj.get("TrainingExecutionStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("TrainingExecutionStartTime"));
      }
      // validate the optional field `TrainingExecutionEndTime`
      if (jsonObj.get("TrainingExecutionEndTime") != null && !jsonObj.get("TrainingExecutionEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("TrainingExecutionEndTime"));
      }
      // validate the optional field `FailedReason`
      if (jsonObj.get("FailedReason") != null && !jsonObj.get("FailedReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailedReason"));
      }
      // validate the optional field `ModelMetrics`
      if (jsonObj.get("ModelMetrics") != null && !jsonObj.get("ModelMetrics").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelMetrics"));
      }
      // validate the optional field `LastUpdatedTime`
      if (jsonObj.get("LastUpdatedTime") != null && !jsonObj.get("LastUpdatedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdatedTime"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `ServerSideKmsKeyId`
      if (jsonObj.get("ServerSideKmsKeyId") != null && !jsonObj.get("ServerSideKmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServerSideKmsKeyId"));
      }
      // validate the optional field `OffCondition`
      if (jsonObj.get("OffCondition") != null && !jsonObj.get("OffCondition").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OffCondition"));
      }
      // validate the optional field `SourceModelVersionArn`
      if (jsonObj.get("SourceModelVersionArn") != null && !jsonObj.get("SourceModelVersionArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SourceModelVersionArn"));
      }
      // validate the optional field `ImportJobStartTime`
      if (jsonObj.get("ImportJobStartTime") != null && !jsonObj.get("ImportJobStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ImportJobStartTime"));
      }
      // validate the optional field `ImportJobEndTime`
      if (jsonObj.get("ImportJobEndTime") != null && !jsonObj.get("ImportJobEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ImportJobEndTime"));
      }
      // validate the optional field `ImportedDataSizeInBytes`
      if (jsonObj.get("ImportedDataSizeInBytes") != null && !jsonObj.get("ImportedDataSizeInBytes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ImportedDataSizeInBytes"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeModelVersionResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeModelVersionResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeModelVersionResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeModelVersionResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeModelVersionResponse>() {
           @Override
           public void write(JsonWriter out, DescribeModelVersionResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeModelVersionResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeModelVersionResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeModelVersionResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeModelVersionResponse
   */
  public static DescribeModelVersionResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeModelVersionResponse.class);
  }

  /**
   * Convert an instance of DescribeModelVersionResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

