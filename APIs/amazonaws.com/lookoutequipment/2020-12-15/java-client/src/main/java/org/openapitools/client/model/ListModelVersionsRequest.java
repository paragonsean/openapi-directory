/*
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ModelVersionSourceType;
import org.openapitools.client.model.ModelVersionStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListModelVersionsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:18.043707-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListModelVersionsRequest {
  public static final String SERIALIZED_NAME_MODEL_NAME = "ModelName";
  @SerializedName(SERIALIZED_NAME_MODEL_NAME)
  private String modelName;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public static final String SERIALIZED_NAME_MAX_RESULTS = "MaxResults";
  @SerializedName(SERIALIZED_NAME_MAX_RESULTS)
  private Integer maxResults;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ModelVersionStatus status;

  public static final String SERIALIZED_NAME_SOURCE_TYPE = "SourceType";
  @SerializedName(SERIALIZED_NAME_SOURCE_TYPE)
  private ModelVersionSourceType sourceType;

  public static final String SERIALIZED_NAME_CREATED_AT_END_TIME = "CreatedAtEndTime";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_END_TIME)
  private OffsetDateTime createdAtEndTime;

  public static final String SERIALIZED_NAME_CREATED_AT_START_TIME = "CreatedAtStartTime";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_START_TIME)
  private OffsetDateTime createdAtStartTime;

  public static final String SERIALIZED_NAME_MAX_MODEL_VERSION = "MaxModelVersion";
  @SerializedName(SERIALIZED_NAME_MAX_MODEL_VERSION)
  private Integer maxModelVersion;

  public static final String SERIALIZED_NAME_MIN_MODEL_VERSION = "MinModelVersion";
  @SerializedName(SERIALIZED_NAME_MIN_MODEL_VERSION)
  private Integer minModelVersion;

  public ListModelVersionsRequest() {
  }

  public ListModelVersionsRequest modelName(String modelName) {
    this.modelName = modelName;
    return this;
  }

  /**
   * Get modelName
   * @return modelName
   */
  @javax.annotation.Nonnull
  public String getModelName() {
    return modelName;
  }

  public void setModelName(String modelName) {
    this.modelName = modelName;
  }


  public ListModelVersionsRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * Get nextToken
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  public ListModelVersionsRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

  /**
   * Get maxResults
   * @return maxResults
   */
  @javax.annotation.Nullable
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }


  public ListModelVersionsRequest status(ModelVersionStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ModelVersionStatus getStatus() {
    return status;
  }

  public void setStatus(ModelVersionStatus status) {
    this.status = status;
  }


  public ListModelVersionsRequest sourceType(ModelVersionSourceType sourceType) {
    this.sourceType = sourceType;
    return this;
  }

  /**
   * Get sourceType
   * @return sourceType
   */
  @javax.annotation.Nullable
  public ModelVersionSourceType getSourceType() {
    return sourceType;
  }

  public void setSourceType(ModelVersionSourceType sourceType) {
    this.sourceType = sourceType;
  }


  public ListModelVersionsRequest createdAtEndTime(OffsetDateTime createdAtEndTime) {
    this.createdAtEndTime = createdAtEndTime;
    return this;
  }

  /**
   * Get createdAtEndTime
   * @return createdAtEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAtEndTime() {
    return createdAtEndTime;
  }

  public void setCreatedAtEndTime(OffsetDateTime createdAtEndTime) {
    this.createdAtEndTime = createdAtEndTime;
  }


  public ListModelVersionsRequest createdAtStartTime(OffsetDateTime createdAtStartTime) {
    this.createdAtStartTime = createdAtStartTime;
    return this;
  }

  /**
   * Get createdAtStartTime
   * @return createdAtStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAtStartTime() {
    return createdAtStartTime;
  }

  public void setCreatedAtStartTime(OffsetDateTime createdAtStartTime) {
    this.createdAtStartTime = createdAtStartTime;
  }


  public ListModelVersionsRequest maxModelVersion(Integer maxModelVersion) {
    this.maxModelVersion = maxModelVersion;
    return this;
  }

  /**
   * Get maxModelVersion
   * @return maxModelVersion
   */
  @javax.annotation.Nullable
  public Integer getMaxModelVersion() {
    return maxModelVersion;
  }

  public void setMaxModelVersion(Integer maxModelVersion) {
    this.maxModelVersion = maxModelVersion;
  }


  public ListModelVersionsRequest minModelVersion(Integer minModelVersion) {
    this.minModelVersion = minModelVersion;
    return this;
  }

  /**
   * Get minModelVersion
   * @return minModelVersion
   */
  @javax.annotation.Nullable
  public Integer getMinModelVersion() {
    return minModelVersion;
  }

  public void setMinModelVersion(Integer minModelVersion) {
    this.minModelVersion = minModelVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListModelVersionsRequest listModelVersionsRequest = (ListModelVersionsRequest) o;
    return Objects.equals(this.modelName, listModelVersionsRequest.modelName) &&
        Objects.equals(this.nextToken, listModelVersionsRequest.nextToken) &&
        Objects.equals(this.maxResults, listModelVersionsRequest.maxResults) &&
        Objects.equals(this.status, listModelVersionsRequest.status) &&
        Objects.equals(this.sourceType, listModelVersionsRequest.sourceType) &&
        Objects.equals(this.createdAtEndTime, listModelVersionsRequest.createdAtEndTime) &&
        Objects.equals(this.createdAtStartTime, listModelVersionsRequest.createdAtStartTime) &&
        Objects.equals(this.maxModelVersion, listModelVersionsRequest.maxModelVersion) &&
        Objects.equals(this.minModelVersion, listModelVersionsRequest.minModelVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelName, nextToken, maxResults, status, sourceType, createdAtEndTime, createdAtStartTime, maxModelVersion, minModelVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListModelVersionsRequest {\n");
    sb.append("    modelName: ").append(toIndentedString(modelName)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    createdAtEndTime: ").append(toIndentedString(createdAtEndTime)).append("\n");
    sb.append("    createdAtStartTime: ").append(toIndentedString(createdAtStartTime)).append("\n");
    sb.append("    maxModelVersion: ").append(toIndentedString(maxModelVersion)).append("\n");
    sb.append("    minModelVersion: ").append(toIndentedString(minModelVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ModelName");
    openapiFields.add("NextToken");
    openapiFields.add("MaxResults");
    openapiFields.add("Status");
    openapiFields.add("SourceType");
    openapiFields.add("CreatedAtEndTime");
    openapiFields.add("CreatedAtStartTime");
    openapiFields.add("MaxModelVersion");
    openapiFields.add("MinModelVersion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ModelName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListModelVersionsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListModelVersionsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListModelVersionsRequest is not found in the empty JSON string", ListModelVersionsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListModelVersionsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListModelVersionsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ListModelVersionsRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ModelName`
      String.validateJsonElement(jsonObj.get("ModelName"));
      // validate the optional field `NextToken`
      if (jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NextToken"));
      }
      // validate the optional field `MaxResults`
      if (jsonObj.get("MaxResults") != null && !jsonObj.get("MaxResults").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxResults"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        ModelVersionStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `SourceType`
      if (jsonObj.get("SourceType") != null && !jsonObj.get("SourceType").isJsonNull()) {
        ModelVersionSourceType.validateJsonElement(jsonObj.get("SourceType"));
      }
      // validate the optional field `CreatedAtEndTime`
      if (jsonObj.get("CreatedAtEndTime") != null && !jsonObj.get("CreatedAtEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAtEndTime"));
      }
      // validate the optional field `CreatedAtStartTime`
      if (jsonObj.get("CreatedAtStartTime") != null && !jsonObj.get("CreatedAtStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAtStartTime"));
      }
      // validate the optional field `MaxModelVersion`
      if (jsonObj.get("MaxModelVersion") != null && !jsonObj.get("MaxModelVersion").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxModelVersion"));
      }
      // validate the optional field `MinModelVersion`
      if (jsonObj.get("MinModelVersion") != null && !jsonObj.get("MinModelVersion").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MinModelVersion"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListModelVersionsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListModelVersionsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListModelVersionsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListModelVersionsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<ListModelVersionsRequest>() {
           @Override
           public void write(JsonWriter out, ListModelVersionsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListModelVersionsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListModelVersionsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListModelVersionsRequest
   * @throws IOException if the JSON string is invalid with respect to ListModelVersionsRequest
   */
  public static ListModelVersionsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListModelVersionsRequest.class);
  }

  /**
   * Convert an instance of ListModelVersionsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

