/*
 * Amazon Lookout for Equipment
 * Amazon Lookout for Equipment is a machine learning service that uses advanced analytics to identify anomalies in machines from sensor data for use in predictive maintenance. 
 *
 * The version of the OpenAPI document: 2020-12-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.CreateModelRequestDataPreProcessingConfiguration;
import org.openapitools.client.model.DescribeModelResponseLabelsInputConfiguration;
import org.openapitools.client.model.ModelStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeModelResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:18.043707-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeModelResponse {
  public static final String SERIALIZED_NAME_MODEL_NAME = "ModelName";
  @SerializedName(SERIALIZED_NAME_MODEL_NAME)
  private String modelName;

  public static final String SERIALIZED_NAME_MODEL_ARN = "ModelArn";
  @SerializedName(SERIALIZED_NAME_MODEL_ARN)
  private String modelArn;

  public static final String SERIALIZED_NAME_DATASET_NAME = "DatasetName";
  @SerializedName(SERIALIZED_NAME_DATASET_NAME)
  private String datasetName;

  public static final String SERIALIZED_NAME_DATASET_ARN = "DatasetArn";
  @SerializedName(SERIALIZED_NAME_DATASET_ARN)
  private String datasetArn;

  public static final String SERIALIZED_NAME_SCHEMA = "Schema";
  @SerializedName(SERIALIZED_NAME_SCHEMA)
  private String schema;

  public static final String SERIALIZED_NAME_LABELS_INPUT_CONFIGURATION = "LabelsInputConfiguration";
  @SerializedName(SERIALIZED_NAME_LABELS_INPUT_CONFIGURATION)
  private DescribeModelResponseLabelsInputConfiguration labelsInputConfiguration;

  public static final String SERIALIZED_NAME_TRAINING_DATA_START_TIME = "TrainingDataStartTime";
  @SerializedName(SERIALIZED_NAME_TRAINING_DATA_START_TIME)
  private OffsetDateTime trainingDataStartTime;

  public static final String SERIALIZED_NAME_TRAINING_DATA_END_TIME = "TrainingDataEndTime";
  @SerializedName(SERIALIZED_NAME_TRAINING_DATA_END_TIME)
  private OffsetDateTime trainingDataEndTime;

  public static final String SERIALIZED_NAME_EVALUATION_DATA_START_TIME = "EvaluationDataStartTime";
  @SerializedName(SERIALIZED_NAME_EVALUATION_DATA_START_TIME)
  private OffsetDateTime evaluationDataStartTime;

  public static final String SERIALIZED_NAME_EVALUATION_DATA_END_TIME = "EvaluationDataEndTime";
  @SerializedName(SERIALIZED_NAME_EVALUATION_DATA_END_TIME)
  private OffsetDateTime evaluationDataEndTime;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_DATA_PRE_PROCESSING_CONFIGURATION = "DataPreProcessingConfiguration";
  @SerializedName(SERIALIZED_NAME_DATA_PRE_PROCESSING_CONFIGURATION)
  private CreateModelRequestDataPreProcessingConfiguration dataPreProcessingConfiguration;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ModelStatus status;

  public static final String SERIALIZED_NAME_TRAINING_EXECUTION_START_TIME = "TrainingExecutionStartTime";
  @SerializedName(SERIALIZED_NAME_TRAINING_EXECUTION_START_TIME)
  private OffsetDateTime trainingExecutionStartTime;

  public static final String SERIALIZED_NAME_TRAINING_EXECUTION_END_TIME = "TrainingExecutionEndTime";
  @SerializedName(SERIALIZED_NAME_TRAINING_EXECUTION_END_TIME)
  private OffsetDateTime trainingExecutionEndTime;

  public static final String SERIALIZED_NAME_FAILED_REASON = "FailedReason";
  @SerializedName(SERIALIZED_NAME_FAILED_REASON)
  private String failedReason;

  public static final String SERIALIZED_NAME_MODEL_METRICS = "ModelMetrics";
  @SerializedName(SERIALIZED_NAME_MODEL_METRICS)
  private String modelMetrics;

  public static final String SERIALIZED_NAME_LAST_UPDATED_TIME = "LastUpdatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_TIME)
  private OffsetDateTime lastUpdatedTime;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_SERVER_SIDE_KMS_KEY_ID = "ServerSideKmsKeyId";
  @SerializedName(SERIALIZED_NAME_SERVER_SIDE_KMS_KEY_ID)
  private String serverSideKmsKeyId;

  public static final String SERIALIZED_NAME_OFF_CONDITION = "OffCondition";
  @SerializedName(SERIALIZED_NAME_OFF_CONDITION)
  private String offCondition;

  public static final String SERIALIZED_NAME_SOURCE_MODEL_VERSION_ARN = "SourceModelVersionArn";
  @SerializedName(SERIALIZED_NAME_SOURCE_MODEL_VERSION_ARN)
  private String sourceModelVersionArn;

  public static final String SERIALIZED_NAME_IMPORT_JOB_START_TIME = "ImportJobStartTime";
  @SerializedName(SERIALIZED_NAME_IMPORT_JOB_START_TIME)
  private OffsetDateTime importJobStartTime;

  public static final String SERIALIZED_NAME_IMPORT_JOB_END_TIME = "ImportJobEndTime";
  @SerializedName(SERIALIZED_NAME_IMPORT_JOB_END_TIME)
  private OffsetDateTime importJobEndTime;

  public static final String SERIALIZED_NAME_ACTIVE_MODEL_VERSION = "ActiveModelVersion";
  @SerializedName(SERIALIZED_NAME_ACTIVE_MODEL_VERSION)
  private Integer activeModelVersion;

  public static final String SERIALIZED_NAME_ACTIVE_MODEL_VERSION_ARN = "ActiveModelVersionArn";
  @SerializedName(SERIALIZED_NAME_ACTIVE_MODEL_VERSION_ARN)
  private String activeModelVersionArn;

  public static final String SERIALIZED_NAME_MODEL_VERSION_ACTIVATED_AT = "ModelVersionActivatedAt";
  @SerializedName(SERIALIZED_NAME_MODEL_VERSION_ACTIVATED_AT)
  private OffsetDateTime modelVersionActivatedAt;

  public static final String SERIALIZED_NAME_PREVIOUS_ACTIVE_MODEL_VERSION = "PreviousActiveModelVersion";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_ACTIVE_MODEL_VERSION)
  private Integer previousActiveModelVersion;

  public static final String SERIALIZED_NAME_PREVIOUS_ACTIVE_MODEL_VERSION_ARN = "PreviousActiveModelVersionArn";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_ACTIVE_MODEL_VERSION_ARN)
  private String previousActiveModelVersionArn;

  public static final String SERIALIZED_NAME_PREVIOUS_MODEL_VERSION_ACTIVATED_AT = "PreviousModelVersionActivatedAt";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_MODEL_VERSION_ACTIVATED_AT)
  private OffsetDateTime previousModelVersionActivatedAt;

  public DescribeModelResponse() {
  }

  public DescribeModelResponse modelName(String modelName) {
    this.modelName = modelName;
    return this;
  }

  /**
   * Get modelName
   * @return modelName
   */
  @javax.annotation.Nullable
  public String getModelName() {
    return modelName;
  }

  public void setModelName(String modelName) {
    this.modelName = modelName;
  }


  public DescribeModelResponse modelArn(String modelArn) {
    this.modelArn = modelArn;
    return this;
  }

  /**
   * Get modelArn
   * @return modelArn
   */
  @javax.annotation.Nullable
  public String getModelArn() {
    return modelArn;
  }

  public void setModelArn(String modelArn) {
    this.modelArn = modelArn;
  }


  public DescribeModelResponse datasetName(String datasetName) {
    this.datasetName = datasetName;
    return this;
  }

  /**
   * Get datasetName
   * @return datasetName
   */
  @javax.annotation.Nullable
  public String getDatasetName() {
    return datasetName;
  }

  public void setDatasetName(String datasetName) {
    this.datasetName = datasetName;
  }


  public DescribeModelResponse datasetArn(String datasetArn) {
    this.datasetArn = datasetArn;
    return this;
  }

  /**
   * Get datasetArn
   * @return datasetArn
   */
  @javax.annotation.Nullable
  public String getDatasetArn() {
    return datasetArn;
  }

  public void setDatasetArn(String datasetArn) {
    this.datasetArn = datasetArn;
  }


  public DescribeModelResponse schema(String schema) {
    this.schema = schema;
    return this;
  }

  /**
   * Get schema
   * @return schema
   */
  @javax.annotation.Nullable
  public String getSchema() {
    return schema;
  }

  public void setSchema(String schema) {
    this.schema = schema;
  }


  public DescribeModelResponse labelsInputConfiguration(DescribeModelResponseLabelsInputConfiguration labelsInputConfiguration) {
    this.labelsInputConfiguration = labelsInputConfiguration;
    return this;
  }

  /**
   * Get labelsInputConfiguration
   * @return labelsInputConfiguration
   */
  @javax.annotation.Nullable
  public DescribeModelResponseLabelsInputConfiguration getLabelsInputConfiguration() {
    return labelsInputConfiguration;
  }

  public void setLabelsInputConfiguration(DescribeModelResponseLabelsInputConfiguration labelsInputConfiguration) {
    this.labelsInputConfiguration = labelsInputConfiguration;
  }


  public DescribeModelResponse trainingDataStartTime(OffsetDateTime trainingDataStartTime) {
    this.trainingDataStartTime = trainingDataStartTime;
    return this;
  }

  /**
   * Get trainingDataStartTime
   * @return trainingDataStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTrainingDataStartTime() {
    return trainingDataStartTime;
  }

  public void setTrainingDataStartTime(OffsetDateTime trainingDataStartTime) {
    this.trainingDataStartTime = trainingDataStartTime;
  }


  public DescribeModelResponse trainingDataEndTime(OffsetDateTime trainingDataEndTime) {
    this.trainingDataEndTime = trainingDataEndTime;
    return this;
  }

  /**
   * Get trainingDataEndTime
   * @return trainingDataEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTrainingDataEndTime() {
    return trainingDataEndTime;
  }

  public void setTrainingDataEndTime(OffsetDateTime trainingDataEndTime) {
    this.trainingDataEndTime = trainingDataEndTime;
  }


  public DescribeModelResponse evaluationDataStartTime(OffsetDateTime evaluationDataStartTime) {
    this.evaluationDataStartTime = evaluationDataStartTime;
    return this;
  }

  /**
   * Get evaluationDataStartTime
   * @return evaluationDataStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEvaluationDataStartTime() {
    return evaluationDataStartTime;
  }

  public void setEvaluationDataStartTime(OffsetDateTime evaluationDataStartTime) {
    this.evaluationDataStartTime = evaluationDataStartTime;
  }


  public DescribeModelResponse evaluationDataEndTime(OffsetDateTime evaluationDataEndTime) {
    this.evaluationDataEndTime = evaluationDataEndTime;
    return this;
  }

  /**
   * Get evaluationDataEndTime
   * @return evaluationDataEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEvaluationDataEndTime() {
    return evaluationDataEndTime;
  }

  public void setEvaluationDataEndTime(OffsetDateTime evaluationDataEndTime) {
    this.evaluationDataEndTime = evaluationDataEndTime;
  }


  public DescribeModelResponse roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public DescribeModelResponse dataPreProcessingConfiguration(CreateModelRequestDataPreProcessingConfiguration dataPreProcessingConfiguration) {
    this.dataPreProcessingConfiguration = dataPreProcessingConfiguration;
    return this;
  }

  /**
   * Get dataPreProcessingConfiguration
   * @return dataPreProcessingConfiguration
   */
  @javax.annotation.Nullable
  public CreateModelRequestDataPreProcessingConfiguration getDataPreProcessingConfiguration() {
    return dataPreProcessingConfiguration;
  }

  public void setDataPreProcessingConfiguration(CreateModelRequestDataPreProcessingConfiguration dataPreProcessingConfiguration) {
    this.dataPreProcessingConfiguration = dataPreProcessingConfiguration;
  }


  public DescribeModelResponse status(ModelStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ModelStatus getStatus() {
    return status;
  }

  public void setStatus(ModelStatus status) {
    this.status = status;
  }


  public DescribeModelResponse trainingExecutionStartTime(OffsetDateTime trainingExecutionStartTime) {
    this.trainingExecutionStartTime = trainingExecutionStartTime;
    return this;
  }

  /**
   * Get trainingExecutionStartTime
   * @return trainingExecutionStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTrainingExecutionStartTime() {
    return trainingExecutionStartTime;
  }

  public void setTrainingExecutionStartTime(OffsetDateTime trainingExecutionStartTime) {
    this.trainingExecutionStartTime = trainingExecutionStartTime;
  }


  public DescribeModelResponse trainingExecutionEndTime(OffsetDateTime trainingExecutionEndTime) {
    this.trainingExecutionEndTime = trainingExecutionEndTime;
    return this;
  }

  /**
   * Get trainingExecutionEndTime
   * @return trainingExecutionEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTrainingExecutionEndTime() {
    return trainingExecutionEndTime;
  }

  public void setTrainingExecutionEndTime(OffsetDateTime trainingExecutionEndTime) {
    this.trainingExecutionEndTime = trainingExecutionEndTime;
  }


  public DescribeModelResponse failedReason(String failedReason) {
    this.failedReason = failedReason;
    return this;
  }

  /**
   * Get failedReason
   * @return failedReason
   */
  @javax.annotation.Nullable
  public String getFailedReason() {
    return failedReason;
  }

  public void setFailedReason(String failedReason) {
    this.failedReason = failedReason;
  }


  public DescribeModelResponse modelMetrics(String modelMetrics) {
    this.modelMetrics = modelMetrics;
    return this;
  }

  /**
   * Get modelMetrics
   * @return modelMetrics
   */
  @javax.annotation.Nullable
  public String getModelMetrics() {
    return modelMetrics;
  }

  public void setModelMetrics(String modelMetrics) {
    this.modelMetrics = modelMetrics;
  }


  public DescribeModelResponse lastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
    return this;
  }

  /**
   * Get lastUpdatedTime
   * @return lastUpdatedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedTime() {
    return lastUpdatedTime;
  }

  public void setLastUpdatedTime(OffsetDateTime lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
  }


  public DescribeModelResponse createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public DescribeModelResponse serverSideKmsKeyId(String serverSideKmsKeyId) {
    this.serverSideKmsKeyId = serverSideKmsKeyId;
    return this;
  }

  /**
   * Get serverSideKmsKeyId
   * @return serverSideKmsKeyId
   */
  @javax.annotation.Nullable
  public String getServerSideKmsKeyId() {
    return serverSideKmsKeyId;
  }

  public void setServerSideKmsKeyId(String serverSideKmsKeyId) {
    this.serverSideKmsKeyId = serverSideKmsKeyId;
  }


  public DescribeModelResponse offCondition(String offCondition) {
    this.offCondition = offCondition;
    return this;
  }

  /**
   * Get offCondition
   * @return offCondition
   */
  @javax.annotation.Nullable
  public String getOffCondition() {
    return offCondition;
  }

  public void setOffCondition(String offCondition) {
    this.offCondition = offCondition;
  }


  public DescribeModelResponse sourceModelVersionArn(String sourceModelVersionArn) {
    this.sourceModelVersionArn = sourceModelVersionArn;
    return this;
  }

  /**
   * Get sourceModelVersionArn
   * @return sourceModelVersionArn
   */
  @javax.annotation.Nullable
  public String getSourceModelVersionArn() {
    return sourceModelVersionArn;
  }

  public void setSourceModelVersionArn(String sourceModelVersionArn) {
    this.sourceModelVersionArn = sourceModelVersionArn;
  }


  public DescribeModelResponse importJobStartTime(OffsetDateTime importJobStartTime) {
    this.importJobStartTime = importJobStartTime;
    return this;
  }

  /**
   * Get importJobStartTime
   * @return importJobStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getImportJobStartTime() {
    return importJobStartTime;
  }

  public void setImportJobStartTime(OffsetDateTime importJobStartTime) {
    this.importJobStartTime = importJobStartTime;
  }


  public DescribeModelResponse importJobEndTime(OffsetDateTime importJobEndTime) {
    this.importJobEndTime = importJobEndTime;
    return this;
  }

  /**
   * Get importJobEndTime
   * @return importJobEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getImportJobEndTime() {
    return importJobEndTime;
  }

  public void setImportJobEndTime(OffsetDateTime importJobEndTime) {
    this.importJobEndTime = importJobEndTime;
  }


  public DescribeModelResponse activeModelVersion(Integer activeModelVersion) {
    this.activeModelVersion = activeModelVersion;
    return this;
  }

  /**
   * Get activeModelVersion
   * @return activeModelVersion
   */
  @javax.annotation.Nullable
  public Integer getActiveModelVersion() {
    return activeModelVersion;
  }

  public void setActiveModelVersion(Integer activeModelVersion) {
    this.activeModelVersion = activeModelVersion;
  }


  public DescribeModelResponse activeModelVersionArn(String activeModelVersionArn) {
    this.activeModelVersionArn = activeModelVersionArn;
    return this;
  }

  /**
   * Get activeModelVersionArn
   * @return activeModelVersionArn
   */
  @javax.annotation.Nullable
  public String getActiveModelVersionArn() {
    return activeModelVersionArn;
  }

  public void setActiveModelVersionArn(String activeModelVersionArn) {
    this.activeModelVersionArn = activeModelVersionArn;
  }


  public DescribeModelResponse modelVersionActivatedAt(OffsetDateTime modelVersionActivatedAt) {
    this.modelVersionActivatedAt = modelVersionActivatedAt;
    return this;
  }

  /**
   * Get modelVersionActivatedAt
   * @return modelVersionActivatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getModelVersionActivatedAt() {
    return modelVersionActivatedAt;
  }

  public void setModelVersionActivatedAt(OffsetDateTime modelVersionActivatedAt) {
    this.modelVersionActivatedAt = modelVersionActivatedAt;
  }


  public DescribeModelResponse previousActiveModelVersion(Integer previousActiveModelVersion) {
    this.previousActiveModelVersion = previousActiveModelVersion;
    return this;
  }

  /**
   * Get previousActiveModelVersion
   * @return previousActiveModelVersion
   */
  @javax.annotation.Nullable
  public Integer getPreviousActiveModelVersion() {
    return previousActiveModelVersion;
  }

  public void setPreviousActiveModelVersion(Integer previousActiveModelVersion) {
    this.previousActiveModelVersion = previousActiveModelVersion;
  }


  public DescribeModelResponse previousActiveModelVersionArn(String previousActiveModelVersionArn) {
    this.previousActiveModelVersionArn = previousActiveModelVersionArn;
    return this;
  }

  /**
   * Get previousActiveModelVersionArn
   * @return previousActiveModelVersionArn
   */
  @javax.annotation.Nullable
  public String getPreviousActiveModelVersionArn() {
    return previousActiveModelVersionArn;
  }

  public void setPreviousActiveModelVersionArn(String previousActiveModelVersionArn) {
    this.previousActiveModelVersionArn = previousActiveModelVersionArn;
  }


  public DescribeModelResponse previousModelVersionActivatedAt(OffsetDateTime previousModelVersionActivatedAt) {
    this.previousModelVersionActivatedAt = previousModelVersionActivatedAt;
    return this;
  }

  /**
   * Get previousModelVersionActivatedAt
   * @return previousModelVersionActivatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPreviousModelVersionActivatedAt() {
    return previousModelVersionActivatedAt;
  }

  public void setPreviousModelVersionActivatedAt(OffsetDateTime previousModelVersionActivatedAt) {
    this.previousModelVersionActivatedAt = previousModelVersionActivatedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeModelResponse describeModelResponse = (DescribeModelResponse) o;
    return Objects.equals(this.modelName, describeModelResponse.modelName) &&
        Objects.equals(this.modelArn, describeModelResponse.modelArn) &&
        Objects.equals(this.datasetName, describeModelResponse.datasetName) &&
        Objects.equals(this.datasetArn, describeModelResponse.datasetArn) &&
        Objects.equals(this.schema, describeModelResponse.schema) &&
        Objects.equals(this.labelsInputConfiguration, describeModelResponse.labelsInputConfiguration) &&
        Objects.equals(this.trainingDataStartTime, describeModelResponse.trainingDataStartTime) &&
        Objects.equals(this.trainingDataEndTime, describeModelResponse.trainingDataEndTime) &&
        Objects.equals(this.evaluationDataStartTime, describeModelResponse.evaluationDataStartTime) &&
        Objects.equals(this.evaluationDataEndTime, describeModelResponse.evaluationDataEndTime) &&
        Objects.equals(this.roleArn, describeModelResponse.roleArn) &&
        Objects.equals(this.dataPreProcessingConfiguration, describeModelResponse.dataPreProcessingConfiguration) &&
        Objects.equals(this.status, describeModelResponse.status) &&
        Objects.equals(this.trainingExecutionStartTime, describeModelResponse.trainingExecutionStartTime) &&
        Objects.equals(this.trainingExecutionEndTime, describeModelResponse.trainingExecutionEndTime) &&
        Objects.equals(this.failedReason, describeModelResponse.failedReason) &&
        Objects.equals(this.modelMetrics, describeModelResponse.modelMetrics) &&
        Objects.equals(this.lastUpdatedTime, describeModelResponse.lastUpdatedTime) &&
        Objects.equals(this.createdAt, describeModelResponse.createdAt) &&
        Objects.equals(this.serverSideKmsKeyId, describeModelResponse.serverSideKmsKeyId) &&
        Objects.equals(this.offCondition, describeModelResponse.offCondition) &&
        Objects.equals(this.sourceModelVersionArn, describeModelResponse.sourceModelVersionArn) &&
        Objects.equals(this.importJobStartTime, describeModelResponse.importJobStartTime) &&
        Objects.equals(this.importJobEndTime, describeModelResponse.importJobEndTime) &&
        Objects.equals(this.activeModelVersion, describeModelResponse.activeModelVersion) &&
        Objects.equals(this.activeModelVersionArn, describeModelResponse.activeModelVersionArn) &&
        Objects.equals(this.modelVersionActivatedAt, describeModelResponse.modelVersionActivatedAt) &&
        Objects.equals(this.previousActiveModelVersion, describeModelResponse.previousActiveModelVersion) &&
        Objects.equals(this.previousActiveModelVersionArn, describeModelResponse.previousActiveModelVersionArn) &&
        Objects.equals(this.previousModelVersionActivatedAt, describeModelResponse.previousModelVersionActivatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelName, modelArn, datasetName, datasetArn, schema, labelsInputConfiguration, trainingDataStartTime, trainingDataEndTime, evaluationDataStartTime, evaluationDataEndTime, roleArn, dataPreProcessingConfiguration, status, trainingExecutionStartTime, trainingExecutionEndTime, failedReason, modelMetrics, lastUpdatedTime, createdAt, serverSideKmsKeyId, offCondition, sourceModelVersionArn, importJobStartTime, importJobEndTime, activeModelVersion, activeModelVersionArn, modelVersionActivatedAt, previousActiveModelVersion, previousActiveModelVersionArn, previousModelVersionActivatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeModelResponse {\n");
    sb.append("    modelName: ").append(toIndentedString(modelName)).append("\n");
    sb.append("    modelArn: ").append(toIndentedString(modelArn)).append("\n");
    sb.append("    datasetName: ").append(toIndentedString(datasetName)).append("\n");
    sb.append("    datasetArn: ").append(toIndentedString(datasetArn)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    labelsInputConfiguration: ").append(toIndentedString(labelsInputConfiguration)).append("\n");
    sb.append("    trainingDataStartTime: ").append(toIndentedString(trainingDataStartTime)).append("\n");
    sb.append("    trainingDataEndTime: ").append(toIndentedString(trainingDataEndTime)).append("\n");
    sb.append("    evaluationDataStartTime: ").append(toIndentedString(evaluationDataStartTime)).append("\n");
    sb.append("    evaluationDataEndTime: ").append(toIndentedString(evaluationDataEndTime)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    dataPreProcessingConfiguration: ").append(toIndentedString(dataPreProcessingConfiguration)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    trainingExecutionStartTime: ").append(toIndentedString(trainingExecutionStartTime)).append("\n");
    sb.append("    trainingExecutionEndTime: ").append(toIndentedString(trainingExecutionEndTime)).append("\n");
    sb.append("    failedReason: ").append(toIndentedString(failedReason)).append("\n");
    sb.append("    modelMetrics: ").append(toIndentedString(modelMetrics)).append("\n");
    sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    serverSideKmsKeyId: ").append(toIndentedString(serverSideKmsKeyId)).append("\n");
    sb.append("    offCondition: ").append(toIndentedString(offCondition)).append("\n");
    sb.append("    sourceModelVersionArn: ").append(toIndentedString(sourceModelVersionArn)).append("\n");
    sb.append("    importJobStartTime: ").append(toIndentedString(importJobStartTime)).append("\n");
    sb.append("    importJobEndTime: ").append(toIndentedString(importJobEndTime)).append("\n");
    sb.append("    activeModelVersion: ").append(toIndentedString(activeModelVersion)).append("\n");
    sb.append("    activeModelVersionArn: ").append(toIndentedString(activeModelVersionArn)).append("\n");
    sb.append("    modelVersionActivatedAt: ").append(toIndentedString(modelVersionActivatedAt)).append("\n");
    sb.append("    previousActiveModelVersion: ").append(toIndentedString(previousActiveModelVersion)).append("\n");
    sb.append("    previousActiveModelVersionArn: ").append(toIndentedString(previousActiveModelVersionArn)).append("\n");
    sb.append("    previousModelVersionActivatedAt: ").append(toIndentedString(previousModelVersionActivatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ModelName");
    openapiFields.add("ModelArn");
    openapiFields.add("DatasetName");
    openapiFields.add("DatasetArn");
    openapiFields.add("Schema");
    openapiFields.add("LabelsInputConfiguration");
    openapiFields.add("TrainingDataStartTime");
    openapiFields.add("TrainingDataEndTime");
    openapiFields.add("EvaluationDataStartTime");
    openapiFields.add("EvaluationDataEndTime");
    openapiFields.add("RoleArn");
    openapiFields.add("DataPreProcessingConfiguration");
    openapiFields.add("Status");
    openapiFields.add("TrainingExecutionStartTime");
    openapiFields.add("TrainingExecutionEndTime");
    openapiFields.add("FailedReason");
    openapiFields.add("ModelMetrics");
    openapiFields.add("LastUpdatedTime");
    openapiFields.add("CreatedAt");
    openapiFields.add("ServerSideKmsKeyId");
    openapiFields.add("OffCondition");
    openapiFields.add("SourceModelVersionArn");
    openapiFields.add("ImportJobStartTime");
    openapiFields.add("ImportJobEndTime");
    openapiFields.add("ActiveModelVersion");
    openapiFields.add("ActiveModelVersionArn");
    openapiFields.add("ModelVersionActivatedAt");
    openapiFields.add("PreviousActiveModelVersion");
    openapiFields.add("PreviousActiveModelVersionArn");
    openapiFields.add("PreviousModelVersionActivatedAt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeModelResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeModelResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeModelResponse is not found in the empty JSON string", DescribeModelResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeModelResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeModelResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ModelName`
      if (jsonObj.get("ModelName") != null && !jsonObj.get("ModelName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelName"));
      }
      // validate the optional field `ModelArn`
      if (jsonObj.get("ModelArn") != null && !jsonObj.get("ModelArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelArn"));
      }
      // validate the optional field `DatasetName`
      if (jsonObj.get("DatasetName") != null && !jsonObj.get("DatasetName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DatasetName"));
      }
      // validate the optional field `DatasetArn`
      if (jsonObj.get("DatasetArn") != null && !jsonObj.get("DatasetArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DatasetArn"));
      }
      // validate the optional field `Schema`
      if (jsonObj.get("Schema") != null && !jsonObj.get("Schema").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Schema"));
      }
      // validate the optional field `LabelsInputConfiguration`
      if (jsonObj.get("LabelsInputConfiguration") != null && !jsonObj.get("LabelsInputConfiguration").isJsonNull()) {
        DescribeModelResponseLabelsInputConfiguration.validateJsonElement(jsonObj.get("LabelsInputConfiguration"));
      }
      // validate the optional field `TrainingDataStartTime`
      if (jsonObj.get("TrainingDataStartTime") != null && !jsonObj.get("TrainingDataStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("TrainingDataStartTime"));
      }
      // validate the optional field `TrainingDataEndTime`
      if (jsonObj.get("TrainingDataEndTime") != null && !jsonObj.get("TrainingDataEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("TrainingDataEndTime"));
      }
      // validate the optional field `EvaluationDataStartTime`
      if (jsonObj.get("EvaluationDataStartTime") != null && !jsonObj.get("EvaluationDataStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EvaluationDataStartTime"));
      }
      // validate the optional field `EvaluationDataEndTime`
      if (jsonObj.get("EvaluationDataEndTime") != null && !jsonObj.get("EvaluationDataEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EvaluationDataEndTime"));
      }
      // validate the optional field `RoleArn`
      if (jsonObj.get("RoleArn") != null && !jsonObj.get("RoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleArn"));
      }
      // validate the optional field `DataPreProcessingConfiguration`
      if (jsonObj.get("DataPreProcessingConfiguration") != null && !jsonObj.get("DataPreProcessingConfiguration").isJsonNull()) {
        CreateModelRequestDataPreProcessingConfiguration.validateJsonElement(jsonObj.get("DataPreProcessingConfiguration"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        ModelStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `TrainingExecutionStartTime`
      if (jsonObj.get("TrainingExecutionStartTime") != null && !jsonObj.get("TrainingExecutionStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("TrainingExecutionStartTime"));
      }
      // validate the optional field `TrainingExecutionEndTime`
      if (jsonObj.get("TrainingExecutionEndTime") != null && !jsonObj.get("TrainingExecutionEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("TrainingExecutionEndTime"));
      }
      // validate the optional field `FailedReason`
      if (jsonObj.get("FailedReason") != null && !jsonObj.get("FailedReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FailedReason"));
      }
      // validate the optional field `ModelMetrics`
      if (jsonObj.get("ModelMetrics") != null && !jsonObj.get("ModelMetrics").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ModelMetrics"));
      }
      // validate the optional field `LastUpdatedTime`
      if (jsonObj.get("LastUpdatedTime") != null && !jsonObj.get("LastUpdatedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdatedTime"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `ServerSideKmsKeyId`
      if (jsonObj.get("ServerSideKmsKeyId") != null && !jsonObj.get("ServerSideKmsKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServerSideKmsKeyId"));
      }
      // validate the optional field `OffCondition`
      if (jsonObj.get("OffCondition") != null && !jsonObj.get("OffCondition").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OffCondition"));
      }
      // validate the optional field `SourceModelVersionArn`
      if (jsonObj.get("SourceModelVersionArn") != null && !jsonObj.get("SourceModelVersionArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SourceModelVersionArn"));
      }
      // validate the optional field `ImportJobStartTime`
      if (jsonObj.get("ImportJobStartTime") != null && !jsonObj.get("ImportJobStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ImportJobStartTime"));
      }
      // validate the optional field `ImportJobEndTime`
      if (jsonObj.get("ImportJobEndTime") != null && !jsonObj.get("ImportJobEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ImportJobEndTime"));
      }
      // validate the optional field `ActiveModelVersion`
      if (jsonObj.get("ActiveModelVersion") != null && !jsonObj.get("ActiveModelVersion").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ActiveModelVersion"));
      }
      // validate the optional field `ActiveModelVersionArn`
      if (jsonObj.get("ActiveModelVersionArn") != null && !jsonObj.get("ActiveModelVersionArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ActiveModelVersionArn"));
      }
      // validate the optional field `ModelVersionActivatedAt`
      if (jsonObj.get("ModelVersionActivatedAt") != null && !jsonObj.get("ModelVersionActivatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ModelVersionActivatedAt"));
      }
      // validate the optional field `PreviousActiveModelVersion`
      if (jsonObj.get("PreviousActiveModelVersion") != null && !jsonObj.get("PreviousActiveModelVersion").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PreviousActiveModelVersion"));
      }
      // validate the optional field `PreviousActiveModelVersionArn`
      if (jsonObj.get("PreviousActiveModelVersionArn") != null && !jsonObj.get("PreviousActiveModelVersionArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreviousActiveModelVersionArn"));
      }
      // validate the optional field `PreviousModelVersionActivatedAt`
      if (jsonObj.get("PreviousModelVersionActivatedAt") != null && !jsonObj.get("PreviousModelVersionActivatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("PreviousModelVersionActivatedAt"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeModelResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeModelResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeModelResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeModelResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeModelResponse>() {
           @Override
           public void write(JsonWriter out, DescribeModelResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeModelResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeModelResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeModelResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeModelResponse
   */
  public static DescribeModelResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeModelResponse.class);
  }

  /**
   * Convert an instance of DescribeModelResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

