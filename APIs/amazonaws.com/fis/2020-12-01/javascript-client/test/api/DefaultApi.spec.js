/**
 * AWS Fault Injection Simulator
 * Fault Injection Simulator is a managed service that enables you to perform fault injection experiments on your Amazon Web Services workloads. For more information, see the <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/\">Fault Injection Simulator User Guide</a>.
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsFaultInjectionSimulator);
  }
}(this, function(expect, AwsFaultInjectionSimulator) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsFaultInjectionSimulator.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createExperimentTemplate', function() {
      it('should call createExperimentTemplate successfully', function(done) {
        //uncomment below and update the code to test createExperimentTemplate
        //instance.createExperimentTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExperimentTemplate', function() {
      it('should call deleteExperimentTemplate successfully', function(done) {
        //uncomment below and update the code to test deleteExperimentTemplate
        //instance.deleteExperimentTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAction', function() {
      it('should call getAction successfully', function(done) {
        //uncomment below and update the code to test getAction
        //instance.getAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExperiment', function() {
      it('should call getExperiment successfully', function(done) {
        //uncomment below and update the code to test getExperiment
        //instance.getExperiment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExperimentTemplate', function() {
      it('should call getExperimentTemplate successfully', function(done) {
        //uncomment below and update the code to test getExperimentTemplate
        //instance.getExperimentTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTargetResourceType', function() {
      it('should call getTargetResourceType successfully', function(done) {
        //uncomment below and update the code to test getTargetResourceType
        //instance.getTargetResourceType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listActions', function() {
      it('should call listActions successfully', function(done) {
        //uncomment below and update the code to test listActions
        //instance.listActions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExperimentTemplates', function() {
      it('should call listExperimentTemplates successfully', function(done) {
        //uncomment below and update the code to test listExperimentTemplates
        //instance.listExperimentTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExperiments', function() {
      it('should call listExperiments successfully', function(done) {
        //uncomment below and update the code to test listExperiments
        //instance.listExperiments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTargetResourceTypes', function() {
      it('should call listTargetResourceTypes successfully', function(done) {
        //uncomment below and update the code to test listTargetResourceTypes
        //instance.listTargetResourceTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startExperiment', function() {
      it('should call startExperiment successfully', function(done) {
        //uncomment below and update the code to test startExperiment
        //instance.startExperiment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopExperiment', function() {
      it('should call stopExperiment successfully', function(done) {
        //uncomment below and update the code to test stopExperiment
        //instance.stopExperiment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateExperimentTemplate', function() {
      it('should call updateExperimentTemplate successfully', function(done) {
        //uncomment below and update the code to test updateExperimentTemplate
        //instance.updateExperimentTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
