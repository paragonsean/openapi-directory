/**
 * AWS Fault Injection Simulator
 * Fault Injection Simulator is a managed service that enables you to perform fault injection experiments on your Amazon Web Services workloads. For more information, see the <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/\">Fault Injection Simulator User Guide</a>.
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExperimentTarget model module.
 * @module model/ExperimentTarget
 * @version 2020-12-01
 */
class ExperimentTarget {
    /**
     * Constructs a new <code>ExperimentTarget</code>.
     * Describes a target for an experiment.
     * @alias module:model/ExperimentTarget
     */
    constructor() { 
        
        ExperimentTarget.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExperimentTarget</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExperimentTarget} obj Optional instance to populate.
     * @return {module:model/ExperimentTarget} The populated <code>ExperimentTarget</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExperimentTarget();

            if (data.hasOwnProperty('resourceType')) {
                obj['resourceType'] = ApiClient.convertToType(data['resourceType'], 'String');
            }
            if (data.hasOwnProperty('resourceArns')) {
                obj['resourceArns'] = ApiClient.convertToType(data['resourceArns'], Array);
            }
            if (data.hasOwnProperty('resourceTags')) {
                obj['resourceTags'] = ApiClient.convertToType(data['resourceTags'], Object);
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = ApiClient.convertToType(data['filters'], Array);
            }
            if (data.hasOwnProperty('selectionMode')) {
                obj['selectionMode'] = ApiClient.convertToType(data['selectionMode'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExperimentTarget</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExperimentTarget</code>.
     */
    static validateJSON(data) {
        // validate the optional field `resourceType`
        if (data['resourceType']) { // data not null
          String.validateJSON(data['resourceType']);
        }
        // validate the optional field `resourceArns`
        if (data['resourceArns']) { // data not null
          Array.validateJSON(data['resourceArns']);
        }
        // validate the optional field `resourceTags`
        if (data['resourceTags']) { // data not null
          Object.validateJSON(data['resourceTags']);
        }
        // validate the optional field `filters`
        if (data['filters']) { // data not null
          Array.validateJSON(data['filters']);
        }
        // validate the optional field `selectionMode`
        if (data['selectionMode']) { // data not null
          String.validateJSON(data['selectionMode']);
        }
        // validate the optional field `parameters`
        if (data['parameters']) { // data not null
          Object.validateJSON(data['parameters']);
        }

        return true;
    }


}



/**
 * @member {String} resourceType
 */
ExperimentTarget.prototype['resourceType'] = undefined;

/**
 * @member {Array} resourceArns
 */
ExperimentTarget.prototype['resourceArns'] = undefined;

/**
 * @member {Object} resourceTags
 */
ExperimentTarget.prototype['resourceTags'] = undefined;

/**
 * @member {Array} filters
 */
ExperimentTarget.prototype['filters'] = undefined;

/**
 * @member {String} selectionMode
 */
ExperimentTarget.prototype['selectionMode'] = undefined;

/**
 * @member {Object} parameters
 */
ExperimentTarget.prototype['parameters'] = undefined;






export default ExperimentTarget;

