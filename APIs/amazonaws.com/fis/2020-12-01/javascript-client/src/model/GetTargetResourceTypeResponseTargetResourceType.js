/**
 * AWS Fault Injection Simulator
 * Fault Injection Simulator is a managed service that enables you to perform fault injection experiments on your Amazon Web Services workloads. For more information, see the <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/\">Fault Injection Simulator User Guide</a>.
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TargetResourceType from './TargetResourceType';

/**
 * The GetTargetResourceTypeResponseTargetResourceType model module.
 * @module model/GetTargetResourceTypeResponseTargetResourceType
 * @version 2020-12-01
 */
class GetTargetResourceTypeResponseTargetResourceType {
    /**
     * Constructs a new <code>GetTargetResourceTypeResponseTargetResourceType</code>.
     * @alias module:model/GetTargetResourceTypeResponseTargetResourceType
     * @implements module:model/TargetResourceType
     */
    constructor() { 
        TargetResourceType.initialize(this);
        GetTargetResourceTypeResponseTargetResourceType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetTargetResourceTypeResponseTargetResourceType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetTargetResourceTypeResponseTargetResourceType} obj Optional instance to populate.
     * @return {module:model/GetTargetResourceTypeResponseTargetResourceType} The populated <code>GetTargetResourceTypeResponseTargetResourceType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetTargetResourceTypeResponseTargetResourceType();
            TargetResourceType.constructFromObject(data, obj);

            if (data.hasOwnProperty('resourceType')) {
                obj['resourceType'] = ApiClient.convertToType(data['resourceType'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetTargetResourceTypeResponseTargetResourceType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetTargetResourceTypeResponseTargetResourceType</code>.
     */
    static validateJSON(data) {
        // validate the optional field `resourceType`
        if (data['resourceType']) { // data not null
          String.validateJSON(data['resourceType']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `parameters`
        if (data['parameters']) { // data not null
          Object.validateJSON(data['parameters']);
        }

        return true;
    }


}



/**
 * @member {String} resourceType
 */
GetTargetResourceTypeResponseTargetResourceType.prototype['resourceType'] = undefined;

/**
 * @member {String} description
 */
GetTargetResourceTypeResponseTargetResourceType.prototype['description'] = undefined;

/**
 * @member {Object} parameters
 */
GetTargetResourceTypeResponseTargetResourceType.prototype['parameters'] = undefined;


// Implement TargetResourceType interface:
/**
 * @member {String} resourceType
 */
TargetResourceType.prototype['resourceType'] = undefined;
/**
 * @member {String} description
 */
TargetResourceType.prototype['description'] = undefined;
/**
 * @member {Object} parameters
 */
TargetResourceType.prototype['parameters'] = undefined;




export default GetTargetResourceTypeResponseTargetResourceType;

