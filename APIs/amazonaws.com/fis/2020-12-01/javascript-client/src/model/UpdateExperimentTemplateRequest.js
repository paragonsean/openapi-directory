/**
 * AWS Fault Injection Simulator
 * Fault Injection Simulator is a managed service that enables you to perform fault injection experiments on your Amazon Web Services workloads. For more information, see the <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/\">Fault Injection Simulator User Guide</a>.
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateExperimentTemplateRequestLogConfiguration from './CreateExperimentTemplateRequestLogConfiguration';
import UpdateExperimentTemplateActionInputItem from './UpdateExperimentTemplateActionInputItem';
import UpdateExperimentTemplateStopConditionInput from './UpdateExperimentTemplateStopConditionInput';
import UpdateExperimentTemplateTargetInput from './UpdateExperimentTemplateTargetInput';

/**
 * The UpdateExperimentTemplateRequest model module.
 * @module model/UpdateExperimentTemplateRequest
 * @version 2020-12-01
 */
class UpdateExperimentTemplateRequest {
    /**
     * Constructs a new <code>UpdateExperimentTemplateRequest</code>.
     * @alias module:model/UpdateExperimentTemplateRequest
     */
    constructor() { 
        
        UpdateExperimentTemplateRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateExperimentTemplateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateExperimentTemplateRequest} obj Optional instance to populate.
     * @return {module:model/UpdateExperimentTemplateRequest} The populated <code>UpdateExperimentTemplateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateExperimentTemplateRequest();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('stopConditions')) {
                obj['stopConditions'] = ApiClient.convertToType(data['stopConditions'], [UpdateExperimentTemplateStopConditionInput]);
            }
            if (data.hasOwnProperty('targets')) {
                obj['targets'] = ApiClient.convertToType(data['targets'], {'String': UpdateExperimentTemplateTargetInput});
            }
            if (data.hasOwnProperty('actions')) {
                obj['actions'] = ApiClient.convertToType(data['actions'], {'String': UpdateExperimentTemplateActionInputItem});
            }
            if (data.hasOwnProperty('roleArn')) {
                obj['roleArn'] = ApiClient.convertToType(data['roleArn'], 'String');
            }
            if (data.hasOwnProperty('logConfiguration')) {
                obj['logConfiguration'] = CreateExperimentTemplateRequestLogConfiguration.constructFromObject(data['logConfiguration']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateExperimentTemplateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateExperimentTemplateRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['stopConditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['stopConditions'])) {
                throw new Error("Expected the field `stopConditions` to be an array in the JSON data but got " + data['stopConditions']);
            }
            // validate the optional field `stopConditions` (array)
            for (const item of data['stopConditions']) {
                UpdateExperimentTemplateStopConditionInput.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['roleArn'] && !(typeof data['roleArn'] === 'string' || data['roleArn'] instanceof String)) {
            throw new Error("Expected the field `roleArn` to be a primitive type in the JSON string but got " + data['roleArn']);
        }
        // validate the optional field `logConfiguration`
        if (data['logConfiguration']) { // data not null
          CreateExperimentTemplateRequestLogConfiguration.validateJSON(data['logConfiguration']);
        }

        return true;
    }


}



/**
 * A description for the template.
 * @member {String} description
 */
UpdateExperimentTemplateRequest.prototype['description'] = undefined;

/**
 * The stop conditions for the experiment.
 * @member {Array.<module:model/UpdateExperimentTemplateStopConditionInput>} stopConditions
 */
UpdateExperimentTemplateRequest.prototype['stopConditions'] = undefined;

/**
 * The targets for the experiment.
 * @member {Object.<String, module:model/UpdateExperimentTemplateTargetInput>} targets
 */
UpdateExperimentTemplateRequest.prototype['targets'] = undefined;

/**
 * The actions for the experiment.
 * @member {Object.<String, module:model/UpdateExperimentTemplateActionInputItem>} actions
 */
UpdateExperimentTemplateRequest.prototype['actions'] = undefined;

/**
 * The Amazon Resource Name (ARN) of an IAM role that grants the FIS service permission to perform service actions on your behalf.
 * @member {String} roleArn
 */
UpdateExperimentTemplateRequest.prototype['roleArn'] = undefined;

/**
 * @member {module:model/CreateExperimentTemplateRequestLogConfiguration} logConfiguration
 */
UpdateExperimentTemplateRequest.prototype['logConfiguration'] = undefined;






export default UpdateExperimentTemplateRequest;

