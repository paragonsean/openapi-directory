/**
 * AWS Fault Injection Simulator
 * Fault Injection Simulator is a managed service that enables you to perform fault injection experiments on your Amazon Web Services workloads. For more information, see the <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/\">Fault Injection Simulator User Guide</a>.
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExperimentSummary.h
 *
 * Provides a summary of an experiment.
 */

#ifndef OAIExperimentSummary_H
#define OAIExperimentSummary_H

#include <QJsonObject>

#include "OAIExperiment_state.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExperiment_state;

class OAIExperimentSummary : public OAIObject {
public:
    OAIExperimentSummary();
    OAIExperimentSummary(QString json);
    ~OAIExperimentSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getExperimentTemplateId() const;
    void setExperimentTemplateId(const QString &experiment_template_id);
    bool is_experiment_template_id_Set() const;
    bool is_experiment_template_id_Valid() const;

    OAIExperiment_state getState() const;
    void setState(const OAIExperiment_state &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_experiment_template_id;
    bool m_experiment_template_id_isSet;
    bool m_experiment_template_id_isValid;

    OAIExperiment_state m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExperimentSummary)

#endif // OAIExperimentSummary_H
