/**
 * AWS Fault Injection Simulator
 * Fault Injection Simulator is a managed service that enables you to perform fault injection experiments on your Amazon Web Services workloads. For more information, see the <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/\">Fault Injection Simulator User Guide</a>.
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateExperimentTemplateResponse_experimentTemplate.h
 *
 * 
 */

#ifndef OAICreateExperimentTemplateResponse_experimentTemplate_H
#define OAICreateExperimentTemplateResponse_experimentTemplate_H

#include <QJsonObject>

#include "OAIExperimentTemplate_logConfiguration.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExperimentTemplate_logConfiguration;

class OAICreateExperimentTemplateResponse_experimentTemplate : public OAIObject {
public:
    OAICreateExperimentTemplateResponse_experimentTemplate();
    OAICreateExperimentTemplateResponse_experimentTemplate(QString json);
    ~OAICreateExperimentTemplateResponse_experimentTemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QMap getTargets() const;
    void setTargets(const QMap &targets);
    bool is_targets_Set() const;
    bool is_targets_Valid() const;

    QMap getActions() const;
    void setActions(const QMap &actions);
    bool is_actions_Set() const;
    bool is_actions_Valid() const;

    QList getStopConditions() const;
    void setStopConditions(const QList &stop_conditions);
    bool is_stop_conditions_Set() const;
    bool is_stop_conditions_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getLastUpdateTime() const;
    void setLastUpdateTime(const QDateTime &last_update_time);
    bool is_last_update_time_Set() const;
    bool is_last_update_time_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIExperimentTemplate_logConfiguration getLogConfiguration() const;
    void setLogConfiguration(const OAIExperimentTemplate_logConfiguration &log_configuration);
    bool is_log_configuration_Set() const;
    bool is_log_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QMap m_targets;
    bool m_targets_isSet;
    bool m_targets_isValid;

    QMap m_actions;
    bool m_actions_isSet;
    bool m_actions_isValid;

    QList m_stop_conditions;
    bool m_stop_conditions_isSet;
    bool m_stop_conditions_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_last_update_time;
    bool m_last_update_time_isSet;
    bool m_last_update_time_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIExperimentTemplate_logConfiguration m_log_configuration;
    bool m_log_configuration_isSet;
    bool m_log_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateExperimentTemplateResponse_experimentTemplate)

#endif // OAICreateExperimentTemplateResponse_experimentTemplate_H
