/**
 * AWS Fault Injection Simulator
 * Fault Injection Simulator is a managed service that enables you to perform fault injection experiments on your Amazon Web Services workloads. For more information, see the <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/\">Fault Injection Simulator User Guide</a>.
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateExperimentTemplate_request.h
 *
 * 
 */

#ifndef OAIUpdateExperimentTemplate_request_H
#define OAIUpdateExperimentTemplate_request_H

#include <QJsonObject>

#include "OAICreateExperimentTemplate_request_logConfiguration.h"
#include "OAIUpdateExperimentTemplateActionInputItem.h"
#include "OAIUpdateExperimentTemplateStopConditionInput.h"
#include "OAIUpdateExperimentTemplateTargetInput.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateExperimentTemplateStopConditionInput;
class OAIUpdateExperimentTemplateTargetInput;
class OAIUpdateExperimentTemplateActionInputItem;
class OAICreateExperimentTemplate_request_logConfiguration;

class OAIUpdateExperimentTemplate_request : public OAIObject {
public:
    OAIUpdateExperimentTemplate_request();
    OAIUpdateExperimentTemplate_request(QString json);
    ~OAIUpdateExperimentTemplate_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIUpdateExperimentTemplateStopConditionInput> getStopConditions() const;
    void setStopConditions(const QList<OAIUpdateExperimentTemplateStopConditionInput> &stop_conditions);
    bool is_stop_conditions_Set() const;
    bool is_stop_conditions_Valid() const;

    QMap<QString, OAIUpdateExperimentTemplateTargetInput> getTargets() const;
    void setTargets(const QMap<QString, OAIUpdateExperimentTemplateTargetInput> &targets);
    bool is_targets_Set() const;
    bool is_targets_Valid() const;

    QMap<QString, OAIUpdateExperimentTemplateActionInputItem> getActions() const;
    void setActions(const QMap<QString, OAIUpdateExperimentTemplateActionInputItem> &actions);
    bool is_actions_Set() const;
    bool is_actions_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    OAICreateExperimentTemplate_request_logConfiguration getLogConfiguration() const;
    void setLogConfiguration(const OAICreateExperimentTemplate_request_logConfiguration &log_configuration);
    bool is_log_configuration_Set() const;
    bool is_log_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIUpdateExperimentTemplateStopConditionInput> m_stop_conditions;
    bool m_stop_conditions_isSet;
    bool m_stop_conditions_isValid;

    QMap<QString, OAIUpdateExperimentTemplateTargetInput> m_targets;
    bool m_targets_isSet;
    bool m_targets_isValid;

    QMap<QString, OAIUpdateExperimentTemplateActionInputItem> m_actions;
    bool m_actions_isSet;
    bool m_actions_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    OAICreateExperimentTemplate_request_logConfiguration m_log_configuration;
    bool m_log_configuration_isSet;
    bool m_log_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateExperimentTemplate_request)

#endif // OAIUpdateExperimentTemplate_request_H
