# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.experiment_log_configuration_cloud_watch_logs_configuration import ExperimentLogConfigurationCloudWatchLogsConfiguration
from openapi_server.models.experiment_log_configuration_s3_configuration import ExperimentLogConfigurationS3Configuration
from openapi_server import util


class ExperimentLogConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloud_watch_logs_configuration: ExperimentLogConfigurationCloudWatchLogsConfiguration=None, s3_configuration: ExperimentLogConfigurationS3Configuration=None, log_schema_version: int=None):
        """ExperimentLogConfiguration - a model defined in OpenAPI

        :param cloud_watch_logs_configuration: The cloud_watch_logs_configuration of this ExperimentLogConfiguration.
        :param s3_configuration: The s3_configuration of this ExperimentLogConfiguration.
        :param log_schema_version: The log_schema_version of this ExperimentLogConfiguration.
        """
        self.openapi_types = {
            'cloud_watch_logs_configuration': ExperimentLogConfigurationCloudWatchLogsConfiguration,
            's3_configuration': ExperimentLogConfigurationS3Configuration,
            'log_schema_version': int
        }

        self.attribute_map = {
            'cloud_watch_logs_configuration': 'cloudWatchLogsConfiguration',
            's3_configuration': 's3Configuration',
            'log_schema_version': 'logSchemaVersion'
        }

        self._cloud_watch_logs_configuration = cloud_watch_logs_configuration
        self._s3_configuration = s3_configuration
        self._log_schema_version = log_schema_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExperimentLogConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Experiment_logConfiguration of this ExperimentLogConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_watch_logs_configuration(self):
        """Gets the cloud_watch_logs_configuration of this ExperimentLogConfiguration.


        :return: The cloud_watch_logs_configuration of this ExperimentLogConfiguration.
        :rtype: ExperimentLogConfigurationCloudWatchLogsConfiguration
        """
        return self._cloud_watch_logs_configuration

    @cloud_watch_logs_configuration.setter
    def cloud_watch_logs_configuration(self, cloud_watch_logs_configuration):
        """Sets the cloud_watch_logs_configuration of this ExperimentLogConfiguration.


        :param cloud_watch_logs_configuration: The cloud_watch_logs_configuration of this ExperimentLogConfiguration.
        :type cloud_watch_logs_configuration: ExperimentLogConfigurationCloudWatchLogsConfiguration
        """

        self._cloud_watch_logs_configuration = cloud_watch_logs_configuration

    @property
    def s3_configuration(self):
        """Gets the s3_configuration of this ExperimentLogConfiguration.


        :return: The s3_configuration of this ExperimentLogConfiguration.
        :rtype: ExperimentLogConfigurationS3Configuration
        """
        return self._s3_configuration

    @s3_configuration.setter
    def s3_configuration(self, s3_configuration):
        """Sets the s3_configuration of this ExperimentLogConfiguration.


        :param s3_configuration: The s3_configuration of this ExperimentLogConfiguration.
        :type s3_configuration: ExperimentLogConfigurationS3Configuration
        """

        self._s3_configuration = s3_configuration

    @property
    def log_schema_version(self):
        """Gets the log_schema_version of this ExperimentLogConfiguration.


        :return: The log_schema_version of this ExperimentLogConfiguration.
        :rtype: int
        """
        return self._log_schema_version

    @log_schema_version.setter
    def log_schema_version(self, log_schema_version):
        """Sets the log_schema_version of this ExperimentLogConfiguration.


        :param log_schema_version: The log_schema_version of this ExperimentLogConfiguration.
        :type log_schema_version: int
        """

        self._log_schema_version = log_schema_version
