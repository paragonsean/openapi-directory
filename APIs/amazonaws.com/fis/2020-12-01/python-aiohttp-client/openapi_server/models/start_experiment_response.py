# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_experiment_response_experiment import GetExperimentResponseExperiment
from openapi_server import util


class StartExperimentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, experiment: GetExperimentResponseExperiment=None):
        """StartExperimentResponse - a model defined in OpenAPI

        :param experiment: The experiment of this StartExperimentResponse.
        """
        self.openapi_types = {
            'experiment': GetExperimentResponseExperiment
        }

        self.attribute_map = {
            'experiment': 'experiment'
        }

        self._experiment = experiment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartExperimentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartExperimentResponse of this StartExperimentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def experiment(self):
        """Gets the experiment of this StartExperimentResponse.


        :return: The experiment of this StartExperimentResponse.
        :rtype: GetExperimentResponseExperiment
        """
        return self._experiment

    @experiment.setter
    def experiment(self, experiment):
        """Sets the experiment of this StartExperimentResponse.


        :param experiment: The experiment of this StartExperimentResponse.
        :type experiment: GetExperimentResponseExperiment
        """

        self._experiment = experiment
