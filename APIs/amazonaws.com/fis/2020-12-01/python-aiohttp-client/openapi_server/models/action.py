# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Action(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, description: str=None, parameters: Dict=None, targets: Dict=None, tags: Dict=None):
        """Action - a model defined in OpenAPI

        :param id: The id of this Action.
        :param description: The description of this Action.
        :param parameters: The parameters of this Action.
        :param targets: The targets of this Action.
        :param tags: The tags of this Action.
        """
        self.openapi_types = {
            'id': str,
            'description': str,
            'parameters': Dict,
            'targets': Dict,
            'tags': Dict
        }

        self.attribute_map = {
            'id': 'id',
            'description': 'description',
            'parameters': 'parameters',
            'targets': 'targets',
            'tags': 'tags'
        }

        self._id = id
        self._description = description
        self._parameters = parameters
        self._targets = targets
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Action':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Action of this Action.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Action.


        :return: The id of this Action.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Action.


        :param id: The id of this Action.
        :type id: str
        """

        self._id = id

    @property
    def description(self):
        """Gets the description of this Action.


        :return: The description of this Action.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Action.


        :param description: The description of this Action.
        :type description: str
        """

        self._description = description

    @property
    def parameters(self):
        """Gets the parameters of this Action.


        :return: The parameters of this Action.
        :rtype: Dict
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this Action.


        :param parameters: The parameters of this Action.
        :type parameters: Dict
        """

        self._parameters = parameters

    @property
    def targets(self):
        """Gets the targets of this Action.


        :return: The targets of this Action.
        :rtype: Dict
        """
        return self._targets

    @targets.setter
    def targets(self, targets):
        """Sets the targets of this Action.


        :param targets: The targets of this Action.
        :type targets: Dict
        """

        self._targets = targets

    @property
    def tags(self):
        """Gets the tags of this Action.


        :return: The tags of this Action.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Action.


        :param tags: The tags of this Action.
        :type tags: Dict
        """

        self._tags = tags
