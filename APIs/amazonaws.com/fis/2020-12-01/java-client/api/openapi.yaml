openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "Fault Injection Simulator is a managed service that enables you to\
    \ perform fault injection experiments on your Amazon Web Services workloads. For\
    \ more information, see the <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/\"\
    >Fault Injection Simulator User Guide</a>."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Fault Injection Simulator
  version: 2020-12-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: fis
  x-aws-signingName: fis
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/fis-2020-12-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/fis/
servers:
- description: The FIS multi-region endpoint
  url: "http://fis.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The FIS multi-region endpoint
  url: "https://fis.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The FIS endpoint for China (Beijing) and China (Ningxia)
  url: "http://fis.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The FIS endpoint for China (Beijing) and China (Ningxia)
  url: "https://fis.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /experimentTemplates:
    get:
      description: Lists your experiment templates.
      operationId: ListExperimentTemplates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of results to return with a single call.\
          \ To retrieve the remaining results, make another call with the returned\
          \ <code>nextToken</code> value."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: "[\\S]+"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExperimentTemplatesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    post:
      description: "<p>Creates an experiment template. </p> <p>An experiment template\
        \ includes the following components:</p> <ul> <li> <p> <b>Targets</b>: A target\
        \ can be a specific resource in your Amazon Web Services environment, or one\
        \ or more resources that match criteria that you specify, for example, resources\
        \ that have specific tags.</p> </li> <li> <p> <b>Actions</b>: The actions\
        \ to carry out on the target. You can specify multiple actions, the duration\
        \ of each action, and when to start each action during an experiment.</p>\
        \ </li> <li> <p> <b>Stop conditions</b>: If a stop condition is triggered\
        \ while an experiment is running, the experiment is automatically stopped.\
        \ You can define a stop condition as a CloudWatch alarm.</p> </li> </ul> <p>For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/experiment-templates.html\"\
        >Experiment templates</a> in the <i>Fault Injection Simulator User Guide</i>.</p>"
      operationId: CreateExperimentTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExperimentTemplate_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExperimentTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /experimentTemplates/{id}:
    delete:
      description: Deletes the specified experiment template.
      operationId: DeleteExperimentTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the experiment template.
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 64
          pattern: "[\\S]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteExperimentTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    get:
      description: Gets information about the specified experiment template.
      operationId: GetExperimentTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the experiment template.
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 64
          pattern: "[\\S]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExperimentTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    patch:
      description: Updates the specified experiment template.
      operationId: UpdateExperimentTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the experiment template.
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 64
          pattern: "[\\S]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExperimentTemplate_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateExperimentTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /actions/{id}:
    get:
      description: Gets information about the specified FIS action.
      operationId: GetAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the action.
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 128
          pattern: "[\\S]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /experiments/{id}:
    delete:
      description: Stops the specified experiment.
      operationId: StopExperiment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the experiment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 64
          pattern: "[\\S]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopExperimentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    get:
      description: Gets information about the specified experiment.
      operationId: GetExperiment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the experiment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 64
          pattern: "[\\S]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExperimentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /targetResourceTypes/{resourceType}:
    get:
      description: Gets information about the specified resource type.
      operationId: GetTargetResourceType
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The resource type.
        explode: false
        in: path
        name: resourceType
        required: true
        schema:
          maxLength: 128
          pattern: "[\\S]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTargetResourceTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /actions:
    get:
      description: Lists the available FIS actions.
      operationId: ListActions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of results to return with a single call.\
          \ To retrieve the remaining results, make another call with the returned\
          \ <code>nextToken</code> value."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: "[\\S]+"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /experiments:
    get:
      description: Lists your experiments.
      operationId: ListExperiments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of results to return with a single call.\
          \ To retrieve the remaining results, make another call with the returned\
          \ <code>nextToken</code> value."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: "[\\S]+"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExperimentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    post:
      description: Starts running an experiment from the specified experiment template.
      operationId: StartExperiment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartExperiment_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartExperimentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    delete:
      description: Removes the specified tags from the specified resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "[\\S]+"
          type: string
        style: simple
      - description: The tag keys to remove.
        explode: true
        in: query
        name: tagKeys
        required: false
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
      x-accepts:
      - application/json
    get:
      description: Lists the tags for the specified resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "[\\S]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
      x-accepts:
      - application/json
    post:
      description: Applies the specified tags to the specified resource.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          pattern: "[\\S]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /targetResourceTypes:
    get:
      description: Lists the target resource types.
      operationId: ListTargetResourceTypes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of results to return with a single call.\
          \ To retrieve the remaining results, make another call with the returned\
          \ <code>nextToken</code> value."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token for the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: "[\\S]+"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetResourceTypesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateExperimentTemplateResponse:
      example:
        experimentTemplate:
          stopConditions: ""
          creationTime: ""
          roleArn: ""
          description: ""
          logConfiguration:
            cloudWatchLogsConfiguration:
              logGroupArn: ""
            s3Configuration:
              bucketName: ""
              prefix: ""
            logSchemaVersion: ""
          id: ""
          targets: ""
          actions: ""
          lastUpdateTime: ""
          tags: ""
      properties:
        experimentTemplate:
          $ref: '#/components/schemas/CreateExperimentTemplateResponse_experimentTemplate'
      type: object
    CreateExperimentTemplateStopConditionInput:
      description: Specifies a stop condition for an experiment template.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/StopConditionSource'
          - description: The source for the stop condition. Specify <code>aws:cloudwatch:alarm</code>
              if the stop condition is defined by a CloudWatch alarm. Specify <code>none</code>
              if there is no stop condition.
        value:
          allOf:
          - $ref: '#/components/schemas/StopConditionValue'
          - description: The Amazon Resource Name (ARN) of the CloudWatch alarm. This
              is required if the source is a CloudWatch alarm.
      required:
      - source
      type: object
    CreateExperimentTemplateTargetInput:
      description: "<p>Specifies a target for an experiment. You must specify at least\
        \ one Amazon Resource Name (ARN) or at least one resource tag. You cannot\
        \ specify both ARNs and tags.</p> <p>For more information, see <a href=\"\
        https://docs.aws.amazon.com/fis/latest/userguide/targets.html\">Targets</a>\
        \ in the <i>Fault Injection Simulator User Guide</i>.</p>"
      properties:
        resourceType:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTypeId'
          - description: The resource type. The resource type must be supported for
              the specified action.
        resourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          - description: The Amazon Resource Names (ARNs) of the resources.
        resourceTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the target resources.
        filters:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateTargetFilterInputList'
          - description: The filters to apply to identify target resources using specific
              attributes.
        selectionMode:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateTargetSelectionMode'
          - description: "<p>Scopes the identified resources to a specific count of\
              \ the resources at random, or a percentage of the resources. All identified\
              \ resources are included in the target.</p> <ul> <li> <p>ALL - Run the\
              \ action on all identified targets. This is the default.</p> </li> <li>\
              \ <p>COUNT(n) - Run the action on the specified number of targets, chosen\
              \ from the identified targets at random. For example, COUNT(1) selects\
              \ one of the targets.</p> </li> <li> <p>PERCENT(n) - Run the action\
              \ on the specified percentage of targets, chosen from the identified\
              \ targets at random. For example, PERCENT(25) selects 25% of the targets.</p>\
              \ </li> </ul>"
        parameters:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateTargetParameterMap'
          - description: The resource type parameters.
      required:
      - resourceType
      - selectionMode
      type: object
    CreateExperimentTemplateActionInput:
      description: "<p>Specifies an action for an experiment template.</p> <p>For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/actions.html\"\
        >Actions</a> in the <i>Fault Injection Simulator User Guide</i>.</p>"
      properties:
        actionId:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          - description: "The ID of the action. The format of the action ID is: aws:<i>service-name</i>:<i>action-type</i>."
        description:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateActionDescription'
          - description: A description for the action.
        parameters:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateActionParameterMap'
          - description: "The parameters for the action, if applicable."
        targets:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateActionTargetMap'
          - description: The targets for the action.
        startAfter:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateActionStartAfterList'
          - description: The name of the action that must be completed before the
              current action starts. Omit this parameter to run the action at the
              start of the experiment.
      required:
      - actionId
      type: object
    TagValue:
      maxLength: 256
      pattern: "[\\s\\S]*"
      type: string
    ExperimentTemplateCloudWatchLogsLogConfigurationInput:
      description: Specifies the configuration for experiment logging to Amazon CloudWatch
        Logs.
      properties:
        logGroupArn:
          allOf:
          - $ref: '#/components/schemas/CloudWatchLogGroupArn'
          - description: The Amazon Resource Name (ARN) of the destination Amazon
              CloudWatch Logs log group.
      required:
      - logGroupArn
      type: object
    ExperimentTemplateS3LogConfigurationInput:
      description: Specifies the configuration for experiment logging to Amazon S3.
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: The name of the destination bucket.
        prefix:
          allOf:
          - $ref: '#/components/schemas/S3ObjectKey'
          - description: The bucket prefix.
      required:
      - bucketName
      type: object
    LogSchemaVersion:
      type: integer
    ValidationException: {}
    ConflictException: {}
    ResourceNotFoundException: {}
    ServiceQuotaExceededException: {}
    DeleteExperimentTemplateResponse:
      example:
        experimentTemplate:
          stopConditions: ""
          creationTime: ""
          roleArn: ""
          description: ""
          logConfiguration:
            cloudWatchLogsConfiguration:
              logGroupArn: ""
            s3Configuration:
              bucketName: ""
              prefix: ""
            logSchemaVersion: ""
          id: ""
          targets: ""
          actions: ""
          lastUpdateTime: ""
          tags: ""
      properties:
        experimentTemplate:
          $ref: '#/components/schemas/CreateExperimentTemplateResponse_experimentTemplate'
      type: object
    GetActionResponse:
      example:
        action:
          description: ""
          id: ""
          parameters: ""
          targets: ""
          tags: ""
      properties:
        action:
          $ref: '#/components/schemas/GetActionResponse_action'
      type: object
    GetExperimentResponse:
      example:
        experiment:
          stopConditions: ""
          creationTime: ""
          experimentTemplateId: ""
          roleArn: ""
          logConfiguration:
            cloudWatchLogsConfiguration:
              logGroupArn: ""
            s3Configuration:
              bucketName: ""
              prefix: ""
            logSchemaVersion: ""
          startTime: ""
          id: ""
          state:
            reason: ""
            status: ""
          endTime: ""
          targets: ""
          actions: ""
          tags: ""
      properties:
        experiment:
          $ref: '#/components/schemas/GetExperimentResponse_experiment'
      type: object
    GetExperimentTemplateResponse:
      example:
        experimentTemplate:
          stopConditions: ""
          creationTime: ""
          roleArn: ""
          description: ""
          logConfiguration:
            cloudWatchLogsConfiguration:
              logGroupArn: ""
            s3Configuration:
              bucketName: ""
              prefix: ""
            logSchemaVersion: ""
          id: ""
          targets: ""
          actions: ""
          lastUpdateTime: ""
          tags: ""
      properties:
        experimentTemplate:
          $ref: '#/components/schemas/CreateExperimentTemplateResponse_experimentTemplate'
      type: object
    GetTargetResourceTypeResponse:
      example:
        targetResourceType:
          description: ""
          parameters: ""
          resourceType: ""
      properties:
        targetResourceType:
          $ref: '#/components/schemas/GetTargetResourceTypeResponse_targetResourceType'
      type: object
    ListActionsResponse:
      example:
        nextToken: ""
        actions: ""
      properties:
        actions:
          allOf:
          - $ref: '#/components/schemas/ActionSummaryList'
          - description: The actions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. This
              value is <code>null</code> when there are no more results to return.
      type: object
    ListExperimentTemplatesResponse:
      example:
        nextToken: ""
        experimentTemplates: ""
      properties:
        experimentTemplates:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateSummaryList'
          - description: The experiment templates.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. This
              value is <code>null</code> when there are no more results to return.
      type: object
    ListExperimentsResponse:
      example:
        nextToken: ""
        experiments: ""
      properties:
        experiments:
          allOf:
          - $ref: '#/components/schemas/ExperimentSummaryList'
          - description: The experiments.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. This
              value is <code>null</code> when there are no more results to return.
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the resource.
      type: object
    ListTargetResourceTypesResponse:
      example:
        targetResourceTypes: ""
        nextToken: ""
      properties:
        targetResourceTypes:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTypeSummaryList'
          - description: The target resource types.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. This
              value is <code>null</code> when there are no more results to return.
      type: object
    StartExperimentResponse:
      example:
        experiment:
          stopConditions: ""
          creationTime: ""
          experimentTemplateId: ""
          roleArn: ""
          logConfiguration:
            cloudWatchLogsConfiguration:
              logGroupArn: ""
            s3Configuration:
              bucketName: ""
              prefix: ""
            logSchemaVersion: ""
          startTime: ""
          id: ""
          state:
            reason: ""
            status: ""
          endTime: ""
          targets: ""
          actions: ""
          tags: ""
      properties:
        experiment:
          $ref: '#/components/schemas/GetExperimentResponse_experiment'
      type: object
    StopExperimentResponse:
      example:
        experiment:
          stopConditions: ""
          creationTime: ""
          experimentTemplateId: ""
          roleArn: ""
          logConfiguration:
            cloudWatchLogsConfiguration:
              logGroupArn: ""
            s3Configuration:
              bucketName: ""
              prefix: ""
            logSchemaVersion: ""
          startTime: ""
          id: ""
          state:
            reason: ""
            status: ""
          endTime: ""
          targets: ""
          actions: ""
          tags: ""
      properties:
        experiment:
          $ref: '#/components/schemas/GetExperimentResponse_experiment'
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      pattern: "[\\s\\S]+"
      type: string
    UpdateExperimentTemplateResponse:
      example:
        experimentTemplate:
          stopConditions: ""
          creationTime: ""
          roleArn: ""
          description: ""
          logConfiguration:
            cloudWatchLogsConfiguration:
              logGroupArn: ""
            s3Configuration:
              bucketName: ""
              prefix: ""
            logSchemaVersion: ""
          id: ""
          targets: ""
          actions: ""
          lastUpdateTime: ""
          tags: ""
      properties:
        experimentTemplate:
          $ref: '#/components/schemas/CreateExperimentTemplateResponse_experimentTemplate'
      type: object
    UpdateExperimentTemplateStopConditionInput:
      description: Specifies a stop condition for an experiment. You can define a
        stop condition as a CloudWatch alarm.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/StopConditionSource'
          - description: The source for the stop condition. Specify <code>aws:cloudwatch:alarm</code>
              if the stop condition is defined by a CloudWatch alarm. Specify <code>none</code>
              if there is no stop condition.
        value:
          allOf:
          - $ref: '#/components/schemas/StopConditionValue'
          - description: The Amazon Resource Name (ARN) of the CloudWatch alarm.
      required:
      - source
      type: object
    UpdateExperimentTemplateTargetInput:
      description: Specifies a target for an experiment. You must specify at least
        one Amazon Resource Name (ARN) or at least one resource tag. You cannot specify
        both.
      properties:
        resourceType:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTypeId'
          - description: The resource type. The resource type must be supported for
              the specified action.
        resourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          - description: The Amazon Resource Names (ARNs) of the targets.
        resourceTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the target resources.
        filters:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateTargetFilterInputList'
          - description: The filters to apply to identify target resources using specific
              attributes.
        selectionMode:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateTargetSelectionMode'
          - description: Scopes the identified resources to a specific count or percentage.
        parameters:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateTargetParameterMap'
          - description: The resource type parameters.
      required:
      - resourceType
      - selectionMode
      type: object
    UpdateExperimentTemplateActionInputItem:
      description: Specifies an action for an experiment template.
      properties:
        actionId:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          - description: The ID of the action.
        description:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateActionDescription'
          - description: A description for the action.
        parameters:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateActionParameterMap'
          - description: "The parameters for the action, if applicable."
        targets:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateActionTargetMap'
          - description: The targets for the action.
        startAfter:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateActionStartAfterList'
          - description: The name of the action that must be completed before the
              current action starts. Omit this parameter to run the action at the
              start of the experiment.
      type: object
    ActionId:
      maxLength: 128
      pattern: "[\\S]+"
      type: string
    ActionDescription:
      maxLength: 512
      pattern: "[\\s\\S]+"
      type: string
    ActionParameterMap:
      additionalProperties:
        $ref: '#/components/schemas/ActionParameter'
      type: object
    ActionTargetMap:
      additionalProperties:
        $ref: '#/components/schemas/ActionTarget'
      type: object
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      type: object
    Action:
      description: "Describes an action. For more information, see <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/fis-actions-reference.html\"\
        >FIS actions</a> in the <i>Fault Injection Simulator User Guide</i>."
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          - description: The ID of the action.
        description:
          allOf:
          - $ref: '#/components/schemas/ActionDescription'
          - description: The description for the action.
        parameters:
          allOf:
          - $ref: '#/components/schemas/ActionParameterMap'
          - description: "The action parameters, if applicable."
        targets:
          allOf:
          - $ref: '#/components/schemas/ActionTargetMap'
          - description: The supported targets for the action.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the action.
      type: object
    ActionParameterDescription:
      maxLength: 512
      pattern: "[\\s\\S]+"
      type: string
    ActionParameterRequired:
      type: boolean
    ActionParameter:
      description: Describes a parameter for an action.
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/ActionParameterDescription'
          - description: The parameter description.
        required:
          allOf:
          - $ref: '#/components/schemas/ActionParameterRequired'
          - description: Indicates whether the parameter is required.
      type: object
    ActionParameterName:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ActionSummary:
      description: Provides a summary of an action.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          - description: The ID of the action.
        description:
          allOf:
          - $ref: '#/components/schemas/ActionDescription'
          - description: The description for the action.
        targets:
          allOf:
          - $ref: '#/components/schemas/ActionTargetMap'
          - description: The targets for the action.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the action.
      type: object
    ActionSummaryList:
      items:
        $ref: '#/components/schemas/ActionSummary'
      type: array
    TargetResourceTypeId:
      maxLength: 128
      pattern: "[\\S]+"
      type: string
    ActionTarget:
      description: Describes a target for an action.
      properties:
        resourceType:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTypeId'
          - description: The resource type of the target.
      type: object
    ActionTargetName:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ClientToken:
      maxLength: 1024
      minLength: 1
      pattern: "[\\S]+"
      type: string
    CloudWatchLogGroupArn:
      maxLength: 2048
      minLength: 20
      pattern: "[\\S]+"
      type: string
    ExperimentTemplateActionDescription:
      maxLength: 512
      pattern: "[\\s\\S]+"
      type: string
    ExperimentTemplateActionParameterMap:
      additionalProperties:
        $ref: '#/components/schemas/ExperimentTemplateActionParameter'
      type: object
    ExperimentTemplateActionTargetMap:
      additionalProperties:
        $ref: '#/components/schemas/ExperimentTemplateTargetName'
      type: object
    ExperimentTemplateActionStartAfterList:
      items:
        $ref: '#/components/schemas/ExperimentTemplateActionStartAfter'
      type: array
    CreateExperimentTemplateActionInputMap:
      additionalProperties:
        $ref: '#/components/schemas/CreateExperimentTemplateActionInput'
      type: object
    CreateExperimentTemplateLogConfigurationInput:
      description: Specifies the configuration for experiment logging.
      properties:
        cloudWatchLogsConfiguration:
          $ref: '#/components/schemas/CreateExperimentTemplate_request_logConfiguration_cloudWatchLogsConfiguration'
        s3Configuration:
          $ref: '#/components/schemas/CreateExperimentTemplate_request_logConfiguration_s3Configuration'
        logSchemaVersion:
          allOf:
          - $ref: '#/components/schemas/LogSchemaVersion'
          - description: The schema version.
      required:
      - logSchemaVersion
      type: object
    ExperimentTemplateDescription:
      maxLength: 512
      pattern: "[\\s\\S]+"
      type: string
    CreateExperimentTemplateStopConditionInputList:
      items:
        $ref: '#/components/schemas/CreateExperimentTemplateStopConditionInput'
      type: array
    CreateExperimentTemplateTargetInputMap:
      additionalProperties:
        $ref: '#/components/schemas/CreateExperimentTemplateTargetInput'
      type: object
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: "[\\S]+"
      type: string
    CreateExperimentTemplateRequest:
      example:
        stopConditions: ""
        clientToken: ""
        roleArn: ""
        description: ""
        logConfiguration:
          cloudWatchLogsConfiguration:
            logGroupArn: ""
          s3Configuration:
            bucketName: ""
            prefix: ""
          logSchemaVersion: ""
        targets: ""
        actions: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
        description:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateDescription'
          - description: A description for the experiment template.
        stopConditions:
          allOf:
          - $ref: '#/components/schemas/CreateExperimentTemplateStopConditionInputList'
          - description: The stop conditions.
        targets:
          allOf:
          - $ref: '#/components/schemas/CreateExperimentTemplateTargetInputMap'
          - description: The targets for the experiment.
        actions:
          allOf:
          - $ref: '#/components/schemas/CreateExperimentTemplateActionInputMap'
          - description: The actions for the experiment.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of an IAM role that grants
              the FIS service permission to perform service actions on your behalf.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags to apply to the experiment template.
        logConfiguration:
          $ref: '#/components/schemas/CreateExperimentTemplateRequest_logConfiguration'
      required:
      - actions
      - clientToken
      - description
      - roleArn
      - stopConditions
      title: CreateExperimentTemplateRequest
      type: object
    ExperimentTemplate:
      description: Describes an experiment template.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateId'
          - description: The ID of the experiment template.
        description:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateDescription'
          - description: The description for the experiment template.
        targets:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateTargetMap'
          - description: The targets for the experiment.
        actions:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateActionMap'
          - description: The actions for the experiment.
        stopConditions:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateStopConditionList'
          - description: The stop conditions for the experiment.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/CreationTime'
          - description: The time the experiment template was created.
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/LastUpdateTime'
          - description: The time the experiment template was last updated.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of an IAM role.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the experiment template.
        logConfiguration:
          $ref: '#/components/schemas/ExperimentTemplate_logConfiguration'
      type: object
    StopConditionSource:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    StopConditionValue:
      maxLength: 2048
      minLength: 20
      pattern: "[\\s\\S]+"
      type: string
    ResourceArnList:
      items:
        $ref: '#/components/schemas/ResourceArn'
      maxItems: 5
      type: array
    ExperimentTemplateTargetFilterInputList:
      items:
        $ref: '#/components/schemas/ExperimentTemplateTargetInputFilter'
      type: array
    ExperimentTemplateTargetSelectionMode:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ExperimentTemplateTargetParameterMap:
      additionalProperties:
        $ref: '#/components/schemas/ExperimentTemplateTargetParameterValue'
      type: object
    CreationTime:
      format: date-time
      type: string
    ExperimentTemplateId:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    DeleteExperimentTemplateRequest:
      properties: {}
      title: DeleteExperimentTemplateRequest
      type: object
    ExperimentId:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ExperimentState:
      description: Describes the state of an experiment.
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/ExperimentStatus'
          - description: The state of the experiment.
        reason:
          allOf:
          - $ref: '#/components/schemas/ExperimentStatusReason'
          - description: The reason for the state.
      type: object
    ExperimentTargetMap:
      additionalProperties:
        $ref: '#/components/schemas/ExperimentTarget'
      type: object
    ExperimentActionMap:
      additionalProperties:
        $ref: '#/components/schemas/ExperimentAction'
      type: object
    ExperimentStopConditionList:
      items:
        $ref: '#/components/schemas/ExperimentStopCondition'
      type: array
    ExperimentStartTime:
      format: date-time
      type: string
    ExperimentEndTime:
      format: date-time
      type: string
    ExperimentLogConfiguration:
      description: Describes the configuration for experiment logging.
      properties:
        cloudWatchLogsConfiguration:
          $ref: '#/components/schemas/ExperimentLogConfiguration_cloudWatchLogsConfiguration'
        s3Configuration:
          $ref: '#/components/schemas/ExperimentLogConfiguration_s3Configuration'
        logSchemaVersion:
          allOf:
          - $ref: '#/components/schemas/LogSchemaVersion'
          - description: The schema version.
      type: object
    Experiment:
      description: Describes an experiment.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ExperimentId'
          - description: The ID of the experiment.
        experimentTemplateId:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateId'
          - description: The ID of the experiment template.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of an IAM role that grants
              the FIS service permission to perform service actions on your behalf.
        state:
          $ref: '#/components/schemas/Experiment_state'
        targets:
          allOf:
          - $ref: '#/components/schemas/ExperimentTargetMap'
          - description: The targets for the experiment.
        actions:
          allOf:
          - $ref: '#/components/schemas/ExperimentActionMap'
          - description: The actions for the experiment.
        stopConditions:
          allOf:
          - $ref: '#/components/schemas/ExperimentStopConditionList'
          - description: The stop conditions for the experiment.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/CreationTime'
          - description: The time that the experiment was created.
        startTime:
          allOf:
          - $ref: '#/components/schemas/ExperimentStartTime'
          - description: The time that the experiment started.
        endTime:
          allOf:
          - $ref: '#/components/schemas/ExperimentEndTime'
          - description: The time that the experiment ended.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the experiment.
        logConfiguration:
          $ref: '#/components/schemas/Experiment_logConfiguration'
      type: object
    ExperimentActionDescription:
      maxLength: 512
      pattern: "[\\s\\S]+"
      type: string
    ExperimentActionParameterMap:
      additionalProperties:
        $ref: '#/components/schemas/ExperimentActionParameter'
      type: object
    ExperimentActionTargetMap:
      additionalProperties:
        $ref: '#/components/schemas/ExperimentTargetName'
      type: object
    ExperimentActionStartAfterList:
      items:
        $ref: '#/components/schemas/ExperimentActionStartAfter'
      type: array
    ExperimentActionState:
      description: Describes the state of an action.
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/ExperimentActionStatus'
          - description: The state of the action.
        reason:
          allOf:
          - $ref: '#/components/schemas/ExperimentActionStatusReason'
          - description: The reason for the state.
      type: object
    ExperimentActionStartTime:
      format: date-time
      type: string
    ExperimentActionEndTime:
      format: date-time
      type: string
    ExperimentAction:
      description: Describes the action for an experiment.
      properties:
        actionId:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          - description: The ID of the action.
        description:
          allOf:
          - $ref: '#/components/schemas/ExperimentActionDescription'
          - description: The description for the action.
        parameters:
          allOf:
          - $ref: '#/components/schemas/ExperimentActionParameterMap'
          - description: The parameters for the action.
        targets:
          allOf:
          - $ref: '#/components/schemas/ExperimentActionTargetMap'
          - description: The targets for the action.
        startAfter:
          allOf:
          - $ref: '#/components/schemas/ExperimentActionStartAfterList'
          - description: The name of the action that must be completed before this
              action starts.
        state:
          $ref: '#/components/schemas/ExperimentAction_state'
        startTime:
          allOf:
          - $ref: '#/components/schemas/ExperimentActionStartTime'
          - description: The time that the action started.
        endTime:
          allOf:
          - $ref: '#/components/schemas/ExperimentActionEndTime'
          - description: The time that the action ended.
      type: object
    ExperimentActionName:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ExperimentActionParameter:
      maxLength: 1024
      pattern: "[\\S]+"
      type: string
    ExperimentActionParameterName:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ExperimentActionStartAfter:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ExperimentActionStatus:
      enum:
      - pending
      - initiating
      - running
      - completed
      - cancelled
      - stopping
      - stopped
      - failed
      type: string
    ExperimentActionStatusReason:
      maxLength: 512
      pattern: "[\\s\\S]+"
      type: string
    ExperimentTargetName:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ExperimentActionTargetName:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ExperimentCloudWatchLogsLogConfiguration:
      description: Describes the configuration for experiment logging to Amazon CloudWatch
        Logs.
      properties:
        logGroupArn:
          allOf:
          - $ref: '#/components/schemas/CloudWatchLogGroupArn'
          - description: The Amazon Resource Name (ARN) of the destination Amazon
              CloudWatch Logs log group.
      type: object
    ExperimentS3LogConfiguration:
      description: Describes the configuration for experiment logging to Amazon S3.
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: The name of the destination bucket.
        prefix:
          allOf:
          - $ref: '#/components/schemas/S3ObjectKey'
          - description: The bucket prefix.
      type: object
    S3BucketName:
      maxLength: 63
      minLength: 3
      pattern: "[\\S]+"
      type: string
    S3ObjectKey:
      maxLength: 1024
      minLength: 1
      pattern: "[\\s\\S]+"
      type: string
    ExperimentStatus:
      enum:
      - pending
      - initiating
      - running
      - completed
      - stopping
      - stopped
      - failed
      type: string
    ExperimentStatusReason:
      maxLength: 512
      pattern: "[\\s\\S]+"
      type: string
    ExperimentStopCondition:
      description: Describes the stop condition for an experiment.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/StopConditionSource'
          - description: The source for the stop condition.
        value:
          allOf:
          - $ref: '#/components/schemas/StopConditionValue'
          - description: "The Amazon Resource Name (ARN) of the CloudWatch alarm,\
              \ if applicable."
      type: object
    ExperimentSummary:
      description: Provides a summary of an experiment.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ExperimentId'
          - description: The ID of the experiment.
        experimentTemplateId:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateId'
          - description: The ID of the experiment template.
        state:
          $ref: '#/components/schemas/Experiment_state'
        creationTime:
          allOf:
          - $ref: '#/components/schemas/CreationTime'
          - description: The time that the experiment was created.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the experiment.
      type: object
    ExperimentSummaryList:
      items:
        $ref: '#/components/schemas/ExperimentSummary'
      type: array
    ExperimentTargetFilterList:
      items:
        $ref: '#/components/schemas/ExperimentTargetFilter'
      type: array
    ExperimentTargetSelectionMode:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ExperimentTargetParameterMap:
      additionalProperties:
        $ref: '#/components/schemas/ExperimentTargetParameterValue'
      type: object
    ExperimentTarget:
      description: Describes a target for an experiment.
      properties:
        resourceType:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTypeId'
          - description: The resource type.
        resourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          - description: The Amazon Resource Names (ARNs) of the resources.
        resourceTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the target resources.
        filters:
          allOf:
          - $ref: '#/components/schemas/ExperimentTargetFilterList'
          - description: The filters to apply to identify target resources using specific
              attributes.
        selectionMode:
          allOf:
          - $ref: '#/components/schemas/ExperimentTargetSelectionMode'
          - description: Scopes the identified resources to a specific count or percentage.
        parameters:
          allOf:
          - $ref: '#/components/schemas/ExperimentTargetParameterMap'
          - description: The resource type parameters.
      type: object
    ExperimentTargetFilterPath:
      maxLength: 256
      pattern: "[\\S]+"
      type: string
    ExperimentTargetFilterValues:
      items:
        $ref: '#/components/schemas/ExperimentTargetFilterValue'
      type: array
    ExperimentTargetFilter:
      description: Describes a filter used for the target resources in an experiment.
      properties:
        path:
          allOf:
          - $ref: '#/components/schemas/ExperimentTargetFilterPath'
          - description: The attribute path for the filter.
        values:
          allOf:
          - $ref: '#/components/schemas/ExperimentTargetFilterValues'
          - description: The attribute values for the filter.
      type: object
    ExperimentTargetFilterValue:
      maxLength: 128
      pattern: "[\\S]+"
      type: string
    ExperimentTargetParameterValue:
      maxLength: 1024
      minLength: 1
      type: string
    ExperimentTargetParameterName:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ExperimentTemplateTargetMap:
      additionalProperties:
        $ref: '#/components/schemas/ExperimentTemplateTarget'
      type: object
    ExperimentTemplateActionMap:
      additionalProperties:
        $ref: '#/components/schemas/ExperimentTemplateAction'
      type: object
    ExperimentTemplateStopConditionList:
      items:
        $ref: '#/components/schemas/ExperimentTemplateStopCondition'
      type: array
    LastUpdateTime:
      format: date-time
      type: string
    ExperimentTemplateLogConfiguration:
      description: Describes the configuration for experiment logging.
      properties:
        cloudWatchLogsConfiguration:
          $ref: '#/components/schemas/ExperimentTemplateLogConfiguration_cloudWatchLogsConfiguration'
        s3Configuration:
          $ref: '#/components/schemas/ExperimentTemplateLogConfiguration_s3Configuration'
        logSchemaVersion:
          allOf:
          - $ref: '#/components/schemas/LogSchemaVersion'
          - description: The schema version.
      type: object
    ExperimentTemplateAction:
      description: Describes an action for an experiment template.
      properties:
        actionId:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          - description: The ID of the action.
        description:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateActionDescription'
          - description: A description for the action.
        parameters:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateActionParameterMap'
          - description: The parameters for the action.
        targets:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateActionTargetMap'
          - description: The targets for the action.
        startAfter:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateActionStartAfterList'
          - description: The name of the action that must be completed before the
              current action starts.
      type: object
    ExperimentTemplateActionName:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ExperimentTemplateActionParameter:
      maxLength: 1024
      pattern: "[\\S]+"
      type: string
    ExperimentTemplateActionParameterName:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ExperimentTemplateActionStartAfter:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ExperimentTemplateTargetName:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ExperimentTemplateActionTargetName:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    ExperimentTemplateCloudWatchLogsLogConfiguration:
      description: Describes the configuration for experiment logging to Amazon CloudWatch
        Logs.
      properties:
        logGroupArn:
          allOf:
          - $ref: '#/components/schemas/CloudWatchLogGroupArn'
          - description: The Amazon Resource Name (ARN) of the destination Amazon
              CloudWatch Logs log group.
      type: object
    ExperimentTemplateS3LogConfiguration:
      description: Describes the configuration for experiment logging to Amazon S3.
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: The name of the destination bucket.
        prefix:
          allOf:
          - $ref: '#/components/schemas/S3ObjectKey'
          - description: The bucket prefix.
      type: object
    ExperimentTemplateStopCondition:
      description: Describes a stop condition for an experiment template.
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/StopConditionSource'
          - description: The source for the stop condition.
        value:
          allOf:
          - $ref: '#/components/schemas/StopConditionValue'
          - description: "The Amazon Resource Name (ARN) of the CloudWatch alarm,\
              \ if applicable."
      type: object
    ExperimentTemplateSummary:
      description: Provides a summary of an experiment template.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateId'
          - description: The ID of the experiment template.
        description:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateDescription'
          - description: The description of the experiment template.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/CreationTime'
          - description: The time that the experiment template was created.
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/LastUpdateTime'
          - description: The time that the experiment template was last updated.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the experiment template.
      type: object
    ExperimentTemplateSummaryList:
      items:
        $ref: '#/components/schemas/ExperimentTemplateSummary'
      type: array
    ExperimentTemplateTargetFilterList:
      items:
        $ref: '#/components/schemas/ExperimentTemplateTargetFilter'
      type: array
    ExperimentTemplateTarget:
      description: Describes a target for an experiment template.
      properties:
        resourceType:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTypeId'
          - description: The resource type.
        resourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          - description: The Amazon Resource Names (ARNs) of the targets.
        resourceTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the target resources.
        filters:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateTargetFilterList'
          - description: The filters to apply to identify target resources using specific
              attributes.
        selectionMode:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateTargetSelectionMode'
          - description: Scopes the identified resources to a specific count or percentage.
        parameters:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateTargetParameterMap'
          - description: The resource type parameters.
      type: object
    ExperimentTemplateTargetFilterPath:
      maxLength: 256
      pattern: "[\\S]+"
      type: string
    ExperimentTemplateTargetFilterValues:
      items:
        $ref: '#/components/schemas/ExperimentTemplateTargetFilterValue'
      type: array
    ExperimentTemplateTargetFilter:
      description: Describes a filter used for the target resources in an experiment
        template.
      properties:
        path:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateTargetFilterPath'
          - description: The attribute path for the filter.
        values:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateTargetFilterValues'
          - description: The attribute values for the filter.
      type: object
    ExperimentTemplateTargetInputFilter:
      description: "<p>Specifies a filter used for the target resource input in an\
        \ experiment template.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/targets.html#target-filters\"\
        >Resource filters</a> in the <i>Fault Injection Simulator User Guide</i>.</p>"
      properties:
        path:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateTargetFilterPath'
          - description: The attribute path for the filter.
        values:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateTargetFilterValues'
          - description: The attribute values for the filter.
      required:
      - path
      - values
      type: object
    ExperimentTemplateTargetFilterValue:
      maxLength: 128
      pattern: "[\\S]+"
      type: string
    ExperimentTemplateTargetParameterValue:
      maxLength: 1024
      minLength: 1
      pattern: "^[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+$"
      type: string
    ExperimentTemplateTargetParameterName:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    GetActionRequest:
      properties: {}
      title: GetActionRequest
      type: object
    GetExperimentRequest:
      properties: {}
      title: GetExperimentRequest
      type: object
    GetExperimentTemplateRequest:
      properties: {}
      title: GetExperimentTemplateRequest
      type: object
    GetTargetResourceTypeRequest:
      properties: {}
      title: GetTargetResourceTypeRequest
      type: object
    TargetResourceType:
      description: Describes a resource type.
      properties:
        resourceType:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTypeId'
          - description: The resource type.
        description:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTypeDescription'
          - description: A description of the resource type.
        parameters:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTypeParameterMap'
          - description: The parameters for the resource type.
      type: object
    ListActionsMaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      maxLength: 1024
      minLength: 1
      pattern: "[\\S]+"
      type: string
    ListActionsRequest:
      properties: {}
      title: ListActionsRequest
      type: object
    ListExperimentTemplatesMaxResults:
      maximum: 100
      minimum: 1
      type: integer
    ListExperimentTemplatesRequest:
      properties: {}
      title: ListExperimentTemplatesRequest
      type: object
    ListExperimentsMaxResults:
      maximum: 100
      minimum: 1
      type: integer
    ListExperimentsRequest:
      properties: {}
      title: ListExperimentsRequest
      type: object
    ResourceArn:
      maxLength: 2048
      minLength: 20
      pattern: "[\\S]+"
      type: string
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    ListTargetResourceTypesMaxResults:
      maximum: 100
      minimum: 1
      type: integer
    ListTargetResourceTypesRequest:
      properties: {}
      title: ListTargetResourceTypesRequest
      type: object
    TargetResourceTypeSummaryList:
      items:
        $ref: '#/components/schemas/TargetResourceTypeSummary'
      type: array
    StartExperimentRequest:
      example:
        clientToken: ""
        experimentTemplateId: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier that you provide to ensure\
              \ the idempotency of the request."
        experimentTemplateId:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateId'
          - description: The ID of the experiment template.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags to apply to the experiment.
      required:
      - clientToken
      - experimentTemplateId
      title: StartExperimentRequest
      type: object
    StopExperimentRequest:
      properties: {}
      title: StopExperimentRequest
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags for the resource.
      required:
      - tags
      title: TagResourceRequest
      type: object
    TargetResourceTypeDescription:
      maxLength: 512
      pattern: "[\\s\\S]+"
      type: string
    TargetResourceTypeParameterMap:
      additionalProperties:
        $ref: '#/components/schemas/TargetResourceTypeParameter'
      type: object
    TargetResourceTypeParameterDescription:
      maxLength: 512
      pattern: "[\\s\\S]+"
      type: string
    TargetResourceTypeParameterRequired:
      type: boolean
    TargetResourceTypeParameter:
      description: Describes the parameters for a resource type. Use parameters to
        determine which tasks are identified during target resolution.
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTypeParameterDescription'
          - description: A description of the parameter.
        required:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTypeParameterRequired'
          - description: Indicates whether the parameter is required.
      type: object
    TargetResourceTypeParameterName:
      maxLength: 64
      pattern: "[\\S]+"
      type: string
    TargetResourceTypeSummary:
      description: Describes a resource type.
      properties:
        resourceType:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTypeId'
          - description: The resource type.
        description:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTypeDescription'
          - description: A description of the resource type.
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateExperimentTemplateActionInputMap:
      additionalProperties:
        $ref: '#/components/schemas/UpdateExperimentTemplateActionInputItem'
      type: object
    UpdateExperimentTemplateLogConfigurationInput:
      description: Specifies the configuration for experiment logging.
      properties:
        cloudWatchLogsConfiguration:
          $ref: '#/components/schemas/CreateExperimentTemplate_request_logConfiguration_cloudWatchLogsConfiguration'
        s3Configuration:
          $ref: '#/components/schemas/CreateExperimentTemplate_request_logConfiguration_s3Configuration'
        logSchemaVersion:
          allOf:
          - $ref: '#/components/schemas/LogSchemaVersion'
          - description: The schema version.
      type: object
    UpdateExperimentTemplateStopConditionInputList:
      items:
        $ref: '#/components/schemas/UpdateExperimentTemplateStopConditionInput'
      type: array
    UpdateExperimentTemplateTargetInputMap:
      additionalProperties:
        $ref: '#/components/schemas/UpdateExperimentTemplateTargetInput'
      type: object
    UpdateExperimentTemplateRequest:
      example:
        stopConditions: ""
        roleArn: ""
        description: ""
        logConfiguration:
          cloudWatchLogsConfiguration:
            logGroupArn: ""
          s3Configuration:
            bucketName: ""
            prefix: ""
          logSchemaVersion: ""
        targets: ""
        actions: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/ExperimentTemplateDescription'
          - description: A description for the template.
        stopConditions:
          allOf:
          - $ref: '#/components/schemas/UpdateExperimentTemplateStopConditionInputList'
          - description: The stop conditions for the experiment.
        targets:
          allOf:
          - $ref: '#/components/schemas/UpdateExperimentTemplateTargetInputMap'
          - description: The targets for the experiment.
        actions:
          allOf:
          - $ref: '#/components/schemas/UpdateExperimentTemplateActionInputMap'
          - description: The actions for the experiment.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of an IAM role that grants
              the FIS service permission to perform service actions on your behalf.
        logConfiguration:
          $ref: '#/components/schemas/UpdateExperimentTemplateRequest_logConfiguration'
      title: UpdateExperimentTemplateRequest
      type: object
    CreateExperimentTemplate_request_logConfiguration_cloudWatchLogsConfiguration:
      allOf:
      - $ref: '#/components/schemas/ExperimentTemplateCloudWatchLogsLogConfigurationInput'
      - description: The configuration for experiment logging to Amazon CloudWatch
          Logs.
      example:
        logGroupArn: ""
    CreateExperimentTemplate_request_logConfiguration_s3Configuration:
      allOf:
      - $ref: '#/components/schemas/ExperimentTemplateS3LogConfigurationInput'
      - description: The configuration for experiment logging to Amazon S3.
      example:
        bucketName: ""
        prefix: ""
    CreateExperimentTemplate_request_logConfiguration:
      description: Specifies the configuration for experiment logging.
      properties:
        cloudWatchLogsConfiguration:
          $ref: '#/components/schemas/CreateExperimentTemplate_request_logConfiguration_cloudWatchLogsConfiguration'
        s3Configuration:
          $ref: '#/components/schemas/CreateExperimentTemplate_request_logConfiguration_s3Configuration'
        logSchemaVersion:
          allOf:
          - $ref: '#/components/schemas/LogSchemaVersion'
          - description: The schema version.
      type: object
    CreateExperimentTemplate_request:
      properties:
        clientToken:
          description: "Unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request."
          maxLength: 1024
          minLength: 1
          pattern: "[\\S]+"
          type: string
        description:
          description: A description for the experiment template.
          maxLength: 512
          pattern: "[\\s\\S]+"
          type: string
        stopConditions:
          description: The stop conditions.
          items:
            $ref: '#/components/schemas/CreateExperimentTemplateStopConditionInput'
          type: array
        targets:
          additionalProperties:
            $ref: '#/components/schemas/CreateExperimentTemplateTargetInput'
          description: The targets for the experiment.
          type: object
        actions:
          additionalProperties:
            $ref: '#/components/schemas/CreateExperimentTemplateActionInput'
          description: The actions for the experiment.
          type: object
        roleArn:
          description: The Amazon Resource Name (ARN) of an IAM role that grants the
            FIS service permission to perform service actions on your behalf.
          maxLength: 2048
          minLength: 20
          pattern: "[\\S]+"
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags to apply to the experiment template.
          maxProperties: 50
          type: object
        logConfiguration:
          $ref: '#/components/schemas/CreateExperimentTemplate_request_logConfiguration'
      required:
      - actions
      - clientToken
      - description
      - roleArn
      - stopConditions
      type: object
    UpdateExperimentTemplate_request:
      properties:
        description:
          description: A description for the template.
          maxLength: 512
          pattern: "[\\s\\S]+"
          type: string
        stopConditions:
          description: The stop conditions for the experiment.
          items:
            $ref: '#/components/schemas/UpdateExperimentTemplateStopConditionInput'
          type: array
        targets:
          additionalProperties:
            $ref: '#/components/schemas/UpdateExperimentTemplateTargetInput'
          description: The targets for the experiment.
          type: object
        actions:
          additionalProperties:
            $ref: '#/components/schemas/UpdateExperimentTemplateActionInputItem'
          description: The actions for the experiment.
          type: object
        roleArn:
          description: The Amazon Resource Name (ARN) of an IAM role that grants the
            FIS service permission to perform service actions on your behalf.
          maxLength: 2048
          minLength: 20
          pattern: "[\\S]+"
          type: string
        logConfiguration:
          $ref: '#/components/schemas/CreateExperimentTemplate_request_logConfiguration'
      type: object
    StartExperiment_request:
      properties:
        clientToken:
          description: "Unique, case-sensitive identifier that you provide to ensure\
            \ the idempotency of the request."
          maxLength: 1024
          minLength: 1
          pattern: "[\\S]+"
          type: string
        experimentTemplateId:
          description: The ID of the experiment template.
          maxLength: 64
          pattern: "[\\S]+"
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags to apply to the experiment.
          maxProperties: 50
          type: object
      required:
      - clientToken
      - experimentTemplateId
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags for the resource.
          maxProperties: 50
          type: object
      required:
      - tags
      type: object
    CreateExperimentTemplateResponse_experimentTemplate:
      allOf:
      - $ref: '#/components/schemas/ExperimentTemplate'
      - description: Information about the experiment template.
      example:
        stopConditions: ""
        creationTime: ""
        roleArn: ""
        description: ""
        logConfiguration:
          cloudWatchLogsConfiguration:
            logGroupArn: ""
          s3Configuration:
            bucketName: ""
            prefix: ""
          logSchemaVersion: ""
        id: ""
        targets: ""
        actions: ""
        lastUpdateTime: ""
        tags: ""
    GetActionResponse_action:
      allOf:
      - $ref: '#/components/schemas/Action'
      - description: Information about the action.
      example:
        description: ""
        id: ""
        parameters: ""
        targets: ""
        tags: ""
    GetExperimentResponse_experiment:
      allOf:
      - $ref: '#/components/schemas/Experiment'
      - description: Information about the experiment.
      example:
        stopConditions: ""
        creationTime: ""
        experimentTemplateId: ""
        roleArn: ""
        logConfiguration:
          cloudWatchLogsConfiguration:
            logGroupArn: ""
          s3Configuration:
            bucketName: ""
            prefix: ""
          logSchemaVersion: ""
        startTime: ""
        id: ""
        state:
          reason: ""
          status: ""
        endTime: ""
        targets: ""
        actions: ""
        tags: ""
    GetTargetResourceTypeResponse_targetResourceType:
      allOf:
      - $ref: '#/components/schemas/TargetResourceType'
      - description: Information about the resource type.
      example:
        description: ""
        parameters: ""
        resourceType: ""
    CreateExperimentTemplateRequest_logConfiguration:
      allOf:
      - $ref: '#/components/schemas/CreateExperimentTemplateLogConfigurationInput'
      - description: The configuration for experiment logging.
      example:
        cloudWatchLogsConfiguration:
          logGroupArn: ""
        s3Configuration:
          bucketName: ""
          prefix: ""
        logSchemaVersion: ""
    ExperimentTemplate_logConfiguration:
      allOf:
      - $ref: '#/components/schemas/ExperimentTemplateLogConfiguration'
      - description: The configuration for experiment logging.
      example:
        cloudWatchLogsConfiguration:
          logGroupArn: ""
        s3Configuration:
          bucketName: ""
          prefix: ""
        logSchemaVersion: ""
    ExperimentLogConfiguration_cloudWatchLogsConfiguration:
      allOf:
      - $ref: '#/components/schemas/ExperimentCloudWatchLogsLogConfiguration'
      - description: The configuration for experiment logging to Amazon CloudWatch
          Logs.
      example:
        logGroupArn: ""
    ExperimentLogConfiguration_s3Configuration:
      allOf:
      - $ref: '#/components/schemas/ExperimentS3LogConfiguration'
      - description: The configuration for experiment logging to Amazon S3.
      example:
        bucketName: ""
        prefix: ""
    Experiment_state:
      allOf:
      - $ref: '#/components/schemas/ExperimentState'
      - description: The state of the experiment.
      example:
        reason: ""
        status: ""
    Experiment_logConfiguration:
      allOf:
      - $ref: '#/components/schemas/ExperimentLogConfiguration'
      - description: The configuration for experiment logging.
      example:
        cloudWatchLogsConfiguration:
          logGroupArn: ""
        s3Configuration:
          bucketName: ""
          prefix: ""
        logSchemaVersion: ""
    ExperimentAction_state:
      allOf:
      - $ref: '#/components/schemas/ExperimentActionState'
      - description: The state of the action.
    ExperimentTemplateLogConfiguration_cloudWatchLogsConfiguration:
      allOf:
      - $ref: '#/components/schemas/ExperimentTemplateCloudWatchLogsLogConfiguration'
      - description: The configuration for experiment logging to Amazon CloudWatch
          Logs.
      example:
        logGroupArn: ""
    ExperimentTemplateLogConfiguration_s3Configuration:
      allOf:
      - $ref: '#/components/schemas/ExperimentTemplateS3LogConfiguration'
      - description: The configuration for experiment logging to Amazon S3.
      example:
        bucketName: ""
        prefix: ""
    UpdateExperimentTemplateRequest_logConfiguration:
      allOf:
      - $ref: '#/components/schemas/UpdateExperimentTemplateLogConfigurationInput'
      - description: The configuration for experiment logging.
      example:
        cloudWatchLogsConfiguration:
          logGroupArn: ""
        s3Configuration:
          bucketName: ""
          prefix: ""
        logSchemaVersion: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4

