/*
 * AWS Fault Injection Simulator
 * Fault Injection Simulator is a managed service that enables you to perform fault injection experiments on your Amazon Web Services workloads. For more information, see the <a href=\"https://docs.aws.amazon.com/fis/latest/userguide/\">Fault Injection Simulator User Guide</a>.
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateExperimentTemplateRequest;
import org.openapitools.client.model.CreateExperimentTemplateResponse;
import org.openapitools.client.model.DeleteExperimentTemplateResponse;
import org.openapitools.client.model.GetActionResponse;
import org.openapitools.client.model.GetExperimentResponse;
import org.openapitools.client.model.GetExperimentTemplateResponse;
import org.openapitools.client.model.GetTargetResourceTypeResponse;
import org.openapitools.client.model.ListActionsResponse;
import org.openapitools.client.model.ListExperimentTemplatesResponse;
import org.openapitools.client.model.ListExperimentsResponse;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.ListTargetResourceTypesResponse;
import org.openapitools.client.model.StartExperimentRequest;
import org.openapitools.client.model.StartExperimentResponse;
import org.openapitools.client.model.StopExperimentResponse;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UpdateExperimentTemplateRequest;
import org.openapitools.client.model.UpdateExperimentTemplateResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * &lt;p&gt;Creates an experiment template. &lt;/p&gt; &lt;p&gt;An experiment template includes the following components:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Targets&lt;/b&gt;: A target can be a specific resource in your Amazon Web Services environment, or one or more resources that match criteria that you specify, for example, resources that have specific tags.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Actions&lt;/b&gt;: The actions to carry out on the target. You can specify multiple actions, the duration of each action, and when to start each action during an experiment.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Stop conditions&lt;/b&gt;: If a stop condition is triggered while an experiment is running, the experiment is automatically stopped. You can define a stop condition as a CloudWatch alarm.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/fis/latest/userguide/experiment-templates.html\&quot;&gt;Experiment templates&lt;/a&gt; in the &lt;i&gt;Fault Injection Simulator User Guide&lt;/i&gt;.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createExperimentTemplateTest() throws ApiException {
        CreateExperimentTemplateRequest createExperimentTemplateRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateExperimentTemplateResponse response = api.createExperimentTemplate(createExperimentTemplateRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes the specified experiment template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteExperimentTemplateTest() throws ApiException {
        String id = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteExperimentTemplateResponse response = api.deleteExperimentTemplate(id, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets information about the specified FIS action.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getActionTest() throws ApiException {
        String id = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetActionResponse response = api.getAction(id, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets information about the specified experiment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExperimentTest() throws ApiException {
        String id = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetExperimentResponse response = api.getExperiment(id, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets information about the specified experiment template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExperimentTemplateTest() throws ApiException {
        String id = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetExperimentTemplateResponse response = api.getExperimentTemplate(id, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets information about the specified resource type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTargetResourceTypeTest() throws ApiException {
        String resourceType = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetTargetResourceTypeResponse response = api.getTargetResourceType(resourceType, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists the available FIS actions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listActionsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        ListActionsResponse response = api.listActions(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists your experiment templates.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listExperimentTemplatesTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        ListExperimentTemplatesResponse response = api.listExperimentTemplates(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists your experiments.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listExperimentsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        ListExperimentsResponse response = api.listExperiments(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists the tags for the specified resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        String resourceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(resourceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists the target resource types.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTargetResourceTypesTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        ListTargetResourceTypesResponse response = api.listTargetResourceTypes(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Starts running an experiment from the specified experiment template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startExperimentTest() throws ApiException {
        StartExperimentRequest startExperimentRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StartExperimentResponse response = api.startExperiment(startExperimentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Stops the specified experiment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void stopExperimentTest() throws ApiException {
        String id = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StopExperimentResponse response = api.stopExperiment(id, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Applies the specified tags to the specified resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String resourceArn = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.tagResource(resourceArn, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes the specified tags from the specified resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String resourceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<String> tagKeys = null;
        Object response = api.untagResource(resourceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, tagKeys);
        // TODO: test validations
    }

    /**
     * Updates the specified experiment template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExperimentTemplateTest() throws ApiException {
        String id = null;
        UpdateExperimentTemplateRequest updateExperimentTemplateRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateExperimentTemplateResponse response = api.updateExperimentTemplate(id, updateExperimentTemplateRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
