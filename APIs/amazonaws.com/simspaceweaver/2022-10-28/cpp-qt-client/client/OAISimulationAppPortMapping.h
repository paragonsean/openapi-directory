/**
 * AWS SimSpace Weaver
 * <p>SimSpace Weaver (SimSpace Weaver) is a managed service that you can use to build and operate large-scale spatial simulations in the Amazon Web Services Cloud. For example, you can create a digital twin of a city, crowd simulations with millions of people and objects, and massively multiplayer games with hundreds of thousands of connected players. For more information about SimSpace Weaver, see the <i> <a href=\"https://docs.aws.amazon.com/simspaceweaver/latest/userguide/\">SimSpace Weaver User Guide</a> </i>.</p> <p>This API reference describes the API operations and data types that you can use to communicate directly with SimSpace Weaver.</p> <p>SimSpace Weaver also provides the SimSpace Weaver app SDK, which you use for app development. The SimSpace Weaver app SDK API reference is included in the SimSpace Weaver app SDK documentation. This documentation is part of the SimSpace Weaver app SDK distributable package.</p>
 *
 * The version of the OpenAPI document: 2022-10-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISimulationAppPortMapping.h
 *
 * A collection of TCP/UDP ports for a custom or service app.
 */

#ifndef OAISimulationAppPortMapping_H
#define OAISimulationAppPortMapping_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISimulationAppPortMapping : public OAIObject {
public:
    OAISimulationAppPortMapping();
    OAISimulationAppPortMapping(QString json);
    ~OAISimulationAppPortMapping() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActual() const;
    void setActual(const qint32 &actual);
    bool is_actual_Set() const;
    bool is_actual_Valid() const;

    qint32 getDeclared() const;
    void setDeclared(const qint32 &declared);
    bool is_declared_Set() const;
    bool is_declared_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_actual;
    bool m_actual_isSet;
    bool m_actual_isValid;

    qint32 m_declared;
    bool m_declared_isSet;
    bool m_declared_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISimulationAppPortMapping)

#endif // OAISimulationAppPortMapping_H
