/**
 * AWS SimSpace Weaver
 * <p>SimSpace Weaver (SimSpace Weaver) is a managed service that you can use to build and operate large-scale spatial simulations in the Amazon Web Services Cloud. For example, you can create a digital twin of a city, crowd simulations with millions of people and objects, and massively multiplayer games with hundreds of thousands of connected players. For more information about SimSpace Weaver, see the <i> <a href=\"https://docs.aws.amazon.com/simspaceweaver/latest/userguide/\">SimSpace Weaver User Guide</a> </i>.</p> <p>This API reference describes the API operations and data types that you can use to communicate directly with SimSpace Weaver.</p> <p>SimSpace Weaver also provides the SimSpace Weaver app SDK, which you use for app development. The SimSpace Weaver app SDK API reference is included in the SimSpace Weaver app SDK documentation. This documentation is part of the SimSpace Weaver app SDK distributable package.</p>
 *
 * The version of the OpenAPI document: 2022-10-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartAppInput.h
 *
 * 
 */

#ifndef OAIStartAppInput_H
#define OAIStartAppInput_H

#include <QJsonObject>

#include "OAILaunchOverrides.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILaunchOverrides;

class OAIStartAppInput : public OAIObject {
public:
    OAIStartAppInput();
    OAIStartAppInput(QString json);
    ~OAIStartAppInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    OAILaunchOverrides getLaunchOverrides() const;
    void setLaunchOverrides(const OAILaunchOverrides &launch_overrides);
    bool is_launch_overrides_Set() const;
    bool is_launch_overrides_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSimulation() const;
    void setSimulation(const QString &simulation);
    bool is_simulation_Set() const;
    bool is_simulation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    OAILaunchOverrides m_launch_overrides;
    bool m_launch_overrides_isSet;
    bool m_launch_overrides_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_simulation;
    bool m_simulation_isSet;
    bool m_simulation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartAppInput)

#endif // OAIStartAppInput_H
