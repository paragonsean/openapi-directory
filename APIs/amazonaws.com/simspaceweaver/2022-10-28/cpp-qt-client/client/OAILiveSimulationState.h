/**
 * AWS SimSpace Weaver
 * <p>SimSpace Weaver (SimSpace Weaver) is a managed service that you can use to build and operate large-scale spatial simulations in the Amazon Web Services Cloud. For example, you can create a digital twin of a city, crowd simulations with millions of people and objects, and massively multiplayer games with hundreds of thousands of connected players. For more information about SimSpace Weaver, see the <i> <a href=\"https://docs.aws.amazon.com/simspaceweaver/latest/userguide/\">SimSpace Weaver User Guide</a> </i>.</p> <p>This API reference describes the API operations and data types that you can use to communicate directly with SimSpace Weaver.</p> <p>SimSpace Weaver also provides the SimSpace Weaver app SDK, which you use for app development. The SimSpace Weaver app SDK API reference is included in the SimSpace Weaver app SDK documentation. This documentation is part of the SimSpace Weaver app SDK distributable package.</p>
 *
 * The version of the OpenAPI document: 2022-10-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILiveSimulationState.h
 *
 * A collection of additional state information, such as domain and clock configuration.
 */

#ifndef OAILiveSimulationState_H
#define OAILiveSimulationState_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILiveSimulationState : public OAIObject {
public:
    OAILiveSimulationState();
    OAILiveSimulationState(QString json);
    ~OAILiveSimulationState() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getClocks() const;
    void setClocks(const QList &clocks);
    bool is_clocks_Set() const;
    bool is_clocks_Valid() const;

    QList getDomains() const;
    void setDomains(const QList &domains);
    bool is_domains_Set() const;
    bool is_domains_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_clocks;
    bool m_clocks_isSet;
    bool m_clocks_isValid;

    QList m_domains;
    bool m_domains_isSet;
    bool m_domains_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILiveSimulationState)

#endif // OAILiveSimulationState_H
