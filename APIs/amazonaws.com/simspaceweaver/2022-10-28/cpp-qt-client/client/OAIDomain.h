/**
 * AWS SimSpace Weaver
 * <p>SimSpace Weaver (SimSpace Weaver) is a managed service that you can use to build and operate large-scale spatial simulations in the Amazon Web Services Cloud. For example, you can create a digital twin of a city, crowd simulations with millions of people and objects, and massively multiplayer games with hundreds of thousands of connected players. For more information about SimSpace Weaver, see the <i> <a href=\"https://docs.aws.amazon.com/simspaceweaver/latest/userguide/\">SimSpace Weaver User Guide</a> </i>.</p> <p>This API reference describes the API operations and data types that you can use to communicate directly with SimSpace Weaver.</p> <p>SimSpace Weaver also provides the SimSpace Weaver app SDK, which you use for app development. The SimSpace Weaver app SDK API reference is included in the SimSpace Weaver app SDK documentation. This documentation is part of the SimSpace Weaver app SDK distributable package.</p>
 *
 * The version of the OpenAPI document: 2022-10-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDomain.h
 *
 * &lt;p&gt;A collection of app instances that run the same executable app code and have the same launch options and commands.&lt;/p&gt; &lt;p&gt;For more information about domains, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/simspaceweaver/latest/userguide/what-is_key-concepts.html#what-is_key-concepts_domains\&quot;&gt;Key concepts: Domains&lt;/a&gt; in the &lt;i&gt;SimSpace Weaver User Guide&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAIDomain_H
#define OAIDomain_H

#include <QJsonObject>

#include "OAILifecycleManagementStrategy.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDomain : public OAIObject {
public:
    OAIDomain();
    OAIDomain(QString json);
    ~OAIDomain() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILifecycleManagementStrategy getLifecycle() const;
    void setLifecycle(const OAILifecycleManagementStrategy &lifecycle);
    bool is_lifecycle_Set() const;
    bool is_lifecycle_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILifecycleManagementStrategy m_lifecycle;
    bool m_lifecycle_isSet;
    bool m_lifecycle_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDomain)

#endif // OAIDomain_H
