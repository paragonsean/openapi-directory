/**
 * AWS SimSpace Weaver
 * <p>SimSpace Weaver (SimSpace Weaver) is a managed service that you can use to build and operate large-scale spatial simulations in the Amazon Web Services Cloud. For example, you can create a digital twin of a city, crowd simulations with millions of people and objects, and massively multiplayer games with hundreds of thousands of connected players. For more information about SimSpace Weaver, see the <i> <a href=\"https://docs.aws.amazon.com/simspaceweaver/latest/userguide/\">SimSpace Weaver User Guide</a> </i>.</p> <p>This API reference describes the API operations and data types that you can use to communicate directly with SimSpace Weaver.</p> <p>SimSpace Weaver also provides the SimSpace Weaver app SDK, which you use for app development. The SimSpace Weaver app SDK API reference is included in the SimSpace Weaver app SDK documentation. This documentation is part of the SimSpace Weaver app SDK distributable package.</p>
 *
 * The version of the OpenAPI document: 2022-10-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsSimSpaceWeaver);
  }
}(this, function(expect, AwsSimSpaceWeaver) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DescribeSimulationOutput', function() {
    it('should create an instance of DescribeSimulationOutput', function() {
      // uncomment below and update the code to test DescribeSimulationOutput
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be.a(AwsSimSpaceWeaver.DescribeSimulationOutput);
    });

    it('should have the property arn (base name: "Arn")', function() {
      // uncomment below and update the code to test the property arn
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be();
    });

    it('should have the property creationTime (base name: "CreationTime")', function() {
      // uncomment below and update the code to test the property creationTime
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be();
    });

    it('should have the property executionId (base name: "ExecutionId")', function() {
      // uncomment below and update the code to test the property executionId
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be();
    });

    it('should have the property liveSimulationState (base name: "LiveSimulationState")', function() {
      // uncomment below and update the code to test the property liveSimulationState
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be();
    });

    it('should have the property loggingConfiguration (base name: "LoggingConfiguration")', function() {
      // uncomment below and update the code to test the property loggingConfiguration
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be();
    });

    it('should have the property maximumDuration (base name: "MaximumDuration")', function() {
      // uncomment below and update the code to test the property maximumDuration
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be();
    });

    it('should have the property roleArn (base name: "RoleArn")', function() {
      // uncomment below and update the code to test the property roleArn
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be();
    });

    it('should have the property schemaError (base name: "SchemaError")', function() {
      // uncomment below and update the code to test the property schemaError
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be();
    });

    it('should have the property schemaS3Location (base name: "SchemaS3Location")', function() {
      // uncomment below and update the code to test the property schemaS3Location
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be();
    });

    it('should have the property snapshotS3Location (base name: "SnapshotS3Location")', function() {
      // uncomment below and update the code to test the property snapshotS3Location
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be();
    });

    it('should have the property startError (base name: "StartError")', function() {
      // uncomment below and update the code to test the property startError
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be();
    });

    it('should have the property targetStatus (base name: "TargetStatus")', function() {
      // uncomment below and update the code to test the property targetStatus
      //var instance = new AwsSimSpaceWeaver.DescribeSimulationOutput();
      //expect(instance).to.be();
    });

  });

}));
