/**
 * AWS SimSpace Weaver
 * <p>SimSpace Weaver (SimSpace Weaver) is a managed service that you can use to build and operate large-scale spatial simulations in the Amazon Web Services Cloud. For example, you can create a digital twin of a city, crowd simulations with millions of people and objects, and massively multiplayer games with hundreds of thousands of connected players. For more information about SimSpace Weaver, see the <i> <a href=\"https://docs.aws.amazon.com/simspaceweaver/latest/userguide/\">SimSpace Weaver User Guide</a> </i>.</p> <p>This API reference describes the API operations and data types that you can use to communicate directly with SimSpace Weaver.</p> <p>SimSpace Weaver also provides the SimSpace Weaver app SDK, which you use for app development. The SimSpace Weaver app SDK API reference is included in the SimSpace Weaver app SDK documentation. This documentation is part of the SimSpace Weaver app SDK distributable package.</p>
 *
 * The version of the OpenAPI document: 2022-10-28
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListSimulationsOutput model module.
 * @module model/ListSimulationsOutput
 * @version 2022-10-28
 */
class ListSimulationsOutput {
    /**
     * Constructs a new <code>ListSimulationsOutput</code>.
     * @alias module:model/ListSimulationsOutput
     */
    constructor() { 
        
        ListSimulationsOutput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListSimulationsOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListSimulationsOutput} obj Optional instance to populate.
     * @return {module:model/ListSimulationsOutput} The populated <code>ListSimulationsOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListSimulationsOutput();

            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
            if (data.hasOwnProperty('Simulations')) {
                obj['Simulations'] = ApiClient.convertToType(data['Simulations'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListSimulationsOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListSimulationsOutput</code>.
     */
    static validateJSON(data) {
        // validate the optional field `NextToken`
        if (data['NextToken']) { // data not null
          String.validateJSON(data['NextToken']);
        }
        // validate the optional field `Simulations`
        if (data['Simulations']) { // data not null
          Array.validateJSON(data['Simulations']);
        }

        return true;
    }


}



/**
 * @member {String} NextToken
 */
ListSimulationsOutput.prototype['NextToken'] = undefined;

/**
 * @member {Array} Simulations
 */
ListSimulationsOutput.prototype['Simulations'] = undefined;






export default ListSimulationsOutput;

