# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StopClockInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, simulation: str=None):
        """StopClockInput - a model defined in OpenAPI

        :param simulation: The simulation of this StopClockInput.
        """
        self.openapi_types = {
            'simulation': str
        }

        self.attribute_map = {
            'simulation': 'Simulation'
        }

        self._simulation = simulation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StopClockInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StopClockInput of this StopClockInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def simulation(self):
        """Gets the simulation of this StopClockInput.


        :return: The simulation of this StopClockInput.
        :rtype: str
        """
        return self._simulation

    @simulation.setter
    def simulation(self, simulation):
        """Sets the simulation of this StopClockInput.


        :param simulation: The simulation of this StopClockInput.
        :type simulation: str
        """
        if simulation is None:
            raise ValueError("Invalid value for `simulation`, must not be `None`")

        self._simulation = simulation
