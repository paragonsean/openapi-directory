# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.clock_status import ClockStatus
from openapi_server.models.clock_target_status import ClockTargetStatus
from openapi_server import util


class SimulationClock(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: ClockStatus=None, target_status: ClockTargetStatus=None):
        """SimulationClock - a model defined in OpenAPI

        :param status: The status of this SimulationClock.
        :param target_status: The target_status of this SimulationClock.
        """
        self.openapi_types = {
            'status': ClockStatus,
            'target_status': ClockTargetStatus
        }

        self.attribute_map = {
            'status': 'Status',
            'target_status': 'TargetStatus'
        }

        self._status = status
        self._target_status = target_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SimulationClock':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SimulationClock of this SimulationClock.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this SimulationClock.


        :return: The status of this SimulationClock.
        :rtype: ClockStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SimulationClock.


        :param status: The status of this SimulationClock.
        :type status: ClockStatus
        """

        self._status = status

    @property
    def target_status(self):
        """Gets the target_status of this SimulationClock.


        :return: The target_status of this SimulationClock.
        :rtype: ClockTargetStatus
        """
        return self._target_status

    @target_status.setter
    def target_status(self, target_status):
        """Sets the target_status of this SimulationClock.


        :param target_status: The target_status of this SimulationClock.
        :type target_status: ClockTargetStatus
        """

        self._target_status = target_status
