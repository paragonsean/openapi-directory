# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LiveSimulationState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clocks: List=None, domains: List=None):
        """LiveSimulationState - a model defined in OpenAPI

        :param clocks: The clocks of this LiveSimulationState.
        :param domains: The domains of this LiveSimulationState.
        """
        self.openapi_types = {
            'clocks': List,
            'domains': List
        }

        self.attribute_map = {
            'clocks': 'Clocks',
            'domains': 'Domains'
        }

        self._clocks = clocks
        self._domains = domains

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveSimulationState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LiveSimulationState of this LiveSimulationState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clocks(self):
        """Gets the clocks of this LiveSimulationState.


        :return: The clocks of this LiveSimulationState.
        :rtype: List
        """
        return self._clocks

    @clocks.setter
    def clocks(self, clocks):
        """Sets the clocks of this LiveSimulationState.


        :param clocks: The clocks of this LiveSimulationState.
        :type clocks: List
        """

        self._clocks = clocks

    @property
    def domains(self):
        """Gets the domains of this LiveSimulationState.


        :return: The domains of this LiveSimulationState.
        :rtype: List
        """
        return self._domains

    @domains.setter
    def domains(self, domains):
        """Sets the domains of this LiveSimulationState.


        :param domains: The domains of this LiveSimulationState.
        :type domains: List
        """

        self._domains = domains
