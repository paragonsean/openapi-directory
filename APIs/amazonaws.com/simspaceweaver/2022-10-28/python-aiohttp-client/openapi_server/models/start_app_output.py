# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartAppOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: str=None, name: str=None, simulation: str=None):
        """StartAppOutput - a model defined in OpenAPI

        :param domain: The domain of this StartAppOutput.
        :param name: The name of this StartAppOutput.
        :param simulation: The simulation of this StartAppOutput.
        """
        self.openapi_types = {
            'domain': str,
            'name': str,
            'simulation': str
        }

        self.attribute_map = {
            'domain': 'Domain',
            'name': 'Name',
            'simulation': 'Simulation'
        }

        self._domain = domain
        self._name = name
        self._simulation = simulation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartAppOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartAppOutput of this StartAppOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this StartAppOutput.


        :return: The domain of this StartAppOutput.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this StartAppOutput.


        :param domain: The domain of this StartAppOutput.
        :type domain: str
        """

        self._domain = domain

    @property
    def name(self):
        """Gets the name of this StartAppOutput.


        :return: The name of this StartAppOutput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StartAppOutput.


        :param name: The name of this StartAppOutput.
        :type name: str
        """

        self._name = name

    @property
    def simulation(self):
        """Gets the simulation of this StartAppOutput.


        :return: The simulation of this StartAppOutput.
        :rtype: str
        """
        return self._simulation

    @simulation.setter
    def simulation(self, simulation):
        """Sets the simulation of this StartAppOutput.


        :param simulation: The simulation of this StartAppOutput.
        :type simulation: str
        """

        self._simulation = simulation
