/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RawMessage model module.
 * @module model/RawMessage
 * @version 2019-09-27
 */
class RawMessage {
    /**
     * Constructs a new <code>RawMessage</code>.
     * Represents the raw content of an email message.
     * @alias module:model/RawMessage
     * @param data {String} 
     */
    constructor(data) { 
        
        RawMessage.initialize(this, data);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, data) { 
        obj['Data'] = data;
    }

    /**
     * Constructs a <code>RawMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RawMessage} obj Optional instance to populate.
     * @return {module:model/RawMessage} The populated <code>RawMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RawMessage();

            if (data.hasOwnProperty('Data')) {
                obj['Data'] = ApiClient.convertToType(data['Data'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RawMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RawMessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RawMessage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Data`
        if (data['Data']) { // data not null
          String.validateJSON(data['Data']);
        }

        return true;
    }


}

RawMessage.RequiredProperties = ["Data"];

/**
 * @member {String} Data
 */
RawMessage.prototype['Data'] = undefined;






export default RawMessage;

