/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PutEmailIdentityMailFromAttributesRequest model module.
 * @module model/PutEmailIdentityMailFromAttributesRequest
 * @version 2019-09-27
 */
class PutEmailIdentityMailFromAttributesRequest {
    /**
     * Constructs a new <code>PutEmailIdentityMailFromAttributesRequest</code>.
     * @alias module:model/PutEmailIdentityMailFromAttributesRequest
     */
    constructor() { 
        
        PutEmailIdentityMailFromAttributesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PutEmailIdentityMailFromAttributesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutEmailIdentityMailFromAttributesRequest} obj Optional instance to populate.
     * @return {module:model/PutEmailIdentityMailFromAttributesRequest} The populated <code>PutEmailIdentityMailFromAttributesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutEmailIdentityMailFromAttributesRequest();

            if (data.hasOwnProperty('MailFromDomain')) {
                obj['MailFromDomain'] = ApiClient.convertToType(data['MailFromDomain'], 'String');
            }
            if (data.hasOwnProperty('BehaviorOnMxFailure')) {
                obj['BehaviorOnMxFailure'] = ApiClient.convertToType(data['BehaviorOnMxFailure'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutEmailIdentityMailFromAttributesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutEmailIdentityMailFromAttributesRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['MailFromDomain'] && !(typeof data['MailFromDomain'] === 'string' || data['MailFromDomain'] instanceof String)) {
            throw new Error("Expected the field `MailFromDomain` to be a primitive type in the JSON string but got " + data['MailFromDomain']);
        }
        // ensure the json data is a string
        if (data['BehaviorOnMxFailure'] && !(typeof data['BehaviorOnMxFailure'] === 'string' || data['BehaviorOnMxFailure'] instanceof String)) {
            throw new Error("Expected the field `BehaviorOnMxFailure` to be a primitive type in the JSON string but got " + data['BehaviorOnMxFailure']);
        }

        return true;
    }


}



/**
 * The domain to use as a MAIL FROM domain.
 * @member {String} MailFromDomain
 */
PutEmailIdentityMailFromAttributesRequest.prototype['MailFromDomain'] = undefined;

/**
 * <p>The action to take if the required MX record can't be found when you send an email. When you set this value to <code>UseDefaultValue</code>, the mail is sent using <i>amazonses.com</i> as the MAIL FROM domain. When you set this value to <code>RejectMessage</code>, the Amazon SES API v2 returns a <code>MailFromDomainNotVerified</code> error, and doesn't attempt to deliver the email.</p> <p>These behaviors are taken when the custom MAIL FROM domain configuration is in the <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code> states.</p>
 * @member {module:model/PutEmailIdentityMailFromAttributesRequest.BehaviorOnMxFailureEnum} BehaviorOnMxFailure
 */
PutEmailIdentityMailFromAttributesRequest.prototype['BehaviorOnMxFailure'] = undefined;





/**
 * Allowed values for the <code>BehaviorOnMxFailure</code> property.
 * @enum {String}
 * @readonly
 */
PutEmailIdentityMailFromAttributesRequest['BehaviorOnMxFailureEnum'] = {

    /**
     * value: "USE_DEFAULT_VALUE"
     * @const
     */
    "USE_DEFAULT_VALUE": "USE_DEFAULT_VALUE",

    /**
     * value: "REJECT_MESSAGE"
     * @const
     */
    "REJECT_MESSAGE": "REJECT_MESSAGE"
};



export default PutEmailIdentityMailFromAttributesRequest;

