/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PutAccountDetailsRequest model module.
 * @module model/PutAccountDetailsRequest
 * @version 2019-09-27
 */
class PutAccountDetailsRequest {
    /**
     * Constructs a new <code>PutAccountDetailsRequest</code>.
     * @alias module:model/PutAccountDetailsRequest
     * @param mailType {module:model/PutAccountDetailsRequest.MailTypeEnum} The type of email your account will send.
     * @param websiteURL {String} The URL of your website. This information helps us better understand the type of content that you plan to send.
     * @param useCaseDescription {String} A description of the types of email that you plan to send.
     */
    constructor(mailType, websiteURL, useCaseDescription) { 
        
        PutAccountDetailsRequest.initialize(this, mailType, websiteURL, useCaseDescription);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, mailType, websiteURL, useCaseDescription) { 
        obj['MailType'] = mailType;
        obj['WebsiteURL'] = websiteURL;
        obj['UseCaseDescription'] = useCaseDescription;
    }

    /**
     * Constructs a <code>PutAccountDetailsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutAccountDetailsRequest} obj Optional instance to populate.
     * @return {module:model/PutAccountDetailsRequest} The populated <code>PutAccountDetailsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutAccountDetailsRequest();

            if (data.hasOwnProperty('MailType')) {
                obj['MailType'] = ApiClient.convertToType(data['MailType'], 'String');
            }
            if (data.hasOwnProperty('WebsiteURL')) {
                obj['WebsiteURL'] = ApiClient.convertToType(data['WebsiteURL'], 'String');
            }
            if (data.hasOwnProperty('ContactLanguage')) {
                obj['ContactLanguage'] = ApiClient.convertToType(data['ContactLanguage'], 'String');
            }
            if (data.hasOwnProperty('UseCaseDescription')) {
                obj['UseCaseDescription'] = ApiClient.convertToType(data['UseCaseDescription'], 'String');
            }
            if (data.hasOwnProperty('AdditionalContactEmailAddresses')) {
                obj['AdditionalContactEmailAddresses'] = ApiClient.convertToType(data['AdditionalContactEmailAddresses'], ['String']);
            }
            if (data.hasOwnProperty('ProductionAccessEnabled')) {
                obj['ProductionAccessEnabled'] = ApiClient.convertToType(data['ProductionAccessEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutAccountDetailsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutAccountDetailsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PutAccountDetailsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['MailType'] && !(typeof data['MailType'] === 'string' || data['MailType'] instanceof String)) {
            throw new Error("Expected the field `MailType` to be a primitive type in the JSON string but got " + data['MailType']);
        }
        // ensure the json data is a string
        if (data['WebsiteURL'] && !(typeof data['WebsiteURL'] === 'string' || data['WebsiteURL'] instanceof String)) {
            throw new Error("Expected the field `WebsiteURL` to be a primitive type in the JSON string but got " + data['WebsiteURL']);
        }
        // ensure the json data is a string
        if (data['ContactLanguage'] && !(typeof data['ContactLanguage'] === 'string' || data['ContactLanguage'] instanceof String)) {
            throw new Error("Expected the field `ContactLanguage` to be a primitive type in the JSON string but got " + data['ContactLanguage']);
        }
        // ensure the json data is a string
        if (data['UseCaseDescription'] && !(typeof data['UseCaseDescription'] === 'string' || data['UseCaseDescription'] instanceof String)) {
            throw new Error("Expected the field `UseCaseDescription` to be a primitive type in the JSON string but got " + data['UseCaseDescription']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['AdditionalContactEmailAddresses'])) {
            throw new Error("Expected the field `AdditionalContactEmailAddresses` to be an array in the JSON data but got " + data['AdditionalContactEmailAddresses']);
        }

        return true;
    }


}

PutAccountDetailsRequest.RequiredProperties = ["MailType", "WebsiteURL", "UseCaseDescription"];

/**
 * The type of email your account will send.
 * @member {module:model/PutAccountDetailsRequest.MailTypeEnum} MailType
 */
PutAccountDetailsRequest.prototype['MailType'] = undefined;

/**
 * The URL of your website. This information helps us better understand the type of content that you plan to send.
 * @member {String} WebsiteURL
 */
PutAccountDetailsRequest.prototype['WebsiteURL'] = undefined;

/**
 * The language you would prefer to be contacted with.
 * @member {module:model/PutAccountDetailsRequest.ContactLanguageEnum} ContactLanguage
 */
PutAccountDetailsRequest.prototype['ContactLanguage'] = undefined;

/**
 * A description of the types of email that you plan to send.
 * @member {String} UseCaseDescription
 */
PutAccountDetailsRequest.prototype['UseCaseDescription'] = undefined;

/**
 * Additional email addresses that you would like to be notified regarding Amazon SES matters.
 * @member {Array.<String>} AdditionalContactEmailAddresses
 */
PutAccountDetailsRequest.prototype['AdditionalContactEmailAddresses'] = undefined;

/**
 * <p>Indicates whether or not your account should have production access in the current Amazon Web Services Region.</p> <p>If the value is <code>false</code>, then your account is in the <i>sandbox</i>. When your account is in the sandbox, you can only send email to verified identities. Additionally, the maximum number of emails you can send in a 24-hour period (your sending quota) is 200, and the maximum number of emails you can send per second (your maximum sending rate) is 1.</p> <p>If the value is <code>true</code>, then your account has production access. When your account has production access, you can send email to any address. The sending quota and maximum sending rate for your account vary based on your specific use case.</p>
 * @member {Boolean} ProductionAccessEnabled
 */
PutAccountDetailsRequest.prototype['ProductionAccessEnabled'] = undefined;





/**
 * Allowed values for the <code>MailType</code> property.
 * @enum {String}
 * @readonly
 */
PutAccountDetailsRequest['MailTypeEnum'] = {

    /**
     * value: "MARKETING"
     * @const
     */
    "MARKETING": "MARKETING",

    /**
     * value: "TRANSACTIONAL"
     * @const
     */
    "TRANSACTIONAL": "TRANSACTIONAL"
};


/**
 * Allowed values for the <code>ContactLanguage</code> property.
 * @enum {String}
 * @readonly
 */
PutAccountDetailsRequest['ContactLanguageEnum'] = {

    /**
     * value: "EN"
     * @const
     */
    "EN": "EN",

    /**
     * value: "JA"
     * @const
     */
    "JA": "JA"
};



export default PutAccountDetailsRequest;

