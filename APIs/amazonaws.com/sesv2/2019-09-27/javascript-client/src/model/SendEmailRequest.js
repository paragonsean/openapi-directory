/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateDeliverabilityTestReportRequestContent from './CreateDeliverabilityTestReportRequestContent';
import MessageTag from './MessageTag';
import SendEmailRequestDestination from './SendEmailRequestDestination';
import SendEmailRequestListManagementOptions from './SendEmailRequestListManagementOptions';

/**
 * The SendEmailRequest model module.
 * @module model/SendEmailRequest
 * @version 2019-09-27
 */
class SendEmailRequest {
    /**
     * Constructs a new <code>SendEmailRequest</code>.
     * @alias module:model/SendEmailRequest
     * @param content {module:model/CreateDeliverabilityTestReportRequestContent} 
     */
    constructor(content) { 
        
        SendEmailRequest.initialize(this, content);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, content) { 
        obj['Content'] = content;
    }

    /**
     * Constructs a <code>SendEmailRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendEmailRequest} obj Optional instance to populate.
     * @return {module:model/SendEmailRequest} The populated <code>SendEmailRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendEmailRequest();

            if (data.hasOwnProperty('FromEmailAddress')) {
                obj['FromEmailAddress'] = ApiClient.convertToType(data['FromEmailAddress'], 'String');
            }
            if (data.hasOwnProperty('FromEmailAddressIdentityArn')) {
                obj['FromEmailAddressIdentityArn'] = ApiClient.convertToType(data['FromEmailAddressIdentityArn'], 'String');
            }
            if (data.hasOwnProperty('Destination')) {
                obj['Destination'] = SendEmailRequestDestination.constructFromObject(data['Destination']);
            }
            if (data.hasOwnProperty('ReplyToAddresses')) {
                obj['ReplyToAddresses'] = ApiClient.convertToType(data['ReplyToAddresses'], ['String']);
            }
            if (data.hasOwnProperty('FeedbackForwardingEmailAddress')) {
                obj['FeedbackForwardingEmailAddress'] = ApiClient.convertToType(data['FeedbackForwardingEmailAddress'], 'String');
            }
            if (data.hasOwnProperty('FeedbackForwardingEmailAddressIdentityArn')) {
                obj['FeedbackForwardingEmailAddressIdentityArn'] = ApiClient.convertToType(data['FeedbackForwardingEmailAddressIdentityArn'], 'String');
            }
            if (data.hasOwnProperty('Content')) {
                obj['Content'] = CreateDeliverabilityTestReportRequestContent.constructFromObject(data['Content']);
            }
            if (data.hasOwnProperty('EmailTags')) {
                obj['EmailTags'] = ApiClient.convertToType(data['EmailTags'], [MessageTag]);
            }
            if (data.hasOwnProperty('ConfigurationSetName')) {
                obj['ConfigurationSetName'] = ApiClient.convertToType(data['ConfigurationSetName'], 'String');
            }
            if (data.hasOwnProperty('ListManagementOptions')) {
                obj['ListManagementOptions'] = SendEmailRequestListManagementOptions.constructFromObject(data['ListManagementOptions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SendEmailRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SendEmailRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SendEmailRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['FromEmailAddress'] && !(typeof data['FromEmailAddress'] === 'string' || data['FromEmailAddress'] instanceof String)) {
            throw new Error("Expected the field `FromEmailAddress` to be a primitive type in the JSON string but got " + data['FromEmailAddress']);
        }
        // ensure the json data is a string
        if (data['FromEmailAddressIdentityArn'] && !(typeof data['FromEmailAddressIdentityArn'] === 'string' || data['FromEmailAddressIdentityArn'] instanceof String)) {
            throw new Error("Expected the field `FromEmailAddressIdentityArn` to be a primitive type in the JSON string but got " + data['FromEmailAddressIdentityArn']);
        }
        // validate the optional field `Destination`
        if (data['Destination']) { // data not null
          SendEmailRequestDestination.validateJSON(data['Destination']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ReplyToAddresses'])) {
            throw new Error("Expected the field `ReplyToAddresses` to be an array in the JSON data but got " + data['ReplyToAddresses']);
        }
        // ensure the json data is a string
        if (data['FeedbackForwardingEmailAddress'] && !(typeof data['FeedbackForwardingEmailAddress'] === 'string' || data['FeedbackForwardingEmailAddress'] instanceof String)) {
            throw new Error("Expected the field `FeedbackForwardingEmailAddress` to be a primitive type in the JSON string but got " + data['FeedbackForwardingEmailAddress']);
        }
        // ensure the json data is a string
        if (data['FeedbackForwardingEmailAddressIdentityArn'] && !(typeof data['FeedbackForwardingEmailAddressIdentityArn'] === 'string' || data['FeedbackForwardingEmailAddressIdentityArn'] instanceof String)) {
            throw new Error("Expected the field `FeedbackForwardingEmailAddressIdentityArn` to be a primitive type in the JSON string but got " + data['FeedbackForwardingEmailAddressIdentityArn']);
        }
        // validate the optional field `Content`
        if (data['Content']) { // data not null
          CreateDeliverabilityTestReportRequestContent.validateJSON(data['Content']);
        }
        if (data['EmailTags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['EmailTags'])) {
                throw new Error("Expected the field `EmailTags` to be an array in the JSON data but got " + data['EmailTags']);
            }
            // validate the optional field `EmailTags` (array)
            for (const item of data['EmailTags']) {
                MessageTag.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['ConfigurationSetName'] && !(typeof data['ConfigurationSetName'] === 'string' || data['ConfigurationSetName'] instanceof String)) {
            throw new Error("Expected the field `ConfigurationSetName` to be a primitive type in the JSON string but got " + data['ConfigurationSetName']);
        }
        // validate the optional field `ListManagementOptions`
        if (data['ListManagementOptions']) { // data not null
          SendEmailRequestListManagementOptions.validateJSON(data['ListManagementOptions']);
        }

        return true;
    }


}

SendEmailRequest.RequiredProperties = ["Content"];

/**
 * The email address to use as the \"From\" address for the email. The address that you specify has to be verified. 
 * @member {String} FromEmailAddress
 */
SendEmailRequest.prototype['FromEmailAddress'] = undefined;

/**
 * <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FromEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use sender@example.com, then you would specify the <code>FromEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FromEmailAddress</code> to be sender@example.com.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <p>For Raw emails, the <code>FromEmailAddressIdentityArn</code> value overrides the X-SES-SOURCE-ARN and X-SES-FROM-ARN headers specified in raw email message content.</p>
 * @member {String} FromEmailAddressIdentityArn
 */
SendEmailRequest.prototype['FromEmailAddressIdentityArn'] = undefined;

/**
 * @member {module:model/SendEmailRequestDestination} Destination
 */
SendEmailRequest.prototype['Destination'] = undefined;

/**
 * The \"Reply-to\" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.
 * @member {Array.<String>} ReplyToAddresses
 */
SendEmailRequest.prototype['ReplyToAddresses'] = undefined;

/**
 * The address that you want bounce and complaint notifications to be sent to.
 * @member {String} FeedbackForwardingEmailAddress
 */
SendEmailRequest.prototype['FeedbackForwardingEmailAddress'] = undefined;

/**
 * <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FeedbackForwardingEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use feedback@example.com, then you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p>
 * @member {String} FeedbackForwardingEmailAddressIdentityArn
 */
SendEmailRequest.prototype['FeedbackForwardingEmailAddressIdentityArn'] = undefined;

/**
 * @member {module:model/CreateDeliverabilityTestReportRequestContent} Content
 */
SendEmailRequest.prototype['Content'] = undefined;

/**
 * A list of message tags.
 * @member {Array.<module:model/MessageTag>} EmailTags
 */
SendEmailRequest.prototype['EmailTags'] = undefined;

/**
 * <p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>
 * @member {String} ConfigurationSetName
 */
SendEmailRequest.prototype['ConfigurationSetName'] = undefined;

/**
 * @member {module:model/SendEmailRequestListManagementOptions} ListManagementOptions
 */
SendEmailRequest.prototype['ListManagementOptions'] = undefined;






export default SendEmailRequest;

