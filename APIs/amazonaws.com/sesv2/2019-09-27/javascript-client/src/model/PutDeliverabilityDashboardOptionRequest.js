/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DomainDeliverabilityTrackingOption from './DomainDeliverabilityTrackingOption';

/**
 * The PutDeliverabilityDashboardOptionRequest model module.
 * @module model/PutDeliverabilityDashboardOptionRequest
 * @version 2019-09-27
 */
class PutDeliverabilityDashboardOptionRequest {
    /**
     * Constructs a new <code>PutDeliverabilityDashboardOptionRequest</code>.
     * @alias module:model/PutDeliverabilityDashboardOptionRequest
     * @param dashboardEnabled {Boolean} Specifies whether to enable the Deliverability dashboard. To enable the dashboard, set this value to <code>true</code>.
     */
    constructor(dashboardEnabled) { 
        
        PutDeliverabilityDashboardOptionRequest.initialize(this, dashboardEnabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dashboardEnabled) { 
        obj['DashboardEnabled'] = dashboardEnabled;
    }

    /**
     * Constructs a <code>PutDeliverabilityDashboardOptionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutDeliverabilityDashboardOptionRequest} obj Optional instance to populate.
     * @return {module:model/PutDeliverabilityDashboardOptionRequest} The populated <code>PutDeliverabilityDashboardOptionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutDeliverabilityDashboardOptionRequest();

            if (data.hasOwnProperty('DashboardEnabled')) {
                obj['DashboardEnabled'] = ApiClient.convertToType(data['DashboardEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('SubscribedDomains')) {
                obj['SubscribedDomains'] = ApiClient.convertToType(data['SubscribedDomains'], [DomainDeliverabilityTrackingOption]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutDeliverabilityDashboardOptionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutDeliverabilityDashboardOptionRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PutDeliverabilityDashboardOptionRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['SubscribedDomains']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['SubscribedDomains'])) {
                throw new Error("Expected the field `SubscribedDomains` to be an array in the JSON data but got " + data['SubscribedDomains']);
            }
            // validate the optional field `SubscribedDomains` (array)
            for (const item of data['SubscribedDomains']) {
                DomainDeliverabilityTrackingOption.validateJSON(item);
            };
        }

        return true;
    }


}

PutDeliverabilityDashboardOptionRequest.RequiredProperties = ["DashboardEnabled"];

/**
 * Specifies whether to enable the Deliverability dashboard. To enable the dashboard, set this value to <code>true</code>.
 * @member {Boolean} DashboardEnabled
 */
PutDeliverabilityDashboardOptionRequest.prototype['DashboardEnabled'] = undefined;

/**
 * An object that contains information about the Deliverability dashboard subscription for a verified domain that you use to send email and currently has an active Deliverability dashboard subscription. If a Deliverability dashboard subscription is active for a domain, you gain access to reputation, inbox placement, and other metrics for the domain.
 * @member {Array.<module:model/DomainDeliverabilityTrackingOption>} SubscribedDomains
 */
PutDeliverabilityDashboardOptionRequest.prototype['SubscribedDomains'] = undefined;






export default PutDeliverabilityDashboardOptionRequest;

