/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateContactRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateContactRequest::OAICreateContactRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateContactRequest::OAICreateContactRequest() {
    this->initializeModel();
}

OAICreateContactRequest::~OAICreateContactRequest() {}

void OAICreateContactRequest::initializeModel() {

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_topic_preferences_isSet = false;
    m_topic_preferences_isValid = false;

    m_unsubscribe_all_isSet = false;
    m_unsubscribe_all_isValid = false;

    m_attributes_data_isSet = false;
    m_attributes_data_isValid = false;
}

void OAICreateContactRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateContactRequest::fromJsonObject(QJsonObject json) {

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("EmailAddress")]);
    m_email_address_isSet = !json[QString("EmailAddress")].isNull() && m_email_address_isValid;

    m_topic_preferences_isValid = ::OpenAPI::fromJsonValue(m_topic_preferences, json[QString("TopicPreferences")]);
    m_topic_preferences_isSet = !json[QString("TopicPreferences")].isNull() && m_topic_preferences_isValid;

    m_unsubscribe_all_isValid = ::OpenAPI::fromJsonValue(m_unsubscribe_all, json[QString("UnsubscribeAll")]);
    m_unsubscribe_all_isSet = !json[QString("UnsubscribeAll")].isNull() && m_unsubscribe_all_isValid;

    m_attributes_data_isValid = ::OpenAPI::fromJsonValue(m_attributes_data, json[QString("AttributesData")]);
    m_attributes_data_isSet = !json[QString("AttributesData")].isNull() && m_attributes_data_isValid;
}

QString OAICreateContactRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateContactRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_email_address_isSet) {
        obj.insert(QString("EmailAddress"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_topic_preferences.isSet()) {
        obj.insert(QString("TopicPreferences"), ::OpenAPI::toJsonValue(m_topic_preferences));
    }
    if (m_unsubscribe_all_isSet) {
        obj.insert(QString("UnsubscribeAll"), ::OpenAPI::toJsonValue(m_unsubscribe_all));
    }
    if (m_attributes_data_isSet) {
        obj.insert(QString("AttributesData"), ::OpenAPI::toJsonValue(m_attributes_data));
    }
    return obj;
}

QString OAICreateContactRequest::getEmailAddress() const {
    return m_email_address;
}
void OAICreateContactRequest::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAICreateContactRequest::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAICreateContactRequest::is_email_address_Valid() const{
    return m_email_address_isValid;
}

QList OAICreateContactRequest::getTopicPreferences() const {
    return m_topic_preferences;
}
void OAICreateContactRequest::setTopicPreferences(const QList &topic_preferences) {
    m_topic_preferences = topic_preferences;
    m_topic_preferences_isSet = true;
}

bool OAICreateContactRequest::is_topic_preferences_Set() const{
    return m_topic_preferences_isSet;
}

bool OAICreateContactRequest::is_topic_preferences_Valid() const{
    return m_topic_preferences_isValid;
}

bool OAICreateContactRequest::getUnsubscribeAll() const {
    return m_unsubscribe_all;
}
void OAICreateContactRequest::setUnsubscribeAll(const bool &unsubscribe_all) {
    m_unsubscribe_all = unsubscribe_all;
    m_unsubscribe_all_isSet = true;
}

bool OAICreateContactRequest::is_unsubscribe_all_Set() const{
    return m_unsubscribe_all_isSet;
}

bool OAICreateContactRequest::is_unsubscribe_all_Valid() const{
    return m_unsubscribe_all_isValid;
}

QString OAICreateContactRequest::getAttributesData() const {
    return m_attributes_data;
}
void OAICreateContactRequest::setAttributesData(const QString &attributes_data) {
    m_attributes_data = attributes_data;
    m_attributes_data_isSet = true;
}

bool OAICreateContactRequest::is_attributes_data_Set() const{
    return m_attributes_data_isSet;
}

bool OAICreateContactRequest::is_attributes_data_Valid() const{
    return m_attributes_data_isValid;
}

bool OAICreateContactRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_topic_preferences.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_unsubscribe_all_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attributes_data_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateContactRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_address_isValid && true;
}

} // namespace OpenAPI
