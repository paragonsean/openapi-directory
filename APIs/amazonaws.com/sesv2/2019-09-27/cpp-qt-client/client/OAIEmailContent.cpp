/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmailContent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmailContent::OAIEmailContent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmailContent::OAIEmailContent() {
    this->initializeModel();
}

OAIEmailContent::~OAIEmailContent() {}

void OAIEmailContent::initializeModel() {

    m_simple_isSet = false;
    m_simple_isValid = false;

    m_raw_isSet = false;
    m_raw_isValid = false;

    m_r_template_isSet = false;
    m_r_template_isValid = false;
}

void OAIEmailContent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmailContent::fromJsonObject(QJsonObject json) {

    m_simple_isValid = ::OpenAPI::fromJsonValue(m_simple, json[QString("Simple")]);
    m_simple_isSet = !json[QString("Simple")].isNull() && m_simple_isValid;

    m_raw_isValid = ::OpenAPI::fromJsonValue(m_raw, json[QString("Raw")]);
    m_raw_isSet = !json[QString("Raw")].isNull() && m_raw_isValid;

    m_r_template_isValid = ::OpenAPI::fromJsonValue(m_r_template, json[QString("Template")]);
    m_r_template_isSet = !json[QString("Template")].isNull() && m_r_template_isValid;
}

QString OAIEmailContent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmailContent::asJsonObject() const {
    QJsonObject obj;
    if (m_simple.isSet()) {
        obj.insert(QString("Simple"), ::OpenAPI::toJsonValue(m_simple));
    }
    if (m_raw.isSet()) {
        obj.insert(QString("Raw"), ::OpenAPI::toJsonValue(m_raw));
    }
    if (m_r_template.isSet()) {
        obj.insert(QString("Template"), ::OpenAPI::toJsonValue(m_r_template));
    }
    return obj;
}

OAICreateDeliverabilityTestReport_request_Content_Simple OAIEmailContent::getSimple() const {
    return m_simple;
}
void OAIEmailContent::setSimple(const OAICreateDeliverabilityTestReport_request_Content_Simple &simple) {
    m_simple = simple;
    m_simple_isSet = true;
}

bool OAIEmailContent::is_simple_Set() const{
    return m_simple_isSet;
}

bool OAIEmailContent::is_simple_Valid() const{
    return m_simple_isValid;
}

OAICreateDeliverabilityTestReport_request_Content_Raw OAIEmailContent::getRaw() const {
    return m_raw;
}
void OAIEmailContent::setRaw(const OAICreateDeliverabilityTestReport_request_Content_Raw &raw) {
    m_raw = raw;
    m_raw_isSet = true;
}

bool OAIEmailContent::is_raw_Set() const{
    return m_raw_isSet;
}

bool OAIEmailContent::is_raw_Valid() const{
    return m_raw_isValid;
}

OAICreateDeliverabilityTestReport_request_Content_Template OAIEmailContent::getRTemplate() const {
    return m_r_template;
}
void OAIEmailContent::setRTemplate(const OAICreateDeliverabilityTestReport_request_Content_Template &r_template) {
    m_r_template = r_template;
    m_r_template_isSet = true;
}

bool OAIEmailContent::is_r_template_Set() const{
    return m_r_template_isSet;
}

bool OAIEmailContent::is_r_template_Valid() const{
    return m_r_template_isValid;
}

bool OAIEmailContent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_simple.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_raw.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_template.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmailContent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
