/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWarmupStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWarmupStatus::OAIWarmupStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWarmupStatus::OAIWarmupStatus() {
    this->initializeModel();
}

OAIWarmupStatus::~OAIWarmupStatus() {}

void OAIWarmupStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIWarmupStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIWarmupStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("IN_PROGRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWarmupStatus::IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWarmupStatus::DONE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIWarmupStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIWarmupStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIWarmupStatus::IN_PROGRESS:
            val = "IN_PROGRESS";
            break;
        case eOAIWarmupStatus::DONE:
            val = "DONE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIWarmupStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIWarmupStatus::eOAIWarmupStatus OAIWarmupStatus::getValue() const {
    return m_value;
}

void OAIWarmupStatus::setValue(const OAIWarmupStatus::eOAIWarmupStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIWarmupStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIWarmupStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
