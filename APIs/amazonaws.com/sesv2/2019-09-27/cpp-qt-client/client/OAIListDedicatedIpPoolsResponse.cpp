/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListDedicatedIpPoolsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListDedicatedIpPoolsResponse::OAIListDedicatedIpPoolsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListDedicatedIpPoolsResponse::OAIListDedicatedIpPoolsResponse() {
    this->initializeModel();
}

OAIListDedicatedIpPoolsResponse::~OAIListDedicatedIpPoolsResponse() {}

void OAIListDedicatedIpPoolsResponse::initializeModel() {

    m_dedicated_ip_pools_isSet = false;
    m_dedicated_ip_pools_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListDedicatedIpPoolsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListDedicatedIpPoolsResponse::fromJsonObject(QJsonObject json) {

    m_dedicated_ip_pools_isValid = ::OpenAPI::fromJsonValue(m_dedicated_ip_pools, json[QString("DedicatedIpPools")]);
    m_dedicated_ip_pools_isSet = !json[QString("DedicatedIpPools")].isNull() && m_dedicated_ip_pools_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListDedicatedIpPoolsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListDedicatedIpPoolsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_dedicated_ip_pools.isSet()) {
        obj.insert(QString("DedicatedIpPools"), ::OpenAPI::toJsonValue(m_dedicated_ip_pools));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListDedicatedIpPoolsResponse::getDedicatedIpPools() const {
    return m_dedicated_ip_pools;
}
void OAIListDedicatedIpPoolsResponse::setDedicatedIpPools(const QList &dedicated_ip_pools) {
    m_dedicated_ip_pools = dedicated_ip_pools;
    m_dedicated_ip_pools_isSet = true;
}

bool OAIListDedicatedIpPoolsResponse::is_dedicated_ip_pools_Set() const{
    return m_dedicated_ip_pools_isSet;
}

bool OAIListDedicatedIpPoolsResponse::is_dedicated_ip_pools_Valid() const{
    return m_dedicated_ip_pools_isValid;
}

QString OAIListDedicatedIpPoolsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListDedicatedIpPoolsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListDedicatedIpPoolsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListDedicatedIpPoolsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListDedicatedIpPoolsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dedicated_ip_pools.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListDedicatedIpPoolsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
