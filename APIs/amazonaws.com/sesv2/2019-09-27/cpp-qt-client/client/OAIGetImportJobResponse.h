/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetImportJobResponse.h
 *
 * An HTTP 200 response if the request succeeds, or an error message if the request fails.
 */

#ifndef OAIGetImportJobResponse_H
#define OAIGetImportJobResponse_H

#include <QJsonObject>

#include "OAIGetImportJobResponse_FailureInfo.h"
#include "OAIGetImportJobResponse_ImportDataSource.h"
#include "OAIGetImportJobResponse_ImportDestination.h"
#include "OAIJobStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetImportJobResponse_ImportDestination;
class OAIGetImportJobResponse_ImportDataSource;
class OAIGetImportJobResponse_FailureInfo;

class OAIGetImportJobResponse : public OAIObject {
public:
    OAIGetImportJobResponse();
    OAIGetImportJobResponse(QString json);
    ~OAIGetImportJobResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getJobId() const;
    void setJobId(const QString &job_id);
    bool is_job_id_Set() const;
    bool is_job_id_Valid() const;

    OAIGetImportJobResponse_ImportDestination getImportDestination() const;
    void setImportDestination(const OAIGetImportJobResponse_ImportDestination &import_destination);
    bool is_import_destination_Set() const;
    bool is_import_destination_Valid() const;

    OAIGetImportJobResponse_ImportDataSource getImportDataSource() const;
    void setImportDataSource(const OAIGetImportJobResponse_ImportDataSource &import_data_source);
    bool is_import_data_source_Set() const;
    bool is_import_data_source_Valid() const;

    OAIGetImportJobResponse_FailureInfo getFailureInfo() const;
    void setFailureInfo(const OAIGetImportJobResponse_FailureInfo &failure_info);
    bool is_failure_info_Set() const;
    bool is_failure_info_Valid() const;

    OAIJobStatus getJobStatus() const;
    void setJobStatus(const OAIJobStatus &job_status);
    bool is_job_status_Set() const;
    bool is_job_status_Valid() const;

    QDateTime getCreatedTimestamp() const;
    void setCreatedTimestamp(const QDateTime &created_timestamp);
    bool is_created_timestamp_Set() const;
    bool is_created_timestamp_Valid() const;

    QDateTime getCompletedTimestamp() const;
    void setCompletedTimestamp(const QDateTime &completed_timestamp);
    bool is_completed_timestamp_Set() const;
    bool is_completed_timestamp_Valid() const;

    qint32 getProcessedRecordsCount() const;
    void setProcessedRecordsCount(const qint32 &processed_records_count);
    bool is_processed_records_count_Set() const;
    bool is_processed_records_count_Valid() const;

    qint32 getFailedRecordsCount() const;
    void setFailedRecordsCount(const qint32 &failed_records_count);
    bool is_failed_records_count_Set() const;
    bool is_failed_records_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_job_id;
    bool m_job_id_isSet;
    bool m_job_id_isValid;

    OAIGetImportJobResponse_ImportDestination m_import_destination;
    bool m_import_destination_isSet;
    bool m_import_destination_isValid;

    OAIGetImportJobResponse_ImportDataSource m_import_data_source;
    bool m_import_data_source_isSet;
    bool m_import_data_source_isValid;

    OAIGetImportJobResponse_FailureInfo m_failure_info;
    bool m_failure_info_isSet;
    bool m_failure_info_isValid;

    OAIJobStatus m_job_status;
    bool m_job_status_isSet;
    bool m_job_status_isValid;

    QDateTime m_created_timestamp;
    bool m_created_timestamp_isSet;
    bool m_created_timestamp_isValid;

    QDateTime m_completed_timestamp;
    bool m_completed_timestamp_isSet;
    bool m_completed_timestamp_isValid;

    qint32 m_processed_records_count;
    bool m_processed_records_count_isSet;
    bool m_processed_records_count_isValid;

    qint32 m_failed_records_count;
    bool m_failed_records_count_isSet;
    bool m_failed_records_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetImportJobResponse)

#endif // OAIGetImportJobResponse_H
