/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateDeliverabilityTestReport_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateDeliverabilityTestReport_request::OAICreateDeliverabilityTestReport_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateDeliverabilityTestReport_request::OAICreateDeliverabilityTestReport_request() {
    this->initializeModel();
}

OAICreateDeliverabilityTestReport_request::~OAICreateDeliverabilityTestReport_request() {}

void OAICreateDeliverabilityTestReport_request::initializeModel() {

    m_report_name_isSet = false;
    m_report_name_isValid = false;

    m_from_email_address_isSet = false;
    m_from_email_address_isValid = false;

    m_content_isSet = false;
    m_content_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateDeliverabilityTestReport_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateDeliverabilityTestReport_request::fromJsonObject(QJsonObject json) {

    m_report_name_isValid = ::OpenAPI::fromJsonValue(m_report_name, json[QString("ReportName")]);
    m_report_name_isSet = !json[QString("ReportName")].isNull() && m_report_name_isValid;

    m_from_email_address_isValid = ::OpenAPI::fromJsonValue(m_from_email_address, json[QString("FromEmailAddress")]);
    m_from_email_address_isSet = !json[QString("FromEmailAddress")].isNull() && m_from_email_address_isValid;

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("Content")]);
    m_content_isSet = !json[QString("Content")].isNull() && m_content_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAICreateDeliverabilityTestReport_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateDeliverabilityTestReport_request::asJsonObject() const {
    QJsonObject obj;
    if (m_report_name_isSet) {
        obj.insert(QString("ReportName"), ::OpenAPI::toJsonValue(m_report_name));
    }
    if (m_from_email_address_isSet) {
        obj.insert(QString("FromEmailAddress"), ::OpenAPI::toJsonValue(m_from_email_address));
    }
    if (m_content.isSet()) {
        obj.insert(QString("Content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateDeliverabilityTestReport_request::getReportName() const {
    return m_report_name;
}
void OAICreateDeliverabilityTestReport_request::setReportName(const QString &report_name) {
    m_report_name = report_name;
    m_report_name_isSet = true;
}

bool OAICreateDeliverabilityTestReport_request::is_report_name_Set() const{
    return m_report_name_isSet;
}

bool OAICreateDeliverabilityTestReport_request::is_report_name_Valid() const{
    return m_report_name_isValid;
}

QString OAICreateDeliverabilityTestReport_request::getFromEmailAddress() const {
    return m_from_email_address;
}
void OAICreateDeliverabilityTestReport_request::setFromEmailAddress(const QString &from_email_address) {
    m_from_email_address = from_email_address;
    m_from_email_address_isSet = true;
}

bool OAICreateDeliverabilityTestReport_request::is_from_email_address_Set() const{
    return m_from_email_address_isSet;
}

bool OAICreateDeliverabilityTestReport_request::is_from_email_address_Valid() const{
    return m_from_email_address_isValid;
}

OAICreateDeliverabilityTestReport_request_Content OAICreateDeliverabilityTestReport_request::getContent() const {
    return m_content;
}
void OAICreateDeliverabilityTestReport_request::setContent(const OAICreateDeliverabilityTestReport_request_Content &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAICreateDeliverabilityTestReport_request::is_content_Set() const{
    return m_content_isSet;
}

bool OAICreateDeliverabilityTestReport_request::is_content_Valid() const{
    return m_content_isValid;
}

QList<OAITag> OAICreateDeliverabilityTestReport_request::getTags() const {
    return m_tags;
}
void OAICreateDeliverabilityTestReport_request::setTags(const QList<OAITag> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateDeliverabilityTestReport_request::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateDeliverabilityTestReport_request::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateDeliverabilityTestReport_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_report_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateDeliverabilityTestReport_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_from_email_address_isValid && m_content_isValid && true;
}

} // namespace OpenAPI
