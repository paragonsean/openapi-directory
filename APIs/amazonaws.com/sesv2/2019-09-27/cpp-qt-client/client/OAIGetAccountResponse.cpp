/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetAccountResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetAccountResponse::OAIGetAccountResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetAccountResponse::OAIGetAccountResponse() {
    this->initializeModel();
}

OAIGetAccountResponse::~OAIGetAccountResponse() {}

void OAIGetAccountResponse::initializeModel() {

    m_dedicated_ip_auto_warmup_enabled_isSet = false;
    m_dedicated_ip_auto_warmup_enabled_isValid = false;

    m_enforcement_status_isSet = false;
    m_enforcement_status_isValid = false;

    m_production_access_enabled_isSet = false;
    m_production_access_enabled_isValid = false;

    m_send_quota_isSet = false;
    m_send_quota_isValid = false;

    m_sending_enabled_isSet = false;
    m_sending_enabled_isValid = false;

    m_suppression_attributes_isSet = false;
    m_suppression_attributes_isValid = false;

    m_details_isSet = false;
    m_details_isValid = false;

    m_vdm_attributes_isSet = false;
    m_vdm_attributes_isValid = false;
}

void OAIGetAccountResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetAccountResponse::fromJsonObject(QJsonObject json) {

    m_dedicated_ip_auto_warmup_enabled_isValid = ::OpenAPI::fromJsonValue(m_dedicated_ip_auto_warmup_enabled, json[QString("DedicatedIpAutoWarmupEnabled")]);
    m_dedicated_ip_auto_warmup_enabled_isSet = !json[QString("DedicatedIpAutoWarmupEnabled")].isNull() && m_dedicated_ip_auto_warmup_enabled_isValid;

    m_enforcement_status_isValid = ::OpenAPI::fromJsonValue(m_enforcement_status, json[QString("EnforcementStatus")]);
    m_enforcement_status_isSet = !json[QString("EnforcementStatus")].isNull() && m_enforcement_status_isValid;

    m_production_access_enabled_isValid = ::OpenAPI::fromJsonValue(m_production_access_enabled, json[QString("ProductionAccessEnabled")]);
    m_production_access_enabled_isSet = !json[QString("ProductionAccessEnabled")].isNull() && m_production_access_enabled_isValid;

    m_send_quota_isValid = ::OpenAPI::fromJsonValue(m_send_quota, json[QString("SendQuota")]);
    m_send_quota_isSet = !json[QString("SendQuota")].isNull() && m_send_quota_isValid;

    m_sending_enabled_isValid = ::OpenAPI::fromJsonValue(m_sending_enabled, json[QString("SendingEnabled")]);
    m_sending_enabled_isSet = !json[QString("SendingEnabled")].isNull() && m_sending_enabled_isValid;

    m_suppression_attributes_isValid = ::OpenAPI::fromJsonValue(m_suppression_attributes, json[QString("SuppressionAttributes")]);
    m_suppression_attributes_isSet = !json[QString("SuppressionAttributes")].isNull() && m_suppression_attributes_isValid;

    m_details_isValid = ::OpenAPI::fromJsonValue(m_details, json[QString("Details")]);
    m_details_isSet = !json[QString("Details")].isNull() && m_details_isValid;

    m_vdm_attributes_isValid = ::OpenAPI::fromJsonValue(m_vdm_attributes, json[QString("VdmAttributes")]);
    m_vdm_attributes_isSet = !json[QString("VdmAttributes")].isNull() && m_vdm_attributes_isValid;
}

QString OAIGetAccountResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetAccountResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_dedicated_ip_auto_warmup_enabled_isSet) {
        obj.insert(QString("DedicatedIpAutoWarmupEnabled"), ::OpenAPI::toJsonValue(m_dedicated_ip_auto_warmup_enabled));
    }
    if (m_enforcement_status_isSet) {
        obj.insert(QString("EnforcementStatus"), ::OpenAPI::toJsonValue(m_enforcement_status));
    }
    if (m_production_access_enabled_isSet) {
        obj.insert(QString("ProductionAccessEnabled"), ::OpenAPI::toJsonValue(m_production_access_enabled));
    }
    if (m_send_quota.isSet()) {
        obj.insert(QString("SendQuota"), ::OpenAPI::toJsonValue(m_send_quota));
    }
    if (m_sending_enabled_isSet) {
        obj.insert(QString("SendingEnabled"), ::OpenAPI::toJsonValue(m_sending_enabled));
    }
    if (m_suppression_attributes.isSet()) {
        obj.insert(QString("SuppressionAttributes"), ::OpenAPI::toJsonValue(m_suppression_attributes));
    }
    if (m_details.isSet()) {
        obj.insert(QString("Details"), ::OpenAPI::toJsonValue(m_details));
    }
    if (m_vdm_attributes.isSet()) {
        obj.insert(QString("VdmAttributes"), ::OpenAPI::toJsonValue(m_vdm_attributes));
    }
    return obj;
}

bool OAIGetAccountResponse::getDedicatedIpAutoWarmupEnabled() const {
    return m_dedicated_ip_auto_warmup_enabled;
}
void OAIGetAccountResponse::setDedicatedIpAutoWarmupEnabled(const bool &dedicated_ip_auto_warmup_enabled) {
    m_dedicated_ip_auto_warmup_enabled = dedicated_ip_auto_warmup_enabled;
    m_dedicated_ip_auto_warmup_enabled_isSet = true;
}

bool OAIGetAccountResponse::is_dedicated_ip_auto_warmup_enabled_Set() const{
    return m_dedicated_ip_auto_warmup_enabled_isSet;
}

bool OAIGetAccountResponse::is_dedicated_ip_auto_warmup_enabled_Valid() const{
    return m_dedicated_ip_auto_warmup_enabled_isValid;
}

QString OAIGetAccountResponse::getEnforcementStatus() const {
    return m_enforcement_status;
}
void OAIGetAccountResponse::setEnforcementStatus(const QString &enforcement_status) {
    m_enforcement_status = enforcement_status;
    m_enforcement_status_isSet = true;
}

bool OAIGetAccountResponse::is_enforcement_status_Set() const{
    return m_enforcement_status_isSet;
}

bool OAIGetAccountResponse::is_enforcement_status_Valid() const{
    return m_enforcement_status_isValid;
}

bool OAIGetAccountResponse::getProductionAccessEnabled() const {
    return m_production_access_enabled;
}
void OAIGetAccountResponse::setProductionAccessEnabled(const bool &production_access_enabled) {
    m_production_access_enabled = production_access_enabled;
    m_production_access_enabled_isSet = true;
}

bool OAIGetAccountResponse::is_production_access_enabled_Set() const{
    return m_production_access_enabled_isSet;
}

bool OAIGetAccountResponse::is_production_access_enabled_Valid() const{
    return m_production_access_enabled_isValid;
}

OAIGetAccountResponse_SendQuota OAIGetAccountResponse::getSendQuota() const {
    return m_send_quota;
}
void OAIGetAccountResponse::setSendQuota(const OAIGetAccountResponse_SendQuota &send_quota) {
    m_send_quota = send_quota;
    m_send_quota_isSet = true;
}

bool OAIGetAccountResponse::is_send_quota_Set() const{
    return m_send_quota_isSet;
}

bool OAIGetAccountResponse::is_send_quota_Valid() const{
    return m_send_quota_isValid;
}

bool OAIGetAccountResponse::getSendingEnabled() const {
    return m_sending_enabled;
}
void OAIGetAccountResponse::setSendingEnabled(const bool &sending_enabled) {
    m_sending_enabled = sending_enabled;
    m_sending_enabled_isSet = true;
}

bool OAIGetAccountResponse::is_sending_enabled_Set() const{
    return m_sending_enabled_isSet;
}

bool OAIGetAccountResponse::is_sending_enabled_Valid() const{
    return m_sending_enabled_isValid;
}

OAIGetAccountResponse_SuppressionAttributes OAIGetAccountResponse::getSuppressionAttributes() const {
    return m_suppression_attributes;
}
void OAIGetAccountResponse::setSuppressionAttributes(const OAIGetAccountResponse_SuppressionAttributes &suppression_attributes) {
    m_suppression_attributes = suppression_attributes;
    m_suppression_attributes_isSet = true;
}

bool OAIGetAccountResponse::is_suppression_attributes_Set() const{
    return m_suppression_attributes_isSet;
}

bool OAIGetAccountResponse::is_suppression_attributes_Valid() const{
    return m_suppression_attributes_isValid;
}

OAIGetAccountResponse_Details OAIGetAccountResponse::getDetails() const {
    return m_details;
}
void OAIGetAccountResponse::setDetails(const OAIGetAccountResponse_Details &details) {
    m_details = details;
    m_details_isSet = true;
}

bool OAIGetAccountResponse::is_details_Set() const{
    return m_details_isSet;
}

bool OAIGetAccountResponse::is_details_Valid() const{
    return m_details_isValid;
}

OAIGetAccountResponse_VdmAttributes OAIGetAccountResponse::getVdmAttributes() const {
    return m_vdm_attributes;
}
void OAIGetAccountResponse::setVdmAttributes(const OAIGetAccountResponse_VdmAttributes &vdm_attributes) {
    m_vdm_attributes = vdm_attributes;
    m_vdm_attributes_isSet = true;
}

bool OAIGetAccountResponse::is_vdm_attributes_Set() const{
    return m_vdm_attributes_isSet;
}

bool OAIGetAccountResponse::is_vdm_attributes_Valid() const{
    return m_vdm_attributes_isValid;
}

bool OAIGetAccountResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dedicated_ip_auto_warmup_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enforcement_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_production_access_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_quota.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sending_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suppression_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vdm_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetAccountResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
