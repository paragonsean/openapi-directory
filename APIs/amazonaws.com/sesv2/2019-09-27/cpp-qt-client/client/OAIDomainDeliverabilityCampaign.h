/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDomainDeliverabilityCampaign.h
 *
 * An object that contains the deliverability data for a specific campaign. This data is available for a campaign only if the campaign sent email by using a domain that the Deliverability dashboard is enabled for (&lt;code&gt;PutDeliverabilityDashboardOption&lt;/code&gt; operation).
 */

#ifndef OAIDomainDeliverabilityCampaign_H
#define OAIDomainDeliverabilityCampaign_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDomainDeliverabilityCampaign : public OAIObject {
public:
    OAIDomainDeliverabilityCampaign();
    OAIDomainDeliverabilityCampaign(QString json);
    ~OAIDomainDeliverabilityCampaign() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCampaignId() const;
    void setCampaignId(const QString &campaign_id);
    bool is_campaign_id_Set() const;
    bool is_campaign_id_Valid() const;

    QString getImageUrl() const;
    void setImageUrl(const QString &image_url);
    bool is_image_url_Set() const;
    bool is_image_url_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QString getFromAddress() const;
    void setFromAddress(const QString &from_address);
    bool is_from_address_Set() const;
    bool is_from_address_Valid() const;

    QList getSendingIps() const;
    void setSendingIps(const QList &sending_ips);
    bool is_sending_ips_Set() const;
    bool is_sending_ips_Valid() const;

    QDateTime getFirstSeenDateTime() const;
    void setFirstSeenDateTime(const QDateTime &first_seen_date_time);
    bool is_first_seen_date_time_Set() const;
    bool is_first_seen_date_time_Valid() const;

    QDateTime getLastSeenDateTime() const;
    void setLastSeenDateTime(const QDateTime &last_seen_date_time);
    bool is_last_seen_date_time_Set() const;
    bool is_last_seen_date_time_Valid() const;

    qint32 getInboxCount() const;
    void setInboxCount(const qint32 &inbox_count);
    bool is_inbox_count_Set() const;
    bool is_inbox_count_Valid() const;

    qint32 getSpamCount() const;
    void setSpamCount(const qint32 &spam_count);
    bool is_spam_count_Set() const;
    bool is_spam_count_Valid() const;

    double getReadRate() const;
    void setReadRate(const double &read_rate);
    bool is_read_rate_Set() const;
    bool is_read_rate_Valid() const;

    double getDeleteRate() const;
    void setDeleteRate(const double &delete_rate);
    bool is_delete_rate_Set() const;
    bool is_delete_rate_Valid() const;

    double getReadDeleteRate() const;
    void setReadDeleteRate(const double &read_delete_rate);
    bool is_read_delete_rate_Set() const;
    bool is_read_delete_rate_Valid() const;

    qint32 getProjectedVolume() const;
    void setProjectedVolume(const qint32 &projected_volume);
    bool is_projected_volume_Set() const;
    bool is_projected_volume_Valid() const;

    QList getEsps() const;
    void setEsps(const QList &esps);
    bool is_esps_Set() const;
    bool is_esps_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_campaign_id;
    bool m_campaign_id_isSet;
    bool m_campaign_id_isValid;

    QString m_image_url;
    bool m_image_url_isSet;
    bool m_image_url_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QString m_from_address;
    bool m_from_address_isSet;
    bool m_from_address_isValid;

    QList m_sending_ips;
    bool m_sending_ips_isSet;
    bool m_sending_ips_isValid;

    QDateTime m_first_seen_date_time;
    bool m_first_seen_date_time_isSet;
    bool m_first_seen_date_time_isValid;

    QDateTime m_last_seen_date_time;
    bool m_last_seen_date_time_isSet;
    bool m_last_seen_date_time_isValid;

    qint32 m_inbox_count;
    bool m_inbox_count_isSet;
    bool m_inbox_count_isValid;

    qint32 m_spam_count;
    bool m_spam_count_isSet;
    bool m_spam_count_isValid;

    double m_read_rate;
    bool m_read_rate_isSet;
    bool m_read_rate_isValid;

    double m_delete_rate;
    bool m_delete_rate_isSet;
    bool m_delete_rate_isValid;

    double m_read_delete_rate;
    bool m_read_delete_rate_isSet;
    bool m_read_delete_rate_isValid;

    qint32 m_projected_volume;
    bool m_projected_volume_isSet;
    bool m_projected_volume_isValid;

    QList m_esps;
    bool m_esps_isSet;
    bool m_esps_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDomainDeliverabilityCampaign)

#endif // OAIDomainDeliverabilityCampaign_H
