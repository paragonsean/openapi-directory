/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutAccountDetailsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutAccountDetailsRequest::OAIPutAccountDetailsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutAccountDetailsRequest::OAIPutAccountDetailsRequest() {
    this->initializeModel();
}

OAIPutAccountDetailsRequest::~OAIPutAccountDetailsRequest() {}

void OAIPutAccountDetailsRequest::initializeModel() {

    m_mail_type_isSet = false;
    m_mail_type_isValid = false;

    m_website_url_isSet = false;
    m_website_url_isValid = false;

    m_contact_language_isSet = false;
    m_contact_language_isValid = false;

    m_use_case_description_isSet = false;
    m_use_case_description_isValid = false;

    m_additional_contact_email_addresses_isSet = false;
    m_additional_contact_email_addresses_isValid = false;

    m_production_access_enabled_isSet = false;
    m_production_access_enabled_isValid = false;
}

void OAIPutAccountDetailsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutAccountDetailsRequest::fromJsonObject(QJsonObject json) {

    m_mail_type_isValid = ::OpenAPI::fromJsonValue(m_mail_type, json[QString("MailType")]);
    m_mail_type_isSet = !json[QString("MailType")].isNull() && m_mail_type_isValid;

    m_website_url_isValid = ::OpenAPI::fromJsonValue(m_website_url, json[QString("WebsiteURL")]);
    m_website_url_isSet = !json[QString("WebsiteURL")].isNull() && m_website_url_isValid;

    m_contact_language_isValid = ::OpenAPI::fromJsonValue(m_contact_language, json[QString("ContactLanguage")]);
    m_contact_language_isSet = !json[QString("ContactLanguage")].isNull() && m_contact_language_isValid;

    m_use_case_description_isValid = ::OpenAPI::fromJsonValue(m_use_case_description, json[QString("UseCaseDescription")]);
    m_use_case_description_isSet = !json[QString("UseCaseDescription")].isNull() && m_use_case_description_isValid;

    m_additional_contact_email_addresses_isValid = ::OpenAPI::fromJsonValue(m_additional_contact_email_addresses, json[QString("AdditionalContactEmailAddresses")]);
    m_additional_contact_email_addresses_isSet = !json[QString("AdditionalContactEmailAddresses")].isNull() && m_additional_contact_email_addresses_isValid;

    m_production_access_enabled_isValid = ::OpenAPI::fromJsonValue(m_production_access_enabled, json[QString("ProductionAccessEnabled")]);
    m_production_access_enabled_isSet = !json[QString("ProductionAccessEnabled")].isNull() && m_production_access_enabled_isValid;
}

QString OAIPutAccountDetailsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutAccountDetailsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_mail_type.isSet()) {
        obj.insert(QString("MailType"), ::OpenAPI::toJsonValue(m_mail_type));
    }
    if (m_website_url_isSet) {
        obj.insert(QString("WebsiteURL"), ::OpenAPI::toJsonValue(m_website_url));
    }
    if (m_contact_language.isSet()) {
        obj.insert(QString("ContactLanguage"), ::OpenAPI::toJsonValue(m_contact_language));
    }
    if (m_use_case_description_isSet) {
        obj.insert(QString("UseCaseDescription"), ::OpenAPI::toJsonValue(m_use_case_description));
    }
    if (m_additional_contact_email_addresses.isSet()) {
        obj.insert(QString("AdditionalContactEmailAddresses"), ::OpenAPI::toJsonValue(m_additional_contact_email_addresses));
    }
    if (m_production_access_enabled_isSet) {
        obj.insert(QString("ProductionAccessEnabled"), ::OpenAPI::toJsonValue(m_production_access_enabled));
    }
    return obj;
}

OAIMailType OAIPutAccountDetailsRequest::getMailType() const {
    return m_mail_type;
}
void OAIPutAccountDetailsRequest::setMailType(const OAIMailType &mail_type) {
    m_mail_type = mail_type;
    m_mail_type_isSet = true;
}

bool OAIPutAccountDetailsRequest::is_mail_type_Set() const{
    return m_mail_type_isSet;
}

bool OAIPutAccountDetailsRequest::is_mail_type_Valid() const{
    return m_mail_type_isValid;
}

QString OAIPutAccountDetailsRequest::getWebsiteUrl() const {
    return m_website_url;
}
void OAIPutAccountDetailsRequest::setWebsiteUrl(const QString &website_url) {
    m_website_url = website_url;
    m_website_url_isSet = true;
}

bool OAIPutAccountDetailsRequest::is_website_url_Set() const{
    return m_website_url_isSet;
}

bool OAIPutAccountDetailsRequest::is_website_url_Valid() const{
    return m_website_url_isValid;
}

OAIContactLanguage OAIPutAccountDetailsRequest::getContactLanguage() const {
    return m_contact_language;
}
void OAIPutAccountDetailsRequest::setContactLanguage(const OAIContactLanguage &contact_language) {
    m_contact_language = contact_language;
    m_contact_language_isSet = true;
}

bool OAIPutAccountDetailsRequest::is_contact_language_Set() const{
    return m_contact_language_isSet;
}

bool OAIPutAccountDetailsRequest::is_contact_language_Valid() const{
    return m_contact_language_isValid;
}

QString OAIPutAccountDetailsRequest::getUseCaseDescription() const {
    return m_use_case_description;
}
void OAIPutAccountDetailsRequest::setUseCaseDescription(const QString &use_case_description) {
    m_use_case_description = use_case_description;
    m_use_case_description_isSet = true;
}

bool OAIPutAccountDetailsRequest::is_use_case_description_Set() const{
    return m_use_case_description_isSet;
}

bool OAIPutAccountDetailsRequest::is_use_case_description_Valid() const{
    return m_use_case_description_isValid;
}

QList OAIPutAccountDetailsRequest::getAdditionalContactEmailAddresses() const {
    return m_additional_contact_email_addresses;
}
void OAIPutAccountDetailsRequest::setAdditionalContactEmailAddresses(const QList &additional_contact_email_addresses) {
    m_additional_contact_email_addresses = additional_contact_email_addresses;
    m_additional_contact_email_addresses_isSet = true;
}

bool OAIPutAccountDetailsRequest::is_additional_contact_email_addresses_Set() const{
    return m_additional_contact_email_addresses_isSet;
}

bool OAIPutAccountDetailsRequest::is_additional_contact_email_addresses_Valid() const{
    return m_additional_contact_email_addresses_isValid;
}

bool OAIPutAccountDetailsRequest::getProductionAccessEnabled() const {
    return m_production_access_enabled;
}
void OAIPutAccountDetailsRequest::setProductionAccessEnabled(const bool &production_access_enabled) {
    m_production_access_enabled = production_access_enabled;
    m_production_access_enabled_isSet = true;
}

bool OAIPutAccountDetailsRequest::is_production_access_enabled_Set() const{
    return m_production_access_enabled_isSet;
}

bool OAIPutAccountDetailsRequest::is_production_access_enabled_Valid() const{
    return m_production_access_enabled_isValid;
}

bool OAIPutAccountDetailsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mail_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_language.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_case_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_contact_email_addresses.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_production_access_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutAccountDetailsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_mail_type_isValid && m_website_url_isValid && m_use_case_description_isValid && true;
}

} // namespace OpenAPI
