/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateConfigurationSet_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateConfigurationSet_request::OAICreateConfigurationSet_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateConfigurationSet_request::OAICreateConfigurationSet_request() {
    this->initializeModel();
}

OAICreateConfigurationSet_request::~OAICreateConfigurationSet_request() {}

void OAICreateConfigurationSet_request::initializeModel() {

    m_configuration_set_name_isSet = false;
    m_configuration_set_name_isValid = false;

    m_tracking_options_isSet = false;
    m_tracking_options_isValid = false;

    m_delivery_options_isSet = false;
    m_delivery_options_isValid = false;

    m_reputation_options_isSet = false;
    m_reputation_options_isValid = false;

    m_sending_options_isSet = false;
    m_sending_options_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_suppression_options_isSet = false;
    m_suppression_options_isValid = false;

    m_vdm_options_isSet = false;
    m_vdm_options_isValid = false;
}

void OAICreateConfigurationSet_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateConfigurationSet_request::fromJsonObject(QJsonObject json) {

    m_configuration_set_name_isValid = ::OpenAPI::fromJsonValue(m_configuration_set_name, json[QString("ConfigurationSetName")]);
    m_configuration_set_name_isSet = !json[QString("ConfigurationSetName")].isNull() && m_configuration_set_name_isValid;

    m_tracking_options_isValid = ::OpenAPI::fromJsonValue(m_tracking_options, json[QString("TrackingOptions")]);
    m_tracking_options_isSet = !json[QString("TrackingOptions")].isNull() && m_tracking_options_isValid;

    m_delivery_options_isValid = ::OpenAPI::fromJsonValue(m_delivery_options, json[QString("DeliveryOptions")]);
    m_delivery_options_isSet = !json[QString("DeliveryOptions")].isNull() && m_delivery_options_isValid;

    m_reputation_options_isValid = ::OpenAPI::fromJsonValue(m_reputation_options, json[QString("ReputationOptions")]);
    m_reputation_options_isSet = !json[QString("ReputationOptions")].isNull() && m_reputation_options_isValid;

    m_sending_options_isValid = ::OpenAPI::fromJsonValue(m_sending_options, json[QString("SendingOptions")]);
    m_sending_options_isSet = !json[QString("SendingOptions")].isNull() && m_sending_options_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_suppression_options_isValid = ::OpenAPI::fromJsonValue(m_suppression_options, json[QString("SuppressionOptions")]);
    m_suppression_options_isSet = !json[QString("SuppressionOptions")].isNull() && m_suppression_options_isValid;

    m_vdm_options_isValid = ::OpenAPI::fromJsonValue(m_vdm_options, json[QString("VdmOptions")]);
    m_vdm_options_isSet = !json[QString("VdmOptions")].isNull() && m_vdm_options_isValid;
}

QString OAICreateConfigurationSet_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateConfigurationSet_request::asJsonObject() const {
    QJsonObject obj;
    if (m_configuration_set_name_isSet) {
        obj.insert(QString("ConfigurationSetName"), ::OpenAPI::toJsonValue(m_configuration_set_name));
    }
    if (m_tracking_options.isSet()) {
        obj.insert(QString("TrackingOptions"), ::OpenAPI::toJsonValue(m_tracking_options));
    }
    if (m_delivery_options.isSet()) {
        obj.insert(QString("DeliveryOptions"), ::OpenAPI::toJsonValue(m_delivery_options));
    }
    if (m_reputation_options.isSet()) {
        obj.insert(QString("ReputationOptions"), ::OpenAPI::toJsonValue(m_reputation_options));
    }
    if (m_sending_options.isSet()) {
        obj.insert(QString("SendingOptions"), ::OpenAPI::toJsonValue(m_sending_options));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_suppression_options.isSet()) {
        obj.insert(QString("SuppressionOptions"), ::OpenAPI::toJsonValue(m_suppression_options));
    }
    if (m_vdm_options.isSet()) {
        obj.insert(QString("VdmOptions"), ::OpenAPI::toJsonValue(m_vdm_options));
    }
    return obj;
}

QString OAICreateConfigurationSet_request::getConfigurationSetName() const {
    return m_configuration_set_name;
}
void OAICreateConfigurationSet_request::setConfigurationSetName(const QString &configuration_set_name) {
    m_configuration_set_name = configuration_set_name;
    m_configuration_set_name_isSet = true;
}

bool OAICreateConfigurationSet_request::is_configuration_set_name_Set() const{
    return m_configuration_set_name_isSet;
}

bool OAICreateConfigurationSet_request::is_configuration_set_name_Valid() const{
    return m_configuration_set_name_isValid;
}

OAICreateConfigurationSet_request_TrackingOptions OAICreateConfigurationSet_request::getTrackingOptions() const {
    return m_tracking_options;
}
void OAICreateConfigurationSet_request::setTrackingOptions(const OAICreateConfigurationSet_request_TrackingOptions &tracking_options) {
    m_tracking_options = tracking_options;
    m_tracking_options_isSet = true;
}

bool OAICreateConfigurationSet_request::is_tracking_options_Set() const{
    return m_tracking_options_isSet;
}

bool OAICreateConfigurationSet_request::is_tracking_options_Valid() const{
    return m_tracking_options_isValid;
}

OAICreateConfigurationSet_request_DeliveryOptions OAICreateConfigurationSet_request::getDeliveryOptions() const {
    return m_delivery_options;
}
void OAICreateConfigurationSet_request::setDeliveryOptions(const OAICreateConfigurationSet_request_DeliveryOptions &delivery_options) {
    m_delivery_options = delivery_options;
    m_delivery_options_isSet = true;
}

bool OAICreateConfigurationSet_request::is_delivery_options_Set() const{
    return m_delivery_options_isSet;
}

bool OAICreateConfigurationSet_request::is_delivery_options_Valid() const{
    return m_delivery_options_isValid;
}

OAICreateConfigurationSet_request_ReputationOptions OAICreateConfigurationSet_request::getReputationOptions() const {
    return m_reputation_options;
}
void OAICreateConfigurationSet_request::setReputationOptions(const OAICreateConfigurationSet_request_ReputationOptions &reputation_options) {
    m_reputation_options = reputation_options;
    m_reputation_options_isSet = true;
}

bool OAICreateConfigurationSet_request::is_reputation_options_Set() const{
    return m_reputation_options_isSet;
}

bool OAICreateConfigurationSet_request::is_reputation_options_Valid() const{
    return m_reputation_options_isValid;
}

OAICreateConfigurationSet_request_SendingOptions OAICreateConfigurationSet_request::getSendingOptions() const {
    return m_sending_options;
}
void OAICreateConfigurationSet_request::setSendingOptions(const OAICreateConfigurationSet_request_SendingOptions &sending_options) {
    m_sending_options = sending_options;
    m_sending_options_isSet = true;
}

bool OAICreateConfigurationSet_request::is_sending_options_Set() const{
    return m_sending_options_isSet;
}

bool OAICreateConfigurationSet_request::is_sending_options_Valid() const{
    return m_sending_options_isValid;
}

QList<OAITag> OAICreateConfigurationSet_request::getTags() const {
    return m_tags;
}
void OAICreateConfigurationSet_request::setTags(const QList<OAITag> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateConfigurationSet_request::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateConfigurationSet_request::is_tags_Valid() const{
    return m_tags_isValid;
}

OAICreateConfigurationSet_request_SuppressionOptions OAICreateConfigurationSet_request::getSuppressionOptions() const {
    return m_suppression_options;
}
void OAICreateConfigurationSet_request::setSuppressionOptions(const OAICreateConfigurationSet_request_SuppressionOptions &suppression_options) {
    m_suppression_options = suppression_options;
    m_suppression_options_isSet = true;
}

bool OAICreateConfigurationSet_request::is_suppression_options_Set() const{
    return m_suppression_options_isSet;
}

bool OAICreateConfigurationSet_request::is_suppression_options_Valid() const{
    return m_suppression_options_isValid;
}

OAICreateConfigurationSet_request_VdmOptions OAICreateConfigurationSet_request::getVdmOptions() const {
    return m_vdm_options;
}
void OAICreateConfigurationSet_request::setVdmOptions(const OAICreateConfigurationSet_request_VdmOptions &vdm_options) {
    m_vdm_options = vdm_options;
    m_vdm_options_isSet = true;
}

bool OAICreateConfigurationSet_request::is_vdm_options_Set() const{
    return m_vdm_options_isSet;
}

bool OAICreateConfigurationSet_request::is_vdm_options_Valid() const{
    return m_vdm_options_isValid;
}

bool OAICreateConfigurationSet_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configuration_set_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reputation_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sending_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_suppression_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vdm_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateConfigurationSet_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_configuration_set_name_isValid && true;
}

} // namespace OpenAPI
