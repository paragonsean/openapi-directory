/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISendEmailRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISendEmailRequest::OAISendEmailRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISendEmailRequest::OAISendEmailRequest() {
    this->initializeModel();
}

OAISendEmailRequest::~OAISendEmailRequest() {}

void OAISendEmailRequest::initializeModel() {

    m_from_email_address_isSet = false;
    m_from_email_address_isValid = false;

    m_from_email_address_identity_arn_isSet = false;
    m_from_email_address_identity_arn_isValid = false;

    m_destination_isSet = false;
    m_destination_isValid = false;

    m_reply_to_addresses_isSet = false;
    m_reply_to_addresses_isValid = false;

    m_feedback_forwarding_email_address_isSet = false;
    m_feedback_forwarding_email_address_isValid = false;

    m_feedback_forwarding_email_address_identity_arn_isSet = false;
    m_feedback_forwarding_email_address_identity_arn_isValid = false;

    m_content_isSet = false;
    m_content_isValid = false;

    m_email_tags_isSet = false;
    m_email_tags_isValid = false;

    m_configuration_set_name_isSet = false;
    m_configuration_set_name_isValid = false;

    m_list_management_options_isSet = false;
    m_list_management_options_isValid = false;
}

void OAISendEmailRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISendEmailRequest::fromJsonObject(QJsonObject json) {

    m_from_email_address_isValid = ::OpenAPI::fromJsonValue(m_from_email_address, json[QString("FromEmailAddress")]);
    m_from_email_address_isSet = !json[QString("FromEmailAddress")].isNull() && m_from_email_address_isValid;

    m_from_email_address_identity_arn_isValid = ::OpenAPI::fromJsonValue(m_from_email_address_identity_arn, json[QString("FromEmailAddressIdentityArn")]);
    m_from_email_address_identity_arn_isSet = !json[QString("FromEmailAddressIdentityArn")].isNull() && m_from_email_address_identity_arn_isValid;

    m_destination_isValid = ::OpenAPI::fromJsonValue(m_destination, json[QString("Destination")]);
    m_destination_isSet = !json[QString("Destination")].isNull() && m_destination_isValid;

    m_reply_to_addresses_isValid = ::OpenAPI::fromJsonValue(m_reply_to_addresses, json[QString("ReplyToAddresses")]);
    m_reply_to_addresses_isSet = !json[QString("ReplyToAddresses")].isNull() && m_reply_to_addresses_isValid;

    m_feedback_forwarding_email_address_isValid = ::OpenAPI::fromJsonValue(m_feedback_forwarding_email_address, json[QString("FeedbackForwardingEmailAddress")]);
    m_feedback_forwarding_email_address_isSet = !json[QString("FeedbackForwardingEmailAddress")].isNull() && m_feedback_forwarding_email_address_isValid;

    m_feedback_forwarding_email_address_identity_arn_isValid = ::OpenAPI::fromJsonValue(m_feedback_forwarding_email_address_identity_arn, json[QString("FeedbackForwardingEmailAddressIdentityArn")]);
    m_feedback_forwarding_email_address_identity_arn_isSet = !json[QString("FeedbackForwardingEmailAddressIdentityArn")].isNull() && m_feedback_forwarding_email_address_identity_arn_isValid;

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("Content")]);
    m_content_isSet = !json[QString("Content")].isNull() && m_content_isValid;

    m_email_tags_isValid = ::OpenAPI::fromJsonValue(m_email_tags, json[QString("EmailTags")]);
    m_email_tags_isSet = !json[QString("EmailTags")].isNull() && m_email_tags_isValid;

    m_configuration_set_name_isValid = ::OpenAPI::fromJsonValue(m_configuration_set_name, json[QString("ConfigurationSetName")]);
    m_configuration_set_name_isSet = !json[QString("ConfigurationSetName")].isNull() && m_configuration_set_name_isValid;

    m_list_management_options_isValid = ::OpenAPI::fromJsonValue(m_list_management_options, json[QString("ListManagementOptions")]);
    m_list_management_options_isSet = !json[QString("ListManagementOptions")].isNull() && m_list_management_options_isValid;
}

QString OAISendEmailRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISendEmailRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_from_email_address_isSet) {
        obj.insert(QString("FromEmailAddress"), ::OpenAPI::toJsonValue(m_from_email_address));
    }
    if (m_from_email_address_identity_arn_isSet) {
        obj.insert(QString("FromEmailAddressIdentityArn"), ::OpenAPI::toJsonValue(m_from_email_address_identity_arn));
    }
    if (m_destination.isSet()) {
        obj.insert(QString("Destination"), ::OpenAPI::toJsonValue(m_destination));
    }
    if (m_reply_to_addresses.isSet()) {
        obj.insert(QString("ReplyToAddresses"), ::OpenAPI::toJsonValue(m_reply_to_addresses));
    }
    if (m_feedback_forwarding_email_address_isSet) {
        obj.insert(QString("FeedbackForwardingEmailAddress"), ::OpenAPI::toJsonValue(m_feedback_forwarding_email_address));
    }
    if (m_feedback_forwarding_email_address_identity_arn_isSet) {
        obj.insert(QString("FeedbackForwardingEmailAddressIdentityArn"), ::OpenAPI::toJsonValue(m_feedback_forwarding_email_address_identity_arn));
    }
    if (m_content.isSet()) {
        obj.insert(QString("Content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_email_tags.isSet()) {
        obj.insert(QString("EmailTags"), ::OpenAPI::toJsonValue(m_email_tags));
    }
    if (m_configuration_set_name_isSet) {
        obj.insert(QString("ConfigurationSetName"), ::OpenAPI::toJsonValue(m_configuration_set_name));
    }
    if (m_list_management_options.isSet()) {
        obj.insert(QString("ListManagementOptions"), ::OpenAPI::toJsonValue(m_list_management_options));
    }
    return obj;
}

QString OAISendEmailRequest::getFromEmailAddress() const {
    return m_from_email_address;
}
void OAISendEmailRequest::setFromEmailAddress(const QString &from_email_address) {
    m_from_email_address = from_email_address;
    m_from_email_address_isSet = true;
}

bool OAISendEmailRequest::is_from_email_address_Set() const{
    return m_from_email_address_isSet;
}

bool OAISendEmailRequest::is_from_email_address_Valid() const{
    return m_from_email_address_isValid;
}

QString OAISendEmailRequest::getFromEmailAddressIdentityArn() const {
    return m_from_email_address_identity_arn;
}
void OAISendEmailRequest::setFromEmailAddressIdentityArn(const QString &from_email_address_identity_arn) {
    m_from_email_address_identity_arn = from_email_address_identity_arn;
    m_from_email_address_identity_arn_isSet = true;
}

bool OAISendEmailRequest::is_from_email_address_identity_arn_Set() const{
    return m_from_email_address_identity_arn_isSet;
}

bool OAISendEmailRequest::is_from_email_address_identity_arn_Valid() const{
    return m_from_email_address_identity_arn_isValid;
}

OAISendEmailRequest_Destination OAISendEmailRequest::getDestination() const {
    return m_destination;
}
void OAISendEmailRequest::setDestination(const OAISendEmailRequest_Destination &destination) {
    m_destination = destination;
    m_destination_isSet = true;
}

bool OAISendEmailRequest::is_destination_Set() const{
    return m_destination_isSet;
}

bool OAISendEmailRequest::is_destination_Valid() const{
    return m_destination_isValid;
}

QList OAISendEmailRequest::getReplyToAddresses() const {
    return m_reply_to_addresses;
}
void OAISendEmailRequest::setReplyToAddresses(const QList &reply_to_addresses) {
    m_reply_to_addresses = reply_to_addresses;
    m_reply_to_addresses_isSet = true;
}

bool OAISendEmailRequest::is_reply_to_addresses_Set() const{
    return m_reply_to_addresses_isSet;
}

bool OAISendEmailRequest::is_reply_to_addresses_Valid() const{
    return m_reply_to_addresses_isValid;
}

QString OAISendEmailRequest::getFeedbackForwardingEmailAddress() const {
    return m_feedback_forwarding_email_address;
}
void OAISendEmailRequest::setFeedbackForwardingEmailAddress(const QString &feedback_forwarding_email_address) {
    m_feedback_forwarding_email_address = feedback_forwarding_email_address;
    m_feedback_forwarding_email_address_isSet = true;
}

bool OAISendEmailRequest::is_feedback_forwarding_email_address_Set() const{
    return m_feedback_forwarding_email_address_isSet;
}

bool OAISendEmailRequest::is_feedback_forwarding_email_address_Valid() const{
    return m_feedback_forwarding_email_address_isValid;
}

QString OAISendEmailRequest::getFeedbackForwardingEmailAddressIdentityArn() const {
    return m_feedback_forwarding_email_address_identity_arn;
}
void OAISendEmailRequest::setFeedbackForwardingEmailAddressIdentityArn(const QString &feedback_forwarding_email_address_identity_arn) {
    m_feedback_forwarding_email_address_identity_arn = feedback_forwarding_email_address_identity_arn;
    m_feedback_forwarding_email_address_identity_arn_isSet = true;
}

bool OAISendEmailRequest::is_feedback_forwarding_email_address_identity_arn_Set() const{
    return m_feedback_forwarding_email_address_identity_arn_isSet;
}

bool OAISendEmailRequest::is_feedback_forwarding_email_address_identity_arn_Valid() const{
    return m_feedback_forwarding_email_address_identity_arn_isValid;
}

OAISendEmailRequest_Content OAISendEmailRequest::getContent() const {
    return m_content;
}
void OAISendEmailRequest::setContent(const OAISendEmailRequest_Content &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAISendEmailRequest::is_content_Set() const{
    return m_content_isSet;
}

bool OAISendEmailRequest::is_content_Valid() const{
    return m_content_isValid;
}

QList OAISendEmailRequest::getEmailTags() const {
    return m_email_tags;
}
void OAISendEmailRequest::setEmailTags(const QList &email_tags) {
    m_email_tags = email_tags;
    m_email_tags_isSet = true;
}

bool OAISendEmailRequest::is_email_tags_Set() const{
    return m_email_tags_isSet;
}

bool OAISendEmailRequest::is_email_tags_Valid() const{
    return m_email_tags_isValid;
}

QString OAISendEmailRequest::getConfigurationSetName() const {
    return m_configuration_set_name;
}
void OAISendEmailRequest::setConfigurationSetName(const QString &configuration_set_name) {
    m_configuration_set_name = configuration_set_name;
    m_configuration_set_name_isSet = true;
}

bool OAISendEmailRequest::is_configuration_set_name_Set() const{
    return m_configuration_set_name_isSet;
}

bool OAISendEmailRequest::is_configuration_set_name_Valid() const{
    return m_configuration_set_name_isValid;
}

OAISendEmailRequest_ListManagementOptions OAISendEmailRequest::getListManagementOptions() const {
    return m_list_management_options;
}
void OAISendEmailRequest::setListManagementOptions(const OAISendEmailRequest_ListManagementOptions &list_management_options) {
    m_list_management_options = list_management_options;
    m_list_management_options_isSet = true;
}

bool OAISendEmailRequest::is_list_management_options_Set() const{
    return m_list_management_options_isSet;
}

bool OAISendEmailRequest::is_list_management_options_Valid() const{
    return m_list_management_options_isValid;
}

bool OAISendEmailRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_from_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_email_address_identity_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reply_to_addresses.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_feedback_forwarding_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feedback_forwarding_email_address_identity_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_configuration_set_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_management_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISendEmailRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_content_isValid && true;
}

} // namespace OpenAPI
