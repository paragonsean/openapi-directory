/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventDestination.h
 *
 * In the Amazon SES API v2, &lt;i&gt;events&lt;/i&gt; include message sends, deliveries, opens, clicks, bounces, complaints and delivery delays. &lt;i&gt;Event destinations&lt;/i&gt; are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.
 */

#ifndef OAIEventDestination_H
#define OAIEventDestination_H

#include <QJsonObject>

#include "OAICreateConfigurationSetEventDestination_request_EventDestination_CloudWatchDestination.h"
#include "OAICreateConfigurationSetEventDestination_request_EventDestination_KinesisFirehoseDestination.h"
#include "OAICreateConfigurationSetEventDestination_request_EventDestination_PinpointDestination.h"
#include "OAICreateConfigurationSetEventDestination_request_EventDestination_SnsDestination.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateConfigurationSetEventDestination_request_EventDestination_KinesisFirehoseDestination;
class OAICreateConfigurationSetEventDestination_request_EventDestination_CloudWatchDestination;
class OAICreateConfigurationSetEventDestination_request_EventDestination_SnsDestination;
class OAICreateConfigurationSetEventDestination_request_EventDestination_PinpointDestination;

class OAIEventDestination : public OAIObject {
public:
    OAIEventDestination();
    OAIEventDestination(QString json);
    ~OAIEventDestination() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool getEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QList getMatchingEventTypes() const;
    void setMatchingEventTypes(const QList &matching_event_types);
    bool is_matching_event_types_Set() const;
    bool is_matching_event_types_Valid() const;

    OAICreateConfigurationSetEventDestination_request_EventDestination_KinesisFirehoseDestination getKinesisFirehoseDestination() const;
    void setKinesisFirehoseDestination(const OAICreateConfigurationSetEventDestination_request_EventDestination_KinesisFirehoseDestination &kinesis_firehose_destination);
    bool is_kinesis_firehose_destination_Set() const;
    bool is_kinesis_firehose_destination_Valid() const;

    OAICreateConfigurationSetEventDestination_request_EventDestination_CloudWatchDestination getCloudWatchDestination() const;
    void setCloudWatchDestination(const OAICreateConfigurationSetEventDestination_request_EventDestination_CloudWatchDestination &cloud_watch_destination);
    bool is_cloud_watch_destination_Set() const;
    bool is_cloud_watch_destination_Valid() const;

    OAICreateConfigurationSetEventDestination_request_EventDestination_SnsDestination getSnsDestination() const;
    void setSnsDestination(const OAICreateConfigurationSetEventDestination_request_EventDestination_SnsDestination &sns_destination);
    bool is_sns_destination_Set() const;
    bool is_sns_destination_Valid() const;

    OAICreateConfigurationSetEventDestination_request_EventDestination_PinpointDestination getPinpointDestination() const;
    void setPinpointDestination(const OAICreateConfigurationSetEventDestination_request_EventDestination_PinpointDestination &pinpoint_destination);
    bool is_pinpoint_destination_Set() const;
    bool is_pinpoint_destination_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QList m_matching_event_types;
    bool m_matching_event_types_isSet;
    bool m_matching_event_types_isValid;

    OAICreateConfigurationSetEventDestination_request_EventDestination_KinesisFirehoseDestination m_kinesis_firehose_destination;
    bool m_kinesis_firehose_destination_isSet;
    bool m_kinesis_firehose_destination_isValid;

    OAICreateConfigurationSetEventDestination_request_EventDestination_CloudWatchDestination m_cloud_watch_destination;
    bool m_cloud_watch_destination_isSet;
    bool m_cloud_watch_destination_isValid;

    OAICreateConfigurationSetEventDestination_request_EventDestination_SnsDestination m_sns_destination;
    bool m_sns_destination_isSet;
    bool m_sns_destination_isValid;

    OAICreateConfigurationSetEventDestination_request_EventDestination_PinpointDestination m_pinpoint_destination;
    bool m_pinpoint_destination_isSet;
    bool m_pinpoint_destination_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventDestination)

#endif // OAIEventDestination_H
