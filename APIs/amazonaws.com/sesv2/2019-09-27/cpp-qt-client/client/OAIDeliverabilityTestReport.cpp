/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeliverabilityTestReport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeliverabilityTestReport::OAIDeliverabilityTestReport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeliverabilityTestReport::OAIDeliverabilityTestReport() {
    this->initializeModel();
}

OAIDeliverabilityTestReport::~OAIDeliverabilityTestReport() {}

void OAIDeliverabilityTestReport::initializeModel() {

    m_report_id_isSet = false;
    m_report_id_isValid = false;

    m_report_name_isSet = false;
    m_report_name_isValid = false;

    m_subject_isSet = false;
    m_subject_isValid = false;

    m_from_email_address_isSet = false;
    m_from_email_address_isValid = false;

    m_create_date_isSet = false;
    m_create_date_isValid = false;

    m_deliverability_test_status_isSet = false;
    m_deliverability_test_status_isValid = false;
}

void OAIDeliverabilityTestReport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeliverabilityTestReport::fromJsonObject(QJsonObject json) {

    m_report_id_isValid = ::OpenAPI::fromJsonValue(m_report_id, json[QString("ReportId")]);
    m_report_id_isSet = !json[QString("ReportId")].isNull() && m_report_id_isValid;

    m_report_name_isValid = ::OpenAPI::fromJsonValue(m_report_name, json[QString("ReportName")]);
    m_report_name_isSet = !json[QString("ReportName")].isNull() && m_report_name_isValid;

    m_subject_isValid = ::OpenAPI::fromJsonValue(m_subject, json[QString("Subject")]);
    m_subject_isSet = !json[QString("Subject")].isNull() && m_subject_isValid;

    m_from_email_address_isValid = ::OpenAPI::fromJsonValue(m_from_email_address, json[QString("FromEmailAddress")]);
    m_from_email_address_isSet = !json[QString("FromEmailAddress")].isNull() && m_from_email_address_isValid;

    m_create_date_isValid = ::OpenAPI::fromJsonValue(m_create_date, json[QString("CreateDate")]);
    m_create_date_isSet = !json[QString("CreateDate")].isNull() && m_create_date_isValid;

    m_deliverability_test_status_isValid = ::OpenAPI::fromJsonValue(m_deliverability_test_status, json[QString("DeliverabilityTestStatus")]);
    m_deliverability_test_status_isSet = !json[QString("DeliverabilityTestStatus")].isNull() && m_deliverability_test_status_isValid;
}

QString OAIDeliverabilityTestReport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeliverabilityTestReport::asJsonObject() const {
    QJsonObject obj;
    if (m_report_id_isSet) {
        obj.insert(QString("ReportId"), ::OpenAPI::toJsonValue(m_report_id));
    }
    if (m_report_name_isSet) {
        obj.insert(QString("ReportName"), ::OpenAPI::toJsonValue(m_report_name));
    }
    if (m_subject_isSet) {
        obj.insert(QString("Subject"), ::OpenAPI::toJsonValue(m_subject));
    }
    if (m_from_email_address_isSet) {
        obj.insert(QString("FromEmailAddress"), ::OpenAPI::toJsonValue(m_from_email_address));
    }
    if (m_create_date_isSet) {
        obj.insert(QString("CreateDate"), ::OpenAPI::toJsonValue(m_create_date));
    }
    if (m_deliverability_test_status.isSet()) {
        obj.insert(QString("DeliverabilityTestStatus"), ::OpenAPI::toJsonValue(m_deliverability_test_status));
    }
    return obj;
}

QString OAIDeliverabilityTestReport::getReportId() const {
    return m_report_id;
}
void OAIDeliverabilityTestReport::setReportId(const QString &report_id) {
    m_report_id = report_id;
    m_report_id_isSet = true;
}

bool OAIDeliverabilityTestReport::is_report_id_Set() const{
    return m_report_id_isSet;
}

bool OAIDeliverabilityTestReport::is_report_id_Valid() const{
    return m_report_id_isValid;
}

QString OAIDeliverabilityTestReport::getReportName() const {
    return m_report_name;
}
void OAIDeliverabilityTestReport::setReportName(const QString &report_name) {
    m_report_name = report_name;
    m_report_name_isSet = true;
}

bool OAIDeliverabilityTestReport::is_report_name_Set() const{
    return m_report_name_isSet;
}

bool OAIDeliverabilityTestReport::is_report_name_Valid() const{
    return m_report_name_isValid;
}

QString OAIDeliverabilityTestReport::getSubject() const {
    return m_subject;
}
void OAIDeliverabilityTestReport::setSubject(const QString &subject) {
    m_subject = subject;
    m_subject_isSet = true;
}

bool OAIDeliverabilityTestReport::is_subject_Set() const{
    return m_subject_isSet;
}

bool OAIDeliverabilityTestReport::is_subject_Valid() const{
    return m_subject_isValid;
}

QString OAIDeliverabilityTestReport::getFromEmailAddress() const {
    return m_from_email_address;
}
void OAIDeliverabilityTestReport::setFromEmailAddress(const QString &from_email_address) {
    m_from_email_address = from_email_address;
    m_from_email_address_isSet = true;
}

bool OAIDeliverabilityTestReport::is_from_email_address_Set() const{
    return m_from_email_address_isSet;
}

bool OAIDeliverabilityTestReport::is_from_email_address_Valid() const{
    return m_from_email_address_isValid;
}

QDateTime OAIDeliverabilityTestReport::getCreateDate() const {
    return m_create_date;
}
void OAIDeliverabilityTestReport::setCreateDate(const QDateTime &create_date) {
    m_create_date = create_date;
    m_create_date_isSet = true;
}

bool OAIDeliverabilityTestReport::is_create_date_Set() const{
    return m_create_date_isSet;
}

bool OAIDeliverabilityTestReport::is_create_date_Valid() const{
    return m_create_date_isValid;
}

OAIDeliverabilityTestStatus OAIDeliverabilityTestReport::getDeliverabilityTestStatus() const {
    return m_deliverability_test_status;
}
void OAIDeliverabilityTestReport::setDeliverabilityTestStatus(const OAIDeliverabilityTestStatus &deliverability_test_status) {
    m_deliverability_test_status = deliverability_test_status;
    m_deliverability_test_status_isSet = true;
}

bool OAIDeliverabilityTestReport::is_deliverability_test_status_Set() const{
    return m_deliverability_test_status_isSet;
}

bool OAIDeliverabilityTestReport::is_deliverability_test_status_Valid() const{
    return m_deliverability_test_status_isValid;
}

bool OAIDeliverabilityTestReport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_report_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subject_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deliverability_test_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeliverabilityTestReport::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
