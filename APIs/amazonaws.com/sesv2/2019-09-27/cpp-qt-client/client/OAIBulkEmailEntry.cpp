/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBulkEmailEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBulkEmailEntry::OAIBulkEmailEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBulkEmailEntry::OAIBulkEmailEntry() {
    this->initializeModel();
}

OAIBulkEmailEntry::~OAIBulkEmailEntry() {}

void OAIBulkEmailEntry::initializeModel() {

    m_destination_isSet = false;
    m_destination_isValid = false;

    m_replacement_tags_isSet = false;
    m_replacement_tags_isValid = false;

    m_replacement_email_content_isSet = false;
    m_replacement_email_content_isValid = false;
}

void OAIBulkEmailEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBulkEmailEntry::fromJsonObject(QJsonObject json) {

    m_destination_isValid = ::OpenAPI::fromJsonValue(m_destination, json[QString("Destination")]);
    m_destination_isSet = !json[QString("Destination")].isNull() && m_destination_isValid;

    m_replacement_tags_isValid = ::OpenAPI::fromJsonValue(m_replacement_tags, json[QString("ReplacementTags")]);
    m_replacement_tags_isSet = !json[QString("ReplacementTags")].isNull() && m_replacement_tags_isValid;

    m_replacement_email_content_isValid = ::OpenAPI::fromJsonValue(m_replacement_email_content, json[QString("ReplacementEmailContent")]);
    m_replacement_email_content_isSet = !json[QString("ReplacementEmailContent")].isNull() && m_replacement_email_content_isValid;
}

QString OAIBulkEmailEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBulkEmailEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_destination.isSet()) {
        obj.insert(QString("Destination"), ::OpenAPI::toJsonValue(m_destination));
    }
    if (m_replacement_tags.isSet()) {
        obj.insert(QString("ReplacementTags"), ::OpenAPI::toJsonValue(m_replacement_tags));
    }
    if (m_replacement_email_content.isSet()) {
        obj.insert(QString("ReplacementEmailContent"), ::OpenAPI::toJsonValue(m_replacement_email_content));
    }
    return obj;
}

OAIBulkEmailEntry_Destination OAIBulkEmailEntry::getDestination() const {
    return m_destination;
}
void OAIBulkEmailEntry::setDestination(const OAIBulkEmailEntry_Destination &destination) {
    m_destination = destination;
    m_destination_isSet = true;
}

bool OAIBulkEmailEntry::is_destination_Set() const{
    return m_destination_isSet;
}

bool OAIBulkEmailEntry::is_destination_Valid() const{
    return m_destination_isValid;
}

QList OAIBulkEmailEntry::getReplacementTags() const {
    return m_replacement_tags;
}
void OAIBulkEmailEntry::setReplacementTags(const QList &replacement_tags) {
    m_replacement_tags = replacement_tags;
    m_replacement_tags_isSet = true;
}

bool OAIBulkEmailEntry::is_replacement_tags_Set() const{
    return m_replacement_tags_isSet;
}

bool OAIBulkEmailEntry::is_replacement_tags_Valid() const{
    return m_replacement_tags_isValid;
}

OAIBulkEmailEntry_ReplacementEmailContent OAIBulkEmailEntry::getReplacementEmailContent() const {
    return m_replacement_email_content;
}
void OAIBulkEmailEntry::setReplacementEmailContent(const OAIBulkEmailEntry_ReplacementEmailContent &replacement_email_content) {
    m_replacement_email_content = replacement_email_content;
    m_replacement_email_content_isSet = true;
}

bool OAIBulkEmailEntry::is_replacement_email_content_Set() const{
    return m_replacement_email_content_isSet;
}

bool OAIBulkEmailEntry::is_replacement_email_content_Valid() const{
    return m_replacement_email_content_isValid;
}

bool OAIBulkEmailEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_replacement_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_replacement_email_content.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBulkEmailEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_destination_isValid && true;
}

} // namespace OpenAPI
