/**
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetEmailIdentityResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetEmailIdentityResponse::OAIGetEmailIdentityResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetEmailIdentityResponse::OAIGetEmailIdentityResponse() {
    this->initializeModel();
}

OAIGetEmailIdentityResponse::~OAIGetEmailIdentityResponse() {}

void OAIGetEmailIdentityResponse::initializeModel() {

    m_identity_type_isSet = false;
    m_identity_type_isValid = false;

    m_feedback_forwarding_status_isSet = false;
    m_feedback_forwarding_status_isValid = false;

    m_verified_for_sending_status_isSet = false;
    m_verified_for_sending_status_isValid = false;

    m_dkim_attributes_isSet = false;
    m_dkim_attributes_isValid = false;

    m_mail_from_attributes_isSet = false;
    m_mail_from_attributes_isValid = false;

    m_policies_isSet = false;
    m_policies_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_configuration_set_name_isSet = false;
    m_configuration_set_name_isValid = false;

    m_verification_status_isSet = false;
    m_verification_status_isValid = false;
}

void OAIGetEmailIdentityResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetEmailIdentityResponse::fromJsonObject(QJsonObject json) {

    m_identity_type_isValid = ::OpenAPI::fromJsonValue(m_identity_type, json[QString("IdentityType")]);
    m_identity_type_isSet = !json[QString("IdentityType")].isNull() && m_identity_type_isValid;

    m_feedback_forwarding_status_isValid = ::OpenAPI::fromJsonValue(m_feedback_forwarding_status, json[QString("FeedbackForwardingStatus")]);
    m_feedback_forwarding_status_isSet = !json[QString("FeedbackForwardingStatus")].isNull() && m_feedback_forwarding_status_isValid;

    m_verified_for_sending_status_isValid = ::OpenAPI::fromJsonValue(m_verified_for_sending_status, json[QString("VerifiedForSendingStatus")]);
    m_verified_for_sending_status_isSet = !json[QString("VerifiedForSendingStatus")].isNull() && m_verified_for_sending_status_isValid;

    m_dkim_attributes_isValid = ::OpenAPI::fromJsonValue(m_dkim_attributes, json[QString("DkimAttributes")]);
    m_dkim_attributes_isSet = !json[QString("DkimAttributes")].isNull() && m_dkim_attributes_isValid;

    m_mail_from_attributes_isValid = ::OpenAPI::fromJsonValue(m_mail_from_attributes, json[QString("MailFromAttributes")]);
    m_mail_from_attributes_isSet = !json[QString("MailFromAttributes")].isNull() && m_mail_from_attributes_isValid;

    m_policies_isValid = ::OpenAPI::fromJsonValue(m_policies, json[QString("Policies")]);
    m_policies_isSet = !json[QString("Policies")].isNull() && m_policies_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_configuration_set_name_isValid = ::OpenAPI::fromJsonValue(m_configuration_set_name, json[QString("ConfigurationSetName")]);
    m_configuration_set_name_isSet = !json[QString("ConfigurationSetName")].isNull() && m_configuration_set_name_isValid;

    m_verification_status_isValid = ::OpenAPI::fromJsonValue(m_verification_status, json[QString("VerificationStatus")]);
    m_verification_status_isSet = !json[QString("VerificationStatus")].isNull() && m_verification_status_isValid;
}

QString OAIGetEmailIdentityResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetEmailIdentityResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_identity_type.isSet()) {
        obj.insert(QString("IdentityType"), ::OpenAPI::toJsonValue(m_identity_type));
    }
    if (m_feedback_forwarding_status_isSet) {
        obj.insert(QString("FeedbackForwardingStatus"), ::OpenAPI::toJsonValue(m_feedback_forwarding_status));
    }
    if (m_verified_for_sending_status_isSet) {
        obj.insert(QString("VerifiedForSendingStatus"), ::OpenAPI::toJsonValue(m_verified_for_sending_status));
    }
    if (m_dkim_attributes.isSet()) {
        obj.insert(QString("DkimAttributes"), ::OpenAPI::toJsonValue(m_dkim_attributes));
    }
    if (m_mail_from_attributes.isSet()) {
        obj.insert(QString("MailFromAttributes"), ::OpenAPI::toJsonValue(m_mail_from_attributes));
    }
    if (m_policies.isSet()) {
        obj.insert(QString("Policies"), ::OpenAPI::toJsonValue(m_policies));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_configuration_set_name_isSet) {
        obj.insert(QString("ConfigurationSetName"), ::OpenAPI::toJsonValue(m_configuration_set_name));
    }
    if (m_verification_status.isSet()) {
        obj.insert(QString("VerificationStatus"), ::OpenAPI::toJsonValue(m_verification_status));
    }
    return obj;
}

OAIIdentityType OAIGetEmailIdentityResponse::getIdentityType() const {
    return m_identity_type;
}
void OAIGetEmailIdentityResponse::setIdentityType(const OAIIdentityType &identity_type) {
    m_identity_type = identity_type;
    m_identity_type_isSet = true;
}

bool OAIGetEmailIdentityResponse::is_identity_type_Set() const{
    return m_identity_type_isSet;
}

bool OAIGetEmailIdentityResponse::is_identity_type_Valid() const{
    return m_identity_type_isValid;
}

bool OAIGetEmailIdentityResponse::getFeedbackForwardingStatus() const {
    return m_feedback_forwarding_status;
}
void OAIGetEmailIdentityResponse::setFeedbackForwardingStatus(const bool &feedback_forwarding_status) {
    m_feedback_forwarding_status = feedback_forwarding_status;
    m_feedback_forwarding_status_isSet = true;
}

bool OAIGetEmailIdentityResponse::is_feedback_forwarding_status_Set() const{
    return m_feedback_forwarding_status_isSet;
}

bool OAIGetEmailIdentityResponse::is_feedback_forwarding_status_Valid() const{
    return m_feedback_forwarding_status_isValid;
}

bool OAIGetEmailIdentityResponse::getVerifiedForSendingStatus() const {
    return m_verified_for_sending_status;
}
void OAIGetEmailIdentityResponse::setVerifiedForSendingStatus(const bool &verified_for_sending_status) {
    m_verified_for_sending_status = verified_for_sending_status;
    m_verified_for_sending_status_isSet = true;
}

bool OAIGetEmailIdentityResponse::is_verified_for_sending_status_Set() const{
    return m_verified_for_sending_status_isSet;
}

bool OAIGetEmailIdentityResponse::is_verified_for_sending_status_Valid() const{
    return m_verified_for_sending_status_isValid;
}

OAICreateEmailIdentityResponse_DkimAttributes OAIGetEmailIdentityResponse::getDkimAttributes() const {
    return m_dkim_attributes;
}
void OAIGetEmailIdentityResponse::setDkimAttributes(const OAICreateEmailIdentityResponse_DkimAttributes &dkim_attributes) {
    m_dkim_attributes = dkim_attributes;
    m_dkim_attributes_isSet = true;
}

bool OAIGetEmailIdentityResponse::is_dkim_attributes_Set() const{
    return m_dkim_attributes_isSet;
}

bool OAIGetEmailIdentityResponse::is_dkim_attributes_Valid() const{
    return m_dkim_attributes_isValid;
}

OAIGetEmailIdentityResponse_MailFromAttributes OAIGetEmailIdentityResponse::getMailFromAttributes() const {
    return m_mail_from_attributes;
}
void OAIGetEmailIdentityResponse::setMailFromAttributes(const OAIGetEmailIdentityResponse_MailFromAttributes &mail_from_attributes) {
    m_mail_from_attributes = mail_from_attributes;
    m_mail_from_attributes_isSet = true;
}

bool OAIGetEmailIdentityResponse::is_mail_from_attributes_Set() const{
    return m_mail_from_attributes_isSet;
}

bool OAIGetEmailIdentityResponse::is_mail_from_attributes_Valid() const{
    return m_mail_from_attributes_isValid;
}

QMap OAIGetEmailIdentityResponse::getPolicies() const {
    return m_policies;
}
void OAIGetEmailIdentityResponse::setPolicies(const QMap &policies) {
    m_policies = policies;
    m_policies_isSet = true;
}

bool OAIGetEmailIdentityResponse::is_policies_Set() const{
    return m_policies_isSet;
}

bool OAIGetEmailIdentityResponse::is_policies_Valid() const{
    return m_policies_isValid;
}

QList OAIGetEmailIdentityResponse::getTags() const {
    return m_tags;
}
void OAIGetEmailIdentityResponse::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIGetEmailIdentityResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIGetEmailIdentityResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIGetEmailIdentityResponse::getConfigurationSetName() const {
    return m_configuration_set_name;
}
void OAIGetEmailIdentityResponse::setConfigurationSetName(const QString &configuration_set_name) {
    m_configuration_set_name = configuration_set_name;
    m_configuration_set_name_isSet = true;
}

bool OAIGetEmailIdentityResponse::is_configuration_set_name_Set() const{
    return m_configuration_set_name_isSet;
}

bool OAIGetEmailIdentityResponse::is_configuration_set_name_Valid() const{
    return m_configuration_set_name_isValid;
}

OAIVerificationStatus OAIGetEmailIdentityResponse::getVerificationStatus() const {
    return m_verification_status;
}
void OAIGetEmailIdentityResponse::setVerificationStatus(const OAIVerificationStatus &verification_status) {
    m_verification_status = verification_status;
    m_verification_status_isSet = true;
}

bool OAIGetEmailIdentityResponse::is_verification_status_Set() const{
    return m_verification_status_isSet;
}

bool OAIGetEmailIdentityResponse::is_verification_status_Valid() const{
    return m_verification_status_isValid;
}

bool OAIGetEmailIdentityResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_identity_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_feedback_forwarding_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verified_for_sending_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dkim_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_mail_from_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_policies.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_configuration_set_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verification_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetEmailIdentityResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
