/*
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.OverallVolumeVolumeStatistics;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetDomainStatisticsReportResponseOverallVolume
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:13.736436-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetDomainStatisticsReportResponseOverallVolume {
  public static final String SERIALIZED_NAME_VOLUME_STATISTICS = "VolumeStatistics";
  @SerializedName(SERIALIZED_NAME_VOLUME_STATISTICS)
  private OverallVolumeVolumeStatistics volumeStatistics;

  public static final String SERIALIZED_NAME_READ_RATE_PERCENT = "ReadRatePercent";
  @SerializedName(SERIALIZED_NAME_READ_RATE_PERCENT)
  private Double readRatePercent;

  public static final String SERIALIZED_NAME_DOMAIN_ISP_PLACEMENTS = "DomainIspPlacements";
  @SerializedName(SERIALIZED_NAME_DOMAIN_ISP_PLACEMENTS)
  private List domainIspPlacements;

  public GetDomainStatisticsReportResponseOverallVolume() {
  }

  public GetDomainStatisticsReportResponseOverallVolume volumeStatistics(OverallVolumeVolumeStatistics volumeStatistics) {
    this.volumeStatistics = volumeStatistics;
    return this;
  }

  /**
   * Get volumeStatistics
   * @return volumeStatistics
   */
  @javax.annotation.Nullable
  public OverallVolumeVolumeStatistics getVolumeStatistics() {
    return volumeStatistics;
  }

  public void setVolumeStatistics(OverallVolumeVolumeStatistics volumeStatistics) {
    this.volumeStatistics = volumeStatistics;
  }


  public GetDomainStatisticsReportResponseOverallVolume readRatePercent(Double readRatePercent) {
    this.readRatePercent = readRatePercent;
    return this;
  }

  /**
   * Get readRatePercent
   * @return readRatePercent
   */
  @javax.annotation.Nullable
  public Double getReadRatePercent() {
    return readRatePercent;
  }

  public void setReadRatePercent(Double readRatePercent) {
    this.readRatePercent = readRatePercent;
  }


  public GetDomainStatisticsReportResponseOverallVolume domainIspPlacements(List domainIspPlacements) {
    this.domainIspPlacements = domainIspPlacements;
    return this;
  }

  /**
   * Get domainIspPlacements
   * @return domainIspPlacements
   */
  @javax.annotation.Nullable
  public List getDomainIspPlacements() {
    return domainIspPlacements;
  }

  public void setDomainIspPlacements(List domainIspPlacements) {
    this.domainIspPlacements = domainIspPlacements;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDomainStatisticsReportResponseOverallVolume getDomainStatisticsReportResponseOverallVolume = (GetDomainStatisticsReportResponseOverallVolume) o;
    return Objects.equals(this.volumeStatistics, getDomainStatisticsReportResponseOverallVolume.volumeStatistics) &&
        Objects.equals(this.readRatePercent, getDomainStatisticsReportResponseOverallVolume.readRatePercent) &&
        Objects.equals(this.domainIspPlacements, getDomainStatisticsReportResponseOverallVolume.domainIspPlacements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(volumeStatistics, readRatePercent, domainIspPlacements);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDomainStatisticsReportResponseOverallVolume {\n");
    sb.append("    volumeStatistics: ").append(toIndentedString(volumeStatistics)).append("\n");
    sb.append("    readRatePercent: ").append(toIndentedString(readRatePercent)).append("\n");
    sb.append("    domainIspPlacements: ").append(toIndentedString(domainIspPlacements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("VolumeStatistics");
    openapiFields.add("ReadRatePercent");
    openapiFields.add("DomainIspPlacements");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetDomainStatisticsReportResponseOverallVolume
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetDomainStatisticsReportResponseOverallVolume.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetDomainStatisticsReportResponseOverallVolume is not found in the empty JSON string", GetDomainStatisticsReportResponseOverallVolume.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetDomainStatisticsReportResponseOverallVolume.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetDomainStatisticsReportResponseOverallVolume` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `VolumeStatistics`
      if (jsonObj.get("VolumeStatistics") != null && !jsonObj.get("VolumeStatistics").isJsonNull()) {
        OverallVolumeVolumeStatistics.validateJsonElement(jsonObj.get("VolumeStatistics"));
      }
      // validate the optional field `ReadRatePercent`
      if (jsonObj.get("ReadRatePercent") != null && !jsonObj.get("ReadRatePercent").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("ReadRatePercent"));
      }
      // validate the optional field `DomainIspPlacements`
      if (jsonObj.get("DomainIspPlacements") != null && !jsonObj.get("DomainIspPlacements").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DomainIspPlacements"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetDomainStatisticsReportResponseOverallVolume.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetDomainStatisticsReportResponseOverallVolume' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetDomainStatisticsReportResponseOverallVolume> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetDomainStatisticsReportResponseOverallVolume.class));

       return (TypeAdapter<T>) new TypeAdapter<GetDomainStatisticsReportResponseOverallVolume>() {
           @Override
           public void write(JsonWriter out, GetDomainStatisticsReportResponseOverallVolume value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetDomainStatisticsReportResponseOverallVolume read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetDomainStatisticsReportResponseOverallVolume given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetDomainStatisticsReportResponseOverallVolume
   * @throws IOException if the JSON string is invalid with respect to GetDomainStatisticsReportResponseOverallVolume
   */
  public static GetDomainStatisticsReportResponseOverallVolume fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetDomainStatisticsReportResponseOverallVolume.class);
  }

  /**
   * Convert an instance of GetDomainStatisticsReportResponseOverallVolume to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

