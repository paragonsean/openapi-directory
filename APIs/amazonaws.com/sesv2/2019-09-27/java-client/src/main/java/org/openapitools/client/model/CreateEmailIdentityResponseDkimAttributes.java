/*
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DkimSigningAttributesOrigin;
import org.openapitools.client.model.DkimSigningKeyLength;
import org.openapitools.client.model.DkimStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateEmailIdentityResponseDkimAttributes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:13.736436-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateEmailIdentityResponseDkimAttributes {
  public static final String SERIALIZED_NAME_SIGNING_ENABLED = "SigningEnabled";
  @SerializedName(SERIALIZED_NAME_SIGNING_ENABLED)
  private Boolean signingEnabled;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private DkimStatus status;

  public static final String SERIALIZED_NAME_TOKENS = "Tokens";
  @SerializedName(SERIALIZED_NAME_TOKENS)
  private List tokens;

  public static final String SERIALIZED_NAME_SIGNING_ATTRIBUTES_ORIGIN = "SigningAttributesOrigin";
  @SerializedName(SERIALIZED_NAME_SIGNING_ATTRIBUTES_ORIGIN)
  private DkimSigningAttributesOrigin signingAttributesOrigin;

  public static final String SERIALIZED_NAME_NEXT_SIGNING_KEY_LENGTH = "NextSigningKeyLength";
  @SerializedName(SERIALIZED_NAME_NEXT_SIGNING_KEY_LENGTH)
  private DkimSigningKeyLength nextSigningKeyLength;

  public static final String SERIALIZED_NAME_CURRENT_SIGNING_KEY_LENGTH = "CurrentSigningKeyLength";
  @SerializedName(SERIALIZED_NAME_CURRENT_SIGNING_KEY_LENGTH)
  private DkimSigningKeyLength currentSigningKeyLength;

  public static final String SERIALIZED_NAME_LAST_KEY_GENERATION_TIMESTAMP = "LastKeyGenerationTimestamp";
  @SerializedName(SERIALIZED_NAME_LAST_KEY_GENERATION_TIMESTAMP)
  private OffsetDateTime lastKeyGenerationTimestamp;

  public CreateEmailIdentityResponseDkimAttributes() {
  }

  public CreateEmailIdentityResponseDkimAttributes signingEnabled(Boolean signingEnabled) {
    this.signingEnabled = signingEnabled;
    return this;
  }

  /**
   * Get signingEnabled
   * @return signingEnabled
   */
  @javax.annotation.Nullable
  public Boolean getSigningEnabled() {
    return signingEnabled;
  }

  public void setSigningEnabled(Boolean signingEnabled) {
    this.signingEnabled = signingEnabled;
  }


  public CreateEmailIdentityResponseDkimAttributes status(DkimStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public DkimStatus getStatus() {
    return status;
  }

  public void setStatus(DkimStatus status) {
    this.status = status;
  }


  public CreateEmailIdentityResponseDkimAttributes tokens(List tokens) {
    this.tokens = tokens;
    return this;
  }

  /**
   * Get tokens
   * @return tokens
   */
  @javax.annotation.Nullable
  public List getTokens() {
    return tokens;
  }

  public void setTokens(List tokens) {
    this.tokens = tokens;
  }


  public CreateEmailIdentityResponseDkimAttributes signingAttributesOrigin(DkimSigningAttributesOrigin signingAttributesOrigin) {
    this.signingAttributesOrigin = signingAttributesOrigin;
    return this;
  }

  /**
   * Get signingAttributesOrigin
   * @return signingAttributesOrigin
   */
  @javax.annotation.Nullable
  public DkimSigningAttributesOrigin getSigningAttributesOrigin() {
    return signingAttributesOrigin;
  }

  public void setSigningAttributesOrigin(DkimSigningAttributesOrigin signingAttributesOrigin) {
    this.signingAttributesOrigin = signingAttributesOrigin;
  }


  public CreateEmailIdentityResponseDkimAttributes nextSigningKeyLength(DkimSigningKeyLength nextSigningKeyLength) {
    this.nextSigningKeyLength = nextSigningKeyLength;
    return this;
  }

  /**
   * Get nextSigningKeyLength
   * @return nextSigningKeyLength
   */
  @javax.annotation.Nullable
  public DkimSigningKeyLength getNextSigningKeyLength() {
    return nextSigningKeyLength;
  }

  public void setNextSigningKeyLength(DkimSigningKeyLength nextSigningKeyLength) {
    this.nextSigningKeyLength = nextSigningKeyLength;
  }


  public CreateEmailIdentityResponseDkimAttributes currentSigningKeyLength(DkimSigningKeyLength currentSigningKeyLength) {
    this.currentSigningKeyLength = currentSigningKeyLength;
    return this;
  }

  /**
   * Get currentSigningKeyLength
   * @return currentSigningKeyLength
   */
  @javax.annotation.Nullable
  public DkimSigningKeyLength getCurrentSigningKeyLength() {
    return currentSigningKeyLength;
  }

  public void setCurrentSigningKeyLength(DkimSigningKeyLength currentSigningKeyLength) {
    this.currentSigningKeyLength = currentSigningKeyLength;
  }


  public CreateEmailIdentityResponseDkimAttributes lastKeyGenerationTimestamp(OffsetDateTime lastKeyGenerationTimestamp) {
    this.lastKeyGenerationTimestamp = lastKeyGenerationTimestamp;
    return this;
  }

  /**
   * Get lastKeyGenerationTimestamp
   * @return lastKeyGenerationTimestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastKeyGenerationTimestamp() {
    return lastKeyGenerationTimestamp;
  }

  public void setLastKeyGenerationTimestamp(OffsetDateTime lastKeyGenerationTimestamp) {
    this.lastKeyGenerationTimestamp = lastKeyGenerationTimestamp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateEmailIdentityResponseDkimAttributes createEmailIdentityResponseDkimAttributes = (CreateEmailIdentityResponseDkimAttributes) o;
    return Objects.equals(this.signingEnabled, createEmailIdentityResponseDkimAttributes.signingEnabled) &&
        Objects.equals(this.status, createEmailIdentityResponseDkimAttributes.status) &&
        Objects.equals(this.tokens, createEmailIdentityResponseDkimAttributes.tokens) &&
        Objects.equals(this.signingAttributesOrigin, createEmailIdentityResponseDkimAttributes.signingAttributesOrigin) &&
        Objects.equals(this.nextSigningKeyLength, createEmailIdentityResponseDkimAttributes.nextSigningKeyLength) &&
        Objects.equals(this.currentSigningKeyLength, createEmailIdentityResponseDkimAttributes.currentSigningKeyLength) &&
        Objects.equals(this.lastKeyGenerationTimestamp, createEmailIdentityResponseDkimAttributes.lastKeyGenerationTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(signingEnabled, status, tokens, signingAttributesOrigin, nextSigningKeyLength, currentSigningKeyLength, lastKeyGenerationTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateEmailIdentityResponseDkimAttributes {\n");
    sb.append("    signingEnabled: ").append(toIndentedString(signingEnabled)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tokens: ").append(toIndentedString(tokens)).append("\n");
    sb.append("    signingAttributesOrigin: ").append(toIndentedString(signingAttributesOrigin)).append("\n");
    sb.append("    nextSigningKeyLength: ").append(toIndentedString(nextSigningKeyLength)).append("\n");
    sb.append("    currentSigningKeyLength: ").append(toIndentedString(currentSigningKeyLength)).append("\n");
    sb.append("    lastKeyGenerationTimestamp: ").append(toIndentedString(lastKeyGenerationTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("SigningEnabled");
    openapiFields.add("Status");
    openapiFields.add("Tokens");
    openapiFields.add("SigningAttributesOrigin");
    openapiFields.add("NextSigningKeyLength");
    openapiFields.add("CurrentSigningKeyLength");
    openapiFields.add("LastKeyGenerationTimestamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateEmailIdentityResponseDkimAttributes
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateEmailIdentityResponseDkimAttributes.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateEmailIdentityResponseDkimAttributes is not found in the empty JSON string", CreateEmailIdentityResponseDkimAttributes.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateEmailIdentityResponseDkimAttributes.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateEmailIdentityResponseDkimAttributes` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `SigningEnabled`
      if (jsonObj.get("SigningEnabled") != null && !jsonObj.get("SigningEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("SigningEnabled"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        DkimStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `Tokens`
      if (jsonObj.get("Tokens") != null && !jsonObj.get("Tokens").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tokens"));
      }
      // validate the optional field `SigningAttributesOrigin`
      if (jsonObj.get("SigningAttributesOrigin") != null && !jsonObj.get("SigningAttributesOrigin").isJsonNull()) {
        DkimSigningAttributesOrigin.validateJsonElement(jsonObj.get("SigningAttributesOrigin"));
      }
      // validate the optional field `NextSigningKeyLength`
      if (jsonObj.get("NextSigningKeyLength") != null && !jsonObj.get("NextSigningKeyLength").isJsonNull()) {
        DkimSigningKeyLength.validateJsonElement(jsonObj.get("NextSigningKeyLength"));
      }
      // validate the optional field `CurrentSigningKeyLength`
      if (jsonObj.get("CurrentSigningKeyLength") != null && !jsonObj.get("CurrentSigningKeyLength").isJsonNull()) {
        DkimSigningKeyLength.validateJsonElement(jsonObj.get("CurrentSigningKeyLength"));
      }
      // validate the optional field `LastKeyGenerationTimestamp`
      if (jsonObj.get("LastKeyGenerationTimestamp") != null && !jsonObj.get("LastKeyGenerationTimestamp").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastKeyGenerationTimestamp"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateEmailIdentityResponseDkimAttributes.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateEmailIdentityResponseDkimAttributes' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateEmailIdentityResponseDkimAttributes> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateEmailIdentityResponseDkimAttributes.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateEmailIdentityResponseDkimAttributes>() {
           @Override
           public void write(JsonWriter out, CreateEmailIdentityResponseDkimAttributes value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateEmailIdentityResponseDkimAttributes read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateEmailIdentityResponseDkimAttributes given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateEmailIdentityResponseDkimAttributes
   * @throws IOException if the JSON string is invalid with respect to CreateEmailIdentityResponseDkimAttributes
   */
  public static CreateEmailIdentityResponseDkimAttributes fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateEmailIdentityResponseDkimAttributes.class);
  }

  /**
   * Convert an instance of CreateEmailIdentityResponseDkimAttributes to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

