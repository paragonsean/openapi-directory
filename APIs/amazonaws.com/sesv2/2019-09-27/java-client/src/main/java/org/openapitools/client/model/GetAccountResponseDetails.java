/*
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountDetailsReviewDetails;
import org.openapitools.client.model.ContactLanguage;
import org.openapitools.client.model.MailType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetAccountResponseDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:13.736436-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetAccountResponseDetails {
  public static final String SERIALIZED_NAME_MAIL_TYPE = "MailType";
  @SerializedName(SERIALIZED_NAME_MAIL_TYPE)
  private MailType mailType;

  public static final String SERIALIZED_NAME_WEBSITE_U_R_L = "WebsiteURL";
  @SerializedName(SERIALIZED_NAME_WEBSITE_U_R_L)
  private String websiteURL;

  public static final String SERIALIZED_NAME_CONTACT_LANGUAGE = "ContactLanguage";
  @SerializedName(SERIALIZED_NAME_CONTACT_LANGUAGE)
  private ContactLanguage contactLanguage;

  public static final String SERIALIZED_NAME_USE_CASE_DESCRIPTION = "UseCaseDescription";
  @SerializedName(SERIALIZED_NAME_USE_CASE_DESCRIPTION)
  private String useCaseDescription;

  public static final String SERIALIZED_NAME_ADDITIONAL_CONTACT_EMAIL_ADDRESSES = "AdditionalContactEmailAddresses";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_CONTACT_EMAIL_ADDRESSES)
  private List additionalContactEmailAddresses;

  public static final String SERIALIZED_NAME_REVIEW_DETAILS = "ReviewDetails";
  @SerializedName(SERIALIZED_NAME_REVIEW_DETAILS)
  private AccountDetailsReviewDetails reviewDetails;

  public GetAccountResponseDetails() {
  }

  public GetAccountResponseDetails mailType(MailType mailType) {
    this.mailType = mailType;
    return this;
  }

  /**
   * Get mailType
   * @return mailType
   */
  @javax.annotation.Nullable
  public MailType getMailType() {
    return mailType;
  }

  public void setMailType(MailType mailType) {
    this.mailType = mailType;
  }


  public GetAccountResponseDetails websiteURL(String websiteURL) {
    this.websiteURL = websiteURL;
    return this;
  }

  /**
   * Get websiteURL
   * @return websiteURL
   */
  @javax.annotation.Nullable
  public String getWebsiteURL() {
    return websiteURL;
  }

  public void setWebsiteURL(String websiteURL) {
    this.websiteURL = websiteURL;
  }


  public GetAccountResponseDetails contactLanguage(ContactLanguage contactLanguage) {
    this.contactLanguage = contactLanguage;
    return this;
  }

  /**
   * Get contactLanguage
   * @return contactLanguage
   */
  @javax.annotation.Nullable
  public ContactLanguage getContactLanguage() {
    return contactLanguage;
  }

  public void setContactLanguage(ContactLanguage contactLanguage) {
    this.contactLanguage = contactLanguage;
  }


  public GetAccountResponseDetails useCaseDescription(String useCaseDescription) {
    this.useCaseDescription = useCaseDescription;
    return this;
  }

  /**
   * Get useCaseDescription
   * @return useCaseDescription
   */
  @javax.annotation.Nullable
  public String getUseCaseDescription() {
    return useCaseDescription;
  }

  public void setUseCaseDescription(String useCaseDescription) {
    this.useCaseDescription = useCaseDescription;
  }


  public GetAccountResponseDetails additionalContactEmailAddresses(List additionalContactEmailAddresses) {
    this.additionalContactEmailAddresses = additionalContactEmailAddresses;
    return this;
  }

  /**
   * Get additionalContactEmailAddresses
   * @return additionalContactEmailAddresses
   */
  @javax.annotation.Nullable
  public List getAdditionalContactEmailAddresses() {
    return additionalContactEmailAddresses;
  }

  public void setAdditionalContactEmailAddresses(List additionalContactEmailAddresses) {
    this.additionalContactEmailAddresses = additionalContactEmailAddresses;
  }


  public GetAccountResponseDetails reviewDetails(AccountDetailsReviewDetails reviewDetails) {
    this.reviewDetails = reviewDetails;
    return this;
  }

  /**
   * Get reviewDetails
   * @return reviewDetails
   */
  @javax.annotation.Nullable
  public AccountDetailsReviewDetails getReviewDetails() {
    return reviewDetails;
  }

  public void setReviewDetails(AccountDetailsReviewDetails reviewDetails) {
    this.reviewDetails = reviewDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAccountResponseDetails getAccountResponseDetails = (GetAccountResponseDetails) o;
    return Objects.equals(this.mailType, getAccountResponseDetails.mailType) &&
        Objects.equals(this.websiteURL, getAccountResponseDetails.websiteURL) &&
        Objects.equals(this.contactLanguage, getAccountResponseDetails.contactLanguage) &&
        Objects.equals(this.useCaseDescription, getAccountResponseDetails.useCaseDescription) &&
        Objects.equals(this.additionalContactEmailAddresses, getAccountResponseDetails.additionalContactEmailAddresses) &&
        Objects.equals(this.reviewDetails, getAccountResponseDetails.reviewDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mailType, websiteURL, contactLanguage, useCaseDescription, additionalContactEmailAddresses, reviewDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAccountResponseDetails {\n");
    sb.append("    mailType: ").append(toIndentedString(mailType)).append("\n");
    sb.append("    websiteURL: ").append(toIndentedString(websiteURL)).append("\n");
    sb.append("    contactLanguage: ").append(toIndentedString(contactLanguage)).append("\n");
    sb.append("    useCaseDescription: ").append(toIndentedString(useCaseDescription)).append("\n");
    sb.append("    additionalContactEmailAddresses: ").append(toIndentedString(additionalContactEmailAddresses)).append("\n");
    sb.append("    reviewDetails: ").append(toIndentedString(reviewDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MailType");
    openapiFields.add("WebsiteURL");
    openapiFields.add("ContactLanguage");
    openapiFields.add("UseCaseDescription");
    openapiFields.add("AdditionalContactEmailAddresses");
    openapiFields.add("ReviewDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetAccountResponseDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetAccountResponseDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetAccountResponseDetails is not found in the empty JSON string", GetAccountResponseDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetAccountResponseDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetAccountResponseDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `MailType`
      if (jsonObj.get("MailType") != null && !jsonObj.get("MailType").isJsonNull()) {
        MailType.validateJsonElement(jsonObj.get("MailType"));
      }
      // validate the optional field `WebsiteURL`
      if (jsonObj.get("WebsiteURL") != null && !jsonObj.get("WebsiteURL").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WebsiteURL"));
      }
      // validate the optional field `ContactLanguage`
      if (jsonObj.get("ContactLanguage") != null && !jsonObj.get("ContactLanguage").isJsonNull()) {
        ContactLanguage.validateJsonElement(jsonObj.get("ContactLanguage"));
      }
      // validate the optional field `UseCaseDescription`
      if (jsonObj.get("UseCaseDescription") != null && !jsonObj.get("UseCaseDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("UseCaseDescription"));
      }
      // validate the optional field `AdditionalContactEmailAddresses`
      if (jsonObj.get("AdditionalContactEmailAddresses") != null && !jsonObj.get("AdditionalContactEmailAddresses").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AdditionalContactEmailAddresses"));
      }
      // validate the optional field `ReviewDetails`
      if (jsonObj.get("ReviewDetails") != null && !jsonObj.get("ReviewDetails").isJsonNull()) {
        AccountDetailsReviewDetails.validateJsonElement(jsonObj.get("ReviewDetails"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetAccountResponseDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetAccountResponseDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetAccountResponseDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetAccountResponseDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<GetAccountResponseDetails>() {
           @Override
           public void write(JsonWriter out, GetAccountResponseDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetAccountResponseDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetAccountResponseDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetAccountResponseDetails
   * @throws IOException if the JSON string is invalid with respect to GetAccountResponseDetails
   */
  public static GetAccountResponseDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetAccountResponseDetails.class);
  }

  /**
   * Convert an instance of GetAccountResponseDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

