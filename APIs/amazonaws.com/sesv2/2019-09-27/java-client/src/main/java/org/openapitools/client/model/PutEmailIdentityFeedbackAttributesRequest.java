/*
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutEmailIdentityFeedbackAttributesRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:13.736436-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PutEmailIdentityFeedbackAttributesRequest {
  public static final String SERIALIZED_NAME_EMAIL_FORWARDING_ENABLED = "EmailForwardingEnabled";
  @SerializedName(SERIALIZED_NAME_EMAIL_FORWARDING_ENABLED)
  private Boolean emailForwardingEnabled;

  public PutEmailIdentityFeedbackAttributesRequest() {
  }

  public PutEmailIdentityFeedbackAttributesRequest emailForwardingEnabled(Boolean emailForwardingEnabled) {
    this.emailForwardingEnabled = emailForwardingEnabled;
    return this;
  }

  /**
   * &lt;p&gt;Sets the feedback forwarding configuration for the identity.&lt;/p&gt; &lt;p&gt;If the value is &lt;code&gt;true&lt;/code&gt;, you receive email notifications when bounce or complaint events occur. These notifications are sent to the address that you specified in the &lt;code&gt;Return-Path&lt;/code&gt; header of the original email.&lt;/p&gt; &lt;p&gt;You&#39;re required to have a method of tracking bounces and complaints. If you haven&#39;t set up another mechanism for receiving bounce or complaint notifications (for example, by setting up an event destination), you receive an email notification when these events occur (even if this setting is disabled).&lt;/p&gt;
   * @return emailForwardingEnabled
   */
  @javax.annotation.Nullable
  public Boolean getEmailForwardingEnabled() {
    return emailForwardingEnabled;
  }

  public void setEmailForwardingEnabled(Boolean emailForwardingEnabled) {
    this.emailForwardingEnabled = emailForwardingEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutEmailIdentityFeedbackAttributesRequest putEmailIdentityFeedbackAttributesRequest = (PutEmailIdentityFeedbackAttributesRequest) o;
    return Objects.equals(this.emailForwardingEnabled, putEmailIdentityFeedbackAttributesRequest.emailForwardingEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emailForwardingEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutEmailIdentityFeedbackAttributesRequest {\n");
    sb.append("    emailForwardingEnabled: ").append(toIndentedString(emailForwardingEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EmailForwardingEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutEmailIdentityFeedbackAttributesRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutEmailIdentityFeedbackAttributesRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutEmailIdentityFeedbackAttributesRequest is not found in the empty JSON string", PutEmailIdentityFeedbackAttributesRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutEmailIdentityFeedbackAttributesRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutEmailIdentityFeedbackAttributesRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutEmailIdentityFeedbackAttributesRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutEmailIdentityFeedbackAttributesRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutEmailIdentityFeedbackAttributesRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutEmailIdentityFeedbackAttributesRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PutEmailIdentityFeedbackAttributesRequest>() {
           @Override
           public void write(JsonWriter out, PutEmailIdentityFeedbackAttributesRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutEmailIdentityFeedbackAttributesRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutEmailIdentityFeedbackAttributesRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutEmailIdentityFeedbackAttributesRequest
   * @throws IOException if the JSON string is invalid with respect to PutEmailIdentityFeedbackAttributesRequest
   */
  public static PutEmailIdentityFeedbackAttributesRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutEmailIdentityFeedbackAttributesRequest.class);
  }

  /**
   * Convert an instance of PutEmailIdentityFeedbackAttributesRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

