/*
 * Amazon Simple Email Service
 * <fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\">Amazon SES</a> is an Amazon Web Services service that you can use to send email messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\">Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer Guide</i> provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
 *
 * The version of the OpenAPI document: 2019-09-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:13.736436-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign {
  public static final String SERIALIZED_NAME_CAMPAIGN_ID = "CampaignId";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID)
  private String campaignId;

  public static final String SERIALIZED_NAME_IMAGE_URL = "ImageUrl";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private String imageUrl;

  public static final String SERIALIZED_NAME_SUBJECT = "Subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_FROM_ADDRESS = "FromAddress";
  @SerializedName(SERIALIZED_NAME_FROM_ADDRESS)
  private String fromAddress;

  public static final String SERIALIZED_NAME_SENDING_IPS = "SendingIps";
  @SerializedName(SERIALIZED_NAME_SENDING_IPS)
  private List sendingIps;

  public static final String SERIALIZED_NAME_FIRST_SEEN_DATE_TIME = "FirstSeenDateTime";
  @SerializedName(SERIALIZED_NAME_FIRST_SEEN_DATE_TIME)
  private OffsetDateTime firstSeenDateTime;

  public static final String SERIALIZED_NAME_LAST_SEEN_DATE_TIME = "LastSeenDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_SEEN_DATE_TIME)
  private OffsetDateTime lastSeenDateTime;

  public static final String SERIALIZED_NAME_INBOX_COUNT = "InboxCount";
  @SerializedName(SERIALIZED_NAME_INBOX_COUNT)
  private Integer inboxCount;

  public static final String SERIALIZED_NAME_SPAM_COUNT = "SpamCount";
  @SerializedName(SERIALIZED_NAME_SPAM_COUNT)
  private Integer spamCount;

  public static final String SERIALIZED_NAME_READ_RATE = "ReadRate";
  @SerializedName(SERIALIZED_NAME_READ_RATE)
  private Double readRate;

  public static final String SERIALIZED_NAME_DELETE_RATE = "DeleteRate";
  @SerializedName(SERIALIZED_NAME_DELETE_RATE)
  private Double deleteRate;

  public static final String SERIALIZED_NAME_READ_DELETE_RATE = "ReadDeleteRate";
  @SerializedName(SERIALIZED_NAME_READ_DELETE_RATE)
  private Double readDeleteRate;

  public static final String SERIALIZED_NAME_PROJECTED_VOLUME = "ProjectedVolume";
  @SerializedName(SERIALIZED_NAME_PROJECTED_VOLUME)
  private Integer projectedVolume;

  public static final String SERIALIZED_NAME_ESPS = "Esps";
  @SerializedName(SERIALIZED_NAME_ESPS)
  private List esps;

  public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign() {
  }

  public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign campaignId(String campaignId) {
    this.campaignId = campaignId;
    return this;
  }

  /**
   * Get campaignId
   * @return campaignId
   */
  @javax.annotation.Nullable
  public String getCampaignId() {
    return campaignId;
  }

  public void setCampaignId(String campaignId) {
    this.campaignId = campaignId;
  }


  public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

  /**
   * Get imageUrl
   * @return imageUrl
   */
  @javax.annotation.Nullable
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign subject(String subject) {
    this.subject = subject;
    return this;
  }

  /**
   * Get subject
   * @return subject
   */
  @javax.annotation.Nullable
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }


  public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign fromAddress(String fromAddress) {
    this.fromAddress = fromAddress;
    return this;
  }

  /**
   * Get fromAddress
   * @return fromAddress
   */
  @javax.annotation.Nullable
  public String getFromAddress() {
    return fromAddress;
  }

  public void setFromAddress(String fromAddress) {
    this.fromAddress = fromAddress;
  }


  public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign sendingIps(List sendingIps) {
    this.sendingIps = sendingIps;
    return this;
  }

  /**
   * Get sendingIps
   * @return sendingIps
   */
  @javax.annotation.Nullable
  public List getSendingIps() {
    return sendingIps;
  }

  public void setSendingIps(List sendingIps) {
    this.sendingIps = sendingIps;
  }


  public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign firstSeenDateTime(OffsetDateTime firstSeenDateTime) {
    this.firstSeenDateTime = firstSeenDateTime;
    return this;
  }

  /**
   * Get firstSeenDateTime
   * @return firstSeenDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getFirstSeenDateTime() {
    return firstSeenDateTime;
  }

  public void setFirstSeenDateTime(OffsetDateTime firstSeenDateTime) {
    this.firstSeenDateTime = firstSeenDateTime;
  }


  public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign lastSeenDateTime(OffsetDateTime lastSeenDateTime) {
    this.lastSeenDateTime = lastSeenDateTime;
    return this;
  }

  /**
   * Get lastSeenDateTime
   * @return lastSeenDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastSeenDateTime() {
    return lastSeenDateTime;
  }

  public void setLastSeenDateTime(OffsetDateTime lastSeenDateTime) {
    this.lastSeenDateTime = lastSeenDateTime;
  }


  public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign inboxCount(Integer inboxCount) {
    this.inboxCount = inboxCount;
    return this;
  }

  /**
   * Get inboxCount
   * @return inboxCount
   */
  @javax.annotation.Nullable
  public Integer getInboxCount() {
    return inboxCount;
  }

  public void setInboxCount(Integer inboxCount) {
    this.inboxCount = inboxCount;
  }


  public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign spamCount(Integer spamCount) {
    this.spamCount = spamCount;
    return this;
  }

  /**
   * Get spamCount
   * @return spamCount
   */
  @javax.annotation.Nullable
  public Integer getSpamCount() {
    return spamCount;
  }

  public void setSpamCount(Integer spamCount) {
    this.spamCount = spamCount;
  }


  public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign readRate(Double readRate) {
    this.readRate = readRate;
    return this;
  }

  /**
   * Get readRate
   * @return readRate
   */
  @javax.annotation.Nullable
  public Double getReadRate() {
    return readRate;
  }

  public void setReadRate(Double readRate) {
    this.readRate = readRate;
  }


  public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign deleteRate(Double deleteRate) {
    this.deleteRate = deleteRate;
    return this;
  }

  /**
   * Get deleteRate
   * @return deleteRate
   */
  @javax.annotation.Nullable
  public Double getDeleteRate() {
    return deleteRate;
  }

  public void setDeleteRate(Double deleteRate) {
    this.deleteRate = deleteRate;
  }


  public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign readDeleteRate(Double readDeleteRate) {
    this.readDeleteRate = readDeleteRate;
    return this;
  }

  /**
   * Get readDeleteRate
   * @return readDeleteRate
   */
  @javax.annotation.Nullable
  public Double getReadDeleteRate() {
    return readDeleteRate;
  }

  public void setReadDeleteRate(Double readDeleteRate) {
    this.readDeleteRate = readDeleteRate;
  }


  public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign projectedVolume(Integer projectedVolume) {
    this.projectedVolume = projectedVolume;
    return this;
  }

  /**
   * Get projectedVolume
   * @return projectedVolume
   */
  @javax.annotation.Nullable
  public Integer getProjectedVolume() {
    return projectedVolume;
  }

  public void setProjectedVolume(Integer projectedVolume) {
    this.projectedVolume = projectedVolume;
  }


  public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign esps(List esps) {
    this.esps = esps;
    return this;
  }

  /**
   * Get esps
   * @return esps
   */
  @javax.annotation.Nullable
  public List getEsps() {
    return esps;
  }

  public void setEsps(List esps) {
    this.esps = esps;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign getDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign = (GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign) o;
    return Objects.equals(this.campaignId, getDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.campaignId) &&
        Objects.equals(this.imageUrl, getDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.imageUrl) &&
        Objects.equals(this.subject, getDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.subject) &&
        Objects.equals(this.fromAddress, getDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.fromAddress) &&
        Objects.equals(this.sendingIps, getDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.sendingIps) &&
        Objects.equals(this.firstSeenDateTime, getDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.firstSeenDateTime) &&
        Objects.equals(this.lastSeenDateTime, getDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.lastSeenDateTime) &&
        Objects.equals(this.inboxCount, getDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.inboxCount) &&
        Objects.equals(this.spamCount, getDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.spamCount) &&
        Objects.equals(this.readRate, getDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.readRate) &&
        Objects.equals(this.deleteRate, getDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.deleteRate) &&
        Objects.equals(this.readDeleteRate, getDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.readDeleteRate) &&
        Objects.equals(this.projectedVolume, getDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.projectedVolume) &&
        Objects.equals(this.esps, getDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.esps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(campaignId, imageUrl, subject, fromAddress, sendingIps, firstSeenDateTime, lastSeenDateTime, inboxCount, spamCount, readRate, deleteRate, readDeleteRate, projectedVolume, esps);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign {\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    fromAddress: ").append(toIndentedString(fromAddress)).append("\n");
    sb.append("    sendingIps: ").append(toIndentedString(sendingIps)).append("\n");
    sb.append("    firstSeenDateTime: ").append(toIndentedString(firstSeenDateTime)).append("\n");
    sb.append("    lastSeenDateTime: ").append(toIndentedString(lastSeenDateTime)).append("\n");
    sb.append("    inboxCount: ").append(toIndentedString(inboxCount)).append("\n");
    sb.append("    spamCount: ").append(toIndentedString(spamCount)).append("\n");
    sb.append("    readRate: ").append(toIndentedString(readRate)).append("\n");
    sb.append("    deleteRate: ").append(toIndentedString(deleteRate)).append("\n");
    sb.append("    readDeleteRate: ").append(toIndentedString(readDeleteRate)).append("\n");
    sb.append("    projectedVolume: ").append(toIndentedString(projectedVolume)).append("\n");
    sb.append("    esps: ").append(toIndentedString(esps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CampaignId");
    openapiFields.add("ImageUrl");
    openapiFields.add("Subject");
    openapiFields.add("FromAddress");
    openapiFields.add("SendingIps");
    openapiFields.add("FirstSeenDateTime");
    openapiFields.add("LastSeenDateTime");
    openapiFields.add("InboxCount");
    openapiFields.add("SpamCount");
    openapiFields.add("ReadRate");
    openapiFields.add("DeleteRate");
    openapiFields.add("ReadDeleteRate");
    openapiFields.add("ProjectedVolume");
    openapiFields.add("Esps");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign is not found in the empty JSON string", GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CampaignId`
      if (jsonObj.get("CampaignId") != null && !jsonObj.get("CampaignId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CampaignId"));
      }
      // validate the optional field `ImageUrl`
      if (jsonObj.get("ImageUrl") != null && !jsonObj.get("ImageUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ImageUrl"));
      }
      // validate the optional field `Subject`
      if (jsonObj.get("Subject") != null && !jsonObj.get("Subject").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Subject"));
      }
      // validate the optional field `FromAddress`
      if (jsonObj.get("FromAddress") != null && !jsonObj.get("FromAddress").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FromAddress"));
      }
      // validate the optional field `SendingIps`
      if (jsonObj.get("SendingIps") != null && !jsonObj.get("SendingIps").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SendingIps"));
      }
      // validate the optional field `FirstSeenDateTime`
      if (jsonObj.get("FirstSeenDateTime") != null && !jsonObj.get("FirstSeenDateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("FirstSeenDateTime"));
      }
      // validate the optional field `LastSeenDateTime`
      if (jsonObj.get("LastSeenDateTime") != null && !jsonObj.get("LastSeenDateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastSeenDateTime"));
      }
      // validate the optional field `InboxCount`
      if (jsonObj.get("InboxCount") != null && !jsonObj.get("InboxCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("InboxCount"));
      }
      // validate the optional field `SpamCount`
      if (jsonObj.get("SpamCount") != null && !jsonObj.get("SpamCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SpamCount"));
      }
      // validate the optional field `ReadRate`
      if (jsonObj.get("ReadRate") != null && !jsonObj.get("ReadRate").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("ReadRate"));
      }
      // validate the optional field `DeleteRate`
      if (jsonObj.get("DeleteRate") != null && !jsonObj.get("DeleteRate").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("DeleteRate"));
      }
      // validate the optional field `ReadDeleteRate`
      if (jsonObj.get("ReadDeleteRate") != null && !jsonObj.get("ReadDeleteRate").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("ReadDeleteRate"));
      }
      // validate the optional field `ProjectedVolume`
      if (jsonObj.get("ProjectedVolume") != null && !jsonObj.get("ProjectedVolume").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ProjectedVolume"));
      }
      // validate the optional field `Esps`
      if (jsonObj.get("Esps") != null && !jsonObj.get("Esps").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Esps"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.class));

       return (TypeAdapter<T>) new TypeAdapter<GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign>() {
           @Override
           public void write(JsonWriter out, GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign
   * @throws IOException if the JSON string is invalid with respect to GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign
   */
  public static GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign.class);
  }

  /**
   * Convert an instance of GetDomainDeliverabilityCampaignResponseDomainDeliverabilityCampaign to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

