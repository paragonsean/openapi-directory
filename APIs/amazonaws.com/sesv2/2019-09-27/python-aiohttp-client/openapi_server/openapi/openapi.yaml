openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Amazon SES API v2</fullname> <p> <a href=\"http://aws.amazon.com/ses\"\
    >Amazon SES</a> is an Amazon Web Services service that you can use to send email\
    \ messages to your customers.</p> <p>If you're new to Amazon SES API v2, you might\
    \ find it helpful to review the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/\"\
    >Amazon Simple Email Service Developer Guide</a>. The <i>Amazon SES Developer\
    \ Guide</i> provides information and code samples that demonstrate how to use\
    \ Amazon SES API v2 features programmatically.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Simple Email Service
  version: 2019-09-27
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: sesv2
  x-aws-signingName: ses
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sesv2-2019-09-27.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/email/
servers:
- description: The Amazon SES V2 multi-region endpoint
  url: "http://email.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon SES V2 multi-region endpoint
  url: "https://email.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon SES V2 endpoint for China (Beijing) and China (Ningxia)
  url: "http://email.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon SES V2 endpoint for China (Beijing) and China (Ningxia)
  url: "https://email.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /v1/email/identities/{EmailIdentity}/dkim/signing:
    put:
      description: <p>Used to configure or change the DKIM authentication settings
        for an email domain identity. You can use this operation to do any of the
        following:</p> <ul> <li> <p>Update the signing attributes for an identity
        that uses Bring Your Own DKIM (BYODKIM).</p> </li> <li> <p>Update the key
        length that should be used for Easy DKIM.</p> </li> <li> <p>Change from using
        no DKIM authentication to using Easy DKIM.</p> </li> <li> <p>Change from using
        no DKIM authentication to using BYODKIM.</p> </li> <li> <p>Change from using
        Easy DKIM to using BYODKIM.</p> </li> <li> <p>Change from using BYODKIM to
        using Easy DKIM.</p> </li> </ul>
      operationId: put_email_identity_dkim_signing_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The email identity.
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEmailIdentityDkimSigningAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEmailIdentityDkimSigningAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/account:
    get:
      description: Obtain information about the email-sending status and capabilities
        of your Amazon SES account in the current Amazon Web Services Region.
      operationId: get_account
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/account/dedicated-ips/warmup:
    put:
      description: Enable or disable the automatic warm-up feature for dedicated IP
        addresses.
      operationId: put_account_dedicated_ip_warmup_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountDedicatedIpWarmupAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountDedicatedIpWarmupAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/account/details:
    post:
      description: Update your Amazon SES account details.
      operationId: put_account_details
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountDetails_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountDetailsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/account/sending:
    put:
      description: Enable or disable the ability of your account to send email.
      operationId: put_account_sending_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountSendingAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountSendingAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/account/suppression:
    put:
      description: Change the settings for the account-level suppression list.
      operationId: put_account_suppression_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountSuppressionAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountSuppressionAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/account/vdm:
    put:
      description: <p>Update your Amazon SES account VDM attributes.</p> <p>You can
        execute this operation no more than once per second.</p>
      operationId: put_account_vdm_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountVdmAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountVdmAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/configuration-sets:
    get:
      description: "<p>List all of the configuration sets associated with your account\
        \ in the current region.</p> <p> <i>Configuration sets</i> are groups of rules\
        \ that you can apply to the emails you send. You apply a configuration set\
        \ to an email by including a reference to the configuration set in the headers\
        \ of the email. When you apply a configuration set to an email, all of the\
        \ rules in that configuration set are applied to the email.</p>"
      operationId: list_configuration_sets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A token returned from a previous call to <code>ListConfigurationSets</code>
          to indicate the position in the list of configuration sets.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "The number of results to show in a single call to <code>ListConfigurationSets</code>.\
          \ If the number of results is larger than the number you specified in this\
          \ parameter, then the response includes a <code>NextToken</code> element,\
          \ which you can use to obtain additional results."
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfigurationSetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Create a configuration set. <i>Configuration sets</i> are groups\
        \ of rules that you can apply to the emails that you send. You apply a configuration\
        \ set to an email by specifying the name of the configuration set when you\
        \ call the Amazon SES API v2. When you apply a configuration set to an email,\
        \ all of the rules in that configuration set are applied to the email. "
      operationId: create_configuration_set
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConfigurationSet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConfigurationSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/configuration-sets/{ConfigurationSetName}:
    delete:
      description: "<p>Delete an existing configuration set.</p> <p> <i>Configuration\
        \ sets</i> are groups of rules that you can apply to the emails you send.\
        \ You apply a configuration set to an email by including a reference to the\
        \ configuration set in the headers of the email. When you apply a configuration\
        \ set to an email, all of the rules in that configuration set are applied\
        \ to the email.</p>"
      operationId: delete_configuration_set
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConfigurationSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "<p>Get information about an existing configuration set, including\
        \ the dedicated IP pool that it's associated with, whether or not it's enabled\
        \ for sending email, and more.</p> <p> <i>Configuration sets</i> are groups\
        \ of rules that you can apply to the emails you send. You apply a configuration\
        \ set to an email by including a reference to the configuration set in the\
        \ headers of the email. When you apply a configuration set to an email, all\
        \ of the rules in that configuration set are applied to the email.</p>"
      operationId: get_configuration_set
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigurationSetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/configuration-sets/{ConfigurationSetName}/delivery-options:
    put:
      description: Associate a configuration set with a dedicated IP pool. You can
        use dedicated IP pools to create groups of dedicated IP addresses for sending
        specific types of email.
      operationId: put_configuration_set_delivery_options
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set to associate with a dedicated
          IP pool.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConfigurationSetDeliveryOptions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationSetDeliveryOptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/configuration-sets/{ConfigurationSetName}/event-destinations:
    get:
      description: "<p>Retrieve a list of event destinations that are associated with\
        \ a configuration set.</p> <p> <i>Events</i> include message sends, deliveries,\
        \ opens, clicks, bounces, and complaints. <i>Event destinations</i> are places\
        \ that you can send information about these events to. For example, you can\
        \ send event data to Amazon SNS to receive notifications when you receive\
        \ bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream\
        \ data to Amazon S3 for long-term storage.</p>"
      operationId: get_configuration_set_event_destinations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set that contains the event destination.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigurationSetEventDestinationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Create an event destination. <i>Events</i> include message\
        \ sends, deliveries, opens, clicks, bounces, and complaints. <i>Event destinations</i>\
        \ are places that you can send information about these events to. For example,\
        \ you can send event data to Amazon SNS to receive notifications when you\
        \ receive bounces or complaints, or you can use Amazon Kinesis Data Firehose\
        \ to stream data to Amazon S3 for long-term storage.</p> <p>A single configuration\
        \ set can include more than one event destination.</p>"
      operationId: create_configuration_set_event_destination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set .
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConfigurationSetEventDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}:
    delete:
      description: "<p>Delete an event destination.</p> <p> <i>Events</i> include\
        \ message sends, deliveries, opens, clicks, bounces, and complaints. <i>Event\
        \ destinations</i> are places that you can send information about these events\
        \ to. For example, you can send event data to Amazon SNS to receive notifications\
        \ when you receive bounces or complaints, or you can use Amazon Kinesis Data\
        \ Firehose to stream data to Amazon S3 for long-term storage.</p>"
      operationId: delete_configuration_set_event_destination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set that contains the event destination
          to delete.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          type: string
        style: simple
      - description: The name of the event destination to delete.
        explode: false
        in: path
        name: EventDestinationName
        required: true
        schema:
          description: "<p>The name of an event destination.</p> <p> <i>Events</i>\
            \ include message sends, deliveries, opens, clicks, bounces, and complaints.\
            \ <i>Event destinations</i> are places that you can send information about\
            \ these events to. For example, you can send event data to Amazon SNS\
            \ to receive notifications when you receive bounces or complaints, or\
            \ you can use Amazon Kinesis Data Firehose to stream data to Amazon S3\
            \ for long-term storage.</p>"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConfigurationSetEventDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "<p>Update the configuration of an event destination for a configuration\
        \ set.</p> <p> <i>Events</i> include message sends, deliveries, opens, clicks,\
        \ bounces, and complaints. <i>Event destinations</i> are places that you can\
        \ send information about these events to. For example, you can send event\
        \ data to Amazon SNS to receive notifications when you receive bounces or\
        \ complaints, or you can use Amazon Kinesis Data Firehose to stream data to\
        \ Amazon S3 for long-term storage.</p>"
      operationId: update_configuration_set_event_destination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set that contains the event destination
          to modify.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          type: string
        style: simple
      - description: The name of the event destination.
        explode: false
        in: path
        name: EventDestinationName
        required: true
        schema:
          description: "<p>The name of an event destination.</p> <p> <i>Events</i>\
            \ include message sends, deliveries, opens, clicks, bounces, and complaints.\
            \ <i>Event destinations</i> are places that you can send information about\
            \ these events to. For example, you can send event data to Amazon SNS\
            \ to receive notifications when you receive bounces or complaints, or\
            \ you can use Amazon Kinesis Data Firehose to stream data to Amazon S3\
            \ for long-term storage.</p>"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigurationSetEventDestination_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConfigurationSetEventDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/configuration-sets/{ConfigurationSetName}/reputation-options:
    put:
      description: Enable or disable collection of reputation metrics for emails that
        you send using a particular configuration set in a specific Amazon Web Services
        Region.
      operationId: put_configuration_set_reputation_options
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConfigurationSetReputationOptions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationSetReputationOptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/configuration-sets/{ConfigurationSetName}/sending:
    put:
      description: Enable or disable email sending for messages that use a particular
        configuration set in a specific Amazon Web Services Region.
      operationId: put_configuration_set_sending_options
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set to enable or disable email
          sending for.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConfigurationSetSendingOptions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationSetSendingOptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/configuration-sets/{ConfigurationSetName}/suppression-options:
    put:
      description: Specify the account suppression list preferences for a configuration
        set.
      operationId: put_configuration_set_suppression_options
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set to change the suppression list
          preferences for.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConfigurationSetSuppressionOptions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationSetSuppressionOptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/configuration-sets/{ConfigurationSetName}/tracking-options:
    put:
      description: Specify a custom domain to use for open and click tracking elements
        in email that you send.
      operationId: put_configuration_set_tracking_options
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConfigurationSetTrackingOptions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationSetTrackingOptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/configuration-sets/{ConfigurationSetName}/vdm-options:
    put:
      description: <p>Specify VDM preferences for email that you send using the configuration
        set.</p> <p>You can execute this operation no more than once per second.</p>
      operationId: put_configuration_set_vdm_options
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the configuration set.
        explode: false
        in: path
        name: ConfigurationSetName
        required: true
        schema:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConfigurationSetVdmOptions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutConfigurationSetVdmOptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/contact-lists:
    get:
      description: Lists all of the contact lists available.
      operationId: list_contact_lists
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "Maximum number of contact lists to return at once. Use this\
          \ parameter to paginate results. If additional contact lists exist beyond\
          \ the specified limit, the <code>NextToken</code> element is sent in the\
          \ response. Use the <code>NextToken</code> value in subsequent requests\
          \ to retrieve additional lists."
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A string token indicating that there might be additional contact
          lists available to be listed. Use the token provided in the Response to
          use in the subsequent call to ListContactLists with the same parameters
          to retrieve the next page of contact lists.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactListsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a contact list.
      operationId: create_contact_list
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactList_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContactListResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/contact-lists/{ContactListName}:
    delete:
      description: Deletes a contact list and all of the contacts on that list.
      operationId: delete_contact_list
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the contact list.
        explode: false
        in: path
        name: ContactListName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteContactListResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Returns contact list metadata. It does not return any information
        about the contacts present in the list.
      operationId: get_contact_list
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the contact list.
        explode: false
        in: path
        name: ContactListName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactListResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates contact list metadata. This operation does a complete replacement.
      operationId: update_contact_list
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the contact list.
        explode: false
        in: path
        name: ContactListName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactList_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContactListResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/contact-lists/{ContactListName}/contacts:
    get:
      description: Lists the contacts present in a specific contact list.
      operationId: list_contacts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the contact list.
        explode: false
        in: path
        name: ContactListName
        required: true
        schema:
          type: string
        style: simple
      - description: "The number of contacts that may be returned at once, which is\
          \ dependent on if there are more or less contacts than the value of the\
          \ PageSize. Use this parameter to paginate results. If additional contacts\
          \ exist beyond the specified limit, the <code>NextToken</code> element is\
          \ sent in the response. Use the <code>NextToken</code> value in subsequent\
          \ requests to retrieve additional contacts."
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A string token indicating that there might be additional contacts
          available to be listed. Use the token provided in the Response to use in
          the subsequent call to ListContacts with the same parameters to retrieve
          the next page of contacts.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListContacts_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    post:
      description: "Creates a contact, which is an end-user who is receiving the email,\
        \ and adds them to a contact list."
      operationId: create_contact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the contact list to which the contact should be added.
        explode: false
        in: path
        name: ContactListName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContact_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContactResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/contact-lists/{ContactListName}/contacts/{EmailAddress}:
    delete:
      description: Removes a contact from a contact list.
      operationId: delete_contact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the contact list from which the contact should be
          removed.
        explode: false
        in: path
        name: ContactListName
        required: true
        schema:
          type: string
        style: simple
      - description: The contact's email address.
        explode: false
        in: path
        name: EmailAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteContactResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Returns a contact from a contact list.
      operationId: get_contact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the contact list to which the contact belongs.
        explode: false
        in: path
        name: ContactListName
        required: true
        schema:
          type: string
        style: simple
      - description: The contact's email address.
        explode: false
        in: path
        name: EmailAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "Updates a contact's preferences for a list. It is not necessary\
        \ to specify all existing topic preferences in the TopicPreferences object,\
        \ just the ones that need updating."
      operationId: update_contact
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the contact list.
        explode: false
        in: path
        name: ContactListName
        required: true
        schema:
          type: string
        style: simple
      - description: The contact's email address.
        explode: false
        in: path
        name: EmailAddress
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContact_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContactResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/custom-verification-email-templates:
    get:
      description: "<p>Lists the existing custom verification email templates for\
        \ your account in the current Amazon Web Services Region.</p> <p>For more\
        \ information about custom verification email templates, see <a href=\"https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom\"\
        >Using custom verification email templates</a> in the <i>Amazon SES Developer\
        \ Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>"
      operationId: list_custom_verification_email_templates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A token returned from a previous call to <code>ListCustomVerificationEmailTemplates</code>
          to indicate the position in the list of custom verification email templates.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The number of results to show in a single call to <code>ListCustomVerificationEmailTemplates</code>.\
          \ If the number of results is larger than the number you specified in this\
          \ parameter, then the response includes a <code>NextToken</code> element,\
          \ which you can use to obtain additional results.</p> <p>The value you specify\
          \ has to be at least 1, and can be no more than 50.</p>"
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomVerificationEmailTemplatesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates a new custom verification email template.</p> <p>For\
        \ more information about custom verification email templates, see <a href=\"\
        https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom\"\
        >Using custom verification email templates</a> in the <i>Amazon SES Developer\
        \ Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>"
      operationId: create_custom_verification_email_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomVerificationEmailTemplate_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomVerificationEmailTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/custom-verification-email-templates/{TemplateName}:
    delete:
      description: "<p>Deletes an existing custom verification email template.</p>\
        \ <p>For more information about custom verification email templates, see <a\
        \ href=\"https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom\"\
        >Using custom verification email templates</a> in the <i>Amazon SES Developer\
        \ Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>"
      operationId: delete_custom_verification_email_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the custom verification email template that you want
          to delete.
        explode: false
        in: path
        name: TemplateName
        required: true
        schema:
          description: The name of the template. You will refer to this name when
            you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code>
            operations.
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomVerificationEmailTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "<p>Returns the custom email verification template for the template\
        \ name you specify.</p> <p>For more information about custom verification\
        \ email templates, see <a href=\"https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom\"\
        >Using custom verification email templates</a> in the <i>Amazon SES Developer\
        \ Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>"
      operationId: get_custom_verification_email_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the custom verification email template that you want
          to retrieve.
        explode: false
        in: path
        name: TemplateName
        required: true
        schema:
          description: The name of the template. You will refer to this name when
            you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code>
            operations.
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomVerificationEmailTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "<p>Updates an existing custom verification email template.</p>\
        \ <p>For more information about custom verification email templates, see <a\
        \ href=\"https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom\"\
        >Using custom verification email templates</a> in the <i>Amazon SES Developer\
        \ Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>"
      operationId: update_custom_verification_email_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the custom verification email template that you want
          to update.
        explode: false
        in: path
        name: TemplateName
        required: true
        schema:
          description: The name of the template. You will refer to this name when
            you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code>
            operations.
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomVerificationEmailTemplate_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCustomVerificationEmailTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/dedicated-ip-pools:
    get:
      description: List all of the dedicated IP pools that exist in your Amazon Web
        Services account in the current Region.
      operationId: list_dedicated_ip_pools
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A token returned from a previous call to <code>ListDedicatedIpPools</code>
          to indicate the position in the list of dedicated IP pools.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "The number of results to show in a single call to <code>ListDedicatedIpPools</code>.\
          \ If the number of results is larger than the number you specified in this\
          \ parameter, then the response includes a <code>NextToken</code> element,\
          \ which you can use to obtain additional results."
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDedicatedIpPoolsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Create a new pool of dedicated IP addresses. A pool can include\
        \ one or more dedicated IP addresses that are associated with your Amazon\
        \ Web Services account. You can associate a pool with a configuration set.\
        \ When you send an email that uses that configuration set, the message is\
        \ sent from one of the addresses in the associated pool."
      operationId: create_dedicated_ip_pool
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDedicatedIpPool_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDedicatedIpPoolResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/dedicated-ip-pools/{PoolName}:
    delete:
      description: Delete a dedicated IP pool.
      operationId: delete_dedicated_ip_pool
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the dedicated IP pool that you want to delete.
        explode: false
        in: path
        name: PoolName
        required: true
        schema:
          description: The name of a dedicated IP pool.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDedicatedIpPoolResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieve information about the dedicated pool.
      operationId: get_dedicated_ip_pool
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the dedicated IP pool to retrieve.
        explode: false
        in: path
        name: PoolName
        required: true
        schema:
          description: The name of a dedicated IP pool.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDedicatedIpPoolResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/dedicated-ip-pools/{PoolName}/scaling:
    put:
      description: <p>Used to convert a dedicated IP pool to a different scaling mode.</p>
        <note> <p> <code>MANAGED</code> pools cannot be converted to <code>STANDARD</code>
        scaling mode.</p> </note>
      operationId: put_dedicated_ip_pool_scaling_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the dedicated IP pool.
        explode: false
        in: path
        name: PoolName
        required: true
        schema:
          description: The name of a dedicated IP pool.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDedicatedIpPoolScalingAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDedicatedIpPoolScalingAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/dedicated-ips:
    get:
      description: List the dedicated IP addresses that are associated with your Amazon
        Web Services account.
      operationId: get_dedicated_ips
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the IP pool that the dedicated IP address is associated
          with.
        explode: true
        in: query
        name: PoolName
        required: false
        schema:
          description: The name of a dedicated IP pool.
          type: string
        style: form
      - description: A token returned from a previous call to <code>GetDedicatedIps</code>
          to indicate the position of the dedicated IP pool in the list of IP pools.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "The number of results to show in a single call to <code>GetDedicatedIpsRequest</code>.\
          \ If the number of results is larger than the number you specified in this\
          \ parameter, then the response includes a <code>NextToken</code> element,\
          \ which you can use to obtain additional results."
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDedicatedIpsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/dedicated-ips/{IP}:
    get:
      description: "Get information about a dedicated IP address, including the name\
        \ of the dedicated IP pool that it's associated with, as well information\
        \ about the automatic warm-up process for the address."
      operationId: get_dedicated_ip
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The IP address that you want to obtain more information about.
          The value you specify has to be a dedicated IP address that's assocaited
          with your Amazon Web Services account.
        explode: false
        in: path
        name: IP
        required: true
        schema:
          description: An IPv4 address.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDedicatedIpResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/dedicated-ips/{IP}/pool:
    put:
      description: "<p>Move a dedicated IP address to an existing dedicated IP pool.</p>\
        \ <note> <p>The dedicated IP address that you specify must already exist,\
        \ and must be associated with your Amazon Web Services account. </p> <p>The\
        \ dedicated IP pool you specify must already exist. You can create a new pool\
        \ by using the <code>CreateDedicatedIpPool</code> operation.</p> </note>"
      operationId: put_dedicated_ip_in_pool
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The IP address that you want to move to the dedicated IP pool.
          The value you specify has to be a dedicated IP address that's associated
          with your Amazon Web Services account.
        explode: false
        in: path
        name: IP
        required: true
        schema:
          description: An IPv4 address.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDedicatedIpInPool_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDedicatedIpInPoolResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/dedicated-ips/{IP}/warmup:
    put:
      description: <p/>
      operationId: put_dedicated_ip_warmup_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The dedicated IP address that you want to update the warm-up
          attributes for.
        explode: false
        in: path
        name: IP
        required: true
        schema:
          description: An IPv4 address.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDedicatedIpWarmupAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDedicatedIpWarmupAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/deliverability-dashboard:
    get:
      description: "<p>Retrieve information about the status of the Deliverability\
        \ dashboard for your account. When the Deliverability dashboard is enabled,\
        \ you gain access to reputation, deliverability, and other metrics for the\
        \ domains that you use to send email. You also gain the ability to perform\
        \ predictive inbox placement tests.</p> <p>When you use the Deliverability\
        \ dashboard, you pay a monthly subscription charge, in addition to any other\
        \ fees that you accrue by using Amazon SES and other Amazon Web Services services.\
        \ For more information about the features and cost of a Deliverability dashboard\
        \ subscription, see <a href=\"http://aws.amazon.com/ses/pricing/\">Amazon\
        \ SES Pricing</a>.</p>"
      operationId: get_deliverability_dashboard_options
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeliverabilityDashboardOptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "<p>Enable or disable the Deliverability dashboard. When you enable\
        \ the Deliverability dashboard, you gain access to reputation, deliverability,\
        \ and other metrics for the domains that you use to send email. You also gain\
        \ the ability to perform predictive inbox placement tests.</p> <p>When you\
        \ use the Deliverability dashboard, you pay a monthly subscription charge,\
        \ in addition to any other fees that you accrue by using Amazon SES and other\
        \ Amazon Web Services services. For more information about the features and\
        \ cost of a Deliverability dashboard subscription, see <a href=\"http://aws.amazon.com/ses/pricing/\"\
        >Amazon SES Pricing</a>.</p>"
      operationId: put_deliverability_dashboard_option
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDeliverabilityDashboardOption_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDeliverabilityDashboardOptionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/deliverability-dashboard/blacklist-report#BlacklistItemNames:
    get:
      description: Retrieve a list of the blacklists that your dedicated IP addresses
        appear on.
      operationId: get_blacklist_reports
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A list of IP addresses that you want to retrieve blacklist information
          about. You can only specify the dedicated IP addresses that you use to send
          email using Amazon SES or Amazon Pinpoint.
        explode: true
        in: query
        name: BlacklistItemNames
        required: true
        schema:
          items:
            $ref: '#/components/schemas/BlacklistItemName'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlacklistReportsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/deliverability-dashboard/campaigns/{CampaignId}:
    get:
      description: Retrieve all the deliverability data for a specific campaign. This
        data is available for a campaign only if the campaign sent email by using
        a domain that the Deliverability dashboard is enabled for.
      operationId: get_domain_deliverability_campaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the campaign. The Deliverability dashboard
          automatically generates and assigns this identifier to a campaign.
        explode: false
        in: path
        name: CampaignId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDomainDeliverabilityCampaignResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/deliverability-dashboard/domains/{SubscribedDomain}/campaigns#StartDate&EndDate:
    get:
      description: Retrieve deliverability data for all the campaigns that used a
        specific domain to send email during a specified time range. This data is
        available for a domain only if you enabled the Deliverability dashboard for
        the domain.
      operationId: list_domain_deliverability_campaigns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The first day that you want to obtain deliverability data for.
        explode: true
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The last day that you want to obtain deliverability data for.
          This value has to be less than or equal to 30 days after the value of the
          <code>StartDate</code> parameter.
        explode: true
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The domain to obtain deliverability data for.
        explode: false
        in: path
        name: SubscribedDomain
        required: true
        schema:
          type: string
        style: simple
      - description: A token that’s returned from a previous call to the <code>ListDomainDeliverabilityCampaigns</code>
          operation. This token indicates the position of a campaign in the list of
          campaigns.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of results to include in response to a single\
          \ call to the <code>ListDomainDeliverabilityCampaigns</code> operation.\
          \ If the number of results is larger than the number that you specify in\
          \ this parameter, the response includes a <code>NextToken</code> element,\
          \ which you can use to obtain additional results."
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainDeliverabilityCampaignsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/deliverability-dashboard/statistics-report/{Domain}#StartDate&EndDate:
    get:
      description: Retrieve inbox placement and engagement rates for the domains that
        you use to send email.
      operationId: get_domain_statistics_report
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The domain that you want to obtain deliverability metrics for.
        explode: false
        in: path
        name: Domain
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: The first day (in Unix time) that you want to obtain domain deliverability
          metrics for.
        explode: true
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: The last day (in Unix time) that you want to obtain domain deliverability
          metrics for. The <code>EndDate</code> that you specify has to be less than
          or equal to 30 days after the <code>StartDate</code>.
        explode: true
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDomainStatisticsReportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/deliverability-dashboard/test:
    post:
      description: "Create a new predictive inbox placement test. Predictive inbox\
        \ placement tests can help you predict how your messages will be handled by\
        \ various email providers around the world. When you perform a predictive\
        \ inbox placement test, you provide a sample message that contains the content\
        \ that you plan to send to your customers. Amazon SES then sends that message\
        \ to special email addresses spread across several major email providers.\
        \ After about 24 hours, the test is complete, and you can use the <code>GetDeliverabilityTestReport</code>\
        \ operation to view the results of the test."
      operationId: create_deliverability_test_report
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeliverabilityTestReport_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeliverabilityTestReportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSuspendedException'
          description: AccountSuspendedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
          description: SendingPausedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageRejected'
          description: MessageRejected
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailFromDomainNotVerifiedException'
          description: MailFromDomainNotVerifiedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/deliverability-dashboard/test-reports:
    get:
      description: "Show a list of the predictive inbox placement tests that you've\
        \ performed, regardless of their statuses. For predictive inbox placement\
        \ tests that are complete, you can use the <code>GetDeliverabilityTestReport</code>\
        \ operation to view the results."
      operationId: list_deliverability_test_reports
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A token returned from a previous call to <code>ListDeliverabilityTestReports</code>
          to indicate the position in the list of predictive inbox placement tests.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The number of results to show in a single call to <code>ListDeliverabilityTestReports</code>.\
          \ If the number of results is larger than the number you specified in this\
          \ parameter, then the response includes a <code>NextToken</code> element,\
          \ which you can use to obtain additional results.</p> <p>The value you specify\
          \ has to be at least 0, and can be no more than 1000.</p>"
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeliverabilityTestReportsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/deliverability-dashboard/test-reports/{ReportId}:
    get:
      description: Retrieve the results of a predictive inbox placement test.
      operationId: get_deliverability_test_report
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A unique string that identifies the predictive inbox placement
          test.
        explode: false
        in: path
        name: ReportId
        required: true
        schema:
          description: A unique string that identifies a Deliverability dashboard
            report.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeliverabilityTestReportResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/identities:
    get:
      description: Returns a list of all of the email identities that are associated
        with your Amazon Web Services account. An identity can be either an email
        address or a domain. This operation returns identities that are verified as
        well as those that aren't. This operation returns identities that are associated
        with Amazon SES and Amazon Pinpoint.
      operationId: list_email_identities
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A token returned from a previous call to <code>ListEmailIdentities</code>
          to indicate the position in the list of identities.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The number of results to show in a single call to <code>ListEmailIdentities</code>.\
          \ If the number of results is larger than the number you specified in this\
          \ parameter, then the response includes a <code>NextToken</code> element,\
          \ which you can use to obtain additional results.</p> <p>The value you specify\
          \ has to be at least 0, and can be no more than 1000.</p>"
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEmailIdentitiesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Starts the process of verifying an email identity. An <i>identity</i>\
        \ is an email address or domain that you use when you send email. Before you\
        \ can use an identity to send email, you first have to verify it. By verifying\
        \ an identity, you demonstrate that you're the owner of the identity, and\
        \ that you've given Amazon SES API v2 permission to send email from the identity.</p>\
        \ <p>When you verify an email address, Amazon SES sends an email to the address.\
        \ Your email address is verified as soon as you follow the link in the verification\
        \ email. </p> <p>When you verify a domain without specifying the <code>DkimSigningAttributes</code>\
        \ object, this operation provides a set of DKIM tokens. You can convert these\
        \ tokens into CNAME records, which you then add to the DNS configuration for\
        \ your domain. Your domain is verified when Amazon SES detects these records\
        \ in the DNS configuration for your domain. This verification method is known\
        \ as <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\"\
        >Easy DKIM</a>.</p> <p>Alternatively, you can perform the verification process\
        \ by providing your own public-private key pair. This verification method\
        \ is known as Bring Your Own DKIM (BYODKIM). To use BYODKIM, your call to\
        \ the <code>CreateEmailIdentity</code> operation has to include the <code>DkimSigningAttributes</code>\
        \ object. When you specify this object, you provide a selector (a component\
        \ of the DNS record name that identifies the public key to use for DKIM authentication)\
        \ and a private key.</p> <p>When you verify a domain, this operation provides\
        \ a set of DKIM tokens, which you can convert into CNAME tokens. You add these\
        \ CNAME tokens to the DNS configuration for your domain. Your domain is verified\
        \ when Amazon SES detects these records in the DNS configuration for your\
        \ domain. For some DNS providers, it can take 72 hours or more to complete\
        \ the domain verification process.</p> <p>Additionally, you can associate\
        \ an existing configuration set with the email identity that you're verifying.</p>"
      operationId: create_email_identity
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmailIdentity_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEmailIdentityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/identities/{EmailIdentity}:
    delete:
      description: Deletes an email identity. An identity can be either an email address
        or a domain name.
      operationId: delete_email_identity
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The identity (that is, the email address or domain) to delete."
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEmailIdentityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Provides information about a specific identity, including the\
        \ identity's verification status, sending authorization policies, its DKIM\
        \ authentication status, and its custom Mail-From settings."
      operationId: get_email_identity
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The email identity.
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEmailIdentityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/identities/{EmailIdentity}/configuration-set:
    put:
      description: Used to associate a configuration set with an email identity.
      operationId: put_email_identity_configuration_set_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The email address or domain to associate with a configuration
          set.
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEmailIdentityConfigurationSetAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEmailIdentityConfigurationSetAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/identities/{EmailIdentity}/dkim:
    put:
      description: Used to enable or disable DKIM authentication for an email identity.
      operationId: put_email_identity_dkim_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The email identity.
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEmailIdentityDkimAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEmailIdentityDkimAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/identities/{EmailIdentity}/feedback:
    put:
      description: "<p>Used to enable or disable feedback forwarding for an identity.\
        \ This setting determines what happens when an identity is used to send an\
        \ email that results in a bounce or complaint event.</p> <p>If the value is\
        \ <code>true</code>, you receive email notifications when bounce or complaint\
        \ events occur. These notifications are sent to the address that you specified\
        \ in the <code>Return-Path</code> header of the original email.</p> <p>You're\
        \ required to have a method of tracking bounces and complaints. If you haven't\
        \ set up another mechanism for receiving bounce or complaint notifications\
        \ (for example, by setting up an event destination), you receive an email\
        \ notification when these events occur (even if this setting is disabled).</p>"
      operationId: put_email_identity_feedback_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The email identity.
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEmailIdentityFeedbackAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEmailIdentityFeedbackAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/identities/{EmailIdentity}/mail-from:
    put:
      description: Used to enable or disable the custom Mail-From domain configuration
        for an email identity.
      operationId: put_email_identity_mail_from_attributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The verified email identity.
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEmailIdentityMailFromAttributes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEmailIdentityMailFromAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/identities/{EmailIdentity}/policies:
    get:
      description: "<p>Returns the requested sending authorization policies for the\
        \ given identity (an email address or a domain). The policies are returned\
        \ as a map of policy names to policy contents. You can retrieve a maximum\
        \ of 20 policies at a time.</p> <note> <p>This API is for the identity owner\
        \ only. If you have not verified the identity, this API will return an error.</p>\
        \ </note> <p>Sending authorization is a feature that enables an identity owner\
        \ to authorize other senders to use its identities. For information about\
        \ using sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\"\
        >Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no\
        \ more than once per second.</p>"
      operationId: get_email_identity_policies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The email identity.
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEmailIdentityPoliciesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/identities/{EmailIdentity}/policies/{PolicyName}:
    delete:
      description: "<p>Deletes the specified sending authorization policy for the\
        \ given identity (an email address or a domain). This API returns successfully\
        \ even if a policy with the specified name does not exist.</p> <note> <p>This\
        \ API is for the identity owner only. If you have not verified the identity,\
        \ this API will return an error.</p> </note> <p>Sending authorization is a\
        \ feature that enables an identity owner to authorize other senders to use\
        \ its identities. For information about using sending authorization, see the\
        \ <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\"\
        >Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no\
        \ more than once per second.</p>"
      operationId: delete_email_identity_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The email identity.
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: "<p>The name of the policy.</p> <p>The policy name cannot exceed\
          \ 64 characters and can only include alphanumeric characters, dashes, and\
          \ underscores.</p>"
        explode: false
        in: path
        name: PolicyName
        required: true
        schema:
          description: "<p>The name of the policy.</p> <p>The policy name cannot exceed\
            \ 64 characters and can only include alphanumeric characters, dashes,\
            \ and underscores.</p>"
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEmailIdentityPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates the specified sending authorization policy for the\
        \ given identity (an email address or a domain).</p> <note> <p>This API is\
        \ for the identity owner only. If you have not verified the identity, this\
        \ API will return an error.</p> </note> <p>Sending authorization is a feature\
        \ that enables an identity owner to authorize other senders to use its identities.\
        \ For information about using sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\"\
        >Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no\
        \ more than once per second.</p>"
      operationId: create_email_identity_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The email identity.
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: "<p>The name of the policy.</p> <p>The policy name cannot exceed\
          \ 64 characters and can only include alphanumeric characters, dashes, and\
          \ underscores.</p>"
        explode: false
        in: path
        name: PolicyName
        required: true
        schema:
          description: "<p>The name of the policy.</p> <p>The policy name cannot exceed\
            \ 64 characters and can only include alphanumeric characters, dashes,\
            \ and underscores.</p>"
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailIdentityPolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEmailIdentityPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: "<p>Updates the specified sending authorization policy for the\
        \ given identity (an email address or a domain). This API returns successfully\
        \ even if a policy with the specified name does not exist.</p> <note> <p>This\
        \ API is for the identity owner only. If you have not verified the identity,\
        \ this API will return an error.</p> </note> <p>Sending authorization is a\
        \ feature that enables an identity owner to authorize other senders to use\
        \ its identities. For information about using sending authorization, see the\
        \ <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\"\
        >Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no\
        \ more than once per second.</p>"
      operationId: update_email_identity_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The email identity.
        explode: false
        in: path
        name: EmailIdentity
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: "<p>The name of the policy.</p> <p>The policy name cannot exceed\
          \ 64 characters and can only include alphanumeric characters, dashes, and\
          \ underscores.</p>"
        explode: false
        in: path
        name: PolicyName
        required: true
        schema:
          description: "<p>The name of the policy.</p> <p>The policy name cannot exceed\
            \ 64 characters and can only include alphanumeric characters, dashes,\
            \ and underscores.</p>"
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailIdentityPolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmailIdentityPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/import-jobs:
    get:
      description: Lists all of the import jobs.
      operationId: list_import_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A string token indicating that there might be additional import
          jobs available to be listed. Copy this token to a subsequent call to <code>ListImportJobs</code>
          with the same parameters to retrieve the next page of import jobs.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of import jobs to return at once. Use this parameter\
          \ to paginate results. If additional import jobs exist beyond the specified\
          \ limit, the <code>NextToken</code> element is sent in the response. Use\
          \ the <code>NextToken</code> value in subsequent requests to retrieve additional\
          \ addresses."
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListImportJobs_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    post:
      description: Creates an import job for a data destination.
      operationId: create_import_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImportJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/import-jobs/{JobId}:
    get:
      description: Provides information about an import job.
      operationId: get_import_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the import job.
        explode: false
        in: path
        name: JobId
        required: true
        schema:
          description: A string that represents the import job ID.
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/metrics/batch:
    post:
      description: "<p>Retrieves batches of metric data collected based on your sending\
        \ activity.</p> <p>You can execute this operation no more than 16 times per\
        \ second, and with at most 160 queries from the batches per second (cumulative).</p>"
      operationId: batch_get_metric_data
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetMetricData_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetMetricDataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
          description: InternalServiceErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/outbound-bulk-emails:
    post:
      description: Composes an email message to multiple destinations.
      operationId: send_bulk_email
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendBulkEmail_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendBulkEmailResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSuspendedException'
          description: AccountSuspendedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
          description: SendingPausedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageRejected'
          description: MessageRejected
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailFromDomainNotVerifiedException'
          description: MailFromDomainNotVerifiedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/outbound-custom-verification-emails:
    post:
      description: "<p>Adds an email address to the list of identities for your Amazon\
        \ SES account in the current Amazon Web Services Region and attempts to verify\
        \ it. As a result of executing this operation, a customized verification email\
        \ is sent to the specified address.</p> <p>To use this operation, you must\
        \ first create a custom verification email template. For more information\
        \ about creating and using custom verification email templates, see <a href=\"\
        https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom\"\
        >Using custom verification email templates</a> in the <i>Amazon SES Developer\
        \ Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>"
      operationId: send_custom_verification_email
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCustomVerificationEmail_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendCustomVerificationEmailResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageRejected'
          description: MessageRejected
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
          description: SendingPausedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailFromDomainNotVerifiedException'
          description: MailFromDomainNotVerifiedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/outbound-emails:
    post:
      description: "<p>Sends an email message. You can use the Amazon SES API v2 to\
        \ send the following types of messages:</p> <ul> <li> <p> <b>Simple</b> –\
        \ A standard email message. When you create this type of message, you specify\
        \ the sender, the recipient, and the message body, and Amazon SES assembles\
        \ the message for you.</p> </li> <li> <p> <b>Raw</b> – A raw, MIME-formatted\
        \ email message. When you send this type of email, you have to specify all\
        \ of the message headers, as well as the message body. You can use this message\
        \ type to send messages that contain attachments. The message that you specify\
        \ has to be a valid MIME message.</p> </li> <li> <p> <b>Templated</b> – A\
        \ message that contains personalization tags. When you send this type of email,\
        \ Amazon SES API v2 automatically replaces the tags with values that you specify.</p>\
        \ </li> </ul>"
      operationId: send_email
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmail_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSuspendedException'
          description: AccountSuspendedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
          description: SendingPausedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageRejected'
          description: MessageRejected
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailFromDomainNotVerifiedException'
          description: MailFromDomainNotVerifiedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/suppression/addresses:
    get:
      description: Retrieves a list of email addresses that are on the suppression
        list for your account.
      operationId: list_suppressed_destinations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The factors that caused the email address to be added to .
        explode: true
        in: query
        name: Reason
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SuppressionListReason'
          type: array
        style: form
      - description: Used to filter the list of suppressed email destinations so that
          it only includes addresses that were added to the list after a specific
          date.
        explode: true
        in: query
        name: StartDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Used to filter the list of suppressed email destinations so that
          it only includes addresses that were added to the list before a specific
          date.
        explode: true
        in: query
        name: EndDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: A token returned from a previous call to <code>ListSuppressedDestinations</code>
          to indicate the position in the list of suppressed email addresses.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "The number of results to show in a single call to <code>ListSuppressedDestinations</code>.\
          \ If the number of results is larger than the number you specified in this\
          \ parameter, then the response includes a <code>NextToken</code> element,\
          \ which you can use to obtain additional results."
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSuppressedDestinationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Adds an email address to the suppression list for your account.
      operationId: put_suppressed_destination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSuppressedDestination_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSuppressedDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/suppression/addresses/{EmailAddress}:
    delete:
      description: Removes an email address from the suppression list for your account.
      operationId: delete_suppressed_destination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The suppressed email destination to remove from the account suppression
          list.
        explode: false
        in: path
        name: EmailAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSuppressedDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves information about a specific email address that's on
        the suppression list for your account.
      operationId: get_suppressed_destination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The email address that's on the account suppression list.
        explode: false
        in: path
        name: EmailAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSuppressedDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/tags:
    post:
      description: "<p>Add one or more tags (keys and values) to a specified resource.\
        \ A <i>tag</i>\_is a label that you optionally define and associate with a\
        \ resource. Tags can help you categorize and manage resources in different\
        \ ways, such as by purpose, owner, environment, or other criteria. A resource\
        \ can have as many as 50 tags.</p> <p>Each tag consists of a required\_<i>tag\
        \ key</i>\_and an associated\_<i>tag value</i>, both of which you define.\
        \ A tag key is a general label that acts as a category for more specific tag\
        \ values. A tag value acts as a descriptor within a tag key.</p>"
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/tags#ResourceArn:
    get:
      description: Retrieve a list of the tags (keys and values) that are associated
        with a specified resource. A <i>tag</i> is a label that you optionally define
        and associate with a resource. Each tag consists of a required <i>tag key</i> and
        an optional associated <i>tag value</i>. A tag key is a general label that
        acts as a category for more specific tag values. A tag value acts as a descriptor
        within a tag key.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource that you want
          to retrieve tag information for.
        explode: true
        in: query
        name: ResourceArn
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/tags#ResourceArn&TagKeys:
    delete:
      description: Remove one or more tags (keys and values) from a specified resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource that you want
          to remove one or more tags from.
        explode: true
        in: query
        name: ResourceArn
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The tags (tag keys) that you want to remove from the resource.\
          \ When you specify a tag key, the action removes both that key and its associated\
          \ tag value.</p> <p>To remove more than one tag from the resource, append\
          \ the <code>TagKeys</code> parameter and argument for each additional tag\
          \ to remove, separated by an ampersand. For example: <code>/v2/email/tags?ResourceArn=ResourceArn&amp;TagKeys=Key1&amp;TagKeys=Key2</code>\
          \ </p>"
        explode: true
        in: query
        name: TagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v2/email/templates:
    get:
      description: <p>Lists the email templates present in your Amazon SES account
        in the current Amazon Web Services Region.</p> <p>You can execute this operation
        no more than once per second.</p>
      operationId: list_email_templates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A token returned from a previous call to <code>ListEmailTemplates</code>
          to indicate the position in the list of email templates.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The number of results to show in a single call to <code>ListEmailTemplates</code>.\
          \ If the number of results is larger than the number you specified in this\
          \ parameter, then the response includes a <code>NextToken</code> element,\
          \ which you can use to obtain additional results.</p> <p>The value you specify\
          \ has to be at least 1, and can be no more than 10.</p>"
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEmailTemplatesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates an email template. Email templates enable you to send\
        \ personalized email to one or more destinations in a single API operation.\
        \ For more information, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html\"\
        >Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no\
        \ more than once per second.</p>"
      operationId: create_email_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmailTemplate_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEmailTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/templates/{TemplateName}:
    delete:
      description: <p>Deletes an email template.</p> <p>You can execute this operation
        no more than once per second.</p>
      operationId: delete_email_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the template to be deleted.
        explode: false
        in: path
        name: TemplateName
        required: true
        schema:
          description: The name of the template. You will refer to this name when
            you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code>
            operations.
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEmailTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "<p>Displays the template object (which includes the subject line,\
        \ HTML part and text part) for the template you specify.</p> <p>You can execute\
        \ this operation no more than once per second.</p>"
      operationId: get_email_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the template.
        explode: false
        in: path
        name: TemplateName
        required: true
        schema:
          description: The name of the template. You will refer to this name when
            you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code>
            operations.
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEmailTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "<p>Updates an email template. Email templates enable you to send\
        \ personalized email to one or more destinations in a single API operation.\
        \ For more information, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html\"\
        >Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no\
        \ more than once per second.</p>"
      operationId: update_email_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the template.
        explode: false
        in: path
        name: TemplateName
        required: true
        schema:
          description: The name of the template. You will refer to this name when
            you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code>
            operations.
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailTemplate_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmailTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/templates/{TemplateName}/render:
    post:
      description: <p>Creates a preview of the MIME content of an email when provided
        with a template and a set of replacement data.</p> <p>You can execute this
        operation no more than once per second.</p>
      operationId: test_render_email_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the template.
        explode: false
        in: path
        name: TemplateName
        required: true
        schema:
          description: The name of the template. You will refer to this name when
            you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code>
            operations.
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRenderEmailTemplate_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRenderEmailTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v2/email/vdm/recommendations:
    post:
      description: <p>Lists the recommendations present in your Amazon SES account
        in the current Amazon Web Services Region.</p> <p>You can execute this operation
        no more than once per second.</p>
      operationId: list_recommendations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: PageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRecommendations_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecommendationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BatchGetMetricDataResponse:
      description: Represents the result of processing your metric data batch request
      example:
        Errors: ""
        Results: ""
      properties:
        Results:
          allOf:
          - $ref: '#/components/schemas/MetricDataResultList'
          - description: A list of successfully retrieved <code>MetricDataResult</code>.
          title: Results
        Errors:
          allOf:
          - $ref: '#/components/schemas/MetricDataErrorList'
          - description: A list of <code>MetricDataError</code> encountered while
              processing your metric data batch request.
          title: Errors
      title: BatchGetMetricDataResponse
      type: object
    BatchGetMetricDataQuery:
      description: Represents a single metric data query to include in a batch.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/QueryIdentifier'
          - description: The query identifier.
          title: Id
        Namespace:
          allOf:
          - $ref: '#/components/schemas/MetricNamespace'
          - description: 'The query namespace - e.g. <code>VDM</code> '
          title: Namespace
        Metric:
          allOf:
          - $ref: '#/components/schemas/Metric'
          - description: "<p>The queried metric. This can be one of the following:</p>\
              \ <ul> <li> <p> <code>SEND</code> – Emails sent eligible for tracking\
              \ in the VDM dashboard. This excludes emails sent to the mailbox simulator\
              \ and emails addressed to more than one recipient.</p> </li> <li> <p>\
              \ <code>COMPLAINT</code> – Complaints received for your account. This\
              \ excludes complaints from the mailbox simulator, those originating\
              \ from your account-level suppression list (if enabled), and those for\
              \ emails addressed to more than one recipient</p> </li> <li> <p> <code>PERMANENT_BOUNCE</code>\
              \ – Permanent bounces - i.e. feedback received for emails sent to non-existent\
              \ mailboxes. Excludes bounces from the mailbox simulator, those originating\
              \ from your account-level suppression list (if enabled), and those for\
              \ emails addressed to more than one recipient.</p> </li> <li> <p> <code>TRANSIENT_BOUNCE</code>\
              \ – Transient bounces - i.e. feedback received for delivery failures\
              \ excluding issues with non-existent mailboxes. Excludes bounces from\
              \ the mailbox simulator, and those for emails addressed to more than\
              \ one recipient.</p> </li> <li> <p> <code>OPEN</code> – Unique open\
              \ events for emails including open trackers. Excludes opens for emails\
              \ addressed to more than one recipient.</p> </li> <li> <p> <code>CLICK</code>\
              \ – Unique click events for emails including wrapped links. Excludes\
              \ clicks for emails addressed to more than one recipient.</p> </li>\
              \ <li> <p> <code>DELIVERY</code> – Successful deliveries for email sending\
              \ attempts. Excludes deliveries to the mailbox simulator and for emails\
              \ addressed to more than one recipient.</p> </li> <li> <p> <code>DELIVERY_OPEN</code>\
              \ – Successful deliveries for email sending attempts. Excludes deliveries\
              \ to the mailbox simulator, for emails addressed to more than one recipient,\
              \ and emails without open trackers.</p> </li> <li> <p> <code>DELIVERY_CLICK</code>\
              \ – Successful deliveries for email sending attempts. Excludes deliveries\
              \ to the mailbox simulator, for emails addressed to more than one recipient,\
              \ and emails without click trackers.</p> </li> <li> <p> <code>DELIVERY_COMPLAINT</code>\
              \ – Successful deliveries for email sending attempts. Excludes deliveries\
              \ to the mailbox simulator, for emails addressed to more than one recipient,\
              \ and emails addressed to recipients hosted by ISPs with which Amazon\
              \ SES does not have a feedback loop agreement.</p> </li> </ul>"
          title: Metric
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/Dimensions'
          - description: An object that contains mapping between <code>MetricDimensionName</code>
              and <code>MetricDimensionValue</code> to filter metrics by.
          title: Dimensions
        StartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Represents the start date for the query interval.
          title: StartDate
        EndDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Represents the end date for the query interval.
          title: EndDate
      required:
      - EndDate
      - Id
      - Metric
      - Namespace
      - StartDate
      title: BatchGetMetricDataQuery
      type: object
    BadRequestException: {}
    InternalServiceErrorException: {}
    TooManyRequestsException: {}
    NotFoundException: {}
    CreateConfigurationSetResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    CustomRedirectDomain:
      description: The domain to use for tracking open and click events.
      type: string
    TlsPolicy:
      description: "Specifies whether messages that use the configuration set are\
        \ required to use Transport Layer Security (TLS). If the value is <code>Require</code>,\
        \ messages are only delivered if a TLS connection can be established. If the\
        \ value is <code>Optional</code>, messages can be delivered in plain text\
        \ if a TLS connection can't be established."
      enum:
      - REQUIRE
      - OPTIONAL
      title: TlsPolicy
      type: string
    PoolName:
      description: The name of a dedicated IP pool.
      title: PoolName
      type: string
    Enabled:
      type: boolean
    LastFreshStart:
      description: "The date and time (in Unix time) when the reputation metrics were\
        \ last given a fresh start. When your account is given a fresh start, your\
        \ reputation metrics are calculated starting from the date of the fresh start."
      format: date-time
      type: string
    Tag:
      description: "<p>An object that defines the tags that are associated with a\
        \ resource. A\_<i>tag</i>\_is a label that you optionally define and associate\
        \ with a resource. Tags can help you categorize and manage resources in different\
        \ ways, such as by purpose, owner, environment, or other criteria. A resource\
        \ can have as many as 50 tags.</p> <p>Each tag consists of a required\_<i>tag\
        \ key</i>\_and an associated\_<i>tag value</i>, both of which you define.\
        \ A tag key is a general label that acts as a category for a more specific\
        \ tag value. A tag value acts as a descriptor within a tag key. A tag key\
        \ can contain as many as 128 characters. A tag value can contain as many as\
        \ 256 characters. The characters can be Unicode letters, digits, white space,\
        \ or one of the following symbols: _ . : / = + -. The following additional\
        \ restrictions apply to tags:</p> <ul> <li> <p>Tag keys and values are case\
        \ sensitive.</p> </li> <li> <p>For each associated resource, each tag key\
        \ must be unique and it can have only one value.</p> </li> <li> <p>The\_<code>aws:</code>\_\
        prefix is reserved for use by Amazon Web Services; you can’t use it in any\
        \ tag keys or values that you define. In addition, you can't edit or remove\
        \ tag keys or values that use this prefix. Tags that use this prefix don’\
        t count against the limit of 50 tags per resource.</p> </li> <li> <p>You can\
        \ associate tags with public or shared resources, but the tags are available\
        \ only for your Amazon Web Services account, not any other accounts that share\
        \ the resource. In addition, the tags are available only for resources that\
        \ are located in the specified Amazon Web Services Region for your Amazon\
        \ Web Services account.</p> </li> </ul>"
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: One part of a key-value pair that defines a tag. The maximum
              length of a tag key is 128 characters. The minimum length is 1 character.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: "The optional part of a key-value pair that defines a tag.\
              \ The maximum length of a tag value is 256 characters. The minimum length\
              \ is 0 characters. If you don't want a resource to have a specific tag\
              \ value, don't specify a value for this\_parameter. If you don't specify\
              \ a value, Amazon SES sets the value to an empty string."
          title: Value
      required:
      - Key
      - Value
      title: Tag
      type: object
    SuppressionListReasons:
      items:
        $ref: '#/components/schemas/SuppressionListReason'
      type: array
    DashboardOptions:
      description: An object containing additional settings for your VDM configuration
        as applicable to the Dashboard.
      properties:
        EngagementMetrics:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          - description: <p>Specifies the status of your VDM engagement metrics collection.
              Can be one of the following:</p> <ul> <li> <p> <code>ENABLED</code>
              – Amazon SES enables engagement metrics for the configuration set.</p>
              </li> <li> <p> <code>DISABLED</code> – Amazon SES disables engagement
              metrics for the configuration set.</p> </li> </ul>
          title: EngagementMetrics
      title: DashboardOptions
      type: object
    GuardianOptions:
      description: An object containing additional settings for your VDM configuration
        as applicable to the Guardian.
      properties:
        OptimizedSharedDelivery:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          - description: <p>Specifies the status of your VDM optimized shared delivery.
              Can be one of the following:</p> <ul> <li> <p> <code>ENABLED</code>
              – Amazon SES enables optimized shared delivery for the configuration
              set.</p> </li> <li> <p> <code>DISABLED</code> – Amazon SES disables
              optimized shared delivery for the configuration set.</p> </li> </ul>
          title: OptimizedSharedDelivery
      title: GuardianOptions
      type: object
    AlreadyExistsException: {}
    LimitExceededException: {}
    ConcurrentModificationException: {}
    CreateConfigurationSetEventDestinationResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    EventTypes:
      items:
        $ref: '#/components/schemas/EventType'
      type: array
    KinesisFirehoseDestination:
      description: "An object that defines an Amazon Kinesis Data Firehose destination\
        \ for email events. You can use Amazon Kinesis Data Firehose to stream data\
        \ to other services, such as Amazon S3 and Amazon Redshift."
      properties:
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the IAM role that the Amazon
              SES API v2 uses to send email events to the Amazon Kinesis Data Firehose
              stream.
          title: IamRoleArn
        DeliveryStreamArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the Amazon Kinesis Data
              Firehose stream that the Amazon SES API v2 sends email events to.
          title: DeliveryStreamArn
      required:
      - DeliveryStreamArn
      - IamRoleArn
      title: KinesisFirehoseDestination
      type: object
    CloudWatchDestination:
      description: An object that defines an Amazon CloudWatch destination for email
        events. You can use Amazon CloudWatch to monitor and gain insights on your
        email sending metrics.
      properties:
        DimensionConfigurations:
          allOf:
          - $ref: '#/components/schemas/CloudWatchDimensionConfigurations'
          - description: An array of objects that define the dimensions to use when
              you send email events to Amazon CloudWatch.
          title: DimensionConfigurations
      required:
      - DimensionConfigurations
      title: CloudWatchDestination
      type: object
    SnsDestination:
      description: An object that defines an Amazon SNS destination for email events.
        You can use Amazon SNS to send notification when certain email events occur.
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "The Amazon Resource Name (ARN) of the Amazon SNS topic to\
              \ publish email events to. For more information about Amazon SNS topics,\
              \ see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html\"\
              >Amazon SNS Developer Guide</a>."
          title: TopicArn
      required:
      - TopicArn
      title: SnsDestination
      type: object
    PinpointDestination:
      description: "An object that defines an Amazon Pinpoint project destination\
        \ for email events. You can send email event data to a Amazon Pinpoint project\
        \ to view metrics using the Transactional Messaging dashboards that are built\
        \ in to Amazon Pinpoint. For more information, see <a href=\"https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html\"\
        >Transactional Messaging Charts</a> in the <i>Amazon Pinpoint User Guide</i>."
      properties:
        ApplicationArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the Amazon Pinpoint project
              to send email events to.
          title: ApplicationArn
      title: PinpointDestination
      type: object
    CreateContactResponse:
      properties: {}
      type: object
    TopicPreference:
      description: The contact's preference for being opted-in to or opted-out of
        a topic.
      properties:
        TopicName:
          allOf:
          - $ref: '#/components/schemas/TopicName'
          - description: The name of the topic.
          title: TopicName
        SubscriptionStatus:
          allOf:
          - $ref: '#/components/schemas/SubscriptionStatus'
          - description: The contact's subscription status to a topic which is either
              <code>OPT_IN</code> or <code>OPT_OUT</code>.
          title: SubscriptionStatus
      required:
      - SubscriptionStatus
      - TopicName
      title: TopicPreference
      type: object
    CreateContactListResponse:
      properties: {}
      type: object
    Topic:
      description: "An interest group, theme, or label within a list. Lists can have\
        \ multiple topics."
      properties:
        TopicName:
          allOf:
          - $ref: '#/components/schemas/TopicName'
          - description: The name of the topic.
          title: TopicName
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name of the topic the contact will see.
          title: DisplayName
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: "A description of what the topic is about, which the contact\
              \ will see."
          title: Description
        DefaultSubscriptionStatus:
          allOf:
          - $ref: '#/components/schemas/SubscriptionStatus'
          - description: The default subscription status to be applied to a contact
              if the contact has not noted their preference for subscribing to a topic.
          title: DefaultSubscriptionStatus
      required:
      - DefaultSubscriptionStatus
      - DisplayName
      - TopicName
      title: Topic
      type: object
    CreateCustomVerificationEmailTemplateResponse:
      description: "If the action is successful, the service sends back an HTTP 200\
        \ response with an empty HTTP body."
      properties: {}
      type: object
    CreateDedicatedIpPoolResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    CreateDeliverabilityTestReportResponse:
      description: Information about the predictive inbox placement test that you
        created.
      example:
        DeliverabilityTestStatus: ""
        ReportId: ""
      properties:
        ReportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          - description: A unique string that identifies the predictive inbox placement
              test.
          title: ReportId
        DeliverabilityTestStatus:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestStatus'
          - description: "The status of the predictive inbox placement test. If the\
              \ status is <code>IN_PROGRESS</code>, then the predictive inbox placement\
              \ test is currently running. Predictive inbox placement tests are usually\
              \ complete within 24 hours of creating the test. If the status is <code>COMPLETE</code>,\
              \ then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code>\
              \ to view the results of the test."
          title: DeliverabilityTestStatus
      required:
      - DeliverabilityTestStatus
      - ReportId
      title: CreateDeliverabilityTestReportResponse
      type: object
    Message:
      description: Represents the email message that you're sending. The <code>Message</code>
        object consists of a subject line and a message body.
      properties:
        Subject:
          $ref: '#/components/schemas/Message_Subject'
        Body:
          $ref: '#/components/schemas/Message_Body'
      required:
      - Body
      - Subject
      title: Message
      type: object
    RawMessage:
      description: Represents the raw content of an email message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/RawMessageData'
          - description: "<p>The raw email message. The message has to meet the following\
              \ criteria:</p> <ul> <li> <p>The message has to contain a header and\
              \ a body, separated by one blank line.</p> </li> <li> <p>All of the\
              \ required header fields must be present in the message.</p> </li> <li>\
              \ <p>Each part of a multipart MIME message must be formatted properly.</p>\
              \ </li> <li> <p>Attachments must be in a file format that the Amazon\
              \ SES supports.</p> </li> <li> <p>The entire message must be Base64\
              \ encoded.</p> </li> <li> <p>If any of the MIME parts in your message\
              \ contain content that is outside of the 7-bit ASCII character range,\
              \ you should encode that content to ensure that recipients' email clients\
              \ render the message properly.</p> </li> <li> <p>The length of any single\
              \ line of text in the message can't exceed 1,000 characters. This restriction\
              \ is defined in <a href=\"https://tools.ietf.org/html/rfc5321\">RFC\
              \ 5321</a>.</p> </li> </ul>"
          title: Data
      required:
      - Data
      title: RawMessage
      type: object
    Template:
      description: "An object that defines the email template to use for an email\
        \ message, and the values to use for any message variables in that template.\
        \ An <i>email template</i> is a type of message template that contains content\
        \ that you want to define, save, and reuse in email messages that you send."
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          - description: 'The name of the template. You will refer to this name when
              you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code>
              operations. '
          title: TemplateName
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the template.
          title: TemplateArn
        TemplateData:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateData'
          - description: An object that defines the values to use for message variables
              in the template. This object is a set of key-value pairs. Each key defines
              a message variable in the template. The corresponding value defines
              the value to use for that variable.
          title: TemplateData
      title: Template
      type: object
    AccountSuspendedException: {}
    SendingPausedException: {}
    MessageRejected: {}
    MailFromDomainNotVerifiedException: {}
    CreateEmailIdentityResponse:
      description: "<p>If the email identity is a domain, this object contains information\
        \ about the DKIM verification status for the domain.</p> <p>If the email identity\
        \ is an email address, this object is empty. </p>"
      example:
        IdentityType: ""
        VerifiedForSendingStatus: ""
        DkimAttributes:
          SigningEnabled: ""
          Status: ""
          SigningAttributesOrigin: ""
          NextSigningKeyLength: ""
          CurrentSigningKeyLength: ""
          Tokens: ""
          LastKeyGenerationTimestamp: ""
      properties:
        IdentityType:
          allOf:
          - $ref: '#/components/schemas/IdentityType'
          - description: "The email identity type. Note: the <code>MANAGED_DOMAIN</code>\
              \ identity type is not supported."
          title: IdentityType
        VerifiedForSendingStatus:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "Specifies whether or not the identity is verified. You can\
              \ only send email from verified email addresses or domains. For more\
              \ information about verifying identities, see the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html\"\
              >Amazon Pinpoint User Guide</a>."
          title: VerifiedForSendingStatus
        DkimAttributes:
          $ref: '#/components/schemas/CreateEmailIdentityResponse_DkimAttributes'
      title: CreateEmailIdentityResponse
      type: object
    Selector:
      maxLength: 63
      minLength: 1
      pattern: "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9]))$"
      type: string
    PrivateKey:
      format: password
      maxLength: 20480
      minLength: 1
      pattern: "^[a-zA-Z0-9+\\/]+={0,2}$"
      type: string
    DkimSigningKeyLength:
      enum:
      - RSA_1024_BIT
      - RSA_2048_BIT
      title: DkimSigningKeyLength
      type: string
    CreateEmailIdentityPolicyResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    CreateEmailTemplateResponse:
      description: "If the action is successful, the service sends back an HTTP 200\
        \ response with an empty HTTP body."
      properties: {}
      type: object
    EmailTemplateSubject:
      description: The subject line of the email.
      type: string
    EmailTemplateText:
      description: The email body that will be visible to recipients whose email clients
        do not display HTML.
      type: string
    EmailTemplateHtml:
      description: The HTML body of the email.
      type: string
    CreateImportJobResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      example:
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: A string that represents the import job ID.
          title: JobId
      title: CreateImportJobResponse
      type: object
    SuppressionListDestination:
      description: An object that contains details about the action of suppression
        list.
      properties:
        SuppressionListImportAction:
          allOf:
          - $ref: '#/components/schemas/SuppressionListImportAction'
          - description: "<p>The type of action to perform on the address. The following\
              \ are possible values:</p> <ul> <li> <p>PUT: add the addresses to the\
              \ suppression list. If the record already exists, it will override it\
              \ with the new value.</p> </li> <li> <p>DELETE: remove the addresses\
              \ from the suppression list.</p> </li> </ul>"
          title: SuppressionListImportAction
      required:
      - SuppressionListImportAction
      title: SuppressionListDestination
      type: object
    ContactListDestination:
      description: An object that contains details about the action of a contact list.
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          - description: The name of the contact list.
          title: ContactListName
        ContactListImportAction:
          allOf:
          - $ref: '#/components/schemas/ContactListImportAction'
          - description: "<p>&gt;The type of action to perform on the addresses. The\
              \ following are the possible values:</p> <ul> <li> <p>PUT: add the addresses\
              \ to the contact list. If the record already exists, it will override\
              \ it with the new value.</p> </li> <li> <p>DELETE: remove the addresses\
              \ from the contact list.</p> </li> </ul>"
          title: ContactListImportAction
      required:
      - ContactListImportAction
      - ContactListName
      title: ContactListDestination
      type: object
    S3Url:
      description: An Amazon S3 URL in the format s3://<i>&lt;bucket_name&gt;</i>/<i>&lt;object&gt;</i>.
      pattern: "^s3:\\/\\/([^\\/]+)\\/(.*?([^\\/]+)\\/?)$"
      type: string
    DataFormat:
      description: The data format of the import job's data source.
      enum:
      - CSV
      - JSON
      title: DataFormat
      type: string
    DeleteConfigurationSetResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    DeleteConfigurationSetEventDestinationResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    DeleteContactResponse:
      properties: {}
      type: object
    DeleteContactListResponse:
      properties: {}
      type: object
    DeleteCustomVerificationEmailTemplateResponse:
      description: "If the action is successful, the service sends back an HTTP 200\
        \ response with an empty HTTP body."
      properties: {}
      type: object
    DeleteDedicatedIpPoolResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    DeleteEmailIdentityResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    DeleteEmailIdentityPolicyResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    DeleteEmailTemplateResponse:
      description: "If the action is successful, the service sends back an HTTP 200\
        \ response with an empty HTTP body."
      properties: {}
      type: object
    DeleteSuppressedDestinationResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    GetAccountResponse:
      description: A list of details about the email-sending capabilities of your
        Amazon SES account in the current Amazon Web Services Region.
      example:
        SuppressionAttributes:
          SuppressedReasons: ""
        Details:
          WebsiteURL: ""
          UseCaseDescription: ""
          ContactLanguage: ""
          MailType: ""
          AdditionalContactEmailAddresses: ""
          ReviewDetails:
            Status: ""
            CaseId: ""
        SendQuota:
          SentLast24Hours: ""
          MaxSendRate: ""
          Max24HourSend: ""
        ProductionAccessEnabled: ""
        DedicatedIpAutoWarmupEnabled: ""
        SendingEnabled: ""
        EnforcementStatus: ""
        VdmAttributes:
          DashboardAttributes:
            EngagementMetrics: ""
          VdmEnabled: ""
          GuardianAttributes:
            OptimizedSharedDelivery: ""
      properties:
        DedicatedIpAutoWarmupEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: Indicates whether or not the automatic warm-up feature is
              enabled for dedicated IP addresses that are associated with your account.
          title: DedicatedIpAutoWarmupEnabled
        EnforcementStatus:
          allOf:
          - $ref: '#/components/schemas/GeneralEnforcementStatus'
          - description: "<p>The reputation status of your Amazon SES account. The\
              \ status can be one of the following:</p> <ul> <li> <p> <code>HEALTHY</code>\
              \ – There are no reputation-related issues that currently impact your\
              \ account.</p> </li> <li> <p> <code>PROBATION</code> – We've identified\
              \ potential issues with your Amazon SES account. We're placing your\
              \ account under review while you work on correcting these issues.</p>\
              \ </li> <li> <p> <code>SHUTDOWN</code> – Your account's ability to send\
              \ email is currently paused because of an issue with the email sent\
              \ from your account. When you correct the issue, you can contact us\
              \ and request that your account's ability to send email is resumed.</p>\
              \ </li> </ul>"
          title: EnforcementStatus
        ProductionAccessEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>Indicates whether or not your account has production\
              \ access in the current Amazon Web Services Region.</p> <p>If the value\
              \ is <code>false</code>, then your account is in the <i>sandbox</i>.\
              \ When your account is in the sandbox, you can only send email to verified\
              \ identities. Additionally, the maximum number of emails you can send\
              \ in a 24-hour period (your sending quota) is 200, and the maximum number\
              \ of emails you can send per second (your maximum sending rate) is 1.</p>\
              \ <p>If the value is <code>true</code>, then your account has production\
              \ access. When your account has production access, you can send email\
              \ to any address. The sending quota and maximum sending rate for your\
              \ account vary based on your specific use case.</p>"
          title: ProductionAccessEnabled
        SendQuota:
          $ref: '#/components/schemas/GetAccountResponse_SendQuota'
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: Indicates whether or not email sending is enabled for your
              Amazon SES account in the current Amazon Web Services Region.
          title: SendingEnabled
        SuppressionAttributes:
          $ref: '#/components/schemas/GetAccountResponse_SuppressionAttributes'
        Details:
          $ref: '#/components/schemas/GetAccountResponse_Details'
        VdmAttributes:
          $ref: '#/components/schemas/GetAccountResponse_VdmAttributes'
      title: GetAccountResponse
      type: object
    GetBlacklistReportsResponse:
      description: An object that contains information about blacklist events.
      example:
        BlacklistReport: ""
      properties:
        BlacklistReport:
          allOf:
          - $ref: '#/components/schemas/BlacklistReport'
          - description: An object that contains information about a blacklist that
              one of your dedicated IP addresses appears on.
          title: BlacklistReport
      required:
      - BlacklistReport
      title: GetBlacklistReportsResponse
      type: object
    BlacklistItemName:
      description: An IP address that you want to obtain blacklist information for.
      title: BlacklistItemName
      type: string
    GetConfigurationSetResponse:
      description: Information about a configuration set.
      example:
        SendingOptions:
          SendingEnabled: ""
        SuppressionOptions:
          SuppressedReasons: ""
        TrackingOptions:
          CustomRedirectDomain: ""
        ConfigurationSetName: ""
        ReputationOptions:
          LastFreshStart: ""
          ReputationMetricsEnabled: ""
        VdmOptions:
          DashboardOptions:
            EngagementMetrics: ""
          GuardianOptions:
            OptimizedSharedDelivery: ""
        DeliveryOptions:
          SendingPoolName: ""
          TlsPolicy: ""
        Tags: ""
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          - description: The name of the configuration set.
          title: ConfigurationSetName
        TrackingOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_TrackingOptions'
        DeliveryOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_DeliveryOptions'
        ReputationOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_ReputationOptions'
        SendingOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_SendingOptions'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An array of objects that define the tags (keys and values)
              that are associated with the configuration set.
          title: Tags
        SuppressionOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_SuppressionOptions'
        VdmOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_VdmOptions'
      title: GetConfigurationSetResponse
      type: object
    GetConfigurationSetEventDestinationsResponse:
      description: Information about an event destination for a configuration set.
      example:
        EventDestinations: ""
      properties:
        EventDestinations:
          allOf:
          - $ref: '#/components/schemas/EventDestinations'
          - description: An array that includes all of the events destinations that
              have been configured for the configuration set.
          title: EventDestinations
      title: GetConfigurationSetEventDestinationsResponse
      type: object
    GetContactResponse:
      example:
        AttributesData: ""
        CreatedTimestamp: ""
        TopicPreferences: ""
        TopicDefaultPreferences: ""
        LastUpdatedTimestamp: ""
        ContactListName: ""
        UnsubscribeAll: ""
        EmailAddress: ""
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          - description: The name of the contact list to which the contact belongs.
          title: ContactListName
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The contact's email address.
          title: EmailAddress
        TopicPreferences:
          allOf:
          - $ref: '#/components/schemas/TopicPreferenceList'
          - description: The contact's preference for being opted-in to or opted-out
              of a topic.&gt;
          title: TopicPreferences
        TopicDefaultPreferences:
          allOf:
          - $ref: '#/components/schemas/TopicPreferenceList'
          - description: The default topic preferences applied to the contact.
          title: TopicDefaultPreferences
        UnsubscribeAll:
          allOf:
          - $ref: '#/components/schemas/UnsubscribeAll'
          - description: A boolean value status noting if the contact is unsubscribed
              from all contact list topics.
          title: UnsubscribeAll
        AttributesData:
          allOf:
          - $ref: '#/components/schemas/AttributesData'
          - description: The attribute data attached to a contact.
          title: AttributesData
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp noting when the contact was created.
          title: CreatedTimestamp
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp noting the last time the contact's information
              was updated.
          title: LastUpdatedTimestamp
      title: GetContactResponse
      type: object
    GetContactListResponse:
      example:
        Topics: ""
        Description: ""
        CreatedTimestamp: ""
        LastUpdatedTimestamp: ""
        ContactListName: ""
        Tags: ""
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          - description: The name of the contact list.
          title: ContactListName
        Topics:
          allOf:
          - $ref: '#/components/schemas/Topics'
          - description: "An interest group, theme, or label within a list. A contact\
              \ list can have multiple topics."
          title: Topics
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of what the contact list is about.
          title: Description
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp noting when the contact list was created.
          title: CreatedTimestamp
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp noting the last time the contact list was updated.
          title: LastUpdatedTimestamp
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags associated with a contact list.
          title: Tags
      title: GetContactListResponse
      type: object
    GetCustomVerificationEmailTemplateResponse:
      description: The following elements are returned by the service.
      example:
        FromEmailAddress: ""
        TemplateContent: ""
        SuccessRedirectionURL: ""
        TemplateName: ""
        FailureRedirectionURL: ""
        TemplateSubject: ""
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          - description: The name of the custom verification email template.
          title: TemplateName
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email address that the custom verification email is sent
              from.
          title: FromEmailAddress
        TemplateSubject:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateSubject'
          - description: The subject line of the custom verification email.
          title: TemplateSubject
        TemplateContent:
          allOf:
          - $ref: '#/components/schemas/TemplateContent'
          - description: The content of the custom verification email.
          title: TemplateContent
        SuccessRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/SuccessRedirectionURL'
          - description: The URL that the recipient of the verification email is sent
              to if his or her address is successfully verified.
          title: SuccessRedirectionURL
        FailureRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/FailureRedirectionURL'
          - description: The URL that the recipient of the verification email is sent
              to if his or her address is not successfully verified.
          title: FailureRedirectionURL
      title: GetCustomVerificationEmailTemplateResponse
      type: object
    GetDedicatedIpResponse:
      description: Information about a dedicated IP address.
      example:
        DedicatedIp:
          PoolName: ""
          WarmupStatus: ""
          Ip: ""
          WarmupPercentage: ""
      properties:
        DedicatedIp:
          $ref: '#/components/schemas/GetDedicatedIpResponse_DedicatedIp'
      title: GetDedicatedIpResponse
      type: object
    GetDedicatedIpPoolResponse:
      description: The following element is returned by the service.
      example:
        DedicatedIpPool:
          PoolName: ""
          ScalingMode: ""
      properties:
        DedicatedIpPool:
          $ref: '#/components/schemas/GetDedicatedIpPoolResponse_DedicatedIpPool'
      title: GetDedicatedIpPoolResponse
      type: object
    GetDedicatedIpsResponse:
      description: Information about the dedicated IP addresses that are associated
        with your Amazon Web Services account.
      example:
        DedicatedIps: ""
        NextToken: ""
      properties:
        DedicatedIps:
          allOf:
          - $ref: '#/components/schemas/DedicatedIpList'
          - description: A list of dedicated IP addresses that are associated with
              your Amazon Web Services account.
          title: DedicatedIps
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates that there are additional dedicated\
              \ IP addresses to list. To view additional addresses, issue another\
              \ request to <code>GetDedicatedIps</code>, passing this token in the\
              \ <code>NextToken</code> parameter."
          title: NextToken
      title: GetDedicatedIpsResponse
      type: object
    GetDeliverabilityDashboardOptionsResponse:
      description: An object that shows the status of the Deliverability dashboard.
      example:
        SubscriptionExpiryDate: ""
        AccountStatus: ""
        ActiveSubscribedDomains: ""
        PendingExpirationSubscribedDomains: ""
        DashboardEnabled: ""
      properties:
        DashboardEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "Specifies whether the Deliverability dashboard is enabled.\
              \ If this value is <code>true</code>, the dashboard is enabled."
          title: DashboardEnabled
        SubscriptionExpiryDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date when your current subscription to the Deliverability\
              \ dashboard is scheduled to expire, if your subscription is scheduled\
              \ to expire at the end of the current calendar month. This value is\
              \ null if you have an active subscription that isn’t due to expire at\
              \ the end of the month."
          title: SubscriptionExpiryDate
        AccountStatus:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityDashboardAccountStatus'
          - description: "The current status of your Deliverability dashboard subscription.\
              \ If this value is <code>PENDING_EXPIRATION</code>, your subscription\
              \ is scheduled to expire at the end of the current calendar month."
          title: AccountStatus
        ActiveSubscribedDomains:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
          - description: "An array of objects, one for each verified domain that you\
              \ use to send email and currently has an active Deliverability dashboard\
              \ subscription that isn’t scheduled to expire at the end of the current\
              \ calendar month."
          title: ActiveSubscribedDomains
        PendingExpirationSubscribedDomains:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
          - description: "An array of objects, one for each verified domain that you\
              \ use to send email and currently has an active Deliverability dashboard\
              \ subscription that's scheduled to expire at the end of the current\
              \ calendar month."
          title: PendingExpirationSubscribedDomains
      required:
      - DashboardEnabled
      title: GetDeliverabilityDashboardOptionsResponse
      type: object
    GetDeliverabilityTestReportResponse:
      description: The results of the predictive inbox placement test.
      example:
        Message: ""
        IspPlacements: ""
        DeliverabilityTestReport:
          FromEmailAddress: ""
          DeliverabilityTestStatus: ""
          ReportName: ""
          ReportId: ""
          CreateDate: ""
          Subject: ""
        OverallPlacement:
          InboxPercentage: ""
          SpfPercentage: ""
          MissingPercentage: ""
          SpamPercentage: ""
          DkimPercentage: ""
        Tags: ""
      properties:
        DeliverabilityTestReport:
          $ref: '#/components/schemas/GetDeliverabilityTestReportResponse_DeliverabilityTestReport'
        OverallPlacement:
          $ref: '#/components/schemas/GetDeliverabilityTestReportResponse_OverallPlacement'
        IspPlacements:
          allOf:
          - $ref: '#/components/schemas/IspPlacements'
          - description: "An object that describes how the test email was handled\
              \ by several email providers, including Gmail, Hotmail, Yahoo, AOL,\
              \ and others."
          title: IspPlacements
        Message:
          allOf:
          - $ref: '#/components/schemas/MessageContent'
          - description: An object that contains the message that you sent when you
              performed this predictive inbox placement test.
          title: Message
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An array of objects that define the tags (keys and values)
              that are associated with the predictive inbox placement test.
          title: Tags
      required:
      - DeliverabilityTestReport
      - IspPlacements
      - OverallPlacement
      title: GetDeliverabilityTestReportResponse
      type: object
    GetDomainDeliverabilityCampaignResponse:
      description: An object that contains all the deliverability data for a specific
        campaign. This data is available for a campaign only if the campaign sent
        email by using a domain that the Deliverability dashboard is enabled for.
      example:
        DomainDeliverabilityCampaign:
          FirstSeenDateTime: ""
          InboxCount: ""
          ImageUrl: ""
          Subject: ""
          Esps: ""
          SpamCount: ""
          FromAddress: ""
          CampaignId: ""
          ReadRate: ""
          DeleteRate: ""
          LastSeenDateTime: ""
          SendingIps: ""
          ReadDeleteRate: ""
          ProjectedVolume: ""
      properties:
        DomainDeliverabilityCampaign:
          $ref: '#/components/schemas/GetDomainDeliverabilityCampaignResponse_DomainDeliverabilityCampaign'
      required:
      - DomainDeliverabilityCampaign
      title: GetDomainDeliverabilityCampaignResponse
      type: object
    GetDomainStatisticsReportResponse:
      description: An object that includes statistics that are related to the domain
        that you specified.
      example:
        OverallVolume:
          DomainIspPlacements: ""
          VolumeStatistics:
            InboxRawCount: ""
            ProjectedInbox: ""
            ProjectedSpam: ""
            SpamRawCount: ""
          ReadRatePercent: ""
        DailyVolumes: ""
      properties:
        OverallVolume:
          $ref: '#/components/schemas/GetDomainStatisticsReportResponse_OverallVolume'
        DailyVolumes:
          allOf:
          - $ref: '#/components/schemas/DailyVolumes'
          - description: "An object that contains deliverability metrics for the domain\
              \ that you specified. This object contains data for each day, starting\
              \ on the <code>StartDate</code> and ending on the <code>EndDate</code>."
          title: DailyVolumes
      required:
      - DailyVolumes
      - OverallVolume
      title: GetDomainStatisticsReportResponse
      type: object
    GetEmailIdentityResponse:
      description: Details about an email identity.
      example:
        IdentityType: ""
        VerificationStatus: ""
        Policies: ""
        VerifiedForSendingStatus: ""
        ConfigurationSetName: ""
        FeedbackForwardingStatus: ""
        DkimAttributes:
          SigningEnabled: ""
          Status: ""
          SigningAttributesOrigin: ""
          NextSigningKeyLength: ""
          CurrentSigningKeyLength: ""
          Tokens: ""
          LastKeyGenerationTimestamp: ""
        Tags: ""
        MailFromAttributes:
          MailFromDomain: ""
          MailFromDomainStatus: ""
          BehaviorOnMxFailure: ""
      properties:
        IdentityType:
          allOf:
          - $ref: '#/components/schemas/IdentityType'
          - description: "The email identity type. Note: the <code>MANAGED_DOMAIN</code>\
              \ identity type is not supported."
          title: IdentityType
        FeedbackForwardingStatus:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>The feedback forwarding configuration for the identity.</p>\
              \ <p>If the value is <code>true</code>, you receive email notifications\
              \ when bounce or complaint events occur. These notifications are sent\
              \ to the address that you specified in the <code>Return-Path</code>\
              \ header of the original email.</p> <p>You're required to have a method\
              \ of tracking bounces and complaints. If you haven't set up another\
              \ mechanism for receiving bounce or complaint notifications (for example,\
              \ by setting up an event destination), you receive an email notification\
              \ when these events occur (even if this setting is disabled).</p>"
          title: FeedbackForwardingStatus
        VerifiedForSendingStatus:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "Specifies whether or not the identity is verified. You can\
              \ only send email from verified email addresses or domains. For more\
              \ information about verifying identities, see the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html\"\
              >Amazon Pinpoint User Guide</a>."
          title: VerifiedForSendingStatus
        DkimAttributes:
          $ref: '#/components/schemas/CreateEmailIdentityResponse_DkimAttributes'
        MailFromAttributes:
          $ref: '#/components/schemas/GetEmailIdentityResponse_MailFromAttributes'
        Policies:
          allOf:
          - $ref: '#/components/schemas/PolicyMap'
          - description: A map of policy names to policies.
          title: Policies
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An array of objects that define the tags (keys and values)
              that are associated with the email identity.
          title: Tags
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          - description: The configuration set used by default when sending from this
              identity.
          title: ConfigurationSetName
        VerificationStatus:
          allOf:
          - $ref: '#/components/schemas/VerificationStatus'
          - description: "<p>The verification status of the identity. The status can\
              \ be one of the following:</p> <ul> <li> <p> <code>PENDING</code> –\
              \ The verification process was initiated, but Amazon SES hasn't yet\
              \ been able to verify the identity.</p> </li> <li> <p> <code>SUCCESS</code>\
              \ – The verification process completed successfully.</p> </li> <li>\
              \ <p> <code>FAILED</code> – The verification process failed.</p> </li>\
              \ <li> <p> <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing\
              \ Amazon SES from determining the verification status of the identity.</p>\
              \ </li> <li> <p> <code>NOT_STARTED</code> – The verification process\
              \ hasn't been initiated for the identity.</p> </li> </ul>"
          title: VerificationStatus
      title: GetEmailIdentityResponse
      type: object
    GetEmailIdentityPoliciesResponse:
      description: Identity policies associated with email identity.
      example:
        Policies: ""
      properties:
        Policies:
          allOf:
          - $ref: '#/components/schemas/PolicyMap'
          - description: A map of policy names to policies.
          title: Policies
      title: GetEmailIdentityPoliciesResponse
      type: object
    GetEmailTemplateResponse:
      description: The following element is returned by the service.
      example:
        TemplateContent:
          Html: ""
          Text: ""
          Subject: ""
        TemplateName: ""
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          - description: The name of the template.
          title: TemplateName
        TemplateContent:
          $ref: '#/components/schemas/GetEmailTemplateResponse_TemplateContent'
      required:
      - TemplateContent
      - TemplateName
      title: GetEmailTemplateResponse
      type: object
    GetImportJobResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      example:
        JobStatus: ""
        CreatedTimestamp: ""
        ProcessedRecordsCount: ""
        ImportDestination:
          SuppressionListDestination:
            SuppressionListImportAction: ""
          ContactListDestination:
            ContactListName: ""
            ContactListImportAction: ""
        FailureInfo:
          ErrorMessage: ""
          FailedRecordsS3Url: ""
        ImportDataSource:
          S3Url: ""
          DataFormat: ""
        FailedRecordsCount: ""
        CompletedTimestamp: ""
        JobId: ""
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: A string that represents the import job ID.
          title: JobId
        ImportDestination:
          $ref: '#/components/schemas/GetImportJobResponse_ImportDestination'
        ImportDataSource:
          $ref: '#/components/schemas/GetImportJobResponse_ImportDataSource'
        FailureInfo:
          $ref: '#/components/schemas/GetImportJobResponse_FailureInfo'
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: The status of the import job.
          title: JobStatus
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time stamp of when the import job was created.
          title: CreatedTimestamp
        CompletedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time stamp of when the import job was completed.
          title: CompletedTimestamp
        ProcessedRecordsCount:
          allOf:
          - $ref: '#/components/schemas/ProcessedRecordsCount'
          - description: The current number of records processed.
          title: ProcessedRecordsCount
        FailedRecordsCount:
          allOf:
          - $ref: '#/components/schemas/FailedRecordsCount'
          - description: The number of records that failed processing because of invalid
              input or other reasons.
          title: FailedRecordsCount
      title: GetImportJobResponse
      type: object
    GetSuppressedDestinationResponse:
      description: Information about the suppressed email address.
      example:
        SuppressedDestination:
          LastUpdateTime: ""
          Attributes:
            FeedbackId: ""
            MessageId: ""
          EmailAddress: ""
          Reason: ""
      properties:
        SuppressedDestination:
          $ref: '#/components/schemas/GetSuppressedDestinationResponse_SuppressedDestination'
      required:
      - SuppressedDestination
      title: GetSuppressedDestinationResponse
      type: object
    ListConfigurationSetsResponse:
      description: A list of configuration sets in your Amazon SES account in the
        current Amazon Web Services Region.
      example:
        NextToken: ""
        ConfigurationSets: ""
      properties:
        ConfigurationSets:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetNameList'
          - description: An array that contains all of the configuration sets in your
              Amazon SES account in the current Amazon Web Services Region.
          title: ConfigurationSets
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates that there are additional configuration\
              \ sets to list. To view additional configuration sets, issue another\
              \ request to <code>ListConfigurationSets</code>, and pass this token\
              \ in the <code>NextToken</code> parameter."
          title: NextToken
      title: ListConfigurationSetsResponse
      type: object
    ListContactListsResponse:
      example:
        ContactLists: ""
        NextToken: ""
      properties:
        ContactLists:
          allOf:
          - $ref: '#/components/schemas/ListOfContactLists'
          - description: The available contact lists.
          title: ContactLists
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A string token indicating that there might be additional
              contact lists available to be listed. Copy this token to a subsequent
              call to <code>ListContactLists</code> with the same parameters to retrieve
              the next page of contact lists.
          title: NextToken
      title: ListContactListsResponse
      type: object
    ListContactsResponse:
      example:
        Contacts: ""
        NextToken: ""
      properties:
        Contacts:
          allOf:
          - $ref: '#/components/schemas/ListOfContacts'
          - description: The contacts present in a specific contact list.
          title: Contacts
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A string token indicating that there might be additional
              contacts available to be listed. Copy this token to a subsequent call
              to <code>ListContacts</code> with the same parameters to retrieve the
              next page of contacts.
          title: NextToken
      title: ListContactsResponse
      type: object
    SubscriptionStatus:
      enum:
      - OPT_IN
      - OPT_OUT
      title: SubscriptionStatus
      type: string
    TopicFilter:
      description: Used for filtering by a specific topic preference.
      properties:
        TopicName:
          allOf:
          - $ref: '#/components/schemas/TopicName'
          - description: The name of a topic on which you wish to apply the filter.
          title: TopicName
        UseDefaultIfPreferenceUnavailable:
          allOf:
          - $ref: '#/components/schemas/UseDefaultIfPreferenceUnavailable'
          - description: Notes that the default subscription status should be applied
              to a contact because the contact has not noted their preference for
              subscribing to a topic.
          title: UseDefaultIfPreferenceUnavailable
      title: TopicFilter
      type: object
    ListCustomVerificationEmailTemplatesResponse:
      description: The following elements are returned by the service.
      example:
        CustomVerificationEmailTemplates: ""
        NextToken: ""
      properties:
        CustomVerificationEmailTemplates:
          allOf:
          - $ref: '#/components/schemas/CustomVerificationEmailTemplatesList'
          - description: A list of the custom verification email templates that exist
              in your account.
          title: CustomVerificationEmailTemplates
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token indicating that there are additional custom verification
              email templates available to be listed. Pass this token to a subsequent
              call to <code>ListCustomVerificationEmailTemplates</code> to retrieve
              the next 50 custom verification email templates.
          title: NextToken
      title: ListCustomVerificationEmailTemplatesResponse
      type: object
    ListDedicatedIpPoolsResponse:
      description: A list of dedicated IP pools.
      example:
        NextToken: ""
        DedicatedIpPools: ""
      properties:
        DedicatedIpPools:
          allOf:
          - $ref: '#/components/schemas/ListOfDedicatedIpPools'
          - description: A list of all of the dedicated IP pools that are associated
              with your Amazon Web Services account in the current Region.
          title: DedicatedIpPools
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates that there are additional IP pools\
              \ to list. To view additional IP pools, issue another request to <code>ListDedicatedIpPools</code>,\
              \ passing this token in the <code>NextToken</code> parameter."
          title: NextToken
      title: ListDedicatedIpPoolsResponse
      type: object
    ListDeliverabilityTestReportsResponse:
      description: "A list of the predictive inbox placement test reports that are\
        \ available for your account, regardless of whether or not those tests are\
        \ complete."
      example:
        NextToken: ""
        DeliverabilityTestReports: ""
      properties:
        DeliverabilityTestReports:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestReports'
          - description: An object that contains a lists of predictive inbox placement
              tests that you've performed.
          title: DeliverabilityTestReports
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates that there are additional predictive\
              \ inbox placement tests to list. To view additional predictive inbox\
              \ placement tests, issue another request to <code>ListDeliverabilityTestReports</code>,\
              \ and pass this token in the <code>NextToken</code> parameter."
          title: NextToken
      required:
      - DeliverabilityTestReports
      title: ListDeliverabilityTestReportsResponse
      type: object
    ListDomainDeliverabilityCampaignsResponse:
      description: An array of objects that provide deliverability data for all the
        campaigns that used a specific domain to send email during a specified time
        range. This data is available for a domain only if you enabled the Deliverability
        dashboard for the domain.
      example:
        NextToken: ""
        DomainDeliverabilityCampaigns: ""
      properties:
        DomainDeliverabilityCampaigns:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityCampaignList'
          - description: "An array of responses, one for each campaign that used the\
              \ domain to send email during the specified time range."
          title: DomainDeliverabilityCampaigns
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token that’s returned from a previous call to the <code>ListDomainDeliverabilityCampaigns</code>
              operation. This token indicates the position of the campaign in the
              list of campaigns.
          title: NextToken
      required:
      - DomainDeliverabilityCampaigns
      title: ListDomainDeliverabilityCampaignsResponse
      type: object
    ListEmailIdentitiesResponse:
      description: "A list of all of the identities that you've attempted to verify,\
        \ regardless of whether or not those identities were successfully verified."
      example:
        NextToken: ""
        EmailIdentities: ""
      properties:
        EmailIdentities:
          allOf:
          - $ref: '#/components/schemas/IdentityInfoList'
          - description: An array that includes all of the email identities associated
              with your Amazon Web Services account.
          title: EmailIdentities
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates that there are additional configuration\
              \ sets to list. To view additional configuration sets, issue another\
              \ request to <code>ListEmailIdentities</code>, and pass this token in\
              \ the <code>NextToken</code> parameter."
          title: NextToken
      title: ListEmailIdentitiesResponse
      type: object
    ListEmailTemplatesResponse:
      description: The following elements are returned by the service.
      example:
        NextToken: ""
        TemplatesMetadata: ""
      properties:
        TemplatesMetadata:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateMetadataList'
          - description: An array the contains the name and creation time stamp for
              each template in your Amazon SES account.
          title: TemplatesMetadata
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token indicating that there are additional email templates
              available to be listed. Pass this token to a subsequent <code>ListEmailTemplates</code>
              call to retrieve the next 10 email templates.
          title: NextToken
      title: ListEmailTemplatesResponse
      type: object
    ListImportJobsResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      example:
        ImportJobs: ""
        NextToken: ""
      properties:
        ImportJobs:
          allOf:
          - $ref: '#/components/schemas/ImportJobSummaryList'
          - description: A list of the import job summaries.
          title: ImportJobs
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A string token indicating that there might be additional
              import jobs available to be listed. Copy this token to a subsequent
              call to <code>ListImportJobs</code> with the same parameters to retrieve
              the next page of import jobs.
          title: NextToken
      title: ListImportJobsResponse
      type: object
    ListRecommendationsResponse:
      description: Contains the response to your request to retrieve the list of recommendations
        for your account.
      example:
        Recommendations: ""
        NextToken: ""
      properties:
        Recommendations:
          allOf:
          - $ref: '#/components/schemas/RecommendationsList'
          - description: The recommendations applicable to your account.
          title: Recommendations
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A string token indicating that there might be additional
              recommendations available to be listed. Use the token provided in the
              <code>ListRecommendationsResponse</code> to use in the subsequent call
              to <code>ListRecommendations</code> with the same parameters to retrieve
              the next page of recommendations.
          title: NextToken
      title: ListRecommendationsResponse
      type: object
    ListRecommendationFilterValue:
      maxLength: 512
      minLength: 1
      title: ListRecommendationFilterValue
      type: string
    ListSuppressedDestinationsResponse:
      description: A list of suppressed email addresses.
      example:
        SuppressedDestinationSummaries: ""
        NextToken: ""
      properties:
        SuppressedDestinationSummaries:
          allOf:
          - $ref: '#/components/schemas/SuppressedDestinationSummaries'
          - description: "A list of summaries, each containing a summary for a suppressed\
              \ email destination."
          title: SuppressedDestinationSummaries
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that indicates that there are additional email addresses\
              \ on the suppression list for your account. To view additional suppressed\
              \ addresses, issue another request to <code>ListSuppressedDestinations</code>,\
              \ and pass this token in the <code>NextToken</code> parameter."
          title: NextToken
      title: ListSuppressedDestinationsResponse
      type: object
    SuppressionListReason:
      description: <p>The reason that the address was added to the suppression list
        for your account. The value can be one of the following:</p> <ul> <li> <p>
        <code>COMPLAINT</code> – Amazon SES added an email address to the suppression
        list for your account because a message sent to that address results in a
        complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES added an email
        address to the suppression list for your account because a message sent to
        that address results in a hard bounce.</p> </li> </ul>
      enum:
      - BOUNCE
      - COMPLAINT
      title: SuppressionListReason
      type: string
    InvalidNextTokenException: {}
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An array that lists all the tags that are associated with
              the resource. Each tag consists of a required tag key (<code>Key</code>)
              and an associated tag value (<code>Value</code>)
          title: Tags
      required:
      - Tags
      title: ListTagsForResourceResponse
      type: object
    PutAccountDedicatedIpWarmupAttributesResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutAccountDetailsResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    AdditionalContactEmailAddress:
      format: password
      maxLength: 254
      minLength: 6
      pattern: ^(.+)@(.+)$
      title: AdditionalContactEmailAddress
      type: string
    ConflictException: {}
    PutAccountSendingAttributesResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutAccountSuppressionAttributesResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutAccountVdmAttributesResponse:
      properties: {}
      type: object
    FeatureStatus:
      enum:
      - ENABLED
      - DISABLED
      title: FeatureStatus
      type: string
    DashboardAttributes:
      description: An object containing additional settings for your VDM configuration
        as applicable to the Dashboard.
      properties:
        EngagementMetrics:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          - description: <p>Specifies the status of your VDM engagement metrics collection.
              Can be one of the following:</p> <ul> <li> <p> <code>ENABLED</code>
              – Amazon SES enables engagement metrics for your account.</p> </li>
              <li> <p> <code>DISABLED</code> – Amazon SES disables engagement metrics
              for your account.</p> </li> </ul>
          title: EngagementMetrics
      title: DashboardAttributes
      type: object
    GuardianAttributes:
      description: An object containing additional settings for your VDM configuration
        as applicable to the Guardian.
      properties:
        OptimizedSharedDelivery:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          - description: <p>Specifies the status of your VDM optimized shared delivery.
              Can be one of the following:</p> <ul> <li> <p> <code>ENABLED</code>
              – Amazon SES enables optimized shared delivery for your account.</p>
              </li> <li> <p> <code>DISABLED</code> – Amazon SES disables optimized
              shared delivery for your account.</p> </li> </ul>
          title: OptimizedSharedDelivery
      title: GuardianAttributes
      type: object
    PutConfigurationSetDeliveryOptionsResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutConfigurationSetReputationOptionsResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutConfigurationSetSendingOptionsResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutConfigurationSetSuppressionOptionsResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutConfigurationSetTrackingOptionsResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutConfigurationSetVdmOptionsResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutDedicatedIpInPoolResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutDedicatedIpPoolScalingAttributesResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      example: {}
      properties: {}
      type: object
    PutDedicatedIpWarmupAttributesResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutDeliverabilityDashboardOptionResponse:
      description: A response that indicates whether the Deliverability dashboard
        is enabled.
      properties: {}
      type: object
    DomainDeliverabilityTrackingOption:
      description: "An object that contains information about the Deliverability dashboard\
        \ subscription for a verified domain that you use to send email and currently\
        \ has an active Deliverability dashboard subscription. If a Deliverability\
        \ dashboard subscription is active for a domain, you gain access to reputation,\
        \ inbox placement, and other metrics for the domain."
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          - description: A verified domain that’s associated with your Amazon Web
              Services account and currently has an active Deliverability dashboard
              subscription.
          title: Domain
        SubscriptionStartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date when you enabled the Deliverability dashboard for
              the domain.
          title: SubscriptionStartDate
        InboxPlacementTrackingOption:
          $ref: '#/components/schemas/DomainDeliverabilityTrackingOption_InboxPlacementTrackingOption'
      title: DomainDeliverabilityTrackingOption
      type: object
    PutEmailIdentityConfigurationSetAttributesResponse:
      description: "If the action is successful, the service sends back an HTTP 200\
        \ response with an empty HTTP body."
      properties: {}
      type: object
    PutEmailIdentityDkimAttributesResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutEmailIdentityDkimSigningAttributesResponse:
      description: "<p>If the action is successful, the service sends back an HTTP\
        \ 200 response.</p> <p>The following data is returned in JSON format by the\
        \ service.</p>"
      example:
        DkimTokens: ""
        DkimStatus: ""
      properties:
        DkimStatus:
          allOf:
          - $ref: '#/components/schemas/DkimStatus'
          - description: "<p>The DKIM authentication status of the identity. Amazon\
              \ SES determines the authentication status by searching for specific\
              \ records in the DNS configuration for your domain. If you used <a href=\"\
              https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\"\
              >Easy DKIM</a> to set up DKIM authentication, Amazon SES tries to find\
              \ three unique CNAME records in the DNS configuration for your domain.</p>\
              \ <p>If you provided a public key to perform DKIM authentication, Amazon\
              \ SES tries to find a TXT record that uses the selector that you specified.\
              \ The value of the TXT record must be a public key that's paired with\
              \ the private key that you specified in the process of creating the\
              \ identity.</p> <p>The status can be one of the following:</p> <ul>\
              \ <li> <p> <code>PENDING</code> – The verification process was initiated,\
              \ but Amazon SES hasn't yet detected the DKIM records in the DNS configuration\
              \ for the domain.</p> </li> <li> <p> <code>SUCCESS</code> – The verification\
              \ process completed successfully.</p> </li> <li> <p> <code>FAILED</code>\
              \ – The verification process failed. This typically occurs when Amazon\
              \ SES fails to find the DKIM records in the DNS configuration of the\
              \ domain.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code> – A temporary\
              \ issue is preventing Amazon SES from determining the DKIM authentication\
              \ status of the domain.</p> </li> <li> <p> <code>NOT_STARTED</code>\
              \ – The DKIM verification process hasn't been initiated for the domain.</p>\
              \ </li> </ul>"
          title: DkimStatus
        DkimTokens:
          allOf:
          - $ref: '#/components/schemas/DnsTokenList'
          - description: "<p>If you used <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\"\
              >Easy DKIM</a> to configure DKIM authentication for the domain, then\
              \ this object contains a set of unique strings that you use to create\
              \ a set of CNAME records that you add to the DNS configuration for your\
              \ domain. When Amazon SES detects these records in the DNS configuration\
              \ for your domain, the DKIM authentication process is complete.</p>\
              \ <p>If you configured DKIM authentication for the domain by providing\
              \ your own public-private key pair, then this object contains the selector\
              \ that's associated with your public key.</p> <p>Regardless of the DKIM\
              \ authentication method you use, Amazon SES searches for the appropriate\
              \ records in the DNS configuration of the domain for up to 72 hours.</p>"
          title: DkimTokens
      title: PutEmailIdentityDkimSigningAttributesResponse
      type: object
    PutEmailIdentityFeedbackAttributesResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutEmailIdentityMailFromAttributesResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    PutSuppressedDestinationResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    SendBulkEmailResponse:
      description: The following data is returned in JSON format by the service.
      example:
        BulkEmailEntryResults: ""
      properties:
        BulkEmailEntryResults:
          allOf:
          - $ref: '#/components/schemas/BulkEmailEntryResultList'
          - description: One object per intended recipient. Check each response object
              and retry any messages with a failure status.
          title: BulkEmailEntryResults
      required:
      - BulkEmailEntryResults
      title: SendBulkEmailResponse
      type: object
    EmailAddress:
      title: EmailAddress
      type: string
    MessageTag:
      description: 'Contains the name and value of a tag that you apply to an email.
        You can use message tags when you publish email sending events. '
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/MessageTagName'
          - description: "<p>The name of the message tag. The message tag name has\
              \ to meet the following criteria:</p> <ul> <li> <p>It can only contain\
              \ ASCII letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes\
              \ (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p>\
              \ </li> </ul>"
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/MessageTagValue'
          - description: "<p>The value of the message tag. The message tag value has\
              \ to meet the following criteria:</p> <ul> <li> <p>It can only contain\
              \ ASCII letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes\
              \ (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p>\
              \ </li> </ul>"
          title: Value
      required:
      - Name
      - Value
      title: MessageTag
      type: object
    BulkEmailEntry:
      properties:
        Destination:
          $ref: '#/components/schemas/BulkEmailEntry_Destination'
        ReplacementTags:
          allOf:
          - $ref: '#/components/schemas/MessageTagList'
          - description: "A list of tags, in the form of name/value pairs, to apply\
              \ to an email that you send using the <code>SendBulkTemplatedEmail</code>\
              \ operation. Tags correspond to characteristics of the email that you\
              \ define, so that you can publish email sending events."
          title: ReplacementTags
        ReplacementEmailContent:
          $ref: '#/components/schemas/BulkEmailEntry_ReplacementEmailContent'
      required:
      - Destination
      title: BulkEmailEntry
      type: object
    SendCustomVerificationEmailResponse:
      description: The following element is returned by the service.
      example:
        MessageId: ""
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/OutboundMessageId'
          - description: The unique message identifier returned from the <code>SendCustomVerificationEmail</code>
              operation.
          title: MessageId
      title: SendCustomVerificationEmailResponse
      type: object
    SendEmailResponse:
      description: A unique message ID that you receive when an email is accepted
        for sending.
      example:
        MessageId: ""
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/OutboundMessageId'
          - description: "<p>A unique identifier for the message that is generated\
              \ when the message is accepted.</p> <note> <p>It's possible for Amazon\
              \ SES to accept a message without sending it. This can happen when the\
              \ message that you're trying to send has an attachment contains a virus,\
              \ or when you send a templated email that contains invalid personalization\
              \ content, for example.</p> </note>"
          title: MessageId
      title: SendEmailResponse
      type: object
    EmailAddressList:
      items:
        $ref: '#/components/schemas/EmailAddress'
      type: array
    ContactListName:
      type: string
    TopicName:
      type: string
    TagResourceResponse:
      properties: {}
      type: object
    TestRenderEmailTemplateResponse:
      description: The following element is returned by the service.
      example:
        RenderedTemplate: ""
      properties:
        RenderedTemplate:
          allOf:
          - $ref: '#/components/schemas/RenderedEmailTemplate'
          - description: The complete MIME message rendered by applying the data in
              the <code>TemplateData</code> parameter to the template specified in
              the TemplateName parameter.
          title: RenderedTemplate
      required:
      - RenderedTemplate
      title: TestRenderEmailTemplateResponse
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      title: TagKey
      type: string
    UpdateConfigurationSetEventDestinationResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    UpdateContactResponse:
      properties: {}
      type: object
    UpdateContactListResponse:
      properties: {}
      type: object
    UpdateCustomVerificationEmailTemplateResponse:
      description: "If the action is successful, the service sends back an HTTP 200\
        \ response with an empty HTTP body."
      properties: {}
      type: object
    UpdateEmailIdentityPolicyResponse:
      description: "An HTTP 200 response if the request succeeds, or an error message\
        \ if the request fails."
      properties: {}
      type: object
    UpdateEmailTemplateResponse:
      description: "If the action is successful, the service sends back an HTTP 200\
        \ response with an empty HTTP body."
      properties: {}
      type: object
    MailType:
      enum:
      - MARKETING
      - TRANSACTIONAL
      title: MailType
      type: string
    WebsiteURL:
      format: password
      maxLength: 1000
      minLength: 1
      pattern: "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"
      type: string
    ContactLanguage:
      enum:
      - EN
      - JA
      title: ContactLanguage
      type: string
    UseCaseDescription:
      format: password
      maxLength: 5000
      minLength: 1
      type: string
    AdditionalContactEmailAddresses:
      items:
        $ref: '#/components/schemas/AdditionalContactEmailAddress'
      maxItems: 4
      minItems: 1
      type: array
    ReviewDetails:
      description: An object that contains information about your account details
        review.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ReviewStatus'
          - description: <p>The status of the latest review of your account. The status
              can be one of the following:</p> <ul> <li> <p> <code>PENDING</code>
              – We have received your appeal and are in the process of reviewing it.</p>
              </li> <li> <p> <code>GRANTED</code> – Your appeal has been reviewed
              and your production access has been granted.</p> </li> <li> <p> <code>DENIED</code>
              – Your appeal has been reviewed and your production access has been
              denied.</p> </li> <li> <p> <code>FAILED</code> – An internal error occurred
              and we didn't receive your appeal. You can submit your appeal again.</p>
              </li> </ul>
          title: Status
        CaseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          - description: The associated support center case ID (if any).
          title: CaseId
      title: ReviewDetails
      type: object
    AccountDetails:
      description: An object that contains information about your account details.
      properties:
        MailType:
          allOf:
          - $ref: '#/components/schemas/MailType'
          - description: <p>The type of email your account is sending. The mail type
              can be one of the following:</p> <ul> <li> <p> <code>MARKETING</code>
              – Most of your sending traffic is to keep your customers informed of
              your latest offering.</p> </li> <li> <p> <code>TRANSACTIONAL</code>
              – Most of your sending traffic is to communicate during a transaction
              with a customer.</p> </li> </ul>
          title: MailType
        WebsiteURL:
          allOf:
          - $ref: '#/components/schemas/WebsiteURL'
          - description: The URL of your website. This information helps us better
              understand the type of content that you plan to send.
          title: WebsiteURL
        ContactLanguage:
          allOf:
          - $ref: '#/components/schemas/ContactLanguage'
          - description: The language you would prefer for the case. The contact language
              can be one of <code>ENGLISH</code> or <code>JAPANESE</code>.
          title: ContactLanguage
        UseCaseDescription:
          allOf:
          - $ref: '#/components/schemas/UseCaseDescription'
          - description: A description of the types of email that you plan to send.
          title: UseCaseDescription
        AdditionalContactEmailAddresses:
          allOf:
          - $ref: '#/components/schemas/AdditionalContactEmailAddresses'
          - description: Additional email addresses where updates are sent about your
              account review process.
          title: AdditionalContactEmailAddresses
        ReviewDetails:
          $ref: '#/components/schemas/AccountDetails_ReviewDetails'
      title: AccountDetails
      type: object
    AmazonResourceName:
      type: string
    AttributesData:
      type: string
    BatchGetMetricDataQueries:
      items:
        $ref: '#/components/schemas/BatchGetMetricDataQuery'
      maxItems: 10
      minItems: 1
      type: array
    QueryIdentifier:
      maxLength: 255
      minLength: 1
      type: string
    MetricNamespace:
      enum:
      - VDM
      title: MetricNamespace
      type: string
    Metric:
      enum:
      - SEND
      - COMPLAINT
      - PERMANENT_BOUNCE
      - TRANSIENT_BOUNCE
      - OPEN
      - CLICK
      - DELIVERY
      - DELIVERY_OPEN
      - DELIVERY_CLICK
      - DELIVERY_COMPLAINT
      title: Metric
      type: string
    Dimensions:
      additionalProperties:
        $ref: '#/components/schemas/MetricDimensionValue'
      maxProperties: 3
      minProperties: 1
      type: object
    Timestamp:
      format: date-time
      title: Timestamp
      type: string
    BatchGetMetricDataRequest:
      description: Represents a request to retrieve a batch of metric data.
      example:
        Queries: ""
      properties:
        Queries:
          allOf:
          - $ref: '#/components/schemas/BatchGetMetricDataQueries'
          - description: A list of queries for metrics to be retrieved.
      required:
      - Queries
      title: BatchGetMetricDataRequest
      type: object
    MetricDataResultList:
      items:
        $ref: '#/components/schemas/MetricDataResult'
      type: array
    MetricDataErrorList:
      items:
        $ref: '#/components/schemas/MetricDataError'
      type: array
    BehaviorOnMxFailure:
      description: "<p>The action to take if the required MX record can't be found\
        \ when you send an email. When you set this value to <code>UseDefaultValue</code>,\
        \ the mail is sent using <i>amazonses.com</i> as the MAIL FROM domain. When\
        \ you set this value to <code>RejectMessage</code>, the Amazon SES API v2\
        \ returns a <code>MailFromDomainNotVerified</code> error, and doesn't attempt\
        \ to deliver the email.</p> <p>These behaviors are taken when the custom MAIL\
        \ FROM domain configuration is in the <code>Pending</code>, <code>Failed</code>,\
        \ and <code>TemporaryFailure</code> states.</p>"
      enum:
      - USE_DEFAULT_VALUE
      - REJECT_MESSAGE
      title: BehaviorOnMxFailure
      type: string
    BlacklistEntry:
      description: An object that contains information about a blacklisting event
        that impacts one of the dedicated IP addresses that is associated with your
        account.
      properties:
        RblName:
          allOf:
          - $ref: '#/components/schemas/RblName'
          - description: The name of the blacklist that the IP address appears on.
          title: RblName
        ListingTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the blacklisting event occurred.
          title: ListingTime
        Description:
          allOf:
          - $ref: '#/components/schemas/BlacklistingDescription'
          - description: "Additional information about the blacklisting event, as\
              \ provided by the blacklist maintainer."
          title: Description
      title: BlacklistEntry
      type: object
    BlacklistEntries:
      items:
        $ref: '#/components/schemas/BlacklistEntry'
      title: BlacklistEntries
      type: array
    RblName:
      description: The name of a blacklist that an IP address was found on.
      type: string
    BlacklistingDescription:
      description: A description of the blacklisting event.
      type: string
    BlacklistItemNames:
      items:
        $ref: '#/components/schemas/BlacklistItemName'
      type: array
    BlacklistReport:
      additionalProperties:
        $ref: '#/components/schemas/BlacklistEntries'
      type: object
    Content:
      description: "An object that represents the content of the email, and optionally\
        \ a character set specification."
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/MessageData'
          - description: The content of the message itself.
          title: Data
        Charset:
          allOf:
          - $ref: '#/components/schemas/Charset'
          - description: "The character set for the content. Because of the constraints\
              \ of the SMTP protocol, Amazon SES uses 7-bit ASCII by default. If the\
              \ text includes characters outside of the ASCII range, you have to specify\
              \ a character set. For example, you could specify <code>UTF-8</code>,\
              \ <code>ISO-8859-1</code>, or <code>Shift_JIS</code>."
          title: Charset
      required:
      - Data
      title: Content
      type: object
    Body:
      description: Represents the body of the email message.
      properties:
        Text:
          $ref: '#/components/schemas/Body_Text'
        Html:
          $ref: '#/components/schemas/Body_Html'
      title: Body
      type: object
    BulkEmailContent:
      description: An object that contains the body of the message. You can specify
        a template message.
      properties:
        Template:
          $ref: '#/components/schemas/SendBulkEmail_request_DefaultContent_Template'
      title: BulkEmailContent
      type: object
    Destination:
      description: "<p>An object that describes the recipients for an email.</p> <note>\
        \ <p>Amazon SES does not support the SMTPUTF8 extension, as described in <a\
        \ href=\"https://tools.ietf.org/html/rfc6531\">RFC6531</a>. For this reason,\
        \ the <i>local part</i> of a destination email address (the part of the email\
        \ address that precedes the @ sign) may only contain <a href=\"https://en.wikipedia.org/wiki/Email_address#Local-part\"\
        >7-bit ASCII characters</a>. If the <i>domain part</i> of an address (the\
        \ part after the @ sign) contains non-ASCII characters, they must be encoded\
        \ using Punycode, as described in <a href=\"https://tools.ietf.org/html/rfc3492.html\"\
        >RFC3492</a>.</p> </note>"
      properties:
        ToAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          - description: An array that contains the email addresses of the "To" recipients
              for the email.
          title: ToAddresses
        CcAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          - description: An array that contains the email addresses of the "CC" (carbon
              copy) recipients for the email.
          title: CcAddresses
        BccAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          - description: An array that contains the email addresses of the "BCC" (blind
              carbon copy) recipients for the email.
          title: BccAddresses
      title: Destination
      type: object
    MessageTagList:
      description: A list of message tags.
      items:
        $ref: '#/components/schemas/MessageTag'
      type: array
    ReplacementEmailContent:
      description: The <code>ReplaceEmailContent</code> object to be used for a specific
        <code>BulkEmailEntry</code>. The <code>ReplacementTemplate</code> can be specified
        within this object.
      properties:
        ReplacementTemplate:
          $ref: '#/components/schemas/ReplacementEmailContent_ReplacementTemplate'
      title: ReplacementEmailContent
      type: object
    BulkEmailEntryList:
      description: A list of <code>BulkEmailEntry</code> objects.
      items:
        $ref: '#/components/schemas/BulkEmailEntry'
      type: array
    BulkEmailStatus:
      enum:
      - SUCCESS
      - MESSAGE_REJECTED
      - MAIL_FROM_DOMAIN_NOT_VERIFIED
      - CONFIGURATION_SET_NOT_FOUND
      - TEMPLATE_NOT_FOUND
      - ACCOUNT_SUSPENDED
      - ACCOUNT_THROTTLED
      - ACCOUNT_DAILY_QUOTA_EXCEEDED
      - INVALID_SENDING_POOL_NAME
      - ACCOUNT_SENDING_PAUSED
      - CONFIGURATION_SET_SENDING_PAUSED
      - INVALID_PARAMETER
      - TRANSIENT_FAILURE
      - FAILED
      title: BulkEmailStatus
      type: string
    ErrorMessage:
      type: string
    OutboundMessageId:
      type: string
    BulkEmailEntryResult:
      description: The result of the <code>SendBulkEmail</code> operation of each
        specified <code>BulkEmailEntry</code>.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/BulkEmailStatus'
          - description: "<p>The status of a message sent using the <code>SendBulkTemplatedEmail</code>\
              \ operation.</p> <p>Possible values for this parameter include:</p>\
              \ <ul> <li> <p>SUCCESS: Amazon SES accepted the message, and will attempt\
              \ to deliver it to the recipients.</p> </li> <li> <p>MESSAGE_REJECTED:\
              \ The message was rejected because it contained a virus.</p> </li> <li>\
              \ <p>MAIL_FROM_DOMAIN_NOT_VERIFIED: The sender's email address or domain\
              \ was not verified.</p> </li> <li> <p>CONFIGURATION_SET_DOES_NOT_EXIST:\
              \ The configuration set you specified does not exist.</p> </li> <li>\
              \ <p>TEMPLATE_DOES_NOT_EXIST: The template you specified does not exist.</p>\
              \ </li> <li> <p>ACCOUNT_SUSPENDED: Your account has been shut down because\
              \ of issues related to your email sending practices.</p> </li> <li>\
              \ <p>ACCOUNT_THROTTLED: The number of emails you can send has been reduced\
              \ because your account has exceeded its allocated sending limit.</p>\
              \ </li> <li> <p>ACCOUNT_DAILY_QUOTA_EXCEEDED: You have reached or exceeded\
              \ the maximum number of emails you can send from your account in a 24-hour\
              \ period.</p> </li> <li> <p>INVALID_SENDING_POOL_NAME: The configuration\
              \ set you specified refers to an IP pool that does not exist.</p> </li>\
              \ <li> <p>ACCOUNT_SENDING_PAUSED: Email sending for the Amazon SES account\
              \ was disabled using the <a href=\"https://docs.aws.amazon.com/ses/latest/APIReference/API_UpdateAccountSendingEnabled.html\"\
              >UpdateAccountSendingEnabled</a> operation.</p> </li> <li> <p>CONFIGURATION_SET_SENDING_PAUSED:\
              \ Email sending for this configuration set was disabled using the <a\
              \ href=\"https://docs.aws.amazon.com/ses/latest/APIReference/API_UpdateConfigurationSetSendingEnabled.html\"\
              >UpdateConfigurationSetSendingEnabled</a> operation.</p> </li> <li>\
              \ <p>INVALID_PARAMETER_VALUE: One or more of the parameters you specified\
              \ when calling this operation was invalid. See the error message for\
              \ additional information.</p> </li> <li> <p>TRANSIENT_FAILURE: Amazon\
              \ SES was unable to process your request because of a temporary issue.</p>\
              \ </li> <li> <p>FAILED: Amazon SES was unable to process your request.\
              \ See the error message for additional information.</p> </li> </ul>"
          title: Status
        Error:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: A description of an error that prevented a message being
              sent using the <code>SendBulkTemplatedEmail</code> operation.
          title: Error
        MessageId:
          allOf:
          - $ref: '#/components/schemas/OutboundMessageId'
          - description: The unique message identifier returned from the <code>SendBulkTemplatedEmail</code>
              operation.
          title: MessageId
      title: BulkEmailEntryResult
      type: object
    BulkEmailEntryResultList:
      description: A list of <code>BulkMailEntry</code> objects.
      items:
        $ref: '#/components/schemas/BulkEmailEntryResult'
      type: array
    CampaignId:
      type: string
    CaseId:
      type: string
    Charset:
      type: string
    CloudWatchDimensionConfigurations:
      items:
        $ref: '#/components/schemas/CloudWatchDimensionConfiguration'
      type: array
    DimensionName:
      description: "<p>The name of an Amazon CloudWatch dimension associated with\
        \ an email sending metric. The name has to meet the following criteria:</p>\
        \ <ul> <li> <p>It can only contain ASCII letters (a-z, A-Z), numbers (0-9),\
        \ underscores (_), or dashes (-).</p> </li> <li> <p>It can contain no more\
        \ than 256 characters.</p> </li> </ul>"
      type: string
    DimensionValueSource:
      description: "The location where the Amazon SES API v2 finds the value of a\
        \ dimension to publish to Amazon CloudWatch. To use the message tags that\
        \ you specify using an <code>X-SES-MESSAGE-TAGS</code> header or a parameter\
        \ to the <code>SendEmail</code> or <code>SendRawEmail</code> API, choose <code>messageTag</code>.\
        \ To use your own email headers, choose <code>emailHeader</code>. To use link\
        \ tags, choose <code>linkTags</code>."
      enum:
      - MESSAGE_TAG
      - EMAIL_HEADER
      - LINK_TAG
      title: DimensionValueSource
      type: string
    DefaultDimensionValue:
      description: "<p>The default value of the dimension that is published to Amazon\
        \ CloudWatch if you don't provide the value of the dimension when you send\
        \ an email. This value has to meet the following criteria:</p> <ul> <li> <p>It\
        \ can only contain ASCII letters (a–z, A–Z), numbers (0–9), underscores (_),\
        \ or dashes (-).</p> </li> <li> <p>It can contain no more than 256 characters.</p>\
        \ </li> </ul>"
      type: string
    CloudWatchDimensionConfiguration:
      description: An object that defines the dimension configuration to use when
        you send email events to Amazon CloudWatch.
      properties:
        DimensionName:
          allOf:
          - $ref: '#/components/schemas/DimensionName'
          - description: "<p>The name of an Amazon CloudWatch dimension associated\
              \ with an email sending metric. The name has to meet the following criteria:</p>\
              \ <ul> <li> <p>It can only contain ASCII letters (a–z, A–Z), numbers\
              \ (0–9), underscores (_), or dashes (-).</p> </li> <li> <p>It can contain\
              \ no more than 256 characters.</p> </li> </ul>"
          title: DimensionName
        DimensionValueSource:
          allOf:
          - $ref: '#/components/schemas/DimensionValueSource'
          - description: "The location where the Amazon SES API v2 finds the value\
              \ of a dimension to publish to Amazon CloudWatch. To use the message\
              \ tags that you specify using an <code>X-SES-MESSAGE-TAGS</code> header\
              \ or a parameter to the <code>SendEmail</code> or <code>SendRawEmail</code>\
              \ API, choose <code>messageTag</code>. To use your own email headers,\
              \ choose <code>emailHeader</code>. To use link tags, choose <code>linkTags</code>."
          title: DimensionValueSource
        DefaultDimensionValue:
          allOf:
          - $ref: '#/components/schemas/DefaultDimensionValue'
          - description: "<p>The default value of the dimension that is published\
              \ to Amazon CloudWatch if you don't provide the value of the dimension\
              \ when you send an email. This value has to meet the following criteria:</p>\
              \ <ul> <li> <p>Can only contain ASCII letters (a–z, A–Z), numbers (0–\
              9), underscores (_), or dashes (-), at signs (@), and periods (.).</p>\
              \ </li> <li> <p>It can contain no more than 256 characters.</p> </li>\
              \ </ul>"
          title: DefaultDimensionValue
      required:
      - DefaultDimensionValue
      - DimensionName
      - DimensionValueSource
      title: CloudWatchDimensionConfiguration
      type: object
    ConfigurationSetName:
      description: "<p>The name of a configuration set.</p> <p> <i>Configuration sets</i>\
        \ are groups of rules that you can apply to the emails you send. You apply\
        \ a configuration set to an email by including a reference to the configuration\
        \ set in the headers of the email. When you apply a configuration set to an\
        \ email, all of the rules in that configuration set are applied to the email.</p>"
      title: ConfigurationSetName
      type: string
    ConfigurationSetNameList:
      items:
        $ref: '#/components/schemas/ConfigurationSetName'
      type: array
    TopicPreferenceList:
      items:
        $ref: '#/components/schemas/TopicPreference'
      type: array
    UnsubscribeAll:
      type: boolean
    Contact:
      description: A contact is the end-user who is receiving the email.
      properties:
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The contact's email address.
          title: EmailAddress
        TopicPreferences:
          allOf:
          - $ref: '#/components/schemas/TopicPreferenceList'
          - description: The contact's preference for being opted-in to or opted-out
              of a topic.
          title: TopicPreferences
        TopicDefaultPreferences:
          allOf:
          - $ref: '#/components/schemas/TopicPreferenceList'
          - description: The default topic preferences applied to the contact.
          title: TopicDefaultPreferences
        UnsubscribeAll:
          allOf:
          - $ref: '#/components/schemas/UnsubscribeAll'
          - description: A boolean value status noting if the contact is unsubscribed
              from all contact list topics.
          title: UnsubscribeAll
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp noting the last time the contact's information
              was updated.
          title: LastUpdatedTimestamp
      title: Contact
      type: object
    ContactList:
      description: A list that contains contacts that have subscribed to a particular
        topic or topics.
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          - description: The name of the contact list.
          title: ContactListName
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp noting the last time the contact list was updated.
          title: LastUpdatedTimestamp
      title: ContactList
      type: object
    ContactListImportAction:
      enum:
      - DELETE
      - PUT
      title: ContactListImportAction
      type: string
    MessageData:
      type: string
    Counter:
      title: Counter
      type: integer
    EventDestinationName:
      description: "<p>The name of an event destination.</p> <p> <i>Events</i> include\
        \ message sends, deliveries, opens, clicks, bounces, and complaints. <i>Event\
        \ destinations</i> are places that you can send information about these events\
        \ to. For example, you can send event data to Amazon SNS to receive notifications\
        \ when you receive bounces or complaints, or you can use Amazon Kinesis Data\
        \ Firehose to stream data to Amazon S3 for long-term storage.</p>"
      type: string
    EventDestinationDefinition:
      description: "An object that defines the event destination. Specifically, it\
        \ defines which services receive events from emails sent using the configuration\
        \ set that the event destination is associated with. Also defines the types\
        \ of events that are sent to the event destination."
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>If <code>true</code>, the event destination is enabled.\
              \ When the event destination is enabled, the specified event types are\
              \ sent to the destinations in this <code>EventDestinationDefinition</code>.</p>\
              \ <p>If <code>false</code>, the event destination is disabled. When\
              \ the event destination is disabled, events aren't sent to the specified\
              \ destinations.</p>"
          title: Enabled
        MatchingEventTypes:
          allOf:
          - $ref: '#/components/schemas/EventTypes'
          - description: An array that specifies which events the Amazon SES API v2
              should send to the destinations in this <code>EventDestinationDefinition</code>.
          title: MatchingEventTypes
        KinesisFirehoseDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_KinesisFirehoseDestination'
        CloudWatchDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_CloudWatchDestination'
        SnsDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_SnsDestination'
        PinpointDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_PinpointDestination'
      title: EventDestinationDefinition
      type: object
    CreateConfigurationSetEventDestinationRequest:
      description: A request to add an event destination to a configuration set.
      example:
        EventDestinationName: ""
        EventDestination:
          SnsDestination:
            TopicArn: ""
          CloudWatchDestination:
            DimensionConfigurations: ""
          Enabled: ""
          MatchingEventTypes: ""
          PinpointDestination:
            ApplicationArn: ""
          KinesisFirehoseDestination:
            DeliveryStreamArn: ""
            IamRoleArn: ""
      properties:
        EventDestinationName:
          allOf:
          - $ref: '#/components/schemas/EventDestinationName'
          - description: A name that identifies the event destination within the configuration
              set.
        EventDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestinationRequest_EventDestination'
      required:
      - EventDestination
      - EventDestinationName
      title: CreateConfigurationSetEventDestinationRequest
      type: object
    TrackingOptions:
      description: "<p>An object that defines the tracking options for a configuration\
        \ set. When you use the Amazon SES API v2 to send an email, it contains an\
        \ invisible image that's used to track when recipients open your email. If\
        \ your email contains links, those links are changed slightly in order to\
        \ track when recipients click them.</p> <p>These images and links include\
        \ references to a domain operated by Amazon Web Services. You can optionally\
        \ configure the Amazon SES to use a domain that you operate for these images\
        \ and links.</p>"
      properties:
        CustomRedirectDomain:
          allOf:
          - $ref: '#/components/schemas/CustomRedirectDomain'
          - description: The domain to use for tracking open and click events.
          title: CustomRedirectDomain
      required:
      - CustomRedirectDomain
      title: TrackingOptions
      type: object
    DeliveryOptions:
      description: Used to associate a configuration set with a dedicated IP pool.
      properties:
        TlsPolicy:
          allOf:
          - $ref: '#/components/schemas/TlsPolicy'
          - description: "Specifies whether messages that use the configuration set\
              \ are required to use Transport Layer Security (TLS). If the value is\
              \ <code>Require</code>, messages are only delivered if a TLS connection\
              \ can be established. If the value is <code>Optional</code>, messages\
              \ can be delivered in plain text if a TLS connection can't be established."
          title: TlsPolicy
        SendingPoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          - description: The name of the dedicated IP pool to associate with the configuration
              set.
          title: SendingPoolName
      title: DeliveryOptions
      type: object
    ReputationOptions:
      description: 'Enable or disable collection of reputation metrics for emails
        that you send using this configuration set in the current Amazon Web Services
        Region. '
      properties:
        ReputationMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "If <code>true</code>, tracking of reputation metrics is\
              \ enabled for the configuration set. If <code>false</code>, tracking\
              \ of reputation metrics is disabled for the configuration set."
          title: ReputationMetricsEnabled
        LastFreshStart:
          allOf:
          - $ref: '#/components/schemas/LastFreshStart'
          - description: "The date and time (in Unix time) when the reputation metrics\
              \ were last given a fresh start. When your account is given a fresh\
              \ start, your reputation metrics are calculated starting from the date\
              \ of the fresh start."
          title: LastFreshStart
      title: ReputationOptions
      type: object
    SendingOptions:
      description: Used to enable or disable email sending for messages that use this
        configuration set in the current Amazon Web Services Region.
      properties:
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "If <code>true</code>, email sending is enabled for the configuration\
              \ set. If <code>false</code>, email sending is disabled for the configuration\
              \ set."
          title: SendingEnabled
      title: SendingOptions
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    SuppressionOptions:
      description: An object that contains information about the suppression list
        preferences for your account.
      example:
        SuppressedReasons: ""
      properties:
        SuppressedReasons:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReasons'
          - description: <p>A list that contains the reasons that email addresses
              are automatically added to the suppression list for your account. This
              list can contain any or all of the following:</p> <ul> <li> <p> <code>COMPLAINT</code>
              – Amazon SES adds an email address to the suppression list for your
              account when a message sent to that address results in a complaint.</p>
              </li> <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address
              to the suppression list for your account when a message sent to that
              address results in a hard bounce.</p> </li> </ul>
          title: SuppressedReasons
      title: SuppressionOptions
      type: object
    VdmOptions:
      description: An object that defines the VDM settings that apply to emails that
        you send using the configuration set.
      properties:
        DashboardOptions:
          $ref: '#/components/schemas/CreateConfigurationSet_request_VdmOptions_DashboardOptions'
        GuardianOptions:
          $ref: '#/components/schemas/CreateConfigurationSet_request_VdmOptions_GuardianOptions'
      title: VdmOptions
      type: object
    CreateConfigurationSetRequest:
      description: A request to create a configuration set.
      example:
        SendingOptions:
          SendingEnabled: ""
        SuppressionOptions:
          SuppressedReasons: ""
        TrackingOptions:
          CustomRedirectDomain: ""
        ConfigurationSetName: ""
        ReputationOptions:
          LastFreshStart: ""
          ReputationMetricsEnabled: ""
        VdmOptions:
          DashboardOptions:
            EngagementMetrics: ""
          GuardianOptions:
            OptimizedSharedDelivery: ""
        DeliveryOptions:
          SendingPoolName: ""
          TlsPolicy: ""
        Tags: ""
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          - description: "The name of the configuration set. The name can contain\
              \ up to 64 alphanumeric characters, including letters, numbers, hyphens\
              \ (-) and underscores (_) only."
        TrackingOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_TrackingOptions'
        DeliveryOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_DeliveryOptions'
        ReputationOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_ReputationOptions'
        SendingOptions:
          $ref: '#/components/schemas/GetConfigurationSetResponse_SendingOptions'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An array of objects that define the tags (keys and values)
              to associate with the configuration set.
        SuppressionOptions:
          $ref: '#/components/schemas/SuppressionOptions'
        VdmOptions:
          $ref: '#/components/schemas/CreateConfigurationSetRequest_VdmOptions'
      required:
      - ConfigurationSetName
      title: CreateConfigurationSetRequest
      type: object
    Topics:
      items:
        $ref: '#/components/schemas/Topic'
      type: array
    Description:
      type: string
    CreateContactListRequest:
      example:
        Topics: ""
        Description: ""
        ContactListName: ""
        Tags: ""
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          - description: The name of the contact list.
        Topics:
          allOf:
          - $ref: '#/components/schemas/Topics'
          - description: "An interest group, theme, or label within a list. A contact\
              \ list can have multiple topics."
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of what the contact list is about.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags associated with a contact list.
      required:
      - ContactListName
      title: CreateContactListRequest
      type: object
    CreateContactRequest:
      example:
        AttributesData: ""
        TopicPreferences: ""
        UnsubscribeAll: ""
        EmailAddress: ""
      properties:
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The contact's email address.
        TopicPreferences:
          allOf:
          - $ref: '#/components/schemas/TopicPreferenceList'
          - description: The contact's preferences for being opted-in to or opted-out
              of topics.
        UnsubscribeAll:
          allOf:
          - $ref: '#/components/schemas/UnsubscribeAll'
          - description: A boolean value status noting if the contact is unsubscribed
              from all contact list topics.
        AttributesData:
          allOf:
          - $ref: '#/components/schemas/AttributesData'
          - description: The attribute data attached to a contact.
      required:
      - EmailAddress
      title: CreateContactRequest
      type: object
    EmailTemplateName:
      description: The name of the template. You will refer to this name when you
        send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code>
        operations.
      minLength: 1
      type: string
    TemplateContent:
      description: The content of the custom verification email template.
      type: string
    SuccessRedirectionURL:
      description: The URL that the recipient of the verification email is sent to
        if his or her address is successfully verified.
      type: string
    FailureRedirectionURL:
      description: The URL that the recipient of the verification email is sent to
        if his or her address is not successfully verified.
      type: string
    CreateCustomVerificationEmailTemplateRequest:
      description: Represents a request to create a custom verification email template.
      example:
        FromEmailAddress: ""
        TemplateContent: ""
        SuccessRedirectionURL: ""
        TemplateName: ""
        FailureRedirectionURL: ""
        TemplateSubject: ""
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          - description: The name of the custom verification email template.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email address that the custom verification email is sent
              from.
        TemplateSubject:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateSubject'
          - description: The subject line of the custom verification email.
        TemplateContent:
          allOf:
          - $ref: '#/components/schemas/TemplateContent'
          - description: "The content of the custom verification email. The total\
              \ size of the email must be less than 10 MB. The message body may contain\
              \ HTML, with some limitations. For more information, see <a href=\"\
              https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom-faq\"\
              >Custom verification email frequently asked questions</a> in the <i>Amazon\
              \ SES Developer Guide</i>."
        SuccessRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/SuccessRedirectionURL'
          - description: The URL that the recipient of the verification email is sent
              to if his or her address is successfully verified.
        FailureRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/FailureRedirectionURL'
          - description: The URL that the recipient of the verification email is sent
              to if his or her address is not successfully verified.
      required:
      - FailureRedirectionURL
      - FromEmailAddress
      - SuccessRedirectionURL
      - TemplateContent
      - TemplateName
      - TemplateSubject
      title: CreateCustomVerificationEmailTemplateRequest
      type: object
    ScalingMode:
      enum:
      - STANDARD
      - MANAGED
      title: ScalingMode
      type: string
    CreateDedicatedIpPoolRequest:
      description: A request to create a new dedicated IP pool.
      example:
        PoolName: ""
        ScalingMode: ""
        Tags: ""
      properties:
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          - description: The name of the dedicated IP pool.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An object that defines the tags (keys and values) that you
              want to associate with the pool.
        ScalingMode:
          allOf:
          - $ref: '#/components/schemas/ScalingMode'
          - description: The type of scaling mode.
      required:
      - PoolName
      title: CreateDedicatedIpPoolRequest
      type: object
    ReportName:
      description: A name that helps you identify a report generated by the Deliverability
        dashboard.
      type: string
    EmailContent:
      description: "An object that defines the entire content of the email, including\
        \ the message headers and the body content. You can create a simple email\
        \ message, in which you specify the subject and the text and HTML versions\
        \ of the message body. You can also create raw messages, in which you specify\
        \ a complete MIME-formatted message. Raw messages can include attachments\
        \ and custom headers."
      properties:
        Simple:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content_Simple'
        Raw:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content_Raw'
        Template:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content_Template'
      title: EmailContent
      type: object
    CreateDeliverabilityTestReportRequest:
      description: "A request to perform a predictive inbox placement test. Predictive\
        \ inbox placement tests can help you predict how your messages will be handled\
        \ by various email providers around the world. When you perform a predictive\
        \ inbox placement test, you provide a sample message that contains the content\
        \ that you plan to send to your customers. We send that message to special\
        \ email addresses spread across several major email providers around the world.\
        \ The test takes about 24 hours to complete. When the test is complete, you\
        \ can use the <code>GetDeliverabilityTestReport</code> operation to view the\
        \ results of the test."
      example:
        FromEmailAddress: ""
        ReportName: ""
        Content:
          Raw:
            Data: ""
          Simple:
            Body:
              Html:
                Charset: ""
                Data: ""
              Text:
                Charset: ""
                Data: ""
            Subject:
              Charset: ""
              Data: ""
          Template:
            TemplateArn: ""
            TemplateData: ""
            TemplateName: ""
        Tags: ""
      properties:
        ReportName:
          allOf:
          - $ref: '#/components/schemas/ReportName'
          - description: A unique name that helps you to identify the predictive inbox
              placement test when you retrieve the results.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email address that the predictive inbox placement test
              email was sent from.
        Content:
          $ref: '#/components/schemas/CreateDeliverabilityTestReportRequest_Content'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An array of objects that define the tags (keys and values)
              that you want to associate with the predictive inbox placement test.
      required:
      - Content
      - FromEmailAddress
      title: CreateDeliverabilityTestReportRequest
      type: object
    ReportId:
      description: A unique string that identifies a Deliverability dashboard report.
      type: string
    DeliverabilityTestStatus:
      description: "The status of a predictive inbox placement test. If the status\
        \ is <code>IN_PROGRESS</code>, then the predictive inbox placement test is\
        \ currently running. Predictive inbox placement tests are usually complete\
        \ within 24 hours of creating the test. If the status is <code>COMPLETE</code>,\
        \ then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code>\
        \ operation to view the results of the test."
      enum:
      - IN_PROGRESS
      - COMPLETED
      title: DeliverabilityTestStatus
      type: string
    Identity:
      minLength: 1
      type: string
    PolicyName:
      description: "<p>The name of the policy.</p> <p>The policy name cannot exceed\
        \ 64 characters and can only include alphanumeric characters, dashes, and\
        \ underscores.</p>"
      maxLength: 64
      minLength: 1
      type: string
    Policy:
      description: "<p>The text of the policy in JSON format. The policy cannot exceed\
        \ 4 KB.</p> <p>For information about the syntax of sending authorization policies,\
        \ see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\"\
        >Amazon SES Developer Guide</a>.</p>"
      minLength: 1
      title: Policy
      type: string
    CreateEmailIdentityPolicyRequest:
      description: "Represents a request to create a sending authorization policy\
        \ for an identity. Sending authorization is an Amazon SES feature that enables\
        \ you to authorize other senders to use your identities. For information,\
        \ see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-identity-owner-tasks-management.html\"\
        >Amazon SES Developer Guide</a>."
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: "<p>The text of the policy in JSON format. The policy cannot\
              \ exceed 4 KB.</p> <p>For information about the syntax of sending authorization\
              \ policies, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html\"\
              >Amazon SES Developer Guide</a>.</p>"
      required:
      - Policy
      title: CreateEmailIdentityPolicyRequest
      type: object
    DkimSigningAttributes:
      description: "An object that contains configuration for Bring Your Own DKIM\
        \ (BYODKIM), or, for Easy DKIM"
      properties:
        DomainSigningSelector:
          allOf:
          - $ref: '#/components/schemas/Selector'
          - description: "[Bring Your Own DKIM] A string that's used to identify a\
              \ public key in the DNS configuration for a domain."
          title: DomainSigningSelector
        DomainSigningPrivateKey:
          allOf:
          - $ref: '#/components/schemas/PrivateKey'
          - description: "<p>[Bring Your Own DKIM] A private key that's used to generate\
              \ a DKIM signature.</p> <p>The private key must use 1024 or 2048-bit\
              \ RSA encryption, and must be encoded using base64 encoding.</p>"
          title: DomainSigningPrivateKey
        NextSigningKeyLength:
          allOf:
          - $ref: '#/components/schemas/DkimSigningKeyLength'
          - description: "[Easy DKIM] The key length of the future DKIM key pair to\
              \ be generated. This can be changed at most once per day."
          title: NextSigningKeyLength
      title: DkimSigningAttributes
      type: object
    CreateEmailIdentityRequest:
      description: A request to begin the verification process for an email identity
        (an email address or domain).
      example:
        EmailIdentity: ""
        DkimSigningAttributes:
          DomainSigningPrivateKey: ""
          DomainSigningSelector: ""
          NextSigningKeyLength: ""
        ConfigurationSetName: ""
        Tags: ""
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          - description: The email address or domain to verify.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: An array of objects that define the tags (keys and values)
              to associate with the email identity.
        DkimSigningAttributes:
          $ref: '#/components/schemas/CreateEmailIdentityRequest_DkimSigningAttributes'
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          - description: 'The configuration set to use by default when sending from
              this identity. Note that any configuration set defined in the email
              sending request takes precedence. '
      required:
      - EmailIdentity
      title: CreateEmailIdentityRequest
      type: object
    IdentityType:
      enum:
      - EMAIL_ADDRESS
      - DOMAIN
      - MANAGED_DOMAIN
      title: IdentityType
      type: string
    DkimAttributes:
      description: "<p>An object that contains information about the DKIM authentication\
        \ status for an email identity.</p> <p>Amazon SES determines the authentication\
        \ status by searching for specific records in the DNS configuration for the\
        \ domain. If you used <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\"\
        >Easy DKIM</a> to set up DKIM authentication, Amazon SES tries to find three\
        \ unique CNAME records in the DNS configuration for your domain. If you provided\
        \ a public key to perform DKIM authentication, Amazon SES tries to find a\
        \ TXT record that uses the selector that you specified. The value of the TXT\
        \ record must be a public key that's paired with the private key that you\
        \ specified in the process of creating the identity</p>"
      properties:
        SigningEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "If the value is <code>true</code>, then the messages that\
              \ you send from the identity are signed using DKIM. If the value is\
              \ <code>false</code>, then the messages that you send from the identity\
              \ aren't DKIM-signed."
          title: SigningEnabled
        Status:
          allOf:
          - $ref: '#/components/schemas/DkimStatus'
          - description: "<p>Describes whether or not Amazon SES has successfully\
              \ located the DKIM records in the DNS records for the domain. The status\
              \ can be one of the following:</p> <ul> <li> <p> <code>PENDING</code>\
              \ – The verification process was initiated, but Amazon SES hasn't yet\
              \ detected the DKIM records in the DNS configuration for the domain.</p>\
              \ </li> <li> <p> <code>SUCCESS</code> – The verification process completed\
              \ successfully.</p> </li> <li> <p> <code>FAILED</code> – The verification\
              \ process failed. This typically occurs when Amazon SES fails to find\
              \ the DKIM records in the DNS configuration of the domain.</p> </li>\
              \ <li> <p> <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing\
              \ Amazon SES from determining the DKIM authentication status of the\
              \ domain.</p> </li> <li> <p> <code>NOT_STARTED</code> – The DKIM verification\
              \ process hasn't been initiated for the domain.</p> </li> </ul>"
          title: Status
        Tokens:
          allOf:
          - $ref: '#/components/schemas/DnsTokenList'
          - description: "<p>If you used <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\"\
              >Easy DKIM</a> to configure DKIM authentication for the domain, then\
              \ this object contains a set of unique strings that you use to create\
              \ a set of CNAME records that you add to the DNS configuration for your\
              \ domain. When Amazon SES detects these records in the DNS configuration\
              \ for your domain, the DKIM authentication process is complete.</p>\
              \ <p>If you configured DKIM authentication for the domain by providing\
              \ your own public-private key pair, then this object contains the selector\
              \ for the public key.</p> <p>Regardless of the DKIM authentication method\
              \ you use, Amazon SES searches for the appropriate records in the DNS\
              \ configuration of the domain for up to 72 hours.</p>"
          title: Tokens
        SigningAttributesOrigin:
          allOf:
          - $ref: '#/components/schemas/DkimSigningAttributesOrigin'
          - description: <p>A string that indicates how DKIM was configured for the
              identity. These are the possible values:</p> <ul> <li> <p> <code>AWS_SES</code>
              – Indicates that DKIM was configured for the identity by using <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy
              DKIM</a>.</p> </li> <li> <p> <code>EXTERNAL</code> – Indicates that
              DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).</p>
              </li> </ul>
          title: SigningAttributesOrigin
        NextSigningKeyLength:
          allOf:
          - $ref: '#/components/schemas/DkimSigningKeyLength'
          - description: "[Easy DKIM] The key length of the future DKIM key pair to\
              \ be generated. This can be changed at most once per day."
          title: NextSigningKeyLength
        CurrentSigningKeyLength:
          allOf:
          - $ref: '#/components/schemas/DkimSigningKeyLength'
          - description: "[Easy DKIM] The key length of the DKIM key pair in use."
          title: CurrentSigningKeyLength
        LastKeyGenerationTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "[Easy DKIM] The last time a key pair was generated for this\
              \ identity."
          title: LastKeyGenerationTimestamp
      title: DkimAttributes
      type: object
    EmailTemplateContent:
      description: "The content of the email, composed of a subject line, an HTML\
        \ part, and a text-only part."
      properties:
        Subject:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateSubject'
          - description: The subject line of the email.
          title: Subject
        Text:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateText'
          - description: The email body that will be visible to recipients whose email
              clients do not display HTML.
          title: Text
        Html:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateHtml'
          - description: The HTML body of the email.
          title: Html
      title: EmailTemplateContent
      type: object
    CreateEmailTemplateRequest:
      description: "Represents a request to create an email template. For more information,\
        \ see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html\"\
        >Amazon SES Developer Guide</a>."
      example:
        TemplateContent:
          Html: ""
          Text: ""
          Subject: ""
        TemplateName: ""
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          - description: The name of the template.
        TemplateContent:
          $ref: '#/components/schemas/GetEmailTemplateResponse_TemplateContent'
      required:
      - TemplateContent
      - TemplateName
      title: CreateEmailTemplateRequest
      type: object
    ImportDestination:
      description: An object that contains details about the resource destination
        the import job is going to target.
      properties:
        SuppressionListDestination:
          $ref: '#/components/schemas/CreateImportJob_request_ImportDestination_SuppressionListDestination'
        ContactListDestination:
          $ref: '#/components/schemas/CreateImportJob_request_ImportDestination_ContactListDestination'
      title: ImportDestination
      type: object
    ImportDataSource:
      description: An object that contains details about the data source of the import
        job.
      properties:
        S3Url:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: An Amazon S3 URL in the format s3://<i>&lt;bucket_name&gt;</i>/<i>&lt;object&gt;</i>.
          title: S3Url
        DataFormat:
          allOf:
          - $ref: '#/components/schemas/DataFormat'
          - description: The data format of the import job's data source.
          title: DataFormat
      required:
      - DataFormat
      - S3Url
      title: ImportDataSource
      type: object
    CreateImportJobRequest:
      description: Represents a request to create an import job from a data source
        for a data destination.
      example:
        ImportDestination:
          SuppressionListDestination:
            SuppressionListImportAction: ""
          ContactListDestination:
            ContactListName: ""
            ContactListImportAction: ""
        ImportDataSource:
          S3Url: ""
          DataFormat: ""
      properties:
        ImportDestination:
          $ref: '#/components/schemas/CreateImportJobRequest_ImportDestination'
        ImportDataSource:
          $ref: '#/components/schemas/CreateImportJobRequest_ImportDataSource'
      required:
      - ImportDataSource
      - ImportDestination
      title: CreateImportJobRequest
      type: object
    JobId:
      description: A string that represents the import job ID.
      minLength: 1
      title: JobId
      type: string
    CustomVerificationEmailTemplateMetadata:
      description: Contains information about a custom verification email template.
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          - description: The name of the custom verification email template.
          title: TemplateName
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email address that the custom verification email is sent
              from.
          title: FromEmailAddress
        TemplateSubject:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateSubject'
          - description: The subject line of the custom verification email.
          title: TemplateSubject
        SuccessRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/SuccessRedirectionURL'
          - description: The URL that the recipient of the verification email is sent
              to if his or her address is successfully verified.
          title: SuccessRedirectionURL
        FailureRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/FailureRedirectionURL'
          - description: The URL that the recipient of the verification email is sent
              to if his or her address is not successfully verified.
          title: FailureRedirectionURL
      title: CustomVerificationEmailTemplateMetadata
      type: object
    CustomVerificationEmailTemplatesList:
      description: A list of the custom verification email templates that exist in
        your account.
      items:
        $ref: '#/components/schemas/CustomVerificationEmailTemplateMetadata'
      type: array
    VolumeStatistics:
      description: An object that contains information about the amount of email that
        was delivered to recipients.
      properties:
        InboxRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: The total number of emails that arrived in recipients' inboxes.
          title: InboxRawCount
        SpamRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: The total number of emails that arrived in recipients' spam
              or junk mail folders.
          title: SpamRawCount
        ProjectedInbox:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: An estimate of the percentage of emails sent from the current
              domain that will arrive in recipients' inboxes.
          title: ProjectedInbox
        ProjectedSpam:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: An estimate of the percentage of emails sent from the current
              domain that will arrive in recipients' spam or junk mail folders.
          title: ProjectedSpam
      title: VolumeStatistics
      type: object
    DomainIspPlacements:
      items:
        $ref: '#/components/schemas/DomainIspPlacement'
      type: array
    DailyVolume:
      description: An object that contains information about the volume of email sent
        on each day of the analysis period.
      properties:
        StartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date that the DailyVolume metrics apply to, in Unix\
              \ time."
          title: StartDate
        VolumeStatistics:
          $ref: '#/components/schemas/DailyVolume_VolumeStatistics'
        DomainIspPlacements:
          allOf:
          - $ref: '#/components/schemas/DomainIspPlacements'
          - description: "An object that contains inbox placement metrics for a specified\
              \ day in the analysis period, broken out by the recipient's email provider."
          title: DomainIspPlacements
      title: DailyVolume
      type: object
    DailyVolumes:
      items:
        $ref: '#/components/schemas/DailyVolume'
      type: array
    Ip:
      description: An IPv4 address.
      title: Ip
      type: string
    WarmupStatus:
      description: The warmup status of a dedicated IP.
      enum:
      - IN_PROGRESS
      - DONE
      title: WarmupStatus
      type: string
    Percentage100Wrapper:
      type: integer
    DedicatedIp:
      description: "<p>Contains information about a dedicated IP address that is associated\
        \ with your Amazon SES account.</p> <p>To learn more about requesting dedicated\
        \ IP addresses, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/dedicated-ip-case.html\"\
        >Requesting and Relinquishing Dedicated IP Addresses</a> in the <i>Amazon\
        \ SES Developer Guide</i>.</p>"
      properties:
        Ip:
          allOf:
          - $ref: '#/components/schemas/Ip'
          - description: An IPv4 address.
          title: Ip
        WarmupStatus:
          allOf:
          - $ref: '#/components/schemas/WarmupStatus'
          - description: "<p>The warm-up status of a dedicated IP address. The status\
              \ can have one of the following values:</p> <ul> <li> <p> <code>IN_PROGRESS</code>\
              \ – The IP address isn't ready to use because the dedicated IP warm-up\
              \ process is ongoing.</p> </li> <li> <p> <code>DONE</code> – The dedicated\
              \ IP warm-up process is complete, and the IP address is ready to use.</p>\
              \ </li> </ul>"
          title: WarmupStatus
        WarmupPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage100Wrapper'
          - description: "Indicates how complete the dedicated IP warm-up process\
              \ is. When this value equals 1, the address has completed the warm-up\
              \ process and is ready for use."
          title: WarmupPercentage
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          - description: The name of the dedicated IP pool that the IP address is
              associated with.
          title: PoolName
      required:
      - Ip
      - WarmupPercentage
      - WarmupStatus
      title: DedicatedIp
      type: object
    DedicatedIpList:
      description: A list of dedicated IP addresses that are associated with your
        Amazon Web Services account.
      items:
        $ref: '#/components/schemas/DedicatedIp'
      type: array
    DedicatedIpPool:
      description: Contains information about a dedicated IP pool.
      properties:
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          - description: The name of the dedicated IP pool.
          title: PoolName
        ScalingMode:
          allOf:
          - $ref: '#/components/schemas/ScalingMode'
          - description: <p>The type of the dedicated IP pool.</p> <ul> <li> <p> <code>STANDARD</code>
              – A dedicated IP pool where you can control which IPs are part of the
              pool.</p> </li> <li> <p> <code>MANAGED</code> – A dedicated IP pool
              where the reputation and number of IPs are automatically managed by
              Amazon SES.</p> </li> </ul>
          title: ScalingMode
      required:
      - PoolName
      - ScalingMode
      title: DedicatedIpPool
      type: object
    DeleteConfigurationSetEventDestinationRequest:
      description: A request to delete an event destination from a configuration set.
      properties: {}
      title: DeleteConfigurationSetEventDestinationRequest
      type: object
    DeleteConfigurationSetRequest:
      description: A request to delete a configuration set.
      properties: {}
      title: DeleteConfigurationSetRequest
      type: object
    DeleteContactListRequest:
      properties: {}
      title: DeleteContactListRequest
      type: object
    DeleteContactRequest:
      properties: {}
      title: DeleteContactRequest
      type: object
    DeleteCustomVerificationEmailTemplateRequest:
      description: Represents a request to delete an existing custom verification
        email template.
      properties: {}
      title: DeleteCustomVerificationEmailTemplateRequest
      type: object
    DeleteDedicatedIpPoolRequest:
      description: A request to delete a dedicated IP pool.
      properties: {}
      title: DeleteDedicatedIpPoolRequest
      type: object
    DeleteEmailIdentityPolicyRequest:
      description: "Represents a request to delete a sending authorization policy\
        \ for an identity. Sending authorization is an Amazon SES feature that enables\
        \ you to authorize other senders to use your identities. For information,\
        \ see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-identity-owner-tasks-management.html\"\
        >Amazon SES Developer Guide</a>."
      properties: {}
      title: DeleteEmailIdentityPolicyRequest
      type: object
    DeleteEmailIdentityRequest:
      description: "A request to delete an existing email identity. When you delete\
        \ an identity, you lose the ability to send email from that identity. You\
        \ can restore your ability to send email by completing the verification process\
        \ for the identity again."
      properties: {}
      title: DeleteEmailIdentityRequest
      type: object
    DeleteEmailTemplateRequest:
      description: "Represents a request to delete an email template. For more information,\
        \ see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html\"\
        >Amazon SES Developer Guide</a>."
      properties: {}
      title: DeleteEmailTemplateRequest
      type: object
    DeleteSuppressedDestinationRequest:
      description: A request to remove an email address from the suppression list
        for your account.
      properties: {}
      title: DeleteSuppressedDestinationRequest
      type: object
    DeliverabilityDashboardAccountStatus:
      description: "The current status of your Deliverability dashboard subscription.\
        \ If this value is <code>PENDING_EXPIRATION</code>, your subscription is scheduled\
        \ to expire at the end of the current calendar month."
      enum:
      - ACTIVE
      - PENDING_EXPIRATION
      - DISABLED
      title: DeliverabilityDashboardAccountStatus
      type: string
    DeliverabilityTestSubject:
      description: The subject line for an email that you submitted in a predictive
        inbox placement test.
      type: string
    DeliverabilityTestReport:
      description: An object that contains metadata related to a predictive inbox
        placement test.
      properties:
        ReportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          - description: A unique string that identifies the predictive inbox placement
              test.
          title: ReportId
        ReportName:
          allOf:
          - $ref: '#/components/schemas/ReportName'
          - description: A name that helps you identify a predictive inbox placement
              test report.
          title: ReportName
        Subject:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestSubject'
          - description: The subject line for an email that you submitted in a predictive
              inbox placement test.
          title: Subject
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The sender address that you specified for the predictive
              inbox placement test.
          title: FromEmailAddress
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the predictive inbox placement test
              was created.
          title: CreateDate
        DeliverabilityTestStatus:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestStatus'
          - description: "The status of the predictive inbox placement test. If the\
              \ status is <code>IN_PROGRESS</code>, then the predictive inbox placement\
              \ test is currently running. Predictive inbox placement tests are usually\
              \ complete within 24 hours of creating the test. If the status is <code>COMPLETE</code>,\
              \ then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code>\
              \ to view the results of the test."
          title: DeliverabilityTestStatus
      title: DeliverabilityTestReport
      type: object
    DeliverabilityTestReports:
      items:
        $ref: '#/components/schemas/DeliverabilityTestReport'
      type: array
    MetricDimensionValue:
      title: MetricDimensionValue
      type: string
    DisplayName:
      type: string
    DkimStatus:
      description: "<p>The DKIM authentication status of the identity. The status\
        \ can be one of the following:</p> <ul> <li> <p> <code>PENDING</code> – The\
        \ verification process was initiated, but Amazon SES hasn't yet detected the\
        \ DKIM records in the DNS configuration for the domain.</p> </li> <li> <p>\
        \ <code>SUCCESS</code> – The verification process completed successfully.</p>\
        \ </li> <li> <p> <code>FAILED</code> – The verification process failed. This\
        \ typically occurs when Amazon SES fails to find the DKIM records in the DNS\
        \ configuration of the domain.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code>\
        \ – A temporary issue is preventing Amazon SES from determining the DKIM authentication\
        \ status of the domain.</p> </li> <li> <p> <code>NOT_STARTED</code> – The\
        \ DKIM verification process hasn't been initiated for the domain.</p> </li>\
        \ </ul>"
      enum:
      - PENDING
      - SUCCESS
      - FAILED
      - TEMPORARY_FAILURE
      - NOT_STARTED
      title: DkimStatus
      type: string
    DnsTokenList:
      items:
        $ref: '#/components/schemas/DnsToken'
      type: array
    DkimSigningAttributesOrigin:
      enum:
      - AWS_SES
      - EXTERNAL
      title: DkimSigningAttributesOrigin
      type: string
    DnsToken:
      title: DnsToken
      type: string
    Domain:
      type: string
    ImageUrl:
      type: string
    Subject:
      type: string
    IpList:
      items:
        $ref: '#/components/schemas/Ip'
      type: array
    Volume:
      description: An object that contains information about inbox placement volume.
      type: integer
    Percentage:
      description: An object that contains information about inbox placement percentages.
      format: double
      type: number
    Esps:
      items:
        $ref: '#/components/schemas/Esp'
      type: array
    DomainDeliverabilityCampaign:
      description: An object that contains the deliverability data for a specific
        campaign. This data is available for a campaign only if the campaign sent
        email by using a domain that the Deliverability dashboard is enabled for (<code>PutDeliverabilityDashboardOption</code>
        operation).
      properties:
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/CampaignId'
          - description: The unique identifier for the campaign. The Deliverability
              dashboard automatically generates and assigns this identifier to a campaign.
          title: CampaignId
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/ImageUrl'
          - description: The URL of an image that contains a snapshot of the email
              message that was sent.
          title: ImageUrl
        Subject:
          allOf:
          - $ref: '#/components/schemas/Subject'
          - description: "The subject line, or title, of the email message."
          title: Subject
        FromAddress:
          allOf:
          - $ref: '#/components/schemas/Identity'
          - description: The verified email address that the email message was sent
              from.
          title: FromAddress
        SendingIps:
          allOf:
          - $ref: '#/components/schemas/IpList'
          - description: The IP addresses that were used to send the email message.
          title: SendingIps
        FirstSeenDateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The first time when the email message was delivered to any
              recipient's inbox. This value can help you determine how long it took
              for a campaign to deliver an email message.
          title: FirstSeenDateTime
        LastSeenDateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time when the email message was delivered to any
              recipient's inbox. This value can help you determine how long it took
              for a campaign to deliver an email message.
          title: LastSeenDateTime
        InboxCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: The number of email messages that were delivered to recipients’
              inboxes.
          title: InboxCount
        SpamCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: The number of email messages that were delivered to recipients'
              spam or junk mail folders.
          title: SpamCount
        ReadRate:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: "The percentage of email messages that were opened by recipients.\
              \ Due to technical limitations, this value only includes recipients\
              \ who opened the message by using an email client that supports images."
          title: ReadRate
        DeleteRate:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: "The percentage of email messages that were deleted by recipients,\
              \ without being opened first. Due to technical limitations, this value\
              \ only includes recipients who opened the message by using an email\
              \ client that supports images."
          title: DeleteRate
        ReadDeleteRate:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: "The percentage of email messages that were opened and then\
              \ deleted by recipients. Due to technical limitations, this value only\
              \ includes recipients who opened the message by using an email client\
              \ that supports images."
          title: ReadDeleteRate
        ProjectedVolume:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: The projected number of recipients that the email message
              was sent to.
          title: ProjectedVolume
        Esps:
          allOf:
          - $ref: '#/components/schemas/Esps'
          - description: The major email providers who handled the email message.
          title: Esps
      title: DomainDeliverabilityCampaign
      type: object
    DomainDeliverabilityCampaignList:
      description: <p/>
      items:
        $ref: '#/components/schemas/DomainDeliverabilityCampaign'
      type: array
    InboxPlacementTrackingOption:
      description: An object that contains information about the inbox placement data
        settings for a verified domain that’s associated with your Amazon Web Services
        account. This data is available only if you enabled the Deliverability dashboard
        for the domain.
      properties:
        Global:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: Specifies whether inbox placement data is being tracked for
              the domain.
          title: Global
        TrackedIsps:
          allOf:
          - $ref: '#/components/schemas/IspNameList'
          - description: "An array of strings, one for each major email provider that\
              \ the inbox placement data applies to."
          title: TrackedIsps
      title: InboxPlacementTrackingOption
      type: object
    DomainDeliverabilityTrackingOptions:
      description: "An object that contains information about the Deliverability dashboard\
        \ subscription for a verified domain that you use to send email and currently\
        \ has an active Deliverability dashboard subscription. If a Deliverability\
        \ dashboard subscription is active for a domain, you gain access to reputation,\
        \ inbox placement, and other metrics for the domain."
      items:
        $ref: '#/components/schemas/DomainDeliverabilityTrackingOption'
      type: array
    IspName:
      description: The name of an email provider.
      title: IspName
      type: string
    DomainIspPlacement:
      description: An object that contains inbox placement data for email sent from
        one of your email domains to a specific email provider.
      properties:
        IspName:
          allOf:
          - $ref: '#/components/schemas/IspName'
          - description: The name of the email provider that the inbox placement data
              applies to.
          title: IspName
        InboxRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: The total number of messages that were sent from the selected
              domain to the specified email provider that arrived in recipients' inboxes.
          title: InboxRawCount
        SpamRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          - description: The total number of messages that were sent from the selected
              domain to the specified email provider that arrived in recipients' spam
              or junk mail folders.
          title: SpamRawCount
        InboxPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of messages that were sent from the selected
              domain to the specified email provider that arrived in recipients' inboxes.
          title: InboxPercentage
        SpamPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of messages that were sent from the selected
              domain to the specified email provider that arrived in recipients' spam
              or junk mail folders.
          title: SpamPercentage
      title: DomainIspPlacement
      type: object
    EmailTemplateData:
      description: An object that defines the values to use for message variables
        in the template. This object is a set of key-value pairs. Each key defines
        a message variable in the template. The corresponding value defines the value
        to use for that variable.
      maxLength: 262144
      type: string
    EmailTemplateMetadata:
      description: Contains information about an email template.
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          - description: The name of the template.
          title: TemplateName
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time and date the template was created.
          title: CreatedTimestamp
      title: EmailTemplateMetadata
      type: object
    EmailTemplateMetadataList:
      description: A list of the EmailTemplateMetadata object.
      items:
        $ref: '#/components/schemas/EmailTemplateMetadata'
      type: array
    EnabledWrapper:
      type: boolean
    Esp:
      title: Esp
      type: string
    EventDestination:
      description: "In the Amazon SES API v2, <i>events</i> include message sends,\
        \ deliveries, opens, clicks, bounces, complaints and delivery delays. <i>Event\
        \ destinations</i> are places that you can send information about these events\
        \ to. For example, you can send event data to Amazon SNS to receive notifications\
        \ when you receive bounces or complaints, or you can use Amazon Kinesis Data\
        \ Firehose to stream data to Amazon S3 for long-term storage."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventDestinationName'
          - description: A name that identifies the event destination.
          title: Name
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>If <code>true</code>, the event destination is enabled.\
              \ When the event destination is enabled, the specified event types are\
              \ sent to the destinations in this <code>EventDestinationDefinition</code>.</p>\
              \ <p>If <code>false</code>, the event destination is disabled. When\
              \ the event destination is disabled, events aren't sent to the specified\
              \ destinations.</p>"
          title: Enabled
        MatchingEventTypes:
          allOf:
          - $ref: '#/components/schemas/EventTypes'
          - description: "<p>The types of events that Amazon SES sends to the specified\
              \ event destinations.</p> <ul> <li> <p> <code>SEND</code> - The send\
              \ request was successful and SES will attempt to deliver the message\
              \ to the recipient’s mail server. (If account-level or global suppression\
              \ is being used, SES will still count it as a send, but delivery is\
              \ suppressed.)</p> </li> <li> <p> <code>REJECT</code> - SES accepted\
              \ the email, but determined that it contained a virus and didn’t attempt\
              \ to deliver it to the recipient’s mail server.</p> </li> <li> <p> <code>BOUNCE</code>\
              \ - (<i>Hard bounce</i>) The recipient's mail server permanently rejected\
              \ the email. (<i>Soft bounces</i> are only included when SES fails to\
              \ deliver the email after retrying for a period of time.)</p> </li>\
              \ <li> <p> <code>COMPLAINT</code> - The email was successfully delivered\
              \ to the recipient’s mail server, but the recipient marked it as spam.</p>\
              \ </li> <li> <p> <code>DELIVERY</code> - SES successfully delivered\
              \ the email to the recipient's mail server.</p> </li> <li> <p> <code>OPEN</code>\
              \ - The recipient received the message and opened it in their email\
              \ client.</p> </li> <li> <p> <code>CLICK</code> - The recipient clicked\
              \ one or more links in the email.</p> </li> <li> <p> <code>RENDERING_FAILURE</code>\
              \ - The email wasn't sent because of a template rendering issue. This\
              \ event type can occur when template data is missing, or when there\
              \ is a mismatch between template parameters and data. (This event type\
              \ only occurs when you send email using the <a href=\"https://docs.aws.amazon.com/ses/latest/APIReference/API_SendTemplatedEmail.html\"\
              > <code>SendTemplatedEmail</code> </a> or <a href=\"https://docs.aws.amazon.com/ses/latest/APIReference/API_SendBulkTemplatedEmail.html\"\
              > <code>SendBulkTemplatedEmail</code> </a> API operations.) </p> </li>\
              \ <li> <p> <code>DELIVERY_DELAY</code> - The email couldn't be delivered\
              \ to the recipient’s mail server because a temporary issue occurred.\
              \ Delivery delays can occur, for example, when the recipient's inbox\
              \ is full, or when the receiving email server experiences a transient\
              \ issue.</p> </li> <li> <p> <code>SUBSCRIPTION</code> - The email was\
              \ successfully delivered, but the recipient updated their subscription\
              \ preferences by clicking on an <i>unsubscribe</i> link as part of your\
              \ <a href=\"https://docs.aws.amazon.com/ses/latest/dg/sending-email-subscription-management.html\"\
              >subscription management</a>.</p> </li> </ul>"
          title: MatchingEventTypes
        KinesisFirehoseDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_KinesisFirehoseDestination'
        CloudWatchDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_CloudWatchDestination'
        SnsDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_SnsDestination'
        PinpointDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_PinpointDestination'
      required:
      - MatchingEventTypes
      - Name
      title: EventDestination
      type: object
    EventDestinations:
      items:
        $ref: '#/components/schemas/EventDestination'
      type: array
    EventType:
      description: "An email sending event type. For example, email sends, opens,\
        \ and bounces are all email events."
      enum:
      - SEND
      - REJECT
      - BOUNCE
      - COMPLAINT
      - DELIVERY
      - OPEN
      - CLICK
      - RENDERING_FAILURE
      - DELIVERY_DELAY
      - SUBSCRIPTION
      title: EventType
      type: string
    FailedRecordsCount:
      type: integer
    FailedRecordsS3Url:
      type: string
    FailureInfo:
      description: An object that contains the failure details about an import job.
      properties:
        FailedRecordsS3Url:
          allOf:
          - $ref: '#/components/schemas/FailedRecordsS3Url'
          - description: An Amazon S3 presigned URL that contains all the failed records
              and related information.
          title: FailedRecordsS3Url
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: A message about why the import job failed.
          title: ErrorMessage
      title: FailureInfo
      type: object
    FeedbackId:
      type: string
    GeneralEnforcementStatus:
      type: string
    GetAccountRequest:
      description: A request to obtain information about the email-sending capabilities
        of your Amazon SES account.
      properties: {}
      title: GetAccountRequest
      type: object
    SendQuota:
      description: An object that contains information about the per-day and per-second
        sending limits for your Amazon SES account in the current Amazon Web Services
        Region.
      properties:
        Max24HourSend:
          allOf:
          - $ref: '#/components/schemas/Max24HourSend'
          - description: The maximum number of emails that you can send in the current
              Amazon Web Services Region over a 24-hour period. A value of -1 signifies
              an unlimited quota. (This value is also referred to as your <i>sending
              quota</i>.)
          title: Max24HourSend
        MaxSendRate:
          allOf:
          - $ref: '#/components/schemas/MaxSendRate'
          - description: The maximum number of emails that you can send per second
              in the current Amazon Web Services Region. This value is also called
              your <i>maximum sending rate</i> or your <i>maximum TPS (transactions
              per second) rate</i>.
          title: MaxSendRate
        SentLast24Hours:
          allOf:
          - $ref: '#/components/schemas/SentLast24Hours'
          - description: The number of emails sent from your Amazon SES account in
              the current Amazon Web Services Region over the past 24 hours.
          title: SentLast24Hours
      title: SendQuota
      type: object
    SuppressionAttributes:
      description: An object that contains information about the email address suppression
        preferences for your account in the current Amazon Web Services Region.
      properties:
        SuppressedReasons:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReasons'
          - description: <p>A list that contains the reasons that email addresses
              will be automatically added to the suppression list for your account.
              This list can contain any or all of the following:</p> <ul> <li> <p>
              <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression
              list for your account when a message sent to that address results in
              a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES adds
              an email address to the suppression list for your account when a message
              sent to that address results in a hard bounce.</p> </li> </ul>
          title: SuppressedReasons
      title: SuppressionAttributes
      type: object
    VdmAttributes:
      description: The VDM attributes that apply to your Amazon SES account.
      properties:
        VdmEnabled:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          - description: <p>Specifies the status of your VDM configuration. Can be
              one of the following:</p> <ul> <li> <p> <code>ENABLED</code> – Amazon
              SES enables VDM for your account.</p> </li> <li> <p> <code>DISABLED</code>
              – Amazon SES disables VDM for your account.</p> </li> </ul>
          title: VdmEnabled
        DashboardAttributes:
          $ref: '#/components/schemas/PutAccountVdmAttributes_request_VdmAttributes_DashboardAttributes'
        GuardianAttributes:
          $ref: '#/components/schemas/PutAccountVdmAttributes_request_VdmAttributes_GuardianAttributes'
      required:
      - VdmEnabled
      title: VdmAttributes
      type: object
    GetBlacklistReportsRequest:
      description: A request to retrieve a list of the blacklists that your dedicated
        IP addresses appear on.
      properties: {}
      title: GetBlacklistReportsRequest
      type: object
    GetConfigurationSetEventDestinationsRequest:
      description: A request to obtain information about the event destinations for
        a configuration set.
      properties: {}
      title: GetConfigurationSetEventDestinationsRequest
      type: object
    GetConfigurationSetRequest:
      description: A request to obtain information about a configuration set.
      properties: {}
      title: GetConfigurationSetRequest
      type: object
    GetContactListRequest:
      properties: {}
      title: GetContactListRequest
      type: object
    GetContactRequest:
      properties: {}
      title: GetContactRequest
      type: object
    GetCustomVerificationEmailTemplateRequest:
      description: Represents a request to retrieve an existing custom verification
        email template.
      properties: {}
      title: GetCustomVerificationEmailTemplateRequest
      type: object
    GetDedicatedIpPoolRequest:
      description: A request to obtain more information about a dedicated IP pool.
      properties: {}
      title: GetDedicatedIpPoolRequest
      type: object
    GetDedicatedIpRequest:
      description: A request to obtain more information about a dedicated IP address.
      properties: {}
      title: GetDedicatedIpRequest
      type: object
    NextToken:
      type: string
    MaxItems:
      type: integer
    GetDedicatedIpsRequest:
      description: A request to obtain more information about dedicated IP pools.
      properties: {}
      title: GetDedicatedIpsRequest
      type: object
    GetDeliverabilityDashboardOptionsRequest:
      description: "<p>Retrieve information about the status of the Deliverability\
        \ dashboard for your Amazon Web Services account. When the Deliverability\
        \ dashboard is enabled, you gain access to reputation, deliverability, and\
        \ other metrics for your domains. You also gain the ability to perform predictive\
        \ inbox placement tests.</p> <p>When you use the Deliverability dashboard,\
        \ you pay a monthly subscription charge, in addition to any other fees that\
        \ you accrue by using Amazon SES and other Amazon Web Services services. For\
        \ more information about the features and cost of a Deliverability dashboard\
        \ subscription, see <a href=\"http://aws.amazon.com/pinpoint/pricing/\">Amazon\
        \ Pinpoint Pricing</a>.</p>"
      properties: {}
      title: GetDeliverabilityDashboardOptionsRequest
      type: object
    GetDeliverabilityTestReportRequest:
      description: A request to retrieve the results of a predictive inbox placement
        test.
      properties: {}
      title: GetDeliverabilityTestReportRequest
      type: object
    PlacementStatistics:
      description: An object that contains inbox placement data for an email provider.
      properties:
        InboxPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of emails that arrived in recipients' inboxes
              during the predictive inbox placement test.
          title: InboxPercentage
        SpamPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of emails that arrived in recipients' spam
              or junk mail folders during the predictive inbox placement test.
          title: SpamPercentage
        MissingPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of emails that didn't arrive in recipients'
              inboxes at all during the predictive inbox placement test.
          title: MissingPercentage
        SpfPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of emails that were authenticated by using
              Sender Policy Framework (SPF) during the predictive inbox placement
              test.
          title: SpfPercentage
        DkimPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of emails that were authenticated by using
              DomainKeys Identified Mail (DKIM) during the predictive inbox placement
              test.
          title: DkimPercentage
      title: PlacementStatistics
      type: object
    IspPlacements:
      items:
        $ref: '#/components/schemas/IspPlacement'
      type: array
    MessageContent:
      description: The body of an email message.
      type: string
    GetDomainDeliverabilityCampaignRequest:
      description: Retrieve all the deliverability data for a specific campaign. This
        data is available for a campaign only if the campaign sent email by using
        a domain that the Deliverability dashboard is enabled for (<code>PutDeliverabilityDashboardOption</code>
        operation).
      properties: {}
      title: GetDomainDeliverabilityCampaignRequest
      type: object
    GetDomainStatisticsReportRequest:
      description: A request to obtain deliverability metrics for a domain.
      properties: {}
      title: GetDomainStatisticsReportRequest
      type: object
    OverallVolume:
      description: An object that contains information about email that was sent from
        the selected domain.
      properties:
        VolumeStatistics:
          $ref: '#/components/schemas/OverallVolume_VolumeStatistics'
        ReadRatePercent:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: The percentage of emails that were sent from the domain that
              were read by their recipients.
          title: ReadRatePercent
        DomainIspPlacements:
          allOf:
          - $ref: '#/components/schemas/DomainIspPlacements'
          - description: An object that contains inbox and junk mail placement metrics
              for individual email providers.
          title: DomainIspPlacements
      title: OverallVolume
      type: object
    GetEmailIdentityPoliciesRequest:
      description: A request to return the policies of an email identity.
      properties: {}
      title: GetEmailIdentityPoliciesRequest
      type: object
    PolicyMap:
      additionalProperties:
        $ref: '#/components/schemas/Policy'
      description: An object that contains mapping between <code>PolicyName</code>
        and <code>Policy</code> text.
      type: object
    GetEmailIdentityRequest:
      description: A request to return details about an email identity.
      properties: {}
      title: GetEmailIdentityRequest
      type: object
    MailFromAttributes:
      description: A list of attributes that are associated with a MAIL FROM domain.
      properties:
        MailFromDomain:
          allOf:
          - $ref: '#/components/schemas/MailFromDomainName'
          - description: The name of a domain that an email identity uses as a custom
              MAIL FROM domain.
          title: MailFromDomain
        MailFromDomainStatus:
          allOf:
          - $ref: '#/components/schemas/MailFromDomainStatus'
          - description: "<p>The status of the MAIL FROM domain. This status can have\
              \ the following values:</p> <ul> <li> <p> <code>PENDING</code> – Amazon\
              \ SES hasn't started searching for the MX record yet.</p> </li> <li>\
              \ <p> <code>SUCCESS</code> – Amazon SES detected the required MX record\
              \ for the MAIL FROM domain.</p> </li> <li> <p> <code>FAILED</code> –\
              \ Amazon SES can't find the required MX record, or the record no longer\
              \ exists.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code> – A temporary\
              \ issue occurred, which prevented Amazon SES from determining the status\
              \ of the MAIL FROM domain.</p> </li> </ul>"
          title: MailFromDomainStatus
        BehaviorOnMxFailure:
          allOf:
          - $ref: '#/components/schemas/BehaviorOnMxFailure'
          - description: "<p>The action to take if the required MX record can't be\
              \ found when you send an email. When you set this value to <code>USE_DEFAULT_VALUE</code>,\
              \ the mail is sent using <i>amazonses.com</i> as the MAIL FROM domain.\
              \ When you set this value to <code>REJECT_MESSAGE</code>, the Amazon\
              \ SES API v2 returns a <code>MailFromDomainNotVerified</code> error,\
              \ and doesn't attempt to deliver the email.</p> <p>These behaviors are\
              \ taken when the custom MAIL FROM domain configuration is in the <code>Pending</code>,\
              \ <code>Failed</code>, and <code>TemporaryFailure</code> states.</p>"
          title: BehaviorOnMxFailure
      required:
      - BehaviorOnMxFailure
      - MailFromDomain
      - MailFromDomainStatus
      title: MailFromAttributes
      type: object
    VerificationStatus:
      enum:
      - PENDING
      - SUCCESS
      - FAILED
      - TEMPORARY_FAILURE
      - NOT_STARTED
      title: VerificationStatus
      type: string
    GetEmailTemplateRequest:
      description: "Represents a request to display the template object (which includes\
        \ the subject line, HTML part and text part) for the template you specify."
      properties: {}
      title: GetEmailTemplateRequest
      type: object
    GetImportJobRequest:
      description: Represents a request for information about an import job using
        the import job ID.
      properties: {}
      title: GetImportJobRequest
      type: object
    JobStatus:
      description: The status of the import job.
      enum:
      - CREATED
      - PROCESSING
      - COMPLETED
      - FAILED
      title: JobStatus
      type: string
    ProcessedRecordsCount:
      type: integer
    GetSuppressedDestinationRequest:
      description: A request to retrieve information about an email address that's
        on the suppression list for your account.
      properties: {}
      title: GetSuppressedDestinationRequest
      type: object
    SuppressedDestination:
      description: An object that contains information about an email address that
        is on the suppression list for your account.
      properties:
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email address that is on the suppression list for your
              account.
          title: EmailAddress
        Reason:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReason'
          - description: The reason that the address was added to the suppression
              list for your account.
          title: Reason
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time when the suppressed destination was last\
              \ updated, shown in Unix time format."
          title: LastUpdateTime
        Attributes:
          $ref: '#/components/schemas/SuppressedDestination_Attributes'
      required:
      - EmailAddress
      - LastUpdateTime
      - Reason
      title: SuppressedDestination
      type: object
    IdentityInfo:
      description: Information about an email identity.
      properties:
        IdentityType:
          allOf:
          - $ref: '#/components/schemas/IdentityType'
          - description: "The email identity type. Note: the <code>MANAGED_DOMAIN</code>\
              \ type is not supported for email identity types."
          title: IdentityType
        IdentityName:
          allOf:
          - $ref: '#/components/schemas/Identity'
          - description: The address or domain of the identity.
          title: IdentityName
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>Indicates whether or not you can send email from the\
              \ identity.</p> <p>An <i>identity</i> is an email address or domain\
              \ that you send email from. Before you can send email from an identity,\
              \ you have to demostrate that you own the identity, and that you authorize\
              \ Amazon SES to send email from that identity.</p>"
          title: SendingEnabled
        VerificationStatus:
          allOf:
          - $ref: '#/components/schemas/VerificationStatus'
          - description: "<p>The verification status of the identity. The status can\
              \ be one of the following:</p> <ul> <li> <p> <code>PENDING</code> –\
              \ The verification process was initiated, but Amazon SES hasn't yet\
              \ been able to verify the identity.</p> </li> <li> <p> <code>SUCCESS</code>\
              \ – The verification process completed successfully.</p> </li> <li>\
              \ <p> <code>FAILED</code> – The verification process failed.</p> </li>\
              \ <li> <p> <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing\
              \ Amazon SES from determining the verification status of the identity.</p>\
              \ </li> <li> <p> <code>NOT_STARTED</code> – The verification process\
              \ hasn't been initiated for the identity.</p> </li> </ul>"
          title: VerificationStatus
      title: IdentityInfo
      type: object
    IdentityInfoList:
      items:
        $ref: '#/components/schemas/IdentityInfo'
      type: array
    ImportDestinationType:
      description: "The destination of the import job, which can be used to list import\
        \ jobs that have a certain <code>ImportDestinationType</code>."
      enum:
      - SUPPRESSION_LIST
      - CONTACT_LIST
      title: ImportDestinationType
      type: string
    ImportJobSummary:
      description: A summary of the import job.
      properties:
        JobId:
          description: A string that represents the import job ID.
          minLength: 1
          title: JobId
          type: string
        ImportDestination:
          $ref: '#/components/schemas/ImportDestination'
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the import job was created.
          title: CreatedTimestamp
        ProcessedRecordsCount:
          allOf:
          - $ref: '#/components/schemas/ProcessedRecordsCount'
          - description: The current number of records processed.
          title: ProcessedRecordsCount
        FailedRecordsCount:
          allOf:
          - $ref: '#/components/schemas/FailedRecordsCount'
          - description: The number of records that failed processing because of invalid
              input or other reasons.
          title: FailedRecordsCount
      title: ImportJobSummary
      type: object
    ImportJobSummaryList:
      description: A list of the import job summaries.
      items:
        $ref: '#/components/schemas/ImportJobSummary'
      type: array
    IspNameList:
      items:
        $ref: '#/components/schemas/IspName'
      type: array
    IspPlacement:
      description: An object that describes how email sent during the predictive inbox
        placement test was handled by a certain email provider.
      properties:
        IspName:
          allOf:
          - $ref: '#/components/schemas/IspName'
          - description: The name of the email provider that the inbox placement data
              applies to.
          title: IspName
        PlacementStatistics:
          $ref: '#/components/schemas/IspPlacement_PlacementStatistics'
      title: IspPlacement
      type: object
    ListConfigurationSetsRequest:
      description: A request to obtain a list of configuration sets for your Amazon
        SES account in the current Amazon Web Services Region.
      properties: {}
      title: ListConfigurationSetsRequest
      type: object
    ListContactListsRequest:
      properties: {}
      title: ListContactListsRequest
      type: object
    ListOfContactLists:
      items:
        $ref: '#/components/schemas/ContactList'
      type: array
    ListContactsFilter:
      description: A filter that can be applied to a list of contacts.
      properties:
        FilteredStatus:
          allOf:
          - $ref: '#/components/schemas/SubscriptionStatus'
          - description: "The status by which you are filtering: <code>OPT_IN</code>\
              \ or <code>OPT_OUT</code>."
          title: FilteredStatus
        TopicFilter:
          $ref: '#/components/schemas/ListContacts_request_Filter_TopicFilter'
      title: ListContactsFilter
      type: object
    ListContactsRequest:
      example:
        Filter:
          TopicFilter:
            UseDefaultIfPreferenceUnavailable: ""
            TopicName: ""
          FilteredStatus: ""
      properties:
        Filter:
          $ref: '#/components/schemas/ListContactsRequest_Filter'
      title: ListContactsRequest
      type: object
    ListOfContacts:
      items:
        $ref: '#/components/schemas/Contact'
      type: array
    ListCustomVerificationEmailTemplatesRequest:
      description: Represents a request to list the existing custom verification email
        templates for your account.
      properties: {}
      title: ListCustomVerificationEmailTemplatesRequest
      type: object
    ListDedicatedIpPoolsRequest:
      description: A request to obtain a list of dedicated IP pools.
      properties: {}
      title: ListDedicatedIpPoolsRequest
      type: object
    ListOfDedicatedIpPools:
      description: A list of dedicated IP pools that are associated with your Amazon
        Web Services account.
      items:
        $ref: '#/components/schemas/PoolName'
      type: array
    ListDeliverabilityTestReportsRequest:
      description: A request to list all of the predictive inbox placement tests that
        you've performed.
      properties: {}
      title: ListDeliverabilityTestReportsRequest
      type: object
    ListDomainDeliverabilityCampaignsRequest:
      description: Retrieve deliverability data for all the campaigns that used a
        specific domain to send email during a specified time range. This data is
        available for a domain only if you enabled the Deliverability dashboard.
      properties: {}
      title: ListDomainDeliverabilityCampaignsRequest
      type: object
    ListEmailIdentitiesRequest:
      description: "A request to list all of the email identities associated with\
        \ your Amazon Web Services account. This list includes identities that you've\
        \ already verified, identities that are unverified, and identities that were\
        \ verified in the past, but are no longer verified."
      properties: {}
      title: ListEmailIdentitiesRequest
      type: object
    ListEmailTemplatesRequest:
      description: "Represents a request to list the email templates present in your\
        \ Amazon SES account in the current Amazon Web Services Region. For more information,\
        \ see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html\"\
        >Amazon SES Developer Guide</a>."
      properties: {}
      title: ListEmailTemplatesRequest
      type: object
    ListImportJobsRequest:
      description: Represents a request to list all of the import jobs for a data
        destination within the specified maximum number of import jobs.
      example:
        ImportDestinationType: ""
      properties:
        ImportDestinationType:
          allOf:
          - $ref: '#/components/schemas/ImportDestinationType'
          - description: "The destination of the import job, which can be used to\
              \ list import jobs that have a certain <code>ImportDestinationType</code>."
      title: ListImportJobsRequest
      type: object
    ListManagementOptions:
      description: "An object used to specify a list or topic to which an email belongs,\
        \ which will be used when a contact chooses to unsubscribe."
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          - description: The name of the contact list.
          title: ContactListName
        TopicName:
          allOf:
          - $ref: '#/components/schemas/TopicName'
          - description: The name of the topic.
          title: TopicName
      required:
      - ContactListName
      title: ListManagementOptions
      type: object
    ListRecommendationsFilter:
      additionalProperties:
        $ref: '#/components/schemas/ListRecommendationFilterValue'
      description: An object that contains mapping between <code>ListRecommendationsFilterKey</code>
        and <code>ListRecommendationFilterValue</code> to filter by.
      maxProperties: 2
      minProperties: 1
      type: object
    ListRecommendationsFilterKey:
      description: "<p>The <code>ListRecommendations</code> filter type. This can\
        \ be one of the following:</p> <ul> <li> <p> <code>TYPE</code> – The recommendation\
        \ type, with values like <code>DKIM</code>, <code>SPF</code>, <code>DMARC</code>\
        \ or <code>BIMI</code>.</p> </li> <li> <p> <code>IMPACT</code> – The recommendation\
        \ impact, with values like <code>HIGH</code> or <code>LOW</code>.</p> </li>\
        \ <li> <p> <code>STATUS</code> – The recommendation status, with values like\
        \ <code>OPEN</code> or <code>FIXED</code>.</p> </li> <li> <p> <code>RESOURCE_ARN</code>\
        \ – The resource affected by the recommendation, with values like <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p>\
        \ </li> </ul>"
      enum:
      - TYPE
      - IMPACT
      - STATUS
      - RESOURCE_ARN
      type: string
    ListRecommendationsRequest:
      description: Represents a request to list the existing recommendations for your
        account.
      example:
        NextToken: ""
        PageSize: ""
        Filter: ""
      properties:
        Filter:
          allOf:
          - $ref: '#/components/schemas/ListRecommendationsFilter'
          - description: "Filters applied when retrieving recommendations. Can eiter\
              \ be an individual filter, or combinations of <code>STATUS</code> and\
              \ <code>IMPACT</code> or <code>STATUS</code> and <code>TYPE</code> "
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token returned from a previous call to <code>ListRecommendations</code>
              to indicate the position in the list of recommendations.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          - description: "<p>The number of results to show in a single call to <code>ListRecommendations</code>.\
              \ If the number of results is larger than the number you specified in\
              \ this parameter, then the response includes a <code>NextToken</code>\
              \ element, which you can use to obtain additional results.</p> <p>The\
              \ value you specify has to be at least 1, and can be no more than 100.</p>"
      title: ListRecommendationsRequest
      type: object
    RecommendationsList:
      items:
        $ref: '#/components/schemas/Recommendation'
      type: array
    ListSuppressedDestinationsRequest:
      description: A request to obtain a list of email destinations that are on the
        suppression list for your account.
      properties: {}
      title: ListSuppressedDestinationsRequest
      type: object
    SuppressedDestinationSummaries:
      items:
        $ref: '#/components/schemas/SuppressedDestinationSummary'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    MailFromDomainName:
      description: The domain to use as a MAIL FROM domain.
      type: string
    MailFromDomainStatus:
      description: "<p>The status of the MAIL FROM domain. This status can have the\
        \ following values:</p> <ul> <li> <p> <code>PENDING</code> – Amazon SES hasn't\
        \ started searching for the MX record yet.</p> </li> <li> <p> <code>SUCCESS</code>\
        \ – Amazon SES detected the required MX record for the MAIL FROM domain.</p>\
        \ </li> <li> <p> <code>FAILED</code> – Amazon SES can't find the required\
        \ MX record, or the record no longer exists.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code>\
        \ – A temporary issue occurred, which prevented Amazon SES from determining\
        \ the status of the MAIL FROM domain.</p> </li> </ul>"
      enum:
      - PENDING
      - SUCCESS
      - FAILED
      - TEMPORARY_FAILURE
      title: MailFromDomainStatus
      type: string
    Max24HourSend:
      format: double
      type: number
    MaxSendRate:
      format: double
      type: number
    MessageTagName:
      description: "<p>The name of the message tag. The message tag name has to meet\
        \ the following criteria:</p> <ul> <li> <p>It can only contain ASCII letters\
        \ (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li> <li>\
        \ <p>It can contain no more than 256 characters.</p> </li> </ul>"
      type: string
    MessageTagValue:
      description: "<p>The value of the message tag. The message tag value has to\
        \ meet the following criteria:</p> <ul> <li> <p>It can only contain ASCII\
        \ letters (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).</p> </li>\
        \ <li> <p>It can contain no more than 256 characters.</p> </li> </ul>"
      type: string
    QueryErrorCode:
      enum:
      - INTERNAL_FAILURE
      - ACCESS_DENIED
      title: QueryErrorCode
      type: string
    QueryErrorMessage:
      type: string
    MetricDataError:
      description: An error corresponding to the unsuccessful processing of a single
        metric data query.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/QueryIdentifier'
          - description: The query identifier.
          title: Id
        Code:
          allOf:
          - $ref: '#/components/schemas/QueryErrorCode'
          - description: <p>The query error code. Can be one of:</p> <ul> <li> <p>
              <code>INTERNAL_FAILURE</code> – Amazon SES has failed to process one
              of the queries.</p> </li> <li> <p> <code>ACCESS_DENIED</code> – You
              have insufficient access to retrieve metrics based on the given query.</p>
              </li> </ul>
          title: Code
        Message:
          allOf:
          - $ref: '#/components/schemas/QueryErrorMessage'
          - description: The error message associated with the current query error.
          title: Message
      title: MetricDataError
      type: object
    TimestampList:
      items:
        $ref: '#/components/schemas/Timestamp'
      type: array
    MetricValueList:
      items:
        $ref: '#/components/schemas/Counter'
      type: array
    MetricDataResult:
      description: The result of a single metric data query.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/QueryIdentifier'
          - description: The query identifier.
          title: Id
        Timestamps:
          allOf:
          - $ref: '#/components/schemas/TimestampList'
          - description: A list of timestamps for the metric data results.
          title: Timestamps
        Values:
          allOf:
          - $ref: '#/components/schemas/MetricValueList'
          - description: A list of values (cumulative / sum) for the metric data results.
          title: Values
      title: MetricDataResult
      type: object
    MetricDimensionName:
      description: "<p>The <code>BatchGetMetricDataQuery</code> dimension name. This\
        \ can be one of the following:</p> <ul> <li> <p> <code>EMAIL_IDENTITY</code>\
        \ – The email identity used when sending messages.</p> </li> <li> <p> <code>CONFIGURATION_SET</code>\
        \ – The configuration set used when sending messages (if one was used).</p>\
        \ </li> <li> <p> <code>ISP</code> – The recipient ISP (e.g. <code>Gmail</code>,\
        \ <code>Yahoo</code>, etc.).</p> </li> </ul>"
      enum:
      - EMAIL_IDENTITY
      - CONFIGURATION_SET
      - ISP
      type: string
    PutAccountDedicatedIpWarmupAttributesRequest:
      description: A request to enable or disable the automatic IP address warm-up
        feature.
      example:
        AutoWarmupEnabled: ""
      properties:
        AutoWarmupEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "Enables or disables the automatic warm-up feature for dedicated\
              \ IP addresses that are associated with your Amazon SES account in the\
              \ current Amazon Web Services Region. Set to <code>true</code> to enable\
              \ the automatic warm-up feature, or set to <code>false</code> to disable\
              \ it."
      title: PutAccountDedicatedIpWarmupAttributesRequest
      type: object
    PutAccountDetailsRequest:
      description: A request to submit new account details.
      example:
        WebsiteURL: ""
        UseCaseDescription: ""
        ContactLanguage: ""
        ProductionAccessEnabled: ""
        MailType: ""
        AdditionalContactEmailAddresses: ""
      properties:
        MailType:
          allOf:
          - $ref: '#/components/schemas/MailType'
          - description: The type of email your account will send.
        WebsiteURL:
          allOf:
          - $ref: '#/components/schemas/WebsiteURL'
          - description: The URL of your website. This information helps us better
              understand the type of content that you plan to send.
        ContactLanguage:
          allOf:
          - $ref: '#/components/schemas/ContactLanguage'
          - description: The language you would prefer to be contacted with.
        UseCaseDescription:
          allOf:
          - $ref: '#/components/schemas/UseCaseDescription'
          - description: A description of the types of email that you plan to send.
        AdditionalContactEmailAddresses:
          allOf:
          - $ref: '#/components/schemas/AdditionalContactEmailAddresses'
          - description: Additional email addresses that you would like to be notified
              regarding Amazon SES matters.
        ProductionAccessEnabled:
          allOf:
          - $ref: '#/components/schemas/EnabledWrapper'
          - description: "<p>Indicates whether or not your account should have production\
              \ access in the current Amazon Web Services Region.</p> <p>If the value\
              \ is <code>false</code>, then your account is in the <i>sandbox</i>.\
              \ When your account is in the sandbox, you can only send email to verified\
              \ identities. Additionally, the maximum number of emails you can send\
              \ in a 24-hour period (your sending quota) is 200, and the maximum number\
              \ of emails you can send per second (your maximum sending rate) is 1.</p>\
              \ <p>If the value is <code>true</code>, then your account has production\
              \ access. When your account has production access, you can send email\
              \ to any address. The sending quota and maximum sending rate for your\
              \ account vary based on your specific use case.</p>"
      required:
      - MailType
      - UseCaseDescription
      - WebsiteURL
      title: PutAccountDetailsRequest
      type: object
    PutAccountSendingAttributesRequest:
      description: A request to change the ability of your account to send email.
      example:
        SendingEnabled: ""
      properties:
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>Enables or disables your account's ability to send email.\
              \ Set to <code>true</code> to enable email sending, or set to <code>false</code>\
              \ to disable email sending.</p> <note> <p>If Amazon Web Services paused\
              \ your account's ability to send email, you can't use this operation\
              \ to resume your account's ability to send email.</p> </note>"
      title: PutAccountSendingAttributesRequest
      type: object
    PutAccountSuppressionAttributesRequest:
      description: A request to change your account's suppression preferences.
      example:
        SuppressedReasons: ""
      properties:
        SuppressedReasons:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReasons'
          - description: <p>A list that contains the reasons that email addresses
              will be automatically added to the suppression list for your account.
              This list can contain any or all of the following:</p> <ul> <li> <p>
              <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression
              list for your account when a message sent to that address results in
              a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES adds
              an email address to the suppression list for your account when a message
              sent to that address results in a hard bounce.</p> </li> </ul>
      title: PutAccountSuppressionAttributesRequest
      type: object
    PutAccountVdmAttributesRequest:
      description: A request to submit new account VDM attributes.
      example:
        VdmAttributes:
          DashboardAttributes:
            EngagementMetrics: ""
          VdmEnabled: ""
          GuardianAttributes:
            OptimizedSharedDelivery: ""
      properties:
        VdmAttributes:
          $ref: '#/components/schemas/PutAccountVdmAttributesRequest_VdmAttributes'
      required:
      - VdmAttributes
      title: PutAccountVdmAttributesRequest
      type: object
    SendingPoolName:
      description: The name of the dedicated IP pool to associate with the configuration
        set.
      type: string
    PutConfigurationSetDeliveryOptionsRequest:
      description: A request to associate a configuration set with a dedicated IP
        pool.
      example:
        SendingPoolName: ""
        TlsPolicy: ""
      properties:
        TlsPolicy:
          allOf:
          - $ref: '#/components/schemas/TlsPolicy'
          - description: "Specifies whether messages that use the configuration set\
              \ are required to use Transport Layer Security (TLS). If the value is\
              \ <code>Require</code>, messages are only delivered if a TLS connection\
              \ can be established. If the value is <code>Optional</code>, messages\
              \ can be delivered in plain text if a TLS connection can't be established."
        SendingPoolName:
          allOf:
          - $ref: '#/components/schemas/SendingPoolName'
          - description: The name of the dedicated IP pool to associate with the configuration
              set.
      title: PutConfigurationSetDeliveryOptionsRequest
      type: object
    PutConfigurationSetReputationOptionsRequest:
      description: A request to enable or disable tracking of reputation metrics for
        a configuration set.
      example:
        ReputationMetricsEnabled: ""
      properties:
        ReputationMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "If <code>true</code>, tracking of reputation metrics is\
              \ enabled for the configuration set. If <code>false</code>, tracking\
              \ of reputation metrics is disabled for the configuration set."
      title: PutConfigurationSetReputationOptionsRequest
      type: object
    PutConfigurationSetSendingOptionsRequest:
      description: A request to enable or disable the ability of Amazon SES to send
        emails that use a specific configuration set.
      example:
        SendingEnabled: ""
      properties:
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "If <code>true</code>, email sending is enabled for the configuration\
              \ set. If <code>false</code>, email sending is disabled for the configuration\
              \ set."
      title: PutConfigurationSetSendingOptionsRequest
      type: object
    PutConfigurationSetSuppressionOptionsRequest:
      description: A request to change the account suppression list preferences for
        a specific configuration set.
      example:
        SuppressedReasons: ""
      properties:
        SuppressedReasons:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReasons'
          - description: <p>A list that contains the reasons that email addresses
              are automatically added to the suppression list for your account. This
              list can contain any or all of the following:</p> <ul> <li> <p> <code>COMPLAINT</code>
              – Amazon SES adds an email address to the suppression list for your
              account when a message sent to that address results in a complaint.</p>
              </li> <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address
              to the suppression list for your account when a message sent to that
              address results in a hard bounce.</p> </li> </ul>
      title: PutConfigurationSetSuppressionOptionsRequest
      type: object
    PutConfigurationSetTrackingOptionsRequest:
      description: A request to add a custom domain for tracking open and click events
        to a configuration set.
      example:
        CustomRedirectDomain: ""
      properties:
        CustomRedirectDomain:
          allOf:
          - $ref: '#/components/schemas/CustomRedirectDomain'
          - description: The domain to use to track open and click events.
      title: PutConfigurationSetTrackingOptionsRequest
      type: object
    PutConfigurationSetVdmOptionsRequest:
      description: A request to add specific VDM settings to a configuration set.
      example:
        VdmOptions:
          DashboardOptions:
            EngagementMetrics: ""
          GuardianOptions:
            OptimizedSharedDelivery: ""
      properties:
        VdmOptions:
          $ref: '#/components/schemas/PutConfigurationSetVdmOptionsRequest_VdmOptions'
      title: PutConfigurationSetVdmOptionsRequest
      type: object
    PutDedicatedIpInPoolRequest:
      description: A request to move a dedicated IP address to a dedicated IP pool.
      example:
        DestinationPoolName: ""
      properties:
        DestinationPoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          - description: The name of the IP pool that you want to add the dedicated
              IP address to. You have to specify an IP pool that already exists.
      required:
      - DestinationPoolName
      title: PutDedicatedIpInPoolRequest
      type: object
    PutDedicatedIpPoolScalingAttributesRequest:
      description: A request to convert a dedicated IP pool to a different scaling
        mode.
      example:
        ScalingMode: ""
      properties:
        ScalingMode:
          allOf:
          - $ref: '#/components/schemas/ScalingMode'
          - description: <p>The scaling mode to apply to the dedicated IP pool.</p>
              <note> <p>Changing the scaling mode from <code>MANAGED</code> to <code>STANDARD</code>
              is not supported.</p> </note>
      required:
      - ScalingMode
      title: PutDedicatedIpPoolScalingAttributesRequest
      type: object
    PutDedicatedIpWarmupAttributesRequest:
      description: A request to change the warm-up attributes for a dedicated IP address.
        This operation is useful when you want to resume the warm-up process for an
        existing IP address.
      example:
        WarmupPercentage: ""
      properties:
        WarmupPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage100Wrapper'
          - description: The warm-up percentage that you want to associate with the
              dedicated IP address.
      required:
      - WarmupPercentage
      title: PutDedicatedIpWarmupAttributesRequest
      type: object
    PutDeliverabilityDashboardOptionRequest:
      description: "<p>Enable or disable the Deliverability dashboard. When you enable\
        \ the Deliverability dashboard, you gain access to reputation, deliverability,\
        \ and other metrics for the domains that you use to send email using Amazon\
        \ SES API v2. You also gain the ability to perform predictive inbox placement\
        \ tests.</p> <p>When you use the Deliverability dashboard, you pay a monthly\
        \ subscription charge, in addition to any other fees that you accrue by using\
        \ Amazon SES and other Amazon Web Services services. For more information\
        \ about the features and cost of a Deliverability dashboard subscription,\
        \ see <a href=\"http://aws.amazon.com/pinpoint/pricing/\">Amazon Pinpoint\
        \ Pricing</a>.</p>"
      example:
        SubscribedDomains: ""
        DashboardEnabled: ""
      properties:
        DashboardEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "Specifies whether to enable the Deliverability dashboard.\
              \ To enable the dashboard, set this value to <code>true</code>."
        SubscribedDomains:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
          - description: "An array of objects, one for each verified domain that you\
              \ use to send email and enabled the Deliverability dashboard for."
      required:
      - DashboardEnabled
      title: PutDeliverabilityDashboardOptionRequest
      type: object
    PutEmailIdentityConfigurationSetAttributesRequest:
      description: A request to associate a configuration set with an email identity.
      example:
        ConfigurationSetName: ""
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          - description: The configuration set to associate with an email identity.
      title: PutEmailIdentityConfigurationSetAttributesRequest
      type: object
    PutEmailIdentityDkimAttributesRequest:
      description: A request to enable or disable DKIM signing of email that you send
        from an email identity.
      example:
        SigningEnabled: ""
      properties:
        SigningEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>Sets the DKIM signing configuration for the identity.</p>\
              \ <p>When you set this value <code>true</code>, then the messages that\
              \ are sent from the identity are signed using DKIM. If you set this\
              \ value to <code>false</code>, your messages are sent without DKIM signing.</p>"
      title: PutEmailIdentityDkimAttributesRequest
      type: object
    PutEmailIdentityDkimSigningAttributesRequest:
      description: A request to change the DKIM attributes for an email identity.
      example:
        SigningAttributesOrigin: ""
        SigningAttributes:
          DomainSigningPrivateKey: ""
          DomainSigningSelector: ""
          NextSigningKeyLength: ""
      properties:
        SigningAttributesOrigin:
          allOf:
          - $ref: '#/components/schemas/DkimSigningAttributesOrigin'
          - description: <p>The method to use to configure DKIM for the identity.
              There are the following possible values:</p> <ul> <li> <p> <code>AWS_SES</code>
              – Configure DKIM for the identity by using <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy
              DKIM</a>.</p> </li> <li> <p> <code>EXTERNAL</code> – Configure DKIM
              for the identity by using Bring Your Own DKIM (BYODKIM).</p> </li> </ul>
        SigningAttributes:
          $ref: '#/components/schemas/PutEmailIdentityDkimSigningAttributesRequest_SigningAttributes'
      required:
      - SigningAttributesOrigin
      title: PutEmailIdentityDkimSigningAttributesRequest
      type: object
    PutEmailIdentityFeedbackAttributesRequest:
      description: A request to set the attributes that control how bounce and complaint
        events are processed.
      example:
        EmailForwardingEnabled: ""
      properties:
        EmailForwardingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>Sets the feedback forwarding configuration for the identity.</p>\
              \ <p>If the value is <code>true</code>, you receive email notifications\
              \ when bounce or complaint events occur. These notifications are sent\
              \ to the address that you specified in the <code>Return-Path</code>\
              \ header of the original email.</p> <p>You're required to have a method\
              \ of tracking bounces and complaints. If you haven't set up another\
              \ mechanism for receiving bounce or complaint notifications (for example,\
              \ by setting up an event destination), you receive an email notification\
              \ when these events occur (even if this setting is disabled).</p>"
      title: PutEmailIdentityFeedbackAttributesRequest
      type: object
    PutEmailIdentityMailFromAttributesRequest:
      description: A request to configure the custom MAIL FROM domain for a verified
        identity.
      example:
        MailFromDomain: ""
        BehaviorOnMxFailure: ""
      properties:
        MailFromDomain:
          allOf:
          - $ref: '#/components/schemas/MailFromDomainName'
          - description: <p> The custom MAIL FROM domain that you want the verified
              identity to use. The MAIL FROM domain must meet the following criteria:</p>
              <ul> <li> <p>It has to be a subdomain of the verified identity.</p>
              </li> <li> <p>It can't be used to receive email.</p> </li> <li> <p>It
              can't be used in a "From" address if the MAIL FROM domain is a destination
              for feedback forwarding emails.</p> </li> </ul>
        BehaviorOnMxFailure:
          allOf:
          - $ref: '#/components/schemas/BehaviorOnMxFailure'
          - description: "<p>The action to take if the required MX record isn't found\
              \ when you send an email. When you set this value to <code>UseDefaultValue</code>,\
              \ the mail is sent using <i>amazonses.com</i> as the MAIL FROM domain.\
              \ When you set this value to <code>RejectMessage</code>, the Amazon\
              \ SES API v2 returns a <code>MailFromDomainNotVerified</code> error,\
              \ and doesn't attempt to deliver the email.</p> <p>These behaviors are\
              \ taken when the custom MAIL FROM domain configuration is in the <code>Pending</code>,\
              \ <code>Failed</code>, and <code>TemporaryFailure</code> states.</p>"
      title: PutEmailIdentityMailFromAttributesRequest
      type: object
    PutSuppressedDestinationRequest:
      description: A request to add an email destination to the suppression list for
        your account.
      example:
        EmailAddress: ""
        Reason: ""
      properties:
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email address that should be added to the suppression
              list for your account.
        Reason:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReason'
          - description: The factors that should cause the email address to be added
              to the suppression list for your account.
      required:
      - EmailAddress
      - Reason
      title: PutSuppressedDestinationRequest
      type: object
    RawMessageData:
      description: "<p>The raw email message. The message has to meet the following\
        \ criteria:</p> <ul> <li> <p>The message has to contain a header and a body,\
        \ separated by one blank line.</p> </li> <li> <p>All of the required header\
        \ fields must be present in the message.</p> </li> <li> <p>Each part of a\
        \ multipart MIME message must be formatted properly.</p> </li> <li> <p>Attachments\
        \ must be in a file format that the Amazon SES API v2 supports. </p> </li>\
        \ <li> <p>The entire message must be Base64 encoded.</p> </li> <li> <p>If\
        \ any of the MIME parts in your message contain content that is outside of\
        \ the 7-bit ASCII character range, you should encode that content to ensure\
        \ that recipients' email clients render the message properly.</p> </li> <li>\
        \ <p>The length of any single line of text in the message can't exceed 1,000\
        \ characters. This restriction is defined in <a href=\"https://tools.ietf.org/html/rfc5321\"\
        >RFC 5321</a>.</p> </li> </ul>"
      type: string
    RecommendationType:
      enum:
      - DKIM
      - DMARC
      - SPF
      - BIMI
      title: RecommendationType
      type: string
    RecommendationDescription:
      type: string
    RecommendationStatus:
      enum:
      - OPEN
      - FIXED
      title: RecommendationStatus
      type: string
    RecommendationImpact:
      enum:
      - LOW
      - HIGH
      title: RecommendationImpact
      type: string
    Recommendation:
      description: A recommendation generated for your account.
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "The resource affected by the recommendation, with values\
              \ like <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>."
          title: ResourceArn
        Type:
          allOf:
          - $ref: '#/components/schemas/RecommendationType'
          - description: "The recommendation type, with values like <code>DKIM</code>,\
              \ <code>SPF</code>, <code>DMARC</code> or <code>BIMI</code>."
          title: Type
        Description:
          allOf:
          - $ref: '#/components/schemas/RecommendationDescription'
          - description: The recommendation description / disambiguator - e.g. <code>DKIM1</code>
              and <code>DKIM2</code> are different recommendations about your DKIM
              setup.
          title: Description
        Status:
          allOf:
          - $ref: '#/components/schemas/RecommendationStatus'
          - description: "The recommendation status, with values like <code>OPEN</code>\
              \ or <code>FIXED</code>."
          title: Status
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The first time this issue was encountered and the recommendation
              was generated.
          title: CreatedTimestamp
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time the recommendation was updated.
          title: LastUpdatedTimestamp
        Impact:
          allOf:
          - $ref: '#/components/schemas/RecommendationImpact'
          - description: "The recommendation impact, with values like <code>HIGH</code>\
              \ or <code>LOW</code>."
          title: Impact
      title: Recommendation
      type: object
    RenderedEmailTemplate:
      description: The complete MIME message rendered by applying the data in the
        TemplateData parameter to the template specified in the TemplateName parameter.
      type: string
    ReplacementTemplate:
      description: An object which contains <code>ReplacementTemplateData</code> to
        be used for a specific <code>BulkEmailEntry</code>.
      properties:
        ReplacementTemplateData:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateData'
          - description: "A list of replacement values to apply to the template. This\
              \ parameter is a JSON object, typically consisting of key-value pairs\
              \ in which the keys correspond to replacement tags in the email template."
          title: ReplacementTemplateData
      title: ReplacementTemplate
      type: object
    ReviewStatus:
      enum:
      - PENDING
      - FAILED
      - GRANTED
      - DENIED
      title: ReviewStatus
      type: string
    SendBulkEmailRequest:
      description: "Represents a request to send email messages to multiple destinations\
        \ using Amazon SES. For more information, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html\"\
        >Amazon SES Developer Guide</a>."
      example:
        FromEmailAddress: ""
        FeedbackForwardingEmailAddress: ""
        FeedbackForwardingEmailAddressIdentityArn: ""
        ReplyToAddresses: ""
        FromEmailAddressIdentityArn: ""
        ConfigurationSetName: ""
        DefaultContent:
          Template:
            TemplateArn: ""
            TemplateData: ""
            TemplateName: ""
        BulkEmailEntries: ""
        DefaultEmailTags: ""
      properties:
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email address to use as the "From" address for the email.
              The address that you specify has to be verified.
        FromEmailAddressIdentityArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "<p>This parameter is used only for sending authorization.\
              \ It is the ARN of the identity that is associated with the sending\
              \ authorization policy that permits you to use the email address specified\
              \ in the <code>FromEmailAddress</code> parameter.</p> <p>For example,\
              \ if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com)\
              \ attaches a policy to it that authorizes you to use sender@example.com,\
              \ then you would specify the <code>FromEmailAddressIdentityArn</code>\
              \ to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and\
              \ the <code>FromEmailAddress</code> to be sender@example.com.</p> <p>For\
              \ more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\"\
              >Amazon SES Developer Guide</a>.</p>"
        ReplyToAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          - description: "The \"Reply-to\" email addresses for the message. When the\
              \ recipient replies to the message, each Reply-to address receives the\
              \ reply."
        FeedbackForwardingEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The address that you want bounce and complaint notifications
              to be sent to.
        FeedbackForwardingEmailAddressIdentityArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "<p>This parameter is used only for sending authorization.\
              \ It is the ARN of the identity that is associated with the sending\
              \ authorization policy that permits you to use the email address specified\
              \ in the <code>FeedbackForwardingEmailAddress</code> parameter.</p>\
              \ <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com)\
              \ attaches a policy to it that authorizes you to use feedback@example.com,\
              \ then you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code>\
              \ to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and\
              \ the <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p>\
              \ <p>For more information about sending authorization, see the <a href=\"\
              https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\"\
              >Amazon SES Developer Guide</a>.</p>"
        DefaultEmailTags:
          allOf:
          - $ref: '#/components/schemas/MessageTagList'
          - description: "A list of tags, in the form of name/value pairs, to apply\
              \ to an email that you send using the <code>SendEmail</code> operation.\
              \ Tags correspond to characteristics of the email that you define, so\
              \ that you can publish email sending events."
        DefaultContent:
          $ref: '#/components/schemas/SendBulkEmailRequest_DefaultContent'
        BulkEmailEntries:
          allOf:
          - $ref: '#/components/schemas/BulkEmailEntryList'
          - description: The list of bulk email entry objects.
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          - description: The name of the configuration set to use when sending the
              email.
      required:
      - BulkEmailEntries
      - DefaultContent
      title: SendBulkEmailRequest
      type: object
    SendCustomVerificationEmailRequest:
      description: Represents a request to send a custom verification email to a specified
        recipient.
      example:
        TemplateName: ""
        ConfigurationSetName: ""
        EmailAddress: ""
      properties:
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email address to verify.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          - description: The name of the custom verification email template to use
              when sending the verification email.
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          - description: Name of a configuration set to use when sending the verification
              email.
      required:
      - EmailAddress
      - TemplateName
      title: SendCustomVerificationEmailRequest
      type: object
    SendEmailRequest:
      description: "Represents a request to send a single formatted email using Amazon\
        \ SES. For more information, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-formatted.html\"\
        >Amazon SES Developer Guide</a>."
      example:
        FromEmailAddress: ""
        FeedbackForwardingEmailAddress: ""
        Destination:
          ToAddresses: ""
          CcAddresses: ""
          BccAddresses: ""
        EmailTags: ""
        FeedbackForwardingEmailAddressIdentityArn: ""
        Content:
          Raw:
            Data: ""
          Simple:
            Body:
              Html:
                Charset: ""
                Data: ""
              Text:
                Charset: ""
                Data: ""
            Subject:
              Charset: ""
              Data: ""
          Template:
            TemplateArn: ""
            TemplateData: ""
            TemplateName: ""
        ReplyToAddresses: ""
        FromEmailAddressIdentityArn: ""
        ConfigurationSetName: ""
        ListManagementOptions:
          ContactListName: ""
          TopicName: ""
      properties:
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: 'The email address to use as the "From" address for the email.
              The address that you specify has to be verified. '
        FromEmailAddressIdentityArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "<p>This parameter is used only for sending authorization.\
              \ It is the ARN of the identity that is associated with the sending\
              \ authorization policy that permits you to use the email address specified\
              \ in the <code>FromEmailAddress</code> parameter.</p> <p>For example,\
              \ if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com)\
              \ attaches a policy to it that authorizes you to use sender@example.com,\
              \ then you would specify the <code>FromEmailAddressIdentityArn</code>\
              \ to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and\
              \ the <code>FromEmailAddress</code> to be sender@example.com.</p> <p>For\
              \ more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\"\
              >Amazon SES Developer Guide</a>.</p> <p>For Raw emails, the <code>FromEmailAddressIdentityArn</code>\
              \ value overrides the X-SES-SOURCE-ARN and X-SES-FROM-ARN headers specified\
              \ in raw email message content.</p>"
        Destination:
          $ref: '#/components/schemas/SendEmailRequest_Destination'
        ReplyToAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          - description: "The \"Reply-to\" email addresses for the message. When the\
              \ recipient replies to the message, each Reply-to address receives the\
              \ reply."
        FeedbackForwardingEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The address that you want bounce and complaint notifications
              to be sent to.
        FeedbackForwardingEmailAddressIdentityArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "<p>This parameter is used only for sending authorization.\
              \ It is the ARN of the identity that is associated with the sending\
              \ authorization policy that permits you to use the email address specified\
              \ in the <code>FeedbackForwardingEmailAddress</code> parameter.</p>\
              \ <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com)\
              \ attaches a policy to it that authorizes you to use feedback@example.com,\
              \ then you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code>\
              \ to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and\
              \ the <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p>\
              \ <p>For more information about sending authorization, see the <a href=\"\
              https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\"\
              >Amazon SES Developer Guide</a>.</p>"
        Content:
          $ref: '#/components/schemas/SendEmailRequest_Content'
        EmailTags:
          allOf:
          - $ref: '#/components/schemas/MessageTagList'
          - description: "A list of tags, in the form of name/value pairs, to apply\
              \ to an email that you send using the <code>SendEmail</code> operation.\
              \ Tags correspond to characteristics of the email that you define, so\
              \ that you can publish email sending events. "
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          - description: The name of the configuration set to use when sending the
              email.
        ListManagementOptions:
          $ref: '#/components/schemas/SendEmailRequest_ListManagementOptions'
      required:
      - Content
      title: SendEmailRequest
      type: object
    SentLast24Hours:
      format: double
      type: number
    SuppressedDestinationAttributes:
      description: An object that contains additional attributes that are related
        an email address that is on the suppression list for your account.
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/OutboundMessageId'
          - description: The unique identifier of the email message that caused the
              email address to be added to the suppression list for your account.
          title: MessageId
        FeedbackId:
          allOf:
          - $ref: '#/components/schemas/FeedbackId'
          - description: A unique identifier that's generated when an email address
              is added to the suppression list for your account.
          title: FeedbackId
      title: SuppressedDestinationAttributes
      type: object
    SuppressedDestinationSummary:
      description: A summary that describes the suppressed email address.
      properties:
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email address that's on the suppression list for your
              account.
          title: EmailAddress
        Reason:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReason'
          - description: The reason that the address was added to the suppression
              list for your account.
          title: Reason
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time when the suppressed destination was last\
              \ updated, shown in Unix time format."
          title: LastUpdateTime
      required:
      - EmailAddress
      - LastUpdateTime
      - Reason
      title: SuppressedDestinationSummary
      type: object
    SuppressionListImportAction:
      description: "<p>The type of action to perform on the address. The following\
        \ are possible values:</p> <ul> <li> <p>PUT: add the addresses to the suppression\
        \ list.</p> </li> <li> <p>DELETE: remove the address from the suppression\
        \ list.</p> </li> </ul>"
      enum:
      - DELETE
      - PUT
      title: SuppressionListImportAction
      type: string
    TagValue:
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TagResourceRequest:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the resource that you want
              to add one or more tags to.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of the tags that you want to add to the resource.
              A tag consists of a required tag key (<code>Key</code>) and an associated
              tag value (<code>Value</code>). The maximum length of a tag key is 128
              characters. The maximum length of a tag value is 256 characters.
      required:
      - ResourceArn
      - Tags
      title: TagResourceRequest
      type: object
    TestRenderEmailTemplateRequest:
      description: '&gt;Represents a request to create a preview of the MIME content
        of an email when provided with a template and a set of replacement data.'
      example:
        TemplateData: ""
      properties:
        TemplateData:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateData'
          - description: "A list of replacement values to apply to the template. This\
              \ parameter is a JSON object, typically consisting of key-value pairs\
              \ in which the keys correspond to replacement tags in the email template."
      required:
      - TemplateData
      title: TestRenderEmailTemplateRequest
      type: object
    UseDefaultIfPreferenceUnavailable:
      type: boolean
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateConfigurationSetEventDestinationRequest:
      description: A request to change the settings for an event destination for a
        configuration set.
      example:
        EventDestination:
          SnsDestination:
            TopicArn: ""
          CloudWatchDestination:
            DimensionConfigurations: ""
          Enabled: ""
          MatchingEventTypes: ""
          PinpointDestination:
            ApplicationArn: ""
          KinesisFirehoseDestination:
            DeliveryStreamArn: ""
            IamRoleArn: ""
      properties:
        EventDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestinationRequest_EventDestination'
      required:
      - EventDestination
      title: UpdateConfigurationSetEventDestinationRequest
      type: object
    UpdateContactListRequest:
      example:
        Topics: ""
        Description: ""
      properties:
        Topics:
          allOf:
          - $ref: '#/components/schemas/Topics'
          - description: "An interest group, theme, or label within a list. A contact\
              \ list can have multiple topics."
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of what the contact list is about.
      title: UpdateContactListRequest
      type: object
    UpdateContactRequest:
      example:
        AttributesData: ""
        TopicPreferences: ""
        UnsubscribeAll: ""
      properties:
        TopicPreferences:
          allOf:
          - $ref: '#/components/schemas/TopicPreferenceList'
          - description: The contact's preference for being opted-in to or opted-out
              of a topic.
        UnsubscribeAll:
          allOf:
          - $ref: '#/components/schemas/UnsubscribeAll'
          - description: A boolean value status noting if the contact is unsubscribed
              from all contact list topics.
        AttributesData:
          allOf:
          - $ref: '#/components/schemas/AttributesData'
          - description: The attribute data attached to a contact.
      title: UpdateContactRequest
      type: object
    UpdateCustomVerificationEmailTemplateRequest:
      description: Represents a request to update an existing custom verification
        email template.
      example:
        FromEmailAddress: ""
        TemplateContent: ""
        SuccessRedirectionURL: ""
        FailureRedirectionURL: ""
        TemplateSubject: ""
      properties:
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          - description: The email address that the custom verification email is sent
              from.
        TemplateSubject:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateSubject'
          - description: The subject line of the custom verification email.
        TemplateContent:
          allOf:
          - $ref: '#/components/schemas/TemplateContent'
          - description: "The content of the custom verification email. The total\
              \ size of the email must be less than 10 MB. The message body may contain\
              \ HTML, with some limitations. For more information, see <a href=\"\
              https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom-faq\"\
              >Custom verification email frequently asked questions</a> in the <i>Amazon\
              \ SES Developer Guide</i>."
        SuccessRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/SuccessRedirectionURL'
          - description: The URL that the recipient of the verification email is sent
              to if his or her address is successfully verified.
        FailureRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/FailureRedirectionURL'
          - description: The URL that the recipient of the verification email is sent
              to if his or her address is not successfully verified.
      required:
      - FailureRedirectionURL
      - FromEmailAddress
      - SuccessRedirectionURL
      - TemplateContent
      - TemplateSubject
      title: UpdateCustomVerificationEmailTemplateRequest
      type: object
    UpdateEmailIdentityPolicyRequest:
      description: "Represents a request to update a sending authorization policy\
        \ for an identity. Sending authorization is an Amazon SES feature that enables\
        \ you to authorize other senders to use your identities. For information,\
        \ see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-identity-owner-tasks-management.html\"\
        >Amazon SES Developer Guide</a>."
      example:
        Policy: ""
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: "<p>The text of the policy in JSON format. The policy cannot\
              \ exceed 4 KB.</p> <p> For information about the syntax of sending authorization\
              \ policies, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html\"\
              >Amazon SES Developer Guide</a>.</p>"
      required:
      - Policy
      title: UpdateEmailIdentityPolicyRequest
      type: object
    UpdateEmailTemplateRequest:
      description: "Represents a request to update an email template. For more information,\
        \ see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html\"\
        >Amazon SES Developer Guide</a>."
      example:
        TemplateContent:
          Html: ""
          Text: ""
          Subject: ""
      properties:
        TemplateContent:
          $ref: '#/components/schemas/GetEmailTemplateResponse_TemplateContent'
      required:
      - TemplateContent
      title: UpdateEmailTemplateRequest
      type: object
    BatchGetMetricData_request:
      properties:
        Queries:
          description: A list of queries for metrics to be retrieved.
          items:
            $ref: '#/components/schemas/BatchGetMetricDataQuery'
          maxItems: 10
          minItems: 1
          title: Queries
          type: array
      required:
      - Queries
      title: BatchGetMetricData_request
      type: object
    CreateConfigurationSet_request_TrackingOptions:
      description: "<p>An object that defines the tracking options for a configuration\
        \ set. When you use the Amazon SES API v2 to send an email, it contains an\
        \ invisible image that's used to track when recipients open your email. If\
        \ your email contains links, those links are changed slightly in order to\
        \ track when recipients click them.</p> <p>These images and links include\
        \ references to a domain operated by Amazon Web Services. You can optionally\
        \ configure the Amazon SES to use a domain that you operate for these images\
        \ and links.</p>"
      properties:
        CustomRedirectDomain:
          allOf:
          - $ref: '#/components/schemas/CustomRedirectDomain'
          - description: The domain to use for tracking open and click events.
          title: CustomRedirectDomain
      title: CreateConfigurationSet_request_TrackingOptions
      type: object
    CreateConfigurationSet_request_DeliveryOptions:
      description: Used to associate a configuration set with a dedicated IP pool.
      properties:
        TlsPolicy:
          allOf:
          - $ref: '#/components/schemas/TlsPolicy'
          - description: "Specifies whether messages that use the configuration set\
              \ are required to use Transport Layer Security (TLS). If the value is\
              \ <code>Require</code>, messages are only delivered if a TLS connection\
              \ can be established. If the value is <code>Optional</code>, messages\
              \ can be delivered in plain text if a TLS connection can't be established."
          title: TlsPolicy
        SendingPoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          - description: The name of the dedicated IP pool to associate with the configuration
              set.
          title: SendingPoolName
      title: CreateConfigurationSet_request_DeliveryOptions
      type: object
    CreateConfigurationSet_request_ReputationOptions:
      description: 'Enable or disable collection of reputation metrics for emails
        that you send using this configuration set in the current Amazon Web Services
        Region. '
      properties:
        ReputationMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "If <code>true</code>, tracking of reputation metrics is\
              \ enabled for the configuration set. If <code>false</code>, tracking\
              \ of reputation metrics is disabled for the configuration set."
          title: ReputationMetricsEnabled
        LastFreshStart:
          allOf:
          - $ref: '#/components/schemas/LastFreshStart'
          - description: "The date and time (in Unix time) when the reputation metrics\
              \ were last given a fresh start. When your account is given a fresh\
              \ start, your reputation metrics are calculated starting from the date\
              \ of the fresh start."
          title: LastFreshStart
      title: CreateConfigurationSet_request_ReputationOptions
      type: object
    CreateConfigurationSet_request_SendingOptions:
      description: Used to enable or disable email sending for messages that use this
        configuration set in the current Amazon Web Services Region.
      properties:
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "If <code>true</code>, email sending is enabled for the configuration\
              \ set. If <code>false</code>, email sending is disabled for the configuration\
              \ set."
          title: SendingEnabled
      title: CreateConfigurationSet_request_SendingOptions
      type: object
    CreateConfigurationSet_request_SuppressionOptions:
      description: An object that contains information about the suppression list
        preferences for your account.
      properties:
        SuppressedReasons:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReasons'
          - description: <p>A list that contains the reasons that email addresses
              are automatically added to the suppression list for your account. This
              list can contain any or all of the following:</p> <ul> <li> <p> <code>COMPLAINT</code>
              – Amazon SES adds an email address to the suppression list for your
              account when a message sent to that address results in a complaint.</p>
              </li> <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address
              to the suppression list for your account when a message sent to that
              address results in a hard bounce.</p> </li> </ul>
          title: SuppressedReasons
      title: CreateConfigurationSet_request_SuppressionOptions
      type: object
    CreateConfigurationSet_request_VdmOptions_DashboardOptions:
      allOf:
      - $ref: '#/components/schemas/DashboardOptions'
      - description: Specifies additional settings for your VDM configuration as applicable
          to the Dashboard.
      example:
        EngagementMetrics: ""
      title: CreateConfigurationSet_request_VdmOptions_DashboardOptions
    CreateConfigurationSet_request_VdmOptions_GuardianOptions:
      allOf:
      - $ref: '#/components/schemas/GuardianOptions'
      - description: Specifies additional settings for your VDM configuration as applicable
          to the Guardian.
      example:
        OptimizedSharedDelivery: ""
      title: CreateConfigurationSet_request_VdmOptions_GuardianOptions
    CreateConfigurationSet_request_VdmOptions:
      description: An object that defines the VDM settings that apply to emails that
        you send using the configuration set.
      properties:
        DashboardOptions:
          $ref: '#/components/schemas/CreateConfigurationSet_request_VdmOptions_DashboardOptions'
        GuardianOptions:
          $ref: '#/components/schemas/CreateConfigurationSet_request_VdmOptions_GuardianOptions'
      title: CreateConfigurationSet_request_VdmOptions
      type: object
    CreateConfigurationSet_request:
      properties:
        ConfigurationSetName:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          title: ConfigurationSetName
          type: string
        TrackingOptions:
          $ref: '#/components/schemas/CreateConfigurationSet_request_TrackingOptions'
        DeliveryOptions:
          $ref: '#/components/schemas/CreateConfigurationSet_request_DeliveryOptions'
        ReputationOptions:
          $ref: '#/components/schemas/CreateConfigurationSet_request_ReputationOptions'
        SendingOptions:
          $ref: '#/components/schemas/CreateConfigurationSet_request_SendingOptions'
        Tags:
          description: An array of objects that define the tags (keys and values)
            to associate with the configuration set.
          items:
            $ref: '#/components/schemas/Tag'
          title: Tags
          type: array
        SuppressionOptions:
          $ref: '#/components/schemas/CreateConfigurationSet_request_SuppressionOptions'
        VdmOptions:
          $ref: '#/components/schemas/CreateConfigurationSet_request_VdmOptions'
      required:
      - ConfigurationSetName
      title: CreateConfigurationSet_request
      type: object
    CreateConfigurationSetEventDestination_request_EventDestination_KinesisFirehoseDestination:
      allOf:
      - $ref: '#/components/schemas/KinesisFirehoseDestination'
      - description: "An object that defines an Amazon Kinesis Data Firehose destination\
          \ for email events. You can use Amazon Kinesis Data Firehose to stream data\
          \ to other services, such as Amazon S3 and Amazon Redshift."
      example:
        DeliveryStreamArn: ""
        IamRoleArn: ""
      title: CreateConfigurationSetEventDestination_request_EventDestination_KinesisFirehoseDestination
    CreateConfigurationSetEventDestination_request_EventDestination_CloudWatchDestination:
      allOf:
      - $ref: '#/components/schemas/CloudWatchDestination'
      - description: An object that defines an Amazon CloudWatch destination for email
          events. You can use Amazon CloudWatch to monitor and gain insights on your
          email sending metrics.
      example:
        DimensionConfigurations: ""
      title: CreateConfigurationSetEventDestination_request_EventDestination_CloudWatchDestination
    CreateConfigurationSetEventDestination_request_EventDestination_SnsDestination:
      allOf:
      - $ref: '#/components/schemas/SnsDestination'
      - description: An object that defines an Amazon SNS destination for email events.
          You can use Amazon SNS to send notification when certain email events occur.
      example:
        TopicArn: ""
      title: CreateConfigurationSetEventDestination_request_EventDestination_SnsDestination
    CreateConfigurationSetEventDestination_request_EventDestination_PinpointDestination:
      allOf:
      - $ref: '#/components/schemas/PinpointDestination'
      - description: "An object that defines an Amazon Pinpoint project destination\
          \ for email events. You can send email event data to a Amazon Pinpoint project\
          \ to view metrics using the Transactional Messaging dashboards that are\
          \ built in to Amazon Pinpoint. For more information, see <a href=\"https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html\"\
          >Transactional Messaging Charts</a> in the <i>Amazon Pinpoint User Guide</i>."
      example:
        ApplicationArn: ""
      title: CreateConfigurationSetEventDestination_request_EventDestination_PinpointDestination
    CreateConfigurationSetEventDestination_request_EventDestination:
      description: "An object that defines the event destination. Specifically, it\
        \ defines which services receive events from emails sent using the configuration\
        \ set that the event destination is associated with. Also defines the types\
        \ of events that are sent to the event destination."
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: "<p>If <code>true</code>, the event destination is enabled.\
              \ When the event destination is enabled, the specified event types are\
              \ sent to the destinations in this <code>EventDestinationDefinition</code>.</p>\
              \ <p>If <code>false</code>, the event destination is disabled. When\
              \ the event destination is disabled, events aren't sent to the specified\
              \ destinations.</p>"
          title: Enabled
        MatchingEventTypes:
          allOf:
          - $ref: '#/components/schemas/EventTypes'
          - description: An array that specifies which events the Amazon SES API v2
              should send to the destinations in this <code>EventDestinationDefinition</code>.
          title: MatchingEventTypes
        KinesisFirehoseDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_KinesisFirehoseDestination'
        CloudWatchDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_CloudWatchDestination'
        SnsDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_SnsDestination'
        PinpointDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination_PinpointDestination'
      title: CreateConfigurationSetEventDestination_request_EventDestination
      type: object
    CreateConfigurationSetEventDestination_request:
      properties:
        EventDestinationName:
          description: "<p>The name of an event destination.</p> <p> <i>Events</i>\
            \ include message sends, deliveries, opens, clicks, bounces, and complaints.\
            \ <i>Event destinations</i> are places that you can send information about\
            \ these events to. For example, you can send event data to Amazon SNS\
            \ to receive notifications when you receive bounces or complaints, or\
            \ you can use Amazon Kinesis Data Firehose to stream data to Amazon S3\
            \ for long-term storage.</p>"
          title: EventDestinationName
          type: string
        EventDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination'
      required:
      - EventDestination
      - EventDestinationName
      title: CreateConfigurationSetEventDestination_request
      type: object
    ListContacts_request_Filter_TopicFilter:
      allOf:
      - $ref: '#/components/schemas/TopicFilter'
      - description: Used for filtering by a specific topic preference.
      example:
        UseDefaultIfPreferenceUnavailable: ""
        TopicName: ""
      title: ListContacts_request_Filter_TopicFilter
    ListContacts_request_Filter:
      description: A filter that can be applied to a list of contacts.
      properties:
        FilteredStatus:
          allOf:
          - $ref: '#/components/schemas/SubscriptionStatus'
          - description: "The status by which you are filtering: <code>OPT_IN</code>\
              \ or <code>OPT_OUT</code>."
          title: FilteredStatus
        TopicFilter:
          $ref: '#/components/schemas/ListContacts_request_Filter_TopicFilter'
      title: ListContacts_request_Filter
      type: object
    ListContacts_request:
      properties:
        Filter:
          $ref: '#/components/schemas/ListContacts_request_Filter'
      title: ListContacts_request
      type: object
    CreateContact_request:
      properties:
        EmailAddress:
          description: The contact's email address.
          title: EmailAddress
          type: string
        TopicPreferences:
          description: The contact's preferences for being opted-in to or opted-out
            of topics.
          items:
            $ref: '#/components/schemas/TopicPreference'
          title: TopicPreferences
          type: array
        UnsubscribeAll:
          description: A boolean value status noting if the contact is unsubscribed
            from all contact list topics.
          title: UnsubscribeAll
          type: boolean
        AttributesData:
          description: The attribute data attached to a contact.
          title: AttributesData
          type: string
      required:
      - EmailAddress
      title: CreateContact_request
      type: object
    CreateContactList_request:
      properties:
        ContactListName:
          description: The name of the contact list.
          title: ContactListName
          type: string
        Topics:
          description: "An interest group, theme, or label within a list. A contact\
            \ list can have multiple topics."
          items:
            $ref: '#/components/schemas/Topic'
          title: Topics
          type: array
        Description:
          description: A description of what the contact list is about.
          title: Description
          type: string
        Tags:
          description: The tags associated with a contact list.
          items:
            $ref: '#/components/schemas/Tag'
          title: Tags
          type: array
      required:
      - ContactListName
      title: CreateContactList_request
      type: object
    CreateCustomVerificationEmailTemplate_request:
      properties:
        TemplateName:
          description: The name of the template. You will refer to this name when
            you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code>
            operations.
          minLength: 1
          title: TemplateName
          type: string
        FromEmailAddress:
          description: The email address that the custom verification email is sent
            from.
          title: FromEmailAddress
          type: string
        TemplateSubject:
          description: The subject line of the email.
          title: TemplateSubject
          type: string
        TemplateContent:
          description: The content of the custom verification email template.
          title: TemplateContent
          type: string
        SuccessRedirectionURL:
          description: The URL that the recipient of the verification email is sent
            to if his or her address is successfully verified.
          title: SuccessRedirectionURL
          type: string
        FailureRedirectionURL:
          description: The URL that the recipient of the verification email is sent
            to if his or her address is not successfully verified.
          title: FailureRedirectionURL
          type: string
      required:
      - FailureRedirectionURL
      - FromEmailAddress
      - SuccessRedirectionURL
      - TemplateContent
      - TemplateName
      - TemplateSubject
      title: CreateCustomVerificationEmailTemplate_request
      type: object
    CreateDedicatedIpPool_request:
      properties:
        PoolName:
          description: The name of a dedicated IP pool.
          title: PoolName
          type: string
        Tags:
          description: An object that defines the tags (keys and values) that you
            want to associate with the pool.
          items:
            $ref: '#/components/schemas/Tag'
          title: Tags
          type: array
        ScalingMode:
          description: The type of scaling mode.
          enum:
          - STANDARD
          - MANAGED
          title: ScalingMode
          type: string
      required:
      - PoolName
      title: CreateDedicatedIpPool_request
      type: object
    CreateDeliverabilityTestReport_request_Content_Simple:
      allOf:
      - $ref: '#/components/schemas/Message'
      - description: The simple email message. The message consists of a subject and
          a message body.
      example:
        Body:
          Html:
            Charset: ""
            Data: ""
          Text:
            Charset: ""
            Data: ""
        Subject:
          Charset: ""
          Data: ""
      title: CreateDeliverabilityTestReport_request_Content_Simple
    CreateDeliverabilityTestReport_request_Content_Raw:
      allOf:
      - $ref: '#/components/schemas/RawMessage'
      - description: "<p>The raw email message. The message has to meet the following\
          \ criteria:</p> <ul> <li> <p>The message has to contain a header and a body,\
          \ separated by one blank line.</p> </li> <li> <p>All of the required header\
          \ fields must be present in the message.</p> </li> <li> <p>Each part of\
          \ a multipart MIME message must be formatted properly.</p> </li> <li> <p>If\
          \ you include attachments, they must be in a file format that the Amazon\
          \ SES API v2 supports. </p> </li> <li> <p>The entire message must be Base64\
          \ encoded.</p> </li> <li> <p>If any of the MIME parts in your message contain\
          \ content that is outside of the 7-bit ASCII character range, you should\
          \ encode that content to ensure that recipients' email clients render the\
          \ message properly.</p> </li> <li> <p>The length of any single line of text\
          \ in the message can't exceed 1,000 characters. This restriction is defined\
          \ in <a href=\"https://tools.ietf.org/html/rfc5321\">RFC 5321</a>.</p> </li>\
          \ </ul>"
      example:
        Data: ""
      title: CreateDeliverabilityTestReport_request_Content_Raw
    CreateDeliverabilityTestReport_request_Content_Template:
      allOf:
      - $ref: '#/components/schemas/Template'
      - description: The template to use for the email message.
      example:
        TemplateArn: ""
        TemplateData: ""
        TemplateName: ""
      title: CreateDeliverabilityTestReport_request_Content_Template
    CreateDeliverabilityTestReport_request_Content:
      description: "An object that defines the entire content of the email, including\
        \ the message headers and the body content. You can create a simple email\
        \ message, in which you specify the subject and the text and HTML versions\
        \ of the message body. You can also create raw messages, in which you specify\
        \ a complete MIME-formatted message. Raw messages can include attachments\
        \ and custom headers."
      properties:
        Simple:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content_Simple'
        Raw:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content_Raw'
        Template:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content_Template'
      title: CreateDeliverabilityTestReport_request_Content
      type: object
    CreateDeliverabilityTestReport_request:
      properties:
        ReportName:
          description: A name that helps you identify a report generated by the Deliverability
            dashboard.
          title: ReportName
          type: string
        FromEmailAddress:
          description: The email address that the predictive inbox placement test
            email was sent from.
          title: FromEmailAddress
          type: string
        Content:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content'
        Tags:
          description: An array of objects that define the tags (keys and values)
            that you want to associate with the predictive inbox placement test.
          items:
            $ref: '#/components/schemas/Tag'
          title: Tags
          type: array
      required:
      - Content
      - FromEmailAddress
      title: CreateDeliverabilityTestReport_request
      type: object
    CreateEmailIdentity_request_DkimSigningAttributes:
      description: "An object that contains configuration for Bring Your Own DKIM\
        \ (BYODKIM), or, for Easy DKIM"
      properties:
        DomainSigningSelector:
          allOf:
          - $ref: '#/components/schemas/Selector'
          - description: "[Bring Your Own DKIM] A string that's used to identify a\
              \ public key in the DNS configuration for a domain."
          title: DomainSigningSelector
        DomainSigningPrivateKey:
          allOf:
          - $ref: '#/components/schemas/PrivateKey'
          - description: "<p>[Bring Your Own DKIM] A private key that's used to generate\
              \ a DKIM signature.</p> <p>The private key must use 1024 or 2048-bit\
              \ RSA encryption, and must be encoded using base64 encoding.</p>"
          title: DomainSigningPrivateKey
        NextSigningKeyLength:
          allOf:
          - $ref: '#/components/schemas/DkimSigningKeyLength'
          - description: "[Easy DKIM] The key length of the future DKIM key pair to\
              \ be generated. This can be changed at most once per day."
          title: NextSigningKeyLength
      title: CreateEmailIdentity_request_DkimSigningAttributes
      type: object
    CreateEmailIdentity_request:
      properties:
        EmailIdentity:
          description: The email address or domain to verify.
          minLength: 1
          title: EmailIdentity
          type: string
        Tags:
          description: An array of objects that define the tags (keys and values)
            to associate with the email identity.
          items:
            $ref: '#/components/schemas/Tag'
          title: Tags
          type: array
        DkimSigningAttributes:
          $ref: '#/components/schemas/CreateEmailIdentity_request_DkimSigningAttributes'
        ConfigurationSetName:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          title: ConfigurationSetName
          type: string
      required:
      - EmailIdentity
      title: CreateEmailIdentity_request
      type: object
    UpdateEmailIdentityPolicy_request:
      properties:
        Policy:
          description: "<p>The text of the policy in JSON format. The policy cannot\
            \ exceed 4 KB.</p> <p>For information about the syntax of sending authorization\
            \ policies, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\"\
            >Amazon SES Developer Guide</a>.</p>"
          minLength: 1
          title: Policy
          type: string
      required:
      - Policy
      title: UpdateEmailIdentityPolicy_request
      type: object
    CreateEmailTemplate_request_TemplateContent:
      description: "The content of the email, composed of a subject line, an HTML\
        \ part, and a text-only part."
      properties:
        Subject:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateSubject'
          - description: The subject line of the email.
          title: Subject
        Text:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateText'
          - description: The email body that will be visible to recipients whose email
              clients do not display HTML.
          title: Text
        Html:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateHtml'
          - description: The HTML body of the email.
          title: Html
      title: CreateEmailTemplate_request_TemplateContent
      type: object
    CreateEmailTemplate_request:
      properties:
        TemplateName:
          description: The name of the template. You will refer to this name when
            you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code>
            operations.
          minLength: 1
          title: TemplateName
          type: string
        TemplateContent:
          $ref: '#/components/schemas/CreateEmailTemplate_request_TemplateContent'
      required:
      - TemplateContent
      - TemplateName
      title: CreateEmailTemplate_request
      type: object
    ListImportJobs_request:
      properties:
        ImportDestinationType:
          description: "The destination of the import job, which can be used to list\
            \ import jobs that have a certain <code>ImportDestinationType</code>."
          enum:
          - SUPPRESSION_LIST
          - CONTACT_LIST
          title: ImportDestinationType
          type: string
      title: ListImportJobs_request
      type: object
    CreateImportJob_request_ImportDestination_SuppressionListDestination:
      allOf:
      - $ref: '#/components/schemas/SuppressionListDestination'
      - description: An object that contains the action of the import job towards
          suppression list.
      example:
        SuppressionListImportAction: ""
      title: CreateImportJob_request_ImportDestination_SuppressionListDestination
    CreateImportJob_request_ImportDestination_ContactListDestination:
      allOf:
      - $ref: '#/components/schemas/ContactListDestination'
      - description: An object that contains the action of the import job towards
          a contact list.
      example:
        ContactListName: ""
        ContactListImportAction: ""
      title: CreateImportJob_request_ImportDestination_ContactListDestination
    CreateImportJob_request_ImportDestination:
      description: An object that contains details about the resource destination
        the import job is going to target.
      properties:
        SuppressionListDestination:
          $ref: '#/components/schemas/CreateImportJob_request_ImportDestination_SuppressionListDestination'
        ContactListDestination:
          $ref: '#/components/schemas/CreateImportJob_request_ImportDestination_ContactListDestination'
      title: CreateImportJob_request_ImportDestination
      type: object
    CreateImportJob_request_ImportDataSource:
      description: An object that contains details about the data source of the import
        job.
      properties:
        S3Url:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: An Amazon S3 URL in the format s3://<i>&lt;bucket_name&gt;</i>/<i>&lt;object&gt;</i>.
          title: S3Url
        DataFormat:
          allOf:
          - $ref: '#/components/schemas/DataFormat'
          - description: The data format of the import job's data source.
          title: DataFormat
      title: CreateImportJob_request_ImportDataSource
      type: object
    CreateImportJob_request:
      properties:
        ImportDestination:
          $ref: '#/components/schemas/CreateImportJob_request_ImportDestination'
        ImportDataSource:
          $ref: '#/components/schemas/CreateImportJob_request_ImportDataSource'
      required:
      - ImportDataSource
      - ImportDestination
      title: CreateImportJob_request
      type: object
    UpdateConfigurationSetEventDestination_request:
      properties:
        EventDestination:
          $ref: '#/components/schemas/CreateConfigurationSetEventDestination_request_EventDestination'
      required:
      - EventDestination
      title: UpdateConfigurationSetEventDestination_request
      type: object
    UpdateContact_request:
      properties:
        TopicPreferences:
          description: The contact's preference for being opted-in to or opted-out
            of a topic.
          items:
            $ref: '#/components/schemas/TopicPreference'
          title: TopicPreferences
          type: array
        UnsubscribeAll:
          description: A boolean value status noting if the contact is unsubscribed
            from all contact list topics.
          title: UnsubscribeAll
          type: boolean
        AttributesData:
          description: The attribute data attached to a contact.
          title: AttributesData
          type: string
      title: UpdateContact_request
      type: object
    UpdateContactList_request:
      properties:
        Topics:
          description: "An interest group, theme, or label within a list. A contact\
            \ list can have multiple topics."
          items:
            $ref: '#/components/schemas/Topic'
          title: Topics
          type: array
        Description:
          description: A description of what the contact list is about.
          title: Description
          type: string
      title: UpdateContactList_request
      type: object
    UpdateCustomVerificationEmailTemplate_request:
      properties:
        FromEmailAddress:
          description: The email address that the custom verification email is sent
            from.
          title: FromEmailAddress
          type: string
        TemplateSubject:
          description: The subject line of the email.
          title: TemplateSubject
          type: string
        TemplateContent:
          description: The content of the custom verification email template.
          title: TemplateContent
          type: string
        SuccessRedirectionURL:
          description: The URL that the recipient of the verification email is sent
            to if his or her address is successfully verified.
          title: SuccessRedirectionURL
          type: string
        FailureRedirectionURL:
          description: The URL that the recipient of the verification email is sent
            to if his or her address is not successfully verified.
          title: FailureRedirectionURL
          type: string
      required:
      - FailureRedirectionURL
      - FromEmailAddress
      - SuccessRedirectionURL
      - TemplateContent
      - TemplateSubject
      title: UpdateCustomVerificationEmailTemplate_request
      type: object
    UpdateEmailTemplate_request:
      properties:
        TemplateContent:
          $ref: '#/components/schemas/CreateEmailTemplate_request_TemplateContent'
      required:
      - TemplateContent
      title: UpdateEmailTemplate_request
      type: object
    PutDeliverabilityDashboardOption_request:
      properties:
        DashboardEnabled:
          description: "Specifies whether to enable the Deliverability dashboard.\
            \ To enable the dashboard, set this value to <code>true</code>."
          title: DashboardEnabled
          type: boolean
        SubscribedDomains:
          description: "An object that contains information about the Deliverability\
            \ dashboard subscription for a verified domain that you use to send email\
            \ and currently has an active Deliverability dashboard subscription. If\
            \ a Deliverability dashboard subscription is active for a domain, you\
            \ gain access to reputation, inbox placement, and other metrics for the\
            \ domain."
          items:
            $ref: '#/components/schemas/DomainDeliverabilityTrackingOption'
          title: SubscribedDomains
          type: array
      required:
      - DashboardEnabled
      title: PutDeliverabilityDashboardOption_request
      type: object
    ListRecommendations_request:
      properties:
        Filter:
          additionalProperties:
            $ref: '#/components/schemas/ListRecommendationFilterValue'
          description: An object that contains mapping between <code>ListRecommendationsFilterKey</code>
            and <code>ListRecommendationFilterValue</code> to filter by.
          maxProperties: 2
          minProperties: 1
          title: Filter
          type: object
        NextToken:
          description: A token returned from a previous call to <code>ListRecommendations</code>
            to indicate the position in the list of recommendations.
          title: NextToken
          type: string
        PageSize:
          description: "<p>The number of results to show in a single call to <code>ListRecommendations</code>.\
            \ If the number of results is larger than the number you specified in\
            \ this parameter, then the response includes a <code>NextToken</code>\
            \ element, which you can use to obtain additional results.</p> <p>The\
            \ value you specify has to be at least 1, and can be no more than 100.</p>"
          title: PageSize
          type: integer
      title: ListRecommendations_request
      type: object
    PutSuppressedDestination_request:
      properties:
        EmailAddress:
          description: The email address that should be added to the suppression list
            for your account.
          title: EmailAddress
          type: string
        Reason:
          description: <p>The reason that the address was added to the suppression
            list for your account. The value can be one of the following:</p> <ul>
            <li> <p> <code>COMPLAINT</code> – Amazon SES added an email address to
            the suppression list for your account because a message sent to that address
            results in a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon
            SES added an email address to the suppression list for your account because
            a message sent to that address results in a hard bounce.</p> </li> </ul>
          enum:
          - BOUNCE
          - COMPLAINT
          title: Reason
          type: string
      required:
      - EmailAddress
      - Reason
      title: PutSuppressedDestination_request
      type: object
    PutAccountDedicatedIpWarmupAttributes_request:
      properties:
        AutoWarmupEnabled:
          description: "Enables or disables the automatic warm-up feature for dedicated\
            \ IP addresses that are associated with your Amazon SES account in the\
            \ current Amazon Web Services Region. Set to <code>true</code> to enable\
            \ the automatic warm-up feature, or set to <code>false</code> to disable\
            \ it."
          title: AutoWarmupEnabled
          type: boolean
      title: PutAccountDedicatedIpWarmupAttributes_request
      type: object
    PutAccountDetails_request:
      properties:
        MailType:
          description: The type of email your account will send.
          enum:
          - MARKETING
          - TRANSACTIONAL
          title: MailType
          type: string
        WebsiteURL:
          description: The URL of your website. This information helps us better understand
            the type of content that you plan to send.
          format: password
          maxLength: 1000
          minLength: 1
          pattern: "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"
          title: WebsiteURL
          type: string
        ContactLanguage:
          description: The language you would prefer to be contacted with.
          enum:
          - EN
          - JA
          title: ContactLanguage
          type: string
        UseCaseDescription:
          description: A description of the types of email that you plan to send.
          format: password
          maxLength: 5000
          minLength: 1
          title: UseCaseDescription
          type: string
        AdditionalContactEmailAddresses:
          description: Additional email addresses that you would like to be notified
            regarding Amazon SES matters.
          items:
            $ref: '#/components/schemas/AdditionalContactEmailAddress'
          maxItems: 4
          minItems: 1
          title: AdditionalContactEmailAddresses
          type: array
        ProductionAccessEnabled:
          description: "<p>Indicates whether or not your account should have production\
            \ access in the current Amazon Web Services Region.</p> <p>If the value\
            \ is <code>false</code>, then your account is in the <i>sandbox</i>. When\
            \ your account is in the sandbox, you can only send email to verified\
            \ identities. Additionally, the maximum number of emails you can send\
            \ in a 24-hour period (your sending quota) is 200, and the maximum number\
            \ of emails you can send per second (your maximum sending rate) is 1.</p>\
            \ <p>If the value is <code>true</code>, then your account has production\
            \ access. When your account has production access, you can send email\
            \ to any address. The sending quota and maximum sending rate for your\
            \ account vary based on your specific use case.</p>"
          title: ProductionAccessEnabled
          type: boolean
      required:
      - MailType
      - UseCaseDescription
      - WebsiteURL
      title: PutAccountDetails_request
      type: object
    PutAccountSendingAttributes_request:
      properties:
        SendingEnabled:
          description: "<p>Enables or disables your account's ability to send email.\
            \ Set to <code>true</code> to enable email sending, or set to <code>false</code>\
            \ to disable email sending.</p> <note> <p>If Amazon Web Services paused\
            \ your account's ability to send email, you can't use this operation to\
            \ resume your account's ability to send email.</p> </note>"
          title: SendingEnabled
          type: boolean
      title: PutAccountSendingAttributes_request
      type: object
    PutAccountSuppressionAttributes_request:
      properties:
        SuppressedReasons:
          description: <p>A list that contains the reasons that email addresses will
            be automatically added to the suppression list for your account. This
            list can contain any or all of the following:</p> <ul> <li> <p> <code>COMPLAINT</code>
            – Amazon SES adds an email address to the suppression list for your account
            when a message sent to that address results in a complaint.</p> </li>
            <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the
            suppression list for your account when a message sent to that address
            results in a hard bounce.</p> </li> </ul>
          items:
            $ref: '#/components/schemas/SuppressionListReason'
          title: SuppressedReasons
          type: array
      title: PutAccountSuppressionAttributes_request
      type: object
    PutAccountVdmAttributes_request_VdmAttributes_DashboardAttributes:
      allOf:
      - $ref: '#/components/schemas/DashboardAttributes'
      - description: Specifies additional settings for your VDM configuration as applicable
          to the Dashboard.
      example:
        EngagementMetrics: ""
      title: PutAccountVdmAttributes_request_VdmAttributes_DashboardAttributes
    PutAccountVdmAttributes_request_VdmAttributes_GuardianAttributes:
      allOf:
      - $ref: '#/components/schemas/GuardianAttributes'
      - description: Specifies additional settings for your VDM configuration as applicable
          to the Guardian.
      example:
        OptimizedSharedDelivery: ""
      title: PutAccountVdmAttributes_request_VdmAttributes_GuardianAttributes
    PutAccountVdmAttributes_request_VdmAttributes:
      description: The VDM attributes that apply to your Amazon SES account.
      properties:
        VdmEnabled:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          - description: <p>Specifies the status of your VDM configuration. Can be
              one of the following:</p> <ul> <li> <p> <code>ENABLED</code> – Amazon
              SES enables VDM for your account.</p> </li> <li> <p> <code>DISABLED</code>
              – Amazon SES disables VDM for your account.</p> </li> </ul>
          title: VdmEnabled
        DashboardAttributes:
          $ref: '#/components/schemas/PutAccountVdmAttributes_request_VdmAttributes_DashboardAttributes'
        GuardianAttributes:
          $ref: '#/components/schemas/PutAccountVdmAttributes_request_VdmAttributes_GuardianAttributes'
      title: PutAccountVdmAttributes_request_VdmAttributes
      type: object
    PutAccountVdmAttributes_request:
      properties:
        VdmAttributes:
          $ref: '#/components/schemas/PutAccountVdmAttributes_request_VdmAttributes'
      required:
      - VdmAttributes
      title: PutAccountVdmAttributes_request
      type: object
    PutConfigurationSetDeliveryOptions_request:
      properties:
        TlsPolicy:
          description: "Specifies whether messages that use the configuration set\
            \ are required to use Transport Layer Security (TLS). If the value is\
            \ <code>Require</code>, messages are only delivered if a TLS connection\
            \ can be established. If the value is <code>Optional</code>, messages\
            \ can be delivered in plain text if a TLS connection can't be established."
          enum:
          - REQUIRE
          - OPTIONAL
          title: TlsPolicy
          type: string
        SendingPoolName:
          description: The name of the dedicated IP pool to associate with the configuration
            set.
          title: SendingPoolName
          type: string
      title: PutConfigurationSetDeliveryOptions_request
      type: object
    PutConfigurationSetReputationOptions_request:
      properties:
        ReputationMetricsEnabled:
          description: "If <code>true</code>, tracking of reputation metrics is enabled\
            \ for the configuration set. If <code>false</code>, tracking of reputation\
            \ metrics is disabled for the configuration set."
          title: ReputationMetricsEnabled
          type: boolean
      title: PutConfigurationSetReputationOptions_request
      type: object
    PutConfigurationSetSendingOptions_request:
      properties:
        SendingEnabled:
          description: "If <code>true</code>, email sending is enabled for the configuration\
            \ set. If <code>false</code>, email sending is disabled for the configuration\
            \ set."
          title: SendingEnabled
          type: boolean
      title: PutConfigurationSetSendingOptions_request
      type: object
    PutConfigurationSetSuppressionOptions_request:
      properties:
        SuppressedReasons:
          description: <p>A list that contains the reasons that email addresses are
            automatically added to the suppression list for your account. This list
            can contain any or all of the following:</p> <ul> <li> <p> <code>COMPLAINT</code>
            – Amazon SES adds an email address to the suppression list for your account
            when a message sent to that address results in a complaint.</p> </li>
            <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the
            suppression list for your account when a message sent to that address
            results in a hard bounce.</p> </li> </ul>
          items:
            $ref: '#/components/schemas/SuppressionListReason'
          title: SuppressedReasons
          type: array
      title: PutConfigurationSetSuppressionOptions_request
      type: object
    PutConfigurationSetTrackingOptions_request:
      properties:
        CustomRedirectDomain:
          description: The domain to use for tracking open and click events.
          title: CustomRedirectDomain
          type: string
      title: PutConfigurationSetTrackingOptions_request
      type: object
    PutConfigurationSetVdmOptions_request:
      properties:
        VdmOptions:
          $ref: '#/components/schemas/CreateConfigurationSet_request_VdmOptions'
      title: PutConfigurationSetVdmOptions_request
      type: object
    PutDedicatedIpInPool_request:
      properties:
        DestinationPoolName:
          description: The name of a dedicated IP pool.
          title: DestinationPoolName
          type: string
      required:
      - DestinationPoolName
      title: PutDedicatedIpInPool_request
      type: object
    PutDedicatedIpPoolScalingAttributes_request:
      properties:
        ScalingMode:
          description: <p>The scaling mode to apply to the dedicated IP pool.</p>
            <note> <p>Changing the scaling mode from <code>MANAGED</code> to <code>STANDARD</code>
            is not supported.</p> </note>
          enum:
          - STANDARD
          - MANAGED
          title: ScalingMode
          type: string
      required:
      - ScalingMode
      title: PutDedicatedIpPoolScalingAttributes_request
      type: object
    PutDedicatedIpWarmupAttributes_request:
      properties:
        WarmupPercentage:
          description: The warm-up percentage that you want to associate with the
            dedicated IP address.
          title: WarmupPercentage
          type: integer
      required:
      - WarmupPercentage
      title: PutDedicatedIpWarmupAttributes_request
      type: object
    PutEmailIdentityConfigurationSetAttributes_request:
      properties:
        ConfigurationSetName:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          title: ConfigurationSetName
          type: string
      title: PutEmailIdentityConfigurationSetAttributes_request
      type: object
    PutEmailIdentityDkimAttributes_request:
      properties:
        SigningEnabled:
          description: "<p>Sets the DKIM signing configuration for the identity.</p>\
            \ <p>When you set this value <code>true</code>, then the messages that\
            \ are sent from the identity are signed using DKIM. If you set this value\
            \ to <code>false</code>, your messages are sent without DKIM signing.</p>"
          title: SigningEnabled
          type: boolean
      title: PutEmailIdentityDkimAttributes_request
      type: object
    PutEmailIdentityDkimSigningAttributes_request:
      properties:
        SigningAttributesOrigin:
          description: <p>The method to use to configure DKIM for the identity. There
            are the following possible values:</p> <ul> <li> <p> <code>AWS_SES</code>
            – Configure DKIM for the identity by using <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy
            DKIM</a>.</p> </li> <li> <p> <code>EXTERNAL</code> – Configure DKIM for
            the identity by using Bring Your Own DKIM (BYODKIM).</p> </li> </ul>
          enum:
          - AWS_SES
          - EXTERNAL
          title: SigningAttributesOrigin
          type: string
        SigningAttributes:
          $ref: '#/components/schemas/CreateEmailIdentity_request_DkimSigningAttributes'
      required:
      - SigningAttributesOrigin
      title: PutEmailIdentityDkimSigningAttributes_request
      type: object
    PutEmailIdentityFeedbackAttributes_request:
      properties:
        EmailForwardingEnabled:
          description: "<p>Sets the feedback forwarding configuration for the identity.</p>\
            \ <p>If the value is <code>true</code>, you receive email notifications\
            \ when bounce or complaint events occur. These notifications are sent\
            \ to the address that you specified in the <code>Return-Path</code> header\
            \ of the original email.</p> <p>You're required to have a method of tracking\
            \ bounces and complaints. If you haven't set up another mechanism for\
            \ receiving bounce or complaint notifications (for example, by setting\
            \ up an event destination), you receive an email notification when these\
            \ events occur (even if this setting is disabled).</p>"
          title: EmailForwardingEnabled
          type: boolean
      title: PutEmailIdentityFeedbackAttributes_request
      type: object
    PutEmailIdentityMailFromAttributes_request:
      properties:
        MailFromDomain:
          description: The domain to use as a MAIL FROM domain.
          title: MailFromDomain
          type: string
        BehaviorOnMxFailure:
          description: "<p>The action to take if the required MX record can't be found\
            \ when you send an email. When you set this value to <code>UseDefaultValue</code>,\
            \ the mail is sent using <i>amazonses.com</i> as the MAIL FROM domain.\
            \ When you set this value to <code>RejectMessage</code>, the Amazon SES\
            \ API v2 returns a <code>MailFromDomainNotVerified</code> error, and doesn't\
            \ attempt to deliver the email.</p> <p>These behaviors are taken when\
            \ the custom MAIL FROM domain configuration is in the <code>Pending</code>,\
            \ <code>Failed</code>, and <code>TemporaryFailure</code> states.</p>"
          enum:
          - USE_DEFAULT_VALUE
          - REJECT_MESSAGE
          title: BehaviorOnMxFailure
          type: string
      title: PutEmailIdentityMailFromAttributes_request
      type: object
    SendBulkEmail_request_DefaultContent_Template:
      allOf:
      - $ref: '#/components/schemas/Template'
      - description: The template to use for the bulk email message.
      example:
        TemplateArn: ""
        TemplateData: ""
        TemplateName: ""
      title: SendBulkEmail_request_DefaultContent_Template
    SendBulkEmail_request_DefaultContent:
      description: An object that contains the body of the message. You can specify
        a template message.
      properties:
        Template:
          $ref: '#/components/schemas/SendBulkEmail_request_DefaultContent_Template'
      title: SendBulkEmail_request_DefaultContent
      type: object
    SendBulkEmail_request:
      properties:
        FromEmailAddress:
          description: The email address to use as the "From" address for the email.
            The address that you specify has to be verified.
          title: FromEmailAddress
          type: string
        FromEmailAddressIdentityArn:
          description: "<p>This parameter is used only for sending authorization.\
            \ It is the ARN of the identity that is associated with the sending authorization\
            \ policy that permits you to use the email address specified in the <code>FromEmailAddress</code>\
            \ parameter.</p> <p>For example, if the owner of example.com (which has\
            \ ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches\
            \ a policy to it that authorizes you to use sender@example.com, then you\
            \ would specify the <code>FromEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com,\
            \ and the <code>FromEmailAddress</code> to be sender@example.com.</p>\
            \ <p>For more information about sending authorization, see the <a href=\"\
            https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\"\
            >Amazon SES Developer Guide</a>.</p>"
          title: FromEmailAddressIdentityArn
          type: string
        ReplyToAddresses:
          description: "The \"Reply-to\" email addresses for the message. When the\
            \ recipient replies to the message, each Reply-to address receives the\
            \ reply."
          items:
            $ref: '#/components/schemas/EmailAddress'
          title: ReplyToAddresses
          type: array
        FeedbackForwardingEmailAddress:
          description: The address that you want bounce and complaint notifications
            to be sent to.
          title: FeedbackForwardingEmailAddress
          type: string
        FeedbackForwardingEmailAddressIdentityArn:
          description: "<p>This parameter is used only for sending authorization.\
            \ It is the ARN of the identity that is associated with the sending authorization\
            \ policy that permits you to use the email address specified in the <code>FeedbackForwardingEmailAddress</code>\
            \ parameter.</p> <p>For example, if the owner of example.com (which has\
            \ ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches\
            \ a policy to it that authorizes you to use feedback@example.com, then\
            \ you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code>\
            \ to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the\
            \ <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p>\
            \ <p>For more information about sending authorization, see the <a href=\"\
            https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\"\
            >Amazon SES Developer Guide</a>.</p>"
          title: FeedbackForwardingEmailAddressIdentityArn
          type: string
        DefaultEmailTags:
          description: A list of message tags.
          items:
            $ref: '#/components/schemas/MessageTag'
          title: DefaultEmailTags
          type: array
        DefaultContent:
          $ref: '#/components/schemas/SendBulkEmail_request_DefaultContent'
        BulkEmailEntries:
          description: A list of <code>BulkEmailEntry</code> objects.
          items:
            $ref: '#/components/schemas/BulkEmailEntry'
          title: BulkEmailEntries
          type: array
        ConfigurationSetName:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          title: ConfigurationSetName
          type: string
      required:
      - BulkEmailEntries
      - DefaultContent
      title: SendBulkEmail_request
      type: object
    SendCustomVerificationEmail_request:
      properties:
        EmailAddress:
          description: The email address to verify.
          title: EmailAddress
          type: string
        TemplateName:
          description: The name of the template. You will refer to this name when
            you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code>
            operations.
          minLength: 1
          title: TemplateName
          type: string
        ConfigurationSetName:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          title: ConfigurationSetName
          type: string
      required:
      - EmailAddress
      - TemplateName
      title: SendCustomVerificationEmail_request
      type: object
    SendEmail_request_Destination:
      description: "<p>An object that describes the recipients for an email.</p> <note>\
        \ <p>Amazon SES does not support the SMTPUTF8 extension, as described in <a\
        \ href=\"https://tools.ietf.org/html/rfc6531\">RFC6531</a>. For this reason,\
        \ the <i>local part</i> of a destination email address (the part of the email\
        \ address that precedes the @ sign) may only contain <a href=\"https://en.wikipedia.org/wiki/Email_address#Local-part\"\
        >7-bit ASCII characters</a>. If the <i>domain part</i> of an address (the\
        \ part after the @ sign) contains non-ASCII characters, they must be encoded\
        \ using Punycode, as described in <a href=\"https://tools.ietf.org/html/rfc3492.html\"\
        >RFC3492</a>.</p> </note>"
      properties:
        ToAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          - description: An array that contains the email addresses of the "To" recipients
              for the email.
          title: ToAddresses
        CcAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          - description: An array that contains the email addresses of the "CC" (carbon
              copy) recipients for the email.
          title: CcAddresses
        BccAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          - description: An array that contains the email addresses of the "BCC" (blind
              carbon copy) recipients for the email.
          title: BccAddresses
      title: SendEmail_request_Destination
      type: object
    SendEmail_request_ListManagementOptions:
      description: "An object used to specify a list or topic to which an email belongs,\
        \ which will be used when a contact chooses to unsubscribe."
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          - description: The name of the contact list.
          title: ContactListName
        TopicName:
          allOf:
          - $ref: '#/components/schemas/TopicName'
          - description: The name of the topic.
          title: TopicName
      title: SendEmail_request_ListManagementOptions
      type: object
    SendEmail_request:
      properties:
        FromEmailAddress:
          description: 'The email address to use as the "From" address for the email.
            The address that you specify has to be verified. '
          title: FromEmailAddress
          type: string
        FromEmailAddressIdentityArn:
          description: "<p>This parameter is used only for sending authorization.\
            \ It is the ARN of the identity that is associated with the sending authorization\
            \ policy that permits you to use the email address specified in the <code>FromEmailAddress</code>\
            \ parameter.</p> <p>For example, if the owner of example.com (which has\
            \ ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches\
            \ a policy to it that authorizes you to use sender@example.com, then you\
            \ would specify the <code>FromEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com,\
            \ and the <code>FromEmailAddress</code> to be sender@example.com.</p>\
            \ <p>For more information about sending authorization, see the <a href=\"\
            https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\"\
            >Amazon SES Developer Guide</a>.</p> <p>For Raw emails, the <code>FromEmailAddressIdentityArn</code>\
            \ value overrides the X-SES-SOURCE-ARN and X-SES-FROM-ARN headers specified\
            \ in raw email message content.</p>"
          title: FromEmailAddressIdentityArn
          type: string
        Destination:
          $ref: '#/components/schemas/SendEmail_request_Destination'
        ReplyToAddresses:
          description: "The \"Reply-to\" email addresses for the message. When the\
            \ recipient replies to the message, each Reply-to address receives the\
            \ reply."
          items:
            $ref: '#/components/schemas/EmailAddress'
          title: ReplyToAddresses
          type: array
        FeedbackForwardingEmailAddress:
          description: The address that you want bounce and complaint notifications
            to be sent to.
          title: FeedbackForwardingEmailAddress
          type: string
        FeedbackForwardingEmailAddressIdentityArn:
          description: "<p>This parameter is used only for sending authorization.\
            \ It is the ARN of the identity that is associated with the sending authorization\
            \ policy that permits you to use the email address specified in the <code>FeedbackForwardingEmailAddress</code>\
            \ parameter.</p> <p>For example, if the owner of example.com (which has\
            \ ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches\
            \ a policy to it that authorizes you to use feedback@example.com, then\
            \ you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code>\
            \ to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the\
            \ <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p>\
            \ <p>For more information about sending authorization, see the <a href=\"\
            https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\"\
            >Amazon SES Developer Guide</a>.</p>"
          title: FeedbackForwardingEmailAddressIdentityArn
          type: string
        Content:
          $ref: '#/components/schemas/CreateDeliverabilityTestReport_request_Content'
        EmailTags:
          description: A list of message tags.
          items:
            $ref: '#/components/schemas/MessageTag'
          title: EmailTags
          type: array
        ConfigurationSetName:
          description: "<p>The name of a configuration set.</p> <p> <i>Configuration\
            \ sets</i> are groups of rules that you can apply to the emails you send.\
            \ You apply a configuration set to an email by including a reference to\
            \ the configuration set in the headers of the email. When you apply a\
            \ configuration set to an email, all of the rules in that configuration\
            \ set are applied to the email.</p>"
          title: ConfigurationSetName
          type: string
        ListManagementOptions:
          $ref: '#/components/schemas/SendEmail_request_ListManagementOptions'
      required:
      - Content
      title: SendEmail_request
      type: object
    TagResource_request:
      properties:
        ResourceArn:
          description: The Amazon Resource Name (ARN) of the resource that you want
            to add one or more tags to.
          title: ResourceArn
          type: string
        Tags:
          description: A list of the tags that you want to add to the resource. A
            tag consists of a required tag key (<code>Key</code>) and an associated
            tag value (<code>Value</code>). The maximum length of a tag key is 128
            characters. The maximum length of a tag value is 256 characters.
          items:
            $ref: '#/components/schemas/Tag'
          title: Tags
          type: array
      required:
      - ResourceArn
      - Tags
      title: TagResource_request
      type: object
    TestRenderEmailTemplate_request:
      properties:
        TemplateData:
          description: An object that defines the values to use for message variables
            in the template. This object is a set of key-value pairs. Each key defines
            a message variable in the template. The corresponding value defines the
            value to use for that variable.
          maxLength: 262144
          title: TemplateData
          type: string
      required:
      - TemplateData
      title: TestRenderEmailTemplate_request
      type: object
    Message_Subject:
      allOf:
      - $ref: '#/components/schemas/Content'
      - description: "The subject line of the email. The subject line can only contain\
          \ 7-bit ASCII characters. However, you can specify non-ASCII characters\
          \ in the subject line by using encoded-word syntax, as described in <a href=\"\
          https://tools.ietf.org/html/rfc2047\">RFC 2047</a>."
      example:
        Charset: ""
        Data: ""
      title: Message_Subject
    Message_Body:
      allOf:
      - $ref: '#/components/schemas/Body'
      - description: "The body of the message. You can specify an HTML version of\
          \ the message, a text-only version of the message, or both."
      example:
        Html:
          Charset: ""
          Data: ""
        Text:
          Charset: ""
          Data: ""
      title: Message_Body
    CreateEmailIdentityResponse_DkimAttributes:
      allOf:
      - $ref: '#/components/schemas/DkimAttributes'
      - description: An object that contains information about the DKIM attributes
          for the identity.
      example:
        SigningEnabled: ""
        Status: ""
        SigningAttributesOrigin: ""
        NextSigningKeyLength: ""
        CurrentSigningKeyLength: ""
        Tokens: ""
        LastKeyGenerationTimestamp: ""
      title: CreateEmailIdentityResponse_DkimAttributes
    GetAccountResponse_SendQuota:
      allOf:
      - $ref: '#/components/schemas/SendQuota'
      - description: An object that contains information about the per-day and per-second
          sending limits for your Amazon SES account in the current Amazon Web Services
          Region.
      example:
        SentLast24Hours: ""
        MaxSendRate: ""
        Max24HourSend: ""
      title: GetAccountResponse_SendQuota
    GetAccountResponse_SuppressionAttributes:
      allOf:
      - $ref: '#/components/schemas/SuppressionAttributes'
      - description: An object that contains information about the email address suppression
          preferences for your account in the current Amazon Web Services Region.
      example:
        SuppressedReasons: ""
      title: GetAccountResponse_SuppressionAttributes
    GetAccountResponse_Details:
      allOf:
      - $ref: '#/components/schemas/AccountDetails'
      - description: An object that defines your account details.
      example:
        WebsiteURL: ""
        UseCaseDescription: ""
        ContactLanguage: ""
        MailType: ""
        AdditionalContactEmailAddresses: ""
        ReviewDetails:
          Status: ""
          CaseId: ""
      title: GetAccountResponse_Details
    GetAccountResponse_VdmAttributes:
      allOf:
      - $ref: '#/components/schemas/VdmAttributes'
      - description: The VDM attributes that apply to your Amazon SES account.
      example:
        DashboardAttributes:
          EngagementMetrics: ""
        VdmEnabled: ""
        GuardianAttributes:
          OptimizedSharedDelivery: ""
      title: GetAccountResponse_VdmAttributes
    GetConfigurationSetResponse_TrackingOptions:
      allOf:
      - $ref: '#/components/schemas/TrackingOptions'
      - description: An object that defines the open and click tracking options for
          emails that you send using the configuration set.
      example:
        CustomRedirectDomain: ""
      title: GetConfigurationSetResponse_TrackingOptions
    GetConfigurationSetResponse_DeliveryOptions:
      allOf:
      - $ref: '#/components/schemas/DeliveryOptions'
      - description: An object that defines the dedicated IP pool that is used to
          send emails that you send using the configuration set.
      example:
        SendingPoolName: ""
        TlsPolicy: ""
      title: GetConfigurationSetResponse_DeliveryOptions
    GetConfigurationSetResponse_ReputationOptions:
      allOf:
      - $ref: '#/components/schemas/ReputationOptions'
      - description: An object that defines whether or not Amazon SES collects reputation
          metrics for the emails that you send that use the configuration set.
      example:
        LastFreshStart: ""
        ReputationMetricsEnabled: ""
      title: GetConfigurationSetResponse_ReputationOptions
    GetConfigurationSetResponse_SendingOptions:
      allOf:
      - $ref: '#/components/schemas/SendingOptions'
      - description: An object that defines whether or not Amazon SES can send email
          that you send using the configuration set.
      example:
        SendingEnabled: ""
      title: GetConfigurationSetResponse_SendingOptions
    GetConfigurationSetResponse_SuppressionOptions:
      allOf:
      - $ref: '#/components/schemas/SuppressionOptions'
      - description: An object that contains information about the suppression list
          preferences for your account.
      example:
        SuppressedReasons: ""
      title: GetConfigurationSetResponse_SuppressionOptions
    GetConfigurationSetResponse_VdmOptions:
      allOf:
      - $ref: '#/components/schemas/VdmOptions'
      - description: An object that contains information about the VDM preferences
          for your configuration set.
      example:
        DashboardOptions:
          EngagementMetrics: ""
        GuardianOptions:
          OptimizedSharedDelivery: ""
      title: GetConfigurationSetResponse_VdmOptions
    GetDedicatedIpResponse_DedicatedIp:
      allOf:
      - $ref: '#/components/schemas/DedicatedIp'
      - description: An object that contains information about a dedicated IP address.
      example:
        PoolName: ""
        WarmupStatus: ""
        Ip: ""
        WarmupPercentage: ""
      title: GetDedicatedIpResponse_DedicatedIp
    GetDedicatedIpPoolResponse_DedicatedIpPool:
      allOf:
      - $ref: '#/components/schemas/DedicatedIpPool'
      - description: An object that contains information about a dedicated IP pool.
      example:
        PoolName: ""
        ScalingMode: ""
      title: GetDedicatedIpPoolResponse_DedicatedIpPool
    GetDeliverabilityTestReportResponse_DeliverabilityTestReport:
      allOf:
      - $ref: '#/components/schemas/DeliverabilityTestReport'
      - description: An object that contains the results of the predictive inbox placement
          test.
      example:
        FromEmailAddress: ""
        DeliverabilityTestStatus: ""
        ReportName: ""
        ReportId: ""
        CreateDate: ""
        Subject: ""
      title: GetDeliverabilityTestReportResponse_DeliverabilityTestReport
    GetDeliverabilityTestReportResponse_OverallPlacement:
      allOf:
      - $ref: '#/components/schemas/PlacementStatistics'
      - description: "An object that specifies how many test messages that were sent\
          \ during the predictive inbox placement test were delivered to recipients'\
          \ inboxes, how many were sent to recipients' spam folders, and how many\
          \ weren't delivered."
      example:
        InboxPercentage: ""
        SpfPercentage: ""
        MissingPercentage: ""
        SpamPercentage: ""
        DkimPercentage: ""
      title: GetDeliverabilityTestReportResponse_OverallPlacement
    GetDomainDeliverabilityCampaignResponse_DomainDeliverabilityCampaign:
      allOf:
      - $ref: '#/components/schemas/DomainDeliverabilityCampaign'
      - description: An object that contains the deliverability data for the campaign.
      example:
        FirstSeenDateTime: ""
        InboxCount: ""
        ImageUrl: ""
        Subject: ""
        Esps: ""
        SpamCount: ""
        FromAddress: ""
        CampaignId: ""
        ReadRate: ""
        DeleteRate: ""
        LastSeenDateTime: ""
        SendingIps: ""
        ReadDeleteRate: ""
        ProjectedVolume: ""
      title: GetDomainDeliverabilityCampaignResponse_DomainDeliverabilityCampaign
    GetDomainStatisticsReportResponse_OverallVolume:
      allOf:
      - $ref: '#/components/schemas/OverallVolume'
      - description: An object that contains deliverability metrics for the domain
          that you specified. The data in this object is a summary of all of the data
          that was collected from the <code>StartDate</code> to the <code>EndDate</code>.
      example:
        DomainIspPlacements: ""
        VolumeStatistics:
          InboxRawCount: ""
          ProjectedInbox: ""
          ProjectedSpam: ""
          SpamRawCount: ""
        ReadRatePercent: ""
      title: GetDomainStatisticsReportResponse_OverallVolume
    GetEmailIdentityResponse_MailFromAttributes:
      allOf:
      - $ref: '#/components/schemas/MailFromAttributes'
      - description: An object that contains information about the Mail-From attributes
          for the email identity.
      example:
        MailFromDomain: ""
        MailFromDomainStatus: ""
        BehaviorOnMxFailure: ""
      title: GetEmailIdentityResponse_MailFromAttributes
    GetEmailTemplateResponse_TemplateContent:
      allOf:
      - $ref: '#/components/schemas/EmailTemplateContent'
      - description: "The content of the email template, composed of a subject line,\
          \ an HTML part, and a text-only part."
      example:
        Html: ""
        Text: ""
        Subject: ""
      title: GetEmailTemplateResponse_TemplateContent
    GetImportJobResponse_ImportDestination:
      allOf:
      - $ref: '#/components/schemas/ImportDestination'
      - description: The destination of the import job.
      example:
        SuppressionListDestination:
          SuppressionListImportAction: ""
        ContactListDestination:
          ContactListName: ""
          ContactListImportAction: ""
      title: GetImportJobResponse_ImportDestination
    GetImportJobResponse_ImportDataSource:
      allOf:
      - $ref: '#/components/schemas/ImportDataSource'
      - description: The data source of the import job.
      example:
        S3Url: ""
        DataFormat: ""
      title: GetImportJobResponse_ImportDataSource
    GetImportJobResponse_FailureInfo:
      allOf:
      - $ref: '#/components/schemas/FailureInfo'
      - description: The failure details about an import job.
      example:
        ErrorMessage: ""
        FailedRecordsS3Url: ""
      title: GetImportJobResponse_FailureInfo
    GetSuppressedDestinationResponse_SuppressedDestination:
      allOf:
      - $ref: '#/components/schemas/SuppressedDestination'
      - description: An object containing information about the suppressed email address.
      example:
        LastUpdateTime: ""
        Attributes:
          FeedbackId: ""
          MessageId: ""
        EmailAddress: ""
        Reason: ""
      title: GetSuppressedDestinationResponse_SuppressedDestination
    DomainDeliverabilityTrackingOption_InboxPlacementTrackingOption:
      allOf:
      - $ref: '#/components/schemas/InboxPlacementTrackingOption'
      - description: An object that contains information about the inbox placement
          data settings for the domain.
      title: DomainDeliverabilityTrackingOption_InboxPlacementTrackingOption
    BulkEmailEntry_Destination:
      allOf:
      - $ref: '#/components/schemas/Destination'
      - description: "<p>Represents the destination of the message, consisting of\
          \ To:, CC:, and BCC: fields.</p> <note> <p>Amazon SES does not support the\
          \ SMTPUTF8 extension, as described in <a href=\"https://tools.ietf.org/html/rfc6531\"\
          >RFC6531</a>. For this reason, the local part of a destination email address\
          \ (the part of the email address that precedes the @ sign) may only contain\
          \ <a href=\"https://en.wikipedia.org/wiki/Email_address#Local-part\">7-bit\
          \ ASCII characters</a>. If the domain part of an address (the part after\
          \ the @ sign) contains non-ASCII characters, they must be encoded using\
          \ Punycode, as described in <a href=\"https://tools.ietf.org/html/rfc3492.html\"\
          >RFC3492</a>.</p> </note>"
      title: BulkEmailEntry_Destination
    BulkEmailEntry_ReplacementEmailContent:
      allOf:
      - $ref: '#/components/schemas/ReplacementEmailContent'
      - description: The <code>ReplacementEmailContent</code> associated with a <code>BulkEmailEntry</code>.
      title: BulkEmailEntry_ReplacementEmailContent
    AccountDetails_ReviewDetails:
      allOf:
      - $ref: '#/components/schemas/ReviewDetails'
      - description: Information about the review of the latest details you submitted.
      example:
        Status: ""
        CaseId: ""
      title: AccountDetails_ReviewDetails
    Body_Text:
      allOf:
      - $ref: '#/components/schemas/Content'
      - description: "An object that represents the version of the message that is\
          \ displayed in email clients that don't support HTML, or clients where the\
          \ recipient has disabled HTML rendering."
      example:
        Charset: ""
        Data: ""
      title: Body_Text
    Body_Html:
      allOf:
      - $ref: '#/components/schemas/Content'
      - description: "An object that represents the version of the message that is\
          \ displayed in email clients that support HTML. HTML messages can include\
          \ formatted text, hyperlinks, images, and more. "
      example:
        Charset: ""
        Data: ""
      title: Body_Html
    ReplacementEmailContent_ReplacementTemplate:
      allOf:
      - $ref: '#/components/schemas/ReplacementTemplate'
      - description: The <code>ReplacementTemplate</code> associated with <code>ReplacementEmailContent</code>.
      title: ReplacementEmailContent_ReplacementTemplate
    CreateConfigurationSetEventDestinationRequest_EventDestination:
      allOf:
      - $ref: '#/components/schemas/EventDestinationDefinition'
      - description: An object that defines the event destination.
      example:
        SnsDestination:
          TopicArn: ""
        CloudWatchDestination:
          DimensionConfigurations: ""
        Enabled: ""
        MatchingEventTypes: ""
        PinpointDestination:
          ApplicationArn: ""
        KinesisFirehoseDestination:
          DeliveryStreamArn: ""
          IamRoleArn: ""
      title: CreateConfigurationSetEventDestinationRequest_EventDestination
    CreateConfigurationSetRequest_VdmOptions:
      allOf:
      - $ref: '#/components/schemas/VdmOptions'
      - description: An object that defines the VDM options for emails that you send
          using the configuration set.
      example:
        DashboardOptions:
          EngagementMetrics: ""
        GuardianOptions:
          OptimizedSharedDelivery: ""
      title: CreateConfigurationSetRequest_VdmOptions
    CreateDeliverabilityTestReportRequest_Content:
      allOf:
      - $ref: '#/components/schemas/EmailContent'
      - description: The HTML body of the message that you sent when you performed
          the predictive inbox placement test.
      example:
        Raw:
          Data: ""
        Simple:
          Body:
            Html:
              Charset: ""
              Data: ""
            Text:
              Charset: ""
              Data: ""
          Subject:
            Charset: ""
            Data: ""
        Template:
          TemplateArn: ""
          TemplateData: ""
          TemplateName: ""
      title: CreateDeliverabilityTestReportRequest_Content
    CreateEmailIdentityRequest_DkimSigningAttributes:
      allOf:
      - $ref: '#/components/schemas/DkimSigningAttributes'
      - description: "<p>If your request includes this object, Amazon SES configures\
          \ the identity to use Bring Your Own DKIM (BYODKIM) for DKIM authentication\
          \ purposes, or, configures the key length to be used for <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\"\
          >Easy DKIM</a>.</p> <p>You can only specify this object if the email identity\
          \ is a domain, as opposed to an address.</p>"
      example:
        DomainSigningPrivateKey: ""
        DomainSigningSelector: ""
        NextSigningKeyLength: ""
      title: CreateEmailIdentityRequest_DkimSigningAttributes
    CreateImportJobRequest_ImportDestination:
      allOf:
      - $ref: '#/components/schemas/ImportDestination'
      - description: The destination for the import job.
      example:
        SuppressionListDestination:
          SuppressionListImportAction: ""
        ContactListDestination:
          ContactListName: ""
          ContactListImportAction: ""
      title: CreateImportJobRequest_ImportDestination
    CreateImportJobRequest_ImportDataSource:
      allOf:
      - $ref: '#/components/schemas/ImportDataSource'
      - description: The data source for the import job.
      example:
        S3Url: ""
        DataFormat: ""
      title: CreateImportJobRequest_ImportDataSource
    DailyVolume_VolumeStatistics:
      allOf:
      - $ref: '#/components/schemas/VolumeStatistics'
      - description: An object that contains inbox placement metrics for a specific
          day in the analysis period.
      title: DailyVolume_VolumeStatistics
    OverallVolume_VolumeStatistics:
      allOf:
      - $ref: '#/components/schemas/VolumeStatistics'
      - description: An object that contains information about the numbers of messages
          that arrived in recipients' inboxes and junk mail folders.
      example:
        InboxRawCount: ""
        ProjectedInbox: ""
        ProjectedSpam: ""
        SpamRawCount: ""
      title: OverallVolume_VolumeStatistics
    SuppressedDestination_Attributes:
      allOf:
      - $ref: '#/components/schemas/SuppressedDestinationAttributes'
      - description: An optional value that can contain additional information about
          the reasons that the address was added to the suppression list for your
          account.
      example:
        FeedbackId: ""
        MessageId: ""
      title: SuppressedDestination_Attributes
    IspPlacement_PlacementStatistics:
      allOf:
      - $ref: '#/components/schemas/PlacementStatistics'
      - description: An object that contains inbox placement metrics for a specific
          email provider.
      title: IspPlacement_PlacementStatistics
    ListContactsRequest_Filter:
      allOf:
      - $ref: '#/components/schemas/ListContactsFilter'
      - description: A filter that can be applied to a list of contacts.
      example:
        TopicFilter:
          UseDefaultIfPreferenceUnavailable: ""
          TopicName: ""
        FilteredStatus: ""
      title: ListContactsRequest_Filter
    PutAccountVdmAttributesRequest_VdmAttributes:
      allOf:
      - $ref: '#/components/schemas/VdmAttributes'
      - description: The VDM attributes that you wish to apply to your Amazon SES
          account.
      example:
        DashboardAttributes:
          EngagementMetrics: ""
        VdmEnabled: ""
        GuardianAttributes:
          OptimizedSharedDelivery: ""
      title: PutAccountVdmAttributesRequest_VdmAttributes
    PutConfigurationSetVdmOptionsRequest_VdmOptions:
      allOf:
      - $ref: '#/components/schemas/VdmOptions'
      - description: The VDM options to apply to the configuration set.
      example:
        DashboardOptions:
          EngagementMetrics: ""
        GuardianOptions:
          OptimizedSharedDelivery: ""
      title: PutConfigurationSetVdmOptionsRequest_VdmOptions
    PutEmailIdentityDkimSigningAttributesRequest_SigningAttributes:
      allOf:
      - $ref: '#/components/schemas/DkimSigningAttributes'
      - description: "An object that contains information about the private key and\
          \ selector that you want to use to configure DKIM for the identity for Bring\
          \ Your Own DKIM (BYODKIM) for the identity, or, configures the key length\
          \ to be used for <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\"\
          >Easy DKIM</a>."
      example:
        DomainSigningPrivateKey: ""
        DomainSigningSelector: ""
        NextSigningKeyLength: ""
      title: PutEmailIdentityDkimSigningAttributesRequest_SigningAttributes
    SendBulkEmailRequest_DefaultContent:
      allOf:
      - $ref: '#/components/schemas/BulkEmailContent'
      - description: An object that contains the body of the message. You can specify
          a template message.
      example:
        Template:
          TemplateArn: ""
          TemplateData: ""
          TemplateName: ""
      title: SendBulkEmailRequest_DefaultContent
    SendEmailRequest_Destination:
      allOf:
      - $ref: '#/components/schemas/Destination'
      - description: An object that contains the recipients of the email message.
      example:
        ToAddresses: ""
        CcAddresses: ""
        BccAddresses: ""
      title: SendEmailRequest_Destination
    SendEmailRequest_Content:
      allOf:
      - $ref: '#/components/schemas/EmailContent'
      - description: An object that contains the body of the message. You can send
          either a Simple message Raw message or a template Message.
      example:
        Raw:
          Data: ""
        Simple:
          Body:
            Html:
              Charset: ""
              Data: ""
            Text:
              Charset: ""
              Data: ""
          Subject:
            Charset: ""
            Data: ""
        Template:
          TemplateArn: ""
          TemplateData: ""
          TemplateName: ""
      title: SendEmailRequest_Content
    SendEmailRequest_ListManagementOptions:
      allOf:
      - $ref: '#/components/schemas/ListManagementOptions'
      - description: "An object used to specify a list or topic to which an email\
          \ belongs, which will be used when a contact chooses to unsubscribe."
      example:
        ContactListName: ""
        TopicName: ""
      title: SendEmailRequest_ListManagementOptions
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
