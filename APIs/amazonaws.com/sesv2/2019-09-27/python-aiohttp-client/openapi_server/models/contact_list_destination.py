# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_list_import_action import ContactListImportAction
from openapi_server import util


class ContactListDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_list_name: str=None, contact_list_import_action: ContactListImportAction=None):
        """ContactListDestination - a model defined in OpenAPI

        :param contact_list_name: The contact_list_name of this ContactListDestination.
        :param contact_list_import_action: The contact_list_import_action of this ContactListDestination.
        """
        self.openapi_types = {
            'contact_list_name': str,
            'contact_list_import_action': ContactListImportAction
        }

        self.attribute_map = {
            'contact_list_name': 'ContactListName',
            'contact_list_import_action': 'ContactListImportAction'
        }

        self._contact_list_name = contact_list_name
        self._contact_list_import_action = contact_list_import_action

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactListDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactListDestination of this ContactListDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_list_name(self):
        """Gets the contact_list_name of this ContactListDestination.


        :return: The contact_list_name of this ContactListDestination.
        :rtype: str
        """
        return self._contact_list_name

    @contact_list_name.setter
    def contact_list_name(self, contact_list_name):
        """Sets the contact_list_name of this ContactListDestination.


        :param contact_list_name: The contact_list_name of this ContactListDestination.
        :type contact_list_name: str
        """
        if contact_list_name is None:
            raise ValueError("Invalid value for `contact_list_name`, must not be `None`")

        self._contact_list_name = contact_list_name

    @property
    def contact_list_import_action(self):
        """Gets the contact_list_import_action of this ContactListDestination.


        :return: The contact_list_import_action of this ContactListDestination.
        :rtype: ContactListImportAction
        """
        return self._contact_list_import_action

    @contact_list_import_action.setter
    def contact_list_import_action(self, contact_list_import_action):
        """Sets the contact_list_import_action of this ContactListDestination.


        :param contact_list_import_action: The contact_list_import_action of this ContactListDestination.
        :type contact_list_import_action: ContactListImportAction
        """
        if contact_list_import_action is None:
            raise ValueError("Invalid value for `contact_list_import_action`, must not be `None`")

        self._contact_list_import_action = contact_list_import_action
