# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.daily_volume_volume_statistics import DailyVolumeVolumeStatistics
from openapi_server import util


class DailyVolume(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, start_date: datetime=None, volume_statistics: DailyVolumeVolumeStatistics=None, domain_isp_placements: List=None):
        """DailyVolume - a model defined in OpenAPI

        :param start_date: The start_date of this DailyVolume.
        :param volume_statistics: The volume_statistics of this DailyVolume.
        :param domain_isp_placements: The domain_isp_placements of this DailyVolume.
        """
        self.openapi_types = {
            'start_date': datetime,
            'volume_statistics': DailyVolumeVolumeStatistics,
            'domain_isp_placements': List
        }

        self.attribute_map = {
            'start_date': 'StartDate',
            'volume_statistics': 'VolumeStatistics',
            'domain_isp_placements': 'DomainIspPlacements'
        }

        self._start_date = start_date
        self._volume_statistics = volume_statistics
        self._domain_isp_placements = domain_isp_placements

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DailyVolume':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DailyVolume of this DailyVolume.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start_date(self):
        """Gets the start_date of this DailyVolume.


        :return: The start_date of this DailyVolume.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this DailyVolume.


        :param start_date: The start_date of this DailyVolume.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def volume_statistics(self):
        """Gets the volume_statistics of this DailyVolume.


        :return: The volume_statistics of this DailyVolume.
        :rtype: DailyVolumeVolumeStatistics
        """
        return self._volume_statistics

    @volume_statistics.setter
    def volume_statistics(self, volume_statistics):
        """Sets the volume_statistics of this DailyVolume.


        :param volume_statistics: The volume_statistics of this DailyVolume.
        :type volume_statistics: DailyVolumeVolumeStatistics
        """

        self._volume_statistics = volume_statistics

    @property
    def domain_isp_placements(self):
        """Gets the domain_isp_placements of this DailyVolume.


        :return: The domain_isp_placements of this DailyVolume.
        :rtype: List
        """
        return self._domain_isp_placements

    @domain_isp_placements.setter
    def domain_isp_placements(self, domain_isp_placements):
        """Sets the domain_isp_placements of this DailyVolume.


        :param domain_isp_placements: The domain_isp_placements of this DailyVolume.
        :type domain_isp_placements: List
        """

        self._domain_isp_placements = domain_isp_placements
