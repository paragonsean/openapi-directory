# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Contact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email_address: str=None, topic_preferences: List=None, topic_default_preferences: List=None, unsubscribe_all: bool=None, last_updated_timestamp: datetime=None):
        """Contact - a model defined in OpenAPI

        :param email_address: The email_address of this Contact.
        :param topic_preferences: The topic_preferences of this Contact.
        :param topic_default_preferences: The topic_default_preferences of this Contact.
        :param unsubscribe_all: The unsubscribe_all of this Contact.
        :param last_updated_timestamp: The last_updated_timestamp of this Contact.
        """
        self.openapi_types = {
            'email_address': str,
            'topic_preferences': List,
            'topic_default_preferences': List,
            'unsubscribe_all': bool,
            'last_updated_timestamp': datetime
        }

        self.attribute_map = {
            'email_address': 'EmailAddress',
            'topic_preferences': 'TopicPreferences',
            'topic_default_preferences': 'TopicDefaultPreferences',
            'unsubscribe_all': 'UnsubscribeAll',
            'last_updated_timestamp': 'LastUpdatedTimestamp'
        }

        self._email_address = email_address
        self._topic_preferences = topic_preferences
        self._topic_default_preferences = topic_default_preferences
        self._unsubscribe_all = unsubscribe_all
        self._last_updated_timestamp = last_updated_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Contact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Contact of this Contact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email_address(self):
        """Gets the email_address of this Contact.


        :return: The email_address of this Contact.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this Contact.


        :param email_address: The email_address of this Contact.
        :type email_address: str
        """

        self._email_address = email_address

    @property
    def topic_preferences(self):
        """Gets the topic_preferences of this Contact.


        :return: The topic_preferences of this Contact.
        :rtype: List
        """
        return self._topic_preferences

    @topic_preferences.setter
    def topic_preferences(self, topic_preferences):
        """Sets the topic_preferences of this Contact.


        :param topic_preferences: The topic_preferences of this Contact.
        :type topic_preferences: List
        """

        self._topic_preferences = topic_preferences

    @property
    def topic_default_preferences(self):
        """Gets the topic_default_preferences of this Contact.


        :return: The topic_default_preferences of this Contact.
        :rtype: List
        """
        return self._topic_default_preferences

    @topic_default_preferences.setter
    def topic_default_preferences(self, topic_default_preferences):
        """Sets the topic_default_preferences of this Contact.


        :param topic_default_preferences: The topic_default_preferences of this Contact.
        :type topic_default_preferences: List
        """

        self._topic_default_preferences = topic_default_preferences

    @property
    def unsubscribe_all(self):
        """Gets the unsubscribe_all of this Contact.


        :return: The unsubscribe_all of this Contact.
        :rtype: bool
        """
        return self._unsubscribe_all

    @unsubscribe_all.setter
    def unsubscribe_all(self, unsubscribe_all):
        """Sets the unsubscribe_all of this Contact.


        :param unsubscribe_all: The unsubscribe_all of this Contact.
        :type unsubscribe_all: bool
        """

        self._unsubscribe_all = unsubscribe_all

    @property
    def last_updated_timestamp(self):
        """Gets the last_updated_timestamp of this Contact.


        :return: The last_updated_timestamp of this Contact.
        :rtype: datetime
        """
        return self._last_updated_timestamp

    @last_updated_timestamp.setter
    def last_updated_timestamp(self, last_updated_timestamp):
        """Sets the last_updated_timestamp of this Contact.


        :param last_updated_timestamp: The last_updated_timestamp of this Contact.
        :type last_updated_timestamp: datetime
        """

        self._last_updated_timestamp = last_updated_timestamp
