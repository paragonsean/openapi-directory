# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.feature_status import FeatureStatus
from openapi_server import util


class DashboardOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, engagement_metrics: FeatureStatus=None):
        """DashboardOptions - a model defined in OpenAPI

        :param engagement_metrics: The engagement_metrics of this DashboardOptions.
        """
        self.openapi_types = {
            'engagement_metrics': FeatureStatus
        }

        self.attribute_map = {
            'engagement_metrics': 'EngagementMetrics'
        }

        self._engagement_metrics = engagement_metrics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DashboardOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DashboardOptions of this DashboardOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def engagement_metrics(self):
        """Gets the engagement_metrics of this DashboardOptions.


        :return: The engagement_metrics of this DashboardOptions.
        :rtype: FeatureStatus
        """
        return self._engagement_metrics

    @engagement_metrics.setter
    def engagement_metrics(self, engagement_metrics):
        """Sets the engagement_metrics of this DashboardOptions.


        :param engagement_metrics: The engagement_metrics of this DashboardOptions.
        :type engagement_metrics: FeatureStatus
        """

        self._engagement_metrics = engagement_metrics
