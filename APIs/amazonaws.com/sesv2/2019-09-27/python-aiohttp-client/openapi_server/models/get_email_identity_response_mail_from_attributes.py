# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.behavior_on_mx_failure import BehaviorOnMxFailure
from openapi_server.models.mail_from_domain_status import MailFromDomainStatus
from openapi_server import util


class GetEmailIdentityResponseMailFromAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mail_from_domain: str=None, mail_from_domain_status: MailFromDomainStatus=None, behavior_on_mx_failure: BehaviorOnMxFailure=None):
        """GetEmailIdentityResponseMailFromAttributes - a model defined in OpenAPI

        :param mail_from_domain: The mail_from_domain of this GetEmailIdentityResponseMailFromAttributes.
        :param mail_from_domain_status: The mail_from_domain_status of this GetEmailIdentityResponseMailFromAttributes.
        :param behavior_on_mx_failure: The behavior_on_mx_failure of this GetEmailIdentityResponseMailFromAttributes.
        """
        self.openapi_types = {
            'mail_from_domain': str,
            'mail_from_domain_status': MailFromDomainStatus,
            'behavior_on_mx_failure': BehaviorOnMxFailure
        }

        self.attribute_map = {
            'mail_from_domain': 'MailFromDomain',
            'mail_from_domain_status': 'MailFromDomainStatus',
            'behavior_on_mx_failure': 'BehaviorOnMxFailure'
        }

        self._mail_from_domain = mail_from_domain
        self._mail_from_domain_status = mail_from_domain_status
        self._behavior_on_mx_failure = behavior_on_mx_failure

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetEmailIdentityResponseMailFromAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetEmailIdentityResponse_MailFromAttributes of this GetEmailIdentityResponseMailFromAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mail_from_domain(self):
        """Gets the mail_from_domain of this GetEmailIdentityResponseMailFromAttributes.


        :return: The mail_from_domain of this GetEmailIdentityResponseMailFromAttributes.
        :rtype: str
        """
        return self._mail_from_domain

    @mail_from_domain.setter
    def mail_from_domain(self, mail_from_domain):
        """Sets the mail_from_domain of this GetEmailIdentityResponseMailFromAttributes.


        :param mail_from_domain: The mail_from_domain of this GetEmailIdentityResponseMailFromAttributes.
        :type mail_from_domain: str
        """
        if mail_from_domain is None:
            raise ValueError("Invalid value for `mail_from_domain`, must not be `None`")

        self._mail_from_domain = mail_from_domain

    @property
    def mail_from_domain_status(self):
        """Gets the mail_from_domain_status of this GetEmailIdentityResponseMailFromAttributes.


        :return: The mail_from_domain_status of this GetEmailIdentityResponseMailFromAttributes.
        :rtype: MailFromDomainStatus
        """
        return self._mail_from_domain_status

    @mail_from_domain_status.setter
    def mail_from_domain_status(self, mail_from_domain_status):
        """Sets the mail_from_domain_status of this GetEmailIdentityResponseMailFromAttributes.


        :param mail_from_domain_status: The mail_from_domain_status of this GetEmailIdentityResponseMailFromAttributes.
        :type mail_from_domain_status: MailFromDomainStatus
        """
        if mail_from_domain_status is None:
            raise ValueError("Invalid value for `mail_from_domain_status`, must not be `None`")

        self._mail_from_domain_status = mail_from_domain_status

    @property
    def behavior_on_mx_failure(self):
        """Gets the behavior_on_mx_failure of this GetEmailIdentityResponseMailFromAttributes.


        :return: The behavior_on_mx_failure of this GetEmailIdentityResponseMailFromAttributes.
        :rtype: BehaviorOnMxFailure
        """
        return self._behavior_on_mx_failure

    @behavior_on_mx_failure.setter
    def behavior_on_mx_failure(self, behavior_on_mx_failure):
        """Sets the behavior_on_mx_failure of this GetEmailIdentityResponseMailFromAttributes.


        :param behavior_on_mx_failure: The behavior_on_mx_failure of this GetEmailIdentityResponseMailFromAttributes.
        :type behavior_on_mx_failure: BehaviorOnMxFailure
        """
        if behavior_on_mx_failure is None:
            raise ValueError("Invalid value for `behavior_on_mx_failure`, must not be `None`")

        self._behavior_on_mx_failure = behavior_on_mx_failure
