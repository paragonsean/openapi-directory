# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_email_template_request_template_content import CreateEmailTemplateRequestTemplateContent
from openapi_server import util


class UpdateEmailTemplateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, template_content: CreateEmailTemplateRequestTemplateContent=None):
        """UpdateEmailTemplateRequest - a model defined in OpenAPI

        :param template_content: The template_content of this UpdateEmailTemplateRequest.
        """
        self.openapi_types = {
            'template_content': CreateEmailTemplateRequestTemplateContent
        }

        self.attribute_map = {
            'template_content': 'TemplateContent'
        }

        self._template_content = template_content

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateEmailTemplateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateEmailTemplate_request of this UpdateEmailTemplateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def template_content(self):
        """Gets the template_content of this UpdateEmailTemplateRequest.


        :return: The template_content of this UpdateEmailTemplateRequest.
        :rtype: CreateEmailTemplateRequestTemplateContent
        """
        return self._template_content

    @template_content.setter
    def template_content(self, template_content):
        """Sets the template_content of this UpdateEmailTemplateRequest.


        :param template_content: The template_content of this UpdateEmailTemplateRequest.
        :type template_content: CreateEmailTemplateRequestTemplateContent
        """
        if template_content is None:
            raise ValueError("Invalid value for `template_content`, must not be `None`")

        self._template_content = template_content
