# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_contacts_request_filter_topic_filter import ListContactsRequestFilterTopicFilter
from openapi_server.models.subscription_status import SubscriptionStatus
from openapi_server import util


class ListContactsRequestFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filtered_status: SubscriptionStatus=None, topic_filter: ListContactsRequestFilterTopicFilter=None):
        """ListContactsRequestFilter - a model defined in OpenAPI

        :param filtered_status: The filtered_status of this ListContactsRequestFilter.
        :param topic_filter: The topic_filter of this ListContactsRequestFilter.
        """
        self.openapi_types = {
            'filtered_status': SubscriptionStatus,
            'topic_filter': ListContactsRequestFilterTopicFilter
        }

        self.attribute_map = {
            'filtered_status': 'FilteredStatus',
            'topic_filter': 'TopicFilter'
        }

        self._filtered_status = filtered_status
        self._topic_filter = topic_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListContactsRequestFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListContactsRequest_Filter of this ListContactsRequestFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filtered_status(self):
        """Gets the filtered_status of this ListContactsRequestFilter.


        :return: The filtered_status of this ListContactsRequestFilter.
        :rtype: SubscriptionStatus
        """
        return self._filtered_status

    @filtered_status.setter
    def filtered_status(self, filtered_status):
        """Sets the filtered_status of this ListContactsRequestFilter.


        :param filtered_status: The filtered_status of this ListContactsRequestFilter.
        :type filtered_status: SubscriptionStatus
        """

        self._filtered_status = filtered_status

    @property
    def topic_filter(self):
        """Gets the topic_filter of this ListContactsRequestFilter.


        :return: The topic_filter of this ListContactsRequestFilter.
        :rtype: ListContactsRequestFilterTopicFilter
        """
        return self._topic_filter

    @topic_filter.setter
    def topic_filter(self, topic_filter):
        """Sets the topic_filter of this ListContactsRequestFilter.


        :param topic_filter: The topic_filter of this ListContactsRequestFilter.
        :type topic_filter: ListContactsRequestFilterTopicFilter
        """

        self._topic_filter = topic_filter
