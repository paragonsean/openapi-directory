# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_details_review_details import AccountDetailsReviewDetails
from openapi_server.models.contact_language import ContactLanguage
from openapi_server.models.mail_type import MailType
from openapi_server import util


class AccountDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mail_type: MailType=None, website_url: str=None, contact_language: ContactLanguage=None, use_case_description: str=None, additional_contact_email_addresses: List=None, review_details: AccountDetailsReviewDetails=None):
        """AccountDetails - a model defined in OpenAPI

        :param mail_type: The mail_type of this AccountDetails.
        :param website_url: The website_url of this AccountDetails.
        :param contact_language: The contact_language of this AccountDetails.
        :param use_case_description: The use_case_description of this AccountDetails.
        :param additional_contact_email_addresses: The additional_contact_email_addresses of this AccountDetails.
        :param review_details: The review_details of this AccountDetails.
        """
        self.openapi_types = {
            'mail_type': MailType,
            'website_url': str,
            'contact_language': ContactLanguage,
            'use_case_description': str,
            'additional_contact_email_addresses': List,
            'review_details': AccountDetailsReviewDetails
        }

        self.attribute_map = {
            'mail_type': 'MailType',
            'website_url': 'WebsiteURL',
            'contact_language': 'ContactLanguage',
            'use_case_description': 'UseCaseDescription',
            'additional_contact_email_addresses': 'AdditionalContactEmailAddresses',
            'review_details': 'ReviewDetails'
        }

        self._mail_type = mail_type
        self._website_url = website_url
        self._contact_language = contact_language
        self._use_case_description = use_case_description
        self._additional_contact_email_addresses = additional_contact_email_addresses
        self._review_details = review_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountDetails of this AccountDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mail_type(self):
        """Gets the mail_type of this AccountDetails.


        :return: The mail_type of this AccountDetails.
        :rtype: MailType
        """
        return self._mail_type

    @mail_type.setter
    def mail_type(self, mail_type):
        """Sets the mail_type of this AccountDetails.


        :param mail_type: The mail_type of this AccountDetails.
        :type mail_type: MailType
        """

        self._mail_type = mail_type

    @property
    def website_url(self):
        """Gets the website_url of this AccountDetails.


        :return: The website_url of this AccountDetails.
        :rtype: str
        """
        return self._website_url

    @website_url.setter
    def website_url(self, website_url):
        """Sets the website_url of this AccountDetails.


        :param website_url: The website_url of this AccountDetails.
        :type website_url: str
        """

        self._website_url = website_url

    @property
    def contact_language(self):
        """Gets the contact_language of this AccountDetails.


        :return: The contact_language of this AccountDetails.
        :rtype: ContactLanguage
        """
        return self._contact_language

    @contact_language.setter
    def contact_language(self, contact_language):
        """Sets the contact_language of this AccountDetails.


        :param contact_language: The contact_language of this AccountDetails.
        :type contact_language: ContactLanguage
        """

        self._contact_language = contact_language

    @property
    def use_case_description(self):
        """Gets the use_case_description of this AccountDetails.


        :return: The use_case_description of this AccountDetails.
        :rtype: str
        """
        return self._use_case_description

    @use_case_description.setter
    def use_case_description(self, use_case_description):
        """Sets the use_case_description of this AccountDetails.


        :param use_case_description: The use_case_description of this AccountDetails.
        :type use_case_description: str
        """

        self._use_case_description = use_case_description

    @property
    def additional_contact_email_addresses(self):
        """Gets the additional_contact_email_addresses of this AccountDetails.


        :return: The additional_contact_email_addresses of this AccountDetails.
        :rtype: List
        """
        return self._additional_contact_email_addresses

    @additional_contact_email_addresses.setter
    def additional_contact_email_addresses(self, additional_contact_email_addresses):
        """Sets the additional_contact_email_addresses of this AccountDetails.


        :param additional_contact_email_addresses: The additional_contact_email_addresses of this AccountDetails.
        :type additional_contact_email_addresses: List
        """

        self._additional_contact_email_addresses = additional_contact_email_addresses

    @property
    def review_details(self):
        """Gets the review_details of this AccountDetails.


        :return: The review_details of this AccountDetails.
        :rtype: AccountDetailsReviewDetails
        """
        return self._review_details

    @review_details.setter
    def review_details(self, review_details):
        """Sets the review_details of this AccountDetails.


        :param review_details: The review_details of this AccountDetails.
        :type review_details: AccountDetailsReviewDetails
        """

        self._review_details = review_details
