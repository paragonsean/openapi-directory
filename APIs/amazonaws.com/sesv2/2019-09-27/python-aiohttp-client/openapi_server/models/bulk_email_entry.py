# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bulk_email_entry_destination import BulkEmailEntryDestination
from openapi_server.models.bulk_email_entry_replacement_email_content import BulkEmailEntryReplacementEmailContent
from openapi_server import util


class BulkEmailEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination: BulkEmailEntryDestination=None, replacement_tags: List=None, replacement_email_content: BulkEmailEntryReplacementEmailContent=None):
        """BulkEmailEntry - a model defined in OpenAPI

        :param destination: The destination of this BulkEmailEntry.
        :param replacement_tags: The replacement_tags of this BulkEmailEntry.
        :param replacement_email_content: The replacement_email_content of this BulkEmailEntry.
        """
        self.openapi_types = {
            'destination': BulkEmailEntryDestination,
            'replacement_tags': List,
            'replacement_email_content': BulkEmailEntryReplacementEmailContent
        }

        self.attribute_map = {
            'destination': 'Destination',
            'replacement_tags': 'ReplacementTags',
            'replacement_email_content': 'ReplacementEmailContent'
        }

        self._destination = destination
        self._replacement_tags = replacement_tags
        self._replacement_email_content = replacement_email_content

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkEmailEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkEmailEntry of this BulkEmailEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination(self):
        """Gets the destination of this BulkEmailEntry.


        :return: The destination of this BulkEmailEntry.
        :rtype: BulkEmailEntryDestination
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this BulkEmailEntry.


        :param destination: The destination of this BulkEmailEntry.
        :type destination: BulkEmailEntryDestination
        """
        if destination is None:
            raise ValueError("Invalid value for `destination`, must not be `None`")

        self._destination = destination

    @property
    def replacement_tags(self):
        """Gets the replacement_tags of this BulkEmailEntry.


        :return: The replacement_tags of this BulkEmailEntry.
        :rtype: List
        """
        return self._replacement_tags

    @replacement_tags.setter
    def replacement_tags(self, replacement_tags):
        """Sets the replacement_tags of this BulkEmailEntry.


        :param replacement_tags: The replacement_tags of this BulkEmailEntry.
        :type replacement_tags: List
        """

        self._replacement_tags = replacement_tags

    @property
    def replacement_email_content(self):
        """Gets the replacement_email_content of this BulkEmailEntry.


        :return: The replacement_email_content of this BulkEmailEntry.
        :rtype: BulkEmailEntryReplacementEmailContent
        """
        return self._replacement_email_content

    @replacement_email_content.setter
    def replacement_email_content(self, replacement_email_content):
        """Sets the replacement_email_content of this BulkEmailEntry.


        :param replacement_email_content: The replacement_email_content of this BulkEmailEntry.
        :type replacement_email_content: BulkEmailEntryReplacementEmailContent
        """

        self._replacement_email_content = replacement_email_content
