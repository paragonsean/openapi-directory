# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DomainDeliverabilityCampaign(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, campaign_id: str=None, image_url: str=None, subject: str=None, from_address: str=None, sending_ips: List=None, first_seen_date_time: datetime=None, last_seen_date_time: datetime=None, inbox_count: int=None, spam_count: int=None, read_rate: float=None, delete_rate: float=None, read_delete_rate: float=None, projected_volume: int=None, esps: List=None):
        """DomainDeliverabilityCampaign - a model defined in OpenAPI

        :param campaign_id: The campaign_id of this DomainDeliverabilityCampaign.
        :param image_url: The image_url of this DomainDeliverabilityCampaign.
        :param subject: The subject of this DomainDeliverabilityCampaign.
        :param from_address: The from_address of this DomainDeliverabilityCampaign.
        :param sending_ips: The sending_ips of this DomainDeliverabilityCampaign.
        :param first_seen_date_time: The first_seen_date_time of this DomainDeliverabilityCampaign.
        :param last_seen_date_time: The last_seen_date_time of this DomainDeliverabilityCampaign.
        :param inbox_count: The inbox_count of this DomainDeliverabilityCampaign.
        :param spam_count: The spam_count of this DomainDeliverabilityCampaign.
        :param read_rate: The read_rate of this DomainDeliverabilityCampaign.
        :param delete_rate: The delete_rate of this DomainDeliverabilityCampaign.
        :param read_delete_rate: The read_delete_rate of this DomainDeliverabilityCampaign.
        :param projected_volume: The projected_volume of this DomainDeliverabilityCampaign.
        :param esps: The esps of this DomainDeliverabilityCampaign.
        """
        self.openapi_types = {
            'campaign_id': str,
            'image_url': str,
            'subject': str,
            'from_address': str,
            'sending_ips': List,
            'first_seen_date_time': datetime,
            'last_seen_date_time': datetime,
            'inbox_count': int,
            'spam_count': int,
            'read_rate': float,
            'delete_rate': float,
            'read_delete_rate': float,
            'projected_volume': int,
            'esps': List
        }

        self.attribute_map = {
            'campaign_id': 'CampaignId',
            'image_url': 'ImageUrl',
            'subject': 'Subject',
            'from_address': 'FromAddress',
            'sending_ips': 'SendingIps',
            'first_seen_date_time': 'FirstSeenDateTime',
            'last_seen_date_time': 'LastSeenDateTime',
            'inbox_count': 'InboxCount',
            'spam_count': 'SpamCount',
            'read_rate': 'ReadRate',
            'delete_rate': 'DeleteRate',
            'read_delete_rate': 'ReadDeleteRate',
            'projected_volume': 'ProjectedVolume',
            'esps': 'Esps'
        }

        self._campaign_id = campaign_id
        self._image_url = image_url
        self._subject = subject
        self._from_address = from_address
        self._sending_ips = sending_ips
        self._first_seen_date_time = first_seen_date_time
        self._last_seen_date_time = last_seen_date_time
        self._inbox_count = inbox_count
        self._spam_count = spam_count
        self._read_rate = read_rate
        self._delete_rate = delete_rate
        self._read_delete_rate = read_delete_rate
        self._projected_volume = projected_volume
        self._esps = esps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainDeliverabilityCampaign':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainDeliverabilityCampaign of this DomainDeliverabilityCampaign.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def campaign_id(self):
        """Gets the campaign_id of this DomainDeliverabilityCampaign.


        :return: The campaign_id of this DomainDeliverabilityCampaign.
        :rtype: str
        """
        return self._campaign_id

    @campaign_id.setter
    def campaign_id(self, campaign_id):
        """Sets the campaign_id of this DomainDeliverabilityCampaign.


        :param campaign_id: The campaign_id of this DomainDeliverabilityCampaign.
        :type campaign_id: str
        """

        self._campaign_id = campaign_id

    @property
    def image_url(self):
        """Gets the image_url of this DomainDeliverabilityCampaign.


        :return: The image_url of this DomainDeliverabilityCampaign.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this DomainDeliverabilityCampaign.


        :param image_url: The image_url of this DomainDeliverabilityCampaign.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def subject(self):
        """Gets the subject of this DomainDeliverabilityCampaign.


        :return: The subject of this DomainDeliverabilityCampaign.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this DomainDeliverabilityCampaign.


        :param subject: The subject of this DomainDeliverabilityCampaign.
        :type subject: str
        """

        self._subject = subject

    @property
    def from_address(self):
        """Gets the from_address of this DomainDeliverabilityCampaign.


        :return: The from_address of this DomainDeliverabilityCampaign.
        :rtype: str
        """
        return self._from_address

    @from_address.setter
    def from_address(self, from_address):
        """Sets the from_address of this DomainDeliverabilityCampaign.


        :param from_address: The from_address of this DomainDeliverabilityCampaign.
        :type from_address: str
        """

        self._from_address = from_address

    @property
    def sending_ips(self):
        """Gets the sending_ips of this DomainDeliverabilityCampaign.


        :return: The sending_ips of this DomainDeliverabilityCampaign.
        :rtype: List
        """
        return self._sending_ips

    @sending_ips.setter
    def sending_ips(self, sending_ips):
        """Sets the sending_ips of this DomainDeliverabilityCampaign.


        :param sending_ips: The sending_ips of this DomainDeliverabilityCampaign.
        :type sending_ips: List
        """

        self._sending_ips = sending_ips

    @property
    def first_seen_date_time(self):
        """Gets the first_seen_date_time of this DomainDeliverabilityCampaign.


        :return: The first_seen_date_time of this DomainDeliverabilityCampaign.
        :rtype: datetime
        """
        return self._first_seen_date_time

    @first_seen_date_time.setter
    def first_seen_date_time(self, first_seen_date_time):
        """Sets the first_seen_date_time of this DomainDeliverabilityCampaign.


        :param first_seen_date_time: The first_seen_date_time of this DomainDeliverabilityCampaign.
        :type first_seen_date_time: datetime
        """

        self._first_seen_date_time = first_seen_date_time

    @property
    def last_seen_date_time(self):
        """Gets the last_seen_date_time of this DomainDeliverabilityCampaign.


        :return: The last_seen_date_time of this DomainDeliverabilityCampaign.
        :rtype: datetime
        """
        return self._last_seen_date_time

    @last_seen_date_time.setter
    def last_seen_date_time(self, last_seen_date_time):
        """Sets the last_seen_date_time of this DomainDeliverabilityCampaign.


        :param last_seen_date_time: The last_seen_date_time of this DomainDeliverabilityCampaign.
        :type last_seen_date_time: datetime
        """

        self._last_seen_date_time = last_seen_date_time

    @property
    def inbox_count(self):
        """Gets the inbox_count of this DomainDeliverabilityCampaign.


        :return: The inbox_count of this DomainDeliverabilityCampaign.
        :rtype: int
        """
        return self._inbox_count

    @inbox_count.setter
    def inbox_count(self, inbox_count):
        """Sets the inbox_count of this DomainDeliverabilityCampaign.


        :param inbox_count: The inbox_count of this DomainDeliverabilityCampaign.
        :type inbox_count: int
        """

        self._inbox_count = inbox_count

    @property
    def spam_count(self):
        """Gets the spam_count of this DomainDeliverabilityCampaign.


        :return: The spam_count of this DomainDeliverabilityCampaign.
        :rtype: int
        """
        return self._spam_count

    @spam_count.setter
    def spam_count(self, spam_count):
        """Sets the spam_count of this DomainDeliverabilityCampaign.


        :param spam_count: The spam_count of this DomainDeliverabilityCampaign.
        :type spam_count: int
        """

        self._spam_count = spam_count

    @property
    def read_rate(self):
        """Gets the read_rate of this DomainDeliverabilityCampaign.


        :return: The read_rate of this DomainDeliverabilityCampaign.
        :rtype: float
        """
        return self._read_rate

    @read_rate.setter
    def read_rate(self, read_rate):
        """Sets the read_rate of this DomainDeliverabilityCampaign.


        :param read_rate: The read_rate of this DomainDeliverabilityCampaign.
        :type read_rate: float
        """

        self._read_rate = read_rate

    @property
    def delete_rate(self):
        """Gets the delete_rate of this DomainDeliverabilityCampaign.


        :return: The delete_rate of this DomainDeliverabilityCampaign.
        :rtype: float
        """
        return self._delete_rate

    @delete_rate.setter
    def delete_rate(self, delete_rate):
        """Sets the delete_rate of this DomainDeliverabilityCampaign.


        :param delete_rate: The delete_rate of this DomainDeliverabilityCampaign.
        :type delete_rate: float
        """

        self._delete_rate = delete_rate

    @property
    def read_delete_rate(self):
        """Gets the read_delete_rate of this DomainDeliverabilityCampaign.


        :return: The read_delete_rate of this DomainDeliverabilityCampaign.
        :rtype: float
        """
        return self._read_delete_rate

    @read_delete_rate.setter
    def read_delete_rate(self, read_delete_rate):
        """Sets the read_delete_rate of this DomainDeliverabilityCampaign.


        :param read_delete_rate: The read_delete_rate of this DomainDeliverabilityCampaign.
        :type read_delete_rate: float
        """

        self._read_delete_rate = read_delete_rate

    @property
    def projected_volume(self):
        """Gets the projected_volume of this DomainDeliverabilityCampaign.


        :return: The projected_volume of this DomainDeliverabilityCampaign.
        :rtype: int
        """
        return self._projected_volume

    @projected_volume.setter
    def projected_volume(self, projected_volume):
        """Sets the projected_volume of this DomainDeliverabilityCampaign.


        :param projected_volume: The projected_volume of this DomainDeliverabilityCampaign.
        :type projected_volume: int
        """

        self._projected_volume = projected_volume

    @property
    def esps(self):
        """Gets the esps of this DomainDeliverabilityCampaign.


        :return: The esps of this DomainDeliverabilityCampaign.
        :rtype: List
        """
        return self._esps

    @esps.setter
    def esps(self, esps):
        """Sets the esps of this DomainDeliverabilityCampaign.


        :param esps: The esps of this DomainDeliverabilityCampaign.
        :type esps: List
        """

        self._esps = esps
