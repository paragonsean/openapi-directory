# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_deliverability_test_report_response_deliverability_test_report import GetDeliverabilityTestReportResponseDeliverabilityTestReport
from openapi_server.models.get_deliverability_test_report_response_overall_placement import GetDeliverabilityTestReportResponseOverallPlacement
from openapi_server import util


class GetDeliverabilityTestReportResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deliverability_test_report: GetDeliverabilityTestReportResponseDeliverabilityTestReport=None, overall_placement: GetDeliverabilityTestReportResponseOverallPlacement=None, isp_placements: List=None, message: str=None, tags: List=None):
        """GetDeliverabilityTestReportResponse - a model defined in OpenAPI

        :param deliverability_test_report: The deliverability_test_report of this GetDeliverabilityTestReportResponse.
        :param overall_placement: The overall_placement of this GetDeliverabilityTestReportResponse.
        :param isp_placements: The isp_placements of this GetDeliverabilityTestReportResponse.
        :param message: The message of this GetDeliverabilityTestReportResponse.
        :param tags: The tags of this GetDeliverabilityTestReportResponse.
        """
        self.openapi_types = {
            'deliverability_test_report': GetDeliverabilityTestReportResponseDeliverabilityTestReport,
            'overall_placement': GetDeliverabilityTestReportResponseOverallPlacement,
            'isp_placements': List,
            'message': str,
            'tags': List
        }

        self.attribute_map = {
            'deliverability_test_report': 'DeliverabilityTestReport',
            'overall_placement': 'OverallPlacement',
            'isp_placements': 'IspPlacements',
            'message': 'Message',
            'tags': 'Tags'
        }

        self._deliverability_test_report = deliverability_test_report
        self._overall_placement = overall_placement
        self._isp_placements = isp_placements
        self._message = message
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDeliverabilityTestReportResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDeliverabilityTestReportResponse of this GetDeliverabilityTestReportResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deliverability_test_report(self):
        """Gets the deliverability_test_report of this GetDeliverabilityTestReportResponse.


        :return: The deliverability_test_report of this GetDeliverabilityTestReportResponse.
        :rtype: GetDeliverabilityTestReportResponseDeliverabilityTestReport
        """
        return self._deliverability_test_report

    @deliverability_test_report.setter
    def deliverability_test_report(self, deliverability_test_report):
        """Sets the deliverability_test_report of this GetDeliverabilityTestReportResponse.


        :param deliverability_test_report: The deliverability_test_report of this GetDeliverabilityTestReportResponse.
        :type deliverability_test_report: GetDeliverabilityTestReportResponseDeliverabilityTestReport
        """
        if deliverability_test_report is None:
            raise ValueError("Invalid value for `deliverability_test_report`, must not be `None`")

        self._deliverability_test_report = deliverability_test_report

    @property
    def overall_placement(self):
        """Gets the overall_placement of this GetDeliverabilityTestReportResponse.


        :return: The overall_placement of this GetDeliverabilityTestReportResponse.
        :rtype: GetDeliverabilityTestReportResponseOverallPlacement
        """
        return self._overall_placement

    @overall_placement.setter
    def overall_placement(self, overall_placement):
        """Sets the overall_placement of this GetDeliverabilityTestReportResponse.


        :param overall_placement: The overall_placement of this GetDeliverabilityTestReportResponse.
        :type overall_placement: GetDeliverabilityTestReportResponseOverallPlacement
        """
        if overall_placement is None:
            raise ValueError("Invalid value for `overall_placement`, must not be `None`")

        self._overall_placement = overall_placement

    @property
    def isp_placements(self):
        """Gets the isp_placements of this GetDeliverabilityTestReportResponse.


        :return: The isp_placements of this GetDeliverabilityTestReportResponse.
        :rtype: List
        """
        return self._isp_placements

    @isp_placements.setter
    def isp_placements(self, isp_placements):
        """Sets the isp_placements of this GetDeliverabilityTestReportResponse.


        :param isp_placements: The isp_placements of this GetDeliverabilityTestReportResponse.
        :type isp_placements: List
        """
        if isp_placements is None:
            raise ValueError("Invalid value for `isp_placements`, must not be `None`")

        self._isp_placements = isp_placements

    @property
    def message(self):
        """Gets the message of this GetDeliverabilityTestReportResponse.


        :return: The message of this GetDeliverabilityTestReportResponse.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GetDeliverabilityTestReportResponse.


        :param message: The message of this GetDeliverabilityTestReportResponse.
        :type message: str
        """

        self._message = message

    @property
    def tags(self):
        """Gets the tags of this GetDeliverabilityTestReportResponse.


        :return: The tags of this GetDeliverabilityTestReportResponse.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GetDeliverabilityTestReportResponse.


        :param tags: The tags of this GetDeliverabilityTestReportResponse.
        :type tags: List
        """

        self._tags = tags
