# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bulk_email_entry import BulkEmailEntry
from openapi_server.models.message_tag import MessageTag
from openapi_server.models.send_bulk_email_request_default_content import SendBulkEmailRequestDefaultContent
from openapi_server import util


class SendBulkEmailRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, from_email_address: str=None, from_email_address_identity_arn: str=None, reply_to_addresses: List[str]=None, feedback_forwarding_email_address: str=None, feedback_forwarding_email_address_identity_arn: str=None, default_email_tags: List[MessageTag]=None, default_content: SendBulkEmailRequestDefaultContent=None, bulk_email_entries: List[BulkEmailEntry]=None, configuration_set_name: str=None):
        """SendBulkEmailRequest - a model defined in OpenAPI

        :param from_email_address: The from_email_address of this SendBulkEmailRequest.
        :param from_email_address_identity_arn: The from_email_address_identity_arn of this SendBulkEmailRequest.
        :param reply_to_addresses: The reply_to_addresses of this SendBulkEmailRequest.
        :param feedback_forwarding_email_address: The feedback_forwarding_email_address of this SendBulkEmailRequest.
        :param feedback_forwarding_email_address_identity_arn: The feedback_forwarding_email_address_identity_arn of this SendBulkEmailRequest.
        :param default_email_tags: The default_email_tags of this SendBulkEmailRequest.
        :param default_content: The default_content of this SendBulkEmailRequest.
        :param bulk_email_entries: The bulk_email_entries of this SendBulkEmailRequest.
        :param configuration_set_name: The configuration_set_name of this SendBulkEmailRequest.
        """
        self.openapi_types = {
            'from_email_address': str,
            'from_email_address_identity_arn': str,
            'reply_to_addresses': List[str],
            'feedback_forwarding_email_address': str,
            'feedback_forwarding_email_address_identity_arn': str,
            'default_email_tags': List[MessageTag],
            'default_content': SendBulkEmailRequestDefaultContent,
            'bulk_email_entries': List[BulkEmailEntry],
            'configuration_set_name': str
        }

        self.attribute_map = {
            'from_email_address': 'FromEmailAddress',
            'from_email_address_identity_arn': 'FromEmailAddressIdentityArn',
            'reply_to_addresses': 'ReplyToAddresses',
            'feedback_forwarding_email_address': 'FeedbackForwardingEmailAddress',
            'feedback_forwarding_email_address_identity_arn': 'FeedbackForwardingEmailAddressIdentityArn',
            'default_email_tags': 'DefaultEmailTags',
            'default_content': 'DefaultContent',
            'bulk_email_entries': 'BulkEmailEntries',
            'configuration_set_name': 'ConfigurationSetName'
        }

        self._from_email_address = from_email_address
        self._from_email_address_identity_arn = from_email_address_identity_arn
        self._reply_to_addresses = reply_to_addresses
        self._feedback_forwarding_email_address = feedback_forwarding_email_address
        self._feedback_forwarding_email_address_identity_arn = feedback_forwarding_email_address_identity_arn
        self._default_email_tags = default_email_tags
        self._default_content = default_content
        self._bulk_email_entries = bulk_email_entries
        self._configuration_set_name = configuration_set_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendBulkEmailRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendBulkEmail_request of this SendBulkEmailRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def from_email_address(self):
        """Gets the from_email_address of this SendBulkEmailRequest.

        The email address to use as the \"From\" address for the email. The address that you specify has to be verified.

        :return: The from_email_address of this SendBulkEmailRequest.
        :rtype: str
        """
        return self._from_email_address

    @from_email_address.setter
    def from_email_address(self, from_email_address):
        """Sets the from_email_address of this SendBulkEmailRequest.

        The email address to use as the \"From\" address for the email. The address that you specify has to be verified.

        :param from_email_address: The from_email_address of this SendBulkEmailRequest.
        :type from_email_address: str
        """

        self._from_email_address = from_email_address

    @property
    def from_email_address_identity_arn(self):
        """Gets the from_email_address_identity_arn of this SendBulkEmailRequest.

        <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FromEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use sender@example.com, then you would specify the <code>FromEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FromEmailAddress</code> to be sender@example.com.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p>

        :return: The from_email_address_identity_arn of this SendBulkEmailRequest.
        :rtype: str
        """
        return self._from_email_address_identity_arn

    @from_email_address_identity_arn.setter
    def from_email_address_identity_arn(self, from_email_address_identity_arn):
        """Sets the from_email_address_identity_arn of this SendBulkEmailRequest.

        <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FromEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use sender@example.com, then you would specify the <code>FromEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FromEmailAddress</code> to be sender@example.com.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p>

        :param from_email_address_identity_arn: The from_email_address_identity_arn of this SendBulkEmailRequest.
        :type from_email_address_identity_arn: str
        """

        self._from_email_address_identity_arn = from_email_address_identity_arn

    @property
    def reply_to_addresses(self):
        """Gets the reply_to_addresses of this SendBulkEmailRequest.

        The \"Reply-to\" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.

        :return: The reply_to_addresses of this SendBulkEmailRequest.
        :rtype: List[str]
        """
        return self._reply_to_addresses

    @reply_to_addresses.setter
    def reply_to_addresses(self, reply_to_addresses):
        """Sets the reply_to_addresses of this SendBulkEmailRequest.

        The \"Reply-to\" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.

        :param reply_to_addresses: The reply_to_addresses of this SendBulkEmailRequest.
        :type reply_to_addresses: List[str]
        """

        self._reply_to_addresses = reply_to_addresses

    @property
    def feedback_forwarding_email_address(self):
        """Gets the feedback_forwarding_email_address of this SendBulkEmailRequest.

        The address that you want bounce and complaint notifications to be sent to.

        :return: The feedback_forwarding_email_address of this SendBulkEmailRequest.
        :rtype: str
        """
        return self._feedback_forwarding_email_address

    @feedback_forwarding_email_address.setter
    def feedback_forwarding_email_address(self, feedback_forwarding_email_address):
        """Sets the feedback_forwarding_email_address of this SendBulkEmailRequest.

        The address that you want bounce and complaint notifications to be sent to.

        :param feedback_forwarding_email_address: The feedback_forwarding_email_address of this SendBulkEmailRequest.
        :type feedback_forwarding_email_address: str
        """

        self._feedback_forwarding_email_address = feedback_forwarding_email_address

    @property
    def feedback_forwarding_email_address_identity_arn(self):
        """Gets the feedback_forwarding_email_address_identity_arn of this SendBulkEmailRequest.

        <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FeedbackForwardingEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use feedback@example.com, then you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p>

        :return: The feedback_forwarding_email_address_identity_arn of this SendBulkEmailRequest.
        :rtype: str
        """
        return self._feedback_forwarding_email_address_identity_arn

    @feedback_forwarding_email_address_identity_arn.setter
    def feedback_forwarding_email_address_identity_arn(self, feedback_forwarding_email_address_identity_arn):
        """Sets the feedback_forwarding_email_address_identity_arn of this SendBulkEmailRequest.

        <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FeedbackForwardingEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use feedback@example.com, then you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p> <p>For more information about sending authorization, see the <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p>

        :param feedback_forwarding_email_address_identity_arn: The feedback_forwarding_email_address_identity_arn of this SendBulkEmailRequest.
        :type feedback_forwarding_email_address_identity_arn: str
        """

        self._feedback_forwarding_email_address_identity_arn = feedback_forwarding_email_address_identity_arn

    @property
    def default_email_tags(self):
        """Gets the default_email_tags of this SendBulkEmailRequest.

        A list of message tags.

        :return: The default_email_tags of this SendBulkEmailRequest.
        :rtype: List[MessageTag]
        """
        return self._default_email_tags

    @default_email_tags.setter
    def default_email_tags(self, default_email_tags):
        """Sets the default_email_tags of this SendBulkEmailRequest.

        A list of message tags.

        :param default_email_tags: The default_email_tags of this SendBulkEmailRequest.
        :type default_email_tags: List[MessageTag]
        """

        self._default_email_tags = default_email_tags

    @property
    def default_content(self):
        """Gets the default_content of this SendBulkEmailRequest.


        :return: The default_content of this SendBulkEmailRequest.
        :rtype: SendBulkEmailRequestDefaultContent
        """
        return self._default_content

    @default_content.setter
    def default_content(self, default_content):
        """Sets the default_content of this SendBulkEmailRequest.


        :param default_content: The default_content of this SendBulkEmailRequest.
        :type default_content: SendBulkEmailRequestDefaultContent
        """
        if default_content is None:
            raise ValueError("Invalid value for `default_content`, must not be `None`")

        self._default_content = default_content

    @property
    def bulk_email_entries(self):
        """Gets the bulk_email_entries of this SendBulkEmailRequest.

        A list of <code>BulkEmailEntry</code> objects.

        :return: The bulk_email_entries of this SendBulkEmailRequest.
        :rtype: List[BulkEmailEntry]
        """
        return self._bulk_email_entries

    @bulk_email_entries.setter
    def bulk_email_entries(self, bulk_email_entries):
        """Sets the bulk_email_entries of this SendBulkEmailRequest.

        A list of <code>BulkEmailEntry</code> objects.

        :param bulk_email_entries: The bulk_email_entries of this SendBulkEmailRequest.
        :type bulk_email_entries: List[BulkEmailEntry]
        """
        if bulk_email_entries is None:
            raise ValueError("Invalid value for `bulk_email_entries`, must not be `None`")

        self._bulk_email_entries = bulk_email_entries

    @property
    def configuration_set_name(self):
        """Gets the configuration_set_name of this SendBulkEmailRequest.

        <p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>

        :return: The configuration_set_name of this SendBulkEmailRequest.
        :rtype: str
        """
        return self._configuration_set_name

    @configuration_set_name.setter
    def configuration_set_name(self, configuration_set_name):
        """Sets the configuration_set_name of this SendBulkEmailRequest.

        <p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>

        :param configuration_set_name: The configuration_set_name of this SendBulkEmailRequest.
        :type configuration_set_name: str
        """

        self._configuration_set_name = configuration_set_name
