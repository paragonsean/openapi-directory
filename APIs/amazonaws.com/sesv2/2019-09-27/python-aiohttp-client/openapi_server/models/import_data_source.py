# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_format import DataFormat
from openapi_server import util


class ImportDataSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_url: str=None, data_format: DataFormat=None):
        """ImportDataSource - a model defined in OpenAPI

        :param s3_url: The s3_url of this ImportDataSource.
        :param data_format: The data_format of this ImportDataSource.
        """
        self.openapi_types = {
            's3_url': str,
            'data_format': DataFormat
        }

        self.attribute_map = {
            's3_url': 'S3Url',
            'data_format': 'DataFormat'
        }

        self._s3_url = s3_url
        self._data_format = data_format

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportDataSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportDataSource of this ImportDataSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_url(self):
        """Gets the s3_url of this ImportDataSource.


        :return: The s3_url of this ImportDataSource.
        :rtype: str
        """
        return self._s3_url

    @s3_url.setter
    def s3_url(self, s3_url):
        """Sets the s3_url of this ImportDataSource.


        :param s3_url: The s3_url of this ImportDataSource.
        :type s3_url: str
        """
        if s3_url is None:
            raise ValueError("Invalid value for `s3_url`, must not be `None`")

        self._s3_url = s3_url

    @property
    def data_format(self):
        """Gets the data_format of this ImportDataSource.


        :return: The data_format of this ImportDataSource.
        :rtype: DataFormat
        """
        return self._data_format

    @data_format.setter
    def data_format(self, data_format):
        """Sets the data_format of this ImportDataSource.


        :param data_format: The data_format of this ImportDataSource.
        :type data_format: DataFormat
        """
        if data_format is None:
            raise ValueError("Invalid value for `data_format`, must not be `None`")

        self._data_format = data_format
