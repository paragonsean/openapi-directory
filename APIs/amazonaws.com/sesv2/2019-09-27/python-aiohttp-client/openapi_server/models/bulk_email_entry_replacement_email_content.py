# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.replacement_email_content_replacement_template import ReplacementEmailContentReplacementTemplate
from openapi_server import util


class BulkEmailEntryReplacementEmailContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, replacement_template: ReplacementEmailContentReplacementTemplate=None):
        """BulkEmailEntryReplacementEmailContent - a model defined in OpenAPI

        :param replacement_template: The replacement_template of this BulkEmailEntryReplacementEmailContent.
        """
        self.openapi_types = {
            'replacement_template': ReplacementEmailContentReplacementTemplate
        }

        self.attribute_map = {
            'replacement_template': 'ReplacementTemplate'
        }

        self._replacement_template = replacement_template

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkEmailEntryReplacementEmailContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkEmailEntry_ReplacementEmailContent of this BulkEmailEntryReplacementEmailContent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def replacement_template(self):
        """Gets the replacement_template of this BulkEmailEntryReplacementEmailContent.


        :return: The replacement_template of this BulkEmailEntryReplacementEmailContent.
        :rtype: ReplacementEmailContentReplacementTemplate
        """
        return self._replacement_template

    @replacement_template.setter
    def replacement_template(self, replacement_template):
        """Sets the replacement_template of this BulkEmailEntryReplacementEmailContent.


        :param replacement_template: The replacement_template of this BulkEmailEntryReplacementEmailContent.
        :type replacement_template: ReplacementEmailContentReplacementTemplate
        """

        self._replacement_template = replacement_template
