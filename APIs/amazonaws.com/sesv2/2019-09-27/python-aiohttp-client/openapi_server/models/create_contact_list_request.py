# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tag import Tag
from openapi_server.models.topic import Topic
from openapi_server import util


class CreateContactListRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_list_name: str=None, topics: List[Topic]=None, description: str=None, tags: List[Tag]=None):
        """CreateContactListRequest - a model defined in OpenAPI

        :param contact_list_name: The contact_list_name of this CreateContactListRequest.
        :param topics: The topics of this CreateContactListRequest.
        :param description: The description of this CreateContactListRequest.
        :param tags: The tags of this CreateContactListRequest.
        """
        self.openapi_types = {
            'contact_list_name': str,
            'topics': List[Topic],
            'description': str,
            'tags': List[Tag]
        }

        self.attribute_map = {
            'contact_list_name': 'ContactListName',
            'topics': 'Topics',
            'description': 'Description',
            'tags': 'Tags'
        }

        self._contact_list_name = contact_list_name
        self._topics = topics
        self._description = description
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateContactListRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateContactList_request of this CreateContactListRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_list_name(self):
        """Gets the contact_list_name of this CreateContactListRequest.

        The name of the contact list.

        :return: The contact_list_name of this CreateContactListRequest.
        :rtype: str
        """
        return self._contact_list_name

    @contact_list_name.setter
    def contact_list_name(self, contact_list_name):
        """Sets the contact_list_name of this CreateContactListRequest.

        The name of the contact list.

        :param contact_list_name: The contact_list_name of this CreateContactListRequest.
        :type contact_list_name: str
        """
        if contact_list_name is None:
            raise ValueError("Invalid value for `contact_list_name`, must not be `None`")

        self._contact_list_name = contact_list_name

    @property
    def topics(self):
        """Gets the topics of this CreateContactListRequest.

        An interest group, theme, or label within a list. A contact list can have multiple topics.

        :return: The topics of this CreateContactListRequest.
        :rtype: List[Topic]
        """
        return self._topics

    @topics.setter
    def topics(self, topics):
        """Sets the topics of this CreateContactListRequest.

        An interest group, theme, or label within a list. A contact list can have multiple topics.

        :param topics: The topics of this CreateContactListRequest.
        :type topics: List[Topic]
        """

        self._topics = topics

    @property
    def description(self):
        """Gets the description of this CreateContactListRequest.

        A description of what the contact list is about.

        :return: The description of this CreateContactListRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateContactListRequest.

        A description of what the contact list is about.

        :param description: The description of this CreateContactListRequest.
        :type description: str
        """

        self._description = description

    @property
    def tags(self):
        """Gets the tags of this CreateContactListRequest.

        The tags associated with a contact list.

        :return: The tags of this CreateContactListRequest.
        :rtype: List[Tag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateContactListRequest.

        The tags associated with a contact list.

        :param tags: The tags of this CreateContactListRequest.
        :type tags: List[Tag]
        """

        self._tags = tags
