# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_dedicated_ip_pool_response_dedicated_ip_pool import GetDedicatedIpPoolResponseDedicatedIpPool
from openapi_server import util


class GetDedicatedIpPoolResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dedicated_ip_pool: GetDedicatedIpPoolResponseDedicatedIpPool=None):
        """GetDedicatedIpPoolResponse - a model defined in OpenAPI

        :param dedicated_ip_pool: The dedicated_ip_pool of this GetDedicatedIpPoolResponse.
        """
        self.openapi_types = {
            'dedicated_ip_pool': GetDedicatedIpPoolResponseDedicatedIpPool
        }

        self.attribute_map = {
            'dedicated_ip_pool': 'DedicatedIpPool'
        }

        self._dedicated_ip_pool = dedicated_ip_pool

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDedicatedIpPoolResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDedicatedIpPoolResponse of this GetDedicatedIpPoolResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dedicated_ip_pool(self):
        """Gets the dedicated_ip_pool of this GetDedicatedIpPoolResponse.


        :return: The dedicated_ip_pool of this GetDedicatedIpPoolResponse.
        :rtype: GetDedicatedIpPoolResponseDedicatedIpPool
        """
        return self._dedicated_ip_pool

    @dedicated_ip_pool.setter
    def dedicated_ip_pool(self, dedicated_ip_pool):
        """Sets the dedicated_ip_pool of this GetDedicatedIpPoolResponse.


        :param dedicated_ip_pool: The dedicated_ip_pool of this GetDedicatedIpPoolResponse.
        :type dedicated_ip_pool: GetDedicatedIpPoolResponseDedicatedIpPool
        """

        self._dedicated_ip_pool = dedicated_ip_pool
