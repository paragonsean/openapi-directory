/*
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateDeliveryStreamInputAmazonOpenSearchServerlessDestinationConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputAmazonopensearchserviceDestinationConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputDeliveryStreamEncryptionConfigurationInput;
import org.openapitools.client.model.CreateDeliveryStreamInputElasticsearchDestinationConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputExtendedS3DestinationConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputHttpEndpointDestinationConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputKinesisStreamSourceConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputRedshiftDestinationConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputS3DestinationConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputSplunkDestinationConfiguration;
import org.openapitools.client.model.DeliveryStreamType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateDeliveryStreamInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:11.989141-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateDeliveryStreamInput {
  public static final String SERIALIZED_NAME_DELIVERY_STREAM_NAME = "DeliveryStreamName";
  @SerializedName(SERIALIZED_NAME_DELIVERY_STREAM_NAME)
  private String deliveryStreamName;

  public static final String SERIALIZED_NAME_DELIVERY_STREAM_TYPE = "DeliveryStreamType";
  @SerializedName(SERIALIZED_NAME_DELIVERY_STREAM_TYPE)
  private DeliveryStreamType deliveryStreamType;

  public static final String SERIALIZED_NAME_KINESIS_STREAM_SOURCE_CONFIGURATION = "KinesisStreamSourceConfiguration";
  @SerializedName(SERIALIZED_NAME_KINESIS_STREAM_SOURCE_CONFIGURATION)
  private CreateDeliveryStreamInputKinesisStreamSourceConfiguration kinesisStreamSourceConfiguration;

  public static final String SERIALIZED_NAME_DELIVERY_STREAM_ENCRYPTION_CONFIGURATION_INPUT = "DeliveryStreamEncryptionConfigurationInput";
  @SerializedName(SERIALIZED_NAME_DELIVERY_STREAM_ENCRYPTION_CONFIGURATION_INPUT)
  private CreateDeliveryStreamInputDeliveryStreamEncryptionConfigurationInput deliveryStreamEncryptionConfigurationInput;

  public static final String SERIALIZED_NAME_S3_DESTINATION_CONFIGURATION = "S3DestinationConfiguration";
  @SerializedName(SERIALIZED_NAME_S3_DESTINATION_CONFIGURATION)
  private CreateDeliveryStreamInputS3DestinationConfiguration s3DestinationConfiguration;

  public static final String SERIALIZED_NAME_EXTENDED_S3_DESTINATION_CONFIGURATION = "ExtendedS3DestinationConfiguration";
  @SerializedName(SERIALIZED_NAME_EXTENDED_S3_DESTINATION_CONFIGURATION)
  private CreateDeliveryStreamInputExtendedS3DestinationConfiguration extendedS3DestinationConfiguration;

  public static final String SERIALIZED_NAME_REDSHIFT_DESTINATION_CONFIGURATION = "RedshiftDestinationConfiguration";
  @SerializedName(SERIALIZED_NAME_REDSHIFT_DESTINATION_CONFIGURATION)
  private CreateDeliveryStreamInputRedshiftDestinationConfiguration redshiftDestinationConfiguration;

  public static final String SERIALIZED_NAME_ELASTICSEARCH_DESTINATION_CONFIGURATION = "ElasticsearchDestinationConfiguration";
  @SerializedName(SERIALIZED_NAME_ELASTICSEARCH_DESTINATION_CONFIGURATION)
  private CreateDeliveryStreamInputElasticsearchDestinationConfiguration elasticsearchDestinationConfiguration;

  public static final String SERIALIZED_NAME_AMAZONOPENSEARCHSERVICE_DESTINATION_CONFIGURATION = "AmazonopensearchserviceDestinationConfiguration";
  @SerializedName(SERIALIZED_NAME_AMAZONOPENSEARCHSERVICE_DESTINATION_CONFIGURATION)
  private CreateDeliveryStreamInputAmazonopensearchserviceDestinationConfiguration amazonopensearchserviceDestinationConfiguration;

  public static final String SERIALIZED_NAME_SPLUNK_DESTINATION_CONFIGURATION = "SplunkDestinationConfiguration";
  @SerializedName(SERIALIZED_NAME_SPLUNK_DESTINATION_CONFIGURATION)
  private CreateDeliveryStreamInputSplunkDestinationConfiguration splunkDestinationConfiguration;

  public static final String SERIALIZED_NAME_HTTP_ENDPOINT_DESTINATION_CONFIGURATION = "HttpEndpointDestinationConfiguration";
  @SerializedName(SERIALIZED_NAME_HTTP_ENDPOINT_DESTINATION_CONFIGURATION)
  private CreateDeliveryStreamInputHttpEndpointDestinationConfiguration httpEndpointDestinationConfiguration;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_AMAZON_OPEN_SEARCH_SERVERLESS_DESTINATION_CONFIGURATION = "AmazonOpenSearchServerlessDestinationConfiguration";
  @SerializedName(SERIALIZED_NAME_AMAZON_OPEN_SEARCH_SERVERLESS_DESTINATION_CONFIGURATION)
  private CreateDeliveryStreamInputAmazonOpenSearchServerlessDestinationConfiguration amazonOpenSearchServerlessDestinationConfiguration;

  public CreateDeliveryStreamInput() {
  }

  public CreateDeliveryStreamInput deliveryStreamName(String deliveryStreamName) {
    this.deliveryStreamName = deliveryStreamName;
    return this;
  }

  /**
   * Get deliveryStreamName
   * @return deliveryStreamName
   */
  @javax.annotation.Nonnull
  public String getDeliveryStreamName() {
    return deliveryStreamName;
  }

  public void setDeliveryStreamName(String deliveryStreamName) {
    this.deliveryStreamName = deliveryStreamName;
  }


  public CreateDeliveryStreamInput deliveryStreamType(DeliveryStreamType deliveryStreamType) {
    this.deliveryStreamType = deliveryStreamType;
    return this;
  }

  /**
   * Get deliveryStreamType
   * @return deliveryStreamType
   */
  @javax.annotation.Nullable
  public DeliveryStreamType getDeliveryStreamType() {
    return deliveryStreamType;
  }

  public void setDeliveryStreamType(DeliveryStreamType deliveryStreamType) {
    this.deliveryStreamType = deliveryStreamType;
  }


  public CreateDeliveryStreamInput kinesisStreamSourceConfiguration(CreateDeliveryStreamInputKinesisStreamSourceConfiguration kinesisStreamSourceConfiguration) {
    this.kinesisStreamSourceConfiguration = kinesisStreamSourceConfiguration;
    return this;
  }

  /**
   * Get kinesisStreamSourceConfiguration
   * @return kinesisStreamSourceConfiguration
   */
  @javax.annotation.Nullable
  public CreateDeliveryStreamInputKinesisStreamSourceConfiguration getKinesisStreamSourceConfiguration() {
    return kinesisStreamSourceConfiguration;
  }

  public void setKinesisStreamSourceConfiguration(CreateDeliveryStreamInputKinesisStreamSourceConfiguration kinesisStreamSourceConfiguration) {
    this.kinesisStreamSourceConfiguration = kinesisStreamSourceConfiguration;
  }


  public CreateDeliveryStreamInput deliveryStreamEncryptionConfigurationInput(CreateDeliveryStreamInputDeliveryStreamEncryptionConfigurationInput deliveryStreamEncryptionConfigurationInput) {
    this.deliveryStreamEncryptionConfigurationInput = deliveryStreamEncryptionConfigurationInput;
    return this;
  }

  /**
   * Get deliveryStreamEncryptionConfigurationInput
   * @return deliveryStreamEncryptionConfigurationInput
   */
  @javax.annotation.Nullable
  public CreateDeliveryStreamInputDeliveryStreamEncryptionConfigurationInput getDeliveryStreamEncryptionConfigurationInput() {
    return deliveryStreamEncryptionConfigurationInput;
  }

  public void setDeliveryStreamEncryptionConfigurationInput(CreateDeliveryStreamInputDeliveryStreamEncryptionConfigurationInput deliveryStreamEncryptionConfigurationInput) {
    this.deliveryStreamEncryptionConfigurationInput = deliveryStreamEncryptionConfigurationInput;
  }


  public CreateDeliveryStreamInput s3DestinationConfiguration(CreateDeliveryStreamInputS3DestinationConfiguration s3DestinationConfiguration) {
    this.s3DestinationConfiguration = s3DestinationConfiguration;
    return this;
  }

  /**
   * Get s3DestinationConfiguration
   * @return s3DestinationConfiguration
   */
  @javax.annotation.Nullable
  public CreateDeliveryStreamInputS3DestinationConfiguration getS3DestinationConfiguration() {
    return s3DestinationConfiguration;
  }

  public void setS3DestinationConfiguration(CreateDeliveryStreamInputS3DestinationConfiguration s3DestinationConfiguration) {
    this.s3DestinationConfiguration = s3DestinationConfiguration;
  }


  public CreateDeliveryStreamInput extendedS3DestinationConfiguration(CreateDeliveryStreamInputExtendedS3DestinationConfiguration extendedS3DestinationConfiguration) {
    this.extendedS3DestinationConfiguration = extendedS3DestinationConfiguration;
    return this;
  }

  /**
   * Get extendedS3DestinationConfiguration
   * @return extendedS3DestinationConfiguration
   */
  @javax.annotation.Nullable
  public CreateDeliveryStreamInputExtendedS3DestinationConfiguration getExtendedS3DestinationConfiguration() {
    return extendedS3DestinationConfiguration;
  }

  public void setExtendedS3DestinationConfiguration(CreateDeliveryStreamInputExtendedS3DestinationConfiguration extendedS3DestinationConfiguration) {
    this.extendedS3DestinationConfiguration = extendedS3DestinationConfiguration;
  }


  public CreateDeliveryStreamInput redshiftDestinationConfiguration(CreateDeliveryStreamInputRedshiftDestinationConfiguration redshiftDestinationConfiguration) {
    this.redshiftDestinationConfiguration = redshiftDestinationConfiguration;
    return this;
  }

  /**
   * Get redshiftDestinationConfiguration
   * @return redshiftDestinationConfiguration
   */
  @javax.annotation.Nullable
  public CreateDeliveryStreamInputRedshiftDestinationConfiguration getRedshiftDestinationConfiguration() {
    return redshiftDestinationConfiguration;
  }

  public void setRedshiftDestinationConfiguration(CreateDeliveryStreamInputRedshiftDestinationConfiguration redshiftDestinationConfiguration) {
    this.redshiftDestinationConfiguration = redshiftDestinationConfiguration;
  }


  public CreateDeliveryStreamInput elasticsearchDestinationConfiguration(CreateDeliveryStreamInputElasticsearchDestinationConfiguration elasticsearchDestinationConfiguration) {
    this.elasticsearchDestinationConfiguration = elasticsearchDestinationConfiguration;
    return this;
  }

  /**
   * Get elasticsearchDestinationConfiguration
   * @return elasticsearchDestinationConfiguration
   */
  @javax.annotation.Nullable
  public CreateDeliveryStreamInputElasticsearchDestinationConfiguration getElasticsearchDestinationConfiguration() {
    return elasticsearchDestinationConfiguration;
  }

  public void setElasticsearchDestinationConfiguration(CreateDeliveryStreamInputElasticsearchDestinationConfiguration elasticsearchDestinationConfiguration) {
    this.elasticsearchDestinationConfiguration = elasticsearchDestinationConfiguration;
  }


  public CreateDeliveryStreamInput amazonopensearchserviceDestinationConfiguration(CreateDeliveryStreamInputAmazonopensearchserviceDestinationConfiguration amazonopensearchserviceDestinationConfiguration) {
    this.amazonopensearchserviceDestinationConfiguration = amazonopensearchserviceDestinationConfiguration;
    return this;
  }

  /**
   * Get amazonopensearchserviceDestinationConfiguration
   * @return amazonopensearchserviceDestinationConfiguration
   */
  @javax.annotation.Nullable
  public CreateDeliveryStreamInputAmazonopensearchserviceDestinationConfiguration getAmazonopensearchserviceDestinationConfiguration() {
    return amazonopensearchserviceDestinationConfiguration;
  }

  public void setAmazonopensearchserviceDestinationConfiguration(CreateDeliveryStreamInputAmazonopensearchserviceDestinationConfiguration amazonopensearchserviceDestinationConfiguration) {
    this.amazonopensearchserviceDestinationConfiguration = amazonopensearchserviceDestinationConfiguration;
  }


  public CreateDeliveryStreamInput splunkDestinationConfiguration(CreateDeliveryStreamInputSplunkDestinationConfiguration splunkDestinationConfiguration) {
    this.splunkDestinationConfiguration = splunkDestinationConfiguration;
    return this;
  }

  /**
   * Get splunkDestinationConfiguration
   * @return splunkDestinationConfiguration
   */
  @javax.annotation.Nullable
  public CreateDeliveryStreamInputSplunkDestinationConfiguration getSplunkDestinationConfiguration() {
    return splunkDestinationConfiguration;
  }

  public void setSplunkDestinationConfiguration(CreateDeliveryStreamInputSplunkDestinationConfiguration splunkDestinationConfiguration) {
    this.splunkDestinationConfiguration = splunkDestinationConfiguration;
  }


  public CreateDeliveryStreamInput httpEndpointDestinationConfiguration(CreateDeliveryStreamInputHttpEndpointDestinationConfiguration httpEndpointDestinationConfiguration) {
    this.httpEndpointDestinationConfiguration = httpEndpointDestinationConfiguration;
    return this;
  }

  /**
   * Get httpEndpointDestinationConfiguration
   * @return httpEndpointDestinationConfiguration
   */
  @javax.annotation.Nullable
  public CreateDeliveryStreamInputHttpEndpointDestinationConfiguration getHttpEndpointDestinationConfiguration() {
    return httpEndpointDestinationConfiguration;
  }

  public void setHttpEndpointDestinationConfiguration(CreateDeliveryStreamInputHttpEndpointDestinationConfiguration httpEndpointDestinationConfiguration) {
    this.httpEndpointDestinationConfiguration = httpEndpointDestinationConfiguration;
  }


  public CreateDeliveryStreamInput tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public CreateDeliveryStreamInput amazonOpenSearchServerlessDestinationConfiguration(CreateDeliveryStreamInputAmazonOpenSearchServerlessDestinationConfiguration amazonOpenSearchServerlessDestinationConfiguration) {
    this.amazonOpenSearchServerlessDestinationConfiguration = amazonOpenSearchServerlessDestinationConfiguration;
    return this;
  }

  /**
   * Get amazonOpenSearchServerlessDestinationConfiguration
   * @return amazonOpenSearchServerlessDestinationConfiguration
   */
  @javax.annotation.Nullable
  public CreateDeliveryStreamInputAmazonOpenSearchServerlessDestinationConfiguration getAmazonOpenSearchServerlessDestinationConfiguration() {
    return amazonOpenSearchServerlessDestinationConfiguration;
  }

  public void setAmazonOpenSearchServerlessDestinationConfiguration(CreateDeliveryStreamInputAmazonOpenSearchServerlessDestinationConfiguration amazonOpenSearchServerlessDestinationConfiguration) {
    this.amazonOpenSearchServerlessDestinationConfiguration = amazonOpenSearchServerlessDestinationConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDeliveryStreamInput createDeliveryStreamInput = (CreateDeliveryStreamInput) o;
    return Objects.equals(this.deliveryStreamName, createDeliveryStreamInput.deliveryStreamName) &&
        Objects.equals(this.deliveryStreamType, createDeliveryStreamInput.deliveryStreamType) &&
        Objects.equals(this.kinesisStreamSourceConfiguration, createDeliveryStreamInput.kinesisStreamSourceConfiguration) &&
        Objects.equals(this.deliveryStreamEncryptionConfigurationInput, createDeliveryStreamInput.deliveryStreamEncryptionConfigurationInput) &&
        Objects.equals(this.s3DestinationConfiguration, createDeliveryStreamInput.s3DestinationConfiguration) &&
        Objects.equals(this.extendedS3DestinationConfiguration, createDeliveryStreamInput.extendedS3DestinationConfiguration) &&
        Objects.equals(this.redshiftDestinationConfiguration, createDeliveryStreamInput.redshiftDestinationConfiguration) &&
        Objects.equals(this.elasticsearchDestinationConfiguration, createDeliveryStreamInput.elasticsearchDestinationConfiguration) &&
        Objects.equals(this.amazonopensearchserviceDestinationConfiguration, createDeliveryStreamInput.amazonopensearchserviceDestinationConfiguration) &&
        Objects.equals(this.splunkDestinationConfiguration, createDeliveryStreamInput.splunkDestinationConfiguration) &&
        Objects.equals(this.httpEndpointDestinationConfiguration, createDeliveryStreamInput.httpEndpointDestinationConfiguration) &&
        Objects.equals(this.tags, createDeliveryStreamInput.tags) &&
        Objects.equals(this.amazonOpenSearchServerlessDestinationConfiguration, createDeliveryStreamInput.amazonOpenSearchServerlessDestinationConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deliveryStreamName, deliveryStreamType, kinesisStreamSourceConfiguration, deliveryStreamEncryptionConfigurationInput, s3DestinationConfiguration, extendedS3DestinationConfiguration, redshiftDestinationConfiguration, elasticsearchDestinationConfiguration, amazonopensearchserviceDestinationConfiguration, splunkDestinationConfiguration, httpEndpointDestinationConfiguration, tags, amazonOpenSearchServerlessDestinationConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDeliveryStreamInput {\n");
    sb.append("    deliveryStreamName: ").append(toIndentedString(deliveryStreamName)).append("\n");
    sb.append("    deliveryStreamType: ").append(toIndentedString(deliveryStreamType)).append("\n");
    sb.append("    kinesisStreamSourceConfiguration: ").append(toIndentedString(kinesisStreamSourceConfiguration)).append("\n");
    sb.append("    deliveryStreamEncryptionConfigurationInput: ").append(toIndentedString(deliveryStreamEncryptionConfigurationInput)).append("\n");
    sb.append("    s3DestinationConfiguration: ").append(toIndentedString(s3DestinationConfiguration)).append("\n");
    sb.append("    extendedS3DestinationConfiguration: ").append(toIndentedString(extendedS3DestinationConfiguration)).append("\n");
    sb.append("    redshiftDestinationConfiguration: ").append(toIndentedString(redshiftDestinationConfiguration)).append("\n");
    sb.append("    elasticsearchDestinationConfiguration: ").append(toIndentedString(elasticsearchDestinationConfiguration)).append("\n");
    sb.append("    amazonopensearchserviceDestinationConfiguration: ").append(toIndentedString(amazonopensearchserviceDestinationConfiguration)).append("\n");
    sb.append("    splunkDestinationConfiguration: ").append(toIndentedString(splunkDestinationConfiguration)).append("\n");
    sb.append("    httpEndpointDestinationConfiguration: ").append(toIndentedString(httpEndpointDestinationConfiguration)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    amazonOpenSearchServerlessDestinationConfiguration: ").append(toIndentedString(amazonOpenSearchServerlessDestinationConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DeliveryStreamName");
    openapiFields.add("DeliveryStreamType");
    openapiFields.add("KinesisStreamSourceConfiguration");
    openapiFields.add("DeliveryStreamEncryptionConfigurationInput");
    openapiFields.add("S3DestinationConfiguration");
    openapiFields.add("ExtendedS3DestinationConfiguration");
    openapiFields.add("RedshiftDestinationConfiguration");
    openapiFields.add("ElasticsearchDestinationConfiguration");
    openapiFields.add("AmazonopensearchserviceDestinationConfiguration");
    openapiFields.add("SplunkDestinationConfiguration");
    openapiFields.add("HttpEndpointDestinationConfiguration");
    openapiFields.add("Tags");
    openapiFields.add("AmazonOpenSearchServerlessDestinationConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("DeliveryStreamName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateDeliveryStreamInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateDeliveryStreamInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateDeliveryStreamInput is not found in the empty JSON string", CreateDeliveryStreamInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateDeliveryStreamInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateDeliveryStreamInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateDeliveryStreamInput.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `DeliveryStreamName`
      String.validateJsonElement(jsonObj.get("DeliveryStreamName"));
      // validate the optional field `DeliveryStreamType`
      if (jsonObj.get("DeliveryStreamType") != null && !jsonObj.get("DeliveryStreamType").isJsonNull()) {
        DeliveryStreamType.validateJsonElement(jsonObj.get("DeliveryStreamType"));
      }
      // validate the optional field `KinesisStreamSourceConfiguration`
      if (jsonObj.get("KinesisStreamSourceConfiguration") != null && !jsonObj.get("KinesisStreamSourceConfiguration").isJsonNull()) {
        CreateDeliveryStreamInputKinesisStreamSourceConfiguration.validateJsonElement(jsonObj.get("KinesisStreamSourceConfiguration"));
      }
      // validate the optional field `DeliveryStreamEncryptionConfigurationInput`
      if (jsonObj.get("DeliveryStreamEncryptionConfigurationInput") != null && !jsonObj.get("DeliveryStreamEncryptionConfigurationInput").isJsonNull()) {
        CreateDeliveryStreamInputDeliveryStreamEncryptionConfigurationInput.validateJsonElement(jsonObj.get("DeliveryStreamEncryptionConfigurationInput"));
      }
      // validate the optional field `S3DestinationConfiguration`
      if (jsonObj.get("S3DestinationConfiguration") != null && !jsonObj.get("S3DestinationConfiguration").isJsonNull()) {
        CreateDeliveryStreamInputS3DestinationConfiguration.validateJsonElement(jsonObj.get("S3DestinationConfiguration"));
      }
      // validate the optional field `ExtendedS3DestinationConfiguration`
      if (jsonObj.get("ExtendedS3DestinationConfiguration") != null && !jsonObj.get("ExtendedS3DestinationConfiguration").isJsonNull()) {
        CreateDeliveryStreamInputExtendedS3DestinationConfiguration.validateJsonElement(jsonObj.get("ExtendedS3DestinationConfiguration"));
      }
      // validate the optional field `RedshiftDestinationConfiguration`
      if (jsonObj.get("RedshiftDestinationConfiguration") != null && !jsonObj.get("RedshiftDestinationConfiguration").isJsonNull()) {
        CreateDeliveryStreamInputRedshiftDestinationConfiguration.validateJsonElement(jsonObj.get("RedshiftDestinationConfiguration"));
      }
      // validate the optional field `ElasticsearchDestinationConfiguration`
      if (jsonObj.get("ElasticsearchDestinationConfiguration") != null && !jsonObj.get("ElasticsearchDestinationConfiguration").isJsonNull()) {
        CreateDeliveryStreamInputElasticsearchDestinationConfiguration.validateJsonElement(jsonObj.get("ElasticsearchDestinationConfiguration"));
      }
      // validate the optional field `AmazonopensearchserviceDestinationConfiguration`
      if (jsonObj.get("AmazonopensearchserviceDestinationConfiguration") != null && !jsonObj.get("AmazonopensearchserviceDestinationConfiguration").isJsonNull()) {
        CreateDeliveryStreamInputAmazonopensearchserviceDestinationConfiguration.validateJsonElement(jsonObj.get("AmazonopensearchserviceDestinationConfiguration"));
      }
      // validate the optional field `SplunkDestinationConfiguration`
      if (jsonObj.get("SplunkDestinationConfiguration") != null && !jsonObj.get("SplunkDestinationConfiguration").isJsonNull()) {
        CreateDeliveryStreamInputSplunkDestinationConfiguration.validateJsonElement(jsonObj.get("SplunkDestinationConfiguration"));
      }
      // validate the optional field `HttpEndpointDestinationConfiguration`
      if (jsonObj.get("HttpEndpointDestinationConfiguration") != null && !jsonObj.get("HttpEndpointDestinationConfiguration").isJsonNull()) {
        CreateDeliveryStreamInputHttpEndpointDestinationConfiguration.validateJsonElement(jsonObj.get("HttpEndpointDestinationConfiguration"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `AmazonOpenSearchServerlessDestinationConfiguration`
      if (jsonObj.get("AmazonOpenSearchServerlessDestinationConfiguration") != null && !jsonObj.get("AmazonOpenSearchServerlessDestinationConfiguration").isJsonNull()) {
        CreateDeliveryStreamInputAmazonOpenSearchServerlessDestinationConfiguration.validateJsonElement(jsonObj.get("AmazonOpenSearchServerlessDestinationConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateDeliveryStreamInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateDeliveryStreamInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateDeliveryStreamInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateDeliveryStreamInput.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateDeliveryStreamInput>() {
           @Override
           public void write(JsonWriter out, CreateDeliveryStreamInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateDeliveryStreamInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateDeliveryStreamInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateDeliveryStreamInput
   * @throws IOException if the JSON string is invalid with respect to CreateDeliveryStreamInput
   */
  public static CreateDeliveryStreamInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateDeliveryStreamInput.class);
  }

  /**
   * Convert an instance of CreateDeliveryStreamInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

