/*
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DestinationDescriptionAmazonOpenSearchServerlessDestinationDescription;
import org.openapitools.client.model.DestinationDescriptionAmazonopensearchserviceDestinationDescription;
import org.openapitools.client.model.DestinationDescriptionElasticsearchDestinationDescription;
import org.openapitools.client.model.DestinationDescriptionExtendedS3DestinationDescription;
import org.openapitools.client.model.DestinationDescriptionHttpEndpointDestinationDescription;
import org.openapitools.client.model.DestinationDescriptionRedshiftDestinationDescription;
import org.openapitools.client.model.DestinationDescriptionS3DestinationDescription;
import org.openapitools.client.model.DestinationDescriptionSplunkDestinationDescription;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes the destination for a delivery stream.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:11.989141-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DestinationDescription {
  public static final String SERIALIZED_NAME_DESTINATION_ID = "DestinationId";
  @SerializedName(SERIALIZED_NAME_DESTINATION_ID)
  private String destinationId;

  public static final String SERIALIZED_NAME_S3_DESTINATION_DESCRIPTION = "S3DestinationDescription";
  @SerializedName(SERIALIZED_NAME_S3_DESTINATION_DESCRIPTION)
  private DestinationDescriptionS3DestinationDescription s3DestinationDescription;

  public static final String SERIALIZED_NAME_EXTENDED_S3_DESTINATION_DESCRIPTION = "ExtendedS3DestinationDescription";
  @SerializedName(SERIALIZED_NAME_EXTENDED_S3_DESTINATION_DESCRIPTION)
  private DestinationDescriptionExtendedS3DestinationDescription extendedS3DestinationDescription;

  public static final String SERIALIZED_NAME_REDSHIFT_DESTINATION_DESCRIPTION = "RedshiftDestinationDescription";
  @SerializedName(SERIALIZED_NAME_REDSHIFT_DESTINATION_DESCRIPTION)
  private DestinationDescriptionRedshiftDestinationDescription redshiftDestinationDescription;

  public static final String SERIALIZED_NAME_ELASTICSEARCH_DESTINATION_DESCRIPTION = "ElasticsearchDestinationDescription";
  @SerializedName(SERIALIZED_NAME_ELASTICSEARCH_DESTINATION_DESCRIPTION)
  private DestinationDescriptionElasticsearchDestinationDescription elasticsearchDestinationDescription;

  public static final String SERIALIZED_NAME_AMAZONOPENSEARCHSERVICE_DESTINATION_DESCRIPTION = "AmazonopensearchserviceDestinationDescription";
  @SerializedName(SERIALIZED_NAME_AMAZONOPENSEARCHSERVICE_DESTINATION_DESCRIPTION)
  private DestinationDescriptionAmazonopensearchserviceDestinationDescription amazonopensearchserviceDestinationDescription;

  public static final String SERIALIZED_NAME_SPLUNK_DESTINATION_DESCRIPTION = "SplunkDestinationDescription";
  @SerializedName(SERIALIZED_NAME_SPLUNK_DESTINATION_DESCRIPTION)
  private DestinationDescriptionSplunkDestinationDescription splunkDestinationDescription;

  public static final String SERIALIZED_NAME_HTTP_ENDPOINT_DESTINATION_DESCRIPTION = "HttpEndpointDestinationDescription";
  @SerializedName(SERIALIZED_NAME_HTTP_ENDPOINT_DESTINATION_DESCRIPTION)
  private DestinationDescriptionHttpEndpointDestinationDescription httpEndpointDestinationDescription;

  public static final String SERIALIZED_NAME_AMAZON_OPEN_SEARCH_SERVERLESS_DESTINATION_DESCRIPTION = "AmazonOpenSearchServerlessDestinationDescription";
  @SerializedName(SERIALIZED_NAME_AMAZON_OPEN_SEARCH_SERVERLESS_DESTINATION_DESCRIPTION)
  private DestinationDescriptionAmazonOpenSearchServerlessDestinationDescription amazonOpenSearchServerlessDestinationDescription;

  public DestinationDescription() {
  }

  public DestinationDescription destinationId(String destinationId) {
    this.destinationId = destinationId;
    return this;
  }

  /**
   * Get destinationId
   * @return destinationId
   */
  @javax.annotation.Nonnull
  public String getDestinationId() {
    return destinationId;
  }

  public void setDestinationId(String destinationId) {
    this.destinationId = destinationId;
  }


  public DestinationDescription s3DestinationDescription(DestinationDescriptionS3DestinationDescription s3DestinationDescription) {
    this.s3DestinationDescription = s3DestinationDescription;
    return this;
  }

  /**
   * Get s3DestinationDescription
   * @return s3DestinationDescription
   */
  @javax.annotation.Nullable
  public DestinationDescriptionS3DestinationDescription getS3DestinationDescription() {
    return s3DestinationDescription;
  }

  public void setS3DestinationDescription(DestinationDescriptionS3DestinationDescription s3DestinationDescription) {
    this.s3DestinationDescription = s3DestinationDescription;
  }


  public DestinationDescription extendedS3DestinationDescription(DestinationDescriptionExtendedS3DestinationDescription extendedS3DestinationDescription) {
    this.extendedS3DestinationDescription = extendedS3DestinationDescription;
    return this;
  }

  /**
   * Get extendedS3DestinationDescription
   * @return extendedS3DestinationDescription
   */
  @javax.annotation.Nullable
  public DestinationDescriptionExtendedS3DestinationDescription getExtendedS3DestinationDescription() {
    return extendedS3DestinationDescription;
  }

  public void setExtendedS3DestinationDescription(DestinationDescriptionExtendedS3DestinationDescription extendedS3DestinationDescription) {
    this.extendedS3DestinationDescription = extendedS3DestinationDescription;
  }


  public DestinationDescription redshiftDestinationDescription(DestinationDescriptionRedshiftDestinationDescription redshiftDestinationDescription) {
    this.redshiftDestinationDescription = redshiftDestinationDescription;
    return this;
  }

  /**
   * Get redshiftDestinationDescription
   * @return redshiftDestinationDescription
   */
  @javax.annotation.Nullable
  public DestinationDescriptionRedshiftDestinationDescription getRedshiftDestinationDescription() {
    return redshiftDestinationDescription;
  }

  public void setRedshiftDestinationDescription(DestinationDescriptionRedshiftDestinationDescription redshiftDestinationDescription) {
    this.redshiftDestinationDescription = redshiftDestinationDescription;
  }


  public DestinationDescription elasticsearchDestinationDescription(DestinationDescriptionElasticsearchDestinationDescription elasticsearchDestinationDescription) {
    this.elasticsearchDestinationDescription = elasticsearchDestinationDescription;
    return this;
  }

  /**
   * Get elasticsearchDestinationDescription
   * @return elasticsearchDestinationDescription
   */
  @javax.annotation.Nullable
  public DestinationDescriptionElasticsearchDestinationDescription getElasticsearchDestinationDescription() {
    return elasticsearchDestinationDescription;
  }

  public void setElasticsearchDestinationDescription(DestinationDescriptionElasticsearchDestinationDescription elasticsearchDestinationDescription) {
    this.elasticsearchDestinationDescription = elasticsearchDestinationDescription;
  }


  public DestinationDescription amazonopensearchserviceDestinationDescription(DestinationDescriptionAmazonopensearchserviceDestinationDescription amazonopensearchserviceDestinationDescription) {
    this.amazonopensearchserviceDestinationDescription = amazonopensearchserviceDestinationDescription;
    return this;
  }

  /**
   * Get amazonopensearchserviceDestinationDescription
   * @return amazonopensearchserviceDestinationDescription
   */
  @javax.annotation.Nullable
  public DestinationDescriptionAmazonopensearchserviceDestinationDescription getAmazonopensearchserviceDestinationDescription() {
    return amazonopensearchserviceDestinationDescription;
  }

  public void setAmazonopensearchserviceDestinationDescription(DestinationDescriptionAmazonopensearchserviceDestinationDescription amazonopensearchserviceDestinationDescription) {
    this.amazonopensearchserviceDestinationDescription = amazonopensearchserviceDestinationDescription;
  }


  public DestinationDescription splunkDestinationDescription(DestinationDescriptionSplunkDestinationDescription splunkDestinationDescription) {
    this.splunkDestinationDescription = splunkDestinationDescription;
    return this;
  }

  /**
   * Get splunkDestinationDescription
   * @return splunkDestinationDescription
   */
  @javax.annotation.Nullable
  public DestinationDescriptionSplunkDestinationDescription getSplunkDestinationDescription() {
    return splunkDestinationDescription;
  }

  public void setSplunkDestinationDescription(DestinationDescriptionSplunkDestinationDescription splunkDestinationDescription) {
    this.splunkDestinationDescription = splunkDestinationDescription;
  }


  public DestinationDescription httpEndpointDestinationDescription(DestinationDescriptionHttpEndpointDestinationDescription httpEndpointDestinationDescription) {
    this.httpEndpointDestinationDescription = httpEndpointDestinationDescription;
    return this;
  }

  /**
   * Get httpEndpointDestinationDescription
   * @return httpEndpointDestinationDescription
   */
  @javax.annotation.Nullable
  public DestinationDescriptionHttpEndpointDestinationDescription getHttpEndpointDestinationDescription() {
    return httpEndpointDestinationDescription;
  }

  public void setHttpEndpointDestinationDescription(DestinationDescriptionHttpEndpointDestinationDescription httpEndpointDestinationDescription) {
    this.httpEndpointDestinationDescription = httpEndpointDestinationDescription;
  }


  public DestinationDescription amazonOpenSearchServerlessDestinationDescription(DestinationDescriptionAmazonOpenSearchServerlessDestinationDescription amazonOpenSearchServerlessDestinationDescription) {
    this.amazonOpenSearchServerlessDestinationDescription = amazonOpenSearchServerlessDestinationDescription;
    return this;
  }

  /**
   * Get amazonOpenSearchServerlessDestinationDescription
   * @return amazonOpenSearchServerlessDestinationDescription
   */
  @javax.annotation.Nullable
  public DestinationDescriptionAmazonOpenSearchServerlessDestinationDescription getAmazonOpenSearchServerlessDestinationDescription() {
    return amazonOpenSearchServerlessDestinationDescription;
  }

  public void setAmazonOpenSearchServerlessDestinationDescription(DestinationDescriptionAmazonOpenSearchServerlessDestinationDescription amazonOpenSearchServerlessDestinationDescription) {
    this.amazonOpenSearchServerlessDestinationDescription = amazonOpenSearchServerlessDestinationDescription;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinationDescription destinationDescription = (DestinationDescription) o;
    return Objects.equals(this.destinationId, destinationDescription.destinationId) &&
        Objects.equals(this.s3DestinationDescription, destinationDescription.s3DestinationDescription) &&
        Objects.equals(this.extendedS3DestinationDescription, destinationDescription.extendedS3DestinationDescription) &&
        Objects.equals(this.redshiftDestinationDescription, destinationDescription.redshiftDestinationDescription) &&
        Objects.equals(this.elasticsearchDestinationDescription, destinationDescription.elasticsearchDestinationDescription) &&
        Objects.equals(this.amazonopensearchserviceDestinationDescription, destinationDescription.amazonopensearchserviceDestinationDescription) &&
        Objects.equals(this.splunkDestinationDescription, destinationDescription.splunkDestinationDescription) &&
        Objects.equals(this.httpEndpointDestinationDescription, destinationDescription.httpEndpointDestinationDescription) &&
        Objects.equals(this.amazonOpenSearchServerlessDestinationDescription, destinationDescription.amazonOpenSearchServerlessDestinationDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationId, s3DestinationDescription, extendedS3DestinationDescription, redshiftDestinationDescription, elasticsearchDestinationDescription, amazonopensearchserviceDestinationDescription, splunkDestinationDescription, httpEndpointDestinationDescription, amazonOpenSearchServerlessDestinationDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinationDescription {\n");
    sb.append("    destinationId: ").append(toIndentedString(destinationId)).append("\n");
    sb.append("    s3DestinationDescription: ").append(toIndentedString(s3DestinationDescription)).append("\n");
    sb.append("    extendedS3DestinationDescription: ").append(toIndentedString(extendedS3DestinationDescription)).append("\n");
    sb.append("    redshiftDestinationDescription: ").append(toIndentedString(redshiftDestinationDescription)).append("\n");
    sb.append("    elasticsearchDestinationDescription: ").append(toIndentedString(elasticsearchDestinationDescription)).append("\n");
    sb.append("    amazonopensearchserviceDestinationDescription: ").append(toIndentedString(amazonopensearchserviceDestinationDescription)).append("\n");
    sb.append("    splunkDestinationDescription: ").append(toIndentedString(splunkDestinationDescription)).append("\n");
    sb.append("    httpEndpointDestinationDescription: ").append(toIndentedString(httpEndpointDestinationDescription)).append("\n");
    sb.append("    amazonOpenSearchServerlessDestinationDescription: ").append(toIndentedString(amazonOpenSearchServerlessDestinationDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DestinationId");
    openapiFields.add("S3DestinationDescription");
    openapiFields.add("ExtendedS3DestinationDescription");
    openapiFields.add("RedshiftDestinationDescription");
    openapiFields.add("ElasticsearchDestinationDescription");
    openapiFields.add("AmazonopensearchserviceDestinationDescription");
    openapiFields.add("SplunkDestinationDescription");
    openapiFields.add("HttpEndpointDestinationDescription");
    openapiFields.add("AmazonOpenSearchServerlessDestinationDescription");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("DestinationId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DestinationDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DestinationDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DestinationDescription is not found in the empty JSON string", DestinationDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DestinationDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DestinationDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DestinationDescription.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `DestinationId`
      String.validateJsonElement(jsonObj.get("DestinationId"));
      // validate the optional field `S3DestinationDescription`
      if (jsonObj.get("S3DestinationDescription") != null && !jsonObj.get("S3DestinationDescription").isJsonNull()) {
        DestinationDescriptionS3DestinationDescription.validateJsonElement(jsonObj.get("S3DestinationDescription"));
      }
      // validate the optional field `ExtendedS3DestinationDescription`
      if (jsonObj.get("ExtendedS3DestinationDescription") != null && !jsonObj.get("ExtendedS3DestinationDescription").isJsonNull()) {
        DestinationDescriptionExtendedS3DestinationDescription.validateJsonElement(jsonObj.get("ExtendedS3DestinationDescription"));
      }
      // validate the optional field `RedshiftDestinationDescription`
      if (jsonObj.get("RedshiftDestinationDescription") != null && !jsonObj.get("RedshiftDestinationDescription").isJsonNull()) {
        DestinationDescriptionRedshiftDestinationDescription.validateJsonElement(jsonObj.get("RedshiftDestinationDescription"));
      }
      // validate the optional field `ElasticsearchDestinationDescription`
      if (jsonObj.get("ElasticsearchDestinationDescription") != null && !jsonObj.get("ElasticsearchDestinationDescription").isJsonNull()) {
        DestinationDescriptionElasticsearchDestinationDescription.validateJsonElement(jsonObj.get("ElasticsearchDestinationDescription"));
      }
      // validate the optional field `AmazonopensearchserviceDestinationDescription`
      if (jsonObj.get("AmazonopensearchserviceDestinationDescription") != null && !jsonObj.get("AmazonopensearchserviceDestinationDescription").isJsonNull()) {
        DestinationDescriptionAmazonopensearchserviceDestinationDescription.validateJsonElement(jsonObj.get("AmazonopensearchserviceDestinationDescription"));
      }
      // validate the optional field `SplunkDestinationDescription`
      if (jsonObj.get("SplunkDestinationDescription") != null && !jsonObj.get("SplunkDestinationDescription").isJsonNull()) {
        DestinationDescriptionSplunkDestinationDescription.validateJsonElement(jsonObj.get("SplunkDestinationDescription"));
      }
      // validate the optional field `HttpEndpointDestinationDescription`
      if (jsonObj.get("HttpEndpointDestinationDescription") != null && !jsonObj.get("HttpEndpointDestinationDescription").isJsonNull()) {
        DestinationDescriptionHttpEndpointDestinationDescription.validateJsonElement(jsonObj.get("HttpEndpointDestinationDescription"));
      }
      // validate the optional field `AmazonOpenSearchServerlessDestinationDescription`
      if (jsonObj.get("AmazonOpenSearchServerlessDestinationDescription") != null && !jsonObj.get("AmazonOpenSearchServerlessDestinationDescription").isJsonNull()) {
        DestinationDescriptionAmazonOpenSearchServerlessDestinationDescription.validateJsonElement(jsonObj.get("AmazonOpenSearchServerlessDestinationDescription"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DestinationDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DestinationDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DestinationDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DestinationDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<DestinationDescription>() {
           @Override
           public void write(JsonWriter out, DestinationDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DestinationDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DestinationDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DestinationDescription
   * @throws IOException if the JSON string is invalid with respect to DestinationDescription
   */
  public static DestinationDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DestinationDescription.class);
  }

  /**
   * Convert an instance of DestinationDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

