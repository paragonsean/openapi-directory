/*
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate;
import org.openapitools.client.model.UpdateDestinationInputAmazonopensearchserviceDestinationUpdate;
import org.openapitools.client.model.UpdateDestinationInputElasticsearchDestinationUpdate;
import org.openapitools.client.model.UpdateDestinationInputExtendedS3DestinationUpdate;
import org.openapitools.client.model.UpdateDestinationInputHttpEndpointDestinationUpdate;
import org.openapitools.client.model.UpdateDestinationInputRedshiftDestinationUpdate;
import org.openapitools.client.model.UpdateDestinationInputS3DestinationUpdate;
import org.openapitools.client.model.UpdateDestinationInputSplunkDestinationUpdate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateDestinationInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:11.989141-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateDestinationInput {
  public static final String SERIALIZED_NAME_DELIVERY_STREAM_NAME = "DeliveryStreamName";
  @SerializedName(SERIALIZED_NAME_DELIVERY_STREAM_NAME)
  private String deliveryStreamName;

  public static final String SERIALIZED_NAME_CURRENT_DELIVERY_STREAM_VERSION_ID = "CurrentDeliveryStreamVersionId";
  @SerializedName(SERIALIZED_NAME_CURRENT_DELIVERY_STREAM_VERSION_ID)
  private String currentDeliveryStreamVersionId;

  public static final String SERIALIZED_NAME_DESTINATION_ID = "DestinationId";
  @SerializedName(SERIALIZED_NAME_DESTINATION_ID)
  private String destinationId;

  public static final String SERIALIZED_NAME_S3_DESTINATION_UPDATE = "S3DestinationUpdate";
  @SerializedName(SERIALIZED_NAME_S3_DESTINATION_UPDATE)
  private UpdateDestinationInputS3DestinationUpdate s3DestinationUpdate;

  public static final String SERIALIZED_NAME_EXTENDED_S3_DESTINATION_UPDATE = "ExtendedS3DestinationUpdate";
  @SerializedName(SERIALIZED_NAME_EXTENDED_S3_DESTINATION_UPDATE)
  private UpdateDestinationInputExtendedS3DestinationUpdate extendedS3DestinationUpdate;

  public static final String SERIALIZED_NAME_REDSHIFT_DESTINATION_UPDATE = "RedshiftDestinationUpdate";
  @SerializedName(SERIALIZED_NAME_REDSHIFT_DESTINATION_UPDATE)
  private UpdateDestinationInputRedshiftDestinationUpdate redshiftDestinationUpdate;

  public static final String SERIALIZED_NAME_ELASTICSEARCH_DESTINATION_UPDATE = "ElasticsearchDestinationUpdate";
  @SerializedName(SERIALIZED_NAME_ELASTICSEARCH_DESTINATION_UPDATE)
  private UpdateDestinationInputElasticsearchDestinationUpdate elasticsearchDestinationUpdate;

  public static final String SERIALIZED_NAME_AMAZONOPENSEARCHSERVICE_DESTINATION_UPDATE = "AmazonopensearchserviceDestinationUpdate";
  @SerializedName(SERIALIZED_NAME_AMAZONOPENSEARCHSERVICE_DESTINATION_UPDATE)
  private UpdateDestinationInputAmazonopensearchserviceDestinationUpdate amazonopensearchserviceDestinationUpdate;

  public static final String SERIALIZED_NAME_SPLUNK_DESTINATION_UPDATE = "SplunkDestinationUpdate";
  @SerializedName(SERIALIZED_NAME_SPLUNK_DESTINATION_UPDATE)
  private UpdateDestinationInputSplunkDestinationUpdate splunkDestinationUpdate;

  public static final String SERIALIZED_NAME_HTTP_ENDPOINT_DESTINATION_UPDATE = "HttpEndpointDestinationUpdate";
  @SerializedName(SERIALIZED_NAME_HTTP_ENDPOINT_DESTINATION_UPDATE)
  private UpdateDestinationInputHttpEndpointDestinationUpdate httpEndpointDestinationUpdate;

  public static final String SERIALIZED_NAME_AMAZON_OPEN_SEARCH_SERVERLESS_DESTINATION_UPDATE = "AmazonOpenSearchServerlessDestinationUpdate";
  @SerializedName(SERIALIZED_NAME_AMAZON_OPEN_SEARCH_SERVERLESS_DESTINATION_UPDATE)
  private UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate amazonOpenSearchServerlessDestinationUpdate;

  public UpdateDestinationInput() {
  }

  public UpdateDestinationInput deliveryStreamName(String deliveryStreamName) {
    this.deliveryStreamName = deliveryStreamName;
    return this;
  }

  /**
   * Get deliveryStreamName
   * @return deliveryStreamName
   */
  @javax.annotation.Nonnull
  public String getDeliveryStreamName() {
    return deliveryStreamName;
  }

  public void setDeliveryStreamName(String deliveryStreamName) {
    this.deliveryStreamName = deliveryStreamName;
  }


  public UpdateDestinationInput currentDeliveryStreamVersionId(String currentDeliveryStreamVersionId) {
    this.currentDeliveryStreamVersionId = currentDeliveryStreamVersionId;
    return this;
  }

  /**
   * Get currentDeliveryStreamVersionId
   * @return currentDeliveryStreamVersionId
   */
  @javax.annotation.Nonnull
  public String getCurrentDeliveryStreamVersionId() {
    return currentDeliveryStreamVersionId;
  }

  public void setCurrentDeliveryStreamVersionId(String currentDeliveryStreamVersionId) {
    this.currentDeliveryStreamVersionId = currentDeliveryStreamVersionId;
  }


  public UpdateDestinationInput destinationId(String destinationId) {
    this.destinationId = destinationId;
    return this;
  }

  /**
   * Get destinationId
   * @return destinationId
   */
  @javax.annotation.Nonnull
  public String getDestinationId() {
    return destinationId;
  }

  public void setDestinationId(String destinationId) {
    this.destinationId = destinationId;
  }


  public UpdateDestinationInput s3DestinationUpdate(UpdateDestinationInputS3DestinationUpdate s3DestinationUpdate) {
    this.s3DestinationUpdate = s3DestinationUpdate;
    return this;
  }

  /**
   * Get s3DestinationUpdate
   * @return s3DestinationUpdate
   */
  @javax.annotation.Nullable
  public UpdateDestinationInputS3DestinationUpdate getS3DestinationUpdate() {
    return s3DestinationUpdate;
  }

  public void setS3DestinationUpdate(UpdateDestinationInputS3DestinationUpdate s3DestinationUpdate) {
    this.s3DestinationUpdate = s3DestinationUpdate;
  }


  public UpdateDestinationInput extendedS3DestinationUpdate(UpdateDestinationInputExtendedS3DestinationUpdate extendedS3DestinationUpdate) {
    this.extendedS3DestinationUpdate = extendedS3DestinationUpdate;
    return this;
  }

  /**
   * Get extendedS3DestinationUpdate
   * @return extendedS3DestinationUpdate
   */
  @javax.annotation.Nullable
  public UpdateDestinationInputExtendedS3DestinationUpdate getExtendedS3DestinationUpdate() {
    return extendedS3DestinationUpdate;
  }

  public void setExtendedS3DestinationUpdate(UpdateDestinationInputExtendedS3DestinationUpdate extendedS3DestinationUpdate) {
    this.extendedS3DestinationUpdate = extendedS3DestinationUpdate;
  }


  public UpdateDestinationInput redshiftDestinationUpdate(UpdateDestinationInputRedshiftDestinationUpdate redshiftDestinationUpdate) {
    this.redshiftDestinationUpdate = redshiftDestinationUpdate;
    return this;
  }

  /**
   * Get redshiftDestinationUpdate
   * @return redshiftDestinationUpdate
   */
  @javax.annotation.Nullable
  public UpdateDestinationInputRedshiftDestinationUpdate getRedshiftDestinationUpdate() {
    return redshiftDestinationUpdate;
  }

  public void setRedshiftDestinationUpdate(UpdateDestinationInputRedshiftDestinationUpdate redshiftDestinationUpdate) {
    this.redshiftDestinationUpdate = redshiftDestinationUpdate;
  }


  public UpdateDestinationInput elasticsearchDestinationUpdate(UpdateDestinationInputElasticsearchDestinationUpdate elasticsearchDestinationUpdate) {
    this.elasticsearchDestinationUpdate = elasticsearchDestinationUpdate;
    return this;
  }

  /**
   * Get elasticsearchDestinationUpdate
   * @return elasticsearchDestinationUpdate
   */
  @javax.annotation.Nullable
  public UpdateDestinationInputElasticsearchDestinationUpdate getElasticsearchDestinationUpdate() {
    return elasticsearchDestinationUpdate;
  }

  public void setElasticsearchDestinationUpdate(UpdateDestinationInputElasticsearchDestinationUpdate elasticsearchDestinationUpdate) {
    this.elasticsearchDestinationUpdate = elasticsearchDestinationUpdate;
  }


  public UpdateDestinationInput amazonopensearchserviceDestinationUpdate(UpdateDestinationInputAmazonopensearchserviceDestinationUpdate amazonopensearchserviceDestinationUpdate) {
    this.amazonopensearchserviceDestinationUpdate = amazonopensearchserviceDestinationUpdate;
    return this;
  }

  /**
   * Get amazonopensearchserviceDestinationUpdate
   * @return amazonopensearchserviceDestinationUpdate
   */
  @javax.annotation.Nullable
  public UpdateDestinationInputAmazonopensearchserviceDestinationUpdate getAmazonopensearchserviceDestinationUpdate() {
    return amazonopensearchserviceDestinationUpdate;
  }

  public void setAmazonopensearchserviceDestinationUpdate(UpdateDestinationInputAmazonopensearchserviceDestinationUpdate amazonopensearchserviceDestinationUpdate) {
    this.amazonopensearchserviceDestinationUpdate = amazonopensearchserviceDestinationUpdate;
  }


  public UpdateDestinationInput splunkDestinationUpdate(UpdateDestinationInputSplunkDestinationUpdate splunkDestinationUpdate) {
    this.splunkDestinationUpdate = splunkDestinationUpdate;
    return this;
  }

  /**
   * Get splunkDestinationUpdate
   * @return splunkDestinationUpdate
   */
  @javax.annotation.Nullable
  public UpdateDestinationInputSplunkDestinationUpdate getSplunkDestinationUpdate() {
    return splunkDestinationUpdate;
  }

  public void setSplunkDestinationUpdate(UpdateDestinationInputSplunkDestinationUpdate splunkDestinationUpdate) {
    this.splunkDestinationUpdate = splunkDestinationUpdate;
  }


  public UpdateDestinationInput httpEndpointDestinationUpdate(UpdateDestinationInputHttpEndpointDestinationUpdate httpEndpointDestinationUpdate) {
    this.httpEndpointDestinationUpdate = httpEndpointDestinationUpdate;
    return this;
  }

  /**
   * Get httpEndpointDestinationUpdate
   * @return httpEndpointDestinationUpdate
   */
  @javax.annotation.Nullable
  public UpdateDestinationInputHttpEndpointDestinationUpdate getHttpEndpointDestinationUpdate() {
    return httpEndpointDestinationUpdate;
  }

  public void setHttpEndpointDestinationUpdate(UpdateDestinationInputHttpEndpointDestinationUpdate httpEndpointDestinationUpdate) {
    this.httpEndpointDestinationUpdate = httpEndpointDestinationUpdate;
  }


  public UpdateDestinationInput amazonOpenSearchServerlessDestinationUpdate(UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate amazonOpenSearchServerlessDestinationUpdate) {
    this.amazonOpenSearchServerlessDestinationUpdate = amazonOpenSearchServerlessDestinationUpdate;
    return this;
  }

  /**
   * Get amazonOpenSearchServerlessDestinationUpdate
   * @return amazonOpenSearchServerlessDestinationUpdate
   */
  @javax.annotation.Nullable
  public UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate getAmazonOpenSearchServerlessDestinationUpdate() {
    return amazonOpenSearchServerlessDestinationUpdate;
  }

  public void setAmazonOpenSearchServerlessDestinationUpdate(UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate amazonOpenSearchServerlessDestinationUpdate) {
    this.amazonOpenSearchServerlessDestinationUpdate = amazonOpenSearchServerlessDestinationUpdate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDestinationInput updateDestinationInput = (UpdateDestinationInput) o;
    return Objects.equals(this.deliveryStreamName, updateDestinationInput.deliveryStreamName) &&
        Objects.equals(this.currentDeliveryStreamVersionId, updateDestinationInput.currentDeliveryStreamVersionId) &&
        Objects.equals(this.destinationId, updateDestinationInput.destinationId) &&
        Objects.equals(this.s3DestinationUpdate, updateDestinationInput.s3DestinationUpdate) &&
        Objects.equals(this.extendedS3DestinationUpdate, updateDestinationInput.extendedS3DestinationUpdate) &&
        Objects.equals(this.redshiftDestinationUpdate, updateDestinationInput.redshiftDestinationUpdate) &&
        Objects.equals(this.elasticsearchDestinationUpdate, updateDestinationInput.elasticsearchDestinationUpdate) &&
        Objects.equals(this.amazonopensearchserviceDestinationUpdate, updateDestinationInput.amazonopensearchserviceDestinationUpdate) &&
        Objects.equals(this.splunkDestinationUpdate, updateDestinationInput.splunkDestinationUpdate) &&
        Objects.equals(this.httpEndpointDestinationUpdate, updateDestinationInput.httpEndpointDestinationUpdate) &&
        Objects.equals(this.amazonOpenSearchServerlessDestinationUpdate, updateDestinationInput.amazonOpenSearchServerlessDestinationUpdate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deliveryStreamName, currentDeliveryStreamVersionId, destinationId, s3DestinationUpdate, extendedS3DestinationUpdate, redshiftDestinationUpdate, elasticsearchDestinationUpdate, amazonopensearchserviceDestinationUpdate, splunkDestinationUpdate, httpEndpointDestinationUpdate, amazonOpenSearchServerlessDestinationUpdate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDestinationInput {\n");
    sb.append("    deliveryStreamName: ").append(toIndentedString(deliveryStreamName)).append("\n");
    sb.append("    currentDeliveryStreamVersionId: ").append(toIndentedString(currentDeliveryStreamVersionId)).append("\n");
    sb.append("    destinationId: ").append(toIndentedString(destinationId)).append("\n");
    sb.append("    s3DestinationUpdate: ").append(toIndentedString(s3DestinationUpdate)).append("\n");
    sb.append("    extendedS3DestinationUpdate: ").append(toIndentedString(extendedS3DestinationUpdate)).append("\n");
    sb.append("    redshiftDestinationUpdate: ").append(toIndentedString(redshiftDestinationUpdate)).append("\n");
    sb.append("    elasticsearchDestinationUpdate: ").append(toIndentedString(elasticsearchDestinationUpdate)).append("\n");
    sb.append("    amazonopensearchserviceDestinationUpdate: ").append(toIndentedString(amazonopensearchserviceDestinationUpdate)).append("\n");
    sb.append("    splunkDestinationUpdate: ").append(toIndentedString(splunkDestinationUpdate)).append("\n");
    sb.append("    httpEndpointDestinationUpdate: ").append(toIndentedString(httpEndpointDestinationUpdate)).append("\n");
    sb.append("    amazonOpenSearchServerlessDestinationUpdate: ").append(toIndentedString(amazonOpenSearchServerlessDestinationUpdate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DeliveryStreamName");
    openapiFields.add("CurrentDeliveryStreamVersionId");
    openapiFields.add("DestinationId");
    openapiFields.add("S3DestinationUpdate");
    openapiFields.add("ExtendedS3DestinationUpdate");
    openapiFields.add("RedshiftDestinationUpdate");
    openapiFields.add("ElasticsearchDestinationUpdate");
    openapiFields.add("AmazonopensearchserviceDestinationUpdate");
    openapiFields.add("SplunkDestinationUpdate");
    openapiFields.add("HttpEndpointDestinationUpdate");
    openapiFields.add("AmazonOpenSearchServerlessDestinationUpdate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("DeliveryStreamName");
    openapiRequiredFields.add("CurrentDeliveryStreamVersionId");
    openapiRequiredFields.add("DestinationId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateDestinationInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateDestinationInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateDestinationInput is not found in the empty JSON string", UpdateDestinationInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateDestinationInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateDestinationInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateDestinationInput.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `DeliveryStreamName`
      String.validateJsonElement(jsonObj.get("DeliveryStreamName"));
      // validate the required field `CurrentDeliveryStreamVersionId`
      String.validateJsonElement(jsonObj.get("CurrentDeliveryStreamVersionId"));
      // validate the required field `DestinationId`
      String.validateJsonElement(jsonObj.get("DestinationId"));
      // validate the optional field `S3DestinationUpdate`
      if (jsonObj.get("S3DestinationUpdate") != null && !jsonObj.get("S3DestinationUpdate").isJsonNull()) {
        UpdateDestinationInputS3DestinationUpdate.validateJsonElement(jsonObj.get("S3DestinationUpdate"));
      }
      // validate the optional field `ExtendedS3DestinationUpdate`
      if (jsonObj.get("ExtendedS3DestinationUpdate") != null && !jsonObj.get("ExtendedS3DestinationUpdate").isJsonNull()) {
        UpdateDestinationInputExtendedS3DestinationUpdate.validateJsonElement(jsonObj.get("ExtendedS3DestinationUpdate"));
      }
      // validate the optional field `RedshiftDestinationUpdate`
      if (jsonObj.get("RedshiftDestinationUpdate") != null && !jsonObj.get("RedshiftDestinationUpdate").isJsonNull()) {
        UpdateDestinationInputRedshiftDestinationUpdate.validateJsonElement(jsonObj.get("RedshiftDestinationUpdate"));
      }
      // validate the optional field `ElasticsearchDestinationUpdate`
      if (jsonObj.get("ElasticsearchDestinationUpdate") != null && !jsonObj.get("ElasticsearchDestinationUpdate").isJsonNull()) {
        UpdateDestinationInputElasticsearchDestinationUpdate.validateJsonElement(jsonObj.get("ElasticsearchDestinationUpdate"));
      }
      // validate the optional field `AmazonopensearchserviceDestinationUpdate`
      if (jsonObj.get("AmazonopensearchserviceDestinationUpdate") != null && !jsonObj.get("AmazonopensearchserviceDestinationUpdate").isJsonNull()) {
        UpdateDestinationInputAmazonopensearchserviceDestinationUpdate.validateJsonElement(jsonObj.get("AmazonopensearchserviceDestinationUpdate"));
      }
      // validate the optional field `SplunkDestinationUpdate`
      if (jsonObj.get("SplunkDestinationUpdate") != null && !jsonObj.get("SplunkDestinationUpdate").isJsonNull()) {
        UpdateDestinationInputSplunkDestinationUpdate.validateJsonElement(jsonObj.get("SplunkDestinationUpdate"));
      }
      // validate the optional field `HttpEndpointDestinationUpdate`
      if (jsonObj.get("HttpEndpointDestinationUpdate") != null && !jsonObj.get("HttpEndpointDestinationUpdate").isJsonNull()) {
        UpdateDestinationInputHttpEndpointDestinationUpdate.validateJsonElement(jsonObj.get("HttpEndpointDestinationUpdate"));
      }
      // validate the optional field `AmazonOpenSearchServerlessDestinationUpdate`
      if (jsonObj.get("AmazonOpenSearchServerlessDestinationUpdate") != null && !jsonObj.get("AmazonOpenSearchServerlessDestinationUpdate").isJsonNull()) {
        UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.validateJsonElement(jsonObj.get("AmazonOpenSearchServerlessDestinationUpdate"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateDestinationInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateDestinationInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateDestinationInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateDestinationInput.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateDestinationInput>() {
           @Override
           public void write(JsonWriter out, UpdateDestinationInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateDestinationInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateDestinationInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateDestinationInput
   * @throws IOException if the JSON string is invalid with respect to UpdateDestinationInput
   */
  public static UpdateDestinationInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateDestinationInput.class);
  }

  /**
   * Convert an instance of UpdateDestinationInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

