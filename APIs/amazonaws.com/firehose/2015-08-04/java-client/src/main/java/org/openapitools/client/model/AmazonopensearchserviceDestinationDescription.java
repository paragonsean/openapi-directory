/*
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AmazonopensearchserviceDestinationDescriptionBufferingHints;
import org.openapitools.client.model.AmazonopensearchserviceDestinationDescriptionRetryOptions;
import org.openapitools.client.model.AmazonopensearchserviceIndexRotationPeriod;
import org.openapitools.client.model.AmazonopensearchserviceS3BackupMode;
import org.openapitools.client.model.CloudWatchLoggingOptions;
import org.openapitools.client.model.ProcessingConfiguration;
import org.openapitools.client.model.S3DestinationDescription;
import org.openapitools.client.model.VpcConfigurationDescription;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The destination description in Amazon OpenSearch Service.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:11.989141-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AmazonopensearchserviceDestinationDescription {
  public static final String SERIALIZED_NAME_ROLE_A_R_N = "RoleARN";
  @SerializedName(SERIALIZED_NAME_ROLE_A_R_N)
  private String roleARN;

  public static final String SERIALIZED_NAME_DOMAIN_A_R_N = "DomainARN";
  @SerializedName(SERIALIZED_NAME_DOMAIN_A_R_N)
  private String domainARN;

  public static final String SERIALIZED_NAME_CLUSTER_ENDPOINT = "ClusterEndpoint";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ENDPOINT)
  private String clusterEndpoint;

  public static final String SERIALIZED_NAME_INDEX_NAME = "IndexName";
  @SerializedName(SERIALIZED_NAME_INDEX_NAME)
  private String indexName;

  public static final String SERIALIZED_NAME_TYPE_NAME = "TypeName";
  @SerializedName(SERIALIZED_NAME_TYPE_NAME)
  private String typeName;

  public static final String SERIALIZED_NAME_INDEX_ROTATION_PERIOD = "IndexRotationPeriod";
  @SerializedName(SERIALIZED_NAME_INDEX_ROTATION_PERIOD)
  private AmazonopensearchserviceIndexRotationPeriod indexRotationPeriod;

  public static final String SERIALIZED_NAME_BUFFERING_HINTS = "BufferingHints";
  @SerializedName(SERIALIZED_NAME_BUFFERING_HINTS)
  private AmazonopensearchserviceDestinationDescriptionBufferingHints bufferingHints;

  public static final String SERIALIZED_NAME_RETRY_OPTIONS = "RetryOptions";
  @SerializedName(SERIALIZED_NAME_RETRY_OPTIONS)
  private AmazonopensearchserviceDestinationDescriptionRetryOptions retryOptions;

  public static final String SERIALIZED_NAME_S3_BACKUP_MODE = "S3BackupMode";
  @SerializedName(SERIALIZED_NAME_S3_BACKUP_MODE)
  private AmazonopensearchserviceS3BackupMode s3BackupMode;

  public static final String SERIALIZED_NAME_S3_DESTINATION_DESCRIPTION = "S3DestinationDescription";
  @SerializedName(SERIALIZED_NAME_S3_DESTINATION_DESCRIPTION)
  private S3DestinationDescription s3DestinationDescription;

  public static final String SERIALIZED_NAME_PROCESSING_CONFIGURATION = "ProcessingConfiguration";
  @SerializedName(SERIALIZED_NAME_PROCESSING_CONFIGURATION)
  private ProcessingConfiguration processingConfiguration;

  public static final String SERIALIZED_NAME_CLOUD_WATCH_LOGGING_OPTIONS = "CloudWatchLoggingOptions";
  @SerializedName(SERIALIZED_NAME_CLOUD_WATCH_LOGGING_OPTIONS)
  private CloudWatchLoggingOptions cloudWatchLoggingOptions;

  public static final String SERIALIZED_NAME_VPC_CONFIGURATION_DESCRIPTION = "VpcConfigurationDescription";
  @SerializedName(SERIALIZED_NAME_VPC_CONFIGURATION_DESCRIPTION)
  private VpcConfigurationDescription vpcConfigurationDescription;

  public AmazonopensearchserviceDestinationDescription() {
  }

  public AmazonopensearchserviceDestinationDescription roleARN(String roleARN) {
    this.roleARN = roleARN;
    return this;
  }

  /**
   * Get roleARN
   * @return roleARN
   */
  @javax.annotation.Nullable
  public String getRoleARN() {
    return roleARN;
  }

  public void setRoleARN(String roleARN) {
    this.roleARN = roleARN;
  }


  public AmazonopensearchserviceDestinationDescription domainARN(String domainARN) {
    this.domainARN = domainARN;
    return this;
  }

  /**
   * Get domainARN
   * @return domainARN
   */
  @javax.annotation.Nullable
  public String getDomainARN() {
    return domainARN;
  }

  public void setDomainARN(String domainARN) {
    this.domainARN = domainARN;
  }


  public AmazonopensearchserviceDestinationDescription clusterEndpoint(String clusterEndpoint) {
    this.clusterEndpoint = clusterEndpoint;
    return this;
  }

  /**
   * Get clusterEndpoint
   * @return clusterEndpoint
   */
  @javax.annotation.Nullable
  public String getClusterEndpoint() {
    return clusterEndpoint;
  }

  public void setClusterEndpoint(String clusterEndpoint) {
    this.clusterEndpoint = clusterEndpoint;
  }


  public AmazonopensearchserviceDestinationDescription indexName(String indexName) {
    this.indexName = indexName;
    return this;
  }

  /**
   * Get indexName
   * @return indexName
   */
  @javax.annotation.Nullable
  public String getIndexName() {
    return indexName;
  }

  public void setIndexName(String indexName) {
    this.indexName = indexName;
  }


  public AmazonopensearchserviceDestinationDescription typeName(String typeName) {
    this.typeName = typeName;
    return this;
  }

  /**
   * Get typeName
   * @return typeName
   */
  @javax.annotation.Nullable
  public String getTypeName() {
    return typeName;
  }

  public void setTypeName(String typeName) {
    this.typeName = typeName;
  }


  public AmazonopensearchserviceDestinationDescription indexRotationPeriod(AmazonopensearchserviceIndexRotationPeriod indexRotationPeriod) {
    this.indexRotationPeriod = indexRotationPeriod;
    return this;
  }

  /**
   * Get indexRotationPeriod
   * @return indexRotationPeriod
   */
  @javax.annotation.Nullable
  public AmazonopensearchserviceIndexRotationPeriod getIndexRotationPeriod() {
    return indexRotationPeriod;
  }

  public void setIndexRotationPeriod(AmazonopensearchserviceIndexRotationPeriod indexRotationPeriod) {
    this.indexRotationPeriod = indexRotationPeriod;
  }


  public AmazonopensearchserviceDestinationDescription bufferingHints(AmazonopensearchserviceDestinationDescriptionBufferingHints bufferingHints) {
    this.bufferingHints = bufferingHints;
    return this;
  }

  /**
   * Get bufferingHints
   * @return bufferingHints
   */
  @javax.annotation.Nullable
  public AmazonopensearchserviceDestinationDescriptionBufferingHints getBufferingHints() {
    return bufferingHints;
  }

  public void setBufferingHints(AmazonopensearchserviceDestinationDescriptionBufferingHints bufferingHints) {
    this.bufferingHints = bufferingHints;
  }


  public AmazonopensearchserviceDestinationDescription retryOptions(AmazonopensearchserviceDestinationDescriptionRetryOptions retryOptions) {
    this.retryOptions = retryOptions;
    return this;
  }

  /**
   * Get retryOptions
   * @return retryOptions
   */
  @javax.annotation.Nullable
  public AmazonopensearchserviceDestinationDescriptionRetryOptions getRetryOptions() {
    return retryOptions;
  }

  public void setRetryOptions(AmazonopensearchserviceDestinationDescriptionRetryOptions retryOptions) {
    this.retryOptions = retryOptions;
  }


  public AmazonopensearchserviceDestinationDescription s3BackupMode(AmazonopensearchserviceS3BackupMode s3BackupMode) {
    this.s3BackupMode = s3BackupMode;
    return this;
  }

  /**
   * Get s3BackupMode
   * @return s3BackupMode
   */
  @javax.annotation.Nullable
  public AmazonopensearchserviceS3BackupMode getS3BackupMode() {
    return s3BackupMode;
  }

  public void setS3BackupMode(AmazonopensearchserviceS3BackupMode s3BackupMode) {
    this.s3BackupMode = s3BackupMode;
  }


  public AmazonopensearchserviceDestinationDescription s3DestinationDescription(S3DestinationDescription s3DestinationDescription) {
    this.s3DestinationDescription = s3DestinationDescription;
    return this;
  }

  /**
   * Get s3DestinationDescription
   * @return s3DestinationDescription
   */
  @javax.annotation.Nullable
  public S3DestinationDescription getS3DestinationDescription() {
    return s3DestinationDescription;
  }

  public void setS3DestinationDescription(S3DestinationDescription s3DestinationDescription) {
    this.s3DestinationDescription = s3DestinationDescription;
  }


  public AmazonopensearchserviceDestinationDescription processingConfiguration(ProcessingConfiguration processingConfiguration) {
    this.processingConfiguration = processingConfiguration;
    return this;
  }

  /**
   * Get processingConfiguration
   * @return processingConfiguration
   */
  @javax.annotation.Nullable
  public ProcessingConfiguration getProcessingConfiguration() {
    return processingConfiguration;
  }

  public void setProcessingConfiguration(ProcessingConfiguration processingConfiguration) {
    this.processingConfiguration = processingConfiguration;
  }


  public AmazonopensearchserviceDestinationDescription cloudWatchLoggingOptions(CloudWatchLoggingOptions cloudWatchLoggingOptions) {
    this.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
    return this;
  }

  /**
   * Get cloudWatchLoggingOptions
   * @return cloudWatchLoggingOptions
   */
  @javax.annotation.Nullable
  public CloudWatchLoggingOptions getCloudWatchLoggingOptions() {
    return cloudWatchLoggingOptions;
  }

  public void setCloudWatchLoggingOptions(CloudWatchLoggingOptions cloudWatchLoggingOptions) {
    this.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
  }


  public AmazonopensearchserviceDestinationDescription vpcConfigurationDescription(VpcConfigurationDescription vpcConfigurationDescription) {
    this.vpcConfigurationDescription = vpcConfigurationDescription;
    return this;
  }

  /**
   * Get vpcConfigurationDescription
   * @return vpcConfigurationDescription
   */
  @javax.annotation.Nullable
  public VpcConfigurationDescription getVpcConfigurationDescription() {
    return vpcConfigurationDescription;
  }

  public void setVpcConfigurationDescription(VpcConfigurationDescription vpcConfigurationDescription) {
    this.vpcConfigurationDescription = vpcConfigurationDescription;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AmazonopensearchserviceDestinationDescription amazonopensearchserviceDestinationDescription = (AmazonopensearchserviceDestinationDescription) o;
    return Objects.equals(this.roleARN, amazonopensearchserviceDestinationDescription.roleARN) &&
        Objects.equals(this.domainARN, amazonopensearchserviceDestinationDescription.domainARN) &&
        Objects.equals(this.clusterEndpoint, amazonopensearchserviceDestinationDescription.clusterEndpoint) &&
        Objects.equals(this.indexName, amazonopensearchserviceDestinationDescription.indexName) &&
        Objects.equals(this.typeName, amazonopensearchserviceDestinationDescription.typeName) &&
        Objects.equals(this.indexRotationPeriod, amazonopensearchserviceDestinationDescription.indexRotationPeriod) &&
        Objects.equals(this.bufferingHints, amazonopensearchserviceDestinationDescription.bufferingHints) &&
        Objects.equals(this.retryOptions, amazonopensearchserviceDestinationDescription.retryOptions) &&
        Objects.equals(this.s3BackupMode, amazonopensearchserviceDestinationDescription.s3BackupMode) &&
        Objects.equals(this.s3DestinationDescription, amazonopensearchserviceDestinationDescription.s3DestinationDescription) &&
        Objects.equals(this.processingConfiguration, amazonopensearchserviceDestinationDescription.processingConfiguration) &&
        Objects.equals(this.cloudWatchLoggingOptions, amazonopensearchserviceDestinationDescription.cloudWatchLoggingOptions) &&
        Objects.equals(this.vpcConfigurationDescription, amazonopensearchserviceDestinationDescription.vpcConfigurationDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(roleARN, domainARN, clusterEndpoint, indexName, typeName, indexRotationPeriod, bufferingHints, retryOptions, s3BackupMode, s3DestinationDescription, processingConfiguration, cloudWatchLoggingOptions, vpcConfigurationDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AmazonopensearchserviceDestinationDescription {\n");
    sb.append("    roleARN: ").append(toIndentedString(roleARN)).append("\n");
    sb.append("    domainARN: ").append(toIndentedString(domainARN)).append("\n");
    sb.append("    clusterEndpoint: ").append(toIndentedString(clusterEndpoint)).append("\n");
    sb.append("    indexName: ").append(toIndentedString(indexName)).append("\n");
    sb.append("    typeName: ").append(toIndentedString(typeName)).append("\n");
    sb.append("    indexRotationPeriod: ").append(toIndentedString(indexRotationPeriod)).append("\n");
    sb.append("    bufferingHints: ").append(toIndentedString(bufferingHints)).append("\n");
    sb.append("    retryOptions: ").append(toIndentedString(retryOptions)).append("\n");
    sb.append("    s3BackupMode: ").append(toIndentedString(s3BackupMode)).append("\n");
    sb.append("    s3DestinationDescription: ").append(toIndentedString(s3DestinationDescription)).append("\n");
    sb.append("    processingConfiguration: ").append(toIndentedString(processingConfiguration)).append("\n");
    sb.append("    cloudWatchLoggingOptions: ").append(toIndentedString(cloudWatchLoggingOptions)).append("\n");
    sb.append("    vpcConfigurationDescription: ").append(toIndentedString(vpcConfigurationDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("RoleARN");
    openapiFields.add("DomainARN");
    openapiFields.add("ClusterEndpoint");
    openapiFields.add("IndexName");
    openapiFields.add("TypeName");
    openapiFields.add("IndexRotationPeriod");
    openapiFields.add("BufferingHints");
    openapiFields.add("RetryOptions");
    openapiFields.add("S3BackupMode");
    openapiFields.add("S3DestinationDescription");
    openapiFields.add("ProcessingConfiguration");
    openapiFields.add("CloudWatchLoggingOptions");
    openapiFields.add("VpcConfigurationDescription");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AmazonopensearchserviceDestinationDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AmazonopensearchserviceDestinationDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AmazonopensearchserviceDestinationDescription is not found in the empty JSON string", AmazonopensearchserviceDestinationDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AmazonopensearchserviceDestinationDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AmazonopensearchserviceDestinationDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `RoleARN`
      if (jsonObj.get("RoleARN") != null && !jsonObj.get("RoleARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RoleARN"));
      }
      // validate the optional field `DomainARN`
      if (jsonObj.get("DomainARN") != null && !jsonObj.get("DomainARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DomainARN"));
      }
      // validate the optional field `ClusterEndpoint`
      if (jsonObj.get("ClusterEndpoint") != null && !jsonObj.get("ClusterEndpoint").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterEndpoint"));
      }
      // validate the optional field `IndexName`
      if (jsonObj.get("IndexName") != null && !jsonObj.get("IndexName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IndexName"));
      }
      // validate the optional field `TypeName`
      if (jsonObj.get("TypeName") != null && !jsonObj.get("TypeName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TypeName"));
      }
      // validate the optional field `IndexRotationPeriod`
      if (jsonObj.get("IndexRotationPeriod") != null && !jsonObj.get("IndexRotationPeriod").isJsonNull()) {
        AmazonopensearchserviceIndexRotationPeriod.validateJsonElement(jsonObj.get("IndexRotationPeriod"));
      }
      // validate the optional field `BufferingHints`
      if (jsonObj.get("BufferingHints") != null && !jsonObj.get("BufferingHints").isJsonNull()) {
        AmazonopensearchserviceDestinationDescriptionBufferingHints.validateJsonElement(jsonObj.get("BufferingHints"));
      }
      // validate the optional field `RetryOptions`
      if (jsonObj.get("RetryOptions") != null && !jsonObj.get("RetryOptions").isJsonNull()) {
        AmazonopensearchserviceDestinationDescriptionRetryOptions.validateJsonElement(jsonObj.get("RetryOptions"));
      }
      // validate the optional field `S3BackupMode`
      if (jsonObj.get("S3BackupMode") != null && !jsonObj.get("S3BackupMode").isJsonNull()) {
        AmazonopensearchserviceS3BackupMode.validateJsonElement(jsonObj.get("S3BackupMode"));
      }
      // validate the optional field `S3DestinationDescription`
      if (jsonObj.get("S3DestinationDescription") != null && !jsonObj.get("S3DestinationDescription").isJsonNull()) {
        S3DestinationDescription.validateJsonElement(jsonObj.get("S3DestinationDescription"));
      }
      // validate the optional field `ProcessingConfiguration`
      if (jsonObj.get("ProcessingConfiguration") != null && !jsonObj.get("ProcessingConfiguration").isJsonNull()) {
        ProcessingConfiguration.validateJsonElement(jsonObj.get("ProcessingConfiguration"));
      }
      // validate the optional field `CloudWatchLoggingOptions`
      if (jsonObj.get("CloudWatchLoggingOptions") != null && !jsonObj.get("CloudWatchLoggingOptions").isJsonNull()) {
        CloudWatchLoggingOptions.validateJsonElement(jsonObj.get("CloudWatchLoggingOptions"));
      }
      // validate the optional field `VpcConfigurationDescription`
      if (jsonObj.get("VpcConfigurationDescription") != null && !jsonObj.get("VpcConfigurationDescription").isJsonNull()) {
        VpcConfigurationDescription.validateJsonElement(jsonObj.get("VpcConfigurationDescription"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AmazonopensearchserviceDestinationDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AmazonopensearchserviceDestinationDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AmazonopensearchserviceDestinationDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AmazonopensearchserviceDestinationDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<AmazonopensearchserviceDestinationDescription>() {
           @Override
           public void write(JsonWriter out, AmazonopensearchserviceDestinationDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AmazonopensearchserviceDestinationDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AmazonopensearchserviceDestinationDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AmazonopensearchserviceDestinationDescription
   * @throws IOException if the JSON string is invalid with respect to AmazonopensearchserviceDestinationDescription
   */
  public static AmazonopensearchserviceDestinationDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AmazonopensearchserviceDestinationDescription.class);
  }

  /**
   * Convert an instance of AmazonopensearchserviceDestinationDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

