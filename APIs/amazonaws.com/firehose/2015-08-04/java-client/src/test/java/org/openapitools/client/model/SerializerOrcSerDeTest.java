/*
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.OrcCompression;
import org.openapitools.client.model.OrcFormatVersion;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SerializerOrcSerDe
 */
public class SerializerOrcSerDeTest {
    private final SerializerOrcSerDe model = new SerializerOrcSerDe();

    /**
     * Model tests for SerializerOrcSerDe
     */
    @Test
    public void testSerializerOrcSerDe() {
        // TODO: test SerializerOrcSerDe
    }

    /**
     * Test the property 'stripeSizeBytes'
     */
    @Test
    public void stripeSizeBytesTest() {
        // TODO: test stripeSizeBytes
    }

    /**
     * Test the property 'blockSizeBytes'
     */
    @Test
    public void blockSizeBytesTest() {
        // TODO: test blockSizeBytes
    }

    /**
     * Test the property 'rowIndexStride'
     */
    @Test
    public void rowIndexStrideTest() {
        // TODO: test rowIndexStride
    }

    /**
     * Test the property 'enablePadding'
     */
    @Test
    public void enablePaddingTest() {
        // TODO: test enablePadding
    }

    /**
     * Test the property 'paddingTolerance'
     */
    @Test
    public void paddingToleranceTest() {
        // TODO: test paddingTolerance
    }

    /**
     * Test the property 'compression'
     */
    @Test
    public void compressionTest() {
        // TODO: test compression
    }

    /**
     * Test the property 'bloomFilterColumns'
     */
    @Test
    public void bloomFilterColumnsTest() {
        // TODO: test bloomFilterColumns
    }

    /**
     * Test the property 'bloomFilterFalsePositiveProbability'
     */
    @Test
    public void bloomFilterFalsePositiveProbabilityTest() {
        // TODO: test bloomFilterFalsePositiveProbability
    }

    /**
     * Test the property 'dictionaryKeyThreshold'
     */
    @Test
    public void dictionaryKeyThresholdTest() {
        // TODO: test dictionaryKeyThreshold
    }

    /**
     * Test the property 'formatVersion'
     */
    @Test
    public void formatVersionTest() {
        // TODO: test formatVersion
    }

}
