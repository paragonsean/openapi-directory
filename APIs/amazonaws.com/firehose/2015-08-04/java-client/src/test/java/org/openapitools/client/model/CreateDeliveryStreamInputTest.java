/*
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateDeliveryStreamInputAmazonOpenSearchServerlessDestinationConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputAmazonopensearchserviceDestinationConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputDeliveryStreamEncryptionConfigurationInput;
import org.openapitools.client.model.CreateDeliveryStreamInputElasticsearchDestinationConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputExtendedS3DestinationConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputHttpEndpointDestinationConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputKinesisStreamSourceConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputRedshiftDestinationConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputS3DestinationConfiguration;
import org.openapitools.client.model.CreateDeliveryStreamInputSplunkDestinationConfiguration;
import org.openapitools.client.model.DeliveryStreamType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateDeliveryStreamInput
 */
public class CreateDeliveryStreamInputTest {
    private final CreateDeliveryStreamInput model = new CreateDeliveryStreamInput();

    /**
     * Model tests for CreateDeliveryStreamInput
     */
    @Test
    public void testCreateDeliveryStreamInput() {
        // TODO: test CreateDeliveryStreamInput
    }

    /**
     * Test the property 'deliveryStreamName'
     */
    @Test
    public void deliveryStreamNameTest() {
        // TODO: test deliveryStreamName
    }

    /**
     * Test the property 'deliveryStreamType'
     */
    @Test
    public void deliveryStreamTypeTest() {
        // TODO: test deliveryStreamType
    }

    /**
     * Test the property 'kinesisStreamSourceConfiguration'
     */
    @Test
    public void kinesisStreamSourceConfigurationTest() {
        // TODO: test kinesisStreamSourceConfiguration
    }

    /**
     * Test the property 'deliveryStreamEncryptionConfigurationInput'
     */
    @Test
    public void deliveryStreamEncryptionConfigurationInputTest() {
        // TODO: test deliveryStreamEncryptionConfigurationInput
    }

    /**
     * Test the property 's3DestinationConfiguration'
     */
    @Test
    public void s3DestinationConfigurationTest() {
        // TODO: test s3DestinationConfiguration
    }

    /**
     * Test the property 'extendedS3DestinationConfiguration'
     */
    @Test
    public void extendedS3DestinationConfigurationTest() {
        // TODO: test extendedS3DestinationConfiguration
    }

    /**
     * Test the property 'redshiftDestinationConfiguration'
     */
    @Test
    public void redshiftDestinationConfigurationTest() {
        // TODO: test redshiftDestinationConfiguration
    }

    /**
     * Test the property 'elasticsearchDestinationConfiguration'
     */
    @Test
    public void elasticsearchDestinationConfigurationTest() {
        // TODO: test elasticsearchDestinationConfiguration
    }

    /**
     * Test the property 'amazonopensearchserviceDestinationConfiguration'
     */
    @Test
    public void amazonopensearchserviceDestinationConfigurationTest() {
        // TODO: test amazonopensearchserviceDestinationConfiguration
    }

    /**
     * Test the property 'splunkDestinationConfiguration'
     */
    @Test
    public void splunkDestinationConfigurationTest() {
        // TODO: test splunkDestinationConfiguration
    }

    /**
     * Test the property 'httpEndpointDestinationConfiguration'
     */
    @Test
    public void httpEndpointDestinationConfigurationTest() {
        // TODO: test httpEndpointDestinationConfiguration
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'amazonOpenSearchServerlessDestinationConfiguration'
     */
    @Test
    public void amazonOpenSearchServerlessDestinationConfigurationTest() {
        // TODO: test amazonOpenSearchServerlessDestinationConfiguration
    }

}
