/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CloudWatchLoggingOptions model module.
 * @module model/CloudWatchLoggingOptions
 * @version 2015-08-04
 */
class CloudWatchLoggingOptions {
    /**
     * Constructs a new <code>CloudWatchLoggingOptions</code>.
     * Describes the Amazon CloudWatch logging options for your delivery stream.
     * @alias module:model/CloudWatchLoggingOptions
     */
    constructor() { 
        
        CloudWatchLoggingOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CloudWatchLoggingOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudWatchLoggingOptions} obj Optional instance to populate.
     * @return {module:model/CloudWatchLoggingOptions} The populated <code>CloudWatchLoggingOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudWatchLoggingOptions();

            if (data.hasOwnProperty('Enabled')) {
                obj['Enabled'] = ApiClient.convertToType(data['Enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('LogGroupName')) {
                obj['LogGroupName'] = ApiClient.convertToType(data['LogGroupName'], 'String');
            }
            if (data.hasOwnProperty('LogStreamName')) {
                obj['LogStreamName'] = ApiClient.convertToType(data['LogStreamName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudWatchLoggingOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudWatchLoggingOptions</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Enabled`
        if (data['Enabled']) { // data not null
          Boolean.validateJSON(data['Enabled']);
        }
        // validate the optional field `LogGroupName`
        if (data['LogGroupName']) { // data not null
          String.validateJSON(data['LogGroupName']);
        }
        // validate the optional field `LogStreamName`
        if (data['LogStreamName']) { // data not null
          String.validateJSON(data['LogStreamName']);
        }

        return true;
    }


}



/**
 * @member {Boolean} Enabled
 */
CloudWatchLoggingOptions.prototype['Enabled'] = undefined;

/**
 * @member {String} LogGroupName
 */
CloudWatchLoggingOptions.prototype['LogGroupName'] = undefined;

/**
 * @member {String} LogStreamName
 */
CloudWatchLoggingOptions.prototype['LogStreamName'] = undefined;






export default CloudWatchLoggingOptions;

