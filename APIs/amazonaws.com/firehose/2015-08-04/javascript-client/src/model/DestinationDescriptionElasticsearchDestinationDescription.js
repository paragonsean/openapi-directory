/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ElasticsearchDestinationDescription from './ElasticsearchDestinationDescription';
import ElasticsearchDestinationDescriptionBufferingHints from './ElasticsearchDestinationDescriptionBufferingHints';
import ElasticsearchDestinationDescriptionCloudWatchLoggingOptions from './ElasticsearchDestinationDescriptionCloudWatchLoggingOptions';
import ElasticsearchDestinationDescriptionRetryOptions from './ElasticsearchDestinationDescriptionRetryOptions';
import ElasticsearchDestinationDescriptionVpcConfigurationDescription from './ElasticsearchDestinationDescriptionVpcConfigurationDescription';
import ElasticsearchIndexRotationPeriod from './ElasticsearchIndexRotationPeriod';
import ElasticsearchS3BackupMode from './ElasticsearchS3BackupMode';
import ExtendedS3DestinationConfigurationProcessingConfiguration from './ExtendedS3DestinationConfigurationProcessingConfiguration';
import RedshiftDestinationDescriptionS3DestinationDescription from './RedshiftDestinationDescriptionS3DestinationDescription';

/**
 * The DestinationDescriptionElasticsearchDestinationDescription model module.
 * @module model/DestinationDescriptionElasticsearchDestinationDescription
 * @version 2015-08-04
 */
class DestinationDescriptionElasticsearchDestinationDescription {
    /**
     * Constructs a new <code>DestinationDescriptionElasticsearchDestinationDescription</code>.
     * @alias module:model/DestinationDescriptionElasticsearchDestinationDescription
     * @implements module:model/ElasticsearchDestinationDescription
     */
    constructor() { 
        ElasticsearchDestinationDescription.initialize(this);
        DestinationDescriptionElasticsearchDestinationDescription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DestinationDescriptionElasticsearchDestinationDescription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DestinationDescriptionElasticsearchDestinationDescription} obj Optional instance to populate.
     * @return {module:model/DestinationDescriptionElasticsearchDestinationDescription} The populated <code>DestinationDescriptionElasticsearchDestinationDescription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DestinationDescriptionElasticsearchDestinationDescription();
            ElasticsearchDestinationDescription.constructFromObject(data, obj);

            if (data.hasOwnProperty('RoleARN')) {
                obj['RoleARN'] = ApiClient.convertToType(data['RoleARN'], 'String');
            }
            if (data.hasOwnProperty('DomainARN')) {
                obj['DomainARN'] = ApiClient.convertToType(data['DomainARN'], 'String');
            }
            if (data.hasOwnProperty('ClusterEndpoint')) {
                obj['ClusterEndpoint'] = ApiClient.convertToType(data['ClusterEndpoint'], 'String');
            }
            if (data.hasOwnProperty('IndexName')) {
                obj['IndexName'] = ApiClient.convertToType(data['IndexName'], 'String');
            }
            if (data.hasOwnProperty('TypeName')) {
                obj['TypeName'] = ApiClient.convertToType(data['TypeName'], 'String');
            }
            if (data.hasOwnProperty('IndexRotationPeriod')) {
                obj['IndexRotationPeriod'] = ApiClient.convertToType(data['IndexRotationPeriod'], ElasticsearchIndexRotationPeriod);
            }
            if (data.hasOwnProperty('BufferingHints')) {
                obj['BufferingHints'] = ElasticsearchDestinationDescriptionBufferingHints.constructFromObject(data['BufferingHints']);
            }
            if (data.hasOwnProperty('RetryOptions')) {
                obj['RetryOptions'] = ElasticsearchDestinationDescriptionRetryOptions.constructFromObject(data['RetryOptions']);
            }
            if (data.hasOwnProperty('S3BackupMode')) {
                obj['S3BackupMode'] = ApiClient.convertToType(data['S3BackupMode'], ElasticsearchS3BackupMode);
            }
            if (data.hasOwnProperty('S3DestinationDescription')) {
                obj['S3DestinationDescription'] = RedshiftDestinationDescriptionS3DestinationDescription.constructFromObject(data['S3DestinationDescription']);
            }
            if (data.hasOwnProperty('ProcessingConfiguration')) {
                obj['ProcessingConfiguration'] = ExtendedS3DestinationConfigurationProcessingConfiguration.constructFromObject(data['ProcessingConfiguration']);
            }
            if (data.hasOwnProperty('CloudWatchLoggingOptions')) {
                obj['CloudWatchLoggingOptions'] = ElasticsearchDestinationDescriptionCloudWatchLoggingOptions.constructFromObject(data['CloudWatchLoggingOptions']);
            }
            if (data.hasOwnProperty('VpcConfigurationDescription')) {
                obj['VpcConfigurationDescription'] = ElasticsearchDestinationDescriptionVpcConfigurationDescription.constructFromObject(data['VpcConfigurationDescription']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DestinationDescriptionElasticsearchDestinationDescription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DestinationDescriptionElasticsearchDestinationDescription</code>.
     */
    static validateJSON(data) {
        // validate the optional field `RoleARN`
        if (data['RoleARN']) { // data not null
          String.validateJSON(data['RoleARN']);
        }
        // validate the optional field `DomainARN`
        if (data['DomainARN']) { // data not null
          String.validateJSON(data['DomainARN']);
        }
        // validate the optional field `ClusterEndpoint`
        if (data['ClusterEndpoint']) { // data not null
          String.validateJSON(data['ClusterEndpoint']);
        }
        // validate the optional field `IndexName`
        if (data['IndexName']) { // data not null
          String.validateJSON(data['IndexName']);
        }
        // validate the optional field `TypeName`
        if (data['TypeName']) { // data not null
          String.validateJSON(data['TypeName']);
        }
        // validate the optional field `IndexRotationPeriod`
        if (data['IndexRotationPeriod']) { // data not null
          ElasticsearchIndexRotationPeriod.validateJSON(data['IndexRotationPeriod']);
        }
        // validate the optional field `BufferingHints`
        if (data['BufferingHints']) { // data not null
          ElasticsearchDestinationDescriptionBufferingHints.validateJSON(data['BufferingHints']);
        }
        // validate the optional field `RetryOptions`
        if (data['RetryOptions']) { // data not null
          ElasticsearchDestinationDescriptionRetryOptions.validateJSON(data['RetryOptions']);
        }
        // validate the optional field `S3BackupMode`
        if (data['S3BackupMode']) { // data not null
          ElasticsearchS3BackupMode.validateJSON(data['S3BackupMode']);
        }
        // validate the optional field `S3DestinationDescription`
        if (data['S3DestinationDescription']) { // data not null
          RedshiftDestinationDescriptionS3DestinationDescription.validateJSON(data['S3DestinationDescription']);
        }
        // validate the optional field `ProcessingConfiguration`
        if (data['ProcessingConfiguration']) { // data not null
          ExtendedS3DestinationConfigurationProcessingConfiguration.validateJSON(data['ProcessingConfiguration']);
        }
        // validate the optional field `CloudWatchLoggingOptions`
        if (data['CloudWatchLoggingOptions']) { // data not null
          ElasticsearchDestinationDescriptionCloudWatchLoggingOptions.validateJSON(data['CloudWatchLoggingOptions']);
        }
        // validate the optional field `VpcConfigurationDescription`
        if (data['VpcConfigurationDescription']) { // data not null
          ElasticsearchDestinationDescriptionVpcConfigurationDescription.validateJSON(data['VpcConfigurationDescription']);
        }

        return true;
    }


}



/**
 * @member {String} RoleARN
 */
DestinationDescriptionElasticsearchDestinationDescription.prototype['RoleARN'] = undefined;

/**
 * @member {String} DomainARN
 */
DestinationDescriptionElasticsearchDestinationDescription.prototype['DomainARN'] = undefined;

/**
 * @member {String} ClusterEndpoint
 */
DestinationDescriptionElasticsearchDestinationDescription.prototype['ClusterEndpoint'] = undefined;

/**
 * @member {String} IndexName
 */
DestinationDescriptionElasticsearchDestinationDescription.prototype['IndexName'] = undefined;

/**
 * @member {String} TypeName
 */
DestinationDescriptionElasticsearchDestinationDescription.prototype['TypeName'] = undefined;

/**
 * @member {module:model/ElasticsearchIndexRotationPeriod} IndexRotationPeriod
 */
DestinationDescriptionElasticsearchDestinationDescription.prototype['IndexRotationPeriod'] = undefined;

/**
 * @member {module:model/ElasticsearchDestinationDescriptionBufferingHints} BufferingHints
 */
DestinationDescriptionElasticsearchDestinationDescription.prototype['BufferingHints'] = undefined;

/**
 * @member {module:model/ElasticsearchDestinationDescriptionRetryOptions} RetryOptions
 */
DestinationDescriptionElasticsearchDestinationDescription.prototype['RetryOptions'] = undefined;

/**
 * @member {module:model/ElasticsearchS3BackupMode} S3BackupMode
 */
DestinationDescriptionElasticsearchDestinationDescription.prototype['S3BackupMode'] = undefined;

/**
 * @member {module:model/RedshiftDestinationDescriptionS3DestinationDescription} S3DestinationDescription
 */
DestinationDescriptionElasticsearchDestinationDescription.prototype['S3DestinationDescription'] = undefined;

/**
 * @member {module:model/ExtendedS3DestinationConfigurationProcessingConfiguration} ProcessingConfiguration
 */
DestinationDescriptionElasticsearchDestinationDescription.prototype['ProcessingConfiguration'] = undefined;

/**
 * @member {module:model/ElasticsearchDestinationDescriptionCloudWatchLoggingOptions} CloudWatchLoggingOptions
 */
DestinationDescriptionElasticsearchDestinationDescription.prototype['CloudWatchLoggingOptions'] = undefined;

/**
 * @member {module:model/ElasticsearchDestinationDescriptionVpcConfigurationDescription} VpcConfigurationDescription
 */
DestinationDescriptionElasticsearchDestinationDescription.prototype['VpcConfigurationDescription'] = undefined;


// Implement ElasticsearchDestinationDescription interface:
/**
 * @member {String} RoleARN
 */
ElasticsearchDestinationDescription.prototype['RoleARN'] = undefined;
/**
 * @member {String} DomainARN
 */
ElasticsearchDestinationDescription.prototype['DomainARN'] = undefined;
/**
 * @member {String} ClusterEndpoint
 */
ElasticsearchDestinationDescription.prototype['ClusterEndpoint'] = undefined;
/**
 * @member {String} IndexName
 */
ElasticsearchDestinationDescription.prototype['IndexName'] = undefined;
/**
 * @member {String} TypeName
 */
ElasticsearchDestinationDescription.prototype['TypeName'] = undefined;
/**
 * @member {module:model/ElasticsearchIndexRotationPeriod} IndexRotationPeriod
 */
ElasticsearchDestinationDescription.prototype['IndexRotationPeriod'] = undefined;
/**
 * @member {module:model/ElasticsearchDestinationDescriptionBufferingHints} BufferingHints
 */
ElasticsearchDestinationDescription.prototype['BufferingHints'] = undefined;
/**
 * @member {module:model/ElasticsearchDestinationDescriptionRetryOptions} RetryOptions
 */
ElasticsearchDestinationDescription.prototype['RetryOptions'] = undefined;
/**
 * @member {module:model/ElasticsearchS3BackupMode} S3BackupMode
 */
ElasticsearchDestinationDescription.prototype['S3BackupMode'] = undefined;
/**
 * @member {module:model/RedshiftDestinationDescriptionS3DestinationDescription} S3DestinationDescription
 */
ElasticsearchDestinationDescription.prototype['S3DestinationDescription'] = undefined;
/**
 * @member {module:model/ExtendedS3DestinationConfigurationProcessingConfiguration} ProcessingConfiguration
 */
ElasticsearchDestinationDescription.prototype['ProcessingConfiguration'] = undefined;
/**
 * @member {module:model/ElasticsearchDestinationDescriptionCloudWatchLoggingOptions} CloudWatchLoggingOptions
 */
ElasticsearchDestinationDescription.prototype['CloudWatchLoggingOptions'] = undefined;
/**
 * @member {module:model/ElasticsearchDestinationDescriptionVpcConfigurationDescription} VpcConfigurationDescription
 */
ElasticsearchDestinationDescription.prototype['VpcConfigurationDescription'] = undefined;




export default DestinationDescriptionElasticsearchDestinationDescription;

