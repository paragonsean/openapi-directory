/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KeyType from './KeyType';

/**
 * The DeliveryStreamEncryptionConfigurationInput model module.
 * @module model/DeliveryStreamEncryptionConfigurationInput
 * @version 2015-08-04
 */
class DeliveryStreamEncryptionConfigurationInput {
    /**
     * Constructs a new <code>DeliveryStreamEncryptionConfigurationInput</code>.
     * Specifies the type and Amazon Resource Name (ARN) of the CMK to use for Server-Side Encryption (SSE). 
     * @alias module:model/DeliveryStreamEncryptionConfigurationInput
     * @param keyType {module:model/KeyType} 
     */
    constructor(keyType) { 
        
        DeliveryStreamEncryptionConfigurationInput.initialize(this, keyType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, keyType) { 
        obj['KeyType'] = keyType;
    }

    /**
     * Constructs a <code>DeliveryStreamEncryptionConfigurationInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeliveryStreamEncryptionConfigurationInput} obj Optional instance to populate.
     * @return {module:model/DeliveryStreamEncryptionConfigurationInput} The populated <code>DeliveryStreamEncryptionConfigurationInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeliveryStreamEncryptionConfigurationInput();

            if (data.hasOwnProperty('KeyARN')) {
                obj['KeyARN'] = ApiClient.convertToType(data['KeyARN'], 'String');
            }
            if (data.hasOwnProperty('KeyType')) {
                obj['KeyType'] = ApiClient.convertToType(data['KeyType'], KeyType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeliveryStreamEncryptionConfigurationInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeliveryStreamEncryptionConfigurationInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeliveryStreamEncryptionConfigurationInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `KeyARN`
        if (data['KeyARN']) { // data not null
          String.validateJSON(data['KeyARN']);
        }
        // validate the optional field `KeyType`
        if (data['KeyType']) { // data not null
          KeyType.validateJSON(data['KeyType']);
        }

        return true;
    }


}

DeliveryStreamEncryptionConfigurationInput.RequiredProperties = ["KeyType"];

/**
 * @member {String} KeyARN
 */
DeliveryStreamEncryptionConfigurationInput.prototype['KeyARN'] = undefined;

/**
 * @member {module:model/KeyType} KeyType
 */
DeliveryStreamEncryptionConfigurationInput.prototype['KeyType'] = undefined;






export default DeliveryStreamEncryptionConfigurationInput;

