/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HiveJsonSerDe model module.
 * @module model/HiveJsonSerDe
 * @version 2015-08-04
 */
class HiveJsonSerDe {
    /**
     * Constructs a new <code>HiveJsonSerDe</code>.
     * The native Hive / HCatalog JsonSerDe. Used by Kinesis Data Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the OpenX SerDe.
     * @alias module:model/HiveJsonSerDe
     */
    constructor() { 
        
        HiveJsonSerDe.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HiveJsonSerDe</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HiveJsonSerDe} obj Optional instance to populate.
     * @return {module:model/HiveJsonSerDe} The populated <code>HiveJsonSerDe</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HiveJsonSerDe();

            if (data.hasOwnProperty('TimestampFormats')) {
                obj['TimestampFormats'] = ApiClient.convertToType(data['TimestampFormats'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HiveJsonSerDe</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HiveJsonSerDe</code>.
     */
    static validateJSON(data) {
        // validate the optional field `TimestampFormats`
        if (data['TimestampFormats']) { // data not null
          Array.validateJSON(data['TimestampFormats']);
        }

        return true;
    }


}



/**
 * @member {Array} TimestampFormats
 */
HiveJsonSerDe.prototype['TimestampFormats'] = undefined;






export default HiveJsonSerDe;

