/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate from './UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate';
import UpdateDestinationInputAmazonopensearchserviceDestinationUpdate from './UpdateDestinationInputAmazonopensearchserviceDestinationUpdate';
import UpdateDestinationInputElasticsearchDestinationUpdate from './UpdateDestinationInputElasticsearchDestinationUpdate';
import UpdateDestinationInputExtendedS3DestinationUpdate from './UpdateDestinationInputExtendedS3DestinationUpdate';
import UpdateDestinationInputHttpEndpointDestinationUpdate from './UpdateDestinationInputHttpEndpointDestinationUpdate';
import UpdateDestinationInputRedshiftDestinationUpdate from './UpdateDestinationInputRedshiftDestinationUpdate';
import UpdateDestinationInputS3DestinationUpdate from './UpdateDestinationInputS3DestinationUpdate';
import UpdateDestinationInputSplunkDestinationUpdate from './UpdateDestinationInputSplunkDestinationUpdate';

/**
 * The UpdateDestinationInput model module.
 * @module model/UpdateDestinationInput
 * @version 2015-08-04
 */
class UpdateDestinationInput {
    /**
     * Constructs a new <code>UpdateDestinationInput</code>.
     * @alias module:model/UpdateDestinationInput
     * @param deliveryStreamName {String} 
     * @param currentDeliveryStreamVersionId {String} 
     * @param destinationId {String} 
     */
    constructor(deliveryStreamName, currentDeliveryStreamVersionId, destinationId) { 
        
        UpdateDestinationInput.initialize(this, deliveryStreamName, currentDeliveryStreamVersionId, destinationId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, deliveryStreamName, currentDeliveryStreamVersionId, destinationId) { 
        obj['DeliveryStreamName'] = deliveryStreamName;
        obj['CurrentDeliveryStreamVersionId'] = currentDeliveryStreamVersionId;
        obj['DestinationId'] = destinationId;
    }

    /**
     * Constructs a <code>UpdateDestinationInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateDestinationInput} obj Optional instance to populate.
     * @return {module:model/UpdateDestinationInput} The populated <code>UpdateDestinationInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateDestinationInput();

            if (data.hasOwnProperty('DeliveryStreamName')) {
                obj['DeliveryStreamName'] = ApiClient.convertToType(data['DeliveryStreamName'], 'String');
            }
            if (data.hasOwnProperty('CurrentDeliveryStreamVersionId')) {
                obj['CurrentDeliveryStreamVersionId'] = ApiClient.convertToType(data['CurrentDeliveryStreamVersionId'], 'String');
            }
            if (data.hasOwnProperty('DestinationId')) {
                obj['DestinationId'] = ApiClient.convertToType(data['DestinationId'], 'String');
            }
            if (data.hasOwnProperty('S3DestinationUpdate')) {
                obj['S3DestinationUpdate'] = UpdateDestinationInputS3DestinationUpdate.constructFromObject(data['S3DestinationUpdate']);
            }
            if (data.hasOwnProperty('ExtendedS3DestinationUpdate')) {
                obj['ExtendedS3DestinationUpdate'] = UpdateDestinationInputExtendedS3DestinationUpdate.constructFromObject(data['ExtendedS3DestinationUpdate']);
            }
            if (data.hasOwnProperty('RedshiftDestinationUpdate')) {
                obj['RedshiftDestinationUpdate'] = UpdateDestinationInputRedshiftDestinationUpdate.constructFromObject(data['RedshiftDestinationUpdate']);
            }
            if (data.hasOwnProperty('ElasticsearchDestinationUpdate')) {
                obj['ElasticsearchDestinationUpdate'] = UpdateDestinationInputElasticsearchDestinationUpdate.constructFromObject(data['ElasticsearchDestinationUpdate']);
            }
            if (data.hasOwnProperty('AmazonopensearchserviceDestinationUpdate')) {
                obj['AmazonopensearchserviceDestinationUpdate'] = UpdateDestinationInputAmazonopensearchserviceDestinationUpdate.constructFromObject(data['AmazonopensearchserviceDestinationUpdate']);
            }
            if (data.hasOwnProperty('SplunkDestinationUpdate')) {
                obj['SplunkDestinationUpdate'] = UpdateDestinationInputSplunkDestinationUpdate.constructFromObject(data['SplunkDestinationUpdate']);
            }
            if (data.hasOwnProperty('HttpEndpointDestinationUpdate')) {
                obj['HttpEndpointDestinationUpdate'] = UpdateDestinationInputHttpEndpointDestinationUpdate.constructFromObject(data['HttpEndpointDestinationUpdate']);
            }
            if (data.hasOwnProperty('AmazonOpenSearchServerlessDestinationUpdate')) {
                obj['AmazonOpenSearchServerlessDestinationUpdate'] = UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.constructFromObject(data['AmazonOpenSearchServerlessDestinationUpdate']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateDestinationInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateDestinationInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateDestinationInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DeliveryStreamName`
        if (data['DeliveryStreamName']) { // data not null
          String.validateJSON(data['DeliveryStreamName']);
        }
        // validate the optional field `CurrentDeliveryStreamVersionId`
        if (data['CurrentDeliveryStreamVersionId']) { // data not null
          String.validateJSON(data['CurrentDeliveryStreamVersionId']);
        }
        // validate the optional field `DestinationId`
        if (data['DestinationId']) { // data not null
          String.validateJSON(data['DestinationId']);
        }
        // validate the optional field `S3DestinationUpdate`
        if (data['S3DestinationUpdate']) { // data not null
          UpdateDestinationInputS3DestinationUpdate.validateJSON(data['S3DestinationUpdate']);
        }
        // validate the optional field `ExtendedS3DestinationUpdate`
        if (data['ExtendedS3DestinationUpdate']) { // data not null
          UpdateDestinationInputExtendedS3DestinationUpdate.validateJSON(data['ExtendedS3DestinationUpdate']);
        }
        // validate the optional field `RedshiftDestinationUpdate`
        if (data['RedshiftDestinationUpdate']) { // data not null
          UpdateDestinationInputRedshiftDestinationUpdate.validateJSON(data['RedshiftDestinationUpdate']);
        }
        // validate the optional field `ElasticsearchDestinationUpdate`
        if (data['ElasticsearchDestinationUpdate']) { // data not null
          UpdateDestinationInputElasticsearchDestinationUpdate.validateJSON(data['ElasticsearchDestinationUpdate']);
        }
        // validate the optional field `AmazonopensearchserviceDestinationUpdate`
        if (data['AmazonopensearchserviceDestinationUpdate']) { // data not null
          UpdateDestinationInputAmazonopensearchserviceDestinationUpdate.validateJSON(data['AmazonopensearchserviceDestinationUpdate']);
        }
        // validate the optional field `SplunkDestinationUpdate`
        if (data['SplunkDestinationUpdate']) { // data not null
          UpdateDestinationInputSplunkDestinationUpdate.validateJSON(data['SplunkDestinationUpdate']);
        }
        // validate the optional field `HttpEndpointDestinationUpdate`
        if (data['HttpEndpointDestinationUpdate']) { // data not null
          UpdateDestinationInputHttpEndpointDestinationUpdate.validateJSON(data['HttpEndpointDestinationUpdate']);
        }
        // validate the optional field `AmazonOpenSearchServerlessDestinationUpdate`
        if (data['AmazonOpenSearchServerlessDestinationUpdate']) { // data not null
          UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.validateJSON(data['AmazonOpenSearchServerlessDestinationUpdate']);
        }

        return true;
    }


}

UpdateDestinationInput.RequiredProperties = ["DeliveryStreamName", "CurrentDeliveryStreamVersionId", "DestinationId"];

/**
 * @member {String} DeliveryStreamName
 */
UpdateDestinationInput.prototype['DeliveryStreamName'] = undefined;

/**
 * @member {String} CurrentDeliveryStreamVersionId
 */
UpdateDestinationInput.prototype['CurrentDeliveryStreamVersionId'] = undefined;

/**
 * @member {String} DestinationId
 */
UpdateDestinationInput.prototype['DestinationId'] = undefined;

/**
 * @member {module:model/UpdateDestinationInputS3DestinationUpdate} S3DestinationUpdate
 */
UpdateDestinationInput.prototype['S3DestinationUpdate'] = undefined;

/**
 * @member {module:model/UpdateDestinationInputExtendedS3DestinationUpdate} ExtendedS3DestinationUpdate
 */
UpdateDestinationInput.prototype['ExtendedS3DestinationUpdate'] = undefined;

/**
 * @member {module:model/UpdateDestinationInputRedshiftDestinationUpdate} RedshiftDestinationUpdate
 */
UpdateDestinationInput.prototype['RedshiftDestinationUpdate'] = undefined;

/**
 * @member {module:model/UpdateDestinationInputElasticsearchDestinationUpdate} ElasticsearchDestinationUpdate
 */
UpdateDestinationInput.prototype['ElasticsearchDestinationUpdate'] = undefined;

/**
 * @member {module:model/UpdateDestinationInputAmazonopensearchserviceDestinationUpdate} AmazonopensearchserviceDestinationUpdate
 */
UpdateDestinationInput.prototype['AmazonopensearchserviceDestinationUpdate'] = undefined;

/**
 * @member {module:model/UpdateDestinationInputSplunkDestinationUpdate} SplunkDestinationUpdate
 */
UpdateDestinationInput.prototype['SplunkDestinationUpdate'] = undefined;

/**
 * @member {module:model/UpdateDestinationInputHttpEndpointDestinationUpdate} HttpEndpointDestinationUpdate
 */
UpdateDestinationInput.prototype['HttpEndpointDestinationUpdate'] = undefined;

/**
 * @member {module:model/UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate} AmazonOpenSearchServerlessDestinationUpdate
 */
UpdateDestinationInput.prototype['AmazonOpenSearchServerlessDestinationUpdate'] = undefined;






export default UpdateDestinationInput;

