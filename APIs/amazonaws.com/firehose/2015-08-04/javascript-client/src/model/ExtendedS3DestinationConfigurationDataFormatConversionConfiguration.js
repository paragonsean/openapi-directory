/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataFormatConversionConfiguration from './DataFormatConversionConfiguration';
import DataFormatConversionConfigurationInputFormatConfiguration from './DataFormatConversionConfigurationInputFormatConfiguration';
import DataFormatConversionConfigurationOutputFormatConfiguration from './DataFormatConversionConfigurationOutputFormatConfiguration';
import DataFormatConversionConfigurationSchemaConfiguration from './DataFormatConversionConfigurationSchemaConfiguration';

/**
 * The ExtendedS3DestinationConfigurationDataFormatConversionConfiguration model module.
 * @module model/ExtendedS3DestinationConfigurationDataFormatConversionConfiguration
 * @version 2015-08-04
 */
class ExtendedS3DestinationConfigurationDataFormatConversionConfiguration {
    /**
     * Constructs a new <code>ExtendedS3DestinationConfigurationDataFormatConversionConfiguration</code>.
     * @alias module:model/ExtendedS3DestinationConfigurationDataFormatConversionConfiguration
     * @implements module:model/DataFormatConversionConfiguration
     */
    constructor() { 
        DataFormatConversionConfiguration.initialize(this);
        ExtendedS3DestinationConfigurationDataFormatConversionConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExtendedS3DestinationConfigurationDataFormatConversionConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExtendedS3DestinationConfigurationDataFormatConversionConfiguration} obj Optional instance to populate.
     * @return {module:model/ExtendedS3DestinationConfigurationDataFormatConversionConfiguration} The populated <code>ExtendedS3DestinationConfigurationDataFormatConversionConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExtendedS3DestinationConfigurationDataFormatConversionConfiguration();
            DataFormatConversionConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('SchemaConfiguration')) {
                obj['SchemaConfiguration'] = DataFormatConversionConfigurationSchemaConfiguration.constructFromObject(data['SchemaConfiguration']);
            }
            if (data.hasOwnProperty('InputFormatConfiguration')) {
                obj['InputFormatConfiguration'] = DataFormatConversionConfigurationInputFormatConfiguration.constructFromObject(data['InputFormatConfiguration']);
            }
            if (data.hasOwnProperty('OutputFormatConfiguration')) {
                obj['OutputFormatConfiguration'] = DataFormatConversionConfigurationOutputFormatConfiguration.constructFromObject(data['OutputFormatConfiguration']);
            }
            if (data.hasOwnProperty('Enabled')) {
                obj['Enabled'] = ApiClient.convertToType(data['Enabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExtendedS3DestinationConfigurationDataFormatConversionConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExtendedS3DestinationConfigurationDataFormatConversionConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `SchemaConfiguration`
        if (data['SchemaConfiguration']) { // data not null
          DataFormatConversionConfigurationSchemaConfiguration.validateJSON(data['SchemaConfiguration']);
        }
        // validate the optional field `InputFormatConfiguration`
        if (data['InputFormatConfiguration']) { // data not null
          DataFormatConversionConfigurationInputFormatConfiguration.validateJSON(data['InputFormatConfiguration']);
        }
        // validate the optional field `OutputFormatConfiguration`
        if (data['OutputFormatConfiguration']) { // data not null
          DataFormatConversionConfigurationOutputFormatConfiguration.validateJSON(data['OutputFormatConfiguration']);
        }
        // validate the optional field `Enabled`
        if (data['Enabled']) { // data not null
          Boolean.validateJSON(data['Enabled']);
        }

        return true;
    }


}



/**
 * @member {module:model/DataFormatConversionConfigurationSchemaConfiguration} SchemaConfiguration
 */
ExtendedS3DestinationConfigurationDataFormatConversionConfiguration.prototype['SchemaConfiguration'] = undefined;

/**
 * @member {module:model/DataFormatConversionConfigurationInputFormatConfiguration} InputFormatConfiguration
 */
ExtendedS3DestinationConfigurationDataFormatConversionConfiguration.prototype['InputFormatConfiguration'] = undefined;

/**
 * @member {module:model/DataFormatConversionConfigurationOutputFormatConfiguration} OutputFormatConfiguration
 */
ExtendedS3DestinationConfigurationDataFormatConversionConfiguration.prototype['OutputFormatConfiguration'] = undefined;

/**
 * @member {Boolean} Enabled
 */
ExtendedS3DestinationConfigurationDataFormatConversionConfiguration.prototype['Enabled'] = undefined;


// Implement DataFormatConversionConfiguration interface:
/**
 * @member {module:model/DataFormatConversionConfigurationSchemaConfiguration} SchemaConfiguration
 */
DataFormatConversionConfiguration.prototype['SchemaConfiguration'] = undefined;
/**
 * @member {module:model/DataFormatConversionConfigurationInputFormatConfiguration} InputFormatConfiguration
 */
DataFormatConversionConfiguration.prototype['InputFormatConfiguration'] = undefined;
/**
 * @member {module:model/DataFormatConversionConfigurationOutputFormatConfiguration} OutputFormatConfiguration
 */
DataFormatConversionConfiguration.prototype['OutputFormatConfiguration'] = undefined;
/**
 * @member {Boolean} Enabled
 */
DataFormatConversionConfiguration.prototype['Enabled'] = undefined;




export default ExtendedS3DestinationConfigurationDataFormatConversionConfiguration;

