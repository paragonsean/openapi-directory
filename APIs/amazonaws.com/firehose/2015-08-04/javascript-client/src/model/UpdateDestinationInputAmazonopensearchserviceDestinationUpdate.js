/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AmazonopensearchserviceDestinationConfigurationRetryOptions from './AmazonopensearchserviceDestinationConfigurationRetryOptions';
import AmazonopensearchserviceDestinationUpdate from './AmazonopensearchserviceDestinationUpdate';
import AmazonopensearchserviceDestinationUpdateBufferingHints from './AmazonopensearchserviceDestinationUpdateBufferingHints';
import AmazonopensearchserviceIndexRotationPeriod from './AmazonopensearchserviceIndexRotationPeriod';
import CloudWatchLoggingOptions from './CloudWatchLoggingOptions';
import ProcessingConfiguration from './ProcessingConfiguration';
import S3DestinationUpdate from './S3DestinationUpdate';

/**
 * The UpdateDestinationInputAmazonopensearchserviceDestinationUpdate model module.
 * @module model/UpdateDestinationInputAmazonopensearchserviceDestinationUpdate
 * @version 2015-08-04
 */
class UpdateDestinationInputAmazonopensearchserviceDestinationUpdate {
    /**
     * Constructs a new <code>UpdateDestinationInputAmazonopensearchserviceDestinationUpdate</code>.
     * @alias module:model/UpdateDestinationInputAmazonopensearchserviceDestinationUpdate
     * @implements module:model/AmazonopensearchserviceDestinationUpdate
     */
    constructor() { 
        AmazonopensearchserviceDestinationUpdate.initialize(this);
        UpdateDestinationInputAmazonopensearchserviceDestinationUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateDestinationInputAmazonopensearchserviceDestinationUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateDestinationInputAmazonopensearchserviceDestinationUpdate} obj Optional instance to populate.
     * @return {module:model/UpdateDestinationInputAmazonopensearchserviceDestinationUpdate} The populated <code>UpdateDestinationInputAmazonopensearchserviceDestinationUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateDestinationInputAmazonopensearchserviceDestinationUpdate();
            AmazonopensearchserviceDestinationUpdate.constructFromObject(data, obj);

            if (data.hasOwnProperty('RoleARN')) {
                obj['RoleARN'] = ApiClient.convertToType(data['RoleARN'], 'String');
            }
            if (data.hasOwnProperty('DomainARN')) {
                obj['DomainARN'] = ApiClient.convertToType(data['DomainARN'], 'String');
            }
            if (data.hasOwnProperty('ClusterEndpoint')) {
                obj['ClusterEndpoint'] = ApiClient.convertToType(data['ClusterEndpoint'], 'String');
            }
            if (data.hasOwnProperty('IndexName')) {
                obj['IndexName'] = ApiClient.convertToType(data['IndexName'], 'String');
            }
            if (data.hasOwnProperty('TypeName')) {
                obj['TypeName'] = ApiClient.convertToType(data['TypeName'], 'String');
            }
            if (data.hasOwnProperty('IndexRotationPeriod')) {
                obj['IndexRotationPeriod'] = ApiClient.convertToType(data['IndexRotationPeriod'], AmazonopensearchserviceIndexRotationPeriod);
            }
            if (data.hasOwnProperty('BufferingHints')) {
                obj['BufferingHints'] = AmazonopensearchserviceDestinationUpdateBufferingHints.constructFromObject(data['BufferingHints']);
            }
            if (data.hasOwnProperty('RetryOptions')) {
                obj['RetryOptions'] = AmazonopensearchserviceDestinationConfigurationRetryOptions.constructFromObject(data['RetryOptions']);
            }
            if (data.hasOwnProperty('S3Update')) {
                obj['S3Update'] = S3DestinationUpdate.constructFromObject(data['S3Update']);
            }
            if (data.hasOwnProperty('ProcessingConfiguration')) {
                obj['ProcessingConfiguration'] = ProcessingConfiguration.constructFromObject(data['ProcessingConfiguration']);
            }
            if (data.hasOwnProperty('CloudWatchLoggingOptions')) {
                obj['CloudWatchLoggingOptions'] = CloudWatchLoggingOptions.constructFromObject(data['CloudWatchLoggingOptions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateDestinationInputAmazonopensearchserviceDestinationUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateDestinationInputAmazonopensearchserviceDestinationUpdate</code>.
     */
    static validateJSON(data) {
        // validate the optional field `RoleARN`
        if (data['RoleARN']) { // data not null
          String.validateJSON(data['RoleARN']);
        }
        // validate the optional field `DomainARN`
        if (data['DomainARN']) { // data not null
          String.validateJSON(data['DomainARN']);
        }
        // validate the optional field `ClusterEndpoint`
        if (data['ClusterEndpoint']) { // data not null
          String.validateJSON(data['ClusterEndpoint']);
        }
        // validate the optional field `IndexName`
        if (data['IndexName']) { // data not null
          String.validateJSON(data['IndexName']);
        }
        // validate the optional field `TypeName`
        if (data['TypeName']) { // data not null
          String.validateJSON(data['TypeName']);
        }
        // validate the optional field `IndexRotationPeriod`
        if (data['IndexRotationPeriod']) { // data not null
          AmazonopensearchserviceIndexRotationPeriod.validateJSON(data['IndexRotationPeriod']);
        }
        // validate the optional field `BufferingHints`
        if (data['BufferingHints']) { // data not null
          AmazonopensearchserviceDestinationUpdateBufferingHints.validateJSON(data['BufferingHints']);
        }
        // validate the optional field `RetryOptions`
        if (data['RetryOptions']) { // data not null
          AmazonopensearchserviceDestinationConfigurationRetryOptions.validateJSON(data['RetryOptions']);
        }
        // validate the optional field `S3Update`
        if (data['S3Update']) { // data not null
          S3DestinationUpdate.validateJSON(data['S3Update']);
        }
        // validate the optional field `ProcessingConfiguration`
        if (data['ProcessingConfiguration']) { // data not null
          ProcessingConfiguration.validateJSON(data['ProcessingConfiguration']);
        }
        // validate the optional field `CloudWatchLoggingOptions`
        if (data['CloudWatchLoggingOptions']) { // data not null
          CloudWatchLoggingOptions.validateJSON(data['CloudWatchLoggingOptions']);
        }

        return true;
    }


}



/**
 * @member {String} RoleARN
 */
UpdateDestinationInputAmazonopensearchserviceDestinationUpdate.prototype['RoleARN'] = undefined;

/**
 * @member {String} DomainARN
 */
UpdateDestinationInputAmazonopensearchserviceDestinationUpdate.prototype['DomainARN'] = undefined;

/**
 * @member {String} ClusterEndpoint
 */
UpdateDestinationInputAmazonopensearchserviceDestinationUpdate.prototype['ClusterEndpoint'] = undefined;

/**
 * @member {String} IndexName
 */
UpdateDestinationInputAmazonopensearchserviceDestinationUpdate.prototype['IndexName'] = undefined;

/**
 * @member {String} TypeName
 */
UpdateDestinationInputAmazonopensearchserviceDestinationUpdate.prototype['TypeName'] = undefined;

/**
 * @member {module:model/AmazonopensearchserviceIndexRotationPeriod} IndexRotationPeriod
 */
UpdateDestinationInputAmazonopensearchserviceDestinationUpdate.prototype['IndexRotationPeriod'] = undefined;

/**
 * @member {module:model/AmazonopensearchserviceDestinationUpdateBufferingHints} BufferingHints
 */
UpdateDestinationInputAmazonopensearchserviceDestinationUpdate.prototype['BufferingHints'] = undefined;

/**
 * @member {module:model/AmazonopensearchserviceDestinationConfigurationRetryOptions} RetryOptions
 */
UpdateDestinationInputAmazonopensearchserviceDestinationUpdate.prototype['RetryOptions'] = undefined;

/**
 * @member {module:model/S3DestinationUpdate} S3Update
 */
UpdateDestinationInputAmazonopensearchserviceDestinationUpdate.prototype['S3Update'] = undefined;

/**
 * @member {module:model/ProcessingConfiguration} ProcessingConfiguration
 */
UpdateDestinationInputAmazonopensearchserviceDestinationUpdate.prototype['ProcessingConfiguration'] = undefined;

/**
 * @member {module:model/CloudWatchLoggingOptions} CloudWatchLoggingOptions
 */
UpdateDestinationInputAmazonopensearchserviceDestinationUpdate.prototype['CloudWatchLoggingOptions'] = undefined;


// Implement AmazonopensearchserviceDestinationUpdate interface:
/**
 * @member {String} RoleARN
 */
AmazonopensearchserviceDestinationUpdate.prototype['RoleARN'] = undefined;
/**
 * @member {String} DomainARN
 */
AmazonopensearchserviceDestinationUpdate.prototype['DomainARN'] = undefined;
/**
 * @member {String} ClusterEndpoint
 */
AmazonopensearchserviceDestinationUpdate.prototype['ClusterEndpoint'] = undefined;
/**
 * @member {String} IndexName
 */
AmazonopensearchserviceDestinationUpdate.prototype['IndexName'] = undefined;
/**
 * @member {String} TypeName
 */
AmazonopensearchserviceDestinationUpdate.prototype['TypeName'] = undefined;
/**
 * @member {module:model/AmazonopensearchserviceIndexRotationPeriod} IndexRotationPeriod
 */
AmazonopensearchserviceDestinationUpdate.prototype['IndexRotationPeriod'] = undefined;
/**
 * @member {module:model/AmazonopensearchserviceDestinationUpdateBufferingHints} BufferingHints
 */
AmazonopensearchserviceDestinationUpdate.prototype['BufferingHints'] = undefined;
/**
 * @member {module:model/AmazonopensearchserviceDestinationConfigurationRetryOptions} RetryOptions
 */
AmazonopensearchserviceDestinationUpdate.prototype['RetryOptions'] = undefined;
/**
 * @member {module:model/S3DestinationUpdate} S3Update
 */
AmazonopensearchserviceDestinationUpdate.prototype['S3Update'] = undefined;
/**
 * @member {module:model/ProcessingConfiguration} ProcessingConfiguration
 */
AmazonopensearchserviceDestinationUpdate.prototype['ProcessingConfiguration'] = undefined;
/**
 * @member {module:model/CloudWatchLoggingOptions} CloudWatchLoggingOptions
 */
AmazonopensearchserviceDestinationUpdate.prototype['CloudWatchLoggingOptions'] = undefined;




export default UpdateDestinationInputAmazonopensearchserviceDestinationUpdate;

