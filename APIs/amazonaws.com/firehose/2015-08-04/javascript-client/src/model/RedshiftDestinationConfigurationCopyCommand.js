/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CopyCommand from './CopyCommand';

/**
 * The RedshiftDestinationConfigurationCopyCommand model module.
 * @module model/RedshiftDestinationConfigurationCopyCommand
 * @version 2015-08-04
 */
class RedshiftDestinationConfigurationCopyCommand {
    /**
     * Constructs a new <code>RedshiftDestinationConfigurationCopyCommand</code>.
     * @alias module:model/RedshiftDestinationConfigurationCopyCommand
     * @implements module:model/CopyCommand
     * @param dataTableName {String} 
     */
    constructor(dataTableName) { 
        CopyCommand.initialize(this, dataTableName);
        RedshiftDestinationConfigurationCopyCommand.initialize(this, dataTableName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dataTableName) { 
        obj['DataTableName'] = dataTableName;
    }

    /**
     * Constructs a <code>RedshiftDestinationConfigurationCopyCommand</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RedshiftDestinationConfigurationCopyCommand} obj Optional instance to populate.
     * @return {module:model/RedshiftDestinationConfigurationCopyCommand} The populated <code>RedshiftDestinationConfigurationCopyCommand</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RedshiftDestinationConfigurationCopyCommand();
            CopyCommand.constructFromObject(data, obj);

            if (data.hasOwnProperty('DataTableName')) {
                obj['DataTableName'] = ApiClient.convertToType(data['DataTableName'], 'String');
            }
            if (data.hasOwnProperty('DataTableColumns')) {
                obj['DataTableColumns'] = ApiClient.convertToType(data['DataTableColumns'], 'String');
            }
            if (data.hasOwnProperty('CopyOptions')) {
                obj['CopyOptions'] = ApiClient.convertToType(data['CopyOptions'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RedshiftDestinationConfigurationCopyCommand</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RedshiftDestinationConfigurationCopyCommand</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RedshiftDestinationConfigurationCopyCommand.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DataTableName`
        if (data['DataTableName']) { // data not null
          String.validateJSON(data['DataTableName']);
        }
        // validate the optional field `DataTableColumns`
        if (data['DataTableColumns']) { // data not null
          String.validateJSON(data['DataTableColumns']);
        }
        // validate the optional field `CopyOptions`
        if (data['CopyOptions']) { // data not null
          String.validateJSON(data['CopyOptions']);
        }

        return true;
    }


}

RedshiftDestinationConfigurationCopyCommand.RequiredProperties = ["DataTableName"];

/**
 * @member {String} DataTableName
 */
RedshiftDestinationConfigurationCopyCommand.prototype['DataTableName'] = undefined;

/**
 * @member {String} DataTableColumns
 */
RedshiftDestinationConfigurationCopyCommand.prototype['DataTableColumns'] = undefined;

/**
 * @member {String} CopyOptions
 */
RedshiftDestinationConfigurationCopyCommand.prototype['CopyOptions'] = undefined;


// Implement CopyCommand interface:
/**
 * @member {String} DataTableName
 */
CopyCommand.prototype['DataTableName'] = undefined;
/**
 * @member {String} DataTableColumns
 */
CopyCommand.prototype['DataTableColumns'] = undefined;
/**
 * @member {String} CopyOptions
 */
CopyCommand.prototype['CopyOptions'] = undefined;




export default RedshiftDestinationConfigurationCopyCommand;

