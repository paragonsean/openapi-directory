/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PutRecordBatchOutput model module.
 * @module model/PutRecordBatchOutput
 * @version 2015-08-04
 */
class PutRecordBatchOutput {
    /**
     * Constructs a new <code>PutRecordBatchOutput</code>.
     * @alias module:model/PutRecordBatchOutput
     * @param failedPutCount {Number} 
     * @param requestResponses {Array} 
     */
    constructor(failedPutCount, requestResponses) { 
        
        PutRecordBatchOutput.initialize(this, failedPutCount, requestResponses);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, failedPutCount, requestResponses) { 
        obj['FailedPutCount'] = failedPutCount;
        obj['RequestResponses'] = requestResponses;
    }

    /**
     * Constructs a <code>PutRecordBatchOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutRecordBatchOutput} obj Optional instance to populate.
     * @return {module:model/PutRecordBatchOutput} The populated <code>PutRecordBatchOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutRecordBatchOutput();

            if (data.hasOwnProperty('FailedPutCount')) {
                obj['FailedPutCount'] = ApiClient.convertToType(data['FailedPutCount'], 'Number');
            }
            if (data.hasOwnProperty('Encrypted')) {
                obj['Encrypted'] = ApiClient.convertToType(data['Encrypted'], 'Boolean');
            }
            if (data.hasOwnProperty('RequestResponses')) {
                obj['RequestResponses'] = ApiClient.convertToType(data['RequestResponses'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutRecordBatchOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutRecordBatchOutput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PutRecordBatchOutput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `FailedPutCount`
        if (data['FailedPutCount']) { // data not null
          Number.validateJSON(data['FailedPutCount']);
        }
        // validate the optional field `Encrypted`
        if (data['Encrypted']) { // data not null
          Boolean.validateJSON(data['Encrypted']);
        }
        // validate the optional field `RequestResponses`
        if (data['RequestResponses']) { // data not null
          Array.validateJSON(data['RequestResponses']);
        }

        return true;
    }


}

PutRecordBatchOutput.RequiredProperties = ["FailedPutCount", "RequestResponses"];

/**
 * @member {Number} FailedPutCount
 */
PutRecordBatchOutput.prototype['FailedPutCount'] = undefined;

/**
 * @member {Boolean} Encrypted
 */
PutRecordBatchOutput.prototype['Encrypted'] = undefined;

/**
 * @member {Array} RequestResponses
 */
PutRecordBatchOutput.prototype['RequestResponses'] = undefined;






export default PutRecordBatchOutput;

