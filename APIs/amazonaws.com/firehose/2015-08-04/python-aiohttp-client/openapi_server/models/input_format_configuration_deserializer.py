# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deserializer_hive_json_ser_de import DeserializerHiveJsonSerDe
from openapi_server.models.deserializer_open_x_json_ser_de import DeserializerOpenXJsonSerDe
from openapi_server import util


class InputFormatConfigurationDeserializer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, open_x_json_ser_de: DeserializerOpenXJsonSerDe=None, hive_json_ser_de: DeserializerHiveJsonSerDe=None):
        """InputFormatConfigurationDeserializer - a model defined in OpenAPI

        :param open_x_json_ser_de: The open_x_json_ser_de of this InputFormatConfigurationDeserializer.
        :param hive_json_ser_de: The hive_json_ser_de of this InputFormatConfigurationDeserializer.
        """
        self.openapi_types = {
            'open_x_json_ser_de': DeserializerOpenXJsonSerDe,
            'hive_json_ser_de': DeserializerHiveJsonSerDe
        }

        self.attribute_map = {
            'open_x_json_ser_de': 'OpenXJsonSerDe',
            'hive_json_ser_de': 'HiveJsonSerDe'
        }

        self._open_x_json_ser_de = open_x_json_ser_de
        self._hive_json_ser_de = hive_json_ser_de

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputFormatConfigurationDeserializer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InputFormatConfiguration_Deserializer of this InputFormatConfigurationDeserializer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def open_x_json_ser_de(self):
        """Gets the open_x_json_ser_de of this InputFormatConfigurationDeserializer.


        :return: The open_x_json_ser_de of this InputFormatConfigurationDeserializer.
        :rtype: DeserializerOpenXJsonSerDe
        """
        return self._open_x_json_ser_de

    @open_x_json_ser_de.setter
    def open_x_json_ser_de(self, open_x_json_ser_de):
        """Sets the open_x_json_ser_de of this InputFormatConfigurationDeserializer.


        :param open_x_json_ser_de: The open_x_json_ser_de of this InputFormatConfigurationDeserializer.
        :type open_x_json_ser_de: DeserializerOpenXJsonSerDe
        """

        self._open_x_json_ser_de = open_x_json_ser_de

    @property
    def hive_json_ser_de(self):
        """Gets the hive_json_ser_de of this InputFormatConfigurationDeserializer.


        :return: The hive_json_ser_de of this InputFormatConfigurationDeserializer.
        :rtype: DeserializerHiveJsonSerDe
        """
        return self._hive_json_ser_de

    @hive_json_ser_de.setter
    def hive_json_ser_de(self, hive_json_ser_de):
        """Sets the hive_json_ser_de of this InputFormatConfigurationDeserializer.


        :param hive_json_ser_de: The hive_json_ser_de of this InputFormatConfigurationDeserializer.
        :type hive_json_ser_de: DeserializerHiveJsonSerDe
        """

        self._hive_json_ser_de = hive_json_ser_de
