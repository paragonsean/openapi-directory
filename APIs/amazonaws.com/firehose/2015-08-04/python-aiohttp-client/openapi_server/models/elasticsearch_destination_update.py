# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.elasticsearch_destination_configuration_retry_options import ElasticsearchDestinationConfigurationRetryOptions
from openapi_server.models.elasticsearch_destination_update_buffering_hints import ElasticsearchDestinationUpdateBufferingHints
from openapi_server.models.elasticsearch_destination_update_s3_update import ElasticsearchDestinationUpdateS3Update
from openapi_server.models.elasticsearch_index_rotation_period import ElasticsearchIndexRotationPeriod
from openapi_server.models.extended_s3_destination_configuration_processing_configuration import ExtendedS3DestinationConfigurationProcessingConfiguration
from openapi_server.models.s3_destination_configuration_cloud_watch_logging_options import S3DestinationConfigurationCloudWatchLoggingOptions
from openapi_server import util


class ElasticsearchDestinationUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, role_arn: str=None, domain_arn: str=None, cluster_endpoint: str=None, index_name: str=None, type_name: str=None, index_rotation_period: ElasticsearchIndexRotationPeriod=None, buffering_hints: ElasticsearchDestinationUpdateBufferingHints=None, retry_options: ElasticsearchDestinationConfigurationRetryOptions=None, s3_update: ElasticsearchDestinationUpdateS3Update=None, processing_configuration: ExtendedS3DestinationConfigurationProcessingConfiguration=None, cloud_watch_logging_options: S3DestinationConfigurationCloudWatchLoggingOptions=None):
        """ElasticsearchDestinationUpdate - a model defined in OpenAPI

        :param role_arn: The role_arn of this ElasticsearchDestinationUpdate.
        :param domain_arn: The domain_arn of this ElasticsearchDestinationUpdate.
        :param cluster_endpoint: The cluster_endpoint of this ElasticsearchDestinationUpdate.
        :param index_name: The index_name of this ElasticsearchDestinationUpdate.
        :param type_name: The type_name of this ElasticsearchDestinationUpdate.
        :param index_rotation_period: The index_rotation_period of this ElasticsearchDestinationUpdate.
        :param buffering_hints: The buffering_hints of this ElasticsearchDestinationUpdate.
        :param retry_options: The retry_options of this ElasticsearchDestinationUpdate.
        :param s3_update: The s3_update of this ElasticsearchDestinationUpdate.
        :param processing_configuration: The processing_configuration of this ElasticsearchDestinationUpdate.
        :param cloud_watch_logging_options: The cloud_watch_logging_options of this ElasticsearchDestinationUpdate.
        """
        self.openapi_types = {
            'role_arn': str,
            'domain_arn': str,
            'cluster_endpoint': str,
            'index_name': str,
            'type_name': str,
            'index_rotation_period': ElasticsearchIndexRotationPeriod,
            'buffering_hints': ElasticsearchDestinationUpdateBufferingHints,
            'retry_options': ElasticsearchDestinationConfigurationRetryOptions,
            's3_update': ElasticsearchDestinationUpdateS3Update,
            'processing_configuration': ExtendedS3DestinationConfigurationProcessingConfiguration,
            'cloud_watch_logging_options': S3DestinationConfigurationCloudWatchLoggingOptions
        }

        self.attribute_map = {
            'role_arn': 'RoleARN',
            'domain_arn': 'DomainARN',
            'cluster_endpoint': 'ClusterEndpoint',
            'index_name': 'IndexName',
            'type_name': 'TypeName',
            'index_rotation_period': 'IndexRotationPeriod',
            'buffering_hints': 'BufferingHints',
            'retry_options': 'RetryOptions',
            's3_update': 'S3Update',
            'processing_configuration': 'ProcessingConfiguration',
            'cloud_watch_logging_options': 'CloudWatchLoggingOptions'
        }

        self._role_arn = role_arn
        self._domain_arn = domain_arn
        self._cluster_endpoint = cluster_endpoint
        self._index_name = index_name
        self._type_name = type_name
        self._index_rotation_period = index_rotation_period
        self._buffering_hints = buffering_hints
        self._retry_options = retry_options
        self._s3_update = s3_update
        self._processing_configuration = processing_configuration
        self._cloud_watch_logging_options = cloud_watch_logging_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ElasticsearchDestinationUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ElasticsearchDestinationUpdate of this ElasticsearchDestinationUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def role_arn(self):
        """Gets the role_arn of this ElasticsearchDestinationUpdate.


        :return: The role_arn of this ElasticsearchDestinationUpdate.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this ElasticsearchDestinationUpdate.


        :param role_arn: The role_arn of this ElasticsearchDestinationUpdate.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def domain_arn(self):
        """Gets the domain_arn of this ElasticsearchDestinationUpdate.


        :return: The domain_arn of this ElasticsearchDestinationUpdate.
        :rtype: str
        """
        return self._domain_arn

    @domain_arn.setter
    def domain_arn(self, domain_arn):
        """Sets the domain_arn of this ElasticsearchDestinationUpdate.


        :param domain_arn: The domain_arn of this ElasticsearchDestinationUpdate.
        :type domain_arn: str
        """

        self._domain_arn = domain_arn

    @property
    def cluster_endpoint(self):
        """Gets the cluster_endpoint of this ElasticsearchDestinationUpdate.


        :return: The cluster_endpoint of this ElasticsearchDestinationUpdate.
        :rtype: str
        """
        return self._cluster_endpoint

    @cluster_endpoint.setter
    def cluster_endpoint(self, cluster_endpoint):
        """Sets the cluster_endpoint of this ElasticsearchDestinationUpdate.


        :param cluster_endpoint: The cluster_endpoint of this ElasticsearchDestinationUpdate.
        :type cluster_endpoint: str
        """

        self._cluster_endpoint = cluster_endpoint

    @property
    def index_name(self):
        """Gets the index_name of this ElasticsearchDestinationUpdate.


        :return: The index_name of this ElasticsearchDestinationUpdate.
        :rtype: str
        """
        return self._index_name

    @index_name.setter
    def index_name(self, index_name):
        """Sets the index_name of this ElasticsearchDestinationUpdate.


        :param index_name: The index_name of this ElasticsearchDestinationUpdate.
        :type index_name: str
        """

        self._index_name = index_name

    @property
    def type_name(self):
        """Gets the type_name of this ElasticsearchDestinationUpdate.


        :return: The type_name of this ElasticsearchDestinationUpdate.
        :rtype: str
        """
        return self._type_name

    @type_name.setter
    def type_name(self, type_name):
        """Sets the type_name of this ElasticsearchDestinationUpdate.


        :param type_name: The type_name of this ElasticsearchDestinationUpdate.
        :type type_name: str
        """

        self._type_name = type_name

    @property
    def index_rotation_period(self):
        """Gets the index_rotation_period of this ElasticsearchDestinationUpdate.


        :return: The index_rotation_period of this ElasticsearchDestinationUpdate.
        :rtype: ElasticsearchIndexRotationPeriod
        """
        return self._index_rotation_period

    @index_rotation_period.setter
    def index_rotation_period(self, index_rotation_period):
        """Sets the index_rotation_period of this ElasticsearchDestinationUpdate.


        :param index_rotation_period: The index_rotation_period of this ElasticsearchDestinationUpdate.
        :type index_rotation_period: ElasticsearchIndexRotationPeriod
        """

        self._index_rotation_period = index_rotation_period

    @property
    def buffering_hints(self):
        """Gets the buffering_hints of this ElasticsearchDestinationUpdate.


        :return: The buffering_hints of this ElasticsearchDestinationUpdate.
        :rtype: ElasticsearchDestinationUpdateBufferingHints
        """
        return self._buffering_hints

    @buffering_hints.setter
    def buffering_hints(self, buffering_hints):
        """Sets the buffering_hints of this ElasticsearchDestinationUpdate.


        :param buffering_hints: The buffering_hints of this ElasticsearchDestinationUpdate.
        :type buffering_hints: ElasticsearchDestinationUpdateBufferingHints
        """

        self._buffering_hints = buffering_hints

    @property
    def retry_options(self):
        """Gets the retry_options of this ElasticsearchDestinationUpdate.


        :return: The retry_options of this ElasticsearchDestinationUpdate.
        :rtype: ElasticsearchDestinationConfigurationRetryOptions
        """
        return self._retry_options

    @retry_options.setter
    def retry_options(self, retry_options):
        """Sets the retry_options of this ElasticsearchDestinationUpdate.


        :param retry_options: The retry_options of this ElasticsearchDestinationUpdate.
        :type retry_options: ElasticsearchDestinationConfigurationRetryOptions
        """

        self._retry_options = retry_options

    @property
    def s3_update(self):
        """Gets the s3_update of this ElasticsearchDestinationUpdate.


        :return: The s3_update of this ElasticsearchDestinationUpdate.
        :rtype: ElasticsearchDestinationUpdateS3Update
        """
        return self._s3_update

    @s3_update.setter
    def s3_update(self, s3_update):
        """Sets the s3_update of this ElasticsearchDestinationUpdate.


        :param s3_update: The s3_update of this ElasticsearchDestinationUpdate.
        :type s3_update: ElasticsearchDestinationUpdateS3Update
        """

        self._s3_update = s3_update

    @property
    def processing_configuration(self):
        """Gets the processing_configuration of this ElasticsearchDestinationUpdate.


        :return: The processing_configuration of this ElasticsearchDestinationUpdate.
        :rtype: ExtendedS3DestinationConfigurationProcessingConfiguration
        """
        return self._processing_configuration

    @processing_configuration.setter
    def processing_configuration(self, processing_configuration):
        """Sets the processing_configuration of this ElasticsearchDestinationUpdate.


        :param processing_configuration: The processing_configuration of this ElasticsearchDestinationUpdate.
        :type processing_configuration: ExtendedS3DestinationConfigurationProcessingConfiguration
        """

        self._processing_configuration = processing_configuration

    @property
    def cloud_watch_logging_options(self):
        """Gets the cloud_watch_logging_options of this ElasticsearchDestinationUpdate.


        :return: The cloud_watch_logging_options of this ElasticsearchDestinationUpdate.
        :rtype: S3DestinationConfigurationCloudWatchLoggingOptions
        """
        return self._cloud_watch_logging_options

    @cloud_watch_logging_options.setter
    def cloud_watch_logging_options(self, cloud_watch_logging_options):
        """Sets the cloud_watch_logging_options of this ElasticsearchDestinationUpdate.


        :param cloud_watch_logging_options: The cloud_watch_logging_options of this ElasticsearchDestinationUpdate.
        :type cloud_watch_logging_options: S3DestinationConfigurationCloudWatchLoggingOptions
        """

        self._cloud_watch_logging_options = cloud_watch_logging_options
