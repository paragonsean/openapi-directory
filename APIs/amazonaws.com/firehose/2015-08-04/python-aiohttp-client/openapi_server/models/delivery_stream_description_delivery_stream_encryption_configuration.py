# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delivery_stream_encryption_configuration_failure_description import DeliveryStreamEncryptionConfigurationFailureDescription
from openapi_server.models.delivery_stream_encryption_status import DeliveryStreamEncryptionStatus
from openapi_server.models.key_type import KeyType
from openapi_server import util


class DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_arn: str=None, key_type: KeyType=None, status: DeliveryStreamEncryptionStatus=None, failure_description: DeliveryStreamEncryptionConfigurationFailureDescription=None):
        """DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration - a model defined in OpenAPI

        :param key_arn: The key_arn of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.
        :param key_type: The key_type of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.
        :param status: The status of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.
        :param failure_description: The failure_description of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.
        """
        self.openapi_types = {
            'key_arn': str,
            'key_type': KeyType,
            'status': DeliveryStreamEncryptionStatus,
            'failure_description': DeliveryStreamEncryptionConfigurationFailureDescription
        }

        self.attribute_map = {
            'key_arn': 'KeyARN',
            'key_type': 'KeyType',
            'status': 'Status',
            'failure_description': 'FailureDescription'
        }

        self._key_arn = key_arn
        self._key_type = key_type
        self._status = status
        self._failure_description = failure_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeliveryStreamDescription_DeliveryStreamEncryptionConfiguration of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_arn(self):
        """Gets the key_arn of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.


        :return: The key_arn of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.
        :rtype: str
        """
        return self._key_arn

    @key_arn.setter
    def key_arn(self, key_arn):
        """Sets the key_arn of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.


        :param key_arn: The key_arn of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.
        :type key_arn: str
        """

        self._key_arn = key_arn

    @property
    def key_type(self):
        """Gets the key_type of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.


        :return: The key_type of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.
        :rtype: KeyType
        """
        return self._key_type

    @key_type.setter
    def key_type(self, key_type):
        """Sets the key_type of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.


        :param key_type: The key_type of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.
        :type key_type: KeyType
        """

        self._key_type = key_type

    @property
    def status(self):
        """Gets the status of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.


        :return: The status of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.
        :rtype: DeliveryStreamEncryptionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.


        :param status: The status of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.
        :type status: DeliveryStreamEncryptionStatus
        """

        self._status = status

    @property
    def failure_description(self):
        """Gets the failure_description of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.


        :return: The failure_description of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.
        :rtype: DeliveryStreamEncryptionConfigurationFailureDescription
        """
        return self._failure_description

    @failure_description.setter
    def failure_description(self, failure_description):
        """Sets the failure_description of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.


        :param failure_description: The failure_description of this DeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration.
        :type failure_description: DeliveryStreamEncryptionConfigurationFailureDescription
        """

        self._failure_description = failure_description
