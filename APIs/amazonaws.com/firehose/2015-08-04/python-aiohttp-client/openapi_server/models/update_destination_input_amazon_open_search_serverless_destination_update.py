# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amazon_open_search_serverless_destination_configuration_retry_options import AmazonOpenSearchServerlessDestinationConfigurationRetryOptions
from openapi_server.models.amazon_open_search_serverless_destination_update_buffering_hints import AmazonOpenSearchServerlessDestinationUpdateBufferingHints
from openapi_server.models.cloud_watch_logging_options import CloudWatchLoggingOptions
from openapi_server.models.processing_configuration import ProcessingConfiguration
from openapi_server.models.s3_destination_update import S3DestinationUpdate
from openapi_server import util


class UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, role_arn: str=None, collection_endpoint: str=None, index_name: str=None, buffering_hints: AmazonOpenSearchServerlessDestinationUpdateBufferingHints=None, retry_options: AmazonOpenSearchServerlessDestinationConfigurationRetryOptions=None, s3_update: S3DestinationUpdate=None, processing_configuration: ProcessingConfiguration=None, cloud_watch_logging_options: CloudWatchLoggingOptions=None):
        """UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate - a model defined in OpenAPI

        :param role_arn: The role_arn of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :param collection_endpoint: The collection_endpoint of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :param index_name: The index_name of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :param buffering_hints: The buffering_hints of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :param retry_options: The retry_options of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :param s3_update: The s3_update of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :param processing_configuration: The processing_configuration of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :param cloud_watch_logging_options: The cloud_watch_logging_options of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        """
        self.openapi_types = {
            'role_arn': str,
            'collection_endpoint': str,
            'index_name': str,
            'buffering_hints': AmazonOpenSearchServerlessDestinationUpdateBufferingHints,
            'retry_options': AmazonOpenSearchServerlessDestinationConfigurationRetryOptions,
            's3_update': S3DestinationUpdate,
            'processing_configuration': ProcessingConfiguration,
            'cloud_watch_logging_options': CloudWatchLoggingOptions
        }

        self.attribute_map = {
            'role_arn': 'RoleARN',
            'collection_endpoint': 'CollectionEndpoint',
            'index_name': 'IndexName',
            'buffering_hints': 'BufferingHints',
            'retry_options': 'RetryOptions',
            's3_update': 'S3Update',
            'processing_configuration': 'ProcessingConfiguration',
            'cloud_watch_logging_options': 'CloudWatchLoggingOptions'
        }

        self._role_arn = role_arn
        self._collection_endpoint = collection_endpoint
        self._index_name = index_name
        self._buffering_hints = buffering_hints
        self._retry_options = retry_options
        self._s3_update = s3_update
        self._processing_configuration = processing_configuration
        self._cloud_watch_logging_options = cloud_watch_logging_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDestinationInput_AmazonOpenSearchServerlessDestinationUpdate of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def role_arn(self):
        """Gets the role_arn of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :return: The role_arn of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :param role_arn: The role_arn of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def collection_endpoint(self):
        """Gets the collection_endpoint of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :return: The collection_endpoint of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :rtype: str
        """
        return self._collection_endpoint

    @collection_endpoint.setter
    def collection_endpoint(self, collection_endpoint):
        """Sets the collection_endpoint of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :param collection_endpoint: The collection_endpoint of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :type collection_endpoint: str
        """

        self._collection_endpoint = collection_endpoint

    @property
    def index_name(self):
        """Gets the index_name of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :return: The index_name of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :rtype: str
        """
        return self._index_name

    @index_name.setter
    def index_name(self, index_name):
        """Sets the index_name of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :param index_name: The index_name of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :type index_name: str
        """

        self._index_name = index_name

    @property
    def buffering_hints(self):
        """Gets the buffering_hints of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :return: The buffering_hints of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :rtype: AmazonOpenSearchServerlessDestinationUpdateBufferingHints
        """
        return self._buffering_hints

    @buffering_hints.setter
    def buffering_hints(self, buffering_hints):
        """Sets the buffering_hints of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :param buffering_hints: The buffering_hints of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :type buffering_hints: AmazonOpenSearchServerlessDestinationUpdateBufferingHints
        """

        self._buffering_hints = buffering_hints

    @property
    def retry_options(self):
        """Gets the retry_options of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :return: The retry_options of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :rtype: AmazonOpenSearchServerlessDestinationConfigurationRetryOptions
        """
        return self._retry_options

    @retry_options.setter
    def retry_options(self, retry_options):
        """Sets the retry_options of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :param retry_options: The retry_options of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :type retry_options: AmazonOpenSearchServerlessDestinationConfigurationRetryOptions
        """

        self._retry_options = retry_options

    @property
    def s3_update(self):
        """Gets the s3_update of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :return: The s3_update of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :rtype: S3DestinationUpdate
        """
        return self._s3_update

    @s3_update.setter
    def s3_update(self, s3_update):
        """Sets the s3_update of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :param s3_update: The s3_update of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :type s3_update: S3DestinationUpdate
        """

        self._s3_update = s3_update

    @property
    def processing_configuration(self):
        """Gets the processing_configuration of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :return: The processing_configuration of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :rtype: ProcessingConfiguration
        """
        return self._processing_configuration

    @processing_configuration.setter
    def processing_configuration(self, processing_configuration):
        """Sets the processing_configuration of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :param processing_configuration: The processing_configuration of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :type processing_configuration: ProcessingConfiguration
        """

        self._processing_configuration = processing_configuration

    @property
    def cloud_watch_logging_options(self):
        """Gets the cloud_watch_logging_options of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :return: The cloud_watch_logging_options of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :rtype: CloudWatchLoggingOptions
        """
        return self._cloud_watch_logging_options

    @cloud_watch_logging_options.setter
    def cloud_watch_logging_options(self, cloud_watch_logging_options):
        """Sets the cloud_watch_logging_options of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.


        :param cloud_watch_logging_options: The cloud_watch_logging_options of this UpdateDestinationInputAmazonOpenSearchServerlessDestinationUpdate.
        :type cloud_watch_logging_options: CloudWatchLoggingOptions
        """

        self._cloud_watch_logging_options = cloud_watch_logging_options
