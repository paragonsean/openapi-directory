# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteDeliveryStreamInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delivery_stream_name: str=None, allow_force_delete: bool=None):
        """DeleteDeliveryStreamInput - a model defined in OpenAPI

        :param delivery_stream_name: The delivery_stream_name of this DeleteDeliveryStreamInput.
        :param allow_force_delete: The allow_force_delete of this DeleteDeliveryStreamInput.
        """
        self.openapi_types = {
            'delivery_stream_name': str,
            'allow_force_delete': bool
        }

        self.attribute_map = {
            'delivery_stream_name': 'DeliveryStreamName',
            'allow_force_delete': 'AllowForceDelete'
        }

        self._delivery_stream_name = delivery_stream_name
        self._allow_force_delete = allow_force_delete

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteDeliveryStreamInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteDeliveryStreamInput of this DeleteDeliveryStreamInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delivery_stream_name(self):
        """Gets the delivery_stream_name of this DeleteDeliveryStreamInput.


        :return: The delivery_stream_name of this DeleteDeliveryStreamInput.
        :rtype: str
        """
        return self._delivery_stream_name

    @delivery_stream_name.setter
    def delivery_stream_name(self, delivery_stream_name):
        """Sets the delivery_stream_name of this DeleteDeliveryStreamInput.


        :param delivery_stream_name: The delivery_stream_name of this DeleteDeliveryStreamInput.
        :type delivery_stream_name: str
        """
        if delivery_stream_name is None:
            raise ValueError("Invalid value for `delivery_stream_name`, must not be `None`")

        self._delivery_stream_name = delivery_stream_name

    @property
    def allow_force_delete(self):
        """Gets the allow_force_delete of this DeleteDeliveryStreamInput.


        :return: The allow_force_delete of this DeleteDeliveryStreamInput.
        :rtype: bool
        """
        return self._allow_force_delete

    @allow_force_delete.setter
    def allow_force_delete(self, allow_force_delete):
        """Sets the allow_force_delete of this DeleteDeliveryStreamInput.


        :param allow_force_delete: The allow_force_delete of this DeleteDeliveryStreamInput.
        :type allow_force_delete: bool
        """

        self._allow_force_delete = allow_force_delete
