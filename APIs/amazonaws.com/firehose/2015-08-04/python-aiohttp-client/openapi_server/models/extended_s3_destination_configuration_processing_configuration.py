# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExtendedS3DestinationConfigurationProcessingConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, processors: List=None):
        """ExtendedS3DestinationConfigurationProcessingConfiguration - a model defined in OpenAPI

        :param enabled: The enabled of this ExtendedS3DestinationConfigurationProcessingConfiguration.
        :param processors: The processors of this ExtendedS3DestinationConfigurationProcessingConfiguration.
        """
        self.openapi_types = {
            'enabled': bool,
            'processors': List
        }

        self.attribute_map = {
            'enabled': 'Enabled',
            'processors': 'Processors'
        }

        self._enabled = enabled
        self._processors = processors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtendedS3DestinationConfigurationProcessingConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtendedS3DestinationConfiguration_ProcessingConfiguration of this ExtendedS3DestinationConfigurationProcessingConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this ExtendedS3DestinationConfigurationProcessingConfiguration.


        :return: The enabled of this ExtendedS3DestinationConfigurationProcessingConfiguration.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this ExtendedS3DestinationConfigurationProcessingConfiguration.


        :param enabled: The enabled of this ExtendedS3DestinationConfigurationProcessingConfiguration.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def processors(self):
        """Gets the processors of this ExtendedS3DestinationConfigurationProcessingConfiguration.


        :return: The processors of this ExtendedS3DestinationConfigurationProcessingConfiguration.
        :rtype: List
        """
        return self._processors

    @processors.setter
    def processors(self, processors):
        """Sets the processors of this ExtendedS3DestinationConfigurationProcessingConfiguration.


        :param processors: The processors of this ExtendedS3DestinationConfigurationProcessingConfiguration.
        :type processors: List
        """

        self._processors = processors
