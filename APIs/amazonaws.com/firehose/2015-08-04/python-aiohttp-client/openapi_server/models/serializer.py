# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.serializer_orc_ser_de import SerializerOrcSerDe
from openapi_server.models.serializer_parquet_ser_de import SerializerParquetSerDe
from openapi_server import util


class Serializer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parquet_ser_de: SerializerParquetSerDe=None, orc_ser_de: SerializerOrcSerDe=None):
        """Serializer - a model defined in OpenAPI

        :param parquet_ser_de: The parquet_ser_de of this Serializer.
        :param orc_ser_de: The orc_ser_de of this Serializer.
        """
        self.openapi_types = {
            'parquet_ser_de': SerializerParquetSerDe,
            'orc_ser_de': SerializerOrcSerDe
        }

        self.attribute_map = {
            'parquet_ser_de': 'ParquetSerDe',
            'orc_ser_de': 'OrcSerDe'
        }

        self._parquet_ser_de = parquet_ser_de
        self._orc_ser_de = orc_ser_de

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Serializer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Serializer of this Serializer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parquet_ser_de(self):
        """Gets the parquet_ser_de of this Serializer.


        :return: The parquet_ser_de of this Serializer.
        :rtype: SerializerParquetSerDe
        """
        return self._parquet_ser_de

    @parquet_ser_de.setter
    def parquet_ser_de(self, parquet_ser_de):
        """Sets the parquet_ser_de of this Serializer.


        :param parquet_ser_de: The parquet_ser_de of this Serializer.
        :type parquet_ser_de: SerializerParquetSerDe
        """

        self._parquet_ser_de = parquet_ser_de

    @property
    def orc_ser_de(self):
        """Gets the orc_ser_de of this Serializer.


        :return: The orc_ser_de of this Serializer.
        :rtype: SerializerOrcSerDe
        """
        return self._orc_ser_de

    @orc_ser_de.setter
    def orc_ser_de(self, orc_ser_de):
        """Sets the orc_ser_de of this Serializer.


        :param orc_ser_de: The orc_ser_de of this Serializer.
        :type orc_ser_de: SerializerOrcSerDe
        """

        self._orc_ser_de = orc_ser_de
