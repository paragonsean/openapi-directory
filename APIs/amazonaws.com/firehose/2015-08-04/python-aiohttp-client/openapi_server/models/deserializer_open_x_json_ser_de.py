# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeserializerOpenXJsonSerDe(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, convert_dots_in_json_keys_to_underscores: bool=None, case_insensitive: bool=None, column_to_json_key_mappings: Dict=None):
        """DeserializerOpenXJsonSerDe - a model defined in OpenAPI

        :param convert_dots_in_json_keys_to_underscores: The convert_dots_in_json_keys_to_underscores of this DeserializerOpenXJsonSerDe.
        :param case_insensitive: The case_insensitive of this DeserializerOpenXJsonSerDe.
        :param column_to_json_key_mappings: The column_to_json_key_mappings of this DeserializerOpenXJsonSerDe.
        """
        self.openapi_types = {
            'convert_dots_in_json_keys_to_underscores': bool,
            'case_insensitive': bool,
            'column_to_json_key_mappings': Dict
        }

        self.attribute_map = {
            'convert_dots_in_json_keys_to_underscores': 'ConvertDotsInJsonKeysToUnderscores',
            'case_insensitive': 'CaseInsensitive',
            'column_to_json_key_mappings': 'ColumnToJsonKeyMappings'
        }

        self._convert_dots_in_json_keys_to_underscores = convert_dots_in_json_keys_to_underscores
        self._case_insensitive = case_insensitive
        self._column_to_json_key_mappings = column_to_json_key_mappings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeserializerOpenXJsonSerDe':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Deserializer_OpenXJsonSerDe of this DeserializerOpenXJsonSerDe.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def convert_dots_in_json_keys_to_underscores(self):
        """Gets the convert_dots_in_json_keys_to_underscores of this DeserializerOpenXJsonSerDe.


        :return: The convert_dots_in_json_keys_to_underscores of this DeserializerOpenXJsonSerDe.
        :rtype: bool
        """
        return self._convert_dots_in_json_keys_to_underscores

    @convert_dots_in_json_keys_to_underscores.setter
    def convert_dots_in_json_keys_to_underscores(self, convert_dots_in_json_keys_to_underscores):
        """Sets the convert_dots_in_json_keys_to_underscores of this DeserializerOpenXJsonSerDe.


        :param convert_dots_in_json_keys_to_underscores: The convert_dots_in_json_keys_to_underscores of this DeserializerOpenXJsonSerDe.
        :type convert_dots_in_json_keys_to_underscores: bool
        """

        self._convert_dots_in_json_keys_to_underscores = convert_dots_in_json_keys_to_underscores

    @property
    def case_insensitive(self):
        """Gets the case_insensitive of this DeserializerOpenXJsonSerDe.


        :return: The case_insensitive of this DeserializerOpenXJsonSerDe.
        :rtype: bool
        """
        return self._case_insensitive

    @case_insensitive.setter
    def case_insensitive(self, case_insensitive):
        """Sets the case_insensitive of this DeserializerOpenXJsonSerDe.


        :param case_insensitive: The case_insensitive of this DeserializerOpenXJsonSerDe.
        :type case_insensitive: bool
        """

        self._case_insensitive = case_insensitive

    @property
    def column_to_json_key_mappings(self):
        """Gets the column_to_json_key_mappings of this DeserializerOpenXJsonSerDe.


        :return: The column_to_json_key_mappings of this DeserializerOpenXJsonSerDe.
        :rtype: Dict
        """
        return self._column_to_json_key_mappings

    @column_to_json_key_mappings.setter
    def column_to_json_key_mappings(self, column_to_json_key_mappings):
        """Sets the column_to_json_key_mappings of this DeserializerOpenXJsonSerDe.


        :param column_to_json_key_mappings: The column_to_json_key_mappings of this DeserializerOpenXJsonSerDe.
        :type column_to_json_key_mappings: Dict
        """

        self._column_to_json_key_mappings = column_to_json_key_mappings
