# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compression_format import CompressionFormat
from openapi_server.models.s3_destination_configuration_buffering_hints import S3DestinationConfigurationBufferingHints
from openapi_server.models.s3_destination_configuration_cloud_watch_logging_options import S3DestinationConfigurationCloudWatchLoggingOptions
from openapi_server.models.s3_destination_configuration_encryption_configuration import S3DestinationConfigurationEncryptionConfiguration
from openapi_server import util


class ExtendedS3DestinationUpdateS3BackupUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, role_arn: str=None, bucket_arn: str=None, prefix: str=None, error_output_prefix: str=None, buffering_hints: S3DestinationConfigurationBufferingHints=None, compression_format: CompressionFormat=None, encryption_configuration: S3DestinationConfigurationEncryptionConfiguration=None, cloud_watch_logging_options: S3DestinationConfigurationCloudWatchLoggingOptions=None):
        """ExtendedS3DestinationUpdateS3BackupUpdate - a model defined in OpenAPI

        :param role_arn: The role_arn of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :param bucket_arn: The bucket_arn of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :param prefix: The prefix of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :param error_output_prefix: The error_output_prefix of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :param buffering_hints: The buffering_hints of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :param compression_format: The compression_format of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :param encryption_configuration: The encryption_configuration of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :param cloud_watch_logging_options: The cloud_watch_logging_options of this ExtendedS3DestinationUpdateS3BackupUpdate.
        """
        self.openapi_types = {
            'role_arn': str,
            'bucket_arn': str,
            'prefix': str,
            'error_output_prefix': str,
            'buffering_hints': S3DestinationConfigurationBufferingHints,
            'compression_format': CompressionFormat,
            'encryption_configuration': S3DestinationConfigurationEncryptionConfiguration,
            'cloud_watch_logging_options': S3DestinationConfigurationCloudWatchLoggingOptions
        }

        self.attribute_map = {
            'role_arn': 'RoleARN',
            'bucket_arn': 'BucketARN',
            'prefix': 'Prefix',
            'error_output_prefix': 'ErrorOutputPrefix',
            'buffering_hints': 'BufferingHints',
            'compression_format': 'CompressionFormat',
            'encryption_configuration': 'EncryptionConfiguration',
            'cloud_watch_logging_options': 'CloudWatchLoggingOptions'
        }

        self._role_arn = role_arn
        self._bucket_arn = bucket_arn
        self._prefix = prefix
        self._error_output_prefix = error_output_prefix
        self._buffering_hints = buffering_hints
        self._compression_format = compression_format
        self._encryption_configuration = encryption_configuration
        self._cloud_watch_logging_options = cloud_watch_logging_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtendedS3DestinationUpdateS3BackupUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtendedS3DestinationUpdate_S3BackupUpdate of this ExtendedS3DestinationUpdateS3BackupUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def role_arn(self):
        """Gets the role_arn of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :return: The role_arn of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :param role_arn: The role_arn of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def bucket_arn(self):
        """Gets the bucket_arn of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :return: The bucket_arn of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :rtype: str
        """
        return self._bucket_arn

    @bucket_arn.setter
    def bucket_arn(self, bucket_arn):
        """Sets the bucket_arn of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :param bucket_arn: The bucket_arn of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :type bucket_arn: str
        """

        self._bucket_arn = bucket_arn

    @property
    def prefix(self):
        """Gets the prefix of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :return: The prefix of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :rtype: str
        """
        return self._prefix

    @prefix.setter
    def prefix(self, prefix):
        """Sets the prefix of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :param prefix: The prefix of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :type prefix: str
        """

        self._prefix = prefix

    @property
    def error_output_prefix(self):
        """Gets the error_output_prefix of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :return: The error_output_prefix of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :rtype: str
        """
        return self._error_output_prefix

    @error_output_prefix.setter
    def error_output_prefix(self, error_output_prefix):
        """Sets the error_output_prefix of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :param error_output_prefix: The error_output_prefix of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :type error_output_prefix: str
        """

        self._error_output_prefix = error_output_prefix

    @property
    def buffering_hints(self):
        """Gets the buffering_hints of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :return: The buffering_hints of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :rtype: S3DestinationConfigurationBufferingHints
        """
        return self._buffering_hints

    @buffering_hints.setter
    def buffering_hints(self, buffering_hints):
        """Sets the buffering_hints of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :param buffering_hints: The buffering_hints of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :type buffering_hints: S3DestinationConfigurationBufferingHints
        """

        self._buffering_hints = buffering_hints

    @property
    def compression_format(self):
        """Gets the compression_format of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :return: The compression_format of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :rtype: CompressionFormat
        """
        return self._compression_format

    @compression_format.setter
    def compression_format(self, compression_format):
        """Sets the compression_format of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :param compression_format: The compression_format of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :type compression_format: CompressionFormat
        """

        self._compression_format = compression_format

    @property
    def encryption_configuration(self):
        """Gets the encryption_configuration of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :return: The encryption_configuration of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :rtype: S3DestinationConfigurationEncryptionConfiguration
        """
        return self._encryption_configuration

    @encryption_configuration.setter
    def encryption_configuration(self, encryption_configuration):
        """Sets the encryption_configuration of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :param encryption_configuration: The encryption_configuration of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :type encryption_configuration: S3DestinationConfigurationEncryptionConfiguration
        """

        self._encryption_configuration = encryption_configuration

    @property
    def cloud_watch_logging_options(self):
        """Gets the cloud_watch_logging_options of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :return: The cloud_watch_logging_options of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :rtype: S3DestinationConfigurationCloudWatchLoggingOptions
        """
        return self._cloud_watch_logging_options

    @cloud_watch_logging_options.setter
    def cloud_watch_logging_options(self, cloud_watch_logging_options):
        """Sets the cloud_watch_logging_options of this ExtendedS3DestinationUpdateS3BackupUpdate.


        :param cloud_watch_logging_options: The cloud_watch_logging_options of this ExtendedS3DestinationUpdateS3BackupUpdate.
        :type cloud_watch_logging_options: S3DestinationConfigurationCloudWatchLoggingOptions
        """

        self._cloud_watch_logging_options = cloud_watch_logging_options
