/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutRecordInput.h
 *
 * 
 */

#ifndef OAIPutRecordInput_H
#define OAIPutRecordInput_H

#include <QJsonObject>

#include "OAIPutRecordInput_Record.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPutRecordInput_Record;

class OAIPutRecordInput : public OAIObject {
public:
    OAIPutRecordInput();
    OAIPutRecordInput(QString json);
    ~OAIPutRecordInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDeliveryStreamName() const;
    void setDeliveryStreamName(const QString &delivery_stream_name);
    bool is_delivery_stream_name_Set() const;
    bool is_delivery_stream_name_Valid() const;

    OAIPutRecordInput_Record getRecord() const;
    void setRecord(const OAIPutRecordInput_Record &record);
    bool is_record_Set() const;
    bool is_record_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_delivery_stream_name;
    bool m_delivery_stream_name_isSet;
    bool m_delivery_stream_name_isValid;

    OAIPutRecordInput_Record m_record;
    bool m_record_isSet;
    bool m_record_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutRecordInput)

#endif // OAIPutRecordInput_H
