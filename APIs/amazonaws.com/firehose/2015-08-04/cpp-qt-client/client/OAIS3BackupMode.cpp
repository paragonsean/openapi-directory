/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIS3BackupMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIS3BackupMode::OAIS3BackupMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIS3BackupMode::OAIS3BackupMode() {
    this->initializeModel();
}

OAIS3BackupMode::~OAIS3BackupMode() {}

void OAIS3BackupMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIS3BackupMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIS3BackupMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Disabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIS3BackupMode::DISABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Enabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIS3BackupMode::ENABLED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIS3BackupMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIS3BackupMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIS3BackupMode::DISABLED:
            val = "Disabled";
            break;
        case eOAIS3BackupMode::ENABLED:
            val = "Enabled";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIS3BackupMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIS3BackupMode::eOAIS3BackupMode OAIS3BackupMode::getValue() const {
    return m_value;
}

void OAIS3BackupMode::setValue(const OAIS3BackupMode::eOAIS3BackupMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIS3BackupMode::isSet() const {
    
    return m_value_isSet;
}

bool OAIS3BackupMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
