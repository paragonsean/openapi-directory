/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISplunkRetryOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISplunkRetryOptions::OAISplunkRetryOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISplunkRetryOptions::OAISplunkRetryOptions() {
    this->initializeModel();
}

OAISplunkRetryOptions::~OAISplunkRetryOptions() {}

void OAISplunkRetryOptions::initializeModel() {

    m_duration_in_seconds_isSet = false;
    m_duration_in_seconds_isValid = false;
}

void OAISplunkRetryOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISplunkRetryOptions::fromJsonObject(QJsonObject json) {

    m_duration_in_seconds_isValid = ::OpenAPI::fromJsonValue(m_duration_in_seconds, json[QString("DurationInSeconds")]);
    m_duration_in_seconds_isSet = !json[QString("DurationInSeconds")].isNull() && m_duration_in_seconds_isValid;
}

QString OAISplunkRetryOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISplunkRetryOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_duration_in_seconds_isSet) {
        obj.insert(QString("DurationInSeconds"), ::OpenAPI::toJsonValue(m_duration_in_seconds));
    }
    return obj;
}

qint32 OAISplunkRetryOptions::getDurationInSeconds() const {
    return m_duration_in_seconds;
}
void OAISplunkRetryOptions::setDurationInSeconds(const qint32 &duration_in_seconds) {
    m_duration_in_seconds = duration_in_seconds;
    m_duration_in_seconds_isSet = true;
}

bool OAISplunkRetryOptions::is_duration_in_seconds_Set() const{
    return m_duration_in_seconds_isSet;
}

bool OAISplunkRetryOptions::is_duration_in_seconds_Valid() const{
    return m_duration_in_seconds_isValid;
}

bool OAISplunkRetryOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_duration_in_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISplunkRetryOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
