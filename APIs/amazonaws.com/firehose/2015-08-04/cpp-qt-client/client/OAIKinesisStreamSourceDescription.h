/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKinesisStreamSourceDescription.h
 *
 * Details about a Kinesis data stream used as the source for a Kinesis Data Firehose delivery stream.
 */

#ifndef OAIKinesisStreamSourceDescription_H
#define OAIKinesisStreamSourceDescription_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIKinesisStreamSourceDescription : public OAIObject {
public:
    OAIKinesisStreamSourceDescription();
    OAIKinesisStreamSourceDescription(QString json);
    ~OAIKinesisStreamSourceDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKinesisStreamArn() const;
    void setKinesisStreamArn(const QString &kinesis_stream_arn);
    bool is_kinesis_stream_arn_Set() const;
    bool is_kinesis_stream_arn_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QDateTime getDeliveryStartTimestamp() const;
    void setDeliveryStartTimestamp(const QDateTime &delivery_start_timestamp);
    bool is_delivery_start_timestamp_Set() const;
    bool is_delivery_start_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_kinesis_stream_arn;
    bool m_kinesis_stream_arn_isSet;
    bool m_kinesis_stream_arn_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QDateTime m_delivery_start_timestamp;
    bool m_delivery_start_timestamp_isSet;
    bool m_delivery_start_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKinesisStreamSourceDescription)

#endif // OAIKinesisStreamSourceDescription_H
