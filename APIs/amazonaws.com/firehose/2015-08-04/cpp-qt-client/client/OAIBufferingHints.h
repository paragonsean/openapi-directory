/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBufferingHints.h
 *
 * Describes hints for the buffering to perform before delivering data to the destination. These options are treated as hints, and therefore Kinesis Data Firehose might choose to use different values when it is optimal. The &lt;code&gt;SizeInMBs&lt;/code&gt; and &lt;code&gt;IntervalInSeconds&lt;/code&gt; parameters are optional. However, if specify a value for one of them, you must also provide a value for the other.
 */

#ifndef OAIBufferingHints_H
#define OAIBufferingHints_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBufferingHints : public OAIObject {
public:
    OAIBufferingHints();
    OAIBufferingHints(QString json);
    ~OAIBufferingHints() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getSizeInMbs() const;
    void setSizeInMbs(const qint32 &size_in_mbs);
    bool is_size_in_mbs_Set() const;
    bool is_size_in_mbs_Valid() const;

    qint32 getIntervalInSeconds() const;
    void setIntervalInSeconds(const qint32 &interval_in_seconds);
    bool is_interval_in_seconds_Set() const;
    bool is_interval_in_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_size_in_mbs;
    bool m_size_in_mbs_isSet;
    bool m_size_in_mbs_isValid;

    qint32 m_interval_in_seconds;
    bool m_interval_in_seconds_isSet;
    bool m_interval_in_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBufferingHints)

#endif // OAIBufferingHints_H
