/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAmazonOpenSearchServerlessDestinationConfiguration.h
 *
 * Describes the configuration of a destination in the Serverless offering for Amazon OpenSearch Service.
 */

#ifndef OAIAmazonOpenSearchServerlessDestinationConfiguration_H
#define OAIAmazonOpenSearchServerlessDestinationConfiguration_H

#include <QJsonObject>

#include "OAIAmazonOpenSearchServerlessDestinationConfiguration_BufferingHints.h"
#include "OAIAmazonOpenSearchServerlessDestinationConfiguration_RetryOptions.h"
#include "OAIAmazonOpenSearchServerlessS3BackupMode.h"
#include "OAICloudWatchLoggingOptions.h"
#include "OAIProcessingConfiguration.h"
#include "OAIS3DestinationConfiguration.h"
#include "OAIVpcConfiguration.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAmazonOpenSearchServerlessDestinationConfiguration_BufferingHints;
class OAIAmazonOpenSearchServerlessDestinationConfiguration_RetryOptions;
class OAIS3DestinationConfiguration;
class OAIProcessingConfiguration;
class OAICloudWatchLoggingOptions;
class OAIVpcConfiguration;

class OAIAmazonOpenSearchServerlessDestinationConfiguration : public OAIObject {
public:
    OAIAmazonOpenSearchServerlessDestinationConfiguration();
    OAIAmazonOpenSearchServerlessDestinationConfiguration(QString json);
    ~OAIAmazonOpenSearchServerlessDestinationConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QString getCollectionEndpoint() const;
    void setCollectionEndpoint(const QString &collection_endpoint);
    bool is_collection_endpoint_Set() const;
    bool is_collection_endpoint_Valid() const;

    QString getIndexName() const;
    void setIndexName(const QString &index_name);
    bool is_index_name_Set() const;
    bool is_index_name_Valid() const;

    OAIAmazonOpenSearchServerlessDestinationConfiguration_BufferingHints getBufferingHints() const;
    void setBufferingHints(const OAIAmazonOpenSearchServerlessDestinationConfiguration_BufferingHints &buffering_hints);
    bool is_buffering_hints_Set() const;
    bool is_buffering_hints_Valid() const;

    OAIAmazonOpenSearchServerlessDestinationConfiguration_RetryOptions getRetryOptions() const;
    void setRetryOptions(const OAIAmazonOpenSearchServerlessDestinationConfiguration_RetryOptions &retry_options);
    bool is_retry_options_Set() const;
    bool is_retry_options_Valid() const;

    OAIAmazonOpenSearchServerlessS3BackupMode getS3BackupMode() const;
    void setS3BackupMode(const OAIAmazonOpenSearchServerlessS3BackupMode &s3_backup_mode);
    bool is_s3_backup_mode_Set() const;
    bool is_s3_backup_mode_Valid() const;

    OAIS3DestinationConfiguration getS3Configuration() const;
    void setS3Configuration(const OAIS3DestinationConfiguration &s3_configuration);
    bool is_s3_configuration_Set() const;
    bool is_s3_configuration_Valid() const;

    OAIProcessingConfiguration getProcessingConfiguration() const;
    void setProcessingConfiguration(const OAIProcessingConfiguration &processing_configuration);
    bool is_processing_configuration_Set() const;
    bool is_processing_configuration_Valid() const;

    OAICloudWatchLoggingOptions getCloudWatchLoggingOptions() const;
    void setCloudWatchLoggingOptions(const OAICloudWatchLoggingOptions &cloud_watch_logging_options);
    bool is_cloud_watch_logging_options_Set() const;
    bool is_cloud_watch_logging_options_Valid() const;

    OAIVpcConfiguration getVpcConfiguration() const;
    void setVpcConfiguration(const OAIVpcConfiguration &vpc_configuration);
    bool is_vpc_configuration_Set() const;
    bool is_vpc_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QString m_collection_endpoint;
    bool m_collection_endpoint_isSet;
    bool m_collection_endpoint_isValid;

    QString m_index_name;
    bool m_index_name_isSet;
    bool m_index_name_isValid;

    OAIAmazonOpenSearchServerlessDestinationConfiguration_BufferingHints m_buffering_hints;
    bool m_buffering_hints_isSet;
    bool m_buffering_hints_isValid;

    OAIAmazonOpenSearchServerlessDestinationConfiguration_RetryOptions m_retry_options;
    bool m_retry_options_isSet;
    bool m_retry_options_isValid;

    OAIAmazonOpenSearchServerlessS3BackupMode m_s3_backup_mode;
    bool m_s3_backup_mode_isSet;
    bool m_s3_backup_mode_isValid;

    OAIS3DestinationConfiguration m_s3_configuration;
    bool m_s3_configuration_isSet;
    bool m_s3_configuration_isValid;

    OAIProcessingConfiguration m_processing_configuration;
    bool m_processing_configuration_isSet;
    bool m_processing_configuration_isValid;

    OAICloudWatchLoggingOptions m_cloud_watch_logging_options;
    bool m_cloud_watch_logging_options_isSet;
    bool m_cloud_watch_logging_options_isValid;

    OAIVpcConfiguration m_vpc_configuration;
    bool m_vpc_configuration_isSet;
    bool m_vpc_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAmazonOpenSearchServerlessDestinationConfiguration)

#endif // OAIAmazonOpenSearchServerlessDestinationConfiguration_H
