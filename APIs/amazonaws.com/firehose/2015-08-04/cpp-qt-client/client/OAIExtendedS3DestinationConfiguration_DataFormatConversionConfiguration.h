/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExtendedS3DestinationConfiguration_DataFormatConversionConfiguration.h
 *
 * 
 */

#ifndef OAIExtendedS3DestinationConfiguration_DataFormatConversionConfiguration_H
#define OAIExtendedS3DestinationConfiguration_DataFormatConversionConfiguration_H

#include <QJsonObject>

#include "OAIDataFormatConversionConfiguration_InputFormatConfiguration.h"
#include "OAIDataFormatConversionConfiguration_OutputFormatConfiguration.h"
#include "OAIDataFormatConversionConfiguration_SchemaConfiguration.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataFormatConversionConfiguration_SchemaConfiguration;
class OAIDataFormatConversionConfiguration_InputFormatConfiguration;
class OAIDataFormatConversionConfiguration_OutputFormatConfiguration;

class OAIExtendedS3DestinationConfiguration_DataFormatConversionConfiguration : public OAIObject {
public:
    OAIExtendedS3DestinationConfiguration_DataFormatConversionConfiguration();
    OAIExtendedS3DestinationConfiguration_DataFormatConversionConfiguration(QString json);
    ~OAIExtendedS3DestinationConfiguration_DataFormatConversionConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDataFormatConversionConfiguration_SchemaConfiguration getSchemaConfiguration() const;
    void setSchemaConfiguration(const OAIDataFormatConversionConfiguration_SchemaConfiguration &schema_configuration);
    bool is_schema_configuration_Set() const;
    bool is_schema_configuration_Valid() const;

    OAIDataFormatConversionConfiguration_InputFormatConfiguration getInputFormatConfiguration() const;
    void setInputFormatConfiguration(const OAIDataFormatConversionConfiguration_InputFormatConfiguration &input_format_configuration);
    bool is_input_format_configuration_Set() const;
    bool is_input_format_configuration_Valid() const;

    OAIDataFormatConversionConfiguration_OutputFormatConfiguration getOutputFormatConfiguration() const;
    void setOutputFormatConfiguration(const OAIDataFormatConversionConfiguration_OutputFormatConfiguration &output_format_configuration);
    bool is_output_format_configuration_Set() const;
    bool is_output_format_configuration_Valid() const;

    bool getEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDataFormatConversionConfiguration_SchemaConfiguration m_schema_configuration;
    bool m_schema_configuration_isSet;
    bool m_schema_configuration_isValid;

    OAIDataFormatConversionConfiguration_InputFormatConfiguration m_input_format_configuration;
    bool m_input_format_configuration_isSet;
    bool m_input_format_configuration_isValid;

    OAIDataFormatConversionConfiguration_OutputFormatConfiguration m_output_format_configuration;
    bool m_output_format_configuration_isSet;
    bool m_output_format_configuration_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExtendedS3DestinationConfiguration_DataFormatConversionConfiguration)

#endif // OAIExtendedS3DestinationConfiguration_DataFormatConversionConfiguration_H
