/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHttpEndpointDestinationUpdate.h
 *
 * Updates the specified HTTP endpoint destination.
 */

#ifndef OAIHttpEndpointDestinationUpdate_H
#define OAIHttpEndpointDestinationUpdate_H

#include <QJsonObject>

#include "OAICloudWatchLoggingOptions.h"
#include "OAIHttpEndpointDestinationConfiguration_RetryOptions.h"
#include "OAIHttpEndpointDestinationDescription_BufferingHints.h"
#include "OAIHttpEndpointDestinationUpdate_EndpointConfiguration.h"
#include "OAIHttpEndpointDestinationUpdate_RequestConfiguration.h"
#include "OAIHttpEndpointS3BackupMode.h"
#include "OAIProcessingConfiguration.h"
#include "OAIS3DestinationUpdate.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHttpEndpointDestinationUpdate_EndpointConfiguration;
class OAIHttpEndpointDestinationDescription_BufferingHints;
class OAICloudWatchLoggingOptions;
class OAIHttpEndpointDestinationUpdate_RequestConfiguration;
class OAIProcessingConfiguration;
class OAIHttpEndpointDestinationConfiguration_RetryOptions;
class OAIS3DestinationUpdate;

class OAIHttpEndpointDestinationUpdate : public OAIObject {
public:
    OAIHttpEndpointDestinationUpdate();
    OAIHttpEndpointDestinationUpdate(QString json);
    ~OAIHttpEndpointDestinationUpdate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHttpEndpointDestinationUpdate_EndpointConfiguration getEndpointConfiguration() const;
    void setEndpointConfiguration(const OAIHttpEndpointDestinationUpdate_EndpointConfiguration &endpoint_configuration);
    bool is_endpoint_configuration_Set() const;
    bool is_endpoint_configuration_Valid() const;

    OAIHttpEndpointDestinationDescription_BufferingHints getBufferingHints() const;
    void setBufferingHints(const OAIHttpEndpointDestinationDescription_BufferingHints &buffering_hints);
    bool is_buffering_hints_Set() const;
    bool is_buffering_hints_Valid() const;

    OAICloudWatchLoggingOptions getCloudWatchLoggingOptions() const;
    void setCloudWatchLoggingOptions(const OAICloudWatchLoggingOptions &cloud_watch_logging_options);
    bool is_cloud_watch_logging_options_Set() const;
    bool is_cloud_watch_logging_options_Valid() const;

    OAIHttpEndpointDestinationUpdate_RequestConfiguration getRequestConfiguration() const;
    void setRequestConfiguration(const OAIHttpEndpointDestinationUpdate_RequestConfiguration &request_configuration);
    bool is_request_configuration_Set() const;
    bool is_request_configuration_Valid() const;

    OAIProcessingConfiguration getProcessingConfiguration() const;
    void setProcessingConfiguration(const OAIProcessingConfiguration &processing_configuration);
    bool is_processing_configuration_Set() const;
    bool is_processing_configuration_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    OAIHttpEndpointDestinationConfiguration_RetryOptions getRetryOptions() const;
    void setRetryOptions(const OAIHttpEndpointDestinationConfiguration_RetryOptions &retry_options);
    bool is_retry_options_Set() const;
    bool is_retry_options_Valid() const;

    OAIHttpEndpointS3BackupMode getS3BackupMode() const;
    void setS3BackupMode(const OAIHttpEndpointS3BackupMode &s3_backup_mode);
    bool is_s3_backup_mode_Set() const;
    bool is_s3_backup_mode_Valid() const;

    OAIS3DestinationUpdate getS3Update() const;
    void setS3Update(const OAIS3DestinationUpdate &s3_update);
    bool is_s3_update_Set() const;
    bool is_s3_update_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHttpEndpointDestinationUpdate_EndpointConfiguration m_endpoint_configuration;
    bool m_endpoint_configuration_isSet;
    bool m_endpoint_configuration_isValid;

    OAIHttpEndpointDestinationDescription_BufferingHints m_buffering_hints;
    bool m_buffering_hints_isSet;
    bool m_buffering_hints_isValid;

    OAICloudWatchLoggingOptions m_cloud_watch_logging_options;
    bool m_cloud_watch_logging_options_isSet;
    bool m_cloud_watch_logging_options_isValid;

    OAIHttpEndpointDestinationUpdate_RequestConfiguration m_request_configuration;
    bool m_request_configuration_isSet;
    bool m_request_configuration_isValid;

    OAIProcessingConfiguration m_processing_configuration;
    bool m_processing_configuration_isSet;
    bool m_processing_configuration_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    OAIHttpEndpointDestinationConfiguration_RetryOptions m_retry_options;
    bool m_retry_options_isSet;
    bool m_retry_options_isValid;

    OAIHttpEndpointS3BackupMode m_s3_backup_mode;
    bool m_s3_backup_mode_isSet;
    bool m_s3_backup_mode_isValid;

    OAIS3DestinationUpdate m_s3_update;
    bool m_s3_update_isSet;
    bool m_s3_update_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHttpEndpointDestinationUpdate)

#endif // OAIHttpEndpointDestinationUpdate_H
