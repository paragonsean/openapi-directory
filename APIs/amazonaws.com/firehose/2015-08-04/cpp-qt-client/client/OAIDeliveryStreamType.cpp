/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeliveryStreamType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeliveryStreamType::OAIDeliveryStreamType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeliveryStreamType::OAIDeliveryStreamType() {
    this->initializeModel();
}

OAIDeliveryStreamType::~OAIDeliveryStreamType() {}

void OAIDeliveryStreamType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDeliveryStreamType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDeliveryStreamType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DirectPut", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeliveryStreamType::DIRECTPUT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KinesisStreamAsSource", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeliveryStreamType::KINESISSTREAMASSOURCE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDeliveryStreamType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDeliveryStreamType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDeliveryStreamType::DIRECTPUT:
            val = "DirectPut";
            break;
        case eOAIDeliveryStreamType::KINESISSTREAMASSOURCE:
            val = "KinesisStreamAsSource";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDeliveryStreamType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDeliveryStreamType::eOAIDeliveryStreamType OAIDeliveryStreamType::getValue() const {
    return m_value;
}

void OAIDeliveryStreamType::setValue(const OAIDeliveryStreamType::eOAIDeliveryStreamType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDeliveryStreamType::isSet() const {
    
    return m_value_isSet;
}

bool OAIDeliveryStreamType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
