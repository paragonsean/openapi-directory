/**
 * Amazon Kinesis Firehose
 * <fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon OpenSearch Service, Amazon Redshift, Splunk, and various other supportd destinations.</p>
 *
 * The version of the OpenAPI document: 2015-08-04
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIElasticsearchDestinationConfiguration.h
 *
 * Describes the configuration of a destination in Amazon ES.
 */

#ifndef OAIElasticsearchDestinationConfiguration_H
#define OAIElasticsearchDestinationConfiguration_H

#include <QJsonObject>

#include "OAIElasticsearchDestinationConfiguration_BufferingHints.h"
#include "OAIElasticsearchDestinationConfiguration_RetryOptions.h"
#include "OAIElasticsearchDestinationConfiguration_S3Configuration.h"
#include "OAIElasticsearchDestinationConfiguration_VpcConfiguration.h"
#include "OAIElasticsearchIndexRotationPeriod.h"
#include "OAIElasticsearchS3BackupMode.h"
#include "OAIExtendedS3DestinationConfiguration_ProcessingConfiguration.h"
#include "OAIS3DestinationDescription_CloudWatchLoggingOptions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIElasticsearchDestinationConfiguration_BufferingHints;
class OAIElasticsearchDestinationConfiguration_RetryOptions;
class OAIElasticsearchDestinationConfiguration_S3Configuration;
class OAIExtendedS3DestinationConfiguration_ProcessingConfiguration;
class OAIS3DestinationDescription_CloudWatchLoggingOptions;
class OAIElasticsearchDestinationConfiguration_VpcConfiguration;

class OAIElasticsearchDestinationConfiguration : public OAIObject {
public:
    OAIElasticsearchDestinationConfiguration();
    OAIElasticsearchDestinationConfiguration(QString json);
    ~OAIElasticsearchDestinationConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QString getDomainArn() const;
    void setDomainArn(const QString &domain_arn);
    bool is_domain_arn_Set() const;
    bool is_domain_arn_Valid() const;

    QString getClusterEndpoint() const;
    void setClusterEndpoint(const QString &cluster_endpoint);
    bool is_cluster_endpoint_Set() const;
    bool is_cluster_endpoint_Valid() const;

    QString getIndexName() const;
    void setIndexName(const QString &index_name);
    bool is_index_name_Set() const;
    bool is_index_name_Valid() const;

    QString getTypeName() const;
    void setTypeName(const QString &type_name);
    bool is_type_name_Set() const;
    bool is_type_name_Valid() const;

    OAIElasticsearchIndexRotationPeriod getIndexRotationPeriod() const;
    void setIndexRotationPeriod(const OAIElasticsearchIndexRotationPeriod &index_rotation_period);
    bool is_index_rotation_period_Set() const;
    bool is_index_rotation_period_Valid() const;

    OAIElasticsearchDestinationConfiguration_BufferingHints getBufferingHints() const;
    void setBufferingHints(const OAIElasticsearchDestinationConfiguration_BufferingHints &buffering_hints);
    bool is_buffering_hints_Set() const;
    bool is_buffering_hints_Valid() const;

    OAIElasticsearchDestinationConfiguration_RetryOptions getRetryOptions() const;
    void setRetryOptions(const OAIElasticsearchDestinationConfiguration_RetryOptions &retry_options);
    bool is_retry_options_Set() const;
    bool is_retry_options_Valid() const;

    OAIElasticsearchS3BackupMode getS3BackupMode() const;
    void setS3BackupMode(const OAIElasticsearchS3BackupMode &s3_backup_mode);
    bool is_s3_backup_mode_Set() const;
    bool is_s3_backup_mode_Valid() const;

    OAIElasticsearchDestinationConfiguration_S3Configuration getS3Configuration() const;
    void setS3Configuration(const OAIElasticsearchDestinationConfiguration_S3Configuration &s3_configuration);
    bool is_s3_configuration_Set() const;
    bool is_s3_configuration_Valid() const;

    OAIExtendedS3DestinationConfiguration_ProcessingConfiguration getProcessingConfiguration() const;
    void setProcessingConfiguration(const OAIExtendedS3DestinationConfiguration_ProcessingConfiguration &processing_configuration);
    bool is_processing_configuration_Set() const;
    bool is_processing_configuration_Valid() const;

    OAIS3DestinationDescription_CloudWatchLoggingOptions getCloudWatchLoggingOptions() const;
    void setCloudWatchLoggingOptions(const OAIS3DestinationDescription_CloudWatchLoggingOptions &cloud_watch_logging_options);
    bool is_cloud_watch_logging_options_Set() const;
    bool is_cloud_watch_logging_options_Valid() const;

    OAIElasticsearchDestinationConfiguration_VpcConfiguration getVpcConfiguration() const;
    void setVpcConfiguration(const OAIElasticsearchDestinationConfiguration_VpcConfiguration &vpc_configuration);
    bool is_vpc_configuration_Set() const;
    bool is_vpc_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QString m_domain_arn;
    bool m_domain_arn_isSet;
    bool m_domain_arn_isValid;

    QString m_cluster_endpoint;
    bool m_cluster_endpoint_isSet;
    bool m_cluster_endpoint_isValid;

    QString m_index_name;
    bool m_index_name_isSet;
    bool m_index_name_isValid;

    QString m_type_name;
    bool m_type_name_isSet;
    bool m_type_name_isValid;

    OAIElasticsearchIndexRotationPeriod m_index_rotation_period;
    bool m_index_rotation_period_isSet;
    bool m_index_rotation_period_isValid;

    OAIElasticsearchDestinationConfiguration_BufferingHints m_buffering_hints;
    bool m_buffering_hints_isSet;
    bool m_buffering_hints_isValid;

    OAIElasticsearchDestinationConfiguration_RetryOptions m_retry_options;
    bool m_retry_options_isSet;
    bool m_retry_options_isValid;

    OAIElasticsearchS3BackupMode m_s3_backup_mode;
    bool m_s3_backup_mode_isSet;
    bool m_s3_backup_mode_isValid;

    OAIElasticsearchDestinationConfiguration_S3Configuration m_s3_configuration;
    bool m_s3_configuration_isSet;
    bool m_s3_configuration_isValid;

    OAIExtendedS3DestinationConfiguration_ProcessingConfiguration m_processing_configuration;
    bool m_processing_configuration_isSet;
    bool m_processing_configuration_isValid;

    OAIS3DestinationDescription_CloudWatchLoggingOptions m_cloud_watch_logging_options;
    bool m_cloud_watch_logging_options_isSet;
    bool m_cloud_watch_logging_options_isValid;

    OAIElasticsearchDestinationConfiguration_VpcConfiguration m_vpc_configuration;
    bool m_vpc_configuration_isSet;
    bool m_vpc_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIElasticsearchDestinationConfiguration)

#endif // OAIElasticsearchDestinationConfiguration_H
