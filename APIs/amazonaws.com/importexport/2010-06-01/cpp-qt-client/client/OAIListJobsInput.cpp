/**
 * AWS Import/Export
 * <fullname>AWS Import/Export Service</fullname> AWS Import/Export accelerates transferring large amounts of data between the AWS cloud and portable storage devices that you mail to us. AWS Import/Export transfers data directly onto and off of your storage devices using Amazon's high-speed internal network and bypassing the Internet. For large data sets, AWS Import/Export is often faster than Internet transfer and more cost effective than upgrading your connectivity.
 *
 * The version of the OpenAPI document: 2010-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListJobsInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListJobsInput::OAIListJobsInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListJobsInput::OAIListJobsInput() {
    this->initializeModel();
}

OAIListJobsInput::~OAIListJobsInput() {}

void OAIListJobsInput::initializeModel() {

    m_max_jobs_isSet = false;
    m_max_jobs_isValid = false;

    m_marker_isSet = false;
    m_marker_isValid = false;

    m_api_version_isSet = false;
    m_api_version_isValid = false;
}

void OAIListJobsInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListJobsInput::fromJsonObject(QJsonObject json) {

    m_max_jobs_isValid = ::OpenAPI::fromJsonValue(m_max_jobs, json[QString("MaxJobs")]);
    m_max_jobs_isSet = !json[QString("MaxJobs")].isNull() && m_max_jobs_isValid;

    m_marker_isValid = ::OpenAPI::fromJsonValue(m_marker, json[QString("Marker")]);
    m_marker_isSet = !json[QString("Marker")].isNull() && m_marker_isValid;

    m_api_version_isValid = ::OpenAPI::fromJsonValue(m_api_version, json[QString("APIVersion")]);
    m_api_version_isSet = !json[QString("APIVersion")].isNull() && m_api_version_isValid;
}

QString OAIListJobsInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListJobsInput::asJsonObject() const {
    QJsonObject obj;
    if (m_max_jobs_isSet) {
        obj.insert(QString("MaxJobs"), ::OpenAPI::toJsonValue(m_max_jobs));
    }
    if (m_marker_isSet) {
        obj.insert(QString("Marker"), ::OpenAPI::toJsonValue(m_marker));
    }
    if (m_api_version_isSet) {
        obj.insert(QString("APIVersion"), ::OpenAPI::toJsonValue(m_api_version));
    }
    return obj;
}

qint32 OAIListJobsInput::getMaxJobs() const {
    return m_max_jobs;
}
void OAIListJobsInput::setMaxJobs(const qint32 &max_jobs) {
    m_max_jobs = max_jobs;
    m_max_jobs_isSet = true;
}

bool OAIListJobsInput::is_max_jobs_Set() const{
    return m_max_jobs_isSet;
}

bool OAIListJobsInput::is_max_jobs_Valid() const{
    return m_max_jobs_isValid;
}

QString OAIListJobsInput::getMarker() const {
    return m_marker;
}
void OAIListJobsInput::setMarker(const QString &marker) {
    m_marker = marker;
    m_marker_isSet = true;
}

bool OAIListJobsInput::is_marker_Set() const{
    return m_marker_isSet;
}

bool OAIListJobsInput::is_marker_Valid() const{
    return m_marker_isValid;
}

QString OAIListJobsInput::getApiVersion() const {
    return m_api_version;
}
void OAIListJobsInput::setApiVersion(const QString &api_version) {
    m_api_version = api_version;
    m_api_version_isSet = true;
}

bool OAIListJobsInput::is_api_version_Set() const{
    return m_api_version_isSet;
}

bool OAIListJobsInput::is_api_version_Valid() const{
    return m_api_version_isValid;
}

bool OAIListJobsInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_jobs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marker_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListJobsInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
