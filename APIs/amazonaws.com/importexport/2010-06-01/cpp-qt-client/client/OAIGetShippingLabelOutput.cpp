/**
 * AWS Import/Export
 * <fullname>AWS Import/Export Service</fullname> AWS Import/Export accelerates transferring large amounts of data between the AWS cloud and portable storage devices that you mail to us. AWS Import/Export transfers data directly onto and off of your storage devices using Amazon's high-speed internal network and bypassing the Internet. For large data sets, AWS Import/Export is often faster than Internet transfer and more cost effective than upgrading your connectivity.
 *
 * The version of the OpenAPI document: 2010-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetShippingLabelOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetShippingLabelOutput::OAIGetShippingLabelOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetShippingLabelOutput::OAIGetShippingLabelOutput() {
    this->initializeModel();
}

OAIGetShippingLabelOutput::~OAIGetShippingLabelOutput() {}

void OAIGetShippingLabelOutput::initializeModel() {

    m_shipping_label_url_isSet = false;
    m_shipping_label_url_isValid = false;

    m_warning_isSet = false;
    m_warning_isValid = false;
}

void OAIGetShippingLabelOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetShippingLabelOutput::fromJsonObject(QJsonObject json) {

    m_shipping_label_url_isValid = ::OpenAPI::fromJsonValue(m_shipping_label_url, json[QString("ShippingLabelURL")]);
    m_shipping_label_url_isSet = !json[QString("ShippingLabelURL")].isNull() && m_shipping_label_url_isValid;

    m_warning_isValid = ::OpenAPI::fromJsonValue(m_warning, json[QString("Warning")]);
    m_warning_isSet = !json[QString("Warning")].isNull() && m_warning_isValid;
}

QString OAIGetShippingLabelOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetShippingLabelOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_shipping_label_url_isSet) {
        obj.insert(QString("ShippingLabelURL"), ::OpenAPI::toJsonValue(m_shipping_label_url));
    }
    if (m_warning_isSet) {
        obj.insert(QString("Warning"), ::OpenAPI::toJsonValue(m_warning));
    }
    return obj;
}

QString OAIGetShippingLabelOutput::getShippingLabelUrl() const {
    return m_shipping_label_url;
}
void OAIGetShippingLabelOutput::setShippingLabelUrl(const QString &shipping_label_url) {
    m_shipping_label_url = shipping_label_url;
    m_shipping_label_url_isSet = true;
}

bool OAIGetShippingLabelOutput::is_shipping_label_url_Set() const{
    return m_shipping_label_url_isSet;
}

bool OAIGetShippingLabelOutput::is_shipping_label_url_Valid() const{
    return m_shipping_label_url_isValid;
}

QString OAIGetShippingLabelOutput::getWarning() const {
    return m_warning;
}
void OAIGetShippingLabelOutput::setWarning(const QString &warning) {
    m_warning = warning;
    m_warning_isSet = true;
}

bool OAIGetShippingLabelOutput::is_warning_Set() const{
    return m_warning_isSet;
}

bool OAIGetShippingLabelOutput::is_warning_Valid() const{
    return m_warning_isValid;
}

bool OAIGetShippingLabelOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_shipping_label_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_warning_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetShippingLabelOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
