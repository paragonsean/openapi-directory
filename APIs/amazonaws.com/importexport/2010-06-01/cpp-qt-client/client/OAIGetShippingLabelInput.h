/**
 * AWS Import/Export
 * <fullname>AWS Import/Export Service</fullname> AWS Import/Export accelerates transferring large amounts of data between the AWS cloud and portable storage devices that you mail to us. AWS Import/Export transfers data directly onto and off of your storage devices using Amazon's high-speed internal network and bypassing the Internet. For large data sets, AWS Import/Export is often faster than Internet transfer and more cost effective than upgrading your connectivity.
 *
 * The version of the OpenAPI document: 2010-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetShippingLabelInput.h
 *
 * 
 */

#ifndef OAIGetShippingLabelInput_H
#define OAIGetShippingLabelInput_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetShippingLabelInput : public OAIObject {
public:
    OAIGetShippingLabelInput();
    OAIGetShippingLabelInput(QString json);
    ~OAIGetShippingLabelInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getJobIds() const;
    void setJobIds(const QList<QString> &job_ids);
    bool is_job_ids_Set() const;
    bool is_job_ids_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getCompany() const;
    void setCompany(const QString &company);
    bool is_company_Set() const;
    bool is_company_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getStateOrProvince() const;
    void setStateOrProvince(const QString &state_or_province);
    bool is_state_or_province_Set() const;
    bool is_state_or_province_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getPostalCode() const;
    void setPostalCode(const QString &postal_code);
    bool is_postal_code_Set() const;
    bool is_postal_code_Valid() const;

    QString getStreet1() const;
    void setStreet1(const QString &street1);
    bool is_street1_Set() const;
    bool is_street1_Valid() const;

    QString getStreet2() const;
    void setStreet2(const QString &street2);
    bool is_street2_Set() const;
    bool is_street2_Valid() const;

    QString getStreet3() const;
    void setStreet3(const QString &street3);
    bool is_street3_Set() const;
    bool is_street3_Valid() const;

    QString getApiVersion() const;
    void setApiVersion(const QString &api_version);
    bool is_api_version_Set() const;
    bool is_api_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_job_ids;
    bool m_job_ids_isSet;
    bool m_job_ids_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_company;
    bool m_company_isSet;
    bool m_company_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_state_or_province;
    bool m_state_or_province_isSet;
    bool m_state_or_province_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_postal_code;
    bool m_postal_code_isSet;
    bool m_postal_code_isValid;

    QString m_street1;
    bool m_street1_isSet;
    bool m_street1_isValid;

    QString m_street2;
    bool m_street2_isSet;
    bool m_street2_isValid;

    QString m_street3;
    bool m_street3_isSet;
    bool m_street3_isValid;

    QString m_api_version;
    bool m_api_version_isSet;
    bool m_api_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetShippingLabelInput)

#endif // OAIGetShippingLabelInput_H
