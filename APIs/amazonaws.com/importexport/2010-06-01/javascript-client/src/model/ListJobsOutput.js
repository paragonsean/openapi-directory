/**
 * AWS Import/Export
 * <fullname>AWS Import/Export Service</fullname> AWS Import/Export accelerates transferring large amounts of data between the AWS cloud and portable storage devices that you mail to us. AWS Import/Export transfers data directly onto and off of your storage devices using Amazon's high-speed internal network and bypassing the Internet. For large data sets, AWS Import/Export is often faster than Internet transfer and more cost effective than upgrading your connectivity.
 *
 * The version of the OpenAPI document: 2010-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Job from './Job';

/**
 * The ListJobsOutput model module.
 * @module model/ListJobsOutput
 * @version 2010-06-01
 */
class ListJobsOutput {
    /**
     * Constructs a new <code>ListJobsOutput</code>.
     * Output structure for the ListJobs operation.
     * @alias module:model/ListJobsOutput
     */
    constructor() { 
        
        ListJobsOutput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListJobsOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListJobsOutput} obj Optional instance to populate.
     * @return {module:model/ListJobsOutput} The populated <code>ListJobsOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListJobsOutput();

            if (data.hasOwnProperty('Jobs')) {
                obj['Jobs'] = ApiClient.convertToType(data['Jobs'], [Job]);
            }
            if (data.hasOwnProperty('IsTruncated')) {
                obj['IsTruncated'] = ApiClient.convertToType(data['IsTruncated'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListJobsOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListJobsOutput</code>.
     */
    static validateJSON(data) {
        if (data['Jobs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Jobs'])) {
                throw new Error("Expected the field `Jobs` to be an array in the JSON data but got " + data['Jobs']);
            }
            // validate the optional field `Jobs` (array)
            for (const item of data['Jobs']) {
                Job.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A list container for Jobs returned by the ListJobs operation.
 * @member {Array.<module:model/Job>} Jobs
 */
ListJobsOutput.prototype['Jobs'] = undefined;

/**
 * Indicates whether the list of jobs was truncated. If true, then call ListJobs again using the last JobId element as the marker.
 * @member {Boolean} IsTruncated
 */
ListJobsOutput.prototype['IsTruncated'] = undefined;






export default ListJobsOutput;

