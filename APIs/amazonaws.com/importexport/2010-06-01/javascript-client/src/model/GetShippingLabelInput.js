/**
 * AWS Import/Export
 * <fullname>AWS Import/Export Service</fullname> AWS Import/Export accelerates transferring large amounts of data between the AWS cloud and portable storage devices that you mail to us. AWS Import/Export transfers data directly onto and off of your storage devices using Amazon's high-speed internal network and bypassing the Internet. For large data sets, AWS Import/Export is often faster than Internet transfer and more cost effective than upgrading your connectivity.
 *
 * The version of the OpenAPI document: 2010-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetShippingLabelInput model module.
 * @module model/GetShippingLabelInput
 * @version 2010-06-01
 */
class GetShippingLabelInput {
    /**
     * Constructs a new <code>GetShippingLabelInput</code>.
     * @alias module:model/GetShippingLabelInput
     * @param jobIds {Array.<String>} 
     */
    constructor(jobIds) { 
        
        GetShippingLabelInput.initialize(this, jobIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, jobIds) { 
        obj['jobIds'] = jobIds;
    }

    /**
     * Constructs a <code>GetShippingLabelInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetShippingLabelInput} obj Optional instance to populate.
     * @return {module:model/GetShippingLabelInput} The populated <code>GetShippingLabelInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetShippingLabelInput();

            if (data.hasOwnProperty('jobIds')) {
                obj['jobIds'] = ApiClient.convertToType(data['jobIds'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('company')) {
                obj['company'] = ApiClient.convertToType(data['company'], 'String');
            }
            if (data.hasOwnProperty('phoneNumber')) {
                obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('stateOrProvince')) {
                obj['stateOrProvince'] = ApiClient.convertToType(data['stateOrProvince'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('postalCode')) {
                obj['postalCode'] = ApiClient.convertToType(data['postalCode'], 'String');
            }
            if (data.hasOwnProperty('street1')) {
                obj['street1'] = ApiClient.convertToType(data['street1'], 'String');
            }
            if (data.hasOwnProperty('street2')) {
                obj['street2'] = ApiClient.convertToType(data['street2'], 'String');
            }
            if (data.hasOwnProperty('street3')) {
                obj['street3'] = ApiClient.convertToType(data['street3'], 'String');
            }
            if (data.hasOwnProperty('APIVersion')) {
                obj['APIVersion'] = ApiClient.convertToType(data['APIVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetShippingLabelInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetShippingLabelInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetShippingLabelInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['jobIds'])) {
            throw new Error("Expected the field `jobIds` to be an array in the JSON data but got " + data['jobIds']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['company'] && !(typeof data['company'] === 'string' || data['company'] instanceof String)) {
            throw new Error("Expected the field `company` to be a primitive type in the JSON string but got " + data['company']);
        }
        // ensure the json data is a string
        if (data['phoneNumber'] && !(typeof data['phoneNumber'] === 'string' || data['phoneNumber'] instanceof String)) {
            throw new Error("Expected the field `phoneNumber` to be a primitive type in the JSON string but got " + data['phoneNumber']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['stateOrProvince'] && !(typeof data['stateOrProvince'] === 'string' || data['stateOrProvince'] instanceof String)) {
            throw new Error("Expected the field `stateOrProvince` to be a primitive type in the JSON string but got " + data['stateOrProvince']);
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['postalCode'] && !(typeof data['postalCode'] === 'string' || data['postalCode'] instanceof String)) {
            throw new Error("Expected the field `postalCode` to be a primitive type in the JSON string but got " + data['postalCode']);
        }
        // ensure the json data is a string
        if (data['street1'] && !(typeof data['street1'] === 'string' || data['street1'] instanceof String)) {
            throw new Error("Expected the field `street1` to be a primitive type in the JSON string but got " + data['street1']);
        }
        // ensure the json data is a string
        if (data['street2'] && !(typeof data['street2'] === 'string' || data['street2'] instanceof String)) {
            throw new Error("Expected the field `street2` to be a primitive type in the JSON string but got " + data['street2']);
        }
        // ensure the json data is a string
        if (data['street3'] && !(typeof data['street3'] === 'string' || data['street3'] instanceof String)) {
            throw new Error("Expected the field `street3` to be a primitive type in the JSON string but got " + data['street3']);
        }
        // ensure the json data is a string
        if (data['APIVersion'] && !(typeof data['APIVersion'] === 'string' || data['APIVersion'] instanceof String)) {
            throw new Error("Expected the field `APIVersion` to be a primitive type in the JSON string but got " + data['APIVersion']);
        }

        return true;
    }


}

GetShippingLabelInput.RequiredProperties = ["jobIds"];

/**
 * @member {Array.<String>} jobIds
 */
GetShippingLabelInput.prototype['jobIds'] = undefined;

/**
 * Specifies the name of the person responsible for shipping this package.
 * @member {String} name
 */
GetShippingLabelInput.prototype['name'] = undefined;

/**
 * Specifies the name of the company that will ship this package.
 * @member {String} company
 */
GetShippingLabelInput.prototype['company'] = undefined;

/**
 * Specifies the phone number of the person responsible for shipping this package.
 * @member {String} phoneNumber
 */
GetShippingLabelInput.prototype['phoneNumber'] = undefined;

/**
 * Specifies the name of your country for the return address.
 * @member {String} country
 */
GetShippingLabelInput.prototype['country'] = undefined;

/**
 * Specifies the name of your state or your province for the return address.
 * @member {String} stateOrProvince
 */
GetShippingLabelInput.prototype['stateOrProvince'] = undefined;

/**
 * Specifies the name of your city for the return address.
 * @member {String} city
 */
GetShippingLabelInput.prototype['city'] = undefined;

/**
 * Specifies the postal code for the return address.
 * @member {String} postalCode
 */
GetShippingLabelInput.prototype['postalCode'] = undefined;

/**
 * Specifies the first part of the street address for the return address, for example 1234 Main Street.
 * @member {String} street1
 */
GetShippingLabelInput.prototype['street1'] = undefined;

/**
 * Specifies the optional second part of the street address for the return address, for example Suite 100.
 * @member {String} street2
 */
GetShippingLabelInput.prototype['street2'] = undefined;

/**
 * Specifies the optional third part of the street address for the return address, for example c/o Jane Doe.
 * @member {String} street3
 */
GetShippingLabelInput.prototype['street3'] = undefined;

/**
 * Specifies the version of the client tool.
 * @member {String} APIVersion
 */
GetShippingLabelInput.prototype['APIVersion'] = undefined;






export default GetShippingLabelInput;

