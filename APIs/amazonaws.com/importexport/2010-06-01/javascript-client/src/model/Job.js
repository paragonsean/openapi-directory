/**
 * AWS Import/Export
 * <fullname>AWS Import/Export Service</fullname> AWS Import/Export accelerates transferring large amounts of data between the AWS cloud and portable storage devices that you mail to us. AWS Import/Export transfers data directly onto and off of your storage devices using Amazon's high-speed internal network and bypassing the Internet. For large data sets, AWS Import/Export is often faster than Internet transfer and more cost effective than upgrading your connectivity.
 *
 * The version of the OpenAPI document: 2010-06-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobType from './JobType';

/**
 * The Job model module.
 * @module model/Job
 * @version 2010-06-01
 */
class Job {
    /**
     * Constructs a new <code>Job</code>.
     * Representation of a job returned by the ListJobs operation.
     * @alias module:model/Job
     */
    constructor() { 
        
        Job.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Job</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Job} obj Optional instance to populate.
     * @return {module:model/Job} The populated <code>Job</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Job();

            if (data.hasOwnProperty('JobId')) {
                obj['JobId'] = ApiClient.convertToType(data['JobId'], 'String');
            }
            if (data.hasOwnProperty('CreationDate')) {
                obj['CreationDate'] = ApiClient.convertToType(data['CreationDate'], 'Date');
            }
            if (data.hasOwnProperty('IsCanceled')) {
                obj['IsCanceled'] = ApiClient.convertToType(data['IsCanceled'], 'Boolean');
            }
            if (data.hasOwnProperty('JobType')) {
                obj['JobType'] = JobType.constructFromObject(data['JobType']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Job</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Job</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['JobId'] && !(typeof data['JobId'] === 'string' || data['JobId'] instanceof String)) {
            throw new Error("Expected the field `JobId` to be a primitive type in the JSON string but got " + data['JobId']);
        }

        return true;
    }


}



/**
 * A unique identifier which refers to a particular job.
 * @member {String} JobId
 */
Job.prototype['JobId'] = undefined;

/**
 * Timestamp of the CreateJob request in ISO8601 date format. For example \"2010-03-28T20:27:35Z\".
 * @member {Date} CreationDate
 */
Job.prototype['CreationDate'] = undefined;

/**
 * Indicates whether the job was canceled.
 * @member {Boolean} IsCanceled
 */
Job.prototype['IsCanceled'] = undefined;

/**
 * @member {module:model/JobType} JobType
 */
Job.prototype['JobType'] = undefined;






export default Job;

