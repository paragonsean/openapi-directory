# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.artifact import Artifact
from openapi_server import util


class UpdateJobOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, success: bool=None, warning_message: str=None, artifact_list: List[Artifact]=None):
        """UpdateJobOutput - a model defined in OpenAPI

        :param success: The success of this UpdateJobOutput.
        :param warning_message: The warning_message of this UpdateJobOutput.
        :param artifact_list: The artifact_list of this UpdateJobOutput.
        """
        self.openapi_types = {
            'success': bool,
            'warning_message': str,
            'artifact_list': List[Artifact]
        }

        self.attribute_map = {
            'success': 'Success',
            'warning_message': 'WarningMessage',
            'artifact_list': 'ArtifactList'
        }

        self._success = success
        self._warning_message = warning_message
        self._artifact_list = artifact_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateJobOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateJobOutput of this UpdateJobOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def success(self):
        """Gets the success of this UpdateJobOutput.

        Specifies whether (true) or not (false) AWS Import/Export updated your job.

        :return: The success of this UpdateJobOutput.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this UpdateJobOutput.

        Specifies whether (true) or not (false) AWS Import/Export updated your job.

        :param success: The success of this UpdateJobOutput.
        :type success: bool
        """

        self._success = success

    @property
    def warning_message(self):
        """Gets the warning_message of this UpdateJobOutput.

        An optional message notifying you of non-fatal issues with the job, such as use of an incompatible Amazon S3 bucket name.

        :return: The warning_message of this UpdateJobOutput.
        :rtype: str
        """
        return self._warning_message

    @warning_message.setter
    def warning_message(self, warning_message):
        """Sets the warning_message of this UpdateJobOutput.

        An optional message notifying you of non-fatal issues with the job, such as use of an incompatible Amazon S3 bucket name.

        :param warning_message: The warning_message of this UpdateJobOutput.
        :type warning_message: str
        """

        self._warning_message = warning_message

    @property
    def artifact_list(self):
        """Gets the artifact_list of this UpdateJobOutput.

        A collection of artifacts.

        :return: The artifact_list of this UpdateJobOutput.
        :rtype: List[Artifact]
        """
        return self._artifact_list

    @artifact_list.setter
    def artifact_list(self, artifact_list):
        """Sets the artifact_list of this UpdateJobOutput.

        A collection of artifacts.

        :param artifact_list: The artifact_list of this UpdateJobOutput.
        :type artifact_list: List[Artifact]
        """

        self._artifact_list = artifact_list
