# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_type import JobType
from openapi_server import util


class Job(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_id: str=None, creation_date: datetime=None, is_canceled: bool=None, job_type: JobType=None):
        """Job - a model defined in OpenAPI

        :param job_id: The job_id of this Job.
        :param creation_date: The creation_date of this Job.
        :param is_canceled: The is_canceled of this Job.
        :param job_type: The job_type of this Job.
        """
        self.openapi_types = {
            'job_id': str,
            'creation_date': datetime,
            'is_canceled': bool,
            'job_type': JobType
        }

        self.attribute_map = {
            'job_id': 'JobId',
            'creation_date': 'CreationDate',
            'is_canceled': 'IsCanceled',
            'job_type': 'JobType'
        }

        self._job_id = job_id
        self._creation_date = creation_date
        self._is_canceled = is_canceled
        self._job_type = job_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Job':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Job of this Job.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_id(self):
        """Gets the job_id of this Job.

        A unique identifier which refers to a particular job.

        :return: The job_id of this Job.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this Job.

        A unique identifier which refers to a particular job.

        :param job_id: The job_id of this Job.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def creation_date(self):
        """Gets the creation_date of this Job.

        Timestamp of the CreateJob request in ISO8601 date format. For example \"2010-03-28T20:27:35Z\".

        :return: The creation_date of this Job.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this Job.

        Timestamp of the CreateJob request in ISO8601 date format. For example \"2010-03-28T20:27:35Z\".

        :param creation_date: The creation_date of this Job.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def is_canceled(self):
        """Gets the is_canceled of this Job.

        Indicates whether the job was canceled.

        :return: The is_canceled of this Job.
        :rtype: bool
        """
        return self._is_canceled

    @is_canceled.setter
    def is_canceled(self, is_canceled):
        """Sets the is_canceled of this Job.

        Indicates whether the job was canceled.

        :param is_canceled: The is_canceled of this Job.
        :type is_canceled: bool
        """

        self._is_canceled = is_canceled

    @property
    def job_type(self):
        """Gets the job_type of this Job.


        :return: The job_type of this Job.
        :rtype: JobType
        """
        return self._job_type

    @job_type.setter
    def job_type(self, job_type):
        """Sets the job_type of this Job.


        :param job_type: The job_type of this Job.
        :type job_type: JobType
        """

        self._job_type = job_type
