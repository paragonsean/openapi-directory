# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job import Job
from openapi_server import util


class ListJobsOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, jobs: List[Job]=None, is_truncated: bool=None):
        """ListJobsOutput - a model defined in OpenAPI

        :param jobs: The jobs of this ListJobsOutput.
        :param is_truncated: The is_truncated of this ListJobsOutput.
        """
        self.openapi_types = {
            'jobs': List[Job],
            'is_truncated': bool
        }

        self.attribute_map = {
            'jobs': 'Jobs',
            'is_truncated': 'IsTruncated'
        }

        self._jobs = jobs
        self._is_truncated = is_truncated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListJobsOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListJobsOutput of this ListJobsOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def jobs(self):
        """Gets the jobs of this ListJobsOutput.

        A list container for Jobs returned by the ListJobs operation.

        :return: The jobs of this ListJobsOutput.
        :rtype: List[Job]
        """
        return self._jobs

    @jobs.setter
    def jobs(self, jobs):
        """Sets the jobs of this ListJobsOutput.

        A list container for Jobs returned by the ListJobs operation.

        :param jobs: The jobs of this ListJobsOutput.
        :type jobs: List[Job]
        """

        self._jobs = jobs

    @property
    def is_truncated(self):
        """Gets the is_truncated of this ListJobsOutput.

        Indicates whether the list of jobs was truncated. If true, then call ListJobs again using the last JobId element as the marker.

        :return: The is_truncated of this ListJobsOutput.
        :rtype: bool
        """
        return self._is_truncated

    @is_truncated.setter
    def is_truncated(self, is_truncated):
        """Sets the is_truncated of this ListJobsOutput.

        Indicates whether the list of jobs was truncated. If true, then call ListJobs again using the last JobId element as the marker.

        :param is_truncated: The is_truncated of this ListJobsOutput.
        :type is_truncated: bool
        """

        self._is_truncated = is_truncated
