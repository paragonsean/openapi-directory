# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MetricType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    DYNAMODBREADCAPACITYUTILIZATION = 'DynamoDBReadCapacityUtilization'
    DYNAMODBWRITECAPACITYUTILIZATION = 'DynamoDBWriteCapacityUtilization'
    ALBREQUESTCOUNTPERTARGET = 'ALBRequestCountPerTarget'
    RDSREADERAVERAGECPUUTILIZATION = 'RDSReaderAverageCPUUtilization'
    RDSREADERAVERAGEDATABASECONNECTIONS = 'RDSReaderAverageDatabaseConnections'
    EC2SPOTFLEETREQUESTAVERAGECPUUTILIZATION = 'EC2SpotFleetRequestAverageCPUUtilization'
    EC2SPOTFLEETREQUESTAVERAGENETWORKIN = 'EC2SpotFleetRequestAverageNetworkIn'
    EC2SPOTFLEETREQUESTAVERAGENETWORKOUT = 'EC2SpotFleetRequestAverageNetworkOut'
    SAGEMAKERVARIANTINVOCATIONSPERINSTANCE = 'SageMakerVariantInvocationsPerInstance'
    ECSSERVICEAVERAGECPUUTILIZATION = 'ECSServiceAverageCPUUtilization'
    ECSSERVICEAVERAGEMEMORYUTILIZATION = 'ECSServiceAverageMemoryUtilization'
    APPSTREAMAVERAGECAPACITYUTILIZATION = 'AppStreamAverageCapacityUtilization'
    COMPREHENDINFERENCEUTILIZATION = 'ComprehendInferenceUtilization'
    LAMBDAPROVISIONEDCONCURRENCYUTILIZATION = 'LambdaProvisionedConcurrencyUtilization'
    CASSANDRAREADCAPACITYUTILIZATION = 'CassandraReadCapacityUtilization'
    CASSANDRAWRITECAPACITYUTILIZATION = 'CassandraWriteCapacityUtilization'
    KAFKABROKERSTORAGEUTILIZATION = 'KafkaBrokerStorageUtilization'
    ELASTICACHEPRIMARYENGINECPUUTILIZATION = 'ElastiCachePrimaryEngineCPUUtilization'
    ELASTICACHEREPLICAENGINECPUUTILIZATION = 'ElastiCacheReplicaEngineCPUUtilization'
    ELASTICACHEDATABASEMEMORYUSAGECOUNTEDFOREVICTPERCENTAGE = 'ElastiCacheDatabaseMemoryUsageCountedForEvictPercentage'
    NEPTUNEREADERAVERAGECPUUTILIZATION = 'NeptuneReaderAverageCPUUtilization'
    SAGEMAKERVARIANTPROVISIONEDCONCURRENCYUTILIZATION = 'SageMakerVariantProvisionedConcurrencyUtilization'
    ELASTICACHEDATABASECAPACITYUSAGECOUNTEDFOREVICTPERCENTAGE = 'ElastiCacheDatabaseCapacityUsageCountedForEvictPercentage'

    def __init__(self):
        """MetricType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricType of this MetricType.
        """
        return util.deserialize_model(dikt, cls)
