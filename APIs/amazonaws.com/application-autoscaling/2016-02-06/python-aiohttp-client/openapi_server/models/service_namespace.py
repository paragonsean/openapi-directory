# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceNamespace(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ECS = 'ecs'
    ELASTICMAPREDUCE = 'elasticmapreduce'
    EC2 = 'ec2'
    APPSTREAM = 'appstream'
    DYNAMODB = 'dynamodb'
    RDS = 'rds'
    SAGEMAKER = 'sagemaker'
    CUSTOM_MINUS_RESOURCE = 'custom-resource'
    COMPREHEND = 'comprehend'
    LAMBDA = 'lambda'
    CASSANDRA = 'cassandra'
    KAFKA = 'kafka'
    ELASTICACHE = 'elasticache'
    NEPTUNE = 'neptune'

    def __init__(self):
        """ServiceNamespace - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceNamespace':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceNamespace of this ServiceNamespace.
        """
        return util.deserialize_model(dikt, cls)
