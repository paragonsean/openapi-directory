# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scalable_dimension import ScalableDimension
from openapi_server.models.service_namespace import ServiceNamespace
from openapi_server import util


class DescribeScalableTargetsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_namespace: ServiceNamespace=None, resource_ids: List=None, scalable_dimension: ScalableDimension=None, max_results: int=None, next_token: str=None):
        """DescribeScalableTargetsRequest - a model defined in OpenAPI

        :param service_namespace: The service_namespace of this DescribeScalableTargetsRequest.
        :param resource_ids: The resource_ids of this DescribeScalableTargetsRequest.
        :param scalable_dimension: The scalable_dimension of this DescribeScalableTargetsRequest.
        :param max_results: The max_results of this DescribeScalableTargetsRequest.
        :param next_token: The next_token of this DescribeScalableTargetsRequest.
        """
        self.openapi_types = {
            'service_namespace': ServiceNamespace,
            'resource_ids': List,
            'scalable_dimension': ScalableDimension,
            'max_results': int,
            'next_token': str
        }

        self.attribute_map = {
            'service_namespace': 'ServiceNamespace',
            'resource_ids': 'ResourceIds',
            'scalable_dimension': 'ScalableDimension',
            'max_results': 'MaxResults',
            'next_token': 'NextToken'
        }

        self._service_namespace = service_namespace
        self._resource_ids = resource_ids
        self._scalable_dimension = scalable_dimension
        self._max_results = max_results
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeScalableTargetsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeScalableTargetsRequest of this DescribeScalableTargetsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_namespace(self):
        """Gets the service_namespace of this DescribeScalableTargetsRequest.


        :return: The service_namespace of this DescribeScalableTargetsRequest.
        :rtype: ServiceNamespace
        """
        return self._service_namespace

    @service_namespace.setter
    def service_namespace(self, service_namespace):
        """Sets the service_namespace of this DescribeScalableTargetsRequest.


        :param service_namespace: The service_namespace of this DescribeScalableTargetsRequest.
        :type service_namespace: ServiceNamespace
        """
        if service_namespace is None:
            raise ValueError("Invalid value for `service_namespace`, must not be `None`")

        self._service_namespace = service_namespace

    @property
    def resource_ids(self):
        """Gets the resource_ids of this DescribeScalableTargetsRequest.


        :return: The resource_ids of this DescribeScalableTargetsRequest.
        :rtype: List
        """
        return self._resource_ids

    @resource_ids.setter
    def resource_ids(self, resource_ids):
        """Sets the resource_ids of this DescribeScalableTargetsRequest.


        :param resource_ids: The resource_ids of this DescribeScalableTargetsRequest.
        :type resource_ids: List
        """

        self._resource_ids = resource_ids

    @property
    def scalable_dimension(self):
        """Gets the scalable_dimension of this DescribeScalableTargetsRequest.


        :return: The scalable_dimension of this DescribeScalableTargetsRequest.
        :rtype: ScalableDimension
        """
        return self._scalable_dimension

    @scalable_dimension.setter
    def scalable_dimension(self, scalable_dimension):
        """Sets the scalable_dimension of this DescribeScalableTargetsRequest.


        :param scalable_dimension: The scalable_dimension of this DescribeScalableTargetsRequest.
        :type scalable_dimension: ScalableDimension
        """

        self._scalable_dimension = scalable_dimension

    @property
    def max_results(self):
        """Gets the max_results of this DescribeScalableTargetsRequest.


        :return: The max_results of this DescribeScalableTargetsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this DescribeScalableTargetsRequest.


        :param max_results: The max_results of this DescribeScalableTargetsRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this DescribeScalableTargetsRequest.


        :return: The next_token of this DescribeScalableTargetsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeScalableTargetsRequest.


        :param next_token: The next_token of this DescribeScalableTargetsRequest.
        :type next_token: str
        """

        self._next_token = next_token
