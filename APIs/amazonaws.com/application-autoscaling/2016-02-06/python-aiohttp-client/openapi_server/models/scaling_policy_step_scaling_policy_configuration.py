# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.adjustment_type import AdjustmentType
from openapi_server.models.metric_aggregation_type import MetricAggregationType
from openapi_server import util


class ScalingPolicyStepScalingPolicyConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adjustment_type: AdjustmentType=None, step_adjustments: List=None, min_adjustment_magnitude: int=None, cooldown: int=None, metric_aggregation_type: MetricAggregationType=None):
        """ScalingPolicyStepScalingPolicyConfiguration - a model defined in OpenAPI

        :param adjustment_type: The adjustment_type of this ScalingPolicyStepScalingPolicyConfiguration.
        :param step_adjustments: The step_adjustments of this ScalingPolicyStepScalingPolicyConfiguration.
        :param min_adjustment_magnitude: The min_adjustment_magnitude of this ScalingPolicyStepScalingPolicyConfiguration.
        :param cooldown: The cooldown of this ScalingPolicyStepScalingPolicyConfiguration.
        :param metric_aggregation_type: The metric_aggregation_type of this ScalingPolicyStepScalingPolicyConfiguration.
        """
        self.openapi_types = {
            'adjustment_type': AdjustmentType,
            'step_adjustments': List,
            'min_adjustment_magnitude': int,
            'cooldown': int,
            'metric_aggregation_type': MetricAggregationType
        }

        self.attribute_map = {
            'adjustment_type': 'AdjustmentType',
            'step_adjustments': 'StepAdjustments',
            'min_adjustment_magnitude': 'MinAdjustmentMagnitude',
            'cooldown': 'Cooldown',
            'metric_aggregation_type': 'MetricAggregationType'
        }

        self._adjustment_type = adjustment_type
        self._step_adjustments = step_adjustments
        self._min_adjustment_magnitude = min_adjustment_magnitude
        self._cooldown = cooldown
        self._metric_aggregation_type = metric_aggregation_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScalingPolicyStepScalingPolicyConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScalingPolicy_StepScalingPolicyConfiguration of this ScalingPolicyStepScalingPolicyConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adjustment_type(self):
        """Gets the adjustment_type of this ScalingPolicyStepScalingPolicyConfiguration.


        :return: The adjustment_type of this ScalingPolicyStepScalingPolicyConfiguration.
        :rtype: AdjustmentType
        """
        return self._adjustment_type

    @adjustment_type.setter
    def adjustment_type(self, adjustment_type):
        """Sets the adjustment_type of this ScalingPolicyStepScalingPolicyConfiguration.


        :param adjustment_type: The adjustment_type of this ScalingPolicyStepScalingPolicyConfiguration.
        :type adjustment_type: AdjustmentType
        """

        self._adjustment_type = adjustment_type

    @property
    def step_adjustments(self):
        """Gets the step_adjustments of this ScalingPolicyStepScalingPolicyConfiguration.


        :return: The step_adjustments of this ScalingPolicyStepScalingPolicyConfiguration.
        :rtype: List
        """
        return self._step_adjustments

    @step_adjustments.setter
    def step_adjustments(self, step_adjustments):
        """Sets the step_adjustments of this ScalingPolicyStepScalingPolicyConfiguration.


        :param step_adjustments: The step_adjustments of this ScalingPolicyStepScalingPolicyConfiguration.
        :type step_adjustments: List
        """

        self._step_adjustments = step_adjustments

    @property
    def min_adjustment_magnitude(self):
        """Gets the min_adjustment_magnitude of this ScalingPolicyStepScalingPolicyConfiguration.


        :return: The min_adjustment_magnitude of this ScalingPolicyStepScalingPolicyConfiguration.
        :rtype: int
        """
        return self._min_adjustment_magnitude

    @min_adjustment_magnitude.setter
    def min_adjustment_magnitude(self, min_adjustment_magnitude):
        """Sets the min_adjustment_magnitude of this ScalingPolicyStepScalingPolicyConfiguration.


        :param min_adjustment_magnitude: The min_adjustment_magnitude of this ScalingPolicyStepScalingPolicyConfiguration.
        :type min_adjustment_magnitude: int
        """

        self._min_adjustment_magnitude = min_adjustment_magnitude

    @property
    def cooldown(self):
        """Gets the cooldown of this ScalingPolicyStepScalingPolicyConfiguration.


        :return: The cooldown of this ScalingPolicyStepScalingPolicyConfiguration.
        :rtype: int
        """
        return self._cooldown

    @cooldown.setter
    def cooldown(self, cooldown):
        """Sets the cooldown of this ScalingPolicyStepScalingPolicyConfiguration.


        :param cooldown: The cooldown of this ScalingPolicyStepScalingPolicyConfiguration.
        :type cooldown: int
        """

        self._cooldown = cooldown

    @property
    def metric_aggregation_type(self):
        """Gets the metric_aggregation_type of this ScalingPolicyStepScalingPolicyConfiguration.


        :return: The metric_aggregation_type of this ScalingPolicyStepScalingPolicyConfiguration.
        :rtype: MetricAggregationType
        """
        return self._metric_aggregation_type

    @metric_aggregation_type.setter
    def metric_aggregation_type(self, metric_aggregation_type):
        """Sets the metric_aggregation_type of this ScalingPolicyStepScalingPolicyConfiguration.


        :param metric_aggregation_type: The metric_aggregation_type of this ScalingPolicyStepScalingPolicyConfiguration.
        :type metric_aggregation_type: MetricAggregationType
        """

        self._metric_aggregation_type = metric_aggregation_type
