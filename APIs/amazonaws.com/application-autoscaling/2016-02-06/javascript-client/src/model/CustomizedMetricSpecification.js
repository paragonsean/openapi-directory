/**
 * Application Auto Scaling
 * <p>With Application Auto Scaling, you can configure automatic scaling for the following resources:</p> <ul> <li> <p>Amazon AppStream 2.0 fleets</p> </li> <li> <p>Amazon Aurora Replicas</p> </li> <li> <p>Amazon Comprehend document classification and entity recognizer endpoints</p> </li> <li> <p>Amazon DynamoDB tables and global secondary indexes throughput capacity</p> </li> <li> <p>Amazon ECS services</p> </li> <li> <p>Amazon ElastiCache for Redis clusters (replication groups)</p> </li> <li> <p>Amazon EMR clusters</p> </li> <li> <p>Amazon Keyspaces (for Apache Cassandra) tables</p> </li> <li> <p>Lambda function provisioned concurrency</p> </li> <li> <p>Amazon Managed Streaming for Apache Kafka broker storage</p> </li> <li> <p>Amazon Neptune clusters</p> </li> <li> <p>Amazon SageMaker endpoint variants</p> </li> <li> <p>Amazon SageMaker Serverless endpoint provisioned concurrency</p> </li> <li> <p>Spot Fleets (Amazon EC2)</p> </li> <li> <p>Custom resources provided by your own applications or services</p> </li> </ul> <p>To learn more about Application Auto Scaling, see the <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html\">Application Auto Scaling User Guide</a>.</p> <p> <b>API Summary</b> </p> <p>The Application Auto Scaling service API includes three key sets of actions: </p> <ul> <li> <p>Register and manage scalable targets - Register Amazon Web Services or custom resources as scalable targets (a resource that Application Auto Scaling can scale), set minimum and maximum capacity limits, and retrieve information on existing scalable targets.</p> </li> <li> <p>Configure and manage automatic scaling - Define scaling policies to dynamically scale your resources in response to CloudWatch alarms, schedule one-time or recurring scaling actions, and retrieve your recent scaling activity history.</p> </li> <li> <p>Suspend and resume scaling - Temporarily suspend and later resume automatic scaling by calling the <a href=\"https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html\">RegisterScalableTarget</a> API action for any Application Auto Scaling scalable target. You can suspend and resume (individually or in combination) scale-out activities that are triggered by a scaling policy, scale-in activities that are triggered by a scaling policy, and scheduled scaling.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-02-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MetricStatistic from './MetricStatistic';

/**
 * The CustomizedMetricSpecification model module.
 * @module model/CustomizedMetricSpecification
 * @version 2016-02-06
 */
class CustomizedMetricSpecification {
    /**
     * Constructs a new <code>CustomizedMetricSpecification</code>.
     * &lt;p&gt;Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Application Auto Scaling.&lt;/p&gt; &lt;p&gt;For information about the available metrics for a service, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html\&quot;&gt;Amazon Web Services services that publish CloudWatch metrics&lt;/a&gt; in the &lt;i&gt;Amazon CloudWatch User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;To create your customized metric specification:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html\&quot;&gt;Publish custom metrics&lt;/a&gt; in the &lt;i&gt;Amazon CloudWatch User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases, and increase when capacity decreases. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information about the CloudWatch terminology below, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html\&quot;&gt;Amazon CloudWatch concepts&lt;/a&gt; in the &lt;i&gt;Amazon CloudWatch User Guide&lt;/i&gt;. &lt;/p&gt;
     * @alias module:model/CustomizedMetricSpecification
     */
    constructor() { 
        
        CustomizedMetricSpecification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomizedMetricSpecification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomizedMetricSpecification} obj Optional instance to populate.
     * @return {module:model/CustomizedMetricSpecification} The populated <code>CustomizedMetricSpecification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomizedMetricSpecification();

            if (data.hasOwnProperty('MetricName')) {
                obj['MetricName'] = ApiClient.convertToType(data['MetricName'], 'String');
            }
            if (data.hasOwnProperty('Namespace')) {
                obj['Namespace'] = ApiClient.convertToType(data['Namespace'], 'String');
            }
            if (data.hasOwnProperty('Dimensions')) {
                obj['Dimensions'] = ApiClient.convertToType(data['Dimensions'], Array);
            }
            if (data.hasOwnProperty('Statistic')) {
                obj['Statistic'] = ApiClient.convertToType(data['Statistic'], MetricStatistic);
            }
            if (data.hasOwnProperty('Unit')) {
                obj['Unit'] = ApiClient.convertToType(data['Unit'], 'String');
            }
            if (data.hasOwnProperty('Metrics')) {
                obj['Metrics'] = ApiClient.convertToType(data['Metrics'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomizedMetricSpecification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomizedMetricSpecification</code>.
     */
    static validateJSON(data) {
        // validate the optional field `MetricName`
        if (data['MetricName']) { // data not null
          String.validateJSON(data['MetricName']);
        }
        // validate the optional field `Namespace`
        if (data['Namespace']) { // data not null
          String.validateJSON(data['Namespace']);
        }
        // validate the optional field `Dimensions`
        if (data['Dimensions']) { // data not null
          Array.validateJSON(data['Dimensions']);
        }
        // validate the optional field `Statistic`
        if (data['Statistic']) { // data not null
          MetricStatistic.validateJSON(data['Statistic']);
        }
        // validate the optional field `Unit`
        if (data['Unit']) { // data not null
          String.validateJSON(data['Unit']);
        }
        // validate the optional field `Metrics`
        if (data['Metrics']) { // data not null
          Array.validateJSON(data['Metrics']);
        }

        return true;
    }


}



/**
 * @member {String} MetricName
 */
CustomizedMetricSpecification.prototype['MetricName'] = undefined;

/**
 * @member {String} Namespace
 */
CustomizedMetricSpecification.prototype['Namespace'] = undefined;

/**
 * @member {Array} Dimensions
 */
CustomizedMetricSpecification.prototype['Dimensions'] = undefined;

/**
 * @member {module:model/MetricStatistic} Statistic
 */
CustomizedMetricSpecification.prototype['Statistic'] = undefined;

/**
 * @member {String} Unit
 */
CustomizedMetricSpecification.prototype['Unit'] = undefined;

/**
 * @member {Array} Metrics
 */
CustomizedMetricSpecification.prototype['Metrics'] = undefined;






export default CustomizedMetricSpecification;

