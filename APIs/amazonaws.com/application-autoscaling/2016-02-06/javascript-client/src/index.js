/**
 * Application Auto Scaling
 * <p>With Application Auto Scaling, you can configure automatic scaling for the following resources:</p> <ul> <li> <p>Amazon AppStream 2.0 fleets</p> </li> <li> <p>Amazon Aurora Replicas</p> </li> <li> <p>Amazon Comprehend document classification and entity recognizer endpoints</p> </li> <li> <p>Amazon DynamoDB tables and global secondary indexes throughput capacity</p> </li> <li> <p>Amazon ECS services</p> </li> <li> <p>Amazon ElastiCache for Redis clusters (replication groups)</p> </li> <li> <p>Amazon EMR clusters</p> </li> <li> <p>Amazon Keyspaces (for Apache Cassandra) tables</p> </li> <li> <p>Lambda function provisioned concurrency</p> </li> <li> <p>Amazon Managed Streaming for Apache Kafka broker storage</p> </li> <li> <p>Amazon Neptune clusters</p> </li> <li> <p>Amazon SageMaker endpoint variants</p> </li> <li> <p>Amazon SageMaker Serverless endpoint provisioned concurrency</p> </li> <li> <p>Spot Fleets (Amazon EC2)</p> </li> <li> <p>Custom resources provided by your own applications or services</p> </li> </ul> <p>To learn more about Application Auto Scaling, see the <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html\">Application Auto Scaling User Guide</a>.</p> <p> <b>API Summary</b> </p> <p>The Application Auto Scaling service API includes three key sets of actions: </p> <ul> <li> <p>Register and manage scalable targets - Register Amazon Web Services or custom resources as scalable targets (a resource that Application Auto Scaling can scale), set minimum and maximum capacity limits, and retrieve information on existing scalable targets.</p> </li> <li> <p>Configure and manage automatic scaling - Define scaling policies to dynamically scale your resources in response to CloudWatch alarms, schedule one-time or recurring scaling actions, and retrieve your recent scaling activity history.</p> </li> <li> <p>Suspend and resume scaling - Temporarily suspend and later resume automatic scaling by calling the <a href=\"https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html\">RegisterScalableTarget</a> API action for any Application Auto Scaling scalable target. You can suspend and resume (individually or in combination) scale-out activities that are triggered by a scaling policy, scale-in activities that are triggered by a scaling policy, and scheduled scaling.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-02-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AdjustmentType from './model/AdjustmentType';
import Alarm from './model/Alarm';
import CustomizedMetricSpecification from './model/CustomizedMetricSpecification';
import DeleteScalingPolicyRequest from './model/DeleteScalingPolicyRequest';
import DeleteScheduledActionRequest from './model/DeleteScheduledActionRequest';
import DeregisterScalableTargetRequest from './model/DeregisterScalableTargetRequest';
import DescribeScalableTargetsRequest from './model/DescribeScalableTargetsRequest';
import DescribeScalableTargetsResponse from './model/DescribeScalableTargetsResponse';
import DescribeScalingActivitiesRequest from './model/DescribeScalingActivitiesRequest';
import DescribeScalingActivitiesResponse from './model/DescribeScalingActivitiesResponse';
import DescribeScalingPoliciesRequest from './model/DescribeScalingPoliciesRequest';
import DescribeScalingPoliciesResponse from './model/DescribeScalingPoliciesResponse';
import DescribeScheduledActionsRequest from './model/DescribeScheduledActionsRequest';
import DescribeScheduledActionsResponse from './model/DescribeScheduledActionsResponse';
import ListTagsForResourceRequest from './model/ListTagsForResourceRequest';
import ListTagsForResourceResponse from './model/ListTagsForResourceResponse';
import MetricAggregationType from './model/MetricAggregationType';
import MetricDimension from './model/MetricDimension';
import MetricStatistic from './model/MetricStatistic';
import MetricType from './model/MetricType';
import NotScaledReason from './model/NotScaledReason';
import PolicyType from './model/PolicyType';
import PredefinedMetricSpecification from './model/PredefinedMetricSpecification';
import PutScalingPolicyRequest from './model/PutScalingPolicyRequest';
import PutScalingPolicyRequestStepScalingPolicyConfiguration from './model/PutScalingPolicyRequestStepScalingPolicyConfiguration';
import PutScalingPolicyRequestTargetTrackingScalingPolicyConfiguration from './model/PutScalingPolicyRequestTargetTrackingScalingPolicyConfiguration';
import PutScalingPolicyResponse from './model/PutScalingPolicyResponse';
import PutScheduledActionRequest from './model/PutScheduledActionRequest';
import PutScheduledActionRequestScalableTargetAction from './model/PutScheduledActionRequestScalableTargetAction';
import RegisterScalableTargetRequest from './model/RegisterScalableTargetRequest';
import RegisterScalableTargetRequestSuspendedState from './model/RegisterScalableTargetRequestSuspendedState';
import RegisterScalableTargetResponse from './model/RegisterScalableTargetResponse';
import ScalableDimension from './model/ScalableDimension';
import ScalableTarget from './model/ScalableTarget';
import ScalableTargetAction from './model/ScalableTargetAction';
import ScalableTargetSuspendedState from './model/ScalableTargetSuspendedState';
import ScalingActivity from './model/ScalingActivity';
import ScalingActivityStatusCode from './model/ScalingActivityStatusCode';
import ScalingPolicy from './model/ScalingPolicy';
import ScalingPolicyStepScalingPolicyConfiguration from './model/ScalingPolicyStepScalingPolicyConfiguration';
import ScalingPolicyTargetTrackingScalingPolicyConfiguration from './model/ScalingPolicyTargetTrackingScalingPolicyConfiguration';
import ScheduledAction from './model/ScheduledAction';
import ServiceNamespace from './model/ServiceNamespace';
import StepAdjustment from './model/StepAdjustment';
import StepScalingPolicyConfiguration from './model/StepScalingPolicyConfiguration';
import SuspendedState from './model/SuspendedState';
import TagResourceRequest from './model/TagResourceRequest';
import TargetTrackingMetric from './model/TargetTrackingMetric';
import TargetTrackingMetricDataQuery from './model/TargetTrackingMetricDataQuery';
import TargetTrackingMetricDataQueryMetricStat from './model/TargetTrackingMetricDataQueryMetricStat';
import TargetTrackingMetricDimension from './model/TargetTrackingMetricDimension';
import TargetTrackingMetricStat from './model/TargetTrackingMetricStat';
import TargetTrackingMetricStatMetric from './model/TargetTrackingMetricStatMetric';
import TargetTrackingScalingPolicyConfiguration from './model/TargetTrackingScalingPolicyConfiguration';
import TargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification from './model/TargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification';
import TargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification from './model/TargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification';
import UntagResourceRequest from './model/UntagResourceRequest';
import DefaultApi from './api/DefaultApi';


/**
* &lt;p&gt;With Application Auto Scaling, you can configure automatic scaling for the following resources:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Amazon AppStream 2.0 fleets&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon Aurora Replicas&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon Comprehend document classification and entity recognizer endpoints&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon DynamoDB tables and global secondary indexes throughput capacity&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon ECS services&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon ElastiCache for Redis clusters (replication groups)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon EMR clusters&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon Keyspaces (for Apache Cassandra) tables&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Lambda function provisioned concurrency&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon Managed Streaming for Apache Kafka broker storage&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon Neptune clusters&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon SageMaker endpoint variants&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Amazon SageMaker Serverless endpoint provisioned concurrency&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Spot Fleets (Amazon EC2)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Custom resources provided by your own applications or services&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To learn more about Application Auto Scaling, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html\&quot;&gt;Application Auto Scaling User Guide&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;API Summary&lt;/b&gt; &lt;/p&gt; &lt;p&gt;The Application Auto Scaling service API includes three key sets of actions: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Register and manage scalable targets - Register Amazon Web Services or custom resources as scalable targets (a resource that Application Auto Scaling can scale), set minimum and maximum capacity limits, and retrieve information on existing scalable targets.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Configure and manage automatic scaling - Define scaling policies to dynamically scale your resources in response to CloudWatch alarms, schedule one-time or recurring scaling actions, and retrieve your recent scaling activity history.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Suspend and resume scaling - Temporarily suspend and later resume automatic scaling by calling the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html\&quot;&gt;RegisterScalableTarget&lt;/a&gt; API action for any Application Auto Scaling scalable target. You can suspend and resume (individually or in combination) scale-out activities that are triggered by a scaling policy, scale-in activities that are triggered by a scaling policy, and scheduled scaling.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApplicationAutoScaling = require('index'); // See note below*.
* var xxxSvc = new ApplicationAutoScaling.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApplicationAutoScaling.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApplicationAutoScaling.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApplicationAutoScaling.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2016-02-06
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdjustmentType model constructor.
     * @property {module:model/AdjustmentType}
     */
    AdjustmentType,

    /**
     * The Alarm model constructor.
     * @property {module:model/Alarm}
     */
    Alarm,

    /**
     * The CustomizedMetricSpecification model constructor.
     * @property {module:model/CustomizedMetricSpecification}
     */
    CustomizedMetricSpecification,

    /**
     * The DeleteScalingPolicyRequest model constructor.
     * @property {module:model/DeleteScalingPolicyRequest}
     */
    DeleteScalingPolicyRequest,

    /**
     * The DeleteScheduledActionRequest model constructor.
     * @property {module:model/DeleteScheduledActionRequest}
     */
    DeleteScheduledActionRequest,

    /**
     * The DeregisterScalableTargetRequest model constructor.
     * @property {module:model/DeregisterScalableTargetRequest}
     */
    DeregisterScalableTargetRequest,

    /**
     * The DescribeScalableTargetsRequest model constructor.
     * @property {module:model/DescribeScalableTargetsRequest}
     */
    DescribeScalableTargetsRequest,

    /**
     * The DescribeScalableTargetsResponse model constructor.
     * @property {module:model/DescribeScalableTargetsResponse}
     */
    DescribeScalableTargetsResponse,

    /**
     * The DescribeScalingActivitiesRequest model constructor.
     * @property {module:model/DescribeScalingActivitiesRequest}
     */
    DescribeScalingActivitiesRequest,

    /**
     * The DescribeScalingActivitiesResponse model constructor.
     * @property {module:model/DescribeScalingActivitiesResponse}
     */
    DescribeScalingActivitiesResponse,

    /**
     * The DescribeScalingPoliciesRequest model constructor.
     * @property {module:model/DescribeScalingPoliciesRequest}
     */
    DescribeScalingPoliciesRequest,

    /**
     * The DescribeScalingPoliciesResponse model constructor.
     * @property {module:model/DescribeScalingPoliciesResponse}
     */
    DescribeScalingPoliciesResponse,

    /**
     * The DescribeScheduledActionsRequest model constructor.
     * @property {module:model/DescribeScheduledActionsRequest}
     */
    DescribeScheduledActionsRequest,

    /**
     * The DescribeScheduledActionsResponse model constructor.
     * @property {module:model/DescribeScheduledActionsResponse}
     */
    DescribeScheduledActionsResponse,

    /**
     * The ListTagsForResourceRequest model constructor.
     * @property {module:model/ListTagsForResourceRequest}
     */
    ListTagsForResourceRequest,

    /**
     * The ListTagsForResourceResponse model constructor.
     * @property {module:model/ListTagsForResourceResponse}
     */
    ListTagsForResourceResponse,

    /**
     * The MetricAggregationType model constructor.
     * @property {module:model/MetricAggregationType}
     */
    MetricAggregationType,

    /**
     * The MetricDimension model constructor.
     * @property {module:model/MetricDimension}
     */
    MetricDimension,

    /**
     * The MetricStatistic model constructor.
     * @property {module:model/MetricStatistic}
     */
    MetricStatistic,

    /**
     * The MetricType model constructor.
     * @property {module:model/MetricType}
     */
    MetricType,

    /**
     * The NotScaledReason model constructor.
     * @property {module:model/NotScaledReason}
     */
    NotScaledReason,

    /**
     * The PolicyType model constructor.
     * @property {module:model/PolicyType}
     */
    PolicyType,

    /**
     * The PredefinedMetricSpecification model constructor.
     * @property {module:model/PredefinedMetricSpecification}
     */
    PredefinedMetricSpecification,

    /**
     * The PutScalingPolicyRequest model constructor.
     * @property {module:model/PutScalingPolicyRequest}
     */
    PutScalingPolicyRequest,

    /**
     * The PutScalingPolicyRequestStepScalingPolicyConfiguration model constructor.
     * @property {module:model/PutScalingPolicyRequestStepScalingPolicyConfiguration}
     */
    PutScalingPolicyRequestStepScalingPolicyConfiguration,

    /**
     * The PutScalingPolicyRequestTargetTrackingScalingPolicyConfiguration model constructor.
     * @property {module:model/PutScalingPolicyRequestTargetTrackingScalingPolicyConfiguration}
     */
    PutScalingPolicyRequestTargetTrackingScalingPolicyConfiguration,

    /**
     * The PutScalingPolicyResponse model constructor.
     * @property {module:model/PutScalingPolicyResponse}
     */
    PutScalingPolicyResponse,

    /**
     * The PutScheduledActionRequest model constructor.
     * @property {module:model/PutScheduledActionRequest}
     */
    PutScheduledActionRequest,

    /**
     * The PutScheduledActionRequestScalableTargetAction model constructor.
     * @property {module:model/PutScheduledActionRequestScalableTargetAction}
     */
    PutScheduledActionRequestScalableTargetAction,

    /**
     * The RegisterScalableTargetRequest model constructor.
     * @property {module:model/RegisterScalableTargetRequest}
     */
    RegisterScalableTargetRequest,

    /**
     * The RegisterScalableTargetRequestSuspendedState model constructor.
     * @property {module:model/RegisterScalableTargetRequestSuspendedState}
     */
    RegisterScalableTargetRequestSuspendedState,

    /**
     * The RegisterScalableTargetResponse model constructor.
     * @property {module:model/RegisterScalableTargetResponse}
     */
    RegisterScalableTargetResponse,

    /**
     * The ScalableDimension model constructor.
     * @property {module:model/ScalableDimension}
     */
    ScalableDimension,

    /**
     * The ScalableTarget model constructor.
     * @property {module:model/ScalableTarget}
     */
    ScalableTarget,

    /**
     * The ScalableTargetAction model constructor.
     * @property {module:model/ScalableTargetAction}
     */
    ScalableTargetAction,

    /**
     * The ScalableTargetSuspendedState model constructor.
     * @property {module:model/ScalableTargetSuspendedState}
     */
    ScalableTargetSuspendedState,

    /**
     * The ScalingActivity model constructor.
     * @property {module:model/ScalingActivity}
     */
    ScalingActivity,

    /**
     * The ScalingActivityStatusCode model constructor.
     * @property {module:model/ScalingActivityStatusCode}
     */
    ScalingActivityStatusCode,

    /**
     * The ScalingPolicy model constructor.
     * @property {module:model/ScalingPolicy}
     */
    ScalingPolicy,

    /**
     * The ScalingPolicyStepScalingPolicyConfiguration model constructor.
     * @property {module:model/ScalingPolicyStepScalingPolicyConfiguration}
     */
    ScalingPolicyStepScalingPolicyConfiguration,

    /**
     * The ScalingPolicyTargetTrackingScalingPolicyConfiguration model constructor.
     * @property {module:model/ScalingPolicyTargetTrackingScalingPolicyConfiguration}
     */
    ScalingPolicyTargetTrackingScalingPolicyConfiguration,

    /**
     * The ScheduledAction model constructor.
     * @property {module:model/ScheduledAction}
     */
    ScheduledAction,

    /**
     * The ServiceNamespace model constructor.
     * @property {module:model/ServiceNamespace}
     */
    ServiceNamespace,

    /**
     * The StepAdjustment model constructor.
     * @property {module:model/StepAdjustment}
     */
    StepAdjustment,

    /**
     * The StepScalingPolicyConfiguration model constructor.
     * @property {module:model/StepScalingPolicyConfiguration}
     */
    StepScalingPolicyConfiguration,

    /**
     * The SuspendedState model constructor.
     * @property {module:model/SuspendedState}
     */
    SuspendedState,

    /**
     * The TagResourceRequest model constructor.
     * @property {module:model/TagResourceRequest}
     */
    TagResourceRequest,

    /**
     * The TargetTrackingMetric model constructor.
     * @property {module:model/TargetTrackingMetric}
     */
    TargetTrackingMetric,

    /**
     * The TargetTrackingMetricDataQuery model constructor.
     * @property {module:model/TargetTrackingMetricDataQuery}
     */
    TargetTrackingMetricDataQuery,

    /**
     * The TargetTrackingMetricDataQueryMetricStat model constructor.
     * @property {module:model/TargetTrackingMetricDataQueryMetricStat}
     */
    TargetTrackingMetricDataQueryMetricStat,

    /**
     * The TargetTrackingMetricDimension model constructor.
     * @property {module:model/TargetTrackingMetricDimension}
     */
    TargetTrackingMetricDimension,

    /**
     * The TargetTrackingMetricStat model constructor.
     * @property {module:model/TargetTrackingMetricStat}
     */
    TargetTrackingMetricStat,

    /**
     * The TargetTrackingMetricStatMetric model constructor.
     * @property {module:model/TargetTrackingMetricStatMetric}
     */
    TargetTrackingMetricStatMetric,

    /**
     * The TargetTrackingScalingPolicyConfiguration model constructor.
     * @property {module:model/TargetTrackingScalingPolicyConfiguration}
     */
    TargetTrackingScalingPolicyConfiguration,

    /**
     * The TargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification model constructor.
     * @property {module:model/TargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification}
     */
    TargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification,

    /**
     * The TargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification model constructor.
     * @property {module:model/TargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification}
     */
    TargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification,

    /**
     * The UntagResourceRequest model constructor.
     * @property {module:model/UntagResourceRequest}
     */
    UntagResourceRequest,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
