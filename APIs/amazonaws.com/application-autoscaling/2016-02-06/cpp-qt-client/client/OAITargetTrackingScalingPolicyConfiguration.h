/**
 * Application Auto Scaling
 * <p>With Application Auto Scaling, you can configure automatic scaling for the following resources:</p> <ul> <li> <p>Amazon AppStream 2.0 fleets</p> </li> <li> <p>Amazon Aurora Replicas</p> </li> <li> <p>Amazon Comprehend document classification and entity recognizer endpoints</p> </li> <li> <p>Amazon DynamoDB tables and global secondary indexes throughput capacity</p> </li> <li> <p>Amazon ECS services</p> </li> <li> <p>Amazon ElastiCache for Redis clusters (replication groups)</p> </li> <li> <p>Amazon EMR clusters</p> </li> <li> <p>Amazon Keyspaces (for Apache Cassandra) tables</p> </li> <li> <p>Lambda function provisioned concurrency</p> </li> <li> <p>Amazon Managed Streaming for Apache Kafka broker storage</p> </li> <li> <p>Amazon Neptune clusters</p> </li> <li> <p>Amazon SageMaker endpoint variants</p> </li> <li> <p>Amazon SageMaker Serverless endpoint provisioned concurrency</p> </li> <li> <p>Spot Fleets (Amazon EC2)</p> </li> <li> <p>Custom resources provided by your own applications or services</p> </li> </ul> <p>To learn more about Application Auto Scaling, see the <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html\">Application Auto Scaling User Guide</a>.</p> <p> <b>API Summary</b> </p> <p>The Application Auto Scaling service API includes three key sets of actions: </p> <ul> <li> <p>Register and manage scalable targets - Register Amazon Web Services or custom resources as scalable targets (a resource that Application Auto Scaling can scale), set minimum and maximum capacity limits, and retrieve information on existing scalable targets.</p> </li> <li> <p>Configure and manage automatic scaling - Define scaling policies to dynamically scale your resources in response to CloudWatch alarms, schedule one-time or recurring scaling actions, and retrieve your recent scaling activity history.</p> </li> <li> <p>Suspend and resume scaling - Temporarily suspend and later resume automatic scaling by calling the <a href=\"https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html\">RegisterScalableTarget</a> API action for any Application Auto Scaling scalable target. You can suspend and resume (individually or in combination) scale-out activities that are triggered by a scaling policy, scale-in activities that are triggered by a scaling policy, and scheduled scaling.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-02-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITargetTrackingScalingPolicyConfiguration.h
 *
 * &lt;p&gt;Represents a target tracking scaling policy configuration to use with Application Auto Scaling.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html\&quot;&gt;Target tracking scaling policies&lt;/a&gt; in the &lt;i&gt;Application Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAITargetTrackingScalingPolicyConfiguration_H
#define OAITargetTrackingScalingPolicyConfiguration_H

#include <QJsonObject>

#include "OAITargetTrackingScalingPolicyConfiguration_CustomizedMetricSpecification.h"
#include "OAITargetTrackingScalingPolicyConfiguration_PredefinedMetricSpecification.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITargetTrackingScalingPolicyConfiguration_PredefinedMetricSpecification;
class OAITargetTrackingScalingPolicyConfiguration_CustomizedMetricSpecification;

class OAITargetTrackingScalingPolicyConfiguration : public OAIObject {
public:
    OAITargetTrackingScalingPolicyConfiguration();
    OAITargetTrackingScalingPolicyConfiguration(QString json);
    ~OAITargetTrackingScalingPolicyConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getTargetValue() const;
    void setTargetValue(const double &target_value);
    bool is_target_value_Set() const;
    bool is_target_value_Valid() const;

    OAITargetTrackingScalingPolicyConfiguration_PredefinedMetricSpecification getPredefinedMetricSpecification() const;
    void setPredefinedMetricSpecification(const OAITargetTrackingScalingPolicyConfiguration_PredefinedMetricSpecification &predefined_metric_specification);
    bool is_predefined_metric_specification_Set() const;
    bool is_predefined_metric_specification_Valid() const;

    OAITargetTrackingScalingPolicyConfiguration_CustomizedMetricSpecification getCustomizedMetricSpecification() const;
    void setCustomizedMetricSpecification(const OAITargetTrackingScalingPolicyConfiguration_CustomizedMetricSpecification &customized_metric_specification);
    bool is_customized_metric_specification_Set() const;
    bool is_customized_metric_specification_Valid() const;

    qint32 getScaleOutCooldown() const;
    void setScaleOutCooldown(const qint32 &scale_out_cooldown);
    bool is_scale_out_cooldown_Set() const;
    bool is_scale_out_cooldown_Valid() const;

    qint32 getScaleInCooldown() const;
    void setScaleInCooldown(const qint32 &scale_in_cooldown);
    bool is_scale_in_cooldown_Set() const;
    bool is_scale_in_cooldown_Valid() const;

    bool getDisableScaleIn() const;
    void setDisableScaleIn(const bool &disable_scale_in);
    bool is_disable_scale_in_Set() const;
    bool is_disable_scale_in_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_target_value;
    bool m_target_value_isSet;
    bool m_target_value_isValid;

    OAITargetTrackingScalingPolicyConfiguration_PredefinedMetricSpecification m_predefined_metric_specification;
    bool m_predefined_metric_specification_isSet;
    bool m_predefined_metric_specification_isValid;

    OAITargetTrackingScalingPolicyConfiguration_CustomizedMetricSpecification m_customized_metric_specification;
    bool m_customized_metric_specification_isSet;
    bool m_customized_metric_specification_isValid;

    qint32 m_scale_out_cooldown;
    bool m_scale_out_cooldown_isSet;
    bool m_scale_out_cooldown_isValid;

    qint32 m_scale_in_cooldown;
    bool m_scale_in_cooldown_isSet;
    bool m_scale_in_cooldown_isValid;

    bool m_disable_scale_in;
    bool m_disable_scale_in_isSet;
    bool m_disable_scale_in_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITargetTrackingScalingPolicyConfiguration)

#endif // OAITargetTrackingScalingPolicyConfiguration_H
