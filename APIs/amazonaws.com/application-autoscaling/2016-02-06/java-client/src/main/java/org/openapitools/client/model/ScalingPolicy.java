/*
 * Application Auto Scaling
 * <p>With Application Auto Scaling, you can configure automatic scaling for the following resources:</p> <ul> <li> <p>Amazon AppStream 2.0 fleets</p> </li> <li> <p>Amazon Aurora Replicas</p> </li> <li> <p>Amazon Comprehend document classification and entity recognizer endpoints</p> </li> <li> <p>Amazon DynamoDB tables and global secondary indexes throughput capacity</p> </li> <li> <p>Amazon ECS services</p> </li> <li> <p>Amazon ElastiCache for Redis clusters (replication groups)</p> </li> <li> <p>Amazon EMR clusters</p> </li> <li> <p>Amazon Keyspaces (for Apache Cassandra) tables</p> </li> <li> <p>Lambda function provisioned concurrency</p> </li> <li> <p>Amazon Managed Streaming for Apache Kafka broker storage</p> </li> <li> <p>Amazon Neptune clusters</p> </li> <li> <p>Amazon SageMaker endpoint variants</p> </li> <li> <p>Amazon SageMaker Serverless endpoint provisioned concurrency</p> </li> <li> <p>Spot Fleets (Amazon EC2)</p> </li> <li> <p>Custom resources provided by your own applications or services</p> </li> </ul> <p>To learn more about Application Auto Scaling, see the <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html\">Application Auto Scaling User Guide</a>.</p> <p> <b>API Summary</b> </p> <p>The Application Auto Scaling service API includes three key sets of actions: </p> <ul> <li> <p>Register and manage scalable targets - Register Amazon Web Services or custom resources as scalable targets (a resource that Application Auto Scaling can scale), set minimum and maximum capacity limits, and retrieve information on existing scalable targets.</p> </li> <li> <p>Configure and manage automatic scaling - Define scaling policies to dynamically scale your resources in response to CloudWatch alarms, schedule one-time or recurring scaling actions, and retrieve your recent scaling activity history.</p> </li> <li> <p>Suspend and resume scaling - Temporarily suspend and later resume automatic scaling by calling the <a href=\"https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html\">RegisterScalableTarget</a> API action for any Application Auto Scaling scalable target. You can suspend and resume (individually or in combination) scale-out activities that are triggered by a scaling policy, scale-in activities that are triggered by a scaling policy, and scheduled scaling.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-02-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PolicyType;
import org.openapitools.client.model.ScalableDimension;
import org.openapitools.client.model.ScalingPolicyStepScalingPolicyConfiguration;
import org.openapitools.client.model.ScalingPolicyTargetTrackingScalingPolicyConfiguration;
import org.openapitools.client.model.ServiceNamespace;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Represents a scaling policy to use with Application Auto Scaling.&lt;/p&gt; &lt;p&gt;For more information about configuring scaling policies for a specific service, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/autoscaling/application/userguide/integrated-services-list.html\&quot;&gt;Amazon Web Services services that you can use with Application Auto Scaling&lt;/a&gt; in the &lt;i&gt;Application Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:07.248597-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ScalingPolicy {
  public static final String SERIALIZED_NAME_POLICY_A_R_N = "PolicyARN";
  @SerializedName(SERIALIZED_NAME_POLICY_A_R_N)
  private String policyARN;

  public static final String SERIALIZED_NAME_POLICY_NAME = "PolicyName";
  @SerializedName(SERIALIZED_NAME_POLICY_NAME)
  private String policyName;

  public static final String SERIALIZED_NAME_SERVICE_NAMESPACE = "ServiceNamespace";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAMESPACE)
  private ServiceNamespace serviceNamespace;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "ResourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_SCALABLE_DIMENSION = "ScalableDimension";
  @SerializedName(SERIALIZED_NAME_SCALABLE_DIMENSION)
  private ScalableDimension scalableDimension;

  public static final String SERIALIZED_NAME_POLICY_TYPE = "PolicyType";
  @SerializedName(SERIALIZED_NAME_POLICY_TYPE)
  private PolicyType policyType;

  public static final String SERIALIZED_NAME_STEP_SCALING_POLICY_CONFIGURATION = "StepScalingPolicyConfiguration";
  @SerializedName(SERIALIZED_NAME_STEP_SCALING_POLICY_CONFIGURATION)
  private ScalingPolicyStepScalingPolicyConfiguration stepScalingPolicyConfiguration;

  public static final String SERIALIZED_NAME_TARGET_TRACKING_SCALING_POLICY_CONFIGURATION = "TargetTrackingScalingPolicyConfiguration";
  @SerializedName(SERIALIZED_NAME_TARGET_TRACKING_SCALING_POLICY_CONFIGURATION)
  private ScalingPolicyTargetTrackingScalingPolicyConfiguration targetTrackingScalingPolicyConfiguration;

  public static final String SERIALIZED_NAME_ALARMS = "Alarms";
  @SerializedName(SERIALIZED_NAME_ALARMS)
  private List alarms;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public ScalingPolicy() {
  }

  public ScalingPolicy policyARN(String policyARN) {
    this.policyARN = policyARN;
    return this;
  }

  /**
   * Get policyARN
   * @return policyARN
   */
  @javax.annotation.Nonnull
  public String getPolicyARN() {
    return policyARN;
  }

  public void setPolicyARN(String policyARN) {
    this.policyARN = policyARN;
  }


  public ScalingPolicy policyName(String policyName) {
    this.policyName = policyName;
    return this;
  }

  /**
   * Get policyName
   * @return policyName
   */
  @javax.annotation.Nonnull
  public String getPolicyName() {
    return policyName;
  }

  public void setPolicyName(String policyName) {
    this.policyName = policyName;
  }


  public ScalingPolicy serviceNamespace(ServiceNamespace serviceNamespace) {
    this.serviceNamespace = serviceNamespace;
    return this;
  }

  /**
   * Get serviceNamespace
   * @return serviceNamespace
   */
  @javax.annotation.Nonnull
  public ServiceNamespace getServiceNamespace() {
    return serviceNamespace;
  }

  public void setServiceNamespace(ServiceNamespace serviceNamespace) {
    this.serviceNamespace = serviceNamespace;
  }


  public ScalingPolicy resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nonnull
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public ScalingPolicy scalableDimension(ScalableDimension scalableDimension) {
    this.scalableDimension = scalableDimension;
    return this;
  }

  /**
   * Get scalableDimension
   * @return scalableDimension
   */
  @javax.annotation.Nonnull
  public ScalableDimension getScalableDimension() {
    return scalableDimension;
  }

  public void setScalableDimension(ScalableDimension scalableDimension) {
    this.scalableDimension = scalableDimension;
  }


  public ScalingPolicy policyType(PolicyType policyType) {
    this.policyType = policyType;
    return this;
  }

  /**
   * Get policyType
   * @return policyType
   */
  @javax.annotation.Nonnull
  public PolicyType getPolicyType() {
    return policyType;
  }

  public void setPolicyType(PolicyType policyType) {
    this.policyType = policyType;
  }


  public ScalingPolicy stepScalingPolicyConfiguration(ScalingPolicyStepScalingPolicyConfiguration stepScalingPolicyConfiguration) {
    this.stepScalingPolicyConfiguration = stepScalingPolicyConfiguration;
    return this;
  }

  /**
   * Get stepScalingPolicyConfiguration
   * @return stepScalingPolicyConfiguration
   */
  @javax.annotation.Nullable
  public ScalingPolicyStepScalingPolicyConfiguration getStepScalingPolicyConfiguration() {
    return stepScalingPolicyConfiguration;
  }

  public void setStepScalingPolicyConfiguration(ScalingPolicyStepScalingPolicyConfiguration stepScalingPolicyConfiguration) {
    this.stepScalingPolicyConfiguration = stepScalingPolicyConfiguration;
  }


  public ScalingPolicy targetTrackingScalingPolicyConfiguration(ScalingPolicyTargetTrackingScalingPolicyConfiguration targetTrackingScalingPolicyConfiguration) {
    this.targetTrackingScalingPolicyConfiguration = targetTrackingScalingPolicyConfiguration;
    return this;
  }

  /**
   * Get targetTrackingScalingPolicyConfiguration
   * @return targetTrackingScalingPolicyConfiguration
   */
  @javax.annotation.Nullable
  public ScalingPolicyTargetTrackingScalingPolicyConfiguration getTargetTrackingScalingPolicyConfiguration() {
    return targetTrackingScalingPolicyConfiguration;
  }

  public void setTargetTrackingScalingPolicyConfiguration(ScalingPolicyTargetTrackingScalingPolicyConfiguration targetTrackingScalingPolicyConfiguration) {
    this.targetTrackingScalingPolicyConfiguration = targetTrackingScalingPolicyConfiguration;
  }


  public ScalingPolicy alarms(List alarms) {
    this.alarms = alarms;
    return this;
  }

  /**
   * Get alarms
   * @return alarms
   */
  @javax.annotation.Nullable
  public List getAlarms() {
    return alarms;
  }

  public void setAlarms(List alarms) {
    this.alarms = alarms;
  }


  public ScalingPolicy creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScalingPolicy scalingPolicy = (ScalingPolicy) o;
    return Objects.equals(this.policyARN, scalingPolicy.policyARN) &&
        Objects.equals(this.policyName, scalingPolicy.policyName) &&
        Objects.equals(this.serviceNamespace, scalingPolicy.serviceNamespace) &&
        Objects.equals(this.resourceId, scalingPolicy.resourceId) &&
        Objects.equals(this.scalableDimension, scalingPolicy.scalableDimension) &&
        Objects.equals(this.policyType, scalingPolicy.policyType) &&
        Objects.equals(this.stepScalingPolicyConfiguration, scalingPolicy.stepScalingPolicyConfiguration) &&
        Objects.equals(this.targetTrackingScalingPolicyConfiguration, scalingPolicy.targetTrackingScalingPolicyConfiguration) &&
        Objects.equals(this.alarms, scalingPolicy.alarms) &&
        Objects.equals(this.creationTime, scalingPolicy.creationTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(policyARN, policyName, serviceNamespace, resourceId, scalableDimension, policyType, stepScalingPolicyConfiguration, targetTrackingScalingPolicyConfiguration, alarms, creationTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScalingPolicy {\n");
    sb.append("    policyARN: ").append(toIndentedString(policyARN)).append("\n");
    sb.append("    policyName: ").append(toIndentedString(policyName)).append("\n");
    sb.append("    serviceNamespace: ").append(toIndentedString(serviceNamespace)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    scalableDimension: ").append(toIndentedString(scalableDimension)).append("\n");
    sb.append("    policyType: ").append(toIndentedString(policyType)).append("\n");
    sb.append("    stepScalingPolicyConfiguration: ").append(toIndentedString(stepScalingPolicyConfiguration)).append("\n");
    sb.append("    targetTrackingScalingPolicyConfiguration: ").append(toIndentedString(targetTrackingScalingPolicyConfiguration)).append("\n");
    sb.append("    alarms: ").append(toIndentedString(alarms)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("PolicyARN");
    openapiFields.add("PolicyName");
    openapiFields.add("ServiceNamespace");
    openapiFields.add("ResourceId");
    openapiFields.add("ScalableDimension");
    openapiFields.add("PolicyType");
    openapiFields.add("StepScalingPolicyConfiguration");
    openapiFields.add("TargetTrackingScalingPolicyConfiguration");
    openapiFields.add("Alarms");
    openapiFields.add("CreationTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("PolicyARN");
    openapiRequiredFields.add("PolicyName");
    openapiRequiredFields.add("ServiceNamespace");
    openapiRequiredFields.add("ResourceId");
    openapiRequiredFields.add("ScalableDimension");
    openapiRequiredFields.add("PolicyType");
    openapiRequiredFields.add("CreationTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ScalingPolicy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ScalingPolicy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScalingPolicy is not found in the empty JSON string", ScalingPolicy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ScalingPolicy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScalingPolicy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ScalingPolicy.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `PolicyARN`
      String.validateJsonElement(jsonObj.get("PolicyARN"));
      // validate the required field `PolicyName`
      String.validateJsonElement(jsonObj.get("PolicyName"));
      // validate the required field `ServiceNamespace`
      ServiceNamespace.validateJsonElement(jsonObj.get("ServiceNamespace"));
      // validate the required field `ResourceId`
      String.validateJsonElement(jsonObj.get("ResourceId"));
      // validate the required field `ScalableDimension`
      ScalableDimension.validateJsonElement(jsonObj.get("ScalableDimension"));
      // validate the required field `PolicyType`
      PolicyType.validateJsonElement(jsonObj.get("PolicyType"));
      // validate the optional field `StepScalingPolicyConfiguration`
      if (jsonObj.get("StepScalingPolicyConfiguration") != null && !jsonObj.get("StepScalingPolicyConfiguration").isJsonNull()) {
        ScalingPolicyStepScalingPolicyConfiguration.validateJsonElement(jsonObj.get("StepScalingPolicyConfiguration"));
      }
      // validate the optional field `TargetTrackingScalingPolicyConfiguration`
      if (jsonObj.get("TargetTrackingScalingPolicyConfiguration") != null && !jsonObj.get("TargetTrackingScalingPolicyConfiguration").isJsonNull()) {
        ScalingPolicyTargetTrackingScalingPolicyConfiguration.validateJsonElement(jsonObj.get("TargetTrackingScalingPolicyConfiguration"));
      }
      // validate the optional field `Alarms`
      if (jsonObj.get("Alarms") != null && !jsonObj.get("Alarms").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Alarms"));
      }
      // validate the required field `CreationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScalingPolicy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScalingPolicy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScalingPolicy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScalingPolicy.class));

       return (TypeAdapter<T>) new TypeAdapter<ScalingPolicy>() {
           @Override
           public void write(JsonWriter out, ScalingPolicy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScalingPolicy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ScalingPolicy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScalingPolicy
   * @throws IOException if the JSON string is invalid with respect to ScalingPolicy
   */
  public static ScalingPolicy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScalingPolicy.class);
  }

  /**
   * Convert an instance of ScalingPolicy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

