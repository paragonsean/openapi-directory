/*
 * Application Auto Scaling
 * <p>With Application Auto Scaling, you can configure automatic scaling for the following resources:</p> <ul> <li> <p>Amazon AppStream 2.0 fleets</p> </li> <li> <p>Amazon Aurora Replicas</p> </li> <li> <p>Amazon Comprehend document classification and entity recognizer endpoints</p> </li> <li> <p>Amazon DynamoDB tables and global secondary indexes throughput capacity</p> </li> <li> <p>Amazon ECS services</p> </li> <li> <p>Amazon ElastiCache for Redis clusters (replication groups)</p> </li> <li> <p>Amazon EMR clusters</p> </li> <li> <p>Amazon Keyspaces (for Apache Cassandra) tables</p> </li> <li> <p>Lambda function provisioned concurrency</p> </li> <li> <p>Amazon Managed Streaming for Apache Kafka broker storage</p> </li> <li> <p>Amazon Neptune clusters</p> </li> <li> <p>Amazon SageMaker endpoint variants</p> </li> <li> <p>Amazon SageMaker Serverless endpoint provisioned concurrency</p> </li> <li> <p>Spot Fleets (Amazon EC2)</p> </li> <li> <p>Custom resources provided by your own applications or services</p> </li> </ul> <p>To learn more about Application Auto Scaling, see the <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html\">Application Auto Scaling User Guide</a>.</p> <p> <b>API Summary</b> </p> <p>The Application Auto Scaling service API includes three key sets of actions: </p> <ul> <li> <p>Register and manage scalable targets - Register Amazon Web Services or custom resources as scalable targets (a resource that Application Auto Scaling can scale), set minimum and maximum capacity limits, and retrieve information on existing scalable targets.</p> </li> <li> <p>Configure and manage automatic scaling - Define scaling policies to dynamically scale your resources in response to CloudWatch alarms, schedule one-time or recurring scaling actions, and retrieve your recent scaling activity history.</p> </li> <li> <p>Suspend and resume scaling - Temporarily suspend and later resume automatic scaling by calling the <a href=\"https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html\">RegisterScalableTarget</a> API action for any Application Auto Scaling scalable target. You can suspend and resume (individually or in combination) scale-out activities that are triggered by a scaling policy, scale-in activities that are triggered by a scaling policy, and scheduled scaling.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-02-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.TargetTrackingMetricDataQueryMetricStat;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.&lt;/p&gt; &lt;p&gt;For more information and examples, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking-metric-math.html\&quot;&gt;Create a target tracking scaling policy for Application Auto Scaling using metric math&lt;/a&gt; in the &lt;i&gt;Application Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:07.248597-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TargetTrackingMetricDataQuery {
  public static final String SERIALIZED_NAME_EXPRESSION = "Expression";
  @SerializedName(SERIALIZED_NAME_EXPRESSION)
  private String expression;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LABEL = "Label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_METRIC_STAT = "MetricStat";
  @SerializedName(SERIALIZED_NAME_METRIC_STAT)
  private TargetTrackingMetricDataQueryMetricStat metricStat;

  public static final String SERIALIZED_NAME_RETURN_DATA = "ReturnData";
  @SerializedName(SERIALIZED_NAME_RETURN_DATA)
  private Boolean returnData;

  public TargetTrackingMetricDataQuery() {
  }

  public TargetTrackingMetricDataQuery expression(String expression) {
    this.expression = expression;
    return this;
  }

  /**
   * Get expression
   * @return expression
   */
  @javax.annotation.Nullable
  public String getExpression() {
    return expression;
  }

  public void setExpression(String expression) {
    this.expression = expression;
  }


  public TargetTrackingMetricDataQuery id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TargetTrackingMetricDataQuery label(String label) {
    this.label = label;
    return this;
  }

  /**
   * Get label
   * @return label
   */
  @javax.annotation.Nullable
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }


  public TargetTrackingMetricDataQuery metricStat(TargetTrackingMetricDataQueryMetricStat metricStat) {
    this.metricStat = metricStat;
    return this;
  }

  /**
   * Get metricStat
   * @return metricStat
   */
  @javax.annotation.Nullable
  public TargetTrackingMetricDataQueryMetricStat getMetricStat() {
    return metricStat;
  }

  public void setMetricStat(TargetTrackingMetricDataQueryMetricStat metricStat) {
    this.metricStat = metricStat;
  }


  public TargetTrackingMetricDataQuery returnData(Boolean returnData) {
    this.returnData = returnData;
    return this;
  }

  /**
   * Get returnData
   * @return returnData
   */
  @javax.annotation.Nullable
  public Boolean getReturnData() {
    return returnData;
  }

  public void setReturnData(Boolean returnData) {
    this.returnData = returnData;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TargetTrackingMetricDataQuery targetTrackingMetricDataQuery = (TargetTrackingMetricDataQuery) o;
    return Objects.equals(this.expression, targetTrackingMetricDataQuery.expression) &&
        Objects.equals(this.id, targetTrackingMetricDataQuery.id) &&
        Objects.equals(this.label, targetTrackingMetricDataQuery.label) &&
        Objects.equals(this.metricStat, targetTrackingMetricDataQuery.metricStat) &&
        Objects.equals(this.returnData, targetTrackingMetricDataQuery.returnData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expression, id, label, metricStat, returnData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TargetTrackingMetricDataQuery {\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    metricStat: ").append(toIndentedString(metricStat)).append("\n");
    sb.append("    returnData: ").append(toIndentedString(returnData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Expression");
    openapiFields.add("Id");
    openapiFields.add("Label");
    openapiFields.add("MetricStat");
    openapiFields.add("ReturnData");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TargetTrackingMetricDataQuery
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TargetTrackingMetricDataQuery.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TargetTrackingMetricDataQuery is not found in the empty JSON string", TargetTrackingMetricDataQuery.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TargetTrackingMetricDataQuery.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TargetTrackingMetricDataQuery` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TargetTrackingMetricDataQuery.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Expression`
      if (jsonObj.get("Expression") != null && !jsonObj.get("Expression").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Expression"));
      }
      // validate the required field `Id`
      String.validateJsonElement(jsonObj.get("Id"));
      // validate the optional field `Label`
      if (jsonObj.get("Label") != null && !jsonObj.get("Label").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Label"));
      }
      // validate the optional field `MetricStat`
      if (jsonObj.get("MetricStat") != null && !jsonObj.get("MetricStat").isJsonNull()) {
        TargetTrackingMetricDataQueryMetricStat.validateJsonElement(jsonObj.get("MetricStat"));
      }
      // validate the optional field `ReturnData`
      if (jsonObj.get("ReturnData") != null && !jsonObj.get("ReturnData").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("ReturnData"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TargetTrackingMetricDataQuery.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TargetTrackingMetricDataQuery' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TargetTrackingMetricDataQuery> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TargetTrackingMetricDataQuery.class));

       return (TypeAdapter<T>) new TypeAdapter<TargetTrackingMetricDataQuery>() {
           @Override
           public void write(JsonWriter out, TargetTrackingMetricDataQuery value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TargetTrackingMetricDataQuery read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TargetTrackingMetricDataQuery given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TargetTrackingMetricDataQuery
   * @throws IOException if the JSON string is invalid with respect to TargetTrackingMetricDataQuery
   */
  public static TargetTrackingMetricDataQuery fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TargetTrackingMetricDataQuery.class);
  }

  /**
   * Convert an instance of TargetTrackingMetricDataQuery to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

