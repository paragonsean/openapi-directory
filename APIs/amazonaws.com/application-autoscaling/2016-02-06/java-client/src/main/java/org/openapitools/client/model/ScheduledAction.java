/*
 * Application Auto Scaling
 * <p>With Application Auto Scaling, you can configure automatic scaling for the following resources:</p> <ul> <li> <p>Amazon AppStream 2.0 fleets</p> </li> <li> <p>Amazon Aurora Replicas</p> </li> <li> <p>Amazon Comprehend document classification and entity recognizer endpoints</p> </li> <li> <p>Amazon DynamoDB tables and global secondary indexes throughput capacity</p> </li> <li> <p>Amazon ECS services</p> </li> <li> <p>Amazon ElastiCache for Redis clusters (replication groups)</p> </li> <li> <p>Amazon EMR clusters</p> </li> <li> <p>Amazon Keyspaces (for Apache Cassandra) tables</p> </li> <li> <p>Lambda function provisioned concurrency</p> </li> <li> <p>Amazon Managed Streaming for Apache Kafka broker storage</p> </li> <li> <p>Amazon Neptune clusters</p> </li> <li> <p>Amazon SageMaker endpoint variants</p> </li> <li> <p>Amazon SageMaker Serverless endpoint provisioned concurrency</p> </li> <li> <p>Spot Fleets (Amazon EC2)</p> </li> <li> <p>Custom resources provided by your own applications or services</p> </li> </ul> <p>To learn more about Application Auto Scaling, see the <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html\">Application Auto Scaling User Guide</a>.</p> <p> <b>API Summary</b> </p> <p>The Application Auto Scaling service API includes three key sets of actions: </p> <ul> <li> <p>Register and manage scalable targets - Register Amazon Web Services or custom resources as scalable targets (a resource that Application Auto Scaling can scale), set minimum and maximum capacity limits, and retrieve information on existing scalable targets.</p> </li> <li> <p>Configure and manage automatic scaling - Define scaling policies to dynamically scale your resources in response to CloudWatch alarms, schedule one-time or recurring scaling actions, and retrieve your recent scaling activity history.</p> </li> <li> <p>Suspend and resume scaling - Temporarily suspend and later resume automatic scaling by calling the <a href=\"https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html\">RegisterScalableTarget</a> API action for any Application Auto Scaling scalable target. You can suspend and resume (individually or in combination) scale-out activities that are triggered by a scaling policy, scale-in activities that are triggered by a scaling policy, and scheduled scaling.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-02-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.PutScheduledActionRequestScalableTargetAction;
import org.openapitools.client.model.ScalableDimension;
import org.openapitools.client.model.ServiceNamespace;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a scheduled action.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:07.248597-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ScheduledAction {
  public static final String SERIALIZED_NAME_SCHEDULED_ACTION_NAME = "ScheduledActionName";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_ACTION_NAME)
  private String scheduledActionName;

  public static final String SERIALIZED_NAME_SCHEDULED_ACTION_A_R_N = "ScheduledActionARN";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_ACTION_A_R_N)
  private String scheduledActionARN;

  public static final String SERIALIZED_NAME_SERVICE_NAMESPACE = "ServiceNamespace";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAMESPACE)
  private ServiceNamespace serviceNamespace;

  public static final String SERIALIZED_NAME_SCHEDULE = "Schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private String schedule;

  public static final String SERIALIZED_NAME_TIMEZONE = "Timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "ResourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_SCALABLE_DIMENSION = "ScalableDimension";
  @SerializedName(SERIALIZED_NAME_SCALABLE_DIMENSION)
  private ScalableDimension scalableDimension;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_SCALABLE_TARGET_ACTION = "ScalableTargetAction";
  @SerializedName(SERIALIZED_NAME_SCALABLE_TARGET_ACTION)
  private PutScheduledActionRequestScalableTargetAction scalableTargetAction;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public ScheduledAction() {
  }

  public ScheduledAction scheduledActionName(String scheduledActionName) {
    this.scheduledActionName = scheduledActionName;
    return this;
  }

  /**
   * Get scheduledActionName
   * @return scheduledActionName
   */
  @javax.annotation.Nonnull
  public String getScheduledActionName() {
    return scheduledActionName;
  }

  public void setScheduledActionName(String scheduledActionName) {
    this.scheduledActionName = scheduledActionName;
  }


  public ScheduledAction scheduledActionARN(String scheduledActionARN) {
    this.scheduledActionARN = scheduledActionARN;
    return this;
  }

  /**
   * Get scheduledActionARN
   * @return scheduledActionARN
   */
  @javax.annotation.Nonnull
  public String getScheduledActionARN() {
    return scheduledActionARN;
  }

  public void setScheduledActionARN(String scheduledActionARN) {
    this.scheduledActionARN = scheduledActionARN;
  }


  public ScheduledAction serviceNamespace(ServiceNamespace serviceNamespace) {
    this.serviceNamespace = serviceNamespace;
    return this;
  }

  /**
   * Get serviceNamespace
   * @return serviceNamespace
   */
  @javax.annotation.Nonnull
  public ServiceNamespace getServiceNamespace() {
    return serviceNamespace;
  }

  public void setServiceNamespace(ServiceNamespace serviceNamespace) {
    this.serviceNamespace = serviceNamespace;
  }


  public ScheduledAction schedule(String schedule) {
    this.schedule = schedule;
    return this;
  }

  /**
   * Get schedule
   * @return schedule
   */
  @javax.annotation.Nonnull
  public String getSchedule() {
    return schedule;
  }

  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }


  public ScheduledAction timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

  /**
   * Get timezone
   * @return timezone
   */
  @javax.annotation.Nullable
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  public ScheduledAction resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nonnull
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public ScheduledAction scalableDimension(ScalableDimension scalableDimension) {
    this.scalableDimension = scalableDimension;
    return this;
  }

  /**
   * Get scalableDimension
   * @return scalableDimension
   */
  @javax.annotation.Nullable
  public ScalableDimension getScalableDimension() {
    return scalableDimension;
  }

  public void setScalableDimension(ScalableDimension scalableDimension) {
    this.scalableDimension = scalableDimension;
  }


  public ScheduledAction startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public ScheduledAction endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public ScheduledAction scalableTargetAction(PutScheduledActionRequestScalableTargetAction scalableTargetAction) {
    this.scalableTargetAction = scalableTargetAction;
    return this;
  }

  /**
   * Get scalableTargetAction
   * @return scalableTargetAction
   */
  @javax.annotation.Nullable
  public PutScheduledActionRequestScalableTargetAction getScalableTargetAction() {
    return scalableTargetAction;
  }

  public void setScalableTargetAction(PutScheduledActionRequestScalableTargetAction scalableTargetAction) {
    this.scalableTargetAction = scalableTargetAction;
  }


  public ScheduledAction creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduledAction scheduledAction = (ScheduledAction) o;
    return Objects.equals(this.scheduledActionName, scheduledAction.scheduledActionName) &&
        Objects.equals(this.scheduledActionARN, scheduledAction.scheduledActionARN) &&
        Objects.equals(this.serviceNamespace, scheduledAction.serviceNamespace) &&
        Objects.equals(this.schedule, scheduledAction.schedule) &&
        Objects.equals(this.timezone, scheduledAction.timezone) &&
        Objects.equals(this.resourceId, scheduledAction.resourceId) &&
        Objects.equals(this.scalableDimension, scheduledAction.scalableDimension) &&
        Objects.equals(this.startTime, scheduledAction.startTime) &&
        Objects.equals(this.endTime, scheduledAction.endTime) &&
        Objects.equals(this.scalableTargetAction, scheduledAction.scalableTargetAction) &&
        Objects.equals(this.creationTime, scheduledAction.creationTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scheduledActionName, scheduledActionARN, serviceNamespace, schedule, timezone, resourceId, scalableDimension, startTime, endTime, scalableTargetAction, creationTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduledAction {\n");
    sb.append("    scheduledActionName: ").append(toIndentedString(scheduledActionName)).append("\n");
    sb.append("    scheduledActionARN: ").append(toIndentedString(scheduledActionARN)).append("\n");
    sb.append("    serviceNamespace: ").append(toIndentedString(serviceNamespace)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    scalableDimension: ").append(toIndentedString(scalableDimension)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    scalableTargetAction: ").append(toIndentedString(scalableTargetAction)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ScheduledActionName");
    openapiFields.add("ScheduledActionARN");
    openapiFields.add("ServiceNamespace");
    openapiFields.add("Schedule");
    openapiFields.add("Timezone");
    openapiFields.add("ResourceId");
    openapiFields.add("ScalableDimension");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("ScalableTargetAction");
    openapiFields.add("CreationTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ScheduledActionName");
    openapiRequiredFields.add("ScheduledActionARN");
    openapiRequiredFields.add("ServiceNamespace");
    openapiRequiredFields.add("Schedule");
    openapiRequiredFields.add("ResourceId");
    openapiRequiredFields.add("CreationTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ScheduledAction
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ScheduledAction.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScheduledAction is not found in the empty JSON string", ScheduledAction.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ScheduledAction.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScheduledAction` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ScheduledAction.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ScheduledActionName`
      String.validateJsonElement(jsonObj.get("ScheduledActionName"));
      // validate the required field `ScheduledActionARN`
      String.validateJsonElement(jsonObj.get("ScheduledActionARN"));
      // validate the required field `ServiceNamespace`
      ServiceNamespace.validateJsonElement(jsonObj.get("ServiceNamespace"));
      // validate the required field `Schedule`
      String.validateJsonElement(jsonObj.get("Schedule"));
      // validate the optional field `Timezone`
      if (jsonObj.get("Timezone") != null && !jsonObj.get("Timezone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Timezone"));
      }
      // validate the required field `ResourceId`
      String.validateJsonElement(jsonObj.get("ResourceId"));
      // validate the optional field `ScalableDimension`
      if (jsonObj.get("ScalableDimension") != null && !jsonObj.get("ScalableDimension").isJsonNull()) {
        ScalableDimension.validateJsonElement(jsonObj.get("ScalableDimension"));
      }
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the optional field `ScalableTargetAction`
      if (jsonObj.get("ScalableTargetAction") != null && !jsonObj.get("ScalableTargetAction").isJsonNull()) {
        PutScheduledActionRequestScalableTargetAction.validateJsonElement(jsonObj.get("ScalableTargetAction"));
      }
      // validate the required field `CreationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScheduledAction.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScheduledAction' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScheduledAction> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScheduledAction.class));

       return (TypeAdapter<T>) new TypeAdapter<ScheduledAction>() {
           @Override
           public void write(JsonWriter out, ScheduledAction value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScheduledAction read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ScheduledAction given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScheduledAction
   * @throws IOException if the JSON string is invalid with respect to ScheduledAction
   */
  public static ScheduledAction fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScheduledAction.class);
  }

  /**
   * Convert an instance of ScheduledAction to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

