/*
 * Application Auto Scaling
 * <p>With Application Auto Scaling, you can configure automatic scaling for the following resources:</p> <ul> <li> <p>Amazon AppStream 2.0 fleets</p> </li> <li> <p>Amazon Aurora Replicas</p> </li> <li> <p>Amazon Comprehend document classification and entity recognizer endpoints</p> </li> <li> <p>Amazon DynamoDB tables and global secondary indexes throughput capacity</p> </li> <li> <p>Amazon ECS services</p> </li> <li> <p>Amazon ElastiCache for Redis clusters (replication groups)</p> </li> <li> <p>Amazon EMR clusters</p> </li> <li> <p>Amazon Keyspaces (for Apache Cassandra) tables</p> </li> <li> <p>Lambda function provisioned concurrency</p> </li> <li> <p>Amazon Managed Streaming for Apache Kafka broker storage</p> </li> <li> <p>Amazon Neptune clusters</p> </li> <li> <p>Amazon SageMaker endpoint variants</p> </li> <li> <p>Amazon SageMaker Serverless endpoint provisioned concurrency</p> </li> <li> <p>Spot Fleets (Amazon EC2)</p> </li> <li> <p>Custom resources provided by your own applications or services</p> </li> </ul> <p>To learn more about Application Auto Scaling, see the <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html\">Application Auto Scaling User Guide</a>.</p> <p> <b>API Summary</b> </p> <p>The Application Auto Scaling service API includes three key sets of actions: </p> <ul> <li> <p>Register and manage scalable targets - Register Amazon Web Services or custom resources as scalable targets (a resource that Application Auto Scaling can scale), set minimum and maximum capacity limits, and retrieve information on existing scalable targets.</p> </li> <li> <p>Configure and manage automatic scaling - Define scaling policies to dynamically scale your resources in response to CloudWatch alarms, schedule one-time or recurring scaling actions, and retrieve your recent scaling activity history.</p> </li> <li> <p>Suspend and resume scaling - Temporarily suspend and later resume automatic scaling by calling the <a href=\"https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html\">RegisterScalableTarget</a> API action for any Application Auto Scaling scalable target. You can suspend and resume (individually or in combination) scale-out activities that are triggered by a scaling policy, scale-in activities that are triggered by a scaling policy, and scheduled scaling.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-02-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AdjustmentType;
import org.openapitools.client.model.MetricAggregationType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutScalingPolicyRequestStepScalingPolicyConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:07.248597-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PutScalingPolicyRequestStepScalingPolicyConfiguration {
  public static final String SERIALIZED_NAME_ADJUSTMENT_TYPE = "AdjustmentType";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_TYPE)
  private AdjustmentType adjustmentType;

  public static final String SERIALIZED_NAME_STEP_ADJUSTMENTS = "StepAdjustments";
  @SerializedName(SERIALIZED_NAME_STEP_ADJUSTMENTS)
  private List stepAdjustments;

  public static final String SERIALIZED_NAME_MIN_ADJUSTMENT_MAGNITUDE = "MinAdjustmentMagnitude";
  @SerializedName(SERIALIZED_NAME_MIN_ADJUSTMENT_MAGNITUDE)
  private Integer minAdjustmentMagnitude;

  public static final String SERIALIZED_NAME_COOLDOWN = "Cooldown";
  @SerializedName(SERIALIZED_NAME_COOLDOWN)
  private Integer cooldown;

  public static final String SERIALIZED_NAME_METRIC_AGGREGATION_TYPE = "MetricAggregationType";
  @SerializedName(SERIALIZED_NAME_METRIC_AGGREGATION_TYPE)
  private MetricAggregationType metricAggregationType;

  public PutScalingPolicyRequestStepScalingPolicyConfiguration() {
  }

  public PutScalingPolicyRequestStepScalingPolicyConfiguration adjustmentType(AdjustmentType adjustmentType) {
    this.adjustmentType = adjustmentType;
    return this;
  }

  /**
   * Get adjustmentType
   * @return adjustmentType
   */
  @javax.annotation.Nullable
  public AdjustmentType getAdjustmentType() {
    return adjustmentType;
  }

  public void setAdjustmentType(AdjustmentType adjustmentType) {
    this.adjustmentType = adjustmentType;
  }


  public PutScalingPolicyRequestStepScalingPolicyConfiguration stepAdjustments(List stepAdjustments) {
    this.stepAdjustments = stepAdjustments;
    return this;
  }

  /**
   * Get stepAdjustments
   * @return stepAdjustments
   */
  @javax.annotation.Nullable
  public List getStepAdjustments() {
    return stepAdjustments;
  }

  public void setStepAdjustments(List stepAdjustments) {
    this.stepAdjustments = stepAdjustments;
  }


  public PutScalingPolicyRequestStepScalingPolicyConfiguration minAdjustmentMagnitude(Integer minAdjustmentMagnitude) {
    this.minAdjustmentMagnitude = minAdjustmentMagnitude;
    return this;
  }

  /**
   * Get minAdjustmentMagnitude
   * @return minAdjustmentMagnitude
   */
  @javax.annotation.Nullable
  public Integer getMinAdjustmentMagnitude() {
    return minAdjustmentMagnitude;
  }

  public void setMinAdjustmentMagnitude(Integer minAdjustmentMagnitude) {
    this.minAdjustmentMagnitude = minAdjustmentMagnitude;
  }


  public PutScalingPolicyRequestStepScalingPolicyConfiguration cooldown(Integer cooldown) {
    this.cooldown = cooldown;
    return this;
  }

  /**
   * Get cooldown
   * @return cooldown
   */
  @javax.annotation.Nullable
  public Integer getCooldown() {
    return cooldown;
  }

  public void setCooldown(Integer cooldown) {
    this.cooldown = cooldown;
  }


  public PutScalingPolicyRequestStepScalingPolicyConfiguration metricAggregationType(MetricAggregationType metricAggregationType) {
    this.metricAggregationType = metricAggregationType;
    return this;
  }

  /**
   * Get metricAggregationType
   * @return metricAggregationType
   */
  @javax.annotation.Nullable
  public MetricAggregationType getMetricAggregationType() {
    return metricAggregationType;
  }

  public void setMetricAggregationType(MetricAggregationType metricAggregationType) {
    this.metricAggregationType = metricAggregationType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutScalingPolicyRequestStepScalingPolicyConfiguration putScalingPolicyRequestStepScalingPolicyConfiguration = (PutScalingPolicyRequestStepScalingPolicyConfiguration) o;
    return Objects.equals(this.adjustmentType, putScalingPolicyRequestStepScalingPolicyConfiguration.adjustmentType) &&
        Objects.equals(this.stepAdjustments, putScalingPolicyRequestStepScalingPolicyConfiguration.stepAdjustments) &&
        Objects.equals(this.minAdjustmentMagnitude, putScalingPolicyRequestStepScalingPolicyConfiguration.minAdjustmentMagnitude) &&
        Objects.equals(this.cooldown, putScalingPolicyRequestStepScalingPolicyConfiguration.cooldown) &&
        Objects.equals(this.metricAggregationType, putScalingPolicyRequestStepScalingPolicyConfiguration.metricAggregationType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adjustmentType, stepAdjustments, minAdjustmentMagnitude, cooldown, metricAggregationType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutScalingPolicyRequestStepScalingPolicyConfiguration {\n");
    sb.append("    adjustmentType: ").append(toIndentedString(adjustmentType)).append("\n");
    sb.append("    stepAdjustments: ").append(toIndentedString(stepAdjustments)).append("\n");
    sb.append("    minAdjustmentMagnitude: ").append(toIndentedString(minAdjustmentMagnitude)).append("\n");
    sb.append("    cooldown: ").append(toIndentedString(cooldown)).append("\n");
    sb.append("    metricAggregationType: ").append(toIndentedString(metricAggregationType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AdjustmentType");
    openapiFields.add("StepAdjustments");
    openapiFields.add("MinAdjustmentMagnitude");
    openapiFields.add("Cooldown");
    openapiFields.add("MetricAggregationType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutScalingPolicyRequestStepScalingPolicyConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutScalingPolicyRequestStepScalingPolicyConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutScalingPolicyRequestStepScalingPolicyConfiguration is not found in the empty JSON string", PutScalingPolicyRequestStepScalingPolicyConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutScalingPolicyRequestStepScalingPolicyConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutScalingPolicyRequestStepScalingPolicyConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AdjustmentType`
      if (jsonObj.get("AdjustmentType") != null && !jsonObj.get("AdjustmentType").isJsonNull()) {
        AdjustmentType.validateJsonElement(jsonObj.get("AdjustmentType"));
      }
      // validate the optional field `StepAdjustments`
      if (jsonObj.get("StepAdjustments") != null && !jsonObj.get("StepAdjustments").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("StepAdjustments"));
      }
      // validate the optional field `MinAdjustmentMagnitude`
      if (jsonObj.get("MinAdjustmentMagnitude") != null && !jsonObj.get("MinAdjustmentMagnitude").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MinAdjustmentMagnitude"));
      }
      // validate the optional field `Cooldown`
      if (jsonObj.get("Cooldown") != null && !jsonObj.get("Cooldown").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Cooldown"));
      }
      // validate the optional field `MetricAggregationType`
      if (jsonObj.get("MetricAggregationType") != null && !jsonObj.get("MetricAggregationType").isJsonNull()) {
        MetricAggregationType.validateJsonElement(jsonObj.get("MetricAggregationType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutScalingPolicyRequestStepScalingPolicyConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutScalingPolicyRequestStepScalingPolicyConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutScalingPolicyRequestStepScalingPolicyConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutScalingPolicyRequestStepScalingPolicyConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<PutScalingPolicyRequestStepScalingPolicyConfiguration>() {
           @Override
           public void write(JsonWriter out, PutScalingPolicyRequestStepScalingPolicyConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutScalingPolicyRequestStepScalingPolicyConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutScalingPolicyRequestStepScalingPolicyConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutScalingPolicyRequestStepScalingPolicyConfiguration
   * @throws IOException if the JSON string is invalid with respect to PutScalingPolicyRequestStepScalingPolicyConfiguration
   */
  public static PutScalingPolicyRequestStepScalingPolicyConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutScalingPolicyRequestStepScalingPolicyConfiguration.class);
  }

  /**
   * Convert an instance of PutScalingPolicyRequestStepScalingPolicyConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

