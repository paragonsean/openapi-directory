/*
 * Application Auto Scaling
 * <p>With Application Auto Scaling, you can configure automatic scaling for the following resources:</p> <ul> <li> <p>Amazon AppStream 2.0 fleets</p> </li> <li> <p>Amazon Aurora Replicas</p> </li> <li> <p>Amazon Comprehend document classification and entity recognizer endpoints</p> </li> <li> <p>Amazon DynamoDB tables and global secondary indexes throughput capacity</p> </li> <li> <p>Amazon ECS services</p> </li> <li> <p>Amazon ElastiCache for Redis clusters (replication groups)</p> </li> <li> <p>Amazon EMR clusters</p> </li> <li> <p>Amazon Keyspaces (for Apache Cassandra) tables</p> </li> <li> <p>Lambda function provisioned concurrency</p> </li> <li> <p>Amazon Managed Streaming for Apache Kafka broker storage</p> </li> <li> <p>Amazon Neptune clusters</p> </li> <li> <p>Amazon SageMaker endpoint variants</p> </li> <li> <p>Amazon SageMaker Serverless endpoint provisioned concurrency</p> </li> <li> <p>Spot Fleets (Amazon EC2)</p> </li> <li> <p>Custom resources provided by your own applications or services</p> </li> </ul> <p>To learn more about Application Auto Scaling, see the <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html\">Application Auto Scaling User Guide</a>.</p> <p> <b>API Summary</b> </p> <p>The Application Auto Scaling service API includes three key sets of actions: </p> <ul> <li> <p>Register and manage scalable targets - Register Amazon Web Services or custom resources as scalable targets (a resource that Application Auto Scaling can scale), set minimum and maximum capacity limits, and retrieve information on existing scalable targets.</p> </li> <li> <p>Configure and manage automatic scaling - Define scaling policies to dynamically scale your resources in response to CloudWatch alarms, schedule one-time or recurring scaling actions, and retrieve your recent scaling activity history.</p> </li> <li> <p>Suspend and resume scaling - Temporarily suspend and later resume automatic scaling by calling the <a href=\"https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html\">RegisterScalableTarget</a> API action for any Application Auto Scaling scalable target. You can suspend and resume (individually or in combination) scale-out activities that are triggered by a scaling policy, scale-in activities that are triggered by a scaling policy, and scheduled scaling.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-02-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ScalableDimension;
import org.openapitools.client.model.ScalableTargetSuspendedState;
import org.openapitools.client.model.ServiceNamespace;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a scalable target.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:07.248597-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ScalableTarget {
  public static final String SERIALIZED_NAME_SERVICE_NAMESPACE = "ServiceNamespace";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAMESPACE)
  private ServiceNamespace serviceNamespace;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "ResourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_SCALABLE_DIMENSION = "ScalableDimension";
  @SerializedName(SERIALIZED_NAME_SCALABLE_DIMENSION)
  private ScalableDimension scalableDimension;

  public static final String SERIALIZED_NAME_MIN_CAPACITY = "MinCapacity";
  @SerializedName(SERIALIZED_NAME_MIN_CAPACITY)
  private Integer minCapacity;

  public static final String SERIALIZED_NAME_MAX_CAPACITY = "MaxCapacity";
  @SerializedName(SERIALIZED_NAME_MAX_CAPACITY)
  private Integer maxCapacity;

  public static final String SERIALIZED_NAME_ROLE_A_R_N = "RoleARN";
  @SerializedName(SERIALIZED_NAME_ROLE_A_R_N)
  private String roleARN;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_SUSPENDED_STATE = "SuspendedState";
  @SerializedName(SERIALIZED_NAME_SUSPENDED_STATE)
  private ScalableTargetSuspendedState suspendedState;

  public static final String SERIALIZED_NAME_SCALABLE_TARGET_A_R_N = "ScalableTargetARN";
  @SerializedName(SERIALIZED_NAME_SCALABLE_TARGET_A_R_N)
  private String scalableTargetARN;

  public ScalableTarget() {
  }

  public ScalableTarget serviceNamespace(ServiceNamespace serviceNamespace) {
    this.serviceNamespace = serviceNamespace;
    return this;
  }

  /**
   * Get serviceNamespace
   * @return serviceNamespace
   */
  @javax.annotation.Nonnull
  public ServiceNamespace getServiceNamespace() {
    return serviceNamespace;
  }

  public void setServiceNamespace(ServiceNamespace serviceNamespace) {
    this.serviceNamespace = serviceNamespace;
  }


  public ScalableTarget resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nonnull
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public ScalableTarget scalableDimension(ScalableDimension scalableDimension) {
    this.scalableDimension = scalableDimension;
    return this;
  }

  /**
   * Get scalableDimension
   * @return scalableDimension
   */
  @javax.annotation.Nonnull
  public ScalableDimension getScalableDimension() {
    return scalableDimension;
  }

  public void setScalableDimension(ScalableDimension scalableDimension) {
    this.scalableDimension = scalableDimension;
  }


  public ScalableTarget minCapacity(Integer minCapacity) {
    this.minCapacity = minCapacity;
    return this;
  }

  /**
   * Get minCapacity
   * @return minCapacity
   */
  @javax.annotation.Nonnull
  public Integer getMinCapacity() {
    return minCapacity;
  }

  public void setMinCapacity(Integer minCapacity) {
    this.minCapacity = minCapacity;
  }


  public ScalableTarget maxCapacity(Integer maxCapacity) {
    this.maxCapacity = maxCapacity;
    return this;
  }

  /**
   * Get maxCapacity
   * @return maxCapacity
   */
  @javax.annotation.Nonnull
  public Integer getMaxCapacity() {
    return maxCapacity;
  }

  public void setMaxCapacity(Integer maxCapacity) {
    this.maxCapacity = maxCapacity;
  }


  public ScalableTarget roleARN(String roleARN) {
    this.roleARN = roleARN;
    return this;
  }

  /**
   * Get roleARN
   * @return roleARN
   */
  @javax.annotation.Nonnull
  public String getRoleARN() {
    return roleARN;
  }

  public void setRoleARN(String roleARN) {
    this.roleARN = roleARN;
  }


  public ScalableTarget creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public ScalableTarget suspendedState(ScalableTargetSuspendedState suspendedState) {
    this.suspendedState = suspendedState;
    return this;
  }

  /**
   * Get suspendedState
   * @return suspendedState
   */
  @javax.annotation.Nullable
  public ScalableTargetSuspendedState getSuspendedState() {
    return suspendedState;
  }

  public void setSuspendedState(ScalableTargetSuspendedState suspendedState) {
    this.suspendedState = suspendedState;
  }


  public ScalableTarget scalableTargetARN(String scalableTargetARN) {
    this.scalableTargetARN = scalableTargetARN;
    return this;
  }

  /**
   * Get scalableTargetARN
   * @return scalableTargetARN
   */
  @javax.annotation.Nullable
  public String getScalableTargetARN() {
    return scalableTargetARN;
  }

  public void setScalableTargetARN(String scalableTargetARN) {
    this.scalableTargetARN = scalableTargetARN;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScalableTarget scalableTarget = (ScalableTarget) o;
    return Objects.equals(this.serviceNamespace, scalableTarget.serviceNamespace) &&
        Objects.equals(this.resourceId, scalableTarget.resourceId) &&
        Objects.equals(this.scalableDimension, scalableTarget.scalableDimension) &&
        Objects.equals(this.minCapacity, scalableTarget.minCapacity) &&
        Objects.equals(this.maxCapacity, scalableTarget.maxCapacity) &&
        Objects.equals(this.roleARN, scalableTarget.roleARN) &&
        Objects.equals(this.creationTime, scalableTarget.creationTime) &&
        Objects.equals(this.suspendedState, scalableTarget.suspendedState) &&
        Objects.equals(this.scalableTargetARN, scalableTarget.scalableTargetARN);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceNamespace, resourceId, scalableDimension, minCapacity, maxCapacity, roleARN, creationTime, suspendedState, scalableTargetARN);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScalableTarget {\n");
    sb.append("    serviceNamespace: ").append(toIndentedString(serviceNamespace)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    scalableDimension: ").append(toIndentedString(scalableDimension)).append("\n");
    sb.append("    minCapacity: ").append(toIndentedString(minCapacity)).append("\n");
    sb.append("    maxCapacity: ").append(toIndentedString(maxCapacity)).append("\n");
    sb.append("    roleARN: ").append(toIndentedString(roleARN)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    suspendedState: ").append(toIndentedString(suspendedState)).append("\n");
    sb.append("    scalableTargetARN: ").append(toIndentedString(scalableTargetARN)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ServiceNamespace");
    openapiFields.add("ResourceId");
    openapiFields.add("ScalableDimension");
    openapiFields.add("MinCapacity");
    openapiFields.add("MaxCapacity");
    openapiFields.add("RoleARN");
    openapiFields.add("CreationTime");
    openapiFields.add("SuspendedState");
    openapiFields.add("ScalableTargetARN");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ServiceNamespace");
    openapiRequiredFields.add("ResourceId");
    openapiRequiredFields.add("ScalableDimension");
    openapiRequiredFields.add("MinCapacity");
    openapiRequiredFields.add("MaxCapacity");
    openapiRequiredFields.add("RoleARN");
    openapiRequiredFields.add("CreationTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ScalableTarget
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ScalableTarget.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScalableTarget is not found in the empty JSON string", ScalableTarget.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ScalableTarget.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScalableTarget` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ScalableTarget.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ServiceNamespace`
      ServiceNamespace.validateJsonElement(jsonObj.get("ServiceNamespace"));
      // validate the required field `ResourceId`
      String.validateJsonElement(jsonObj.get("ResourceId"));
      // validate the required field `ScalableDimension`
      ScalableDimension.validateJsonElement(jsonObj.get("ScalableDimension"));
      // validate the required field `MinCapacity`
      Integer.validateJsonElement(jsonObj.get("MinCapacity"));
      // validate the required field `MaxCapacity`
      Integer.validateJsonElement(jsonObj.get("MaxCapacity"));
      // validate the required field `RoleARN`
      String.validateJsonElement(jsonObj.get("RoleARN"));
      // validate the required field `CreationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      // validate the optional field `SuspendedState`
      if (jsonObj.get("SuspendedState") != null && !jsonObj.get("SuspendedState").isJsonNull()) {
        ScalableTargetSuspendedState.validateJsonElement(jsonObj.get("SuspendedState"));
      }
      // validate the optional field `ScalableTargetARN`
      if (jsonObj.get("ScalableTargetARN") != null && !jsonObj.get("ScalableTargetARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ScalableTargetARN"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScalableTarget.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScalableTarget' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScalableTarget> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScalableTarget.class));

       return (TypeAdapter<T>) new TypeAdapter<ScalableTarget>() {
           @Override
           public void write(JsonWriter out, ScalableTarget value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScalableTarget read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ScalableTarget given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScalableTarget
   * @throws IOException if the JSON string is invalid with respect to ScalableTarget
   */
  public static ScalableTarget fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScalableTarget.class);
  }

  /**
   * Convert an instance of ScalableTarget to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

