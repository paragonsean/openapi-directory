/*
 * Application Auto Scaling
 * <p>With Application Auto Scaling, you can configure automatic scaling for the following resources:</p> <ul> <li> <p>Amazon AppStream 2.0 fleets</p> </li> <li> <p>Amazon Aurora Replicas</p> </li> <li> <p>Amazon Comprehend document classification and entity recognizer endpoints</p> </li> <li> <p>Amazon DynamoDB tables and global secondary indexes throughput capacity</p> </li> <li> <p>Amazon ECS services</p> </li> <li> <p>Amazon ElastiCache for Redis clusters (replication groups)</p> </li> <li> <p>Amazon EMR clusters</p> </li> <li> <p>Amazon Keyspaces (for Apache Cassandra) tables</p> </li> <li> <p>Lambda function provisioned concurrency</p> </li> <li> <p>Amazon Managed Streaming for Apache Kafka broker storage</p> </li> <li> <p>Amazon Neptune clusters</p> </li> <li> <p>Amazon SageMaker endpoint variants</p> </li> <li> <p>Amazon SageMaker Serverless endpoint provisioned concurrency</p> </li> <li> <p>Spot Fleets (Amazon EC2)</p> </li> <li> <p>Custom resources provided by your own applications or services</p> </li> </ul> <p>To learn more about Application Auto Scaling, see the <a href=\"https://docs.aws.amazon.com/autoscaling/application/userguide/what-is-application-auto-scaling.html\">Application Auto Scaling User Guide</a>.</p> <p> <b>API Summary</b> </p> <p>The Application Auto Scaling service API includes three key sets of actions: </p> <ul> <li> <p>Register and manage scalable targets - Register Amazon Web Services or custom resources as scalable targets (a resource that Application Auto Scaling can scale), set minimum and maximum capacity limits, and retrieve information on existing scalable targets.</p> </li> <li> <p>Configure and manage automatic scaling - Define scaling policies to dynamically scale your resources in response to CloudWatch alarms, schedule one-time or recurring scaling actions, and retrieve your recent scaling activity history.</p> </li> <li> <p>Suspend and resume scaling - Temporarily suspend and later resume automatic scaling by calling the <a href=\"https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html\">RegisterScalableTarget</a> API action for any Application Auto Scaling scalable target. You can suspend and resume (individually or in combination) scale-out activities that are triggered by a scaling policy, scale-in activities that are triggered by a scaling policy, and scheduled scaling.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2016-02-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ScalableDimension;
import org.openapitools.client.model.ScalingActivityStatusCode;
import org.openapitools.client.model.ServiceNamespace;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a scaling activity.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:07.248597-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ScalingActivity {
  public static final String SERIALIZED_NAME_ACTIVITY_ID = "ActivityId";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_ID)
  private String activityId;

  public static final String SERIALIZED_NAME_SERVICE_NAMESPACE = "ServiceNamespace";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAMESPACE)
  private ServiceNamespace serviceNamespace;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "ResourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_SCALABLE_DIMENSION = "ScalableDimension";
  @SerializedName(SERIALIZED_NAME_SCALABLE_DIMENSION)
  private ScalableDimension scalableDimension;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CAUSE = "Cause";
  @SerializedName(SERIALIZED_NAME_CAUSE)
  private String cause;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_STATUS_CODE = "StatusCode";
  @SerializedName(SERIALIZED_NAME_STATUS_CODE)
  private ScalingActivityStatusCode statusCode;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "StatusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_DETAILS = "Details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private String details;

  public static final String SERIALIZED_NAME_NOT_SCALED_REASONS = "NotScaledReasons";
  @SerializedName(SERIALIZED_NAME_NOT_SCALED_REASONS)
  private List notScaledReasons;

  public ScalingActivity() {
  }

  public ScalingActivity activityId(String activityId) {
    this.activityId = activityId;
    return this;
  }

  /**
   * Get activityId
   * @return activityId
   */
  @javax.annotation.Nonnull
  public String getActivityId() {
    return activityId;
  }

  public void setActivityId(String activityId) {
    this.activityId = activityId;
  }


  public ScalingActivity serviceNamespace(ServiceNamespace serviceNamespace) {
    this.serviceNamespace = serviceNamespace;
    return this;
  }

  /**
   * Get serviceNamespace
   * @return serviceNamespace
   */
  @javax.annotation.Nonnull
  public ServiceNamespace getServiceNamespace() {
    return serviceNamespace;
  }

  public void setServiceNamespace(ServiceNamespace serviceNamespace) {
    this.serviceNamespace = serviceNamespace;
  }


  public ScalingActivity resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nonnull
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public ScalingActivity scalableDimension(ScalableDimension scalableDimension) {
    this.scalableDimension = scalableDimension;
    return this;
  }

  /**
   * Get scalableDimension
   * @return scalableDimension
   */
  @javax.annotation.Nonnull
  public ScalableDimension getScalableDimension() {
    return scalableDimension;
  }

  public void setScalableDimension(ScalableDimension scalableDimension) {
    this.scalableDimension = scalableDimension;
  }


  public ScalingActivity description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ScalingActivity cause(String cause) {
    this.cause = cause;
    return this;
  }

  /**
   * Get cause
   * @return cause
   */
  @javax.annotation.Nonnull
  public String getCause() {
    return cause;
  }

  public void setCause(String cause) {
    this.cause = cause;
  }


  public ScalingActivity startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public ScalingActivity endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public ScalingActivity statusCode(ScalingActivityStatusCode statusCode) {
    this.statusCode = statusCode;
    return this;
  }

  /**
   * Get statusCode
   * @return statusCode
   */
  @javax.annotation.Nonnull
  public ScalingActivityStatusCode getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(ScalingActivityStatusCode statusCode) {
    this.statusCode = statusCode;
  }


  public ScalingActivity statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public ScalingActivity details(String details) {
    this.details = details;
    return this;
  }

  /**
   * Get details
   * @return details
   */
  @javax.annotation.Nullable
  public String getDetails() {
    return details;
  }

  public void setDetails(String details) {
    this.details = details;
  }


  public ScalingActivity notScaledReasons(List notScaledReasons) {
    this.notScaledReasons = notScaledReasons;
    return this;
  }

  /**
   * Get notScaledReasons
   * @return notScaledReasons
   */
  @javax.annotation.Nullable
  public List getNotScaledReasons() {
    return notScaledReasons;
  }

  public void setNotScaledReasons(List notScaledReasons) {
    this.notScaledReasons = notScaledReasons;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScalingActivity scalingActivity = (ScalingActivity) o;
    return Objects.equals(this.activityId, scalingActivity.activityId) &&
        Objects.equals(this.serviceNamespace, scalingActivity.serviceNamespace) &&
        Objects.equals(this.resourceId, scalingActivity.resourceId) &&
        Objects.equals(this.scalableDimension, scalingActivity.scalableDimension) &&
        Objects.equals(this.description, scalingActivity.description) &&
        Objects.equals(this.cause, scalingActivity.cause) &&
        Objects.equals(this.startTime, scalingActivity.startTime) &&
        Objects.equals(this.endTime, scalingActivity.endTime) &&
        Objects.equals(this.statusCode, scalingActivity.statusCode) &&
        Objects.equals(this.statusMessage, scalingActivity.statusMessage) &&
        Objects.equals(this.details, scalingActivity.details) &&
        Objects.equals(this.notScaledReasons, scalingActivity.notScaledReasons);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activityId, serviceNamespace, resourceId, scalableDimension, description, cause, startTime, endTime, statusCode, statusMessage, details, notScaledReasons);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScalingActivity {\n");
    sb.append("    activityId: ").append(toIndentedString(activityId)).append("\n");
    sb.append("    serviceNamespace: ").append(toIndentedString(serviceNamespace)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    scalableDimension: ").append(toIndentedString(scalableDimension)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    cause: ").append(toIndentedString(cause)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    notScaledReasons: ").append(toIndentedString(notScaledReasons)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ActivityId");
    openapiFields.add("ServiceNamespace");
    openapiFields.add("ResourceId");
    openapiFields.add("ScalableDimension");
    openapiFields.add("Description");
    openapiFields.add("Cause");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("StatusCode");
    openapiFields.add("StatusMessage");
    openapiFields.add("Details");
    openapiFields.add("NotScaledReasons");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ActivityId");
    openapiRequiredFields.add("ServiceNamespace");
    openapiRequiredFields.add("ResourceId");
    openapiRequiredFields.add("ScalableDimension");
    openapiRequiredFields.add("Description");
    openapiRequiredFields.add("Cause");
    openapiRequiredFields.add("StartTime");
    openapiRequiredFields.add("StatusCode");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ScalingActivity
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ScalingActivity.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScalingActivity is not found in the empty JSON string", ScalingActivity.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ScalingActivity.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ScalingActivity` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ScalingActivity.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ActivityId`
      String.validateJsonElement(jsonObj.get("ActivityId"));
      // validate the required field `ServiceNamespace`
      ServiceNamespace.validateJsonElement(jsonObj.get("ServiceNamespace"));
      // validate the required field `ResourceId`
      String.validateJsonElement(jsonObj.get("ResourceId"));
      // validate the required field `ScalableDimension`
      ScalableDimension.validateJsonElement(jsonObj.get("ScalableDimension"));
      // validate the required field `Description`
      String.validateJsonElement(jsonObj.get("Description"));
      // validate the required field `Cause`
      String.validateJsonElement(jsonObj.get("Cause"));
      // validate the required field `StartTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the required field `StatusCode`
      ScalingActivityStatusCode.validateJsonElement(jsonObj.get("StatusCode"));
      // validate the optional field `StatusMessage`
      if (jsonObj.get("StatusMessage") != null && !jsonObj.get("StatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusMessage"));
      }
      // validate the optional field `Details`
      if (jsonObj.get("Details") != null && !jsonObj.get("Details").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Details"));
      }
      // validate the optional field `NotScaledReasons`
      if (jsonObj.get("NotScaledReasons") != null && !jsonObj.get("NotScaledReasons").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("NotScaledReasons"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScalingActivity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScalingActivity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScalingActivity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScalingActivity.class));

       return (TypeAdapter<T>) new TypeAdapter<ScalingActivity>() {
           @Override
           public void write(JsonWriter out, ScalingActivity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ScalingActivity read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ScalingActivity given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ScalingActivity
   * @throws IOException if the JSON string is invalid with respect to ScalingActivity
   */
  public static ScalingActivity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScalingActivity.class);
  }

  /**
   * Convert an instance of ScalingActivity to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

