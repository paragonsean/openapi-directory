/*
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ApiAccess;
import org.openapitools.client.model.UserStatus;
import org.openapitools.client.model.UserType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetUserResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:36.596014-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetUserResponse {
  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private UserStatus status;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS = "emailAddress";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS)
  private String emailAddress;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private UserType type;

  public static final String SERIALIZED_NAME_API_ACCESS = "apiAccess";
  @SerializedName(SERIALIZED_NAME_API_ACCESS)
  private ApiAccess apiAccess;

  public static final String SERIALIZED_NAME_API_ACCESS_PRINCIPAL_ARN = "apiAccessPrincipalArn";
  @SerializedName(SERIALIZED_NAME_API_ACCESS_PRINCIPAL_ARN)
  private String apiAccessPrincipalArn;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private Integer createTime;

  public static final String SERIALIZED_NAME_LAST_ENABLED_TIME = "lastEnabledTime";
  @SerializedName(SERIALIZED_NAME_LAST_ENABLED_TIME)
  private Integer lastEnabledTime;

  public static final String SERIALIZED_NAME_LAST_DISABLED_TIME = "lastDisabledTime";
  @SerializedName(SERIALIZED_NAME_LAST_DISABLED_TIME)
  private Integer lastDisabledTime;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "lastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private Integer lastModifiedTime;

  public static final String SERIALIZED_NAME_LAST_LOGIN_TIME = "lastLoginTime";
  @SerializedName(SERIALIZED_NAME_LAST_LOGIN_TIME)
  private Integer lastLoginTime;

  public GetUserResponse() {
  }

  public GetUserResponse userId(String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }


  public GetUserResponse status(UserStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public UserStatus getStatus() {
    return status;
  }

  public void setStatus(UserStatus status) {
    this.status = status;
  }


  public GetUserResponse firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public GetUserResponse lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public GetUserResponse emailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

  /**
   * Get emailAddress
   * @return emailAddress
   */
  @javax.annotation.Nullable
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }


  public GetUserResponse type(UserType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public UserType getType() {
    return type;
  }

  public void setType(UserType type) {
    this.type = type;
  }


  public GetUserResponse apiAccess(ApiAccess apiAccess) {
    this.apiAccess = apiAccess;
    return this;
  }

  /**
   * Get apiAccess
   * @return apiAccess
   */
  @javax.annotation.Nullable
  public ApiAccess getApiAccess() {
    return apiAccess;
  }

  public void setApiAccess(ApiAccess apiAccess) {
    this.apiAccess = apiAccess;
  }


  public GetUserResponse apiAccessPrincipalArn(String apiAccessPrincipalArn) {
    this.apiAccessPrincipalArn = apiAccessPrincipalArn;
    return this;
  }

  /**
   * Get apiAccessPrincipalArn
   * @return apiAccessPrincipalArn
   */
  @javax.annotation.Nullable
  public String getApiAccessPrincipalArn() {
    return apiAccessPrincipalArn;
  }

  public void setApiAccessPrincipalArn(String apiAccessPrincipalArn) {
    this.apiAccessPrincipalArn = apiAccessPrincipalArn;
  }


  public GetUserResponse createTime(Integer createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Get createTime
   * @return createTime
   */
  @javax.annotation.Nullable
  public Integer getCreateTime() {
    return createTime;
  }

  public void setCreateTime(Integer createTime) {
    this.createTime = createTime;
  }


  public GetUserResponse lastEnabledTime(Integer lastEnabledTime) {
    this.lastEnabledTime = lastEnabledTime;
    return this;
  }

  /**
   * Get lastEnabledTime
   * @return lastEnabledTime
   */
  @javax.annotation.Nullable
  public Integer getLastEnabledTime() {
    return lastEnabledTime;
  }

  public void setLastEnabledTime(Integer lastEnabledTime) {
    this.lastEnabledTime = lastEnabledTime;
  }


  public GetUserResponse lastDisabledTime(Integer lastDisabledTime) {
    this.lastDisabledTime = lastDisabledTime;
    return this;
  }

  /**
   * Get lastDisabledTime
   * @return lastDisabledTime
   */
  @javax.annotation.Nullable
  public Integer getLastDisabledTime() {
    return lastDisabledTime;
  }

  public void setLastDisabledTime(Integer lastDisabledTime) {
    this.lastDisabledTime = lastDisabledTime;
  }


  public GetUserResponse lastModifiedTime(Integer lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public Integer getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(Integer lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public GetUserResponse lastLoginTime(Integer lastLoginTime) {
    this.lastLoginTime = lastLoginTime;
    return this;
  }

  /**
   * Get lastLoginTime
   * @return lastLoginTime
   */
  @javax.annotation.Nullable
  public Integer getLastLoginTime() {
    return lastLoginTime;
  }

  public void setLastLoginTime(Integer lastLoginTime) {
    this.lastLoginTime = lastLoginTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetUserResponse getUserResponse = (GetUserResponse) o;
    return Objects.equals(this.userId, getUserResponse.userId) &&
        Objects.equals(this.status, getUserResponse.status) &&
        Objects.equals(this.firstName, getUserResponse.firstName) &&
        Objects.equals(this.lastName, getUserResponse.lastName) &&
        Objects.equals(this.emailAddress, getUserResponse.emailAddress) &&
        Objects.equals(this.type, getUserResponse.type) &&
        Objects.equals(this.apiAccess, getUserResponse.apiAccess) &&
        Objects.equals(this.apiAccessPrincipalArn, getUserResponse.apiAccessPrincipalArn) &&
        Objects.equals(this.createTime, getUserResponse.createTime) &&
        Objects.equals(this.lastEnabledTime, getUserResponse.lastEnabledTime) &&
        Objects.equals(this.lastDisabledTime, getUserResponse.lastDisabledTime) &&
        Objects.equals(this.lastModifiedTime, getUserResponse.lastModifiedTime) &&
        Objects.equals(this.lastLoginTime, getUserResponse.lastLoginTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, status, firstName, lastName, emailAddress, type, apiAccess, apiAccessPrincipalArn, createTime, lastEnabledTime, lastDisabledTime, lastModifiedTime, lastLoginTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetUserResponse {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    apiAccess: ").append(toIndentedString(apiAccess)).append("\n");
    sb.append("    apiAccessPrincipalArn: ").append(toIndentedString(apiAccessPrincipalArn)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    lastEnabledTime: ").append(toIndentedString(lastEnabledTime)).append("\n");
    sb.append("    lastDisabledTime: ").append(toIndentedString(lastDisabledTime)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    lastLoginTime: ").append(toIndentedString(lastLoginTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("userId");
    openapiFields.add("status");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("emailAddress");
    openapiFields.add("type");
    openapiFields.add("apiAccess");
    openapiFields.add("apiAccessPrincipalArn");
    openapiFields.add("createTime");
    openapiFields.add("lastEnabledTime");
    openapiFields.add("lastDisabledTime");
    openapiFields.add("lastModifiedTime");
    openapiFields.add("lastLoginTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetUserResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetUserResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetUserResponse is not found in the empty JSON string", GetUserResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetUserResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetUserResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `userId`
      if (jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("userId"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        UserStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `firstName`
      if (jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("firstName"));
      }
      // validate the optional field `lastName`
      if (jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("lastName"));
      }
      // validate the optional field `emailAddress`
      if (jsonObj.get("emailAddress") != null && !jsonObj.get("emailAddress").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("emailAddress"));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        UserType.validateJsonElement(jsonObj.get("type"));
      }
      // validate the optional field `apiAccess`
      if (jsonObj.get("apiAccess") != null && !jsonObj.get("apiAccess").isJsonNull()) {
        ApiAccess.validateJsonElement(jsonObj.get("apiAccess"));
      }
      // validate the optional field `apiAccessPrincipalArn`
      if (jsonObj.get("apiAccessPrincipalArn") != null && !jsonObj.get("apiAccessPrincipalArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("apiAccessPrincipalArn"));
      }
      // validate the optional field `createTime`
      if (jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("createTime"));
      }
      // validate the optional field `lastEnabledTime`
      if (jsonObj.get("lastEnabledTime") != null && !jsonObj.get("lastEnabledTime").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("lastEnabledTime"));
      }
      // validate the optional field `lastDisabledTime`
      if (jsonObj.get("lastDisabledTime") != null && !jsonObj.get("lastDisabledTime").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("lastDisabledTime"));
      }
      // validate the optional field `lastModifiedTime`
      if (jsonObj.get("lastModifiedTime") != null && !jsonObj.get("lastModifiedTime").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("lastModifiedTime"));
      }
      // validate the optional field `lastLoginTime`
      if (jsonObj.get("lastLoginTime") != null && !jsonObj.get("lastLoginTime").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("lastLoginTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetUserResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetUserResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetUserResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetUserResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetUserResponse>() {
           @Override
           public void write(JsonWriter out, GetUserResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetUserResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetUserResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetUserResponse
   * @throws IOException if the JSON string is invalid with respect to GetUserResponse
   */
  public static GetUserResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetUserResponse.class);
  }

  /**
   * Convert an instance of GetUserResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

