/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetUserResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetUserResponse::OAIGetUserResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetUserResponse::OAIGetUserResponse() {
    this->initializeModel();
}

OAIGetUserResponse::~OAIGetUserResponse() {}

void OAIGetUserResponse::initializeModel() {

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_api_access_isSet = false;
    m_api_access_isValid = false;

    m_api_access_principal_arn_isSet = false;
    m_api_access_principal_arn_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_last_enabled_time_isSet = false;
    m_last_enabled_time_isValid = false;

    m_last_disabled_time_isSet = false;
    m_last_disabled_time_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_last_login_time_isSet = false;
    m_last_login_time_isValid = false;
}

void OAIGetUserResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetUserResponse::fromJsonObject(QJsonObject json) {

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("emailAddress")]);
    m_email_address_isSet = !json[QString("emailAddress")].isNull() && m_email_address_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_api_access_isValid = ::OpenAPI::fromJsonValue(m_api_access, json[QString("apiAccess")]);
    m_api_access_isSet = !json[QString("apiAccess")].isNull() && m_api_access_isValid;

    m_api_access_principal_arn_isValid = ::OpenAPI::fromJsonValue(m_api_access_principal_arn, json[QString("apiAccessPrincipalArn")]);
    m_api_access_principal_arn_isSet = !json[QString("apiAccessPrincipalArn")].isNull() && m_api_access_principal_arn_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_last_enabled_time_isValid = ::OpenAPI::fromJsonValue(m_last_enabled_time, json[QString("lastEnabledTime")]);
    m_last_enabled_time_isSet = !json[QString("lastEnabledTime")].isNull() && m_last_enabled_time_isValid;

    m_last_disabled_time_isValid = ::OpenAPI::fromJsonValue(m_last_disabled_time, json[QString("lastDisabledTime")]);
    m_last_disabled_time_isSet = !json[QString("lastDisabledTime")].isNull() && m_last_disabled_time_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_last_login_time_isValid = ::OpenAPI::fromJsonValue(m_last_login_time, json[QString("lastLoginTime")]);
    m_last_login_time_isSet = !json[QString("lastLoginTime")].isNull() && m_last_login_time_isValid;
}

QString OAIGetUserResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetUserResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_email_address_isSet) {
        obj.insert(QString("emailAddress"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_api_access.isSet()) {
        obj.insert(QString("apiAccess"), ::OpenAPI::toJsonValue(m_api_access));
    }
    if (m_api_access_principal_arn_isSet) {
        obj.insert(QString("apiAccessPrincipalArn"), ::OpenAPI::toJsonValue(m_api_access_principal_arn));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_last_enabled_time_isSet) {
        obj.insert(QString("lastEnabledTime"), ::OpenAPI::toJsonValue(m_last_enabled_time));
    }
    if (m_last_disabled_time_isSet) {
        obj.insert(QString("lastDisabledTime"), ::OpenAPI::toJsonValue(m_last_disabled_time));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_last_login_time_isSet) {
        obj.insert(QString("lastLoginTime"), ::OpenAPI::toJsonValue(m_last_login_time));
    }
    return obj;
}

QString OAIGetUserResponse::getUserId() const {
    return m_user_id;
}
void OAIGetUserResponse::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIGetUserResponse::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIGetUserResponse::is_user_id_Valid() const{
    return m_user_id_isValid;
}

OAIUserStatus OAIGetUserResponse::getStatus() const {
    return m_status;
}
void OAIGetUserResponse::setStatus(const OAIUserStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGetUserResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGetUserResponse::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIGetUserResponse::getFirstName() const {
    return m_first_name;
}
void OAIGetUserResponse::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIGetUserResponse::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIGetUserResponse::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIGetUserResponse::getLastName() const {
    return m_last_name;
}
void OAIGetUserResponse::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIGetUserResponse::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIGetUserResponse::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIGetUserResponse::getEmailAddress() const {
    return m_email_address;
}
void OAIGetUserResponse::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAIGetUserResponse::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAIGetUserResponse::is_email_address_Valid() const{
    return m_email_address_isValid;
}

OAIUserType OAIGetUserResponse::getType() const {
    return m_type;
}
void OAIGetUserResponse::setType(const OAIUserType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGetUserResponse::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGetUserResponse::is_type_Valid() const{
    return m_type_isValid;
}

OAIApiAccess OAIGetUserResponse::getApiAccess() const {
    return m_api_access;
}
void OAIGetUserResponse::setApiAccess(const OAIApiAccess &api_access) {
    m_api_access = api_access;
    m_api_access_isSet = true;
}

bool OAIGetUserResponse::is_api_access_Set() const{
    return m_api_access_isSet;
}

bool OAIGetUserResponse::is_api_access_Valid() const{
    return m_api_access_isValid;
}

QString OAIGetUserResponse::getApiAccessPrincipalArn() const {
    return m_api_access_principal_arn;
}
void OAIGetUserResponse::setApiAccessPrincipalArn(const QString &api_access_principal_arn) {
    m_api_access_principal_arn = api_access_principal_arn;
    m_api_access_principal_arn_isSet = true;
}

bool OAIGetUserResponse::is_api_access_principal_arn_Set() const{
    return m_api_access_principal_arn_isSet;
}

bool OAIGetUserResponse::is_api_access_principal_arn_Valid() const{
    return m_api_access_principal_arn_isValid;
}

qint32 OAIGetUserResponse::getCreateTime() const {
    return m_create_time;
}
void OAIGetUserResponse::setCreateTime(const qint32 &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGetUserResponse::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGetUserResponse::is_create_time_Valid() const{
    return m_create_time_isValid;
}

qint32 OAIGetUserResponse::getLastEnabledTime() const {
    return m_last_enabled_time;
}
void OAIGetUserResponse::setLastEnabledTime(const qint32 &last_enabled_time) {
    m_last_enabled_time = last_enabled_time;
    m_last_enabled_time_isSet = true;
}

bool OAIGetUserResponse::is_last_enabled_time_Set() const{
    return m_last_enabled_time_isSet;
}

bool OAIGetUserResponse::is_last_enabled_time_Valid() const{
    return m_last_enabled_time_isValid;
}

qint32 OAIGetUserResponse::getLastDisabledTime() const {
    return m_last_disabled_time;
}
void OAIGetUserResponse::setLastDisabledTime(const qint32 &last_disabled_time) {
    m_last_disabled_time = last_disabled_time;
    m_last_disabled_time_isSet = true;
}

bool OAIGetUserResponse::is_last_disabled_time_Set() const{
    return m_last_disabled_time_isSet;
}

bool OAIGetUserResponse::is_last_disabled_time_Valid() const{
    return m_last_disabled_time_isValid;
}

qint32 OAIGetUserResponse::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIGetUserResponse::setLastModifiedTime(const qint32 &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIGetUserResponse::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIGetUserResponse::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

qint32 OAIGetUserResponse::getLastLoginTime() const {
    return m_last_login_time;
}
void OAIGetUserResponse::setLastLoginTime(const qint32 &last_login_time) {
    m_last_login_time = last_login_time;
    m_last_login_time_isSet = true;
}

bool OAIGetUserResponse::is_last_login_time_Set() const{
    return m_last_login_time_isSet;
}

bool OAIGetUserResponse::is_last_login_time_Valid() const{
    return m_last_login_time_isValid;
}

bool OAIGetUserResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_access.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_access_principal_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_enabled_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_disabled_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_login_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetUserResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
