/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataViewStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataViewStatus::OAIDataViewStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataViewStatus::OAIDataViewStatus() {
    this->initializeModel();
}

OAIDataViewStatus::~OAIDataViewStatus() {}

void OAIDataViewStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDataViewStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDataViewStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("RUNNING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataViewStatus::RUNNING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("STARTING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataViewStatus::STARTING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataViewStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CANCELLED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataViewStatus::CANCELLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TIMEOUT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataViewStatus::TIMEOUT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SUCCESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataViewStatus::SUCCESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PENDING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataViewStatus::PENDING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED_CLEANUP_FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDataViewStatus::FAILED_CLEANUP_FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDataViewStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDataViewStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDataViewStatus::RUNNING:
            val = "RUNNING";
            break;
        case eOAIDataViewStatus::STARTING:
            val = "STARTING";
            break;
        case eOAIDataViewStatus::FAILED:
            val = "FAILED";
            break;
        case eOAIDataViewStatus::CANCELLED:
            val = "CANCELLED";
            break;
        case eOAIDataViewStatus::TIMEOUT:
            val = "TIMEOUT";
            break;
        case eOAIDataViewStatus::SUCCESS:
            val = "SUCCESS";
            break;
        case eOAIDataViewStatus::PENDING:
            val = "PENDING";
            break;
        case eOAIDataViewStatus::FAILED_CLEANUP_FAILED:
            val = "FAILED_CLEANUP_FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDataViewStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDataViewStatus::eOAIDataViewStatus OAIDataViewStatus::getValue() const {
    return m_value;
}

void OAIDataViewStatus::setValue(const OAIDataViewStatus::eOAIDataViewStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDataViewStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIDataViewStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
