/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetDatasetResponse_schemaDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetDatasetResponse_schemaDefinition::OAIGetDatasetResponse_schemaDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetDatasetResponse_schemaDefinition::OAIGetDatasetResponse_schemaDefinition() {
    this->initializeModel();
}

OAIGetDatasetResponse_schemaDefinition::~OAIGetDatasetResponse_schemaDefinition() {}

void OAIGetDatasetResponse_schemaDefinition::initializeModel() {

    m_tabular_schema_config_isSet = false;
    m_tabular_schema_config_isValid = false;
}

void OAIGetDatasetResponse_schemaDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetDatasetResponse_schemaDefinition::fromJsonObject(QJsonObject json) {

    m_tabular_schema_config_isValid = ::OpenAPI::fromJsonValue(m_tabular_schema_config, json[QString("tabularSchemaConfig")]);
    m_tabular_schema_config_isSet = !json[QString("tabularSchemaConfig")].isNull() && m_tabular_schema_config_isValid;
}

QString OAIGetDatasetResponse_schemaDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetDatasetResponse_schemaDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_tabular_schema_config.isSet()) {
        obj.insert(QString("tabularSchemaConfig"), ::OpenAPI::toJsonValue(m_tabular_schema_config));
    }
    return obj;
}

OAICreateDataset_request_schemaDefinition_tabularSchemaConfig OAIGetDatasetResponse_schemaDefinition::getTabularSchemaConfig() const {
    return m_tabular_schema_config;
}
void OAIGetDatasetResponse_schemaDefinition::setTabularSchemaConfig(const OAICreateDataset_request_schemaDefinition_tabularSchemaConfig &tabular_schema_config) {
    m_tabular_schema_config = tabular_schema_config;
    m_tabular_schema_config_isSet = true;
}

bool OAIGetDatasetResponse_schemaDefinition::is_tabular_schema_config_Set() const{
    return m_tabular_schema_config_isSet;
}

bool OAIGetDatasetResponse_schemaDefinition::is_tabular_schema_config_Valid() const{
    return m_tabular_schema_config_isValid;
}

bool OAIGetDatasetResponse_schemaDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tabular_schema_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetDatasetResponse_schemaDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
