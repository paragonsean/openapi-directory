/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetProgrammaticAccessCredentialsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetProgrammaticAccessCredentialsResponse::OAIGetProgrammaticAccessCredentialsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetProgrammaticAccessCredentialsResponse::OAIGetProgrammaticAccessCredentialsResponse() {
    this->initializeModel();
}

OAIGetProgrammaticAccessCredentialsResponse::~OAIGetProgrammaticAccessCredentialsResponse() {}

void OAIGetProgrammaticAccessCredentialsResponse::initializeModel() {

    m_credentials_isSet = false;
    m_credentials_isValid = false;

    m_duration_in_minutes_isSet = false;
    m_duration_in_minutes_isValid = false;
}

void OAIGetProgrammaticAccessCredentialsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetProgrammaticAccessCredentialsResponse::fromJsonObject(QJsonObject json) {

    m_credentials_isValid = ::OpenAPI::fromJsonValue(m_credentials, json[QString("credentials")]);
    m_credentials_isSet = !json[QString("credentials")].isNull() && m_credentials_isValid;

    m_duration_in_minutes_isValid = ::OpenAPI::fromJsonValue(m_duration_in_minutes, json[QString("durationInMinutes")]);
    m_duration_in_minutes_isSet = !json[QString("durationInMinutes")].isNull() && m_duration_in_minutes_isValid;
}

QString OAIGetProgrammaticAccessCredentialsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetProgrammaticAccessCredentialsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_credentials.isSet()) {
        obj.insert(QString("credentials"), ::OpenAPI::toJsonValue(m_credentials));
    }
    if (m_duration_in_minutes_isSet) {
        obj.insert(QString("durationInMinutes"), ::OpenAPI::toJsonValue(m_duration_in_minutes));
    }
    return obj;
}

OAIGetProgrammaticAccessCredentialsResponse_credentials OAIGetProgrammaticAccessCredentialsResponse::getCredentials() const {
    return m_credentials;
}
void OAIGetProgrammaticAccessCredentialsResponse::setCredentials(const OAIGetProgrammaticAccessCredentialsResponse_credentials &credentials) {
    m_credentials = credentials;
    m_credentials_isSet = true;
}

bool OAIGetProgrammaticAccessCredentialsResponse::is_credentials_Set() const{
    return m_credentials_isSet;
}

bool OAIGetProgrammaticAccessCredentialsResponse::is_credentials_Valid() const{
    return m_credentials_isValid;
}

qint32 OAIGetProgrammaticAccessCredentialsResponse::getDurationInMinutes() const {
    return m_duration_in_minutes;
}
void OAIGetProgrammaticAccessCredentialsResponse::setDurationInMinutes(const qint32 &duration_in_minutes) {
    m_duration_in_minutes = duration_in_minutes;
    m_duration_in_minutes_isSet = true;
}

bool OAIGetProgrammaticAccessCredentialsResponse::is_duration_in_minutes_Set() const{
    return m_duration_in_minutes_isSet;
}

bool OAIGetProgrammaticAccessCredentialsResponse::is_duration_in_minutes_Valid() const{
    return m_duration_in_minutes_isValid;
}

bool OAIGetProgrammaticAccessCredentialsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_credentials.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_in_minutes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetProgrammaticAccessCredentialsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
