/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateUser_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateUser_request::OAIUpdateUser_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateUser_request::OAIUpdateUser_request() {
    this->initializeModel();
}

OAIUpdateUser_request::~OAIUpdateUser_request() {}

void OAIUpdateUser_request::initializeModel() {

    m_type_isSet = false;
    m_type_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_api_access_isSet = false;
    m_api_access_isValid = false;

    m_api_access_principal_arn_isSet = false;
    m_api_access_principal_arn_isValid = false;

    m_client_token_isSet = false;
    m_client_token_isValid = false;
}

void OAIUpdateUser_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateUser_request::fromJsonObject(QJsonObject json) {

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_api_access_isValid = ::OpenAPI::fromJsonValue(m_api_access, json[QString("apiAccess")]);
    m_api_access_isSet = !json[QString("apiAccess")].isNull() && m_api_access_isValid;

    m_api_access_principal_arn_isValid = ::OpenAPI::fromJsonValue(m_api_access_principal_arn, json[QString("apiAccessPrincipalArn")]);
    m_api_access_principal_arn_isSet = !json[QString("apiAccessPrincipalArn")].isNull() && m_api_access_principal_arn_isValid;

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("clientToken")]);
    m_client_token_isSet = !json[QString("clientToken")].isNull() && m_client_token_isValid;
}

QString OAIUpdateUser_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateUser_request::asJsonObject() const {
    QJsonObject obj;
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_api_access_isSet) {
        obj.insert(QString("apiAccess"), ::OpenAPI::toJsonValue(m_api_access));
    }
    if (m_api_access_principal_arn_isSet) {
        obj.insert(QString("apiAccessPrincipalArn"), ::OpenAPI::toJsonValue(m_api_access_principal_arn));
    }
    if (m_client_token_isSet) {
        obj.insert(QString("clientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    return obj;
}

QString OAIUpdateUser_request::getType() const {
    return m_type;
}
void OAIUpdateUser_request::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIUpdateUser_request::is_type_Set() const{
    return m_type_isSet;
}

bool OAIUpdateUser_request::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIUpdateUser_request::getFirstName() const {
    return m_first_name;
}
void OAIUpdateUser_request::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIUpdateUser_request::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIUpdateUser_request::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIUpdateUser_request::getLastName() const {
    return m_last_name;
}
void OAIUpdateUser_request::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIUpdateUser_request::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIUpdateUser_request::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIUpdateUser_request::getApiAccess() const {
    return m_api_access;
}
void OAIUpdateUser_request::setApiAccess(const QString &api_access) {
    m_api_access = api_access;
    m_api_access_isSet = true;
}

bool OAIUpdateUser_request::is_api_access_Set() const{
    return m_api_access_isSet;
}

bool OAIUpdateUser_request::is_api_access_Valid() const{
    return m_api_access_isValid;
}

QString OAIUpdateUser_request::getApiAccessPrincipalArn() const {
    return m_api_access_principal_arn;
}
void OAIUpdateUser_request::setApiAccessPrincipalArn(const QString &api_access_principal_arn) {
    m_api_access_principal_arn = api_access_principal_arn;
    m_api_access_principal_arn_isSet = true;
}

bool OAIUpdateUser_request::is_api_access_principal_arn_Set() const{
    return m_api_access_principal_arn_isSet;
}

bool OAIUpdateUser_request::is_api_access_principal_arn_Valid() const{
    return m_api_access_principal_arn_isValid;
}

QString OAIUpdateUser_request::getClientToken() const {
    return m_client_token;
}
void OAIUpdateUser_request::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAIUpdateUser_request::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAIUpdateUser_request::is_client_token_Valid() const{
    return m_client_token_isValid;
}

bool OAIUpdateUser_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_access_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_access_principal_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateUser_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
