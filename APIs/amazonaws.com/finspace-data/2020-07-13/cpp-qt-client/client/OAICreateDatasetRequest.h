/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateDatasetRequest.h
 *
 * The request for a CreateDataset operation
 */

#ifndef OAICreateDatasetRequest_H
#define OAICreateDatasetRequest_H

#include <QJsonObject>

#include "OAICreateDatasetRequest_ownerInfo.h"
#include "OAICreateDatasetRequest_permissionGroupParams.h"
#include "OAIDatasetKind.h"
#include "OAIGetDatasetResponse_schemaDefinition.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateDatasetRequest_ownerInfo;
class OAICreateDatasetRequest_permissionGroupParams;
class OAIGetDatasetResponse_schemaDefinition;

class OAICreateDatasetRequest : public OAIObject {
public:
    OAICreateDatasetRequest();
    OAICreateDatasetRequest(QString json);
    ~OAICreateDatasetRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QString getDatasetTitle() const;
    void setDatasetTitle(const QString &dataset_title);
    bool is_dataset_title_Set() const;
    bool is_dataset_title_Valid() const;

    OAIDatasetKind getKind() const;
    void setKind(const OAIDatasetKind &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getDatasetDescription() const;
    void setDatasetDescription(const QString &dataset_description);
    bool is_dataset_description_Set() const;
    bool is_dataset_description_Valid() const;

    OAICreateDatasetRequest_ownerInfo getOwnerInfo() const;
    void setOwnerInfo(const OAICreateDatasetRequest_ownerInfo &owner_info);
    bool is_owner_info_Set() const;
    bool is_owner_info_Valid() const;

    OAICreateDatasetRequest_permissionGroupParams getPermissionGroupParams() const;
    void setPermissionGroupParams(const OAICreateDatasetRequest_permissionGroupParams &permission_group_params);
    bool is_permission_group_params_Set() const;
    bool is_permission_group_params_Valid() const;

    QString getAlias() const;
    void setAlias(const QString &alias);
    bool is_alias_Set() const;
    bool is_alias_Valid() const;

    OAIGetDatasetResponse_schemaDefinition getSchemaDefinition() const;
    void setSchemaDefinition(const OAIGetDatasetResponse_schemaDefinition &schema_definition);
    bool is_schema_definition_Set() const;
    bool is_schema_definition_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QString m_dataset_title;
    bool m_dataset_title_isSet;
    bool m_dataset_title_isValid;

    OAIDatasetKind m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_dataset_description;
    bool m_dataset_description_isSet;
    bool m_dataset_description_isValid;

    OAICreateDatasetRequest_ownerInfo m_owner_info;
    bool m_owner_info_isSet;
    bool m_owner_info_isValid;

    OAICreateDatasetRequest_permissionGroupParams m_permission_group_params;
    bool m_permission_group_params_isSet;
    bool m_permission_group_params_isValid;

    QString m_alias;
    bool m_alias_isSet;
    bool m_alias_isValid;

    OAIGetDatasetResponse_schemaDefinition m_schema_definition;
    bool m_schema_definition_isSet;
    bool m_schema_definition_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateDatasetRequest)

#endif // OAICreateDatasetRequest_H
