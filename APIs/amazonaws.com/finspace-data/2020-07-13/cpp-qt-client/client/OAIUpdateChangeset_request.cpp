/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateChangeset_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateChangeset_request::OAIUpdateChangeset_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateChangeset_request::OAIUpdateChangeset_request() {
    this->initializeModel();
}

OAIUpdateChangeset_request::~OAIUpdateChangeset_request() {}

void OAIUpdateChangeset_request::initializeModel() {

    m_client_token_isSet = false;
    m_client_token_isValid = false;

    m_source_params_isSet = false;
    m_source_params_isValid = false;

    m_format_params_isSet = false;
    m_format_params_isValid = false;
}

void OAIUpdateChangeset_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateChangeset_request::fromJsonObject(QJsonObject json) {

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("clientToken")]);
    m_client_token_isSet = !json[QString("clientToken")].isNull() && m_client_token_isValid;

    m_source_params_isValid = ::OpenAPI::fromJsonValue(m_source_params, json[QString("sourceParams")]);
    m_source_params_isSet = !json[QString("sourceParams")].isNull() && m_source_params_isValid;

    m_format_params_isValid = ::OpenAPI::fromJsonValue(m_format_params, json[QString("formatParams")]);
    m_format_params_isSet = !json[QString("formatParams")].isNull() && m_format_params_isValid;
}

QString OAIUpdateChangeset_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateChangeset_request::asJsonObject() const {
    QJsonObject obj;
    if (m_client_token_isSet) {
        obj.insert(QString("clientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    if (m_source_params.size() > 0) {
        obj.insert(QString("sourceParams"), ::OpenAPI::toJsonValue(m_source_params));
    }
    if (m_format_params.size() > 0) {
        obj.insert(QString("formatParams"), ::OpenAPI::toJsonValue(m_format_params));
    }
    return obj;
}

QString OAIUpdateChangeset_request::getClientToken() const {
    return m_client_token;
}
void OAIUpdateChangeset_request::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAIUpdateChangeset_request::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAIUpdateChangeset_request::is_client_token_Valid() const{
    return m_client_token_isValid;
}

QMap<QString, QString> OAIUpdateChangeset_request::getSourceParams() const {
    return m_source_params;
}
void OAIUpdateChangeset_request::setSourceParams(const QMap<QString, QString> &source_params) {
    m_source_params = source_params;
    m_source_params_isSet = true;
}

bool OAIUpdateChangeset_request::is_source_params_Set() const{
    return m_source_params_isSet;
}

bool OAIUpdateChangeset_request::is_source_params_Valid() const{
    return m_source_params_isValid;
}

QMap<QString, QString> OAIUpdateChangeset_request::getFormatParams() const {
    return m_format_params;
}
void OAIUpdateChangeset_request::setFormatParams(const QMap<QString, QString> &format_params) {
    m_format_params = format_params;
    m_format_params_isSet = true;
}

bool OAIUpdateChangeset_request::is_format_params_Set() const{
    return m_format_params_isSet;
}

bool OAIUpdateChangeset_request::is_format_params_Valid() const{
    return m_format_params_isValid;
}

bool OAIUpdateChangeset_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_params.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_format_params.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateChangeset_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_source_params_isValid && m_format_params_isValid && true;
}

} // namespace OpenAPI
