/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateDataView_request_destinationTypeParams.h
 *
 * Structure for the Dataview destination type parameters.
 */

#ifndef OAICreateDataView_request_destinationTypeParams_H
#define OAICreateDataView_request_destinationTypeParams_H

#include <QJsonObject>

#include "OAIExportFileFormat.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateDataView_request_destinationTypeParams : public OAIObject {
public:
    OAICreateDataView_request_destinationTypeParams();
    OAICreateDataView_request_destinationTypeParams(QString json);
    ~OAICreateDataView_request_destinationTypeParams() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDestinationType() const;
    void setDestinationType(const QString &destination_type);
    bool is_destination_type_Set() const;
    bool is_destination_type_Valid() const;

    OAIExportFileFormat getS3DestinationExportFileFormat() const;
    void setS3DestinationExportFileFormat(const OAIExportFileFormat &s3_destination_export_file_format);
    bool is_s3_destination_export_file_format_Set() const;
    bool is_s3_destination_export_file_format_Valid() const;

    QMap getS3DestinationExportFileFormatOptions() const;
    void setS3DestinationExportFileFormatOptions(const QMap &s3_destination_export_file_format_options);
    bool is_s3_destination_export_file_format_options_Set() const;
    bool is_s3_destination_export_file_format_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_destination_type;
    bool m_destination_type_isSet;
    bool m_destination_type_isValid;

    OAIExportFileFormat m_s3_destination_export_file_format;
    bool m_s3_destination_export_file_format_isSet;
    bool m_s3_destination_export_file_format_isValid;

    QMap m_s3_destination_export_file_format_options;
    bool m_s3_destination_export_file_format_options_isSet;
    bool m_s3_destination_export_file_format_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateDataView_request_destinationTypeParams)

#endif // OAICreateDataView_request_destinationTypeParams_H
