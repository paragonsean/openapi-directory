/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateDatasetRequest_permissionGroupParams.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateDatasetRequest_permissionGroupParams::OAICreateDatasetRequest_permissionGroupParams(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateDatasetRequest_permissionGroupParams::OAICreateDatasetRequest_permissionGroupParams() {
    this->initializeModel();
}

OAICreateDatasetRequest_permissionGroupParams::~OAICreateDatasetRequest_permissionGroupParams() {}

void OAICreateDatasetRequest_permissionGroupParams::initializeModel() {

    m_permission_group_id_isSet = false;
    m_permission_group_id_isValid = false;

    m_dataset_permissions_isSet = false;
    m_dataset_permissions_isValid = false;
}

void OAICreateDatasetRequest_permissionGroupParams::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateDatasetRequest_permissionGroupParams::fromJsonObject(QJsonObject json) {

    m_permission_group_id_isValid = ::OpenAPI::fromJsonValue(m_permission_group_id, json[QString("permissionGroupId")]);
    m_permission_group_id_isSet = !json[QString("permissionGroupId")].isNull() && m_permission_group_id_isValid;

    m_dataset_permissions_isValid = ::OpenAPI::fromJsonValue(m_dataset_permissions, json[QString("datasetPermissions")]);
    m_dataset_permissions_isSet = !json[QString("datasetPermissions")].isNull() && m_dataset_permissions_isValid;
}

QString OAICreateDatasetRequest_permissionGroupParams::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateDatasetRequest_permissionGroupParams::asJsonObject() const {
    QJsonObject obj;
    if (m_permission_group_id_isSet) {
        obj.insert(QString("permissionGroupId"), ::OpenAPI::toJsonValue(m_permission_group_id));
    }
    if (m_dataset_permissions.isSet()) {
        obj.insert(QString("datasetPermissions"), ::OpenAPI::toJsonValue(m_dataset_permissions));
    }
    return obj;
}

QString OAICreateDatasetRequest_permissionGroupParams::getPermissionGroupId() const {
    return m_permission_group_id;
}
void OAICreateDatasetRequest_permissionGroupParams::setPermissionGroupId(const QString &permission_group_id) {
    m_permission_group_id = permission_group_id;
    m_permission_group_id_isSet = true;
}

bool OAICreateDatasetRequest_permissionGroupParams::is_permission_group_id_Set() const{
    return m_permission_group_id_isSet;
}

bool OAICreateDatasetRequest_permissionGroupParams::is_permission_group_id_Valid() const{
    return m_permission_group_id_isValid;
}

QList OAICreateDatasetRequest_permissionGroupParams::getDatasetPermissions() const {
    return m_dataset_permissions;
}
void OAICreateDatasetRequest_permissionGroupParams::setDatasetPermissions(const QList &dataset_permissions) {
    m_dataset_permissions = dataset_permissions;
    m_dataset_permissions_isSet = true;
}

bool OAICreateDatasetRequest_permissionGroupParams::is_dataset_permissions_Set() const{
    return m_dataset_permissions_isSet;
}

bool OAICreateDatasetRequest_permissionGroupParams::is_dataset_permissions_Valid() const{
    return m_dataset_permissions_isValid;
}

bool OAICreateDatasetRequest_permissionGroupParams::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_permission_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dataset_permissions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateDatasetRequest_permissionGroupParams::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
