/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChangesetSummary.h
 *
 * A Changeset is unit of data in a Dataset.
 */

#ifndef OAIChangesetSummary_H
#define OAIChangesetSummary_H

#include <QJsonObject>

#include "OAIChangeType.h"
#include "OAIGetChangesetResponse_errorInfo.h"
#include "OAIIngestionStatus.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetChangesetResponse_errorInfo;

class OAIChangesetSummary : public OAIObject {
public:
    OAIChangesetSummary();
    OAIChangesetSummary(QString json);
    ~OAIChangesetSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getChangesetId() const;
    void setChangesetId(const QString &changeset_id);
    bool is_changeset_id_Set() const;
    bool is_changeset_id_Valid() const;

    QString getChangesetArn() const;
    void setChangesetArn(const QString &changeset_arn);
    bool is_changeset_arn_Set() const;
    bool is_changeset_arn_Valid() const;

    QString getDatasetId() const;
    void setDatasetId(const QString &dataset_id);
    bool is_dataset_id_Set() const;
    bool is_dataset_id_Valid() const;

    OAIChangeType getChangeType() const;
    void setChangeType(const OAIChangeType &change_type);
    bool is_change_type_Set() const;
    bool is_change_type_Valid() const;

    QMap getSourceParams() const;
    void setSourceParams(const QMap &source_params);
    bool is_source_params_Set() const;
    bool is_source_params_Valid() const;

    QMap getFormatParams() const;
    void setFormatParams(const QMap &format_params);
    bool is_format_params_Set() const;
    bool is_format_params_Valid() const;

    qint32 getCreateTime() const;
    void setCreateTime(const qint32 &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    OAIIngestionStatus getStatus() const;
    void setStatus(const OAIIngestionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIGetChangesetResponse_errorInfo getErrorInfo() const;
    void setErrorInfo(const OAIGetChangesetResponse_errorInfo &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    qint32 getActiveUntilTimestamp() const;
    void setActiveUntilTimestamp(const qint32 &active_until_timestamp);
    bool is_active_until_timestamp_Set() const;
    bool is_active_until_timestamp_Valid() const;

    qint32 getActiveFromTimestamp() const;
    void setActiveFromTimestamp(const qint32 &active_from_timestamp);
    bool is_active_from_timestamp_Set() const;
    bool is_active_from_timestamp_Valid() const;

    QString getUpdatesChangesetId() const;
    void setUpdatesChangesetId(const QString &updates_changeset_id);
    bool is_updates_changeset_id_Set() const;
    bool is_updates_changeset_id_Valid() const;

    QString getUpdatedByChangesetId() const;
    void setUpdatedByChangesetId(const QString &updated_by_changeset_id);
    bool is_updated_by_changeset_id_Set() const;
    bool is_updated_by_changeset_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_changeset_id;
    bool m_changeset_id_isSet;
    bool m_changeset_id_isValid;

    QString m_changeset_arn;
    bool m_changeset_arn_isSet;
    bool m_changeset_arn_isValid;

    QString m_dataset_id;
    bool m_dataset_id_isSet;
    bool m_dataset_id_isValid;

    OAIChangeType m_change_type;
    bool m_change_type_isSet;
    bool m_change_type_isValid;

    QMap m_source_params;
    bool m_source_params_isSet;
    bool m_source_params_isValid;

    QMap m_format_params;
    bool m_format_params_isSet;
    bool m_format_params_isValid;

    qint32 m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    OAIIngestionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIGetChangesetResponse_errorInfo m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    qint32 m_active_until_timestamp;
    bool m_active_until_timestamp_isSet;
    bool m_active_until_timestamp_isValid;

    qint32 m_active_from_timestamp;
    bool m_active_from_timestamp_isSet;
    bool m_active_from_timestamp_isValid;

    QString m_updates_changeset_id;
    bool m_updates_changeset_id_isSet;
    bool m_updates_changeset_id_isValid;

    QString m_updated_by_changeset_id;
    bool m_updated_by_changeset_id_isSet;
    bool m_updated_by_changeset_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChangesetSummary)

#endif // OAIChangesetSummary_H
