# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.column_data_type import ColumnDataType
from openapi_server import util


class ColumnDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_type: ColumnDataType=None, column_name: str=None, column_description: str=None):
        """ColumnDefinition - a model defined in OpenAPI

        :param data_type: The data_type of this ColumnDefinition.
        :param column_name: The column_name of this ColumnDefinition.
        :param column_description: The column_description of this ColumnDefinition.
        """
        self.openapi_types = {
            'data_type': ColumnDataType,
            'column_name': str,
            'column_description': str
        }

        self.attribute_map = {
            'data_type': 'dataType',
            'column_name': 'columnName',
            'column_description': 'columnDescription'
        }

        self._data_type = data_type
        self._column_name = column_name
        self._column_description = column_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ColumnDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ColumnDefinition of this ColumnDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_type(self):
        """Gets the data_type of this ColumnDefinition.


        :return: The data_type of this ColumnDefinition.
        :rtype: ColumnDataType
        """
        return self._data_type

    @data_type.setter
    def data_type(self, data_type):
        """Sets the data_type of this ColumnDefinition.


        :param data_type: The data_type of this ColumnDefinition.
        :type data_type: ColumnDataType
        """

        self._data_type = data_type

    @property
    def column_name(self):
        """Gets the column_name of this ColumnDefinition.


        :return: The column_name of this ColumnDefinition.
        :rtype: str
        """
        return self._column_name

    @column_name.setter
    def column_name(self, column_name):
        """Sets the column_name of this ColumnDefinition.


        :param column_name: The column_name of this ColumnDefinition.
        :type column_name: str
        """

        self._column_name = column_name

    @property
    def column_description(self):
        """Gets the column_description of this ColumnDefinition.


        :return: The column_description of this ColumnDefinition.
        :rtype: str
        """
        return self._column_description

    @column_description.setter
    def column_description(self, column_description):
        """Sets the column_description of this ColumnDefinition.


        :param column_description: The column_description of this ColumnDefinition.
        :type column_description: str
        """

        self._column_description = column_description
