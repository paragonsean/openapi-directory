# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.change_type import ChangeType
from openapi_server.models.get_changeset_response_error_info import GetChangesetResponseErrorInfo
from openapi_server.models.ingestion_status import IngestionStatus
from openapi_server import util


class ChangesetSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, changeset_id: str=None, changeset_arn: str=None, dataset_id: str=None, change_type: ChangeType=None, source_params: Dict=None, format_params: Dict=None, create_time: int=None, status: IngestionStatus=None, error_info: GetChangesetResponseErrorInfo=None, active_until_timestamp: int=None, active_from_timestamp: int=None, updates_changeset_id: str=None, updated_by_changeset_id: str=None):
        """ChangesetSummary - a model defined in OpenAPI

        :param changeset_id: The changeset_id of this ChangesetSummary.
        :param changeset_arn: The changeset_arn of this ChangesetSummary.
        :param dataset_id: The dataset_id of this ChangesetSummary.
        :param change_type: The change_type of this ChangesetSummary.
        :param source_params: The source_params of this ChangesetSummary.
        :param format_params: The format_params of this ChangesetSummary.
        :param create_time: The create_time of this ChangesetSummary.
        :param status: The status of this ChangesetSummary.
        :param error_info: The error_info of this ChangesetSummary.
        :param active_until_timestamp: The active_until_timestamp of this ChangesetSummary.
        :param active_from_timestamp: The active_from_timestamp of this ChangesetSummary.
        :param updates_changeset_id: The updates_changeset_id of this ChangesetSummary.
        :param updated_by_changeset_id: The updated_by_changeset_id of this ChangesetSummary.
        """
        self.openapi_types = {
            'changeset_id': str,
            'changeset_arn': str,
            'dataset_id': str,
            'change_type': ChangeType,
            'source_params': Dict,
            'format_params': Dict,
            'create_time': int,
            'status': IngestionStatus,
            'error_info': GetChangesetResponseErrorInfo,
            'active_until_timestamp': int,
            'active_from_timestamp': int,
            'updates_changeset_id': str,
            'updated_by_changeset_id': str
        }

        self.attribute_map = {
            'changeset_id': 'changesetId',
            'changeset_arn': 'changesetArn',
            'dataset_id': 'datasetId',
            'change_type': 'changeType',
            'source_params': 'sourceParams',
            'format_params': 'formatParams',
            'create_time': 'createTime',
            'status': 'status',
            'error_info': 'errorInfo',
            'active_until_timestamp': 'activeUntilTimestamp',
            'active_from_timestamp': 'activeFromTimestamp',
            'updates_changeset_id': 'updatesChangesetId',
            'updated_by_changeset_id': 'updatedByChangesetId'
        }

        self._changeset_id = changeset_id
        self._changeset_arn = changeset_arn
        self._dataset_id = dataset_id
        self._change_type = change_type
        self._source_params = source_params
        self._format_params = format_params
        self._create_time = create_time
        self._status = status
        self._error_info = error_info
        self._active_until_timestamp = active_until_timestamp
        self._active_from_timestamp = active_from_timestamp
        self._updates_changeset_id = updates_changeset_id
        self._updated_by_changeset_id = updated_by_changeset_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChangesetSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChangesetSummary of this ChangesetSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def changeset_id(self):
        """Gets the changeset_id of this ChangesetSummary.


        :return: The changeset_id of this ChangesetSummary.
        :rtype: str
        """
        return self._changeset_id

    @changeset_id.setter
    def changeset_id(self, changeset_id):
        """Sets the changeset_id of this ChangesetSummary.


        :param changeset_id: The changeset_id of this ChangesetSummary.
        :type changeset_id: str
        """

        self._changeset_id = changeset_id

    @property
    def changeset_arn(self):
        """Gets the changeset_arn of this ChangesetSummary.


        :return: The changeset_arn of this ChangesetSummary.
        :rtype: str
        """
        return self._changeset_arn

    @changeset_arn.setter
    def changeset_arn(self, changeset_arn):
        """Sets the changeset_arn of this ChangesetSummary.


        :param changeset_arn: The changeset_arn of this ChangesetSummary.
        :type changeset_arn: str
        """

        self._changeset_arn = changeset_arn

    @property
    def dataset_id(self):
        """Gets the dataset_id of this ChangesetSummary.


        :return: The dataset_id of this ChangesetSummary.
        :rtype: str
        """
        return self._dataset_id

    @dataset_id.setter
    def dataset_id(self, dataset_id):
        """Sets the dataset_id of this ChangesetSummary.


        :param dataset_id: The dataset_id of this ChangesetSummary.
        :type dataset_id: str
        """

        self._dataset_id = dataset_id

    @property
    def change_type(self):
        """Gets the change_type of this ChangesetSummary.


        :return: The change_type of this ChangesetSummary.
        :rtype: ChangeType
        """
        return self._change_type

    @change_type.setter
    def change_type(self, change_type):
        """Sets the change_type of this ChangesetSummary.


        :param change_type: The change_type of this ChangesetSummary.
        :type change_type: ChangeType
        """

        self._change_type = change_type

    @property
    def source_params(self):
        """Gets the source_params of this ChangesetSummary.


        :return: The source_params of this ChangesetSummary.
        :rtype: Dict
        """
        return self._source_params

    @source_params.setter
    def source_params(self, source_params):
        """Sets the source_params of this ChangesetSummary.


        :param source_params: The source_params of this ChangesetSummary.
        :type source_params: Dict
        """

        self._source_params = source_params

    @property
    def format_params(self):
        """Gets the format_params of this ChangesetSummary.


        :return: The format_params of this ChangesetSummary.
        :rtype: Dict
        """
        return self._format_params

    @format_params.setter
    def format_params(self, format_params):
        """Sets the format_params of this ChangesetSummary.


        :param format_params: The format_params of this ChangesetSummary.
        :type format_params: Dict
        """

        self._format_params = format_params

    @property
    def create_time(self):
        """Gets the create_time of this ChangesetSummary.


        :return: The create_time of this ChangesetSummary.
        :rtype: int
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this ChangesetSummary.


        :param create_time: The create_time of this ChangesetSummary.
        :type create_time: int
        """

        self._create_time = create_time

    @property
    def status(self):
        """Gets the status of this ChangesetSummary.


        :return: The status of this ChangesetSummary.
        :rtype: IngestionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ChangesetSummary.


        :param status: The status of this ChangesetSummary.
        :type status: IngestionStatus
        """

        self._status = status

    @property
    def error_info(self):
        """Gets the error_info of this ChangesetSummary.


        :return: The error_info of this ChangesetSummary.
        :rtype: GetChangesetResponseErrorInfo
        """
        return self._error_info

    @error_info.setter
    def error_info(self, error_info):
        """Sets the error_info of this ChangesetSummary.


        :param error_info: The error_info of this ChangesetSummary.
        :type error_info: GetChangesetResponseErrorInfo
        """

        self._error_info = error_info

    @property
    def active_until_timestamp(self):
        """Gets the active_until_timestamp of this ChangesetSummary.


        :return: The active_until_timestamp of this ChangesetSummary.
        :rtype: int
        """
        return self._active_until_timestamp

    @active_until_timestamp.setter
    def active_until_timestamp(self, active_until_timestamp):
        """Sets the active_until_timestamp of this ChangesetSummary.


        :param active_until_timestamp: The active_until_timestamp of this ChangesetSummary.
        :type active_until_timestamp: int
        """

        self._active_until_timestamp = active_until_timestamp

    @property
    def active_from_timestamp(self):
        """Gets the active_from_timestamp of this ChangesetSummary.


        :return: The active_from_timestamp of this ChangesetSummary.
        :rtype: int
        """
        return self._active_from_timestamp

    @active_from_timestamp.setter
    def active_from_timestamp(self, active_from_timestamp):
        """Sets the active_from_timestamp of this ChangesetSummary.


        :param active_from_timestamp: The active_from_timestamp of this ChangesetSummary.
        :type active_from_timestamp: int
        """

        self._active_from_timestamp = active_from_timestamp

    @property
    def updates_changeset_id(self):
        """Gets the updates_changeset_id of this ChangesetSummary.


        :return: The updates_changeset_id of this ChangesetSummary.
        :rtype: str
        """
        return self._updates_changeset_id

    @updates_changeset_id.setter
    def updates_changeset_id(self, updates_changeset_id):
        """Sets the updates_changeset_id of this ChangesetSummary.


        :param updates_changeset_id: The updates_changeset_id of this ChangesetSummary.
        :type updates_changeset_id: str
        """

        self._updates_changeset_id = updates_changeset_id

    @property
    def updated_by_changeset_id(self):
        """Gets the updated_by_changeset_id of this ChangesetSummary.


        :return: The updated_by_changeset_id of this ChangesetSummary.
        :rtype: str
        """
        return self._updated_by_changeset_id

    @updated_by_changeset_id.setter
    def updated_by_changeset_id(self, updated_by_changeset_id):
        """Sets the updated_by_changeset_id of this ChangesetSummary.


        :param updated_by_changeset_id: The updated_by_changeset_id of this ChangesetSummary.
        :type updated_by_changeset_id: str
        """

        self._updated_by_changeset_id = updated_by_changeset_id
