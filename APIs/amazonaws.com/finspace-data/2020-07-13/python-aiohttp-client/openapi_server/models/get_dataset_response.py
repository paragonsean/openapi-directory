# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dataset_kind import DatasetKind
from openapi_server.models.dataset_status import DatasetStatus
from openapi_server.models.get_dataset_response_schema_definition import GetDatasetResponseSchemaDefinition
from openapi_server import util


class GetDatasetResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataset_id: str=None, dataset_arn: str=None, dataset_title: str=None, kind: DatasetKind=None, dataset_description: str=None, create_time: int=None, last_modified_time: int=None, schema_definition: GetDatasetResponseSchemaDefinition=None, alias: str=None, status: DatasetStatus=None):
        """GetDatasetResponse - a model defined in OpenAPI

        :param dataset_id: The dataset_id of this GetDatasetResponse.
        :param dataset_arn: The dataset_arn of this GetDatasetResponse.
        :param dataset_title: The dataset_title of this GetDatasetResponse.
        :param kind: The kind of this GetDatasetResponse.
        :param dataset_description: The dataset_description of this GetDatasetResponse.
        :param create_time: The create_time of this GetDatasetResponse.
        :param last_modified_time: The last_modified_time of this GetDatasetResponse.
        :param schema_definition: The schema_definition of this GetDatasetResponse.
        :param alias: The alias of this GetDatasetResponse.
        :param status: The status of this GetDatasetResponse.
        """
        self.openapi_types = {
            'dataset_id': str,
            'dataset_arn': str,
            'dataset_title': str,
            'kind': DatasetKind,
            'dataset_description': str,
            'create_time': int,
            'last_modified_time': int,
            'schema_definition': GetDatasetResponseSchemaDefinition,
            'alias': str,
            'status': DatasetStatus
        }

        self.attribute_map = {
            'dataset_id': 'datasetId',
            'dataset_arn': 'datasetArn',
            'dataset_title': 'datasetTitle',
            'kind': 'kind',
            'dataset_description': 'datasetDescription',
            'create_time': 'createTime',
            'last_modified_time': 'lastModifiedTime',
            'schema_definition': 'schemaDefinition',
            'alias': 'alias',
            'status': 'status'
        }

        self._dataset_id = dataset_id
        self._dataset_arn = dataset_arn
        self._dataset_title = dataset_title
        self._kind = kind
        self._dataset_description = dataset_description
        self._create_time = create_time
        self._last_modified_time = last_modified_time
        self._schema_definition = schema_definition
        self._alias = alias
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDatasetResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDatasetResponse of this GetDatasetResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset_id(self):
        """Gets the dataset_id of this GetDatasetResponse.


        :return: The dataset_id of this GetDatasetResponse.
        :rtype: str
        """
        return self._dataset_id

    @dataset_id.setter
    def dataset_id(self, dataset_id):
        """Sets the dataset_id of this GetDatasetResponse.


        :param dataset_id: The dataset_id of this GetDatasetResponse.
        :type dataset_id: str
        """

        self._dataset_id = dataset_id

    @property
    def dataset_arn(self):
        """Gets the dataset_arn of this GetDatasetResponse.


        :return: The dataset_arn of this GetDatasetResponse.
        :rtype: str
        """
        return self._dataset_arn

    @dataset_arn.setter
    def dataset_arn(self, dataset_arn):
        """Sets the dataset_arn of this GetDatasetResponse.


        :param dataset_arn: The dataset_arn of this GetDatasetResponse.
        :type dataset_arn: str
        """

        self._dataset_arn = dataset_arn

    @property
    def dataset_title(self):
        """Gets the dataset_title of this GetDatasetResponse.


        :return: The dataset_title of this GetDatasetResponse.
        :rtype: str
        """
        return self._dataset_title

    @dataset_title.setter
    def dataset_title(self, dataset_title):
        """Sets the dataset_title of this GetDatasetResponse.


        :param dataset_title: The dataset_title of this GetDatasetResponse.
        :type dataset_title: str
        """

        self._dataset_title = dataset_title

    @property
    def kind(self):
        """Gets the kind of this GetDatasetResponse.


        :return: The kind of this GetDatasetResponse.
        :rtype: DatasetKind
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this GetDatasetResponse.


        :param kind: The kind of this GetDatasetResponse.
        :type kind: DatasetKind
        """

        self._kind = kind

    @property
    def dataset_description(self):
        """Gets the dataset_description of this GetDatasetResponse.


        :return: The dataset_description of this GetDatasetResponse.
        :rtype: str
        """
        return self._dataset_description

    @dataset_description.setter
    def dataset_description(self, dataset_description):
        """Sets the dataset_description of this GetDatasetResponse.


        :param dataset_description: The dataset_description of this GetDatasetResponse.
        :type dataset_description: str
        """

        self._dataset_description = dataset_description

    @property
    def create_time(self):
        """Gets the create_time of this GetDatasetResponse.


        :return: The create_time of this GetDatasetResponse.
        :rtype: int
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GetDatasetResponse.


        :param create_time: The create_time of this GetDatasetResponse.
        :type create_time: int
        """

        self._create_time = create_time

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this GetDatasetResponse.


        :return: The last_modified_time of this GetDatasetResponse.
        :rtype: int
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this GetDatasetResponse.


        :param last_modified_time: The last_modified_time of this GetDatasetResponse.
        :type last_modified_time: int
        """

        self._last_modified_time = last_modified_time

    @property
    def schema_definition(self):
        """Gets the schema_definition of this GetDatasetResponse.


        :return: The schema_definition of this GetDatasetResponse.
        :rtype: GetDatasetResponseSchemaDefinition
        """
        return self._schema_definition

    @schema_definition.setter
    def schema_definition(self, schema_definition):
        """Sets the schema_definition of this GetDatasetResponse.


        :param schema_definition: The schema_definition of this GetDatasetResponse.
        :type schema_definition: GetDatasetResponseSchemaDefinition
        """

        self._schema_definition = schema_definition

    @property
    def alias(self):
        """Gets the alias of this GetDatasetResponse.


        :return: The alias of this GetDatasetResponse.
        :rtype: str
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """Sets the alias of this GetDatasetResponse.


        :param alias: The alias of this GetDatasetResponse.
        :type alias: str
        """

        self._alias = alias

    @property
    def status(self):
        """Gets the status of this GetDatasetResponse.


        :return: The status of this GetDatasetResponse.
        :rtype: DatasetStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetDatasetResponse.


        :param status: The status of this GetDatasetResponse.
        :type status: DatasetStatus
        """

        self._status = status
