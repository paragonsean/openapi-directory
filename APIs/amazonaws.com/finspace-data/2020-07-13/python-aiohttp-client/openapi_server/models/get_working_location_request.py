# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetWorkingLocationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location_type: str=None):
        """GetWorkingLocationRequest - a model defined in OpenAPI

        :param location_type: The location_type of this GetWorkingLocationRequest.
        """
        self.openapi_types = {
            'location_type': str
        }

        self.attribute_map = {
            'location_type': 'locationType'
        }

        self._location_type = location_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetWorkingLocationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetWorkingLocation_request of this GetWorkingLocationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_type(self):
        """Gets the location_type of this GetWorkingLocationRequest.

        <p>Specify the type of the working location.</p> <ul> <li> <p> <code>SAGEMAKER</code> – Use the Amazon S3 location as a temporary location to store data content when working with FinSpace Notebooks that run on SageMaker studio.</p> </li> <li> <p> <code>INGESTION</code> – Use the Amazon S3 location as a staging location to copy your data content and then use the location with the Changeset creation operation.</p> </li> </ul>

        :return: The location_type of this GetWorkingLocationRequest.
        :rtype: str
        """
        return self._location_type

    @location_type.setter
    def location_type(self, location_type):
        """Sets the location_type of this GetWorkingLocationRequest.

        <p>Specify the type of the working location.</p> <ul> <li> <p> <code>SAGEMAKER</code> – Use the Amazon S3 location as a temporary location to store data content when working with FinSpace Notebooks that run on SageMaker studio.</p> </li> <li> <p> <code>INGESTION</code> – Use the Amazon S3 location as a staging location to copy your data content and then use the location with the Changeset creation operation.</p> </li> </ul>

        :param location_type: The location_type of this GetWorkingLocationRequest.
        :type location_type: str
        """
        allowed_values = ["INGESTION", "SAGEMAKER"]  # noqa: E501
        if location_type not in allowed_values:
            raise ValueError(
                "Invalid value for `location_type` ({0}), must be one of {1}"
                .format(location_type, allowed_values)
            )

        self._location_type = location_type
