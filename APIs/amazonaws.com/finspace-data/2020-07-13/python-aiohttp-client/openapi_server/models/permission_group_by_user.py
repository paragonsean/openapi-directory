# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.permission_group_membership_status import PermissionGroupMembershipStatus
from openapi_server import util


class PermissionGroupByUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, permission_group_id: str=None, name: str=None, membership_status: PermissionGroupMembershipStatus=None):
        """PermissionGroupByUser - a model defined in OpenAPI

        :param permission_group_id: The permission_group_id of this PermissionGroupByUser.
        :param name: The name of this PermissionGroupByUser.
        :param membership_status: The membership_status of this PermissionGroupByUser.
        """
        self.openapi_types = {
            'permission_group_id': str,
            'name': str,
            'membership_status': PermissionGroupMembershipStatus
        }

        self.attribute_map = {
            'permission_group_id': 'permissionGroupId',
            'name': 'name',
            'membership_status': 'membershipStatus'
        }

        self._permission_group_id = permission_group_id
        self._name = name
        self._membership_status = membership_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PermissionGroupByUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PermissionGroupByUser of this PermissionGroupByUser.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def permission_group_id(self):
        """Gets the permission_group_id of this PermissionGroupByUser.


        :return: The permission_group_id of this PermissionGroupByUser.
        :rtype: str
        """
        return self._permission_group_id

    @permission_group_id.setter
    def permission_group_id(self, permission_group_id):
        """Sets the permission_group_id of this PermissionGroupByUser.


        :param permission_group_id: The permission_group_id of this PermissionGroupByUser.
        :type permission_group_id: str
        """

        self._permission_group_id = permission_group_id

    @property
    def name(self):
        """Gets the name of this PermissionGroupByUser.


        :return: The name of this PermissionGroupByUser.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PermissionGroupByUser.


        :param name: The name of this PermissionGroupByUser.
        :type name: str
        """

        self._name = name

    @property
    def membership_status(self):
        """Gets the membership_status of this PermissionGroupByUser.


        :return: The membership_status of this PermissionGroupByUser.
        :rtype: PermissionGroupMembershipStatus
        """
        return self._membership_status

    @membership_status.setter
    def membership_status(self, membership_status):
        """Sets the membership_status of this PermissionGroupByUser.


        :param membership_status: The membership_status of this PermissionGroupByUser.
        :type membership_status: PermissionGroupMembershipStatus
        """

        self._membership_status = membership_status
