openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: ' The FinSpace APIs let you take actions inside the FinSpace.'
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: FinSpace Public API
  version: 2020-07-13
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: finspace-data
  x-aws-signingName: finspace-api
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/finspace-data-2020-07-13.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/finspace-api/
servers:
- description: The FinSpace Data multi-region endpoint
  url: "http://finspace-api.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The FinSpace Data multi-region endpoint
  url: "https://finspace-api.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The FinSpace Data endpoint for China (Beijing) and China (Ningxia)
  url: "http://finspace-api.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The FinSpace Data endpoint for China (Beijing) and China (Ningxia)
  url: "https://finspace-api.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /credentials/programmatic#environmentId:
    get:
      description: Request programmatic credentials to use with FinSpace SDK.
      operationId: get_programmatic_access_credentials
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The time duration in which the credentials remain valid. '
        explode: true
        in: query
        name: durationInMinutes
        required: false
        schema:
          maximum: 720
          minimum: 60
          type: integer
        style: form
      - description: The FinSpace environment identifier.
        explode: true
        in: query
        name: environmentId
        required: true
        schema:
          maxLength: 26
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProgrammaticAccessCredentialsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /datasets/{datasetId}/changesetsv2:
    get:
      description: Lists the FinSpace Changesets for a Dataset.
      operationId: list_changesets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the FinSpace Dataset to which the Changeset
          belongs.
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          description: ID for a given Dataset
          maxLength: 26
          minLength: 1
          type: string
        style: simple
      - description: The maximum number of results per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: A token that indicates where a results page should begin.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChangesetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a new Changeset in a FinSpace Dataset.
      operationId: create_changeset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The unique identifier for the FinSpace Dataset where the Changeset
          will be created. '
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          description: ID for a given Dataset
          maxLength: 26
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChangeset_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChangesetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /datasets/{datasetId}/changesetsv2/{changesetId}:
    get:
      description: Get information about a Changeset.
      operationId: get_changeset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the FinSpace Dataset where the Changeset
          is created.
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          description: ID for a given Dataset
          maxLength: 26
          minLength: 1
          type: string
        style: simple
      - description: The unique identifier of the Changeset for which to get data.
        explode: false
        in: path
        name: changesetId
        required: true
        schema:
          description: ID used to identify a Changeset
          maxLength: 26
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChangesetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates a FinSpace Changeset.
      operationId: update_changeset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the FinSpace Dataset in which the Changeset
          is created.
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          description: ID for a given Dataset
          maxLength: 26
          minLength: 1
          type: string
        style: simple
      - description: The unique identifier for the Changeset to update.
        explode: false
        in: path
        name: changesetId
        required: true
        schema:
          description: ID used to identify a Changeset
          maxLength: 26
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChangeset_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChangesetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /datasets/{datasetId}/dataviewsv2:
    get:
      description: Lists all available Dataviews for a Dataset.
      operationId: list_data_views
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the Dataset for which to retrieve Dataviews.
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          description: ID for a given Dataset
          maxLength: 26
          minLength: 1
          type: string
        style: simple
      - description: A token that indicates where a results page should begin.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataViewsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a Dataview for a Dataset.
      operationId: create_data_view
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique Dataset identifier that is used to create a Dataview.
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          description: ID for a given Dataset
          maxLength: 26
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataView_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataViewResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /datasets/{datasetId}/dataviewsv2/{dataviewId}:
    get:
      description: Gets information about a Dataview.
      operationId: get_data_view
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Dataview.
        explode: false
        in: path
        name: dataviewId
        required: true
        schema:
          description: DataView ID
          maxLength: 26
          minLength: 1
          type: string
        style: simple
      - description: The unique identifier for the Dataset used in the Dataview.
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          description: ID for a given Dataset
          maxLength: 26
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataViewResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /datasets/{datasetId}/dataviewsv2/{dataviewId}/external-access-details:
    post:
      description: "<p>Returns the credentials to access the external Dataview from\
        \ an S3 location. To call this API:</p> <ul> <li> <p>You must retrieve the\
        \ programmatic credentials.</p> </li> <li> <p>You must be a member of a FinSpace\
        \ user group, where the dataset that you want to access has <code>Read Dataset\
        \ Data</code> permissions.</p> </li> </ul>"
      operationId: get_external_data_view_access_details
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Dataview that you want to access.
        explode: false
        in: path
        name: dataviewId
        required: true
        schema:
          description: DataView ID
          maxLength: 26
          minLength: 1
          type: string
        style: simple
      - description: The unique identifier for the Dataset.
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          description: ID for a given Dataset
          maxLength: 26
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExternalDataViewAccessDetailsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /datasetsv2:
    get:
      description: Lists all of the active Datasets that a user has access to.
      operationId: list_datasets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A token that indicates where a results page should begin.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a new FinSpace Dataset.
      operationId: create_dataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataset_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /datasetsv2/{datasetId}:
    delete:
      description: Deletes a FinSpace Dataset.
      operationId: delete_dataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A token that ensures idempotency. This token expires in 10 minutes.
        explode: true
        in: query
        name: clientToken
        required: false
        schema:
          description: Idempotence Token for API operations
          maxLength: 128
          minLength: 1
          pattern: .*\S.*
          type: string
        style: form
      - description: The unique identifier of the Dataset to be deleted.
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          description: ID for a given Dataset
          maxLength: 26
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDatasetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Returns information about a Dataset.
      operationId: get_dataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for a Dataset.
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          description: 1 - 255 character String
          maxLength: 255
          minLength: 1
          pattern: "[\\s\\S]*\\S[\\s\\S]*"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDatasetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates a FinSpace Dataset.
      operationId: update_dataset
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the Dataset to update.
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          description: ID for a given Dataset
          maxLength: 26
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataset_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDatasetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /permission-group:
    post:
      description: Creates a group of permissions for various actions that a user
        can perform in FinSpace.
      operationId: create_permission_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePermissionGroup_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePermissionGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /permission-group#maxResults:
    get:
      description: Lists all available permission groups in FinSpace.
      operationId: list_permission_groups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A token that indicates where a results page should begin.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results per page.
        explode: true
        in: query
        name: maxResults
        required: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /permission-group/{permissionGroupId}:
    delete:
      description: Deletes a permission group. This action is irreversible.
      operationId: delete_permission_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the permission group that you want
          to delete.
        explode: false
        in: path
        name: permissionGroupId
        required: true
        schema:
          maxLength: 26
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      - description: A token that ensures idempotency. This token expires in 10 minutes.
        explode: true
        in: query
        name: clientToken
        required: false
        schema:
          description: Idempotence Token for API operations
          maxLength: 128
          minLength: 1
          pattern: .*\S.*
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePermissionGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves the details of a specific permission group.
      operationId: get_permission_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the permission group.
        explode: false
        in: path
        name: permissionGroupId
        required: true
        schema:
          maxLength: 26
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermissionGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Modifies the details of a permission group. You cannot modify a
        <code>permissionGroupID</code>.
      operationId: update_permission_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the permission group to update.
        explode: false
        in: path
        name: permissionGroupId
        required: true
        schema:
          maxLength: 26
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionGroup_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePermissionGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /permission-group/{permissionGroupId}/users#maxResults:
    get:
      description: Lists details of all the users in a specific permission group.
      operationId: list_users_by_permission_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the permission group.
        explode: false
        in: path
        name: permissionGroupId
        required: true
        schema:
          maxLength: 26
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      - description: A token that indicates where a results page should begin.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results per page.
        explode: true
        in: query
        name: maxResults
        required: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersByPermissionGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /permission-group/{permissionGroupId}/users/{userId}:
    delete:
      description: Removes a user account from a permission group.
      operationId: disassociate_user_from_permission_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the permission group.
        explode: false
        in: path
        name: permissionGroupId
        required: true
        schema:
          maxLength: 26
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      - description: The unique identifier for the user.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          maxLength: 26
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      - description: A token that ensures idempotency. This token expires in 10 minutes.
        explode: true
        in: query
        name: clientToken
        required: false
        schema:
          description: Idempotence Token for API operations
          maxLength: 128
          minLength: 1
          pattern: .*\S.*
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateUserFromPermissionGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Adds a user account to a permission group to grant permissions
        for actions a user can perform in FinSpace.
      operationId: associate_user_to_permission_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the permission group.
        explode: false
        in: path
        name: permissionGroupId
        required: true
        schema:
          maxLength: 26
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      - description: The unique identifier for the user.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          maxLength: 26
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateUserToPermissionGroup_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateUserToPermissionGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /user:
    post:
      description: Creates a new user in FinSpace.
      operationId: create_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /user#maxResults:
    get:
      description: Lists all available user accounts in FinSpace.
      operationId: list_users
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A token that indicates where a results page should begin.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results per page.
        explode: true
        in: query
        name: maxResults
        required: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /user/{userId}:
    get:
      description: Retrieves details for a specific user.
      operationId: get_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the user to get data for.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          maxLength: 26
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Modifies the details of the specified user account. You cannot
        update the <code>userId</code> for a user.
      operationId: update_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the user account to update.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          maxLength: 26
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /user/{userId}/disable:
    post:
      description: Denies access to the FinSpace web application and API for the specified
        user.
      operationId: disable_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the user account that you want to disable.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          maxLength: 26
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateUserToPermissionGroup_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /user/{userId}/enable:
    post:
      description: ' Allows the specified user to access the FinSpace web application
        and API.'
      operationId: enable_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the user account that you want to enable.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          maxLength: 26
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateUserToPermissionGroup_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /user/{userId}/password:
    post:
      description: Resets the password for a specified user ID and generates a temporary
        one. Only a superuser can reset password for other users. Resetting the password
        immediately invalidates the previous password associated with the user.
      operationId: reset_user_password
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier of the user that a temporary password is
          requested for.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          maxLength: 26
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateUserToPermissionGroup_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetUserPasswordResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /user/{userId}/permission-groups#maxResults:
    get:
      description: Lists all the permission groups that are associated with a specific
        user account.
      operationId: list_permission_groups_by_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the user.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          maxLength: 26
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      - description: A token that indicates where a results page should begin.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results per page.
        explode: true
        in: query
        name: maxResults
        required: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionGroupsByUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /workingLocationV1:
    post:
      description: "A temporary Amazon S3 location, where you can copy your files\
        \ from a source location to stage or use as a scratch space in FinSpace notebook."
      operationId: get_working_location
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWorkingLocation_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkingLocationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssociateUserToPermissionGroupResponse:
      example:
        statusCode: ""
      properties:
        statusCode:
          allOf:
          - $ref: '#/components/schemas/StatusCode'
          - description: The returned status code of the response.
          title: statusCode
      title: AssociateUserToPermissionGroupResponse
      type: object
    InternalServerException: {}
    ValidationException: {}
    ThrottlingException: {}
    AccessDeniedException: {}
    ResourceNotFoundException: {}
    ConflictException: {}
    CreateChangesetResponse:
      description: The response from a CreateChangeset operation.
      example:
        changesetId: ""
        datasetId: ""
      properties:
        datasetId:
          allOf:
          - $ref: '#/components/schemas/DatasetId'
          - description: The unique identifier for the FinSpace Dataset where the
              Changeset is created.
          title: datasetId
        changesetId:
          allOf:
          - $ref: '#/components/schemas/ChangesetId'
          - description: The unique identifier of the Changeset that is created.
          title: changesetId
      title: CreateChangesetResponse
      type: object
    StringMapValue:
      maxLength: 1000
      pattern: "[\\s\\S]*\\S[\\s\\S]*"
      title: StringMapValue
      type: string
    LimitExceededException: {}
    CreateDataViewResponse:
      description: Response for creating a data view.
      example:
        dataViewId: ""
        datasetId: ""
      properties:
        datasetId:
          allOf:
          - $ref: '#/components/schemas/DatasetId'
          - description: The unique identifier of the Dataset used for the Dataview.
          title: datasetId
        dataViewId:
          allOf:
          - $ref: '#/components/schemas/DataViewId'
          - description: The unique identifier for the created Dataview.
          title: dataViewId
      title: CreateDataViewResponse
      type: object
    StringValueLength1to255:
      description: 1 - 255 character String
      maxLength: 255
      minLength: 1
      pattern: "[\\s\\S]*\\S[\\s\\S]*"
      title: StringValueLength1to255
      type: string
    DataViewDestinationType:
      description: DataView Destination Type
      type: string
    ExportFileFormat:
      description: Data View Export File Format
      enum:
      - PARQUET
      - DELIMITED_TEXT
      title: ExportFileFormat
      type: string
    S3DestinationFormatOptions:
      additionalProperties:
        $ref: '#/components/schemas/StringMapValue'
      type: object
    CreateDatasetResponse:
      description: The response from a CreateDataset operation
      example:
        datasetId: ""
      properties:
        datasetId:
          allOf:
          - $ref: '#/components/schemas/DatasetId'
          - description: The unique identifier for the created Dataset.
          title: datasetId
      title: CreateDatasetResponse
      type: object
    OwnerName:
      description: 1 - 250 character String
      maxLength: 250
      minLength: 1
      pattern: .*\S.*
      type: string
    PhoneNumber:
      description: PhoneNumber of Dataset Owner
      maxLength: 20
      minLength: 10
      pattern: "^[\\+0-9\\#\\,\\(][\\+0-9\\-\\.\\/\\(\\)\\,\\#\\s]+$"
      type: string
    Email:
      format: password
      maxLength: 320
      minLength: 4
      pattern: "[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}"
      type: string
    PermissionGroupId:
      maxLength: 26
      minLength: 1
      pattern: .*\S.*
      type: string
    ResourcePermissionsList:
      description: List of Resource Permissions
      items:
        $ref: '#/components/schemas/ResourcePermission'
      type: array
    SchemaDefinition:
      description: Definition for a schema on a tabular Dataset.
      properties:
        columns:
          allOf:
          - $ref: '#/components/schemas/ColumnList'
          - description: List of column definitions.
          title: columns
        primaryKeyColumns:
          allOf:
          - $ref: '#/components/schemas/ColumnNameList'
          - description: List of column names used for primary key.
          title: primaryKeyColumns
      title: SchemaDefinition
      type: object
    CreatePermissionGroupResponse:
      example:
        permissionGroupId: ""
      properties:
        permissionGroupId:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupId'
          - description: The unique identifier for the permission group.
          title: permissionGroupId
      title: CreatePermissionGroupResponse
      type: object
    ApplicationPermission:
      enum:
      - CreateDataset
      - ManageClusters
      - ManageUsersAndGroups
      - ManageAttributeSets
      - ViewAuditData
      - AccessNotebooks
      - GetTemporaryCredentials
      title: ApplicationPermission
      type: string
    CreateUserResponse:
      example:
        userId: ""
      properties:
        userId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: The unique identifier for the user.
          title: userId
      title: CreateUserResponse
      type: object
    DeleteDatasetResponse:
      description: The response from an DeleteDataset operation
      example:
        datasetId: ""
      properties:
        datasetId:
          allOf:
          - $ref: '#/components/schemas/DatasetId'
          - description: The unique identifier for the deleted Dataset.
          title: datasetId
      title: DeleteDatasetResponse
      type: object
    DeletePermissionGroupResponse:
      example:
        permissionGroupId: ""
      properties:
        permissionGroupId:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupId'
          - description: The unique identifier for the deleted permission group.
          title: permissionGroupId
      title: DeletePermissionGroupResponse
      type: object
    DisableUserResponse:
      example:
        userId: ""
      properties:
        userId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: The unique identifier for the disabled user account.
          title: userId
      title: DisableUserResponse
      type: object
    DisassociateUserFromPermissionGroupResponse:
      example:
        statusCode: ""
      properties:
        statusCode:
          allOf:
          - $ref: '#/components/schemas/StatusCode'
          - description: The returned status code of the response.
          title: statusCode
      title: DisassociateUserFromPermissionGroupResponse
      type: object
    EnableUserResponse:
      example:
        userId: ""
      properties:
        userId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: The unique identifier for the enabled user account.
          title: userId
      title: EnableUserResponse
      type: object
    GetChangesetResponse:
      description: The response from a describe changeset operation
      example:
        formatParams: ""
        activeUntilTimestamp: ""
        activeFromTimestamp: ""
        changeType: ""
        errorInfo:
          errorCategory: ""
          errorMessage: ""
        changesetArn: ""
        createTime: ""
        changesetId: ""
        datasetId: ""
        updatesChangesetId: ""
        sourceParams: ""
        updatedByChangesetId: ""
        status: ""
      properties:
        changesetId:
          allOf:
          - $ref: '#/components/schemas/ChangesetId'
          - description: The unique identifier for a Changeset.
          title: changesetId
        changesetArn:
          allOf:
          - $ref: '#/components/schemas/ChangesetArn'
          - description: The ARN identifier of the Changeset.
          title: changesetArn
        datasetId:
          allOf:
          - $ref: '#/components/schemas/DatasetId'
          - description: The unique identifier for the FinSpace Dataset where the
              Changeset is created.
          title: datasetId
        changeType:
          allOf:
          - $ref: '#/components/schemas/ChangeType'
          - description: <p>Type that indicates how a Changeset is applied to a Dataset.</p>
              <ul> <li> <p> <code>REPLACE</code> – Changeset is considered as a replacement
              to all prior loaded Changesets.</p> </li> <li> <p> <code>APPEND</code>
              – Changeset is considered as an addition to the end of all prior loaded
              Changesets.</p> </li> <li> <p> <code>MODIFY</code> – Changeset is considered
              as a replacement to a specific prior ingested Changeset.</p> </li> </ul>
          title: changeType
        sourceParams:
          allOf:
          - $ref: '#/components/schemas/SourceParams'
          - description: Options that define the location of the data being ingested.
          title: sourceParams
        formatParams:
          allOf:
          - $ref: '#/components/schemas/FormatParams'
          - description: Structure of the source file(s).
          title: formatParams
        createTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "The timestamp at which the Changeset was created in FinSpace.\
              \ The value is determined as epoch time in milliseconds. For example,\
              \ the value for Monday, November 1, 2021 12:00:00 PM UTC is specified\
              \ as 1635768000000."
          title: createTime
        status:
          allOf:
          - $ref: '#/components/schemas/IngestionStatus'
          - description: The status of Changeset creation operation.
          title: status
        errorInfo:
          $ref: '#/components/schemas/GetChangesetResponse_errorInfo'
        activeUntilTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "Time until which the Changeset is active. The value is determined\
              \ as epoch time in milliseconds. For example, the value for Monday,\
              \ November 1, 2021 12:00:00 PM UTC is specified as 1635768000000."
          title: activeUntilTimestamp
        activeFromTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "Beginning time from which the Changeset is active. The value\
              \ is determined as epoch time in milliseconds. For example, the value\
              \ for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000."
          title: activeFromTimestamp
        updatesChangesetId:
          allOf:
          - $ref: '#/components/schemas/ChangesetId'
          - description: The unique identifier of the Changeset that is being updated.
          title: updatesChangesetId
        updatedByChangesetId:
          allOf:
          - $ref: '#/components/schemas/ChangesetId'
          - description: The unique identifier of the updated Changeset.
          title: updatedByChangesetId
      title: GetChangesetResponse
      type: object
    GetDataViewResponse:
      description: "Response from retrieving a dataview, which includes details on\
        \ the target database and table name"
      example:
        dataViewId: ""
        autoUpdate: ""
        lastModifiedTime: ""
        destinationTypeParams:
          s3DestinationExportFileFormat: ""
          destinationType: ""
          s3DestinationExportFileFormatOptions: ""
        createTime: ""
        sortColumns: ""
        partitionColumns: ""
        dataViewArn: ""
        datasetId: ""
        asOfTimestamp: ""
        errorInfo:
          errorCategory: ""
          errorMessage: ""
        status: ""
      properties:
        autoUpdate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Flag to indicate Dataview should be updated automatically.
          title: autoUpdate
        partitionColumns:
          allOf:
          - $ref: '#/components/schemas/PartitionColumnList'
          - description: Ordered set of column names used to partition data.
          title: partitionColumns
        datasetId:
          allOf:
          - $ref: '#/components/schemas/DatasetId'
          - description: The unique identifier for the Dataset used in the Dataview.
          title: datasetId
        asOfTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "Time range to use for the Dataview. The value is determined\
              \ as epoch time in milliseconds. For example, the value for Monday,\
              \ November 1, 2021 12:00:00 PM UTC is specified as 1635768000000."
          title: asOfTimestamp
        errorInfo:
          $ref: '#/components/schemas/GetDataViewResponse_errorInfo'
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "The last time that a Dataview was modified. The value is\
              \ determined as epoch time in milliseconds. For example, the value for\
              \ Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000."
          title: lastModifiedTime
        createTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "The timestamp at which the Dataview was created in FinSpace.\
              \ The value is determined as epoch time in milliseconds. For example,\
              \ the value for Monday, November 1, 2021 12:00:00 PM UTC is specified\
              \ as 1635768000000."
          title: createTime
        sortColumns:
          allOf:
          - $ref: '#/components/schemas/SortColumnList'
          - description: Columns to be used for sorting the data.
          title: sortColumns
        dataViewId:
          allOf:
          - $ref: '#/components/schemas/DataViewId'
          - description: The unique identifier for the Dataview.
          title: dataViewId
        dataViewArn:
          allOf:
          - $ref: '#/components/schemas/DataViewArn'
          - description: The ARN identifier of the Dataview.
          title: dataViewArn
        destinationTypeParams:
          $ref: '#/components/schemas/GetDataViewResponse_destinationTypeParams'
        status:
          allOf:
          - $ref: '#/components/schemas/DataViewStatus'
          - description: <p>The status of a Dataview creation.</p> <ul> <li> <p> <code>RUNNING</code>
              – Dataview creation is running.</p> </li> <li> <p> <code>STARTING</code>
              – Dataview creation is starting.</p> </li> <li> <p> <code>FAILED</code>
              – Dataview creation has failed.</p> </li> <li> <p> <code>CANCELLED</code>
              – Dataview creation has been cancelled.</p> </li> <li> <p> <code>TIMEOUT</code>
              – Dataview creation has timed out.</p> </li> <li> <p> <code>SUCCESS</code>
              – Dataview creation has succeeded.</p> </li> <li> <p> <code>PENDING</code>
              – Dataview creation is pending.</p> </li> <li> <p> <code>FAILED_CLEANUP_FAILED</code>
              – Dataview creation failed and resource cleanup failed.</p> </li> </ul>
          title: status
      title: GetDataViewResponse
      type: object
    GetDatasetResponse:
      description: Response for the GetDataset operation
      example:
        datasetArn: ""
        datasetTitle: ""
        datasetDescription: ""
        lastModifiedTime: ""
        createTime: ""
        kind: ""
        schemaDefinition:
          tabularSchemaConfig:
            primaryKeyColumns: ""
            columns: ""
        datasetId: ""
        alias: ""
        status: ""
      properties:
        datasetId:
          allOf:
          - $ref: '#/components/schemas/DatasetId'
          - description: The unique identifier for a Dataset.
          title: datasetId
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/DatasetArn'
          - description: The ARN identifier of the Dataset.
          title: datasetArn
        datasetTitle:
          allOf:
          - $ref: '#/components/schemas/DatasetTitle'
          - description: Display title for a Dataset.
          title: datasetTitle
        kind:
          allOf:
          - $ref: '#/components/schemas/DatasetKind'
          - description: <p>The format in which Dataset data is structured.</p> <ul>
              <li> <p> <code>TABULAR</code> – Data is structured in a tabular format.</p>
              </li> <li> <p> <code>NON_TABULAR</code> – Data is structured in a non-tabular
              format.</p> </li> </ul>
          title: kind
        datasetDescription:
          allOf:
          - $ref: '#/components/schemas/DatasetDescription'
          - description: A description of the Dataset.
          title: datasetDescription
        createTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "The timestamp at which the Dataset was created in FinSpace.\
              \ The value is determined as epoch time in milliseconds. For example,\
              \ the value for Monday, November 1, 2021 12:00:00 PM UTC is specified\
              \ as 1635768000000."
          title: createTime
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "The last time that the Dataset was modified. The value is\
              \ determined as epoch time in milliseconds. For example, the value for\
              \ Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000."
          title: lastModifiedTime
        schemaDefinition:
          $ref: '#/components/schemas/GetDatasetResponse_schemaDefinition'
        alias:
          allOf:
          - $ref: '#/components/schemas/AliasString'
          - description: The unique resource identifier for a Dataset.
          title: alias
        status:
          allOf:
          - $ref: '#/components/schemas/DatasetStatus'
          - description: <p>Status of the Dataset creation.</p> <ul> <li> <p> <code>PENDING</code>
              – Dataset is pending creation.</p> </li> <li> <p> <code>FAILED</code>
              – Dataset creation has failed.</p> </li> <li> <p> <code>SUCCESS</code>
              – Dataset creation has succeeded.</p> </li> <li> <p> <code>RUNNING</code>
              – Dataset creation is running.</p> </li> </ul>
          title: status
      title: GetDatasetResponse
      type: object
    GetExternalDataViewAccessDetailsResponse:
      example:
        credentials:
          accessKeyId: ""
          secretAccessKey: ""
          sessionToken: ""
          expiration: ""
        s3Location:
          bucket: ""
          key: ""
      properties:
        credentials:
          $ref: '#/components/schemas/GetExternalDataViewAccessDetailsResponse_credentials'
        s3Location:
          $ref: '#/components/schemas/GetExternalDataViewAccessDetailsResponse_s3Location'
      title: GetExternalDataViewAccessDetailsResponse
      type: object
    GetPermissionGroupResponse:
      example:
        permissionGroup:
          permissionGroupId: ""
          applicationPermissions: ""
          lastModifiedTime: ""
          createTime: ""
          name: ""
          description: ""
          membershipStatus: ""
      properties:
        permissionGroup:
          $ref: '#/components/schemas/PermissionGroup'
      title: GetPermissionGroupResponse
      type: object
    GetProgrammaticAccessCredentialsResponse:
      description: Response for GetProgrammaticAccessCredentials operation
      example:
        credentials:
          accessKeyId: ""
          secretAccessKey: ""
          sessionToken: ""
        durationInMinutes: ""
      properties:
        credentials:
          $ref: '#/components/schemas/GetProgrammaticAccessCredentialsResponse_credentials'
        durationInMinutes:
          allOf:
          - $ref: '#/components/schemas/SessionDuration'
          - description: Returns the duration in which the credentials will remain
              valid.
          title: durationInMinutes
      title: GetProgrammaticAccessCredentialsResponse
      type: object
    GetUserResponse:
      example:
        lastName: ""
        lastModifiedTime: ""
        apiAccessPrincipalArn: ""
        type: ""
        userId: ""
        firstName: ""
        lastLoginTime: ""
        emailAddress: ""
        apiAccess: ""
        lastDisabledTime: ""
        lastEnabledTime: ""
        createTime: ""
        status: ""
      properties:
        userId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: The unique identifier for the user account that is retrieved.
          title: userId
        status:
          allOf:
          - $ref: '#/components/schemas/UserStatus'
          - description: <p>The current status of the user account. </p> <ul> <li>
              <p> <code>CREATING</code> – The user account creation is in progress.</p>
              </li> <li> <p> <code>ENABLED</code> – The user account is created and
              is currently active.</p> </li> <li> <p> <code>DISABLED</code> – The
              user account is currently inactive.</p> </li> </ul>
          title: status
        firstName:
          allOf:
          - $ref: '#/components/schemas/FirstName'
          - description: The first name of the user.
          title: firstName
        lastName:
          allOf:
          - $ref: '#/components/schemas/LastName'
          - description: The last name of the user.
          title: lastName
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: The email address that is associated with the user.
          title: emailAddress
        type:
          allOf:
          - $ref: '#/components/schemas/UserType'
          - description: <p>Indicates the type of user. </p> <ul> <li> <p> <code>SUPER_USER</code>
              – A user with permission to all the functionality and data in FinSpace.</p>
              </li> </ul> <ul> <li> <p> <code>APP_USER</code> – A user with specific
              permissions in FinSpace. The users are assigned permissions by adding
              them to a permission group.</p> </li> </ul>
          title: type
        apiAccess:
          allOf:
          - $ref: '#/components/schemas/ApiAccess'
          - description: <p>Indicates whether the user can use the <code>GetProgrammaticAccessCredentials</code>
              API to obtain credentials that can then be used to access other FinSpace
              Data API operations. </p> <ul> <li> <p> <code>ENABLED</code> – The user
              has permissions to use the APIs.</p> </li> <li> <p> <code>DISABLED</code>
              – The user does not have permissions to use any APIs.</p> </li> </ul>
          title: apiAccess
        apiAccessPrincipalArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN identifier of an AWS user or role that is allowed
              to call the <code>GetProgrammaticAccessCredentials</code> API to obtain
              a credentials token for a specific FinSpace user. This must be an IAM
              role within your FinSpace account.
          title: apiAccessPrincipalArn
        createTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: 'The timestamp at which the user account was created in FinSpace.
              The value is determined as epoch time in milliseconds. '
          title: createTime
        lastEnabledTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: Describes the last time the user account was enabled. The
              value is determined as epoch time in milliseconds.
          title: lastEnabledTime
        lastDisabledTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: Describes the last time the user account was disabled. The
              value is determined as epoch time in milliseconds.
          title: lastDisabledTime
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: Describes the last time the user account was updated. The
              value is determined as epoch time in milliseconds.
          title: lastModifiedTime
        lastLoginTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: Describes the last time that the user logged into their account.
              The value is determined as epoch time in milliseconds.
          title: lastLoginTime
      title: GetUserResponse
      type: object
    GetWorkingLocationResponse:
      example:
        s3Uri: ""
        s3Path: ""
        s3Bucket: ""
      properties:
        s3Uri:
          allOf:
          - $ref: '#/components/schemas/stringValueLength1to1024'
          - description: Returns the Amazon S3 URI for the working location.
          title: s3Uri
        s3Path:
          allOf:
          - $ref: '#/components/schemas/stringValueLength1to1024'
          - description: Returns the Amazon S3 Path for the working location.
          title: s3Path
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/stringValueLength1to63'
          - description: Returns the Amazon S3 bucket name for the working location.
          title: s3Bucket
      title: GetWorkingLocationResponse
      type: object
    ListChangesetsResponse:
      description: Response to ListChangesetsResponse. This returns a list of dataset
        changesets that match the query criteria.
      example:
        nextToken: ""
        changesets: ""
      properties:
        changesets:
          allOf:
          - $ref: '#/components/schemas/ChangesetList'
          - description: List of Changesets found.
          title: changesets
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A token that indicates where a results page should begin.
          title: nextToken
      title: ListChangesetsResponse
      type: object
    ListDataViewsResponse:
      example:
        nextToken: ""
        dataViews: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A token that indicates where a results page should begin.
          title: nextToken
        dataViews:
          allOf:
          - $ref: '#/components/schemas/DataViewList'
          - description: A list of Dataviews.
          title: dataViews
      title: ListDataViewsResponse
      type: object
    ListDatasetsResponse:
      description: Response for the ListDatasets operation
      example:
        nextToken: ""
        datasets: ""
      properties:
        datasets:
          allOf:
          - $ref: '#/components/schemas/DatasetList'
          - description: List of Datasets.
          title: datasets
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A token that indicates where a results page should begin.
          title: nextToken
      title: ListDatasetsResponse
      type: object
    ListPermissionGroupsResponse:
      example:
        nextToken: ""
        permissionGroups: ""
      properties:
        permissionGroups:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupList'
          - description: A list of all the permission groups.
          title: permissionGroups
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A token that indicates where a results page should begin.
          title: nextToken
      title: ListPermissionGroupsResponse
      type: object
    ListPermissionGroupsByUserResponse:
      example:
        nextToken: ""
        permissionGroups: ""
      properties:
        permissionGroups:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupByUserList'
          - description: A list of returned permission groups.
          title: permissionGroups
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A token that indicates where a results page should begin.
          title: nextToken
      title: ListPermissionGroupsByUserResponse
      type: object
    ListUsersResponse:
      example:
        nextToken: ""
        users: ""
      properties:
        users:
          allOf:
          - $ref: '#/components/schemas/UserList'
          - description: A list of all the user accounts.
          title: users
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A token that indicates where a results page should begin.
          title: nextToken
      title: ListUsersResponse
      type: object
    ListUsersByPermissionGroupResponse:
      example:
        nextToken: ""
        users: ""
      properties:
        users:
          allOf:
          - $ref: '#/components/schemas/UserByPermissionGroupList'
          - description: Lists details of all users in a specific permission group.
          title: users
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: A token that indicates where a results page should begin.
          title: nextToken
      title: ListUsersByPermissionGroupResponse
      type: object
    ResetUserPasswordResponse:
      example:
        temporaryPassword: ""
        userId: ""
      properties:
        userId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: The unique identifier of the user that a new password is
              generated for.
          title: userId
        temporaryPassword:
          allOf:
          - $ref: '#/components/schemas/Password'
          - description: A randomly generated temporary password for the requested
              user account. This password expires in 7 days.
          title: temporaryPassword
      title: ResetUserPasswordResponse
      type: object
    UpdateChangesetResponse:
      description: The response from a update changeset operation.
      example:
        changesetId: ""
        datasetId: ""
      properties:
        changesetId:
          allOf:
          - $ref: '#/components/schemas/ChangesetId'
          - description: The unique identifier for the Changeset to update.
          title: changesetId
        datasetId:
          allOf:
          - $ref: '#/components/schemas/DatasetId'
          - description: The unique identifier for the FinSpace Dataset in which the
              Changeset is created.
          title: datasetId
      title: UpdateChangesetResponse
      type: object
    UpdateDatasetResponse:
      description: The response from an UpdateDataset operation
      example:
        datasetId: ""
      properties:
        datasetId:
          allOf:
          - $ref: '#/components/schemas/DatasetId'
          - description: The unique identifier for updated Dataset.
          title: datasetId
      title: UpdateDatasetResponse
      type: object
    UpdatePermissionGroupResponse:
      example:
        permissionGroupId: ""
      properties:
        permissionGroupId:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupId'
          - description: The unique identifier for the updated permission group.
          title: permissionGroupId
      title: UpdatePermissionGroupResponse
      type: object
    UpdateUserResponse:
      example:
        userId: ""
      properties:
        userId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: The unique identifier of the updated user account.
          title: userId
      title: UpdateUserResponse
      type: object
    AccessKeyId:
      maxLength: 255
      minLength: 1
      pattern: "[\\s\\S]*\\S[\\s\\S]*"
      type: string
    AliasString:
      maxLength: 255
      minLength: 1
      pattern: ^alias\/\S+
      type: string
    ApiAccess:
      enum:
      - ENABLED
      - DISABLED
      title: ApiAccess
      type: string
    ApplicationPermissionList:
      items:
        $ref: '#/components/schemas/ApplicationPermission'
      type: array
    UserId:
      maxLength: 26
      minLength: 1
      pattern: .*\S.*
      type: string
    ClientToken:
      description: Idempotence Token for API operations
      maxLength: 128
      minLength: 1
      pattern: .*\S.*
      type: string
    AssociateUserToPermissionGroupRequest:
      example:
        clientToken: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A token that ensures idempotency. This token expires in 10
              minutes.
      title: AssociateUserToPermissionGroupRequest
      type: object
    StatusCode:
      type: integer
    SecretAccessKey:
      format: password
      maxLength: 1000
      minLength: 1
      pattern: "[\\s\\S]*\\S[\\s\\S]*"
      type: string
    SessionToken:
      format: password
      maxLength: 1000
      minLength: 1
      pattern: "[\\s\\S]*\\S[\\s\\S]*"
      type: string
    TimestampEpoch:
      description: Milliseconds since UTC epoch
      type: integer
    AwsCredentials:
      description: ' The credentials required to access the external Dataview from
        the S3 location.'
      properties:
        accessKeyId:
          allOf:
          - $ref: '#/components/schemas/AccessKeyId'
          - description: ' The unique identifier for the security credentials.'
          title: accessKeyId
        secretAccessKey:
          allOf:
          - $ref: '#/components/schemas/SecretAccessKey'
          - description: ' The secret access key that can be used to sign requests.'
          title: secretAccessKey
        sessionToken:
          allOf:
          - $ref: '#/components/schemas/SessionToken'
          - description: ' The token that users must pass to use the credentials.'
          title: sessionToken
        expiration:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: ' The Epoch time when the current credentials expire.'
          title: expiration
      title: AwsCredentials
      type: object
    Boolean:
      description: Common Boolean data type
      type: boolean
    ChangeType:
      description: Indicates how the given change will be applied to the dataset.
      enum:
      - REPLACE
      - APPEND
      - MODIFY
      title: ChangeType
      type: string
    ChangesetArn:
      description: Arn for a given Changeset
      type: string
    ErrorMessage:
      description: Changeset Error Message
      maxLength: 1000
      type: string
    ErrorCategory:
      description: Changeset Error Category
      enum:
      - VALIDATION
      - SERVICE_QUOTA_EXCEEDED
      - ACCESS_DENIED
      - RESOURCE_NOT_FOUND
      - THROTTLING
      - INTERNAL_SERVICE_EXCEPTION
      - CANCELLED
      - USER_RECOVERABLE
      title: ErrorCategory
      type: string
    ChangesetErrorInfo:
      description: The structure with error messages.
      properties:
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: The text of the error message.
          title: errorMessage
        errorCategory:
          allOf:
          - $ref: '#/components/schemas/ErrorCategory'
          - description: <p>The category of the error.</p> <ul> <li> <p> <code>VALIDATION</code>
              – The inputs to this request are invalid.</p> </li> <li> <p> <code>SERVICE_QUOTA_EXCEEDED</code>
              – Service quotas have been exceeded. Please contact AWS support to increase
              quotas.</p> </li> <li> <p> <code>ACCESS_DENIED</code> – Missing required
              permission to perform this request.</p> </li> <li> <p> <code>RESOURCE_NOT_FOUND</code>
              – One or more inputs to this request were not found.</p> </li> <li>
              <p> <code>THROTTLING</code> – The system temporarily lacks sufficient
              resources to process the request.</p> </li> <li> <p> <code>INTERNAL_SERVICE_EXCEPTION</code>
              – An internal service error has occurred.</p> </li> <li> <p> <code>CANCELLED</code>
              – Cancelled.</p> </li> <li> <p> <code>USER_RECOVERABLE</code> – A user
              recoverable error has occurred.</p> </li> </ul>
          title: errorCategory
      title: ChangesetErrorInfo
      type: object
    ChangesetId:
      description: ID used to identify a Changeset
      maxLength: 26
      minLength: 1
      type: string
    ChangesetSummary:
      description: A Changeset is unit of data in a Dataset.
      properties:
        changesetId:
          allOf:
          - $ref: '#/components/schemas/ChangesetId'
          - description: The unique identifier for a Changeset.
          title: changesetId
        changesetArn:
          allOf:
          - $ref: '#/components/schemas/ChangesetArn'
          - description: The ARN identifier of the Changeset.
          title: changesetArn
        datasetId:
          allOf:
          - $ref: '#/components/schemas/DatasetId'
          - description: The unique identifier for the FinSpace Dataset in which the
              Changeset is created.
          title: datasetId
        changeType:
          allOf:
          - $ref: '#/components/schemas/ChangeType'
          - description: <p>Type that indicates how a Changeset is applied to a Dataset.</p>
              <ul> <li> <p> <code>REPLACE</code> – Changeset is considered as a replacement
              to all prior loaded Changesets.</p> </li> <li> <p> <code>APPEND</code>
              – Changeset is considered as an addition to the end of all prior loaded
              Changesets.</p> </li> <li> <p> <code>MODIFY</code> – Changeset is considered
              as a replacement to a specific prior ingested Changeset.</p> </li> </ul>
          title: changeType
        sourceParams:
          allOf:
          - $ref: '#/components/schemas/SourceParams'
          - description: Options that define the location of the data being ingested.
          title: sourceParams
        formatParams:
          allOf:
          - $ref: '#/components/schemas/FormatParams'
          - description: Options that define the structure of the source file(s).
          title: formatParams
        createTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "The timestamp at which the Changeset was created in FinSpace.\
              \ The value is determined as epoch time in milliseconds. For example,\
              \ the value for Monday, November 1, 2021 12:00:00 PM UTC is specified\
              \ as 1635768000000."
          title: createTime
        status:
          allOf:
          - $ref: '#/components/schemas/IngestionStatus'
          - description: <p>Status of the Changeset ingestion.</p> <ul> <li> <p> <code>PENDING</code>
              – Changeset is pending creation.</p> </li> <li> <p> <code>FAILED</code>
              – Changeset creation has failed.</p> </li> <li> <p> <code>SUCCESS</code>
              – Changeset creation has succeeded.</p> </li> <li> <p> <code>RUNNING</code>
              – Changeset creation is running.</p> </li> <li> <p> <code>STOP_REQUESTED</code>
              – User requested Changeset creation to stop.</p> </li> </ul>
          title: status
        errorInfo:
          $ref: '#/components/schemas/GetChangesetResponse_errorInfo'
        activeUntilTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "Time until which the Changeset is active. The value is determined\
              \ as epoch time in milliseconds. For example, the value for Monday,\
              \ November 1, 2021 12:00:00 PM UTC is specified as 1635768000000."
          title: activeUntilTimestamp
        activeFromTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "Beginning time from which the Changeset is active. The value\
              \ is determined as epoch time in milliseconds. For example, the value\
              \ for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000."
          title: activeFromTimestamp
        updatesChangesetId:
          allOf:
          - $ref: '#/components/schemas/ChangesetId'
          - description: The unique identifier of the Changeset that is updated.
          title: updatesChangesetId
        updatedByChangesetId:
          allOf:
          - $ref: '#/components/schemas/ChangesetId'
          - description: The unique identifier of the updated Changeset.
          title: updatedByChangesetId
      title: ChangesetSummary
      type: object
    ChangesetList:
      description: List of Changeset Summaries
      items:
        $ref: '#/components/schemas/ChangesetSummary'
      type: array
    DatasetId:
      description: ID for a given Dataset
      maxLength: 26
      minLength: 1
      type: string
    SourceParams:
      additionalProperties:
        $ref: '#/components/schemas/StringMapValue'
      description: Source Parameters of a Changeset
      type: object
    FormatParams:
      additionalProperties:
        $ref: '#/components/schemas/StringMapValue'
      description: Format Parameters of a Changeset
      type: object
    IngestionStatus:
      description: Status of the ingestion process returned from scheduler service.
      enum:
      - PENDING
      - FAILED
      - SUCCESS
      - RUNNING
      - STOP_REQUESTED
      title: IngestionStatus
      type: string
    ColumnDataType:
      description: Data type of a column.
      enum:
      - STRING
      - CHAR
      - INTEGER
      - TINYINT
      - SMALLINT
      - BIGINT
      - FLOAT
      - DOUBLE
      - DATE
      - DATETIME
      - BOOLEAN
      - BINARY
      title: ColumnDataType
      type: string
    ColumnName:
      description: Column Name
      maxLength: 126
      pattern: .*\S.*
      title: ColumnName
      type: string
    ColumnDescription:
      description: Column Description
      maxLength: 512
      pattern: "[\\s\\S]*"
      type: string
    ColumnDefinition:
      description: The definition of a column in a tabular Dataset.
      properties:
        dataType:
          allOf:
          - $ref: '#/components/schemas/ColumnDataType'
          - description: <p>Data type of a column.</p> <ul> <li> <p> <code>STRING</code>
              – A String data type.</p> <p> <code>CHAR</code> – A char data type.</p>
              <p> <code>INTEGER</code> – An integer data type.</p> <p> <code>TINYINT</code>
              – A tinyint data type.</p> <p> <code>SMALLINT</code> – A smallint data
              type.</p> <p> <code>BIGINT</code> – A bigint data type.</p> <p> <code>FLOAT</code>
              – A float data type.</p> <p> <code>DOUBLE</code> – A double data type.</p>
              <p> <code>DATE</code> – A date data type.</p> <p> <code>DATETIME</code>
              – A datetime data type.</p> <p> <code>BOOLEAN</code> – A boolean data
              type.</p> <p> <code>BINARY</code> – A binary data type.</p> </li> </ul>
          title: dataType
        columnName:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          - description: The name of a column.
          title: columnName
        columnDescription:
          allOf:
          - $ref: '#/components/schemas/ColumnDescription'
          - description: Description for a column.
          title: columnDescription
      title: ColumnDefinition
      type: object
    ColumnList:
      description: List of Column Definitions
      items:
        $ref: '#/components/schemas/ColumnDefinition'
      type: array
    ColumnNameList:
      description: List of Column Names
      items:
        $ref: '#/components/schemas/ColumnName'
      type: array
    CreateChangesetRequest:
      description: The request for a CreateChangeset operation.
      example:
        formatParams: ""
        clientToken: ""
        changeType: ""
        sourceParams: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A token that ensures idempotency. This token expires in 10
              minutes.
        changeType:
          allOf:
          - $ref: '#/components/schemas/ChangeType'
          - description: <p>The option to indicate how a Changeset will be applied
              to a Dataset.</p> <ul> <li> <p> <code>REPLACE</code> – Changeset will
              be considered as a replacement to all prior loaded Changesets.</p> </li>
              <li> <p> <code>APPEND</code> – Changeset will be considered as an addition
              to the end of all prior loaded Changesets.</p> </li> <li> <p> <code>MODIFY</code>
              – Changeset is considered as a replacement to a specific prior ingested
              Changeset.</p> </li> </ul>
        sourceParams:
          allOf:
          - $ref: '#/components/schemas/SourceParams'
          - description: "<p>Options that define the location of the data being ingested\
              \ (<code>s3SourcePath</code>) and the source of the changeset (<code>sourceType</code>).</p>\
              \ <p>Both <code>s3SourcePath</code> and <code>sourceType</code> are\
              \ required attributes.</p> <p>Here is an example of how you could specify\
              \ the <code>sourceParams</code>:</p> <p> <code> \"sourceParams\": {\
              \ \"s3SourcePath\": \"s3://finspace-landing-us-east-2-bk7gcfvitndqa6ebnvys4d/scratch/wr5hh8pwkpqqkxa4sxrmcw/ingestion/equity.csv\"\
              , \"sourceType\": \"S3\" } </code> </p> <p>The S3 path that you specify\
              \ must allow the FinSpace role access. To do that, you first need to\
              \ configure the IAM policy on S3 bucket. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/finspace/latest/data-api/fs-using-the-finspace-api.html#access-s3-buckets\"\
              >Loading data from an Amazon S3 Bucket using the FinSpace API</a> section.</p>"
        formatParams:
          allOf:
          - $ref: '#/components/schemas/FormatParams'
          - description: "<p>Options that define the structure of the source file(s)\
              \ including the format type (<code>formatType</code>), header row (<code>withHeader</code>),\
              \ data separation character (<code>separator</code>) and the type of\
              \ compression (<code>compression</code>). </p> <p> <code>formatType</code>\
              \ is a required attribute and can have the following values: </p> <ul>\
              \ <li> <p> <code>PARQUET</code> – Parquet source file format.</p> </li>\
              \ <li> <p> <code>CSV</code> – CSV source file format.</p> </li> <li>\
              \ <p> <code>JSON</code> – JSON source file format.</p> </li> <li> <p>\
              \ <code>XML</code> – XML source file format.</p> </li> </ul> <p>Here\
              \ is an example of how you could specify the <code>formatParams</code>:</p>\
              \ <p> <code> \"formatParams\": { \"formatType\": \"CSV\", \"withHeader\"\
              : \"true\", \"separator\": \",\", \"compression\":\"None\" } </code>\
              \ </p> <p>Note that if you only provide <code>formatType</code> as <code>CSV</code>,\
              \ the rest of the attributes will automatically default to CSV values\
              \ as following:</p> <p> <code> { \"withHeader\": \"true\", \"separator\"\
              : \",\" } </code> </p> <p> For more information about supported file\
              \ formats, see <a href=\"https://docs.aws.amazon.com/finspace/latest/userguide/supported-data-types.html\"\
              >Supported Data Types and File Formats</a> in the FinSpace User Guide.</p>"
      required:
      - changeType
      - formatParams
      - sourceParams
      title: CreateChangesetRequest
      type: object
    SortColumnList:
      description: DataView Sort Column List
      items:
        $ref: '#/components/schemas/StringValueLength1to255'
      type: array
    PartitionColumnList:
      description: DataView Partition Column List
      items:
        $ref: '#/components/schemas/StringValueLength1to255'
      type: array
    DataViewDestinationTypeParams:
      description: Structure for the Dataview destination type parameters.
      properties:
        destinationType:
          allOf:
          - $ref: '#/components/schemas/DataViewDestinationType'
          - description: <p>Destination type for a Dataview.</p> <ul> <li> <p> <code>GLUE_TABLE</code>
              – Glue table destination type.</p> </li> <li> <p> <code>S3</code> –
              S3 destination type.</p> </li> </ul>
          title: destinationType
        s3DestinationExportFileFormat:
          allOf:
          - $ref: '#/components/schemas/ExportFileFormat'
          - description: <p>Dataview export file format.</p> <ul> <li> <p> <code>PARQUET</code>
              – Parquet export file format.</p> </li> <li> <p> <code>DELIMITED_TEXT</code>
              – Delimited text export file format.</p> </li> </ul>
          title: s3DestinationExportFileFormat
        s3DestinationExportFileFormatOptions:
          allOf:
          - $ref: '#/components/schemas/S3DestinationFormatOptions'
          - description: "<p>Format Options for S3 Destination type.</p> <p>Here is\
              \ an example of how you could specify the <code>s3DestinationExportFileFormatOptions</code>\
              \ </p> <p> <code> { \"header\": \"true\", \"delimiter\": \",\", \"compression\"\
              : \"gzip\" }</code> </p>"
          title: s3DestinationExportFileFormatOptions
      required:
      - destinationType
      title: DataViewDestinationTypeParams
      type: object
    CreateDataViewRequest:
      description: Request for creating a data view.
      example:
        autoUpdate: ""
        destinationTypeParams:
          s3DestinationExportFileFormat: ""
          destinationType: ""
          s3DestinationExportFileFormatOptions: ""
        sortColumns: ""
        clientToken: ""
        partitionColumns: ""
        asOfTimestamp: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A token that ensures idempotency. This token expires in 10
              minutes.
        autoUpdate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Flag to indicate Dataview should be updated automatically.
        sortColumns:
          allOf:
          - $ref: '#/components/schemas/SortColumnList'
          - description: Columns to be used for sorting the data.
        partitionColumns:
          allOf:
          - $ref: '#/components/schemas/PartitionColumnList'
          - description: Ordered set of column names used to partition data.
        asOfTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "Beginning time to use for the Dataview. The value is determined\
              \ as epoch time in milliseconds. For example, the value for Monday,\
              \ November 1, 2021 12:00:00 PM UTC is specified as 1635768000000."
        destinationTypeParams:
          $ref: '#/components/schemas/GetDataViewResponse_destinationTypeParams'
      required:
      - destinationTypeParams
      title: CreateDataViewRequest
      type: object
    DataViewId:
      description: DataView ID
      maxLength: 26
      minLength: 1
      type: string
    DatasetTitle:
      description: Title for a given Dataset
      maxLength: 255
      minLength: 1
      pattern: .*\S.*
      type: string
    DatasetKind:
      description: Dataset Kind
      enum:
      - TABULAR
      - NON_TABULAR
      title: DatasetKind
      type: string
    DatasetDescription:
      description: Description of a dataset
      maxLength: 1000
      pattern: "[\\s\\S]*"
      type: string
    DatasetOwnerInfo:
      description: A structure for Dataset owner info.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/OwnerName'
          - description: The name of the Dataset owner.
          title: name
        phoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          - description: Phone number for the Dataset owner.
          title: phoneNumber
        email:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: Email address for the Dataset owner.
          title: email
      title: DatasetOwnerInfo
      type: object
    PermissionGroupParams:
      description: "<p>Permission group parameters for Dataset permissions.</p> <p>Here\
        \ is an example of how you could specify the <code>PermissionGroupParams</code>:</p>\
        \ <p> <code> { \"permissionGroupId\": \"0r6fCRtSTUk4XPfXQe3M0g\", \"datasetPermissions\"\
        : [ {\"permission\": \"ViewDatasetDetails\"}, {\"permission\": \"AddDatasetData\"\
        }, {\"permission\": \"EditDatasetMetadata\"}, {\"permission\": \"DeleteDataset\"\
        } ] } </code> </p>"
      properties:
        permissionGroupId:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupId'
          - description: The unique identifier for the <code>PermissionGroup</code>.
          title: permissionGroupId
        datasetPermissions:
          allOf:
          - $ref: '#/components/schemas/ResourcePermissionsList'
          - description: List of resource permissions.
          title: datasetPermissions
      title: PermissionGroupParams
      type: object
    SchemaUnion:
      description: A union of schema types.
      properties:
        tabularSchemaConfig:
          $ref: '#/components/schemas/CreateDataset_request_schemaDefinition_tabularSchemaConfig'
      title: SchemaUnion
      type: object
    CreateDatasetRequest:
      description: The request for a CreateDataset operation
      example:
        datasetTitle: ""
        datasetDescription: ""
        permissionGroupParams:
          permissionGroupId: ""
          datasetPermissions: ""
        clientToken: ""
        kind: ""
        schemaDefinition:
          tabularSchemaConfig:
            primaryKeyColumns: ""
            columns: ""
        ownerInfo:
          phoneNumber: ""
          name: ""
          email: ""
        alias: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A token that ensures idempotency. This token expires in 10
              minutes.
        datasetTitle:
          allOf:
          - $ref: '#/components/schemas/DatasetTitle'
          - description: Display title for a FinSpace Dataset.
        kind:
          allOf:
          - $ref: '#/components/schemas/DatasetKind'
          - description: <p>The format in which Dataset data is structured.</p> <ul>
              <li> <p> <code>TABULAR</code> – Data is structured in a tabular format.</p>
              </li> <li> <p> <code>NON_TABULAR</code> – Data is structured in a non-tabular
              format.</p> </li> </ul>
        datasetDescription:
          allOf:
          - $ref: '#/components/schemas/DatasetDescription'
          - description: Description of a Dataset.
        ownerInfo:
          $ref: '#/components/schemas/CreateDatasetRequest_ownerInfo'
        permissionGroupParams:
          $ref: '#/components/schemas/CreateDatasetRequest_permissionGroupParams'
        alias:
          allOf:
          - $ref: '#/components/schemas/AliasString'
          - description: The unique resource identifier for a Dataset.
        schemaDefinition:
          $ref: '#/components/schemas/GetDatasetResponse_schemaDefinition'
      required:
      - datasetTitle
      - kind
      - permissionGroupParams
      title: CreateDatasetRequest
      type: object
    PermissionGroupName:
      format: password
      maxLength: 255
      minLength: 1
      pattern: .*\S.*
      type: string
    PermissionGroupDescription:
      format: password
      maxLength: 4000
      minLength: 1
      pattern: "[\\s\\S]*"
      type: string
    CreatePermissionGroupRequest:
      example:
        applicationPermissions: ""
        clientToken: ""
        name: ""
        description: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupName'
          - description: The name of the permission group.
        description:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupDescription'
          - description: A brief description for the permission group.
        applicationPermissions:
          allOf:
          - $ref: '#/components/schemas/ApplicationPermissionList'
          - description: "<p>The option to indicate FinSpace application permissions\
              \ that are granted to a specific group.</p> <important> <p>When assigning\
              \ application permissions, be aware that the permission <code>ManageUsersAndGroups</code>\
              \ allows users to grant themselves or others access to any functionality\
              \ in their FinSpace environment's application. It should only be granted\
              \ to trusted users.</p> </important> <ul> <li> <p> <code>CreateDataset</code>\
              \ – Group members can create new datasets.</p> </li> <li> <p> <code>ManageClusters</code>\
              \ – Group members can manage Apache Spark clusters from FinSpace notebooks.</p>\
              \ </li> <li> <p> <code>ManageUsersAndGroups</code> – Group members can\
              \ manage users and permission groups. This is a privileged permission\
              \ that allows users to grant themselves or others access to any functionality\
              \ in the application. It should only be granted to trusted users.</p>\
              \ </li> <li> <p> <code>ManageAttributeSets</code> – Group members can\
              \ manage attribute sets.</p> </li> <li> <p> <code>ViewAuditData</code>\
              \ – Group members can view audit data.</p> </li> <li> <p> <code>AccessNotebooks</code>\
              \ – Group members will have access to FinSpace notebooks.</p> </li>\
              \ <li> <p> <code>GetTemporaryCredentials</code> – Group members can\
              \ get temporary API credentials.</p> </li> </ul>"
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A token that ensures idempotency. This token expires in 10
              minutes.
      required:
      - applicationPermissions
      - name
      title: CreatePermissionGroupRequest
      type: object
    UserType:
      enum:
      - SUPER_USER
      - APP_USER
      title: UserType
      type: string
    FirstName:
      format: password
      maxLength: 50
      minLength: 1
      pattern: .*\S.*
      type: string
    LastName:
      format: password
      maxLength: 50
      minLength: 1
      pattern: .*\S.*
      type: string
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$"
      type: string
    CreateUserRequest:
      example:
        ApiAccess: ""
        firstName: ""
        lastName: ""
        emailAddress: ""
        clientToken: ""
        apiAccessPrincipalArn: ""
        type: ""
      properties:
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: The email address of the user that you want to register.
              The email address serves as a uniquer identifier for each user and cannot
              be changed after it's created.
        type:
          allOf:
          - $ref: '#/components/schemas/UserType'
          - description: <p>The option to indicate the type of user. Use one of the
              following options to specify this parameter:</p> <ul> <li> <p> <code>SUPER_USER</code>
              – A user with permission to all the functionality and data in FinSpace.</p>
              </li> <li> <p> <code>APP_USER</code> – A user with specific permissions
              in FinSpace. The users are assigned permissions by adding them to a
              permission group.</p> </li> </ul>
        firstName:
          allOf:
          - $ref: '#/components/schemas/FirstName'
          - description: The first name of the user that you want to register.
        lastName:
          allOf:
          - $ref: '#/components/schemas/LastName'
          - description: The last name of the user that you want to register.
        ApiAccess:
          allOf:
          - $ref: '#/components/schemas/ApiAccess'
          - description: <p>The option to indicate whether the user can use the <code>GetProgrammaticAccessCredentials</code>
              API to obtain credentials that can then be used to access other FinSpace
              Data API operations.</p> <ul> <li> <p> <code>ENABLED</code> – The user
              has permissions to use the APIs.</p> </li> <li> <p> <code>DISABLED</code>
              – The user does not have permissions to use any APIs.</p> </li> </ul>
        apiAccessPrincipalArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN identifier of an AWS user or role that is allowed
              to call the <code>GetProgrammaticAccessCredentials</code> API to obtain
              a credentials token for a specific FinSpace user. This must be an IAM
              role within your FinSpace account.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A token that ensures idempotency. This token expires in 10
              minutes.
      required:
      - emailAddress
      - type
      title: CreateUserRequest
      type: object
    stringValueLength1to255:
      maxLength: 255
      minLength: 1
      type: string
    stringValueMaxLength1000:
      maxLength: 1000
      type: string
    Credentials:
      description: Short term API credentials.
      properties:
        accessKeyId:
          allOf:
          - $ref: '#/components/schemas/stringValueLength1to255'
          - description: The access key identifier.
          title: accessKeyId
        secretAccessKey:
          allOf:
          - $ref: '#/components/schemas/stringValueMaxLength1000'
          - description: The access key.
          title: secretAccessKey
        sessionToken:
          allOf:
          - $ref: '#/components/schemas/stringValueMaxLength1000'
          - description: The session token.
          title: sessionToken
      title: Credentials
      type: object
    DataViewArn:
      description: Arn of a DataView
      type: string
    DataViewErrorInfo:
      description: The structure with error messages.
      properties:
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: The text of the error message.
          title: errorMessage
        errorCategory:
          allOf:
          - $ref: '#/components/schemas/ErrorCategory'
          - description: <p>The category of the error.</p> <ul> <li> <p> <code>VALIDATION</code>
              – The inputs to this request are invalid.</p> </li> <li> <p> <code>SERVICE_QUOTA_EXCEEDED</code>
              – Service quotas have been exceeded. Please contact AWS support to increase
              quotas.</p> </li> <li> <p> <code>ACCESS_DENIED</code> – Missing required
              permission to perform this request.</p> </li> <li> <p> <code>RESOURCE_NOT_FOUND</code>
              – One or more inputs to this request were not found.</p> </li> <li>
              <p> <code>THROTTLING</code> – The system temporarily lacks sufficient
              resources to process the request.</p> </li> <li> <p> <code>INTERNAL_SERVICE_EXCEPTION</code>
              – An internal service error has occurred.</p> </li> <li> <p> <code>CANCELLED</code>
              – Cancelled.</p> </li> <li> <p> <code>USER_RECOVERABLE</code> – A user
              recoverable error has occurred.</p> </li> </ul>
          title: errorCategory
      title: DataViewErrorInfo
      type: object
    DataViewSummary:
      description: Structure for the summary of a Dataview.
      properties:
        dataViewId:
          allOf:
          - $ref: '#/components/schemas/DataViewId'
          - description: The unique identifier for the Dataview.
          title: dataViewId
        dataViewArn:
          allOf:
          - $ref: '#/components/schemas/DataViewArn'
          - description: The ARN identifier of the Dataview.
          title: dataViewArn
        datasetId:
          allOf:
          - $ref: '#/components/schemas/DatasetId'
          - description: Th unique identifier for the Dataview Dataset.
          title: datasetId
        asOfTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "Time range to use for the Dataview. The value is determined\
              \ as epoch time in milliseconds. For example, the value for Monday,\
              \ November 1, 2021 12:00:00 PM UTC is specified as 1635768000000."
          title: asOfTimestamp
        partitionColumns:
          allOf:
          - $ref: '#/components/schemas/PartitionColumnList'
          - description: Ordered set of column names used to partition data.
          title: partitionColumns
        sortColumns:
          allOf:
          - $ref: '#/components/schemas/SortColumnList'
          - description: Columns to be used for sorting the data.
          title: sortColumns
        status:
          allOf:
          - $ref: '#/components/schemas/DataViewStatus'
          - description: <p>The status of a Dataview creation.</p> <ul> <li> <p> <code>RUNNING</code>
              – Dataview creation is running.</p> </li> <li> <p> <code>STARTING</code>
              – Dataview creation is starting.</p> </li> <li> <p> <code>FAILED</code>
              – Dataview creation has failed.</p> </li> <li> <p> <code>CANCELLED</code>
              – Dataview creation has been cancelled.</p> </li> <li> <p> <code>TIMEOUT</code>
              – Dataview creation has timed out.</p> </li> <li> <p> <code>SUCCESS</code>
              – Dataview creation has succeeded.</p> </li> <li> <p> <code>PENDING</code>
              – Dataview creation is pending.</p> </li> <li> <p> <code>FAILED_CLEANUP_FAILED</code>
              – Dataview creation failed and resource cleanup failed.</p> </li> </ul>
          title: status
        errorInfo:
          $ref: '#/components/schemas/DataViewSummary_errorInfo'
        destinationTypeProperties:
          $ref: '#/components/schemas/DataViewSummary_destinationTypeProperties'
        autoUpdate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: The flag to indicate Dataview should be updated automatically.
          title: autoUpdate
        createTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "The timestamp at which the Dataview was created in FinSpace.\
              \ The value is determined as epoch time in milliseconds. For example,\
              \ the value for Monday, November 1, 2021 12:00:00 PM UTC is specified\
              \ as 1635768000000."
          title: createTime
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "The last time that a Dataview was modified. The value is\
              \ determined as epoch time in milliseconds. For example, the value for\
              \ Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000."
          title: lastModifiedTime
      title: DataViewSummary
      type: object
    DataViewList:
      description: List of Data Views
      items:
        $ref: '#/components/schemas/DataViewSummary'
      type: array
    DataViewStatus:
      description: Status of a DataView
      enum:
      - RUNNING
      - STARTING
      - FAILED
      - CANCELLED
      - TIMEOUT
      - SUCCESS
      - PENDING
      - FAILED_CLEANUP_FAILED
      title: DataViewStatus
      type: string
    DatasetArn:
      description: Arn of a Dataset
      type: string
    Dataset:
      description: The structure for a Dataset.
      properties:
        datasetId:
          allOf:
          - $ref: '#/components/schemas/DatasetId'
          - description: An identifier for a Dataset.
          title: datasetId
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/DatasetArn'
          - description: The ARN identifier of the Dataset.
          title: datasetArn
        datasetTitle:
          allOf:
          - $ref: '#/components/schemas/DatasetTitle'
          - description: Display title for a Dataset.
          title: datasetTitle
        kind:
          allOf:
          - $ref: '#/components/schemas/DatasetKind'
          - description: <p>The format in which Dataset data is structured.</p> <ul>
              <li> <p> <code>TABULAR</code> – Data is structured in a tabular format.</p>
              </li> <li> <p> <code>NON_TABULAR</code> – Data is structured in a non-tabular
              format.</p> </li> </ul>
          title: kind
        datasetDescription:
          allOf:
          - $ref: '#/components/schemas/DatasetDescription'
          - description: Description for a Dataset.
          title: datasetDescription
        ownerInfo:
          $ref: '#/components/schemas/CreateDatasetRequest_ownerInfo'
        createTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "The timestamp at which the Dataset was created in FinSpace.\
              \ The value is determined as epoch time in milliseconds. For example,\
              \ the value for Monday, November 1, 2021 12:00:00 PM UTC is specified\
              \ as 1635768000000."
          title: createTime
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: "The last time that the Dataset was modified. The value is\
              \ determined as epoch time in milliseconds. For example, the value for\
              \ Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000."
          title: lastModifiedTime
        schemaDefinition:
          $ref: '#/components/schemas/GetDatasetResponse_schemaDefinition'
        alias:
          allOf:
          - $ref: '#/components/schemas/AliasString'
          - description: The unique resource identifier for a Dataset.
          title: alias
      title: Dataset
      type: object
    DatasetList:
      description: List of Dataset structures
      items:
        $ref: '#/components/schemas/Dataset'
      type: array
    DatasetStatus:
      description: Status of the dataset process returned from scheduler service.
      enum:
      - PENDING
      - FAILED
      - SUCCESS
      - RUNNING
      title: DatasetStatus
      type: string
    DeleteDatasetRequest:
      description: The request for a DeleteDataset operation.
      properties: {}
      title: DeleteDatasetRequest
      type: object
    DeletePermissionGroupRequest:
      properties: {}
      title: DeletePermissionGroupRequest
      type: object
    DisableUserRequest:
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A token that ensures idempotency. This token expires in 10
              minutes.
      title: DisableUserRequest
      type: object
    DisassociateUserFromPermissionGroupRequest:
      properties: {}
      title: DisassociateUserFromPermissionGroupRequest
      type: object
    EnableUserRequest:
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A token that ensures idempotency. This token expires in 10
              minutes.
      title: EnableUserRequest
      type: object
    GetChangesetRequest:
      description: Request to describe a changeset.
      properties: {}
      title: GetChangesetRequest
      type: object
    GetDataViewRequest:
      description: Request for retrieving a data view detail. Grouped / accessible
        within a dataset by its dataset id.
      properties: {}
      title: GetDataViewRequest
      type: object
    GetDatasetRequest:
      description: Request for the GetDataset operation.
      properties: {}
      title: GetDatasetRequest
      type: object
    GetExternalDataViewAccessDetailsRequest:
      properties: {}
      title: GetExternalDataViewAccessDetailsRequest
      type: object
    S3Location:
      description: The location of an external Dataview in an S3 bucket.
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: ' The name of the S3 bucket.'
          title: bucket
        key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: " The path of the folder, within the S3 bucket that contains\
              \ the Dataset."
          title: key
      required:
      - bucket
      - key
      title: S3Location
      type: object
    GetPermissionGroupRequest:
      properties: {}
      title: GetPermissionGroupRequest
      type: object
    PermissionGroup:
      description: The structure for a permission group.
      example:
        permissionGroupId: ""
        applicationPermissions: ""
        lastModifiedTime: ""
        createTime: ""
        name: ""
        description: ""
        membershipStatus: ""
      properties:
        permissionGroupId:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupId'
          - description: ' The unique identifier for the permission group.'
          title: permissionGroupId
        name:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupName'
          - description: The name of the permission group.
          title: name
        description:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupDescription'
          - description: ' A brief description for the permission group.'
          title: description
        applicationPermissions:
          allOf:
          - $ref: '#/components/schemas/ApplicationPermissionList'
          - description: "<p>Indicates the permissions that are granted to a specific\
              \ group for accessing the FinSpace application.</p> <important> <p>When\
              \ assigning application permissions, be aware that the permission <code>ManageUsersAndGroups</code>\
              \ allows users to grant themselves or others access to any functionality\
              \ in their FinSpace environment's application. It should only be granted\
              \ to trusted users.</p> </important> <ul> <li> <p> <code>CreateDataset</code>\
              \ – Group members can create new datasets.</p> </li> <li> <p> <code>ManageClusters</code>\
              \ – Group members can manage Apache Spark clusters from FinSpace notebooks.</p>\
              \ </li> <li> <p> <code>ManageUsersAndGroups</code> – Group members can\
              \ manage users and permission groups. This is a privileged permission\
              \ that allows users to grant themselves or others access to any functionality\
              \ in the application. It should only be granted to trusted users.</p>\
              \ </li> <li> <p> <code>ManageAttributeSets</code> – Group members can\
              \ manage attribute sets.</p> </li> <li> <p> <code>ViewAuditData</code>\
              \ – Group members can view audit data.</p> </li> <li> <p> <code>AccessNotebooks</code>\
              \ – Group members will have access to FinSpace notebooks.</p> </li>\
              \ <li> <p> <code>GetTemporaryCredentials</code> – Group members can\
              \ get temporary API credentials.</p> </li> </ul>"
          title: applicationPermissions
        createTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: 'The timestamp at which the group was created in FinSpace.
              The value is determined as epoch time in milliseconds. '
          title: createTime
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: 'Describes the last time the permission group was updated.
              The value is determined as epoch time in milliseconds. '
          title: lastModifiedTime
        membershipStatus:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupMembershipStatus'
          - description: <p>Indicates the status of the user account within a permission
              group.</p> <ul> <li> <p> <code>ADDITION_IN_PROGRESS</code> – The user
              account is currently being added to the permission group.</p> </li>
              <li> <p> <code>ADDITION_SUCCESS</code> – The user account is successfully
              added to the permission group.</p> </li> <li> <p> <code>REMOVAL_IN_PROGRESS</code>
              – The user is currently being removed from the permission group.</p>
              </li> </ul>
          title: membershipStatus
      title: PermissionGroup
      type: object
    SessionDuration:
      maximum: 720
      minimum: 60
      type: integer
    IdType:
      maxLength: 26
      minLength: 1
      type: string
    GetProgrammaticAccessCredentialsRequest:
      description: Request for GetProgrammaticAccessCredentials operation
      properties: {}
      title: GetProgrammaticAccessCredentialsRequest
      type: object
    GetUserRequest:
      properties: {}
      title: GetUserRequest
      type: object
    UserStatus:
      enum:
      - CREATING
      - ENABLED
      - DISABLED
      title: UserStatus
      type: string
    locationType:
      enum:
      - INGESTION
      - SAGEMAKER
      title: locationType
      type: string
    GetWorkingLocationRequest:
      example:
        locationType: ""
      properties:
        locationType:
          allOf:
          - $ref: '#/components/schemas/locationType'
          - description: <p>Specify the type of the working location.</p> <ul> <li>
              <p> <code>SAGEMAKER</code> – Use the Amazon S3 location as a temporary
              location to store data content when working with FinSpace Notebooks
              that run on SageMaker studio.</p> </li> <li> <p> <code>INGESTION</code>
              – Use the Amazon S3 location as a staging location to copy your data
              content and then use the location with the Changeset creation operation.</p>
              </li> </ul>
      title: GetWorkingLocationRequest
      type: object
    stringValueLength1to1024:
      maxLength: 1024
      minLength: 1
      pattern: .*\S.*
      type: string
    stringValueLength1to63:
      maxLength: 63
      minLength: 1
      pattern: .*\S.*
      type: string
    ResultLimit:
      maximum: 100
      minimum: 1
      type: integer
    PaginationToken:
      type: string
    ListChangesetsRequest:
      description: Request to ListChangesetsRequest. It exposes minimal query filters.
      properties: {}
      title: ListChangesetsRequest
      type: object
    ListDataViewsRequest:
      description: Request for a list data views.
      properties: {}
      title: ListDataViewsRequest
      type: object
    ListDatasetsRequest:
      description: Request for the ListDatasets operation.
      properties: {}
      title: ListDatasetsRequest
      type: object
    ListPermissionGroupsByUserRequest:
      properties: {}
      title: ListPermissionGroupsByUserRequest
      type: object
    PermissionGroupByUserList:
      items:
        $ref: '#/components/schemas/PermissionGroupByUser'
      type: array
    ListPermissionGroupsRequest:
      properties: {}
      title: ListPermissionGroupsRequest
      type: object
    PermissionGroupList:
      items:
        $ref: '#/components/schemas/PermissionGroup'
      type: array
    ListUsersByPermissionGroupRequest:
      properties: {}
      title: ListUsersByPermissionGroupRequest
      type: object
    UserByPermissionGroupList:
      items:
        $ref: '#/components/schemas/UserByPermissionGroup'
      type: array
    ListUsersRequest:
      properties: {}
      title: ListUsersRequest
      type: object
    UserList:
      items:
        $ref: '#/components/schemas/User'
      type: array
    Password:
      format: password
      maxLength: 20
      minLength: 8
      pattern: .*\S.*
      type: string
    PermissionGroupMembershipStatus:
      enum:
      - ADDITION_IN_PROGRESS
      - ADDITION_SUCCESS
      - REMOVAL_IN_PROGRESS
      title: PermissionGroupMembershipStatus
      type: string
    PermissionGroupByUser:
      description: The structure of a permission group associated with a user account.
      properties:
        permissionGroupId:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupId'
          - description: The unique identifier for the permission group.
          title: permissionGroupId
        name:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupName'
          - description: The name of the permission group.
          title: name
        membershipStatus:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupMembershipStatus'
          - description: <p>Indicates the status of the user account within a permission
              group.</p> <ul> <li> <p> <code>ADDITION_IN_PROGRESS</code> – The user
              account is currently being added to the permission group.</p> </li>
              <li> <p> <code>ADDITION_SUCCESS</code> – The user account is successfully
              added to the permission group.</p> </li> <li> <p> <code>REMOVAL_IN_PROGRESS</code>
              – The user is currently being removed from the permission group.</p>
              </li> </ul>
          title: membershipStatus
      title: PermissionGroupByUser
      type: object
    ResetUserPasswordRequest:
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A token that ensures idempotency. This token expires in 10
              minutes.
      title: ResetUserPasswordRequest
      type: object
    StringValueLength1to250:
      description: 1 - 250 character String
      maxLength: 250
      minLength: 1
      pattern: "[\\s\\S]*\\S[\\s\\S]*"
      type: string
    ResourcePermission:
      description: "<p>Resource permission for a dataset. When you create a dataset,\
        \ all the other members of the same user group inherit access to the dataset.\
        \ You can only create a dataset if your user group has application permission\
        \ for Create Datasets.</p> <p>The following is a list of valid dataset permissions\
        \ that you can apply: </p> <ul> <li> <p> <code>ViewDatasetDetails</code> </p>\
        \ </li> <li> <p> <code>ReadDatasetDetails</code> </p> </li> <li> <p> <code>AddDatasetData</code>\
        \ </p> </li> <li> <p> <code>CreateDataView</code> </p> </li> <li> <p> <code>EditDatasetMetadata</code>\
        \ </p> </li> <li> <p> <code>DeleteDataset</code> </p> </li> </ul> <p>For more\
        \ information on the dataset permissions, see <a href=\"https://docs.aws.amazon.com/finspace/latest/userguide/managing-user-permissions.html#supported-dataset-permissions\"\
        >Supported Dataset Permissions</a> in the FinSpace User Guide.</p>"
      properties:
        permission:
          allOf:
          - $ref: '#/components/schemas/StringValueLength1to250'
          - description: Permission for a resource.
          title: permission
      title: ResourcePermission
      type: object
    S3BucketName:
      maxLength: 63
      minLength: 1
      pattern: ^.*\S.*$
      type: string
    S3Key:
      maxLength: 1024
      minLength: 1
      pattern: ^.*\S.*$
      type: string
    StringMapKey:
      maxLength: 128
      pattern: "[\\s\\S]*\\S[\\s\\S]*"
      type: string
    UpdateChangesetRequest:
      description: Request to update an existing changeset.
      example:
        formatParams: ""
        clientToken: ""
        sourceParams: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A token that ensures idempotency. This token expires in 10
              minutes.
        sourceParams:
          allOf:
          - $ref: '#/components/schemas/SourceParams'
          - description: "<p>Options that define the location of the data being ingested\
              \ (<code>s3SourcePath</code>) and the source of the changeset (<code>sourceType</code>).</p>\
              \ <p>Both <code>s3SourcePath</code> and <code>sourceType</code> are\
              \ required attributes.</p> <p>Here is an example of how you could specify\
              \ the <code>sourceParams</code>:</p> <p> <code> \"sourceParams\": {\
              \ \"s3SourcePath\": \"s3://finspace-landing-us-east-2-bk7gcfvitndqa6ebnvys4d/scratch/wr5hh8pwkpqqkxa4sxrmcw/ingestion/equity.csv\"\
              , \"sourceType\": \"S3\" } </code> </p> <p>The S3 path that you specify\
              \ must allow the FinSpace role access. To do that, you first need to\
              \ configure the IAM policy on S3 bucket. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/finspace/latest/data-api/fs-using-the-finspace-api.html#access-s3-buckets\"\
              >Loading data from an Amazon S3 Bucket using the FinSpace API</a>section.</p>"
        formatParams:
          allOf:
          - $ref: '#/components/schemas/FormatParams'
          - description: "<p>Options that define the structure of the source file(s)\
              \ including the format type (<code>formatType</code>), header row (<code>withHeader</code>),\
              \ data separation character (<code>separator</code>) and the type of\
              \ compression (<code>compression</code>). </p> <p> <code>formatType</code>\
              \ is a required attribute and can have the following values: </p> <ul>\
              \ <li> <p> <code>PARQUET</code> – Parquet source file format.</p> </li>\
              \ <li> <p> <code>CSV</code> – CSV source file format.</p> </li> <li>\
              \ <p> <code>JSON</code> – JSON source file format.</p> </li> <li> <p>\
              \ <code>XML</code> – XML source file format.</p> </li> </ul> <p>Here\
              \ is an example of how you could specify the <code>formatParams</code>:</p>\
              \ <p> <code> \"formatParams\": { \"formatType\": \"CSV\", \"withHeader\"\
              : \"true\", \"separator\": \",\", \"compression\":\"None\" } </code>\
              \ </p> <p>Note that if you only provide <code>formatType</code> as <code>CSV</code>,\
              \ the rest of the attributes will automatically default to CSV values\
              \ as following:</p> <p> <code> { \"withHeader\": \"true\", \"separator\"\
              : \",\" } </code> </p> <p> For more information about supported file\
              \ formats, see <a href=\"https://docs.aws.amazon.com/finspace/latest/userguide/supported-data-types.html\"\
              >Supported Data Types and File Formats</a> in the FinSpace User Guide.</p>"
      required:
      - formatParams
      - sourceParams
      title: UpdateChangesetRequest
      type: object
    UpdateDatasetRequest:
      description: The request for an UpdateDataset operation
      example:
        datasetTitle: ""
        datasetDescription: ""
        clientToken: ""
        kind: ""
        schemaDefinition:
          tabularSchemaConfig:
            primaryKeyColumns: ""
            columns: ""
        alias: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A token that ensures idempotency. This token expires in 10
              minutes.
        datasetTitle:
          allOf:
          - $ref: '#/components/schemas/DatasetTitle'
          - description: A display title for the Dataset.
        kind:
          allOf:
          - $ref: '#/components/schemas/DatasetKind'
          - description: <p>The format in which the Dataset data is structured.</p>
              <ul> <li> <p> <code>TABULAR</code> – Data is structured in a tabular
              format.</p> </li> <li> <p> <code>NON_TABULAR</code> – Data is structured
              in a non-tabular format.</p> </li> </ul>
        datasetDescription:
          allOf:
          - $ref: '#/components/schemas/DatasetDescription'
          - description: A description for the Dataset.
        alias:
          allOf:
          - $ref: '#/components/schemas/AliasString'
          - description: The unique resource identifier for a Dataset.
        schemaDefinition:
          $ref: '#/components/schemas/GetDatasetResponse_schemaDefinition'
      required:
      - datasetTitle
      - kind
      title: UpdateDatasetRequest
      type: object
    UpdatePermissionGroupRequest:
      example:
        applicationPermissions: ""
        clientToken: ""
        name: ""
        description: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupName'
          - description: The name of the permission group.
        description:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupDescription'
          - description: A brief description for the permission group.
        applicationPermissions:
          allOf:
          - $ref: '#/components/schemas/ApplicationPermissionList'
          - description: "<p>The permissions that are granted to a specific group\
              \ for accessing the FinSpace application.</p> <important> <p>When assigning\
              \ application permissions, be aware that the permission <code>ManageUsersAndGroups</code>\
              \ allows users to grant themselves or others access to any functionality\
              \ in their FinSpace environment's application. It should only be granted\
              \ to trusted users.</p> </important> <ul> <li> <p> <code>CreateDataset</code>\
              \ – Group members can create new datasets.</p> </li> <li> <p> <code>ManageClusters</code>\
              \ – Group members can manage Apache Spark clusters from FinSpace notebooks.</p>\
              \ </li> <li> <p> <code>ManageUsersAndGroups</code> – Group members can\
              \ manage users and permission groups. This is a privileged permission\
              \ that allows users to grant themselves or others access to any functionality\
              \ in the application. It should only be granted to trusted users.</p>\
              \ </li> <li> <p> <code>ManageAttributeSets</code> – Group members can\
              \ manage attribute sets.</p> </li> <li> <p> <code>ViewAuditData</code>\
              \ – Group members can view audit data.</p> </li> <li> <p> <code>AccessNotebooks</code>\
              \ – Group members will have access to FinSpace notebooks.</p> </li>\
              \ <li> <p> <code>GetTemporaryCredentials</code> – Group members can\
              \ get temporary API credentials.</p> </li> </ul>"
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A token that ensures idempotency. This token expires in 10
              minutes.
      title: UpdatePermissionGroupRequest
      type: object
    UpdateUserRequest:
      example:
        firstName: ""
        lastName: ""
        apiAccess: ""
        clientToken: ""
        apiAccessPrincipalArn: ""
        type: ""
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/UserType'
          - description: <p>The option to indicate the type of user.</p> <ul> <li>
              <p> <code>SUPER_USER</code>– A user with permission to all the functionality
              and data in FinSpace.</p> </li> <li> <p> <code>APP_USER</code> – A user
              with specific permissions in FinSpace. The users are assigned permissions
              by adding them to a permission group.</p> </li> </ul>
        firstName:
          allOf:
          - $ref: '#/components/schemas/FirstName'
          - description: The first name of the user.
        lastName:
          allOf:
          - $ref: '#/components/schemas/LastName'
          - description: The last name of the user.
        apiAccess:
          allOf:
          - $ref: '#/components/schemas/ApiAccess'
          - description: <p>The option to indicate whether the user can use the <code>GetProgrammaticAccessCredentials</code>
              API to obtain credentials that can then be used to access other FinSpace
              Data API operations.</p> <ul> <li> <p> <code>ENABLED</code> – The user
              has permissions to use the APIs.</p> </li> <li> <p> <code>DISABLED</code>
              – The user does not have permissions to use any APIs.</p> </li> </ul>
        apiAccessPrincipalArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN identifier of an AWS user or role that is allowed
              to call the <code>GetProgrammaticAccessCredentials</code> API to obtain
              a credentials token for a specific FinSpace user. This must be an IAM
              role within your FinSpace account.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: A token that ensures idempotency. This token expires in 10
              minutes.
      title: UpdateUserRequest
      type: object
    User:
      description: The details of the user account.
      properties:
        userId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: The unique identifier for the user.
          title: userId
        status:
          allOf:
          - $ref: '#/components/schemas/UserStatus'
          - description: <p>The current status of the user account. </p> <ul> <li>
              <p> <code>CREATING</code> – The user account creation is in progress.</p>
              </li> <li> <p> <code>ENABLED</code> – The user account is created and
              is currently active.</p> </li> <li> <p> <code>DISABLED</code> – The
              user account is currently inactive.</p> </li> </ul>
          title: status
        firstName:
          allOf:
          - $ref: '#/components/schemas/FirstName'
          - description: The first name of the user.
          title: firstName
        lastName:
          allOf:
          - $ref: '#/components/schemas/LastName'
          - description: ' The last name of the user.'
          title: lastName
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: The email address of the user. The email address serves as
              a uniquer identifier for each user and cannot be changed after it's
              created.
          title: emailAddress
        type:
          allOf:
          - $ref: '#/components/schemas/UserType'
          - description: <p> Indicates the type of user.</p> <ul> <li> <p> <code>SUPER_USER</code>
              – A user with permission to all the functionality and data in FinSpace.</p>
              </li> <li> <p> <code>APP_USER</code> – A user with specific permissions
              in FinSpace. The users are assigned permissions by adding them to a
              permission group.</p> </li> </ul>
          title: type
        apiAccess:
          allOf:
          - $ref: '#/components/schemas/ApiAccess'
          - description: <p>Indicates whether the user can use the <code>GetProgrammaticAccessCredentials</code>
              API to obtain credentials that can then be used to access other FinSpace
              Data API operations.</p> <ul> <li> <p> <code>ENABLED</code> – The user
              has permissions to use the APIs.</p> </li> <li> <p> <code>DISABLED</code>
              – The user does not have permissions to use any APIs.</p> </li> </ul>
          title: apiAccess
        apiAccessPrincipalArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN identifier of an AWS user or role that is allowed
              to call the <code>GetProgrammaticAccessCredentials</code> API to obtain
              a credentials token for a specific FinSpace user. This must be an IAM
              role within your FinSpace account.
          title: apiAccessPrincipalArn
        createTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: 'The timestamp at which the user account was created in FinSpace.
              The value is determined as epoch time in milliseconds. '
          title: createTime
        lastEnabledTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: ' Describes the last time the user account was enabled. The
              value is determined as epoch time in milliseconds. '
          title: lastEnabledTime
        lastDisabledTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: Describes the last time the user account was disabled. The
              value is determined as epoch time in milliseconds.
          title: lastDisabledTime
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: 'Describes the last time the user account was updated. The
              value is determined as epoch time in milliseconds. '
          title: lastModifiedTime
        lastLoginTime:
          allOf:
          - $ref: '#/components/schemas/TimestampEpoch'
          - description: 'Describes the last time that the user logged into their
              account. The value is determined as epoch time in milliseconds. '
          title: lastLoginTime
      title: User
      type: object
    UserByPermissionGroup:
      description: The structure of a user account associated with a permission group.
      properties:
        userId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: The unique identifier for the user.
          title: userId
        status:
          allOf:
          - $ref: '#/components/schemas/UserStatus'
          - description: <p>The current status of the user account. </p> <ul> <li>
              <p> <code>CREATING</code> – The user account creation is in progress.</p>
              </li> <li> <p> <code>ENABLED</code> – The user account is created and
              is currently active.</p> </li> <li> <p> <code>DISABLED</code> – The
              user account is currently inactive.</p> </li> </ul>
          title: status
        firstName:
          allOf:
          - $ref: '#/components/schemas/FirstName'
          - description: The first name of the user.
          title: firstName
        lastName:
          allOf:
          - $ref: '#/components/schemas/LastName'
          - description: The last name of the user.
          title: lastName
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: The email address of the user. The email address serves as
              a unique identifier for each user and cannot be changed after it's created.
          title: emailAddress
        type:
          allOf:
          - $ref: '#/components/schemas/UserType'
          - description: <p> Indicates the type of user.</p> <ul> <li> <p> <code>SUPER_USER</code>
              – A user with permission to all the functionality and data in FinSpace.</p>
              </li> <li> <p> <code>APP_USER</code> – A user with specific permissions
              in FinSpace. The users are assigned permissions by adding them to a
              permission group.</p> </li> </ul>
          title: type
        apiAccess:
          allOf:
          - $ref: '#/components/schemas/ApiAccess'
          - description: <p>Indicates whether the user can access FinSpace API operations.</p>
              <ul> <li> <p> <code>ENABLED</code> – The user has permissions to use
              the API operations.</p> </li> <li> <p> <code>DISABLED</code> – The user
              does not have permissions to use any API operations.</p> </li> </ul>
          title: apiAccess
        apiAccessPrincipalArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The IAM ARN identifier that is attached to FinSpace API calls.
          title: apiAccessPrincipalArn
        membershipStatus:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupMembershipStatus'
          - description: <p>Indicates the status of the user account within a permission
              group.</p> <ul> <li> <p> <code>ADDITION_IN_PROGRESS</code> – The user
              account is currently being added to the permission group.</p> </li>
              <li> <p> <code>ADDITION_SUCCESS</code> – The user account is successfully
              added to the permission group.</p> </li> <li> <p> <code>REMOVAL_IN_PROGRESS</code>
              – The user is currently being removed from the permission group.</p>
              </li> </ul>
          title: membershipStatus
      title: UserByPermissionGroup
      type: object
    AssociateUserToPermissionGroup_request:
      properties:
        clientToken:
          description: Idempotence Token for API operations
          maxLength: 128
          minLength: 1
          pattern: .*\S.*
          title: clientToken
          type: string
      title: AssociateUserToPermissionGroup_request
      type: object
    CreateChangeset_request:
      properties:
        clientToken:
          description: Idempotence Token for API operations
          maxLength: 128
          minLength: 1
          pattern: .*\S.*
          title: clientToken
          type: string
        changeType:
          description: Indicates how the given change will be applied to the dataset.
          enum:
          - REPLACE
          - APPEND
          - MODIFY
          title: changeType
          type: string
        sourceParams:
          additionalProperties:
            $ref: '#/components/schemas/StringMapValue'
          description: Source Parameters of a Changeset
          title: sourceParams
          type: object
        formatParams:
          additionalProperties:
            $ref: '#/components/schemas/StringMapValue'
          description: Format Parameters of a Changeset
          title: formatParams
          type: object
      required:
      - changeType
      - formatParams
      - sourceParams
      title: CreateChangeset_request
      type: object
    CreateDataView_request_destinationTypeParams:
      description: Structure for the Dataview destination type parameters.
      properties:
        destinationType:
          allOf:
          - $ref: '#/components/schemas/DataViewDestinationType'
          - description: <p>Destination type for a Dataview.</p> <ul> <li> <p> <code>GLUE_TABLE</code>
              – Glue table destination type.</p> </li> <li> <p> <code>S3</code> –
              S3 destination type.</p> </li> </ul>
          title: destinationType
        s3DestinationExportFileFormat:
          allOf:
          - $ref: '#/components/schemas/ExportFileFormat'
          - description: <p>Dataview export file format.</p> <ul> <li> <p> <code>PARQUET</code>
              – Parquet export file format.</p> </li> <li> <p> <code>DELIMITED_TEXT</code>
              – Delimited text export file format.</p> </li> </ul>
          title: s3DestinationExportFileFormat
        s3DestinationExportFileFormatOptions:
          allOf:
          - $ref: '#/components/schemas/S3DestinationFormatOptions'
          - description: "<p>Format Options for S3 Destination type.</p> <p>Here is\
              \ an example of how you could specify the <code>s3DestinationExportFileFormatOptions</code>\
              \ </p> <p> <code> { \"header\": \"true\", \"delimiter\": \",\", \"compression\"\
              : \"gzip\" }</code> </p>"
          title: s3DestinationExportFileFormatOptions
      title: CreateDataView_request_destinationTypeParams
      type: object
    CreateDataView_request:
      properties:
        clientToken:
          description: Idempotence Token for API operations
          maxLength: 128
          minLength: 1
          pattern: .*\S.*
          title: clientToken
          type: string
        autoUpdate:
          description: Common Boolean data type
          title: autoUpdate
          type: boolean
        sortColumns:
          description: DataView Sort Column List
          items:
            $ref: '#/components/schemas/StringValueLength1to255'
          title: sortColumns
          type: array
        partitionColumns:
          description: DataView Partition Column List
          items:
            $ref: '#/components/schemas/StringValueLength1to255'
          title: partitionColumns
          type: array
        asOfTimestamp:
          description: Milliseconds since UTC epoch
          title: asOfTimestamp
          type: integer
        destinationTypeParams:
          $ref: '#/components/schemas/CreateDataView_request_destinationTypeParams'
      required:
      - destinationTypeParams
      title: CreateDataView_request
      type: object
    CreateDataset_request_ownerInfo:
      description: A structure for Dataset owner info.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/OwnerName'
          - description: The name of the Dataset owner.
          title: name
        phoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          - description: Phone number for the Dataset owner.
          title: phoneNumber
        email:
          allOf:
          - $ref: '#/components/schemas/Email'
          - description: Email address for the Dataset owner.
          title: email
      title: CreateDataset_request_ownerInfo
      type: object
    CreateDataset_request_permissionGroupParams:
      description: "<p>Permission group parameters for Dataset permissions.</p> <p>Here\
        \ is an example of how you could specify the <code>PermissionGroupParams</code>:</p>\
        \ <p> <code> { \"permissionGroupId\": \"0r6fCRtSTUk4XPfXQe3M0g\", \"datasetPermissions\"\
        : [ {\"permission\": \"ViewDatasetDetails\"}, {\"permission\": \"AddDatasetData\"\
        }, {\"permission\": \"EditDatasetMetadata\"}, {\"permission\": \"DeleteDataset\"\
        } ] } </code> </p>"
      properties:
        permissionGroupId:
          allOf:
          - $ref: '#/components/schemas/PermissionGroupId'
          - description: The unique identifier for the <code>PermissionGroup</code>.
          title: permissionGroupId
        datasetPermissions:
          allOf:
          - $ref: '#/components/schemas/ResourcePermissionsList'
          - description: List of resource permissions.
          title: datasetPermissions
      title: CreateDataset_request_permissionGroupParams
      type: object
    CreateDataset_request_schemaDefinition_tabularSchemaConfig:
      allOf:
      - $ref: '#/components/schemas/SchemaDefinition'
      - description: The configuration for a schema on a tabular Dataset.
      example:
        primaryKeyColumns: ""
        columns: ""
      title: CreateDataset_request_schemaDefinition_tabularSchemaConfig
    CreateDataset_request_schemaDefinition:
      description: A union of schema types.
      properties:
        tabularSchemaConfig:
          $ref: '#/components/schemas/CreateDataset_request_schemaDefinition_tabularSchemaConfig'
      title: CreateDataset_request_schemaDefinition
      type: object
    CreateDataset_request:
      properties:
        clientToken:
          description: Idempotence Token for API operations
          maxLength: 128
          minLength: 1
          pattern: .*\S.*
          title: clientToken
          type: string
        datasetTitle:
          description: Title for a given Dataset
          maxLength: 255
          minLength: 1
          pattern: .*\S.*
          title: datasetTitle
          type: string
        kind:
          description: Dataset Kind
          enum:
          - TABULAR
          - NON_TABULAR
          title: kind
          type: string
        datasetDescription:
          description: Description of a dataset
          maxLength: 1000
          pattern: "[\\s\\S]*"
          title: datasetDescription
          type: string
        ownerInfo:
          $ref: '#/components/schemas/CreateDataset_request_ownerInfo'
        permissionGroupParams:
          $ref: '#/components/schemas/CreateDataset_request_permissionGroupParams'
        alias:
          description: The unique resource identifier for a Dataset.
          maxLength: 255
          minLength: 1
          pattern: ^alias\/\S+
          title: alias
          type: string
        schemaDefinition:
          $ref: '#/components/schemas/CreateDataset_request_schemaDefinition'
      required:
      - datasetTitle
      - kind
      - permissionGroupParams
      title: CreateDataset_request
      type: object
    CreatePermissionGroup_request:
      properties:
        name:
          description: The name of the permission group.
          format: password
          maxLength: 255
          minLength: 1
          pattern: .*\S.*
          title: name
          type: string
        description:
          description: A brief description for the permission group.
          format: password
          maxLength: 4000
          minLength: 1
          pattern: "[\\s\\S]*"
          title: description
          type: string
        applicationPermissions:
          description: "<p>The option to indicate FinSpace application permissions\
            \ that are granted to a specific group.</p> <important> <p>When assigning\
            \ application permissions, be aware that the permission <code>ManageUsersAndGroups</code>\
            \ allows users to grant themselves or others access to any functionality\
            \ in their FinSpace environment's application. It should only be granted\
            \ to trusted users.</p> </important> <ul> <li> <p> <code>CreateDataset</code>\
            \ – Group members can create new datasets.</p> </li> <li> <p> <code>ManageClusters</code>\
            \ – Group members can manage Apache Spark clusters from FinSpace notebooks.</p>\
            \ </li> <li> <p> <code>ManageUsersAndGroups</code> – Group members can\
            \ manage users and permission groups. This is a privileged permission\
            \ that allows users to grant themselves or others access to any functionality\
            \ in the application. It should only be granted to trusted users.</p>\
            \ </li> <li> <p> <code>ManageAttributeSets</code> – Group members can\
            \ manage attribute sets.</p> </li> <li> <p> <code>ViewAuditData</code>\
            \ – Group members can view audit data.</p> </li> <li> <p> <code>AccessNotebooks</code>\
            \ – Group members will have access to FinSpace notebooks.</p> </li> <li>\
            \ <p> <code>GetTemporaryCredentials</code> – Group members can get temporary\
            \ API credentials.</p> </li> </ul>"
          items:
            $ref: '#/components/schemas/ApplicationPermission'
          title: applicationPermissions
          type: array
        clientToken:
          description: Idempotence Token for API operations
          maxLength: 128
          minLength: 1
          pattern: .*\S.*
          title: clientToken
          type: string
      required:
      - applicationPermissions
      - name
      title: CreatePermissionGroup_request
      type: object
    CreateUser_request:
      properties:
        emailAddress:
          description: The email address of the user that you want to register. The
            email address serves as a uniquer identifier for each user and cannot
            be changed after it's created.
          format: password
          maxLength: 320
          minLength: 4
          pattern: "[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}"
          title: emailAddress
          type: string
        type:
          description: <p>The option to indicate the type of user. Use one of the
            following options to specify this parameter:</p> <ul> <li> <p> <code>SUPER_USER</code>
            – A user with permission to all the functionality and data in FinSpace.</p>
            </li> <li> <p> <code>APP_USER</code> – A user with specific permissions
            in FinSpace. The users are assigned permissions by adding them to a permission
            group.</p> </li> </ul>
          enum:
          - SUPER_USER
          - APP_USER
          title: type
          type: string
        firstName:
          description: The first name of the user that you want to register.
          format: password
          maxLength: 50
          minLength: 1
          pattern: .*\S.*
          title: firstName
          type: string
        lastName:
          description: The last name of the user that you want to register.
          format: password
          maxLength: 50
          minLength: 1
          pattern: .*\S.*
          title: lastName
          type: string
        ApiAccess:
          description: <p>The option to indicate whether the user can use the <code>GetProgrammaticAccessCredentials</code>
            API to obtain credentials that can then be used to access other FinSpace
            Data API operations.</p> <ul> <li> <p> <code>ENABLED</code> – The user
            has permissions to use the APIs.</p> </li> <li> <p> <code>DISABLED</code>
            – The user does not have permissions to use any APIs.</p> </li> </ul>
          enum:
          - ENABLED
          - DISABLED
          title: ApiAccess
          type: string
        apiAccessPrincipalArn:
          description: The ARN identifier of an AWS user or role that is allowed to
            call the <code>GetProgrammaticAccessCredentials</code> API to obtain a
            credentials token for a specific FinSpace user. This must be an IAM role
            within your FinSpace account.
          maxLength: 2048
          minLength: 20
          pattern: "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$"
          title: apiAccessPrincipalArn
          type: string
        clientToken:
          description: Idempotence Token for API operations
          maxLength: 128
          minLength: 1
          pattern: .*\S.*
          title: clientToken
          type: string
      required:
      - emailAddress
      - type
      title: CreateUser_request
      type: object
    UpdateDataset_request:
      properties:
        clientToken:
          description: Idempotence Token for API operations
          maxLength: 128
          minLength: 1
          pattern: .*\S.*
          title: clientToken
          type: string
        datasetTitle:
          description: Title for a given Dataset
          maxLength: 255
          minLength: 1
          pattern: .*\S.*
          title: datasetTitle
          type: string
        kind:
          description: Dataset Kind
          enum:
          - TABULAR
          - NON_TABULAR
          title: kind
          type: string
        datasetDescription:
          description: Description of a dataset
          maxLength: 1000
          pattern: "[\\s\\S]*"
          title: datasetDescription
          type: string
        alias:
          description: The unique resource identifier for a Dataset.
          maxLength: 255
          minLength: 1
          pattern: ^alias\/\S+
          title: alias
          type: string
        schemaDefinition:
          $ref: '#/components/schemas/CreateDataset_request_schemaDefinition'
      required:
      - datasetTitle
      - kind
      title: UpdateDataset_request
      type: object
    UpdatePermissionGroup_request:
      properties:
        name:
          description: The name of the permission group.
          format: password
          maxLength: 255
          minLength: 1
          pattern: .*\S.*
          title: name
          type: string
        description:
          description: A brief description for the permission group.
          format: password
          maxLength: 4000
          minLength: 1
          pattern: "[\\s\\S]*"
          title: description
          type: string
        applicationPermissions:
          description: "<p>The permissions that are granted to a specific group for\
            \ accessing the FinSpace application.</p> <important> <p>When assigning\
            \ application permissions, be aware that the permission <code>ManageUsersAndGroups</code>\
            \ allows users to grant themselves or others access to any functionality\
            \ in their FinSpace environment's application. It should only be granted\
            \ to trusted users.</p> </important> <ul> <li> <p> <code>CreateDataset</code>\
            \ – Group members can create new datasets.</p> </li> <li> <p> <code>ManageClusters</code>\
            \ – Group members can manage Apache Spark clusters from FinSpace notebooks.</p>\
            \ </li> <li> <p> <code>ManageUsersAndGroups</code> – Group members can\
            \ manage users and permission groups. This is a privileged permission\
            \ that allows users to grant themselves or others access to any functionality\
            \ in the application. It should only be granted to trusted users.</p>\
            \ </li> <li> <p> <code>ManageAttributeSets</code> – Group members can\
            \ manage attribute sets.</p> </li> <li> <p> <code>ViewAuditData</code>\
            \ – Group members can view audit data.</p> </li> <li> <p> <code>AccessNotebooks</code>\
            \ – Group members will have access to FinSpace notebooks.</p> </li> <li>\
            \ <p> <code>GetTemporaryCredentials</code> – Group members can get temporary\
            \ API credentials.</p> </li> </ul>"
          items:
            $ref: '#/components/schemas/ApplicationPermission'
          title: applicationPermissions
          type: array
        clientToken:
          description: Idempotence Token for API operations
          maxLength: 128
          minLength: 1
          pattern: .*\S.*
          title: clientToken
          type: string
      title: UpdatePermissionGroup_request
      type: object
    UpdateChangeset_request:
      properties:
        clientToken:
          description: Idempotence Token for API operations
          maxLength: 128
          minLength: 1
          pattern: .*\S.*
          title: clientToken
          type: string
        sourceParams:
          additionalProperties:
            $ref: '#/components/schemas/StringMapValue'
          description: Source Parameters of a Changeset
          title: sourceParams
          type: object
        formatParams:
          additionalProperties:
            $ref: '#/components/schemas/StringMapValue'
          description: Format Parameters of a Changeset
          title: formatParams
          type: object
      required:
      - formatParams
      - sourceParams
      title: UpdateChangeset_request
      type: object
    UpdateUser_request:
      properties:
        type:
          description: <p>The option to indicate the type of user.</p> <ul> <li> <p>
            <code>SUPER_USER</code>– A user with permission to all the functionality
            and data in FinSpace.</p> </li> <li> <p> <code>APP_USER</code> – A user
            with specific permissions in FinSpace. The users are assigned permissions
            by adding them to a permission group.</p> </li> </ul>
          enum:
          - SUPER_USER
          - APP_USER
          title: type
          type: string
        firstName:
          description: The first name of the user.
          format: password
          maxLength: 50
          minLength: 1
          pattern: .*\S.*
          title: firstName
          type: string
        lastName:
          description: The last name of the user.
          format: password
          maxLength: 50
          minLength: 1
          pattern: .*\S.*
          title: lastName
          type: string
        apiAccess:
          description: <p>The option to indicate whether the user can use the <code>GetProgrammaticAccessCredentials</code>
            API to obtain credentials that can then be used to access other FinSpace
            Data API operations.</p> <ul> <li> <p> <code>ENABLED</code> – The user
            has permissions to use the APIs.</p> </li> <li> <p> <code>DISABLED</code>
            – The user does not have permissions to use any APIs.</p> </li> </ul>
          enum:
          - ENABLED
          - DISABLED
          title: apiAccess
          type: string
        apiAccessPrincipalArn:
          description: The ARN identifier of an AWS user or role that is allowed to
            call the <code>GetProgrammaticAccessCredentials</code> API to obtain a
            credentials token for a specific FinSpace user. This must be an IAM role
            within your FinSpace account.
          maxLength: 2048
          minLength: 20
          pattern: "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$"
          title: apiAccessPrincipalArn
          type: string
        clientToken:
          description: Idempotence Token for API operations
          maxLength: 128
          minLength: 1
          pattern: .*\S.*
          title: clientToken
          type: string
      title: UpdateUser_request
      type: object
    GetWorkingLocation_request:
      properties:
        locationType:
          description: <p>Specify the type of the working location.</p> <ul> <li>
            <p> <code>SAGEMAKER</code> – Use the Amazon S3 location as a temporary
            location to store data content when working with FinSpace Notebooks that
            run on SageMaker studio.</p> </li> <li> <p> <code>INGESTION</code> – Use
            the Amazon S3 location as a staging location to copy your data content
            and then use the location with the Changeset creation operation.</p> </li>
            </ul>
          enum:
          - INGESTION
          - SAGEMAKER
          title: locationType
          type: string
      title: GetWorkingLocation_request
      type: object
    GetChangesetResponse_errorInfo:
      allOf:
      - $ref: '#/components/schemas/ChangesetErrorInfo'
      - description: The structure with error messages.
      example:
        errorCategory: ""
        errorMessage: ""
      title: GetChangesetResponse_errorInfo
    GetDataViewResponse_errorInfo:
      allOf:
      - $ref: '#/components/schemas/DataViewErrorInfo'
      - description: Information about an error that occurred for the Dataview.
      example:
        errorCategory: ""
        errorMessage: ""
      title: GetDataViewResponse_errorInfo
    GetDataViewResponse_destinationTypeParams:
      allOf:
      - $ref: '#/components/schemas/DataViewDestinationTypeParams'
      - description: Options that define the destination type for the Dataview.
      example:
        s3DestinationExportFileFormat: ""
        destinationType: ""
        s3DestinationExportFileFormatOptions: ""
      title: GetDataViewResponse_destinationTypeParams
    GetDatasetResponse_schemaDefinition:
      allOf:
      - $ref: '#/components/schemas/SchemaUnion'
      - description: Definition for a schema on a tabular Dataset.
      example:
        tabularSchemaConfig:
          primaryKeyColumns: ""
          columns: ""
      title: GetDatasetResponse_schemaDefinition
    GetExternalDataViewAccessDetailsResponse_credentials:
      allOf:
      - $ref: '#/components/schemas/AwsCredentials'
      - description: The credentials required to access the external Dataview from
          the S3 location.
      example:
        accessKeyId: ""
        secretAccessKey: ""
        sessionToken: ""
        expiration: ""
      title: GetExternalDataViewAccessDetailsResponse_credentials
    GetExternalDataViewAccessDetailsResponse_s3Location:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: The location where the external Dataview is stored.
      example:
        bucket: ""
        key: ""
      title: GetExternalDataViewAccessDetailsResponse_s3Location
    GetProgrammaticAccessCredentialsResponse_credentials:
      allOf:
      - $ref: '#/components/schemas/Credentials'
      - description: Returns the programmatic credentials.
      example:
        accessKeyId: ""
        secretAccessKey: ""
        sessionToken: ""
      title: GetProgrammaticAccessCredentialsResponse_credentials
    CreateDatasetRequest_ownerInfo:
      allOf:
      - $ref: '#/components/schemas/DatasetOwnerInfo'
      - description: Contact information for a Dataset owner.
      example:
        phoneNumber: ""
        name: ""
        email: ""
      title: CreateDatasetRequest_ownerInfo
    CreateDatasetRequest_permissionGroupParams:
      allOf:
      - $ref: '#/components/schemas/PermissionGroupParams'
      - description: Permission group parameters for Dataset permissions.
      example:
        permissionGroupId: ""
        datasetPermissions: ""
      title: CreateDatasetRequest_permissionGroupParams
    DataViewSummary_errorInfo:
      allOf:
      - $ref: '#/components/schemas/DataViewErrorInfo'
      - description: The structure with error messages.
      title: DataViewSummary_errorInfo
    DataViewSummary_destinationTypeProperties:
      allOf:
      - $ref: '#/components/schemas/DataViewDestinationTypeParams'
      - description: Information about the Dataview destination.
      title: DataViewSummary_destinationTypeProperties
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
