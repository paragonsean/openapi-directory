/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FinSpacePublicApi);
  }
}(this, function(expect, FinSpacePublicApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FinSpacePublicApi.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('associateUserToPermissionGroup', function() {
      it('should call associateUserToPermissionGroup successfully', function(done) {
        //uncomment below and update the code to test associateUserToPermissionGroup
        //instance.associateUserToPermissionGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createChangeset', function() {
      it('should call createChangeset successfully', function(done) {
        //uncomment below and update the code to test createChangeset
        //instance.createChangeset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDataView', function() {
      it('should call createDataView successfully', function(done) {
        //uncomment below and update the code to test createDataView
        //instance.createDataView(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDataset', function() {
      it('should call createDataset successfully', function(done) {
        //uncomment below and update the code to test createDataset
        //instance.createDataset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPermissionGroup', function() {
      it('should call createPermissionGroup successfully', function(done) {
        //uncomment below and update the code to test createPermissionGroup
        //instance.createPermissionGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUser', function() {
      it('should call createUser successfully', function(done) {
        //uncomment below and update the code to test createUser
        //instance.createUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDataset', function() {
      it('should call deleteDataset successfully', function(done) {
        //uncomment below and update the code to test deleteDataset
        //instance.deleteDataset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePermissionGroup', function() {
      it('should call deletePermissionGroup successfully', function(done) {
        //uncomment below and update the code to test deletePermissionGroup
        //instance.deletePermissionGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableUser', function() {
      it('should call disableUser successfully', function(done) {
        //uncomment below and update the code to test disableUser
        //instance.disableUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateUserFromPermissionGroup', function() {
      it('should call disassociateUserFromPermissionGroup successfully', function(done) {
        //uncomment below and update the code to test disassociateUserFromPermissionGroup
        //instance.disassociateUserFromPermissionGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableUser', function() {
      it('should call enableUser successfully', function(done) {
        //uncomment below and update the code to test enableUser
        //instance.enableUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChangeset', function() {
      it('should call getChangeset successfully', function(done) {
        //uncomment below and update the code to test getChangeset
        //instance.getChangeset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDataView', function() {
      it('should call getDataView successfully', function(done) {
        //uncomment below and update the code to test getDataView
        //instance.getDataView(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDataset', function() {
      it('should call getDataset successfully', function(done) {
        //uncomment below and update the code to test getDataset
        //instance.getDataset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExternalDataViewAccessDetails', function() {
      it('should call getExternalDataViewAccessDetails successfully', function(done) {
        //uncomment below and update the code to test getExternalDataViewAccessDetails
        //instance.getExternalDataViewAccessDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPermissionGroup', function() {
      it('should call getPermissionGroup successfully', function(done) {
        //uncomment below and update the code to test getPermissionGroup
        //instance.getPermissionGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProgrammaticAccessCredentials', function() {
      it('should call getProgrammaticAccessCredentials successfully', function(done) {
        //uncomment below and update the code to test getProgrammaticAccessCredentials
        //instance.getProgrammaticAccessCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUser', function() {
      it('should call getUser successfully', function(done) {
        //uncomment below and update the code to test getUser
        //instance.getUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWorkingLocation', function() {
      it('should call getWorkingLocation successfully', function(done) {
        //uncomment below and update the code to test getWorkingLocation
        //instance.getWorkingLocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listChangesets', function() {
      it('should call listChangesets successfully', function(done) {
        //uncomment below and update the code to test listChangesets
        //instance.listChangesets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDataViews', function() {
      it('should call listDataViews successfully', function(done) {
        //uncomment below and update the code to test listDataViews
        //instance.listDataViews(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDatasets', function() {
      it('should call listDatasets successfully', function(done) {
        //uncomment below and update the code to test listDatasets
        //instance.listDatasets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPermissionGroups', function() {
      it('should call listPermissionGroups successfully', function(done) {
        //uncomment below and update the code to test listPermissionGroups
        //instance.listPermissionGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPermissionGroupsByUser', function() {
      it('should call listPermissionGroupsByUser successfully', function(done) {
        //uncomment below and update the code to test listPermissionGroupsByUser
        //instance.listPermissionGroupsByUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUsers', function() {
      it('should call listUsers successfully', function(done) {
        //uncomment below and update the code to test listUsers
        //instance.listUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUsersByPermissionGroup', function() {
      it('should call listUsersByPermissionGroup successfully', function(done) {
        //uncomment below and update the code to test listUsersByPermissionGroup
        //instance.listUsersByPermissionGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resetUserPassword', function() {
      it('should call resetUserPassword successfully', function(done) {
        //uncomment below and update the code to test resetUserPassword
        //instance.resetUserPassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateChangeset', function() {
      it('should call updateChangeset successfully', function(done) {
        //uncomment below and update the code to test updateChangeset
        //instance.updateChangeset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDataset', function() {
      it('should call updateDataset successfully', function(done) {
        //uncomment below and update the code to test updateDataset
        //instance.updateDataset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePermissionGroup', function() {
      it('should call updatePermissionGroup successfully', function(done) {
        //uncomment below and update the code to test updatePermissionGroup
        //instance.updatePermissionGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUser', function() {
      it('should call updateUser successfully', function(done) {
        //uncomment below and update the code to test updateUser
        //instance.updateUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
