/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateDataViewRequestDestinationTypeParams from './CreateDataViewRequestDestinationTypeParams';

/**
 * The CreateDataViewRequest model module.
 * @module model/CreateDataViewRequest
 * @version 2020-07-13
 */
class CreateDataViewRequest {
    /**
     * Constructs a new <code>CreateDataViewRequest</code>.
     * @alias module:model/CreateDataViewRequest
     * @param destinationTypeParams {module:model/CreateDataViewRequestDestinationTypeParams} 
     */
    constructor(destinationTypeParams) { 
        
        CreateDataViewRequest.initialize(this, destinationTypeParams);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, destinationTypeParams) { 
        obj['destinationTypeParams'] = destinationTypeParams;
    }

    /**
     * Constructs a <code>CreateDataViewRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDataViewRequest} obj Optional instance to populate.
     * @return {module:model/CreateDataViewRequest} The populated <code>CreateDataViewRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDataViewRequest();

            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('autoUpdate')) {
                obj['autoUpdate'] = ApiClient.convertToType(data['autoUpdate'], 'Boolean');
            }
            if (data.hasOwnProperty('sortColumns')) {
                obj['sortColumns'] = ApiClient.convertToType(data['sortColumns'], ['String']);
            }
            if (data.hasOwnProperty('partitionColumns')) {
                obj['partitionColumns'] = ApiClient.convertToType(data['partitionColumns'], ['String']);
            }
            if (data.hasOwnProperty('asOfTimestamp')) {
                obj['asOfTimestamp'] = ApiClient.convertToType(data['asOfTimestamp'], 'Number');
            }
            if (data.hasOwnProperty('destinationTypeParams')) {
                obj['destinationTypeParams'] = CreateDataViewRequestDestinationTypeParams.constructFromObject(data['destinationTypeParams']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDataViewRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDataViewRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateDataViewRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sortColumns'])) {
            throw new Error("Expected the field `sortColumns` to be an array in the JSON data but got " + data['sortColumns']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['partitionColumns'])) {
            throw new Error("Expected the field `partitionColumns` to be an array in the JSON data but got " + data['partitionColumns']);
        }
        // validate the optional field `destinationTypeParams`
        if (data['destinationTypeParams']) { // data not null
          CreateDataViewRequestDestinationTypeParams.validateJSON(data['destinationTypeParams']);
        }

        return true;
    }


}

CreateDataViewRequest.RequiredProperties = ["destinationTypeParams"];

/**
 * Idempotence Token for API operations
 * @member {String} clientToken
 */
CreateDataViewRequest.prototype['clientToken'] = undefined;

/**
 * Common Boolean data type
 * @member {Boolean} autoUpdate
 */
CreateDataViewRequest.prototype['autoUpdate'] = undefined;

/**
 * DataView Sort Column List
 * @member {Array.<String>} sortColumns
 */
CreateDataViewRequest.prototype['sortColumns'] = undefined;

/**
 * DataView Partition Column List
 * @member {Array.<String>} partitionColumns
 */
CreateDataViewRequest.prototype['partitionColumns'] = undefined;

/**
 * Milliseconds since UTC epoch
 * @member {Number} asOfTimestamp
 */
CreateDataViewRequest.prototype['asOfTimestamp'] = undefined;

/**
 * @member {module:model/CreateDataViewRequestDestinationTypeParams} destinationTypeParams
 */
CreateDataViewRequest.prototype['destinationTypeParams'] = undefined;






export default CreateDataViewRequest;

