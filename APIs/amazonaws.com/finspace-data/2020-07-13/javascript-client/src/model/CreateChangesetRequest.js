/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateChangesetRequest model module.
 * @module model/CreateChangesetRequest
 * @version 2020-07-13
 */
class CreateChangesetRequest {
    /**
     * Constructs a new <code>CreateChangesetRequest</code>.
     * @alias module:model/CreateChangesetRequest
     * @param changeType {module:model/CreateChangesetRequest.ChangeTypeEnum} Indicates how the given change will be applied to the dataset.
     * @param sourceParams {Object.<String, String>} Source Parameters of a Changeset
     * @param formatParams {Object.<String, String>} Format Parameters of a Changeset
     */
    constructor(changeType, sourceParams, formatParams) { 
        
        CreateChangesetRequest.initialize(this, changeType, sourceParams, formatParams);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, changeType, sourceParams, formatParams) { 
        obj['changeType'] = changeType;
        obj['sourceParams'] = sourceParams;
        obj['formatParams'] = formatParams;
    }

    /**
     * Constructs a <code>CreateChangesetRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateChangesetRequest} obj Optional instance to populate.
     * @return {module:model/CreateChangesetRequest} The populated <code>CreateChangesetRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateChangesetRequest();

            if (data.hasOwnProperty('clientToken')) {
                obj['clientToken'] = ApiClient.convertToType(data['clientToken'], 'String');
            }
            if (data.hasOwnProperty('changeType')) {
                obj['changeType'] = ApiClient.convertToType(data['changeType'], 'String');
            }
            if (data.hasOwnProperty('sourceParams')) {
                obj['sourceParams'] = ApiClient.convertToType(data['sourceParams'], {'String': 'String'});
            }
            if (data.hasOwnProperty('formatParams')) {
                obj['formatParams'] = ApiClient.convertToType(data['formatParams'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateChangesetRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateChangesetRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateChangesetRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['clientToken'] && !(typeof data['clientToken'] === 'string' || data['clientToken'] instanceof String)) {
            throw new Error("Expected the field `clientToken` to be a primitive type in the JSON string but got " + data['clientToken']);
        }
        // ensure the json data is a string
        if (data['changeType'] && !(typeof data['changeType'] === 'string' || data['changeType'] instanceof String)) {
            throw new Error("Expected the field `changeType` to be a primitive type in the JSON string but got " + data['changeType']);
        }

        return true;
    }


}

CreateChangesetRequest.RequiredProperties = ["changeType", "sourceParams", "formatParams"];

/**
 * Idempotence Token for API operations
 * @member {String} clientToken
 */
CreateChangesetRequest.prototype['clientToken'] = undefined;

/**
 * Indicates how the given change will be applied to the dataset.
 * @member {module:model/CreateChangesetRequest.ChangeTypeEnum} changeType
 */
CreateChangesetRequest.prototype['changeType'] = undefined;

/**
 * Source Parameters of a Changeset
 * @member {Object.<String, String>} sourceParams
 */
CreateChangesetRequest.prototype['sourceParams'] = undefined;

/**
 * Format Parameters of a Changeset
 * @member {Object.<String, String>} formatParams
 */
CreateChangesetRequest.prototype['formatParams'] = undefined;





/**
 * Allowed values for the <code>changeType</code> property.
 * @enum {String}
 * @readonly
 */
CreateChangesetRequest['ChangeTypeEnum'] = {

    /**
     * value: "REPLACE"
     * @const
     */
    "REPLACE": "REPLACE",

    /**
     * value: "APPEND"
     * @const
     */
    "APPEND": "APPEND",

    /**
     * value: "MODIFY"
     * @const
     */
    "MODIFY": "MODIFY"
};



export default CreateChangesetRequest;

