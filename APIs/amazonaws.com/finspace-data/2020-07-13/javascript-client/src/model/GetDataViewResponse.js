/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataViewStatus from './DataViewStatus';
import GetDataViewResponseDestinationTypeParams from './GetDataViewResponseDestinationTypeParams';
import GetDataViewResponseErrorInfo from './GetDataViewResponseErrorInfo';

/**
 * The GetDataViewResponse model module.
 * @module model/GetDataViewResponse
 * @version 2020-07-13
 */
class GetDataViewResponse {
    /**
     * Constructs a new <code>GetDataViewResponse</code>.
     * Response from retrieving a dataview, which includes details on the target database and table name
     * @alias module:model/GetDataViewResponse
     */
    constructor() { 
        
        GetDataViewResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetDataViewResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetDataViewResponse} obj Optional instance to populate.
     * @return {module:model/GetDataViewResponse} The populated <code>GetDataViewResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetDataViewResponse();

            if (data.hasOwnProperty('autoUpdate')) {
                obj['autoUpdate'] = ApiClient.convertToType(data['autoUpdate'], 'Boolean');
            }
            if (data.hasOwnProperty('partitionColumns')) {
                obj['partitionColumns'] = ApiClient.convertToType(data['partitionColumns'], Array);
            }
            if (data.hasOwnProperty('datasetId')) {
                obj['datasetId'] = ApiClient.convertToType(data['datasetId'], 'String');
            }
            if (data.hasOwnProperty('asOfTimestamp')) {
                obj['asOfTimestamp'] = ApiClient.convertToType(data['asOfTimestamp'], 'Number');
            }
            if (data.hasOwnProperty('errorInfo')) {
                obj['errorInfo'] = GetDataViewResponseErrorInfo.constructFromObject(data['errorInfo']);
            }
            if (data.hasOwnProperty('lastModifiedTime')) {
                obj['lastModifiedTime'] = ApiClient.convertToType(data['lastModifiedTime'], 'Number');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'Number');
            }
            if (data.hasOwnProperty('sortColumns')) {
                obj['sortColumns'] = ApiClient.convertToType(data['sortColumns'], Array);
            }
            if (data.hasOwnProperty('dataViewId')) {
                obj['dataViewId'] = ApiClient.convertToType(data['dataViewId'], 'String');
            }
            if (data.hasOwnProperty('dataViewArn')) {
                obj['dataViewArn'] = ApiClient.convertToType(data['dataViewArn'], 'String');
            }
            if (data.hasOwnProperty('destinationTypeParams')) {
                obj['destinationTypeParams'] = GetDataViewResponseDestinationTypeParams.constructFromObject(data['destinationTypeParams']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], DataViewStatus);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetDataViewResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetDataViewResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `autoUpdate`
        if (data['autoUpdate']) { // data not null
          Boolean.validateJSON(data['autoUpdate']);
        }
        // validate the optional field `partitionColumns`
        if (data['partitionColumns']) { // data not null
          Array.validateJSON(data['partitionColumns']);
        }
        // validate the optional field `datasetId`
        if (data['datasetId']) { // data not null
          String.validateJSON(data['datasetId']);
        }
        // validate the optional field `asOfTimestamp`
        if (data['asOfTimestamp']) { // data not null
          Number.validateJSON(data['asOfTimestamp']);
        }
        // validate the optional field `errorInfo`
        if (data['errorInfo']) { // data not null
          GetDataViewResponseErrorInfo.validateJSON(data['errorInfo']);
        }
        // validate the optional field `lastModifiedTime`
        if (data['lastModifiedTime']) { // data not null
          Number.validateJSON(data['lastModifiedTime']);
        }
        // validate the optional field `createTime`
        if (data['createTime']) { // data not null
          Number.validateJSON(data['createTime']);
        }
        // validate the optional field `sortColumns`
        if (data['sortColumns']) { // data not null
          Array.validateJSON(data['sortColumns']);
        }
        // validate the optional field `dataViewId`
        if (data['dataViewId']) { // data not null
          String.validateJSON(data['dataViewId']);
        }
        // validate the optional field `dataViewArn`
        if (data['dataViewArn']) { // data not null
          String.validateJSON(data['dataViewArn']);
        }
        // validate the optional field `destinationTypeParams`
        if (data['destinationTypeParams']) { // data not null
          GetDataViewResponseDestinationTypeParams.validateJSON(data['destinationTypeParams']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          DataViewStatus.validateJSON(data['status']);
        }

        return true;
    }


}



/**
 * @member {Boolean} autoUpdate
 */
GetDataViewResponse.prototype['autoUpdate'] = undefined;

/**
 * @member {Array} partitionColumns
 */
GetDataViewResponse.prototype['partitionColumns'] = undefined;

/**
 * @member {String} datasetId
 */
GetDataViewResponse.prototype['datasetId'] = undefined;

/**
 * @member {Number} asOfTimestamp
 */
GetDataViewResponse.prototype['asOfTimestamp'] = undefined;

/**
 * @member {module:model/GetDataViewResponseErrorInfo} errorInfo
 */
GetDataViewResponse.prototype['errorInfo'] = undefined;

/**
 * @member {Number} lastModifiedTime
 */
GetDataViewResponse.prototype['lastModifiedTime'] = undefined;

/**
 * @member {Number} createTime
 */
GetDataViewResponse.prototype['createTime'] = undefined;

/**
 * @member {Array} sortColumns
 */
GetDataViewResponse.prototype['sortColumns'] = undefined;

/**
 * @member {String} dataViewId
 */
GetDataViewResponse.prototype['dataViewId'] = undefined;

/**
 * @member {String} dataViewArn
 */
GetDataViewResponse.prototype['dataViewArn'] = undefined;

/**
 * @member {module:model/GetDataViewResponseDestinationTypeParams} destinationTypeParams
 */
GetDataViewResponse.prototype['destinationTypeParams'] = undefined;

/**
 * @member {module:model/DataViewStatus} status
 */
GetDataViewResponse.prototype['status'] = undefined;






export default GetDataViewResponse;

