/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExportFileFormat from './ExportFileFormat';

/**
 * The DataViewDestinationTypeParams model module.
 * @module model/DataViewDestinationTypeParams
 * @version 2020-07-13
 */
class DataViewDestinationTypeParams {
    /**
     * Constructs a new <code>DataViewDestinationTypeParams</code>.
     * Structure for the Dataview destination type parameters.
     * @alias module:model/DataViewDestinationTypeParams
     * @param destinationType {String} 
     */
    constructor(destinationType) { 
        
        DataViewDestinationTypeParams.initialize(this, destinationType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, destinationType) { 
        obj['destinationType'] = destinationType;
    }

    /**
     * Constructs a <code>DataViewDestinationTypeParams</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataViewDestinationTypeParams} obj Optional instance to populate.
     * @return {module:model/DataViewDestinationTypeParams} The populated <code>DataViewDestinationTypeParams</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataViewDestinationTypeParams();

            if (data.hasOwnProperty('destinationType')) {
                obj['destinationType'] = ApiClient.convertToType(data['destinationType'], 'String');
            }
            if (data.hasOwnProperty('s3DestinationExportFileFormat')) {
                obj['s3DestinationExportFileFormat'] = ApiClient.convertToType(data['s3DestinationExportFileFormat'], ExportFileFormat);
            }
            if (data.hasOwnProperty('s3DestinationExportFileFormatOptions')) {
                obj['s3DestinationExportFileFormatOptions'] = ApiClient.convertToType(data['s3DestinationExportFileFormatOptions'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataViewDestinationTypeParams</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataViewDestinationTypeParams</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DataViewDestinationTypeParams.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `destinationType`
        if (data['destinationType']) { // data not null
          String.validateJSON(data['destinationType']);
        }
        // validate the optional field `s3DestinationExportFileFormat`
        if (data['s3DestinationExportFileFormat']) { // data not null
          ExportFileFormat.validateJSON(data['s3DestinationExportFileFormat']);
        }
        // validate the optional field `s3DestinationExportFileFormatOptions`
        if (data['s3DestinationExportFileFormatOptions']) { // data not null
          Object.validateJSON(data['s3DestinationExportFileFormatOptions']);
        }

        return true;
    }


}

DataViewDestinationTypeParams.RequiredProperties = ["destinationType"];

/**
 * @member {String} destinationType
 */
DataViewDestinationTypeParams.prototype['destinationType'] = undefined;

/**
 * @member {module:model/ExportFileFormat} s3DestinationExportFileFormat
 */
DataViewDestinationTypeParams.prototype['s3DestinationExportFileFormat'] = undefined;

/**
 * @member {Object} s3DestinationExportFileFormatOptions
 */
DataViewDestinationTypeParams.prototype['s3DestinationExportFileFormatOptions'] = undefined;






export default DataViewDestinationTypeParams;

