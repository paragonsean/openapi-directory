/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiAccess from './ApiAccess';
import PermissionGroupMembershipStatus from './PermissionGroupMembershipStatus';
import UserStatus from './UserStatus';
import UserType from './UserType';

/**
 * The UserByPermissionGroup model module.
 * @module model/UserByPermissionGroup
 * @version 2020-07-13
 */
class UserByPermissionGroup {
    /**
     * Constructs a new <code>UserByPermissionGroup</code>.
     * The structure of a user account associated with a permission group.
     * @alias module:model/UserByPermissionGroup
     */
    constructor() { 
        
        UserByPermissionGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserByPermissionGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserByPermissionGroup} obj Optional instance to populate.
     * @return {module:model/UserByPermissionGroup} The populated <code>UserByPermissionGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserByPermissionGroup();

            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], UserStatus);
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('emailAddress')) {
                obj['emailAddress'] = ApiClient.convertToType(data['emailAddress'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], UserType);
            }
            if (data.hasOwnProperty('apiAccess')) {
                obj['apiAccess'] = ApiClient.convertToType(data['apiAccess'], ApiAccess);
            }
            if (data.hasOwnProperty('apiAccessPrincipalArn')) {
                obj['apiAccessPrincipalArn'] = ApiClient.convertToType(data['apiAccessPrincipalArn'], 'String');
            }
            if (data.hasOwnProperty('membershipStatus')) {
                obj['membershipStatus'] = ApiClient.convertToType(data['membershipStatus'], PermissionGroupMembershipStatus);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserByPermissionGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserByPermissionGroup</code>.
     */
    static validateJSON(data) {
        // validate the optional field `userId`
        if (data['userId']) { // data not null
          String.validateJSON(data['userId']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          UserStatus.validateJSON(data['status']);
        }
        // validate the optional field `firstName`
        if (data['firstName']) { // data not null
          String.validateJSON(data['firstName']);
        }
        // validate the optional field `lastName`
        if (data['lastName']) { // data not null
          String.validateJSON(data['lastName']);
        }
        // validate the optional field `emailAddress`
        if (data['emailAddress']) { // data not null
          String.validateJSON(data['emailAddress']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          UserType.validateJSON(data['type']);
        }
        // validate the optional field `apiAccess`
        if (data['apiAccess']) { // data not null
          ApiAccess.validateJSON(data['apiAccess']);
        }
        // validate the optional field `apiAccessPrincipalArn`
        if (data['apiAccessPrincipalArn']) { // data not null
          String.validateJSON(data['apiAccessPrincipalArn']);
        }
        // validate the optional field `membershipStatus`
        if (data['membershipStatus']) { // data not null
          PermissionGroupMembershipStatus.validateJSON(data['membershipStatus']);
        }

        return true;
    }


}



/**
 * @member {String} userId
 */
UserByPermissionGroup.prototype['userId'] = undefined;

/**
 * @member {module:model/UserStatus} status
 */
UserByPermissionGroup.prototype['status'] = undefined;

/**
 * @member {String} firstName
 */
UserByPermissionGroup.prototype['firstName'] = undefined;

/**
 * @member {String} lastName
 */
UserByPermissionGroup.prototype['lastName'] = undefined;

/**
 * @member {String} emailAddress
 */
UserByPermissionGroup.prototype['emailAddress'] = undefined;

/**
 * @member {module:model/UserType} type
 */
UserByPermissionGroup.prototype['type'] = undefined;

/**
 * @member {module:model/ApiAccess} apiAccess
 */
UserByPermissionGroup.prototype['apiAccess'] = undefined;

/**
 * @member {String} apiAccessPrincipalArn
 */
UserByPermissionGroup.prototype['apiAccessPrincipalArn'] = undefined;

/**
 * @member {module:model/PermissionGroupMembershipStatus} membershipStatus
 */
UserByPermissionGroup.prototype['membershipStatus'] = undefined;






export default UserByPermissionGroup;

