/**
 * FinSpace Public API
 *  The FinSpace APIs let you take actions inside the FinSpace.
 *
 * The version of the OpenAPI document: 2020-07-13
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SchemaDefinition from './SchemaDefinition';

/**
 * The CreateDatasetRequestSchemaDefinitionTabularSchemaConfig model module.
 * @module model/CreateDatasetRequestSchemaDefinitionTabularSchemaConfig
 * @version 2020-07-13
 */
class CreateDatasetRequestSchemaDefinitionTabularSchemaConfig {
    /**
     * Constructs a new <code>CreateDatasetRequestSchemaDefinitionTabularSchemaConfig</code>.
     * @alias module:model/CreateDatasetRequestSchemaDefinitionTabularSchemaConfig
     * @implements module:model/SchemaDefinition
     */
    constructor() { 
        SchemaDefinition.initialize(this);
        CreateDatasetRequestSchemaDefinitionTabularSchemaConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateDatasetRequestSchemaDefinitionTabularSchemaConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDatasetRequestSchemaDefinitionTabularSchemaConfig} obj Optional instance to populate.
     * @return {module:model/CreateDatasetRequestSchemaDefinitionTabularSchemaConfig} The populated <code>CreateDatasetRequestSchemaDefinitionTabularSchemaConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDatasetRequestSchemaDefinitionTabularSchemaConfig();
            SchemaDefinition.constructFromObject(data, obj);

            if (data.hasOwnProperty('columns')) {
                obj['columns'] = ApiClient.convertToType(data['columns'], Array);
            }
            if (data.hasOwnProperty('primaryKeyColumns')) {
                obj['primaryKeyColumns'] = ApiClient.convertToType(data['primaryKeyColumns'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDatasetRequestSchemaDefinitionTabularSchemaConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDatasetRequestSchemaDefinitionTabularSchemaConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `columns`
        if (data['columns']) { // data not null
          Array.validateJSON(data['columns']);
        }
        // validate the optional field `primaryKeyColumns`
        if (data['primaryKeyColumns']) { // data not null
          Array.validateJSON(data['primaryKeyColumns']);
        }

        return true;
    }


}



/**
 * @member {Array} columns
 */
CreateDatasetRequestSchemaDefinitionTabularSchemaConfig.prototype['columns'] = undefined;

/**
 * @member {Array} primaryKeyColumns
 */
CreateDatasetRequestSchemaDefinitionTabularSchemaConfig.prototype['primaryKeyColumns'] = undefined;


// Implement SchemaDefinition interface:
/**
 * @member {Array} columns
 */
SchemaDefinition.prototype['columns'] = undefined;
/**
 * @member {Array} primaryKeyColumns
 */
SchemaDefinition.prototype['primaryKeyColumns'] = undefined;




export default CreateDatasetRequestSchemaDefinitionTabularSchemaConfig;

