/*
 * AWS AppSync
 * AppSync provides API actions for creating and interacting with data sources using GraphQL from your application.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ApiCacheType
 */
@JsonAdapter(ApiCacheType.Adapter.class)
public enum ApiCacheType {
  
  T2_SMALL("T2_SMALL"),
  
  T2_MEDIUM("T2_MEDIUM"),
  
  R4_LARGE("R4_LARGE"),
  
  R4_XLARGE("R4_XLARGE"),
  
  R4_2_XLARGE("R4_2XLARGE"),
  
  R4_4_XLARGE("R4_4XLARGE"),
  
  R4_8_XLARGE("R4_8XLARGE"),
  
  SMALL("SMALL"),
  
  MEDIUM("MEDIUM"),
  
  LARGE("LARGE"),
  
  XLARGE("XLARGE"),
  
  LARGE_2_X("LARGE_2X"),
  
  LARGE_4_X("LARGE_4X"),
  
  LARGE_8_X("LARGE_8X"),
  
  LARGE_12_X("LARGE_12X");

  private String value;

  ApiCacheType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ApiCacheType fromValue(String value) {
    for (ApiCacheType b : ApiCacheType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ApiCacheType> {
    @Override
    public void write(final JsonWriter jsonWriter, final ApiCacheType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ApiCacheType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ApiCacheType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ApiCacheType.fromValue(value);
  }
}

