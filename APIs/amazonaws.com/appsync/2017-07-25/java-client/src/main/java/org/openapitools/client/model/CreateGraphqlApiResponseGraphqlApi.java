/*
 * AWS AppSync
 * AppSync provides API actions for creating and interacting with data sources using GraphQL from your application.
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AdditionalAuthenticationProviderLambdaAuthorizerConfig;
import org.openapitools.client.model.AuthenticationType;
import org.openapitools.client.model.CreateGraphqlApiRequestLogConfig;
import org.openapitools.client.model.CreateGraphqlApiRequestUserPoolConfig;
import org.openapitools.client.model.GraphQLApiType;
import org.openapitools.client.model.GraphQLApiVisibility;
import org.openapitools.client.model.GraphqlApiOpenIDConnectConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateGraphqlApiResponseGraphqlApi
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:14:29.005234-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateGraphqlApiResponseGraphqlApi {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_API_ID = "apiId";
  @SerializedName(SERIALIZED_NAME_API_ID)
  private String apiId;

  public static final String SERIALIZED_NAME_AUTHENTICATION_TYPE = "authenticationType";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_TYPE)
  private AuthenticationType authenticationType;

  public static final String SERIALIZED_NAME_LOG_CONFIG = "logConfig";
  @SerializedName(SERIALIZED_NAME_LOG_CONFIG)
  private CreateGraphqlApiRequestLogConfig logConfig;

  public static final String SERIALIZED_NAME_USER_POOL_CONFIG = "userPoolConfig";
  @SerializedName(SERIALIZED_NAME_USER_POOL_CONFIG)
  private CreateGraphqlApiRequestUserPoolConfig userPoolConfig;

  public static final String SERIALIZED_NAME_OPEN_I_D_CONNECT_CONFIG = "openIDConnectConfig";
  @SerializedName(SERIALIZED_NAME_OPEN_I_D_CONNECT_CONFIG)
  private GraphqlApiOpenIDConnectConfig openIDConnectConfig;

  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_URIS = "uris";
  @SerializedName(SERIALIZED_NAME_URIS)
  private Map uris;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_ADDITIONAL_AUTHENTICATION_PROVIDERS = "additionalAuthenticationProviders";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_AUTHENTICATION_PROVIDERS)
  private List additionalAuthenticationProviders;

  public static final String SERIALIZED_NAME_XRAY_ENABLED = "xrayEnabled";
  @SerializedName(SERIALIZED_NAME_XRAY_ENABLED)
  private Boolean xrayEnabled;

  public static final String SERIALIZED_NAME_WAF_WEB_ACL_ARN = "wafWebAclArn";
  @SerializedName(SERIALIZED_NAME_WAF_WEB_ACL_ARN)
  private String wafWebAclArn;

  public static final String SERIALIZED_NAME_LAMBDA_AUTHORIZER_CONFIG = "lambdaAuthorizerConfig";
  @SerializedName(SERIALIZED_NAME_LAMBDA_AUTHORIZER_CONFIG)
  private AdditionalAuthenticationProviderLambdaAuthorizerConfig lambdaAuthorizerConfig;

  public static final String SERIALIZED_NAME_DNS = "dns";
  @SerializedName(SERIALIZED_NAME_DNS)
  private Map dns;

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private GraphQLApiVisibility visibility;

  public static final String SERIALIZED_NAME_API_TYPE = "apiType";
  @SerializedName(SERIALIZED_NAME_API_TYPE)
  private GraphQLApiType apiType;

  public static final String SERIALIZED_NAME_MERGED_API_EXECUTION_ROLE_ARN = "mergedApiExecutionRoleArn";
  @SerializedName(SERIALIZED_NAME_MERGED_API_EXECUTION_ROLE_ARN)
  private String mergedApiExecutionRoleArn;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private String owner;

  public static final String SERIALIZED_NAME_OWNER_CONTACT = "ownerContact";
  @SerializedName(SERIALIZED_NAME_OWNER_CONTACT)
  private String ownerContact;

  public CreateGraphqlApiResponseGraphqlApi() {
  }

  public CreateGraphqlApiResponseGraphqlApi name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateGraphqlApiResponseGraphqlApi apiId(String apiId) {
    this.apiId = apiId;
    return this;
  }

  /**
   * Get apiId
   * @return apiId
   */
  @javax.annotation.Nullable
  public String getApiId() {
    return apiId;
  }

  public void setApiId(String apiId) {
    this.apiId = apiId;
  }


  public CreateGraphqlApiResponseGraphqlApi authenticationType(AuthenticationType authenticationType) {
    this.authenticationType = authenticationType;
    return this;
  }

  /**
   * Get authenticationType
   * @return authenticationType
   */
  @javax.annotation.Nullable
  public AuthenticationType getAuthenticationType() {
    return authenticationType;
  }

  public void setAuthenticationType(AuthenticationType authenticationType) {
    this.authenticationType = authenticationType;
  }


  public CreateGraphqlApiResponseGraphqlApi logConfig(CreateGraphqlApiRequestLogConfig logConfig) {
    this.logConfig = logConfig;
    return this;
  }

  /**
   * Get logConfig
   * @return logConfig
   */
  @javax.annotation.Nullable
  public CreateGraphqlApiRequestLogConfig getLogConfig() {
    return logConfig;
  }

  public void setLogConfig(CreateGraphqlApiRequestLogConfig logConfig) {
    this.logConfig = logConfig;
  }


  public CreateGraphqlApiResponseGraphqlApi userPoolConfig(CreateGraphqlApiRequestUserPoolConfig userPoolConfig) {
    this.userPoolConfig = userPoolConfig;
    return this;
  }

  /**
   * Get userPoolConfig
   * @return userPoolConfig
   */
  @javax.annotation.Nullable
  public CreateGraphqlApiRequestUserPoolConfig getUserPoolConfig() {
    return userPoolConfig;
  }

  public void setUserPoolConfig(CreateGraphqlApiRequestUserPoolConfig userPoolConfig) {
    this.userPoolConfig = userPoolConfig;
  }


  public CreateGraphqlApiResponseGraphqlApi openIDConnectConfig(GraphqlApiOpenIDConnectConfig openIDConnectConfig) {
    this.openIDConnectConfig = openIDConnectConfig;
    return this;
  }

  /**
   * Get openIDConnectConfig
   * @return openIDConnectConfig
   */
  @javax.annotation.Nullable
  public GraphqlApiOpenIDConnectConfig getOpenIDConnectConfig() {
    return openIDConnectConfig;
  }

  public void setOpenIDConnectConfig(GraphqlApiOpenIDConnectConfig openIDConnectConfig) {
    this.openIDConnectConfig = openIDConnectConfig;
  }


  public CreateGraphqlApiResponseGraphqlApi arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public CreateGraphqlApiResponseGraphqlApi uris(Map uris) {
    this.uris = uris;
    return this;
  }

  /**
   * Get uris
   * @return uris
   */
  @javax.annotation.Nullable
  public Map getUris() {
    return uris;
  }

  public void setUris(Map uris) {
    this.uris = uris;
  }


  public CreateGraphqlApiResponseGraphqlApi tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public CreateGraphqlApiResponseGraphqlApi additionalAuthenticationProviders(List additionalAuthenticationProviders) {
    this.additionalAuthenticationProviders = additionalAuthenticationProviders;
    return this;
  }

  /**
   * Get additionalAuthenticationProviders
   * @return additionalAuthenticationProviders
   */
  @javax.annotation.Nullable
  public List getAdditionalAuthenticationProviders() {
    return additionalAuthenticationProviders;
  }

  public void setAdditionalAuthenticationProviders(List additionalAuthenticationProviders) {
    this.additionalAuthenticationProviders = additionalAuthenticationProviders;
  }


  public CreateGraphqlApiResponseGraphqlApi xrayEnabled(Boolean xrayEnabled) {
    this.xrayEnabled = xrayEnabled;
    return this;
  }

  /**
   * Get xrayEnabled
   * @return xrayEnabled
   */
  @javax.annotation.Nullable
  public Boolean getXrayEnabled() {
    return xrayEnabled;
  }

  public void setXrayEnabled(Boolean xrayEnabled) {
    this.xrayEnabled = xrayEnabled;
  }


  public CreateGraphqlApiResponseGraphqlApi wafWebAclArn(String wafWebAclArn) {
    this.wafWebAclArn = wafWebAclArn;
    return this;
  }

  /**
   * Get wafWebAclArn
   * @return wafWebAclArn
   */
  @javax.annotation.Nullable
  public String getWafWebAclArn() {
    return wafWebAclArn;
  }

  public void setWafWebAclArn(String wafWebAclArn) {
    this.wafWebAclArn = wafWebAclArn;
  }


  public CreateGraphqlApiResponseGraphqlApi lambdaAuthorizerConfig(AdditionalAuthenticationProviderLambdaAuthorizerConfig lambdaAuthorizerConfig) {
    this.lambdaAuthorizerConfig = lambdaAuthorizerConfig;
    return this;
  }

  /**
   * Get lambdaAuthorizerConfig
   * @return lambdaAuthorizerConfig
   */
  @javax.annotation.Nullable
  public AdditionalAuthenticationProviderLambdaAuthorizerConfig getLambdaAuthorizerConfig() {
    return lambdaAuthorizerConfig;
  }

  public void setLambdaAuthorizerConfig(AdditionalAuthenticationProviderLambdaAuthorizerConfig lambdaAuthorizerConfig) {
    this.lambdaAuthorizerConfig = lambdaAuthorizerConfig;
  }


  public CreateGraphqlApiResponseGraphqlApi dns(Map dns) {
    this.dns = dns;
    return this;
  }

  /**
   * Get dns
   * @return dns
   */
  @javax.annotation.Nullable
  public Map getDns() {
    return dns;
  }

  public void setDns(Map dns) {
    this.dns = dns;
  }


  public CreateGraphqlApiResponseGraphqlApi visibility(GraphQLApiVisibility visibility) {
    this.visibility = visibility;
    return this;
  }

  /**
   * Get visibility
   * @return visibility
   */
  @javax.annotation.Nullable
  public GraphQLApiVisibility getVisibility() {
    return visibility;
  }

  public void setVisibility(GraphQLApiVisibility visibility) {
    this.visibility = visibility;
  }


  public CreateGraphqlApiResponseGraphqlApi apiType(GraphQLApiType apiType) {
    this.apiType = apiType;
    return this;
  }

  /**
   * Get apiType
   * @return apiType
   */
  @javax.annotation.Nullable
  public GraphQLApiType getApiType() {
    return apiType;
  }

  public void setApiType(GraphQLApiType apiType) {
    this.apiType = apiType;
  }


  public CreateGraphqlApiResponseGraphqlApi mergedApiExecutionRoleArn(String mergedApiExecutionRoleArn) {
    this.mergedApiExecutionRoleArn = mergedApiExecutionRoleArn;
    return this;
  }

  /**
   * Get mergedApiExecutionRoleArn
   * @return mergedApiExecutionRoleArn
   */
  @javax.annotation.Nullable
  public String getMergedApiExecutionRoleArn() {
    return mergedApiExecutionRoleArn;
  }

  public void setMergedApiExecutionRoleArn(String mergedApiExecutionRoleArn) {
    this.mergedApiExecutionRoleArn = mergedApiExecutionRoleArn;
  }


  public CreateGraphqlApiResponseGraphqlApi owner(String owner) {
    this.owner = owner;
    return this;
  }

  /**
   * Get owner
   * @return owner
   */
  @javax.annotation.Nullable
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }


  public CreateGraphqlApiResponseGraphqlApi ownerContact(String ownerContact) {
    this.ownerContact = ownerContact;
    return this;
  }

  /**
   * Get ownerContact
   * @return ownerContact
   */
  @javax.annotation.Nullable
  public String getOwnerContact() {
    return ownerContact;
  }

  public void setOwnerContact(String ownerContact) {
    this.ownerContact = ownerContact;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateGraphqlApiResponseGraphqlApi createGraphqlApiResponseGraphqlApi = (CreateGraphqlApiResponseGraphqlApi) o;
    return Objects.equals(this.name, createGraphqlApiResponseGraphqlApi.name) &&
        Objects.equals(this.apiId, createGraphqlApiResponseGraphqlApi.apiId) &&
        Objects.equals(this.authenticationType, createGraphqlApiResponseGraphqlApi.authenticationType) &&
        Objects.equals(this.logConfig, createGraphqlApiResponseGraphqlApi.logConfig) &&
        Objects.equals(this.userPoolConfig, createGraphqlApiResponseGraphqlApi.userPoolConfig) &&
        Objects.equals(this.openIDConnectConfig, createGraphqlApiResponseGraphqlApi.openIDConnectConfig) &&
        Objects.equals(this.arn, createGraphqlApiResponseGraphqlApi.arn) &&
        Objects.equals(this.uris, createGraphqlApiResponseGraphqlApi.uris) &&
        Objects.equals(this.tags, createGraphqlApiResponseGraphqlApi.tags) &&
        Objects.equals(this.additionalAuthenticationProviders, createGraphqlApiResponseGraphqlApi.additionalAuthenticationProviders) &&
        Objects.equals(this.xrayEnabled, createGraphqlApiResponseGraphqlApi.xrayEnabled) &&
        Objects.equals(this.wafWebAclArn, createGraphqlApiResponseGraphqlApi.wafWebAclArn) &&
        Objects.equals(this.lambdaAuthorizerConfig, createGraphqlApiResponseGraphqlApi.lambdaAuthorizerConfig) &&
        Objects.equals(this.dns, createGraphqlApiResponseGraphqlApi.dns) &&
        Objects.equals(this.visibility, createGraphqlApiResponseGraphqlApi.visibility) &&
        Objects.equals(this.apiType, createGraphqlApiResponseGraphqlApi.apiType) &&
        Objects.equals(this.mergedApiExecutionRoleArn, createGraphqlApiResponseGraphqlApi.mergedApiExecutionRoleArn) &&
        Objects.equals(this.owner, createGraphqlApiResponseGraphqlApi.owner) &&
        Objects.equals(this.ownerContact, createGraphqlApiResponseGraphqlApi.ownerContact);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, apiId, authenticationType, logConfig, userPoolConfig, openIDConnectConfig, arn, uris, tags, additionalAuthenticationProviders, xrayEnabled, wafWebAclArn, lambdaAuthorizerConfig, dns, visibility, apiType, mergedApiExecutionRoleArn, owner, ownerContact);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateGraphqlApiResponseGraphqlApi {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    apiId: ").append(toIndentedString(apiId)).append("\n");
    sb.append("    authenticationType: ").append(toIndentedString(authenticationType)).append("\n");
    sb.append("    logConfig: ").append(toIndentedString(logConfig)).append("\n");
    sb.append("    userPoolConfig: ").append(toIndentedString(userPoolConfig)).append("\n");
    sb.append("    openIDConnectConfig: ").append(toIndentedString(openIDConnectConfig)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    uris: ").append(toIndentedString(uris)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    additionalAuthenticationProviders: ").append(toIndentedString(additionalAuthenticationProviders)).append("\n");
    sb.append("    xrayEnabled: ").append(toIndentedString(xrayEnabled)).append("\n");
    sb.append("    wafWebAclArn: ").append(toIndentedString(wafWebAclArn)).append("\n");
    sb.append("    lambdaAuthorizerConfig: ").append(toIndentedString(lambdaAuthorizerConfig)).append("\n");
    sb.append("    dns: ").append(toIndentedString(dns)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    apiType: ").append(toIndentedString(apiType)).append("\n");
    sb.append("    mergedApiExecutionRoleArn: ").append(toIndentedString(mergedApiExecutionRoleArn)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    ownerContact: ").append(toIndentedString(ownerContact)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("apiId");
    openapiFields.add("authenticationType");
    openapiFields.add("logConfig");
    openapiFields.add("userPoolConfig");
    openapiFields.add("openIDConnectConfig");
    openapiFields.add("arn");
    openapiFields.add("uris");
    openapiFields.add("tags");
    openapiFields.add("additionalAuthenticationProviders");
    openapiFields.add("xrayEnabled");
    openapiFields.add("wafWebAclArn");
    openapiFields.add("lambdaAuthorizerConfig");
    openapiFields.add("dns");
    openapiFields.add("visibility");
    openapiFields.add("apiType");
    openapiFields.add("mergedApiExecutionRoleArn");
    openapiFields.add("owner");
    openapiFields.add("ownerContact");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateGraphqlApiResponseGraphqlApi
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateGraphqlApiResponseGraphqlApi.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateGraphqlApiResponseGraphqlApi is not found in the empty JSON string", CreateGraphqlApiResponseGraphqlApi.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateGraphqlApiResponseGraphqlApi.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateGraphqlApiResponseGraphqlApi` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `apiId`
      if (jsonObj.get("apiId") != null && !jsonObj.get("apiId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("apiId"));
      }
      // validate the optional field `authenticationType`
      if (jsonObj.get("authenticationType") != null && !jsonObj.get("authenticationType").isJsonNull()) {
        AuthenticationType.validateJsonElement(jsonObj.get("authenticationType"));
      }
      // validate the optional field `logConfig`
      if (jsonObj.get("logConfig") != null && !jsonObj.get("logConfig").isJsonNull()) {
        CreateGraphqlApiRequestLogConfig.validateJsonElement(jsonObj.get("logConfig"));
      }
      // validate the optional field `userPoolConfig`
      if (jsonObj.get("userPoolConfig") != null && !jsonObj.get("userPoolConfig").isJsonNull()) {
        CreateGraphqlApiRequestUserPoolConfig.validateJsonElement(jsonObj.get("userPoolConfig"));
      }
      // validate the optional field `openIDConnectConfig`
      if (jsonObj.get("openIDConnectConfig") != null && !jsonObj.get("openIDConnectConfig").isJsonNull()) {
        GraphqlApiOpenIDConnectConfig.validateJsonElement(jsonObj.get("openIDConnectConfig"));
      }
      // validate the optional field `arn`
      if (jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("arn"));
      }
      // validate the optional field `uris`
      if (jsonObj.get("uris") != null && !jsonObj.get("uris").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("uris"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `additionalAuthenticationProviders`
      if (jsonObj.get("additionalAuthenticationProviders") != null && !jsonObj.get("additionalAuthenticationProviders").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("additionalAuthenticationProviders"));
      }
      // validate the optional field `xrayEnabled`
      if (jsonObj.get("xrayEnabled") != null && !jsonObj.get("xrayEnabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("xrayEnabled"));
      }
      // validate the optional field `wafWebAclArn`
      if (jsonObj.get("wafWebAclArn") != null && !jsonObj.get("wafWebAclArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("wafWebAclArn"));
      }
      // validate the optional field `lambdaAuthorizerConfig`
      if (jsonObj.get("lambdaAuthorizerConfig") != null && !jsonObj.get("lambdaAuthorizerConfig").isJsonNull()) {
        AdditionalAuthenticationProviderLambdaAuthorizerConfig.validateJsonElement(jsonObj.get("lambdaAuthorizerConfig"));
      }
      // validate the optional field `dns`
      if (jsonObj.get("dns") != null && !jsonObj.get("dns").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("dns"));
      }
      // validate the optional field `visibility`
      if (jsonObj.get("visibility") != null && !jsonObj.get("visibility").isJsonNull()) {
        GraphQLApiVisibility.validateJsonElement(jsonObj.get("visibility"));
      }
      // validate the optional field `apiType`
      if (jsonObj.get("apiType") != null && !jsonObj.get("apiType").isJsonNull()) {
        GraphQLApiType.validateJsonElement(jsonObj.get("apiType"));
      }
      // validate the optional field `mergedApiExecutionRoleArn`
      if (jsonObj.get("mergedApiExecutionRoleArn") != null && !jsonObj.get("mergedApiExecutionRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("mergedApiExecutionRoleArn"));
      }
      // validate the optional field `owner`
      if (jsonObj.get("owner") != null && !jsonObj.get("owner").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("owner"));
      }
      // validate the optional field `ownerContact`
      if (jsonObj.get("ownerContact") != null && !jsonObj.get("ownerContact").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ownerContact"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateGraphqlApiResponseGraphqlApi.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateGraphqlApiResponseGraphqlApi' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateGraphqlApiResponseGraphqlApi> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateGraphqlApiResponseGraphqlApi.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateGraphqlApiResponseGraphqlApi>() {
           @Override
           public void write(JsonWriter out, CreateGraphqlApiResponseGraphqlApi value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateGraphqlApiResponseGraphqlApi read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateGraphqlApiResponseGraphqlApi given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateGraphqlApiResponseGraphqlApi
   * @throws IOException if the JSON string is invalid with respect to CreateGraphqlApiResponseGraphqlApi
   */
  public static CreateGraphqlApiResponseGraphqlApi fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateGraphqlApiResponseGraphqlApi.class);
  }

  /**
   * Convert an instance of CreateGraphqlApiResponseGraphqlApi to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

