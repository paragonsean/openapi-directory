# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_control_operation_output_control_operation import GetControlOperationOutputControlOperation
from openapi_server import util


class GetControlOperationOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, control_operation: GetControlOperationOutputControlOperation=None):
        """GetControlOperationOutput - a model defined in OpenAPI

        :param control_operation: The control_operation of this GetControlOperationOutput.
        """
        self.openapi_types = {
            'control_operation': GetControlOperationOutputControlOperation
        }

        self.attribute_map = {
            'control_operation': 'controlOperation'
        }

        self._control_operation = control_operation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetControlOperationOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetControlOperationOutput of this GetControlOperationOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def control_operation(self):
        """Gets the control_operation of this GetControlOperationOutput.


        :return: The control_operation of this GetControlOperationOutput.
        :rtype: GetControlOperationOutputControlOperation
        """
        return self._control_operation

    @control_operation.setter
    def control_operation(self, control_operation):
        """Sets the control_operation of this GetControlOperationOutput.


        :param control_operation: The control_operation of this GetControlOperationOutput.
        :type control_operation: GetControlOperationOutputControlOperation
        """
        if control_operation is None:
            raise ValueError("Invalid value for `control_operation`, must not be `None`")

        self._control_operation = control_operation
