/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonConnectCustomerProfiles);
  }
}(this, function(expect, AmazonConnectCustomerProfiles) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonConnectCustomerProfiles.GetDomainResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetDomainResponse', function() {
    it('should create an instance of GetDomainResponse', function() {
      // uncomment below and update the code to test GetDomainResponse
      //var instance = new AmazonConnectCustomerProfiles.GetDomainResponse();
      //expect(instance).to.be.a(AmazonConnectCustomerProfiles.GetDomainResponse);
    });

    it('should have the property domainName (base name: "DomainName")', function() {
      // uncomment below and update the code to test the property domainName
      //var instance = new AmazonConnectCustomerProfiles.GetDomainResponse();
      //expect(instance).to.be();
    });

    it('should have the property defaultExpirationDays (base name: "DefaultExpirationDays")', function() {
      // uncomment below and update the code to test the property defaultExpirationDays
      //var instance = new AmazonConnectCustomerProfiles.GetDomainResponse();
      //expect(instance).to.be();
    });

    it('should have the property defaultEncryptionKey (base name: "DefaultEncryptionKey")', function() {
      // uncomment below and update the code to test the property defaultEncryptionKey
      //var instance = new AmazonConnectCustomerProfiles.GetDomainResponse();
      //expect(instance).to.be();
    });

    it('should have the property deadLetterQueueUrl (base name: "DeadLetterQueueUrl")', function() {
      // uncomment below and update the code to test the property deadLetterQueueUrl
      //var instance = new AmazonConnectCustomerProfiles.GetDomainResponse();
      //expect(instance).to.be();
    });

    it('should have the property stats (base name: "Stats")', function() {
      // uncomment below and update the code to test the property stats
      //var instance = new AmazonConnectCustomerProfiles.GetDomainResponse();
      //expect(instance).to.be();
    });

    it('should have the property matching (base name: "Matching")', function() {
      // uncomment below and update the code to test the property matching
      //var instance = new AmazonConnectCustomerProfiles.GetDomainResponse();
      //expect(instance).to.be();
    });

    it('should have the property ruleBasedMatching (base name: "RuleBasedMatching")', function() {
      // uncomment below and update the code to test the property ruleBasedMatching
      //var instance = new AmazonConnectCustomerProfiles.GetDomainResponse();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "CreatedAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new AmazonConnectCustomerProfiles.GetDomainResponse();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdatedAt (base name: "LastUpdatedAt")', function() {
      // uncomment below and update the code to test the property lastUpdatedAt
      //var instance = new AmazonConnectCustomerProfiles.GetDomainResponse();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AmazonConnectCustomerProfiles.GetDomainResponse();
      //expect(instance).to.be();
    });

  });

}));
