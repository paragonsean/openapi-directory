/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';

/**
 * The CreateProfileRequestMailingAddress model module.
 * @module model/CreateProfileRequestMailingAddress
 * @version 2020-08-15
 */
class CreateProfileRequestMailingAddress {
    /**
     * Constructs a new <code>CreateProfileRequestMailingAddress</code>.
     * @alias module:model/CreateProfileRequestMailingAddress
     * @implements module:model/Address
     */
    constructor() { 
        Address.initialize(this);
        CreateProfileRequestMailingAddress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateProfileRequestMailingAddress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateProfileRequestMailingAddress} obj Optional instance to populate.
     * @return {module:model/CreateProfileRequestMailingAddress} The populated <code>CreateProfileRequestMailingAddress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateProfileRequestMailingAddress();
            Address.constructFromObject(data, obj);

            if (data.hasOwnProperty('Address1')) {
                obj['Address1'] = ApiClient.convertToType(data['Address1'], 'String');
            }
            if (data.hasOwnProperty('Address2')) {
                obj['Address2'] = ApiClient.convertToType(data['Address2'], 'String');
            }
            if (data.hasOwnProperty('Address3')) {
                obj['Address3'] = ApiClient.convertToType(data['Address3'], 'String');
            }
            if (data.hasOwnProperty('Address4')) {
                obj['Address4'] = ApiClient.convertToType(data['Address4'], 'String');
            }
            if (data.hasOwnProperty('City')) {
                obj['City'] = ApiClient.convertToType(data['City'], 'String');
            }
            if (data.hasOwnProperty('County')) {
                obj['County'] = ApiClient.convertToType(data['County'], 'String');
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], 'String');
            }
            if (data.hasOwnProperty('Province')) {
                obj['Province'] = ApiClient.convertToType(data['Province'], 'String');
            }
            if (data.hasOwnProperty('Country')) {
                obj['Country'] = ApiClient.convertToType(data['Country'], 'String');
            }
            if (data.hasOwnProperty('PostalCode')) {
                obj['PostalCode'] = ApiClient.convertToType(data['PostalCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateProfileRequestMailingAddress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateProfileRequestMailingAddress</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Address1`
        if (data['Address1']) { // data not null
          String.validateJSON(data['Address1']);
        }
        // validate the optional field `Address2`
        if (data['Address2']) { // data not null
          String.validateJSON(data['Address2']);
        }
        // validate the optional field `Address3`
        if (data['Address3']) { // data not null
          String.validateJSON(data['Address3']);
        }
        // validate the optional field `Address4`
        if (data['Address4']) { // data not null
          String.validateJSON(data['Address4']);
        }
        // validate the optional field `City`
        if (data['City']) { // data not null
          String.validateJSON(data['City']);
        }
        // validate the optional field `County`
        if (data['County']) { // data not null
          String.validateJSON(data['County']);
        }
        // validate the optional field `State`
        if (data['State']) { // data not null
          String.validateJSON(data['State']);
        }
        // validate the optional field `Province`
        if (data['Province']) { // data not null
          String.validateJSON(data['Province']);
        }
        // validate the optional field `Country`
        if (data['Country']) { // data not null
          String.validateJSON(data['Country']);
        }
        // validate the optional field `PostalCode`
        if (data['PostalCode']) { // data not null
          String.validateJSON(data['PostalCode']);
        }

        return true;
    }


}



/**
 * @member {String} Address1
 */
CreateProfileRequestMailingAddress.prototype['Address1'] = undefined;

/**
 * @member {String} Address2
 */
CreateProfileRequestMailingAddress.prototype['Address2'] = undefined;

/**
 * @member {String} Address3
 */
CreateProfileRequestMailingAddress.prototype['Address3'] = undefined;

/**
 * @member {String} Address4
 */
CreateProfileRequestMailingAddress.prototype['Address4'] = undefined;

/**
 * @member {String} City
 */
CreateProfileRequestMailingAddress.prototype['City'] = undefined;

/**
 * @member {String} County
 */
CreateProfileRequestMailingAddress.prototype['County'] = undefined;

/**
 * @member {String} State
 */
CreateProfileRequestMailingAddress.prototype['State'] = undefined;

/**
 * @member {String} Province
 */
CreateProfileRequestMailingAddress.prototype['Province'] = undefined;

/**
 * @member {String} Country
 */
CreateProfileRequestMailingAddress.prototype['Country'] = undefined;

/**
 * @member {String} PostalCode
 */
CreateProfileRequestMailingAddress.prototype['PostalCode'] = undefined;


// Implement Address interface:
/**
 * @member {String} Address1
 */
Address.prototype['Address1'] = undefined;
/**
 * @member {String} Address2
 */
Address.prototype['Address2'] = undefined;
/**
 * @member {String} Address3
 */
Address.prototype['Address3'] = undefined;
/**
 * @member {String} Address4
 */
Address.prototype['Address4'] = undefined;
/**
 * @member {String} City
 */
Address.prototype['City'] = undefined;
/**
 * @member {String} County
 */
Address.prototype['County'] = undefined;
/**
 * @member {String} State
 */
Address.prototype['State'] = undefined;
/**
 * @member {String} Province
 */
Address.prototype['Province'] = undefined;
/**
 * @member {String} Country
 */
Address.prototype['Country'] = undefined;
/**
 * @member {String} PostalCode
 */
Address.prototype['PostalCode'] = undefined;




export default CreateProfileRequestMailingAddress;

