/*
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.Status;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WorkflowStepItemAppflowIntegration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:36.569162-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class WorkflowStepItemAppflowIntegration {
  public static final String SERIALIZED_NAME_FLOW_NAME = "FlowName";
  @SerializedName(SERIALIZED_NAME_FLOW_NAME)
  private String flowName;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Status status;

  public static final String SERIALIZED_NAME_EXECUTION_MESSAGE = "ExecutionMessage";
  @SerializedName(SERIALIZED_NAME_EXECUTION_MESSAGE)
  private String executionMessage;

  public static final String SERIALIZED_NAME_RECORDS_PROCESSED = "RecordsProcessed";
  @SerializedName(SERIALIZED_NAME_RECORDS_PROCESSED)
  private Integer recordsProcessed;

  public static final String SERIALIZED_NAME_BATCH_RECORDS_START_TIME = "BatchRecordsStartTime";
  @SerializedName(SERIALIZED_NAME_BATCH_RECORDS_START_TIME)
  private String batchRecordsStartTime;

  public static final String SERIALIZED_NAME_BATCH_RECORDS_END_TIME = "BatchRecordsEndTime";
  @SerializedName(SERIALIZED_NAME_BATCH_RECORDS_END_TIME)
  private String batchRecordsEndTime;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_LAST_UPDATED_AT = "LastUpdatedAt";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_AT)
  private OffsetDateTime lastUpdatedAt;

  public WorkflowStepItemAppflowIntegration() {
  }

  public WorkflowStepItemAppflowIntegration flowName(String flowName) {
    this.flowName = flowName;
    return this;
  }

  /**
   * Get flowName
   * @return flowName
   */
  @javax.annotation.Nonnull
  public String getFlowName() {
    return flowName;
  }

  public void setFlowName(String flowName) {
    this.flowName = flowName;
  }


  public WorkflowStepItemAppflowIntegration status(Status status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public Status getStatus() {
    return status;
  }

  public void setStatus(Status status) {
    this.status = status;
  }


  public WorkflowStepItemAppflowIntegration executionMessage(String executionMessage) {
    this.executionMessage = executionMessage;
    return this;
  }

  /**
   * Get executionMessage
   * @return executionMessage
   */
  @javax.annotation.Nonnull
  public String getExecutionMessage() {
    return executionMessage;
  }

  public void setExecutionMessage(String executionMessage) {
    this.executionMessage = executionMessage;
  }


  public WorkflowStepItemAppflowIntegration recordsProcessed(Integer recordsProcessed) {
    this.recordsProcessed = recordsProcessed;
    return this;
  }

  /**
   * Get recordsProcessed
   * @return recordsProcessed
   */
  @javax.annotation.Nonnull
  public Integer getRecordsProcessed() {
    return recordsProcessed;
  }

  public void setRecordsProcessed(Integer recordsProcessed) {
    this.recordsProcessed = recordsProcessed;
  }


  public WorkflowStepItemAppflowIntegration batchRecordsStartTime(String batchRecordsStartTime) {
    this.batchRecordsStartTime = batchRecordsStartTime;
    return this;
  }

  /**
   * Get batchRecordsStartTime
   * @return batchRecordsStartTime
   */
  @javax.annotation.Nonnull
  public String getBatchRecordsStartTime() {
    return batchRecordsStartTime;
  }

  public void setBatchRecordsStartTime(String batchRecordsStartTime) {
    this.batchRecordsStartTime = batchRecordsStartTime;
  }


  public WorkflowStepItemAppflowIntegration batchRecordsEndTime(String batchRecordsEndTime) {
    this.batchRecordsEndTime = batchRecordsEndTime;
    return this;
  }

  /**
   * Get batchRecordsEndTime
   * @return batchRecordsEndTime
   */
  @javax.annotation.Nonnull
  public String getBatchRecordsEndTime() {
    return batchRecordsEndTime;
  }

  public void setBatchRecordsEndTime(String batchRecordsEndTime) {
    this.batchRecordsEndTime = batchRecordsEndTime;
  }


  public WorkflowStepItemAppflowIntegration createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public WorkflowStepItemAppflowIntegration lastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

  /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowStepItemAppflowIntegration workflowStepItemAppflowIntegration = (WorkflowStepItemAppflowIntegration) o;
    return Objects.equals(this.flowName, workflowStepItemAppflowIntegration.flowName) &&
        Objects.equals(this.status, workflowStepItemAppflowIntegration.status) &&
        Objects.equals(this.executionMessage, workflowStepItemAppflowIntegration.executionMessage) &&
        Objects.equals(this.recordsProcessed, workflowStepItemAppflowIntegration.recordsProcessed) &&
        Objects.equals(this.batchRecordsStartTime, workflowStepItemAppflowIntegration.batchRecordsStartTime) &&
        Objects.equals(this.batchRecordsEndTime, workflowStepItemAppflowIntegration.batchRecordsEndTime) &&
        Objects.equals(this.createdAt, workflowStepItemAppflowIntegration.createdAt) &&
        Objects.equals(this.lastUpdatedAt, workflowStepItemAppflowIntegration.lastUpdatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(flowName, status, executionMessage, recordsProcessed, batchRecordsStartTime, batchRecordsEndTime, createdAt, lastUpdatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowStepItemAppflowIntegration {\n");
    sb.append("    flowName: ").append(toIndentedString(flowName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    executionMessage: ").append(toIndentedString(executionMessage)).append("\n");
    sb.append("    recordsProcessed: ").append(toIndentedString(recordsProcessed)).append("\n");
    sb.append("    batchRecordsStartTime: ").append(toIndentedString(batchRecordsStartTime)).append("\n");
    sb.append("    batchRecordsEndTime: ").append(toIndentedString(batchRecordsEndTime)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("FlowName");
    openapiFields.add("Status");
    openapiFields.add("ExecutionMessage");
    openapiFields.add("RecordsProcessed");
    openapiFields.add("BatchRecordsStartTime");
    openapiFields.add("BatchRecordsEndTime");
    openapiFields.add("CreatedAt");
    openapiFields.add("LastUpdatedAt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("FlowName");
    openapiRequiredFields.add("Status");
    openapiRequiredFields.add("ExecutionMessage");
    openapiRequiredFields.add("RecordsProcessed");
    openapiRequiredFields.add("BatchRecordsStartTime");
    openapiRequiredFields.add("BatchRecordsEndTime");
    openapiRequiredFields.add("CreatedAt");
    openapiRequiredFields.add("LastUpdatedAt");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WorkflowStepItemAppflowIntegration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WorkflowStepItemAppflowIntegration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WorkflowStepItemAppflowIntegration is not found in the empty JSON string", WorkflowStepItemAppflowIntegration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WorkflowStepItemAppflowIntegration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WorkflowStepItemAppflowIntegration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WorkflowStepItemAppflowIntegration.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `FlowName`
      String.validateJsonElement(jsonObj.get("FlowName"));
      // validate the required field `Status`
      Status.validateJsonElement(jsonObj.get("Status"));
      // validate the required field `ExecutionMessage`
      String.validateJsonElement(jsonObj.get("ExecutionMessage"));
      // validate the required field `RecordsProcessed`
      Integer.validateJsonElement(jsonObj.get("RecordsProcessed"));
      // validate the required field `BatchRecordsStartTime`
      String.validateJsonElement(jsonObj.get("BatchRecordsStartTime"));
      // validate the required field `BatchRecordsEndTime`
      String.validateJsonElement(jsonObj.get("BatchRecordsEndTime"));
      // validate the required field `CreatedAt`
      OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAt"));
      // validate the required field `LastUpdatedAt`
      OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdatedAt"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WorkflowStepItemAppflowIntegration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WorkflowStepItemAppflowIntegration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WorkflowStepItemAppflowIntegration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WorkflowStepItemAppflowIntegration.class));

       return (TypeAdapter<T>) new TypeAdapter<WorkflowStepItemAppflowIntegration>() {
           @Override
           public void write(JsonWriter out, WorkflowStepItemAppflowIntegration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WorkflowStepItemAppflowIntegration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of WorkflowStepItemAppflowIntegration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WorkflowStepItemAppflowIntegration
   * @throws IOException if the JSON string is invalid with respect to WorkflowStepItemAppflowIntegration
   */
  public static WorkflowStepItemAppflowIntegration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WorkflowStepItemAppflowIntegration.class);
  }

  /**
   * Convert an instance of WorkflowStepItemAppflowIntegration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

