/*
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ObjectTypeField;
import org.openapitools.client.model.ObjectTypeKey;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutProfileObjectTypeRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:36.569162-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PutProfileObjectTypeRequest {
  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_TEMPLATE_ID = "TemplateId";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
  private String templateId;

  public static final String SERIALIZED_NAME_EXPIRATION_DAYS = "ExpirationDays";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DAYS)
  private Integer expirationDays;

  public static final String SERIALIZED_NAME_ENCRYPTION_KEY = "EncryptionKey";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_KEY)
  private String encryptionKey;

  public static final String SERIALIZED_NAME_ALLOW_PROFILE_CREATION = "AllowProfileCreation";
  @SerializedName(SERIALIZED_NAME_ALLOW_PROFILE_CREATION)
  private Boolean allowProfileCreation;

  public static final String SERIALIZED_NAME_SOURCE_LAST_UPDATED_TIMESTAMP_FORMAT = "SourceLastUpdatedTimestampFormat";
  @SerializedName(SERIALIZED_NAME_SOURCE_LAST_UPDATED_TIMESTAMP_FORMAT)
  private String sourceLastUpdatedTimestampFormat;

  public static final String SERIALIZED_NAME_FIELDS = "Fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private Map<String, ObjectTypeField> fields = new HashMap<>();

  public static final String SERIALIZED_NAME_KEYS = "Keys";
  @SerializedName(SERIALIZED_NAME_KEYS)
  private Map<String, List<ObjectTypeKey>> keys = new HashMap<>();

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = new HashMap<>();

  public PutProfileObjectTypeRequest() {
  }

  public PutProfileObjectTypeRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the profile object type.
   * @return description
   */
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public PutProfileObjectTypeRequest templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

  /**
   * A unique identifier for the object template. For some attributes in the request, the service will use the default value from the object template when TemplateId is present. If these attributes are present in the request, the service may return a &lt;code&gt;BadRequestException&lt;/code&gt;. These attributes include: AllowProfileCreation, SourceLastUpdatedTimestampFormat, Fields, and Keys. For example, if AllowProfileCreation is set to true when TemplateId is set, the service may return a &lt;code&gt;BadRequestException&lt;/code&gt;.
   * @return templateId
   */
  @javax.annotation.Nullable
  public String getTemplateId() {
    return templateId;
  }

  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }


  public PutProfileObjectTypeRequest expirationDays(Integer expirationDays) {
    this.expirationDays = expirationDays;
    return this;
  }

  /**
   * The number of days until the data in the object expires.
   * minimum: 1
   * maximum: 1098
   * @return expirationDays
   */
  @javax.annotation.Nullable
  public Integer getExpirationDays() {
    return expirationDays;
  }

  public void setExpirationDays(Integer expirationDays) {
    this.expirationDays = expirationDays;
  }


  public PutProfileObjectTypeRequest encryptionKey(String encryptionKey) {
    this.encryptionKey = encryptionKey;
    return this;
  }

  /**
   * The customer-provided key to encrypt the profile object that will be created in this profile object type.
   * @return encryptionKey
   */
  @javax.annotation.Nullable
  public String getEncryptionKey() {
    return encryptionKey;
  }

  public void setEncryptionKey(String encryptionKey) {
    this.encryptionKey = encryptionKey;
  }


  public PutProfileObjectTypeRequest allowProfileCreation(Boolean allowProfileCreation) {
    this.allowProfileCreation = allowProfileCreation;
    return this;
  }

  /**
   * Indicates whether a profile should be created when data is received if one doesnâ€™t exist for an object of this type. The default is &lt;code&gt;FALSE&lt;/code&gt;. If the AllowProfileCreation flag is set to &lt;code&gt;FALSE&lt;/code&gt;, then the service tries to fetch a standard profile and associate this object with the profile. If it is set to &lt;code&gt;TRUE&lt;/code&gt;, and if no match is found, then the service creates a new standard profile.
   * @return allowProfileCreation
   */
  @javax.annotation.Nullable
  public Boolean getAllowProfileCreation() {
    return allowProfileCreation;
  }

  public void setAllowProfileCreation(Boolean allowProfileCreation) {
    this.allowProfileCreation = allowProfileCreation;
  }


  public PutProfileObjectTypeRequest sourceLastUpdatedTimestampFormat(String sourceLastUpdatedTimestampFormat) {
    this.sourceLastUpdatedTimestampFormat = sourceLastUpdatedTimestampFormat;
    return this;
  }

  /**
   * The format of your &lt;code&gt;sourceLastUpdatedTimestamp&lt;/code&gt; that was previously set up. 
   * @return sourceLastUpdatedTimestampFormat
   */
  @javax.annotation.Nullable
  public String getSourceLastUpdatedTimestampFormat() {
    return sourceLastUpdatedTimestampFormat;
  }

  public void setSourceLastUpdatedTimestampFormat(String sourceLastUpdatedTimestampFormat) {
    this.sourceLastUpdatedTimestampFormat = sourceLastUpdatedTimestampFormat;
  }


  public PutProfileObjectTypeRequest fields(Map<String, ObjectTypeField> fields) {
    this.fields = fields;
    return this;
  }

  public PutProfileObjectTypeRequest putFieldsItem(String key, ObjectTypeField fieldsItem) {
    if (this.fields == null) {
      this.fields = new HashMap<>();
    }
    this.fields.put(key, fieldsItem);
    return this;
  }

  /**
   * A map of the name and ObjectType field.
   * @return fields
   */
  @javax.annotation.Nullable
  public Map<String, ObjectTypeField> getFields() {
    return fields;
  }

  public void setFields(Map<String, ObjectTypeField> fields) {
    this.fields = fields;
  }


  public PutProfileObjectTypeRequest keys(Map<String, List<ObjectTypeKey>> keys) {
    this.keys = keys;
    return this;
  }

  public PutProfileObjectTypeRequest putKeysItem(String key, List<ObjectTypeKey> keysItem) {
    if (this.keys == null) {
      this.keys = new HashMap<>();
    }
    this.keys.put(key, keysItem);
    return this;
  }

  /**
   * A list of unique keys that can be used to map data to the profile.
   * @return keys
   */
  @javax.annotation.Nullable
  public Map<String, List<ObjectTypeKey>> getKeys() {
    return keys;
  }

  public void setKeys(Map<String, List<ObjectTypeKey>> keys) {
    this.keys = keys;
  }


  public PutProfileObjectTypeRequest tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public PutProfileObjectTypeRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * The tags used to organize, track, or control access for this resource.
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutProfileObjectTypeRequest putProfileObjectTypeRequest = (PutProfileObjectTypeRequest) o;
    return Objects.equals(this.description, putProfileObjectTypeRequest.description) &&
        Objects.equals(this.templateId, putProfileObjectTypeRequest.templateId) &&
        Objects.equals(this.expirationDays, putProfileObjectTypeRequest.expirationDays) &&
        Objects.equals(this.encryptionKey, putProfileObjectTypeRequest.encryptionKey) &&
        Objects.equals(this.allowProfileCreation, putProfileObjectTypeRequest.allowProfileCreation) &&
        Objects.equals(this.sourceLastUpdatedTimestampFormat, putProfileObjectTypeRequest.sourceLastUpdatedTimestampFormat) &&
        Objects.equals(this.fields, putProfileObjectTypeRequest.fields) &&
        Objects.equals(this.keys, putProfileObjectTypeRequest.keys) &&
        Objects.equals(this.tags, putProfileObjectTypeRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, templateId, expirationDays, encryptionKey, allowProfileCreation, sourceLastUpdatedTimestampFormat, fields, keys, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutProfileObjectTypeRequest {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    expirationDays: ").append(toIndentedString(expirationDays)).append("\n");
    sb.append("    encryptionKey: ").append(toIndentedString(encryptionKey)).append("\n");
    sb.append("    allowProfileCreation: ").append(toIndentedString(allowProfileCreation)).append("\n");
    sb.append("    sourceLastUpdatedTimestampFormat: ").append(toIndentedString(sourceLastUpdatedTimestampFormat)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    keys: ").append(toIndentedString(keys)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Description");
    openapiFields.add("TemplateId");
    openapiFields.add("ExpirationDays");
    openapiFields.add("EncryptionKey");
    openapiFields.add("AllowProfileCreation");
    openapiFields.add("SourceLastUpdatedTimestampFormat");
    openapiFields.add("Fields");
    openapiFields.add("Keys");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Description");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutProfileObjectTypeRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutProfileObjectTypeRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutProfileObjectTypeRequest is not found in the empty JSON string", PutProfileObjectTypeRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutProfileObjectTypeRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutProfileObjectTypeRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PutProfileObjectTypeRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      if ((jsonObj.get("TemplateId") != null && !jsonObj.get("TemplateId").isJsonNull()) && !jsonObj.get("TemplateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TemplateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TemplateId").toString()));
      }
      if ((jsonObj.get("EncryptionKey") != null && !jsonObj.get("EncryptionKey").isJsonNull()) && !jsonObj.get("EncryptionKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EncryptionKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EncryptionKey").toString()));
      }
      if ((jsonObj.get("SourceLastUpdatedTimestampFormat") != null && !jsonObj.get("SourceLastUpdatedTimestampFormat").isJsonNull()) && !jsonObj.get("SourceLastUpdatedTimestampFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SourceLastUpdatedTimestampFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SourceLastUpdatedTimestampFormat").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutProfileObjectTypeRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutProfileObjectTypeRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutProfileObjectTypeRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutProfileObjectTypeRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PutProfileObjectTypeRequest>() {
           @Override
           public void write(JsonWriter out, PutProfileObjectTypeRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutProfileObjectTypeRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutProfileObjectTypeRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutProfileObjectTypeRequest
   * @throws IOException if the JSON string is invalid with respect to PutProfileObjectTypeRequest
   */
  public static PutProfileObjectTypeRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutProfileObjectTypeRequest.class);
  }

  /**
   * Convert an instance of PutProfileObjectTypeRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

