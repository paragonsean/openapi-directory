/*
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.CreateCalculatedAttributeDefinitionResponseAttributeDetails;
import org.openapitools.client.model.CreateCalculatedAttributeDefinitionResponseConditions;
import org.openapitools.client.model.Statistic;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateCalculatedAttributeDefinitionResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:36.569162-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateCalculatedAttributeDefinitionResponse {
  public static final String SERIALIZED_NAME_CALCULATED_ATTRIBUTE_NAME = "CalculatedAttributeName";
  @SerializedName(SERIALIZED_NAME_CALCULATED_ATTRIBUTE_NAME)
  private String calculatedAttributeName;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "DisplayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ATTRIBUTE_DETAILS = "AttributeDetails";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_DETAILS)
  private CreateCalculatedAttributeDefinitionResponseAttributeDetails attributeDetails;

  public static final String SERIALIZED_NAME_CONDITIONS = "Conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  private CreateCalculatedAttributeDefinitionResponseConditions conditions;

  public static final String SERIALIZED_NAME_STATISTIC = "Statistic";
  @SerializedName(SERIALIZED_NAME_STATISTIC)
  private Statistic statistic;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_LAST_UPDATED_AT = "LastUpdatedAt";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_AT)
  private OffsetDateTime lastUpdatedAt;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public CreateCalculatedAttributeDefinitionResponse() {
  }

  public CreateCalculatedAttributeDefinitionResponse calculatedAttributeName(String calculatedAttributeName) {
    this.calculatedAttributeName = calculatedAttributeName;
    return this;
  }

  /**
   * Get calculatedAttributeName
   * @return calculatedAttributeName
   */
  @javax.annotation.Nullable
  public String getCalculatedAttributeName() {
    return calculatedAttributeName;
  }

  public void setCalculatedAttributeName(String calculatedAttributeName) {
    this.calculatedAttributeName = calculatedAttributeName;
  }


  public CreateCalculatedAttributeDefinitionResponse displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public CreateCalculatedAttributeDefinitionResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateCalculatedAttributeDefinitionResponse attributeDetails(CreateCalculatedAttributeDefinitionResponseAttributeDetails attributeDetails) {
    this.attributeDetails = attributeDetails;
    return this;
  }

  /**
   * Get attributeDetails
   * @return attributeDetails
   */
  @javax.annotation.Nullable
  public CreateCalculatedAttributeDefinitionResponseAttributeDetails getAttributeDetails() {
    return attributeDetails;
  }

  public void setAttributeDetails(CreateCalculatedAttributeDefinitionResponseAttributeDetails attributeDetails) {
    this.attributeDetails = attributeDetails;
  }


  public CreateCalculatedAttributeDefinitionResponse conditions(CreateCalculatedAttributeDefinitionResponseConditions conditions) {
    this.conditions = conditions;
    return this;
  }

  /**
   * Get conditions
   * @return conditions
   */
  @javax.annotation.Nullable
  public CreateCalculatedAttributeDefinitionResponseConditions getConditions() {
    return conditions;
  }

  public void setConditions(CreateCalculatedAttributeDefinitionResponseConditions conditions) {
    this.conditions = conditions;
  }


  public CreateCalculatedAttributeDefinitionResponse statistic(Statistic statistic) {
    this.statistic = statistic;
    return this;
  }

  /**
   * Get statistic
   * @return statistic
   */
  @javax.annotation.Nullable
  public Statistic getStatistic() {
    return statistic;
  }

  public void setStatistic(Statistic statistic) {
    this.statistic = statistic;
  }


  public CreateCalculatedAttributeDefinitionResponse createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public CreateCalculatedAttributeDefinitionResponse lastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

  /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }


  public CreateCalculatedAttributeDefinitionResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCalculatedAttributeDefinitionResponse createCalculatedAttributeDefinitionResponse = (CreateCalculatedAttributeDefinitionResponse) o;
    return Objects.equals(this.calculatedAttributeName, createCalculatedAttributeDefinitionResponse.calculatedAttributeName) &&
        Objects.equals(this.displayName, createCalculatedAttributeDefinitionResponse.displayName) &&
        Objects.equals(this.description, createCalculatedAttributeDefinitionResponse.description) &&
        Objects.equals(this.attributeDetails, createCalculatedAttributeDefinitionResponse.attributeDetails) &&
        Objects.equals(this.conditions, createCalculatedAttributeDefinitionResponse.conditions) &&
        Objects.equals(this.statistic, createCalculatedAttributeDefinitionResponse.statistic) &&
        Objects.equals(this.createdAt, createCalculatedAttributeDefinitionResponse.createdAt) &&
        Objects.equals(this.lastUpdatedAt, createCalculatedAttributeDefinitionResponse.lastUpdatedAt) &&
        Objects.equals(this.tags, createCalculatedAttributeDefinitionResponse.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(calculatedAttributeName, displayName, description, attributeDetails, conditions, statistic, createdAt, lastUpdatedAt, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCalculatedAttributeDefinitionResponse {\n");
    sb.append("    calculatedAttributeName: ").append(toIndentedString(calculatedAttributeName)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    attributeDetails: ").append(toIndentedString(attributeDetails)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    statistic: ").append(toIndentedString(statistic)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CalculatedAttributeName");
    openapiFields.add("DisplayName");
    openapiFields.add("Description");
    openapiFields.add("AttributeDetails");
    openapiFields.add("Conditions");
    openapiFields.add("Statistic");
    openapiFields.add("CreatedAt");
    openapiFields.add("LastUpdatedAt");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateCalculatedAttributeDefinitionResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateCalculatedAttributeDefinitionResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateCalculatedAttributeDefinitionResponse is not found in the empty JSON string", CreateCalculatedAttributeDefinitionResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateCalculatedAttributeDefinitionResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateCalculatedAttributeDefinitionResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CalculatedAttributeName`
      if (jsonObj.get("CalculatedAttributeName") != null && !jsonObj.get("CalculatedAttributeName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CalculatedAttributeName"));
      }
      // validate the optional field `DisplayName`
      if (jsonObj.get("DisplayName") != null && !jsonObj.get("DisplayName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DisplayName"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `AttributeDetails`
      if (jsonObj.get("AttributeDetails") != null && !jsonObj.get("AttributeDetails").isJsonNull()) {
        CreateCalculatedAttributeDefinitionResponseAttributeDetails.validateJsonElement(jsonObj.get("AttributeDetails"));
      }
      // validate the optional field `Conditions`
      if (jsonObj.get("Conditions") != null && !jsonObj.get("Conditions").isJsonNull()) {
        CreateCalculatedAttributeDefinitionResponseConditions.validateJsonElement(jsonObj.get("Conditions"));
      }
      // validate the optional field `Statistic`
      if (jsonObj.get("Statistic") != null && !jsonObj.get("Statistic").isJsonNull()) {
        Statistic.validateJsonElement(jsonObj.get("Statistic"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `LastUpdatedAt`
      if (jsonObj.get("LastUpdatedAt") != null && !jsonObj.get("LastUpdatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdatedAt"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateCalculatedAttributeDefinitionResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateCalculatedAttributeDefinitionResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateCalculatedAttributeDefinitionResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateCalculatedAttributeDefinitionResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateCalculatedAttributeDefinitionResponse>() {
           @Override
           public void write(JsonWriter out, CreateCalculatedAttributeDefinitionResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateCalculatedAttributeDefinitionResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateCalculatedAttributeDefinitionResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateCalculatedAttributeDefinitionResponse
   * @throws IOException if the JSON string is invalid with respect to CreateCalculatedAttributeDefinitionResponse
   */
  public static CreateCalculatedAttributeDefinitionResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateCalculatedAttributeDefinitionResponse.class);
  }

  /**
   * Convert an instance of CreateCalculatedAttributeDefinitionResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

