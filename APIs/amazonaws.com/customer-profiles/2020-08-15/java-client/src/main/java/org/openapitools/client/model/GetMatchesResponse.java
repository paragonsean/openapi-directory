/*
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetMatchesResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:36.569162-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetMatchesResponse {
  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public static final String SERIALIZED_NAME_MATCH_GENERATION_DATE = "MatchGenerationDate";
  @SerializedName(SERIALIZED_NAME_MATCH_GENERATION_DATE)
  private OffsetDateTime matchGenerationDate;

  public static final String SERIALIZED_NAME_POTENTIAL_MATCHES = "PotentialMatches";
  @SerializedName(SERIALIZED_NAME_POTENTIAL_MATCHES)
  private Integer potentialMatches;

  public static final String SERIALIZED_NAME_MATCHES = "Matches";
  @SerializedName(SERIALIZED_NAME_MATCHES)
  private List matches;

  public GetMatchesResponse() {
  }

  public GetMatchesResponse nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * Get nextToken
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  public GetMatchesResponse matchGenerationDate(OffsetDateTime matchGenerationDate) {
    this.matchGenerationDate = matchGenerationDate;
    return this;
  }

  /**
   * Get matchGenerationDate
   * @return matchGenerationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getMatchGenerationDate() {
    return matchGenerationDate;
  }

  public void setMatchGenerationDate(OffsetDateTime matchGenerationDate) {
    this.matchGenerationDate = matchGenerationDate;
  }


  public GetMatchesResponse potentialMatches(Integer potentialMatches) {
    this.potentialMatches = potentialMatches;
    return this;
  }

  /**
   * Get potentialMatches
   * @return potentialMatches
   */
  @javax.annotation.Nullable
  public Integer getPotentialMatches() {
    return potentialMatches;
  }

  public void setPotentialMatches(Integer potentialMatches) {
    this.potentialMatches = potentialMatches;
  }


  public GetMatchesResponse matches(List matches) {
    this.matches = matches;
    return this;
  }

  /**
   * Get matches
   * @return matches
   */
  @javax.annotation.Nullable
  public List getMatches() {
    return matches;
  }

  public void setMatches(List matches) {
    this.matches = matches;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMatchesResponse getMatchesResponse = (GetMatchesResponse) o;
    return Objects.equals(this.nextToken, getMatchesResponse.nextToken) &&
        Objects.equals(this.matchGenerationDate, getMatchesResponse.matchGenerationDate) &&
        Objects.equals(this.potentialMatches, getMatchesResponse.potentialMatches) &&
        Objects.equals(this.matches, getMatchesResponse.matches);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nextToken, matchGenerationDate, potentialMatches, matches);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMatchesResponse {\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    matchGenerationDate: ").append(toIndentedString(matchGenerationDate)).append("\n");
    sb.append("    potentialMatches: ").append(toIndentedString(potentialMatches)).append("\n");
    sb.append("    matches: ").append(toIndentedString(matches)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("NextToken");
    openapiFields.add("MatchGenerationDate");
    openapiFields.add("PotentialMatches");
    openapiFields.add("Matches");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetMatchesResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetMatchesResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetMatchesResponse is not found in the empty JSON string", GetMatchesResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetMatchesResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetMatchesResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `NextToken`
      if (jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NextToken"));
      }
      // validate the optional field `MatchGenerationDate`
      if (jsonObj.get("MatchGenerationDate") != null && !jsonObj.get("MatchGenerationDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("MatchGenerationDate"));
      }
      // validate the optional field `PotentialMatches`
      if (jsonObj.get("PotentialMatches") != null && !jsonObj.get("PotentialMatches").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PotentialMatches"));
      }
      // validate the optional field `Matches`
      if (jsonObj.get("Matches") != null && !jsonObj.get("Matches").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Matches"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetMatchesResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetMatchesResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetMatchesResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetMatchesResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetMatchesResponse>() {
           @Override
           public void write(JsonWriter out, GetMatchesResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetMatchesResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetMatchesResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetMatchesResponse
   * @throws IOException if the JSON string is invalid with respect to GetMatchesResponse
   */
  public static GetMatchesResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetMatchesResponse.class);
  }

  /**
   * Convert an instance of GetMatchesResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

