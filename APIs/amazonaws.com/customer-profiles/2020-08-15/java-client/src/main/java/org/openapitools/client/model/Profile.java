/*
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CreateProfileRequestAddress;
import org.openapitools.client.model.CreateProfileRequestBillingAddress;
import org.openapitools.client.model.CreateProfileRequestMailingAddress;
import org.openapitools.client.model.CreateProfileRequestShippingAddress;
import org.openapitools.client.model.Gender;
import org.openapitools.client.model.PartyType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The standard profile of a customer.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:36.569162-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Profile {
  public static final String SERIALIZED_NAME_PROFILE_ID = "ProfileId";
  @SerializedName(SERIALIZED_NAME_PROFILE_ID)
  private String profileId;

  public static final String SERIALIZED_NAME_ACCOUNT_NUMBER = "AccountNumber";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NUMBER)
  private String accountNumber;

  public static final String SERIALIZED_NAME_ADDITIONAL_INFORMATION = "AdditionalInformation";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_INFORMATION)
  private String additionalInformation;

  public static final String SERIALIZED_NAME_PARTY_TYPE = "PartyType";
  @SerializedName(SERIALIZED_NAME_PARTY_TYPE)
  private PartyType partyType;

  public static final String SERIALIZED_NAME_BUSINESS_NAME = "BusinessName";
  @SerializedName(SERIALIZED_NAME_BUSINESS_NAME)
  private String businessName;

  public static final String SERIALIZED_NAME_FIRST_NAME = "FirstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "MiddleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private String middleName;

  public static final String SERIALIZED_NAME_LAST_NAME = "LastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_BIRTH_DATE = "BirthDate";
  @SerializedName(SERIALIZED_NAME_BIRTH_DATE)
  private String birthDate;

  public static final String SERIALIZED_NAME_GENDER = "Gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private Gender gender;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "PhoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_MOBILE_PHONE_NUMBER = "MobilePhoneNumber";
  @SerializedName(SERIALIZED_NAME_MOBILE_PHONE_NUMBER)
  private String mobilePhoneNumber;

  public static final String SERIALIZED_NAME_HOME_PHONE_NUMBER = "HomePhoneNumber";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE_NUMBER)
  private String homePhoneNumber;

  public static final String SERIALIZED_NAME_BUSINESS_PHONE_NUMBER = "BusinessPhoneNumber";
  @SerializedName(SERIALIZED_NAME_BUSINESS_PHONE_NUMBER)
  private String businessPhoneNumber;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS = "EmailAddress";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS)
  private String emailAddress;

  public static final String SERIALIZED_NAME_PERSONAL_EMAIL_ADDRESS = "PersonalEmailAddress";
  @SerializedName(SERIALIZED_NAME_PERSONAL_EMAIL_ADDRESS)
  private String personalEmailAddress;

  public static final String SERIALIZED_NAME_BUSINESS_EMAIL_ADDRESS = "BusinessEmailAddress";
  @SerializedName(SERIALIZED_NAME_BUSINESS_EMAIL_ADDRESS)
  private String businessEmailAddress;

  public static final String SERIALIZED_NAME_ADDRESS = "Address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private CreateProfileRequestAddress address;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESS = "ShippingAddress";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESS)
  private CreateProfileRequestShippingAddress shippingAddress;

  public static final String SERIALIZED_NAME_MAILING_ADDRESS = "MailingAddress";
  @SerializedName(SERIALIZED_NAME_MAILING_ADDRESS)
  private CreateProfileRequestMailingAddress mailingAddress;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS = "BillingAddress";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS)
  private CreateProfileRequestBillingAddress billingAddress;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "Attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map attributes;

  public static final String SERIALIZED_NAME_FOUND_BY_ITEMS = "FoundByItems";
  @SerializedName(SERIALIZED_NAME_FOUND_BY_ITEMS)
  private List foundByItems;

  public static final String SERIALIZED_NAME_PARTY_TYPE_STRING = "PartyTypeString";
  @SerializedName(SERIALIZED_NAME_PARTY_TYPE_STRING)
  private String partyTypeString;

  public static final String SERIALIZED_NAME_GENDER_STRING = "GenderString";
  @SerializedName(SERIALIZED_NAME_GENDER_STRING)
  private String genderString;

  public Profile() {
  }

  public Profile profileId(String profileId) {
    this.profileId = profileId;
    return this;
  }

  /**
   * Get profileId
   * @return profileId
   */
  @javax.annotation.Nullable
  public String getProfileId() {
    return profileId;
  }

  public void setProfileId(String profileId) {
    this.profileId = profileId;
  }


  public Profile accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

  /**
   * Get accountNumber
   * @return accountNumber
   */
  @javax.annotation.Nullable
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }


  public Profile additionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
    return this;
  }

  /**
   * Get additionalInformation
   * @return additionalInformation
   */
  @javax.annotation.Nullable
  public String getAdditionalInformation() {
    return additionalInformation;
  }

  public void setAdditionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
  }


  public Profile partyType(PartyType partyType) {
    this.partyType = partyType;
    return this;
  }

  /**
   * Get partyType
   * @return partyType
   */
  @javax.annotation.Nullable
  public PartyType getPartyType() {
    return partyType;
  }

  public void setPartyType(PartyType partyType) {
    this.partyType = partyType;
  }


  public Profile businessName(String businessName) {
    this.businessName = businessName;
    return this;
  }

  /**
   * Get businessName
   * @return businessName
   */
  @javax.annotation.Nullable
  public String getBusinessName() {
    return businessName;
  }

  public void setBusinessName(String businessName) {
    this.businessName = businessName;
  }


  public Profile firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public Profile middleName(String middleName) {
    this.middleName = middleName;
    return this;
  }

  /**
   * Get middleName
   * @return middleName
   */
  @javax.annotation.Nullable
  public String getMiddleName() {
    return middleName;
  }

  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }


  public Profile lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public Profile birthDate(String birthDate) {
    this.birthDate = birthDate;
    return this;
  }

  /**
   * Get birthDate
   * @return birthDate
   */
  @javax.annotation.Nullable
  public String getBirthDate() {
    return birthDate;
  }

  public void setBirthDate(String birthDate) {
    this.birthDate = birthDate;
  }


  public Profile gender(Gender gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Get gender
   * @return gender
   */
  @javax.annotation.Nullable
  public Gender getGender() {
    return gender;
  }

  public void setGender(Gender gender) {
    this.gender = gender;
  }


  public Profile phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Get phoneNumber
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public Profile mobilePhoneNumber(String mobilePhoneNumber) {
    this.mobilePhoneNumber = mobilePhoneNumber;
    return this;
  }

  /**
   * Get mobilePhoneNumber
   * @return mobilePhoneNumber
   */
  @javax.annotation.Nullable
  public String getMobilePhoneNumber() {
    return mobilePhoneNumber;
  }

  public void setMobilePhoneNumber(String mobilePhoneNumber) {
    this.mobilePhoneNumber = mobilePhoneNumber;
  }


  public Profile homePhoneNumber(String homePhoneNumber) {
    this.homePhoneNumber = homePhoneNumber;
    return this;
  }

  /**
   * Get homePhoneNumber
   * @return homePhoneNumber
   */
  @javax.annotation.Nullable
  public String getHomePhoneNumber() {
    return homePhoneNumber;
  }

  public void setHomePhoneNumber(String homePhoneNumber) {
    this.homePhoneNumber = homePhoneNumber;
  }


  public Profile businessPhoneNumber(String businessPhoneNumber) {
    this.businessPhoneNumber = businessPhoneNumber;
    return this;
  }

  /**
   * Get businessPhoneNumber
   * @return businessPhoneNumber
   */
  @javax.annotation.Nullable
  public String getBusinessPhoneNumber() {
    return businessPhoneNumber;
  }

  public void setBusinessPhoneNumber(String businessPhoneNumber) {
    this.businessPhoneNumber = businessPhoneNumber;
  }


  public Profile emailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

  /**
   * Get emailAddress
   * @return emailAddress
   */
  @javax.annotation.Nullable
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }


  public Profile personalEmailAddress(String personalEmailAddress) {
    this.personalEmailAddress = personalEmailAddress;
    return this;
  }

  /**
   * Get personalEmailAddress
   * @return personalEmailAddress
   */
  @javax.annotation.Nullable
  public String getPersonalEmailAddress() {
    return personalEmailAddress;
  }

  public void setPersonalEmailAddress(String personalEmailAddress) {
    this.personalEmailAddress = personalEmailAddress;
  }


  public Profile businessEmailAddress(String businessEmailAddress) {
    this.businessEmailAddress = businessEmailAddress;
    return this;
  }

  /**
   * Get businessEmailAddress
   * @return businessEmailAddress
   */
  @javax.annotation.Nullable
  public String getBusinessEmailAddress() {
    return businessEmailAddress;
  }

  public void setBusinessEmailAddress(String businessEmailAddress) {
    this.businessEmailAddress = businessEmailAddress;
  }


  public Profile address(CreateProfileRequestAddress address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public CreateProfileRequestAddress getAddress() {
    return address;
  }

  public void setAddress(CreateProfileRequestAddress address) {
    this.address = address;
  }


  public Profile shippingAddress(CreateProfileRequestShippingAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
    return this;
  }

  /**
   * Get shippingAddress
   * @return shippingAddress
   */
  @javax.annotation.Nullable
  public CreateProfileRequestShippingAddress getShippingAddress() {
    return shippingAddress;
  }

  public void setShippingAddress(CreateProfileRequestShippingAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
  }


  public Profile mailingAddress(CreateProfileRequestMailingAddress mailingAddress) {
    this.mailingAddress = mailingAddress;
    return this;
  }

  /**
   * Get mailingAddress
   * @return mailingAddress
   */
  @javax.annotation.Nullable
  public CreateProfileRequestMailingAddress getMailingAddress() {
    return mailingAddress;
  }

  public void setMailingAddress(CreateProfileRequestMailingAddress mailingAddress) {
    this.mailingAddress = mailingAddress;
  }


  public Profile billingAddress(CreateProfileRequestBillingAddress billingAddress) {
    this.billingAddress = billingAddress;
    return this;
  }

  /**
   * Get billingAddress
   * @return billingAddress
   */
  @javax.annotation.Nullable
  public CreateProfileRequestBillingAddress getBillingAddress() {
    return billingAddress;
  }

  public void setBillingAddress(CreateProfileRequestBillingAddress billingAddress) {
    this.billingAddress = billingAddress;
  }


  public Profile attributes(Map attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * Get attributes
   * @return attributes
   */
  @javax.annotation.Nullable
  public Map getAttributes() {
    return attributes;
  }

  public void setAttributes(Map attributes) {
    this.attributes = attributes;
  }


  public Profile foundByItems(List foundByItems) {
    this.foundByItems = foundByItems;
    return this;
  }

  /**
   * Get foundByItems
   * @return foundByItems
   */
  @javax.annotation.Nullable
  public List getFoundByItems() {
    return foundByItems;
  }

  public void setFoundByItems(List foundByItems) {
    this.foundByItems = foundByItems;
  }


  public Profile partyTypeString(String partyTypeString) {
    this.partyTypeString = partyTypeString;
    return this;
  }

  /**
   * Get partyTypeString
   * @return partyTypeString
   */
  @javax.annotation.Nullable
  public String getPartyTypeString() {
    return partyTypeString;
  }

  public void setPartyTypeString(String partyTypeString) {
    this.partyTypeString = partyTypeString;
  }


  public Profile genderString(String genderString) {
    this.genderString = genderString;
    return this;
  }

  /**
   * Get genderString
   * @return genderString
   */
  @javax.annotation.Nullable
  public String getGenderString() {
    return genderString;
  }

  public void setGenderString(String genderString) {
    this.genderString = genderString;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Profile profile = (Profile) o;
    return Objects.equals(this.profileId, profile.profileId) &&
        Objects.equals(this.accountNumber, profile.accountNumber) &&
        Objects.equals(this.additionalInformation, profile.additionalInformation) &&
        Objects.equals(this.partyType, profile.partyType) &&
        Objects.equals(this.businessName, profile.businessName) &&
        Objects.equals(this.firstName, profile.firstName) &&
        Objects.equals(this.middleName, profile.middleName) &&
        Objects.equals(this.lastName, profile.lastName) &&
        Objects.equals(this.birthDate, profile.birthDate) &&
        Objects.equals(this.gender, profile.gender) &&
        Objects.equals(this.phoneNumber, profile.phoneNumber) &&
        Objects.equals(this.mobilePhoneNumber, profile.mobilePhoneNumber) &&
        Objects.equals(this.homePhoneNumber, profile.homePhoneNumber) &&
        Objects.equals(this.businessPhoneNumber, profile.businessPhoneNumber) &&
        Objects.equals(this.emailAddress, profile.emailAddress) &&
        Objects.equals(this.personalEmailAddress, profile.personalEmailAddress) &&
        Objects.equals(this.businessEmailAddress, profile.businessEmailAddress) &&
        Objects.equals(this.address, profile.address) &&
        Objects.equals(this.shippingAddress, profile.shippingAddress) &&
        Objects.equals(this.mailingAddress, profile.mailingAddress) &&
        Objects.equals(this.billingAddress, profile.billingAddress) &&
        Objects.equals(this.attributes, profile.attributes) &&
        Objects.equals(this.foundByItems, profile.foundByItems) &&
        Objects.equals(this.partyTypeString, profile.partyTypeString) &&
        Objects.equals(this.genderString, profile.genderString);
  }

  @Override
  public int hashCode() {
    return Objects.hash(profileId, accountNumber, additionalInformation, partyType, businessName, firstName, middleName, lastName, birthDate, gender, phoneNumber, mobilePhoneNumber, homePhoneNumber, businessPhoneNumber, emailAddress, personalEmailAddress, businessEmailAddress, address, shippingAddress, mailingAddress, billingAddress, attributes, foundByItems, partyTypeString, genderString);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Profile {\n");
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("    partyType: ").append(toIndentedString(partyType)).append("\n");
    sb.append("    businessName: ").append(toIndentedString(businessName)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    mobilePhoneNumber: ").append(toIndentedString(mobilePhoneNumber)).append("\n");
    sb.append("    homePhoneNumber: ").append(toIndentedString(homePhoneNumber)).append("\n");
    sb.append("    businessPhoneNumber: ").append(toIndentedString(businessPhoneNumber)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    personalEmailAddress: ").append(toIndentedString(personalEmailAddress)).append("\n");
    sb.append("    businessEmailAddress: ").append(toIndentedString(businessEmailAddress)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    mailingAddress: ").append(toIndentedString(mailingAddress)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    foundByItems: ").append(toIndentedString(foundByItems)).append("\n");
    sb.append("    partyTypeString: ").append(toIndentedString(partyTypeString)).append("\n");
    sb.append("    genderString: ").append(toIndentedString(genderString)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ProfileId");
    openapiFields.add("AccountNumber");
    openapiFields.add("AdditionalInformation");
    openapiFields.add("PartyType");
    openapiFields.add("BusinessName");
    openapiFields.add("FirstName");
    openapiFields.add("MiddleName");
    openapiFields.add("LastName");
    openapiFields.add("BirthDate");
    openapiFields.add("Gender");
    openapiFields.add("PhoneNumber");
    openapiFields.add("MobilePhoneNumber");
    openapiFields.add("HomePhoneNumber");
    openapiFields.add("BusinessPhoneNumber");
    openapiFields.add("EmailAddress");
    openapiFields.add("PersonalEmailAddress");
    openapiFields.add("BusinessEmailAddress");
    openapiFields.add("Address");
    openapiFields.add("ShippingAddress");
    openapiFields.add("MailingAddress");
    openapiFields.add("BillingAddress");
    openapiFields.add("Attributes");
    openapiFields.add("FoundByItems");
    openapiFields.add("PartyTypeString");
    openapiFields.add("GenderString");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Profile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Profile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Profile is not found in the empty JSON string", Profile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Profile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Profile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ProfileId`
      if (jsonObj.get("ProfileId") != null && !jsonObj.get("ProfileId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ProfileId"));
      }
      // validate the optional field `AccountNumber`
      if (jsonObj.get("AccountNumber") != null && !jsonObj.get("AccountNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AccountNumber"));
      }
      // validate the optional field `AdditionalInformation`
      if (jsonObj.get("AdditionalInformation") != null && !jsonObj.get("AdditionalInformation").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AdditionalInformation"));
      }
      // validate the optional field `PartyType`
      if (jsonObj.get("PartyType") != null && !jsonObj.get("PartyType").isJsonNull()) {
        PartyType.validateJsonElement(jsonObj.get("PartyType"));
      }
      // validate the optional field `BusinessName`
      if (jsonObj.get("BusinessName") != null && !jsonObj.get("BusinessName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BusinessName"));
      }
      // validate the optional field `FirstName`
      if (jsonObj.get("FirstName") != null && !jsonObj.get("FirstName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FirstName"));
      }
      // validate the optional field `MiddleName`
      if (jsonObj.get("MiddleName") != null && !jsonObj.get("MiddleName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MiddleName"));
      }
      // validate the optional field `LastName`
      if (jsonObj.get("LastName") != null && !jsonObj.get("LastName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastName"));
      }
      // validate the optional field `BirthDate`
      if (jsonObj.get("BirthDate") != null && !jsonObj.get("BirthDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BirthDate"));
      }
      // validate the optional field `Gender`
      if (jsonObj.get("Gender") != null && !jsonObj.get("Gender").isJsonNull()) {
        Gender.validateJsonElement(jsonObj.get("Gender"));
      }
      // validate the optional field `PhoneNumber`
      if (jsonObj.get("PhoneNumber") != null && !jsonObj.get("PhoneNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PhoneNumber"));
      }
      // validate the optional field `MobilePhoneNumber`
      if (jsonObj.get("MobilePhoneNumber") != null && !jsonObj.get("MobilePhoneNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MobilePhoneNumber"));
      }
      // validate the optional field `HomePhoneNumber`
      if (jsonObj.get("HomePhoneNumber") != null && !jsonObj.get("HomePhoneNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HomePhoneNumber"));
      }
      // validate the optional field `BusinessPhoneNumber`
      if (jsonObj.get("BusinessPhoneNumber") != null && !jsonObj.get("BusinessPhoneNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BusinessPhoneNumber"));
      }
      // validate the optional field `EmailAddress`
      if (jsonObj.get("EmailAddress") != null && !jsonObj.get("EmailAddress").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EmailAddress"));
      }
      // validate the optional field `PersonalEmailAddress`
      if (jsonObj.get("PersonalEmailAddress") != null && !jsonObj.get("PersonalEmailAddress").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PersonalEmailAddress"));
      }
      // validate the optional field `BusinessEmailAddress`
      if (jsonObj.get("BusinessEmailAddress") != null && !jsonObj.get("BusinessEmailAddress").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BusinessEmailAddress"));
      }
      // validate the optional field `Address`
      if (jsonObj.get("Address") != null && !jsonObj.get("Address").isJsonNull()) {
        CreateProfileRequestAddress.validateJsonElement(jsonObj.get("Address"));
      }
      // validate the optional field `ShippingAddress`
      if (jsonObj.get("ShippingAddress") != null && !jsonObj.get("ShippingAddress").isJsonNull()) {
        CreateProfileRequestShippingAddress.validateJsonElement(jsonObj.get("ShippingAddress"));
      }
      // validate the optional field `MailingAddress`
      if (jsonObj.get("MailingAddress") != null && !jsonObj.get("MailingAddress").isJsonNull()) {
        CreateProfileRequestMailingAddress.validateJsonElement(jsonObj.get("MailingAddress"));
      }
      // validate the optional field `BillingAddress`
      if (jsonObj.get("BillingAddress") != null && !jsonObj.get("BillingAddress").isJsonNull()) {
        CreateProfileRequestBillingAddress.validateJsonElement(jsonObj.get("BillingAddress"));
      }
      // validate the optional field `Attributes`
      if (jsonObj.get("Attributes") != null && !jsonObj.get("Attributes").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Attributes"));
      }
      // validate the optional field `FoundByItems`
      if (jsonObj.get("FoundByItems") != null && !jsonObj.get("FoundByItems").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("FoundByItems"));
      }
      // validate the optional field `PartyTypeString`
      if (jsonObj.get("PartyTypeString") != null && !jsonObj.get("PartyTypeString").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PartyTypeString"));
      }
      // validate the optional field `GenderString`
      if (jsonObj.get("GenderString") != null && !jsonObj.get("GenderString").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GenderString"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Profile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Profile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Profile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Profile.class));

       return (TypeAdapter<T>) new TypeAdapter<Profile>() {
           @Override
           public void write(JsonWriter out, Profile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Profile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Profile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Profile
   * @throws IOException if the JSON string is invalid with respect to Profile
   */
  public static Profile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Profile.class);
  }

  /**
   * Convert an instance of Profile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

