/*
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A duplicate customer profile that is to be merged into a main profile. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:36.569162-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FieldSourceProfileIds {
  public static final String SERIALIZED_NAME_ACCOUNT_NUMBER = "AccountNumber";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NUMBER)
  private String accountNumber;

  public static final String SERIALIZED_NAME_ADDITIONAL_INFORMATION = "AdditionalInformation";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_INFORMATION)
  private String additionalInformation;

  public static final String SERIALIZED_NAME_PARTY_TYPE = "PartyType";
  @SerializedName(SERIALIZED_NAME_PARTY_TYPE)
  private String partyType;

  public static final String SERIALIZED_NAME_BUSINESS_NAME = "BusinessName";
  @SerializedName(SERIALIZED_NAME_BUSINESS_NAME)
  private String businessName;

  public static final String SERIALIZED_NAME_FIRST_NAME = "FirstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "MiddleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private String middleName;

  public static final String SERIALIZED_NAME_LAST_NAME = "LastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_BIRTH_DATE = "BirthDate";
  @SerializedName(SERIALIZED_NAME_BIRTH_DATE)
  private String birthDate;

  public static final String SERIALIZED_NAME_GENDER = "Gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "PhoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_MOBILE_PHONE_NUMBER = "MobilePhoneNumber";
  @SerializedName(SERIALIZED_NAME_MOBILE_PHONE_NUMBER)
  private String mobilePhoneNumber;

  public static final String SERIALIZED_NAME_HOME_PHONE_NUMBER = "HomePhoneNumber";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE_NUMBER)
  private String homePhoneNumber;

  public static final String SERIALIZED_NAME_BUSINESS_PHONE_NUMBER = "BusinessPhoneNumber";
  @SerializedName(SERIALIZED_NAME_BUSINESS_PHONE_NUMBER)
  private String businessPhoneNumber;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS = "EmailAddress";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS)
  private String emailAddress;

  public static final String SERIALIZED_NAME_PERSONAL_EMAIL_ADDRESS = "PersonalEmailAddress";
  @SerializedName(SERIALIZED_NAME_PERSONAL_EMAIL_ADDRESS)
  private String personalEmailAddress;

  public static final String SERIALIZED_NAME_BUSINESS_EMAIL_ADDRESS = "BusinessEmailAddress";
  @SerializedName(SERIALIZED_NAME_BUSINESS_EMAIL_ADDRESS)
  private String businessEmailAddress;

  public static final String SERIALIZED_NAME_ADDRESS = "Address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESS = "ShippingAddress";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESS)
  private String shippingAddress;

  public static final String SERIALIZED_NAME_MAILING_ADDRESS = "MailingAddress";
  @SerializedName(SERIALIZED_NAME_MAILING_ADDRESS)
  private String mailingAddress;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS = "BillingAddress";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS)
  private String billingAddress;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "Attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map attributes;

  public FieldSourceProfileIds() {
  }

  public FieldSourceProfileIds accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

  /**
   * Get accountNumber
   * @return accountNumber
   */
  @javax.annotation.Nullable
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }


  public FieldSourceProfileIds additionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
    return this;
  }

  /**
   * Get additionalInformation
   * @return additionalInformation
   */
  @javax.annotation.Nullable
  public String getAdditionalInformation() {
    return additionalInformation;
  }

  public void setAdditionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
  }


  public FieldSourceProfileIds partyType(String partyType) {
    this.partyType = partyType;
    return this;
  }

  /**
   * Get partyType
   * @return partyType
   */
  @javax.annotation.Nullable
  public String getPartyType() {
    return partyType;
  }

  public void setPartyType(String partyType) {
    this.partyType = partyType;
  }


  public FieldSourceProfileIds businessName(String businessName) {
    this.businessName = businessName;
    return this;
  }

  /**
   * Get businessName
   * @return businessName
   */
  @javax.annotation.Nullable
  public String getBusinessName() {
    return businessName;
  }

  public void setBusinessName(String businessName) {
    this.businessName = businessName;
  }


  public FieldSourceProfileIds firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public FieldSourceProfileIds middleName(String middleName) {
    this.middleName = middleName;
    return this;
  }

  /**
   * Get middleName
   * @return middleName
   */
  @javax.annotation.Nullable
  public String getMiddleName() {
    return middleName;
  }

  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }


  public FieldSourceProfileIds lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public FieldSourceProfileIds birthDate(String birthDate) {
    this.birthDate = birthDate;
    return this;
  }

  /**
   * Get birthDate
   * @return birthDate
   */
  @javax.annotation.Nullable
  public String getBirthDate() {
    return birthDate;
  }

  public void setBirthDate(String birthDate) {
    this.birthDate = birthDate;
  }


  public FieldSourceProfileIds gender(String gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Get gender
   * @return gender
   */
  @javax.annotation.Nullable
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }


  public FieldSourceProfileIds phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Get phoneNumber
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public FieldSourceProfileIds mobilePhoneNumber(String mobilePhoneNumber) {
    this.mobilePhoneNumber = mobilePhoneNumber;
    return this;
  }

  /**
   * Get mobilePhoneNumber
   * @return mobilePhoneNumber
   */
  @javax.annotation.Nullable
  public String getMobilePhoneNumber() {
    return mobilePhoneNumber;
  }

  public void setMobilePhoneNumber(String mobilePhoneNumber) {
    this.mobilePhoneNumber = mobilePhoneNumber;
  }


  public FieldSourceProfileIds homePhoneNumber(String homePhoneNumber) {
    this.homePhoneNumber = homePhoneNumber;
    return this;
  }

  /**
   * Get homePhoneNumber
   * @return homePhoneNumber
   */
  @javax.annotation.Nullable
  public String getHomePhoneNumber() {
    return homePhoneNumber;
  }

  public void setHomePhoneNumber(String homePhoneNumber) {
    this.homePhoneNumber = homePhoneNumber;
  }


  public FieldSourceProfileIds businessPhoneNumber(String businessPhoneNumber) {
    this.businessPhoneNumber = businessPhoneNumber;
    return this;
  }

  /**
   * Get businessPhoneNumber
   * @return businessPhoneNumber
   */
  @javax.annotation.Nullable
  public String getBusinessPhoneNumber() {
    return businessPhoneNumber;
  }

  public void setBusinessPhoneNumber(String businessPhoneNumber) {
    this.businessPhoneNumber = businessPhoneNumber;
  }


  public FieldSourceProfileIds emailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

  /**
   * Get emailAddress
   * @return emailAddress
   */
  @javax.annotation.Nullable
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }


  public FieldSourceProfileIds personalEmailAddress(String personalEmailAddress) {
    this.personalEmailAddress = personalEmailAddress;
    return this;
  }

  /**
   * Get personalEmailAddress
   * @return personalEmailAddress
   */
  @javax.annotation.Nullable
  public String getPersonalEmailAddress() {
    return personalEmailAddress;
  }

  public void setPersonalEmailAddress(String personalEmailAddress) {
    this.personalEmailAddress = personalEmailAddress;
  }


  public FieldSourceProfileIds businessEmailAddress(String businessEmailAddress) {
    this.businessEmailAddress = businessEmailAddress;
    return this;
  }

  /**
   * Get businessEmailAddress
   * @return businessEmailAddress
   */
  @javax.annotation.Nullable
  public String getBusinessEmailAddress() {
    return businessEmailAddress;
  }

  public void setBusinessEmailAddress(String businessEmailAddress) {
    this.businessEmailAddress = businessEmailAddress;
  }


  public FieldSourceProfileIds address(String address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  public FieldSourceProfileIds shippingAddress(String shippingAddress) {
    this.shippingAddress = shippingAddress;
    return this;
  }

  /**
   * Get shippingAddress
   * @return shippingAddress
   */
  @javax.annotation.Nullable
  public String getShippingAddress() {
    return shippingAddress;
  }

  public void setShippingAddress(String shippingAddress) {
    this.shippingAddress = shippingAddress;
  }


  public FieldSourceProfileIds mailingAddress(String mailingAddress) {
    this.mailingAddress = mailingAddress;
    return this;
  }

  /**
   * Get mailingAddress
   * @return mailingAddress
   */
  @javax.annotation.Nullable
  public String getMailingAddress() {
    return mailingAddress;
  }

  public void setMailingAddress(String mailingAddress) {
    this.mailingAddress = mailingAddress;
  }


  public FieldSourceProfileIds billingAddress(String billingAddress) {
    this.billingAddress = billingAddress;
    return this;
  }

  /**
   * Get billingAddress
   * @return billingAddress
   */
  @javax.annotation.Nullable
  public String getBillingAddress() {
    return billingAddress;
  }

  public void setBillingAddress(String billingAddress) {
    this.billingAddress = billingAddress;
  }


  public FieldSourceProfileIds attributes(Map attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * Get attributes
   * @return attributes
   */
  @javax.annotation.Nullable
  public Map getAttributes() {
    return attributes;
  }

  public void setAttributes(Map attributes) {
    this.attributes = attributes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FieldSourceProfileIds fieldSourceProfileIds = (FieldSourceProfileIds) o;
    return Objects.equals(this.accountNumber, fieldSourceProfileIds.accountNumber) &&
        Objects.equals(this.additionalInformation, fieldSourceProfileIds.additionalInformation) &&
        Objects.equals(this.partyType, fieldSourceProfileIds.partyType) &&
        Objects.equals(this.businessName, fieldSourceProfileIds.businessName) &&
        Objects.equals(this.firstName, fieldSourceProfileIds.firstName) &&
        Objects.equals(this.middleName, fieldSourceProfileIds.middleName) &&
        Objects.equals(this.lastName, fieldSourceProfileIds.lastName) &&
        Objects.equals(this.birthDate, fieldSourceProfileIds.birthDate) &&
        Objects.equals(this.gender, fieldSourceProfileIds.gender) &&
        Objects.equals(this.phoneNumber, fieldSourceProfileIds.phoneNumber) &&
        Objects.equals(this.mobilePhoneNumber, fieldSourceProfileIds.mobilePhoneNumber) &&
        Objects.equals(this.homePhoneNumber, fieldSourceProfileIds.homePhoneNumber) &&
        Objects.equals(this.businessPhoneNumber, fieldSourceProfileIds.businessPhoneNumber) &&
        Objects.equals(this.emailAddress, fieldSourceProfileIds.emailAddress) &&
        Objects.equals(this.personalEmailAddress, fieldSourceProfileIds.personalEmailAddress) &&
        Objects.equals(this.businessEmailAddress, fieldSourceProfileIds.businessEmailAddress) &&
        Objects.equals(this.address, fieldSourceProfileIds.address) &&
        Objects.equals(this.shippingAddress, fieldSourceProfileIds.shippingAddress) &&
        Objects.equals(this.mailingAddress, fieldSourceProfileIds.mailingAddress) &&
        Objects.equals(this.billingAddress, fieldSourceProfileIds.billingAddress) &&
        Objects.equals(this.attributes, fieldSourceProfileIds.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountNumber, additionalInformation, partyType, businessName, firstName, middleName, lastName, birthDate, gender, phoneNumber, mobilePhoneNumber, homePhoneNumber, businessPhoneNumber, emailAddress, personalEmailAddress, businessEmailAddress, address, shippingAddress, mailingAddress, billingAddress, attributes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FieldSourceProfileIds {\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("    partyType: ").append(toIndentedString(partyType)).append("\n");
    sb.append("    businessName: ").append(toIndentedString(businessName)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    mobilePhoneNumber: ").append(toIndentedString(mobilePhoneNumber)).append("\n");
    sb.append("    homePhoneNumber: ").append(toIndentedString(homePhoneNumber)).append("\n");
    sb.append("    businessPhoneNumber: ").append(toIndentedString(businessPhoneNumber)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    personalEmailAddress: ").append(toIndentedString(personalEmailAddress)).append("\n");
    sb.append("    businessEmailAddress: ").append(toIndentedString(businessEmailAddress)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    mailingAddress: ").append(toIndentedString(mailingAddress)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccountNumber");
    openapiFields.add("AdditionalInformation");
    openapiFields.add("PartyType");
    openapiFields.add("BusinessName");
    openapiFields.add("FirstName");
    openapiFields.add("MiddleName");
    openapiFields.add("LastName");
    openapiFields.add("BirthDate");
    openapiFields.add("Gender");
    openapiFields.add("PhoneNumber");
    openapiFields.add("MobilePhoneNumber");
    openapiFields.add("HomePhoneNumber");
    openapiFields.add("BusinessPhoneNumber");
    openapiFields.add("EmailAddress");
    openapiFields.add("PersonalEmailAddress");
    openapiFields.add("BusinessEmailAddress");
    openapiFields.add("Address");
    openapiFields.add("ShippingAddress");
    openapiFields.add("MailingAddress");
    openapiFields.add("BillingAddress");
    openapiFields.add("Attributes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FieldSourceProfileIds
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FieldSourceProfileIds.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FieldSourceProfileIds is not found in the empty JSON string", FieldSourceProfileIds.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FieldSourceProfileIds.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FieldSourceProfileIds` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AccountNumber`
      if (jsonObj.get("AccountNumber") != null && !jsonObj.get("AccountNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AccountNumber"));
      }
      // validate the optional field `AdditionalInformation`
      if (jsonObj.get("AdditionalInformation") != null && !jsonObj.get("AdditionalInformation").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AdditionalInformation"));
      }
      // validate the optional field `PartyType`
      if (jsonObj.get("PartyType") != null && !jsonObj.get("PartyType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PartyType"));
      }
      // validate the optional field `BusinessName`
      if (jsonObj.get("BusinessName") != null && !jsonObj.get("BusinessName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BusinessName"));
      }
      // validate the optional field `FirstName`
      if (jsonObj.get("FirstName") != null && !jsonObj.get("FirstName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FirstName"));
      }
      // validate the optional field `MiddleName`
      if (jsonObj.get("MiddleName") != null && !jsonObj.get("MiddleName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MiddleName"));
      }
      // validate the optional field `LastName`
      if (jsonObj.get("LastName") != null && !jsonObj.get("LastName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastName"));
      }
      // validate the optional field `BirthDate`
      if (jsonObj.get("BirthDate") != null && !jsonObj.get("BirthDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BirthDate"));
      }
      // validate the optional field `Gender`
      if (jsonObj.get("Gender") != null && !jsonObj.get("Gender").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Gender"));
      }
      // validate the optional field `PhoneNumber`
      if (jsonObj.get("PhoneNumber") != null && !jsonObj.get("PhoneNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PhoneNumber"));
      }
      // validate the optional field `MobilePhoneNumber`
      if (jsonObj.get("MobilePhoneNumber") != null && !jsonObj.get("MobilePhoneNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MobilePhoneNumber"));
      }
      // validate the optional field `HomePhoneNumber`
      if (jsonObj.get("HomePhoneNumber") != null && !jsonObj.get("HomePhoneNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HomePhoneNumber"));
      }
      // validate the optional field `BusinessPhoneNumber`
      if (jsonObj.get("BusinessPhoneNumber") != null && !jsonObj.get("BusinessPhoneNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BusinessPhoneNumber"));
      }
      // validate the optional field `EmailAddress`
      if (jsonObj.get("EmailAddress") != null && !jsonObj.get("EmailAddress").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EmailAddress"));
      }
      // validate the optional field `PersonalEmailAddress`
      if (jsonObj.get("PersonalEmailAddress") != null && !jsonObj.get("PersonalEmailAddress").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PersonalEmailAddress"));
      }
      // validate the optional field `BusinessEmailAddress`
      if (jsonObj.get("BusinessEmailAddress") != null && !jsonObj.get("BusinessEmailAddress").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BusinessEmailAddress"));
      }
      // validate the optional field `Address`
      if (jsonObj.get("Address") != null && !jsonObj.get("Address").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Address"));
      }
      // validate the optional field `ShippingAddress`
      if (jsonObj.get("ShippingAddress") != null && !jsonObj.get("ShippingAddress").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ShippingAddress"));
      }
      // validate the optional field `MailingAddress`
      if (jsonObj.get("MailingAddress") != null && !jsonObj.get("MailingAddress").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MailingAddress"));
      }
      // validate the optional field `BillingAddress`
      if (jsonObj.get("BillingAddress") != null && !jsonObj.get("BillingAddress").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BillingAddress"));
      }
      // validate the optional field `Attributes`
      if (jsonObj.get("Attributes") != null && !jsonObj.get("Attributes").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Attributes"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FieldSourceProfileIds.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FieldSourceProfileIds' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FieldSourceProfileIds> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FieldSourceProfileIds.class));

       return (TypeAdapter<T>) new TypeAdapter<FieldSourceProfileIds>() {
           @Override
           public void write(JsonWriter out, FieldSourceProfileIds value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FieldSourceProfileIds read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FieldSourceProfileIds given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FieldSourceProfileIds
   * @throws IOException if the JSON string is invalid with respect to FieldSourceProfileIds
   */
  public static FieldSourceProfileIds fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FieldSourceProfileIds.class);
  }

  /**
   * Convert an instance of FieldSourceProfileIds to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

