/*
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.GetIdentityResolutionJobResponseAutoMerging;
import org.openapitools.client.model.GetIdentityResolutionJobResponseExportingLocation;
import org.openapitools.client.model.GetIdentityResolutionJobResponseJobStats;
import org.openapitools.client.model.IdentityResolutionJobStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetIdentityResolutionJobResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:25:36.569162-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetIdentityResolutionJobResponse {
  public static final String SERIALIZED_NAME_DOMAIN_NAME = "DomainName";
  @SerializedName(SERIALIZED_NAME_DOMAIN_NAME)
  private String domainName;

  public static final String SERIALIZED_NAME_JOB_ID = "JobId";
  @SerializedName(SERIALIZED_NAME_JOB_ID)
  private String jobId;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private IdentityResolutionJobStatus status;

  public static final String SERIALIZED_NAME_MESSAGE = "Message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_JOB_START_TIME = "JobStartTime";
  @SerializedName(SERIALIZED_NAME_JOB_START_TIME)
  private OffsetDateTime jobStartTime;

  public static final String SERIALIZED_NAME_JOB_END_TIME = "JobEndTime";
  @SerializedName(SERIALIZED_NAME_JOB_END_TIME)
  private OffsetDateTime jobEndTime;

  public static final String SERIALIZED_NAME_LAST_UPDATED_AT = "LastUpdatedAt";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_AT)
  private OffsetDateTime lastUpdatedAt;

  public static final String SERIALIZED_NAME_JOB_EXPIRATION_TIME = "JobExpirationTime";
  @SerializedName(SERIALIZED_NAME_JOB_EXPIRATION_TIME)
  private OffsetDateTime jobExpirationTime;

  public static final String SERIALIZED_NAME_AUTO_MERGING = "AutoMerging";
  @SerializedName(SERIALIZED_NAME_AUTO_MERGING)
  private GetIdentityResolutionJobResponseAutoMerging autoMerging;

  public static final String SERIALIZED_NAME_EXPORTING_LOCATION = "ExportingLocation";
  @SerializedName(SERIALIZED_NAME_EXPORTING_LOCATION)
  private GetIdentityResolutionJobResponseExportingLocation exportingLocation;

  public static final String SERIALIZED_NAME_JOB_STATS = "JobStats";
  @SerializedName(SERIALIZED_NAME_JOB_STATS)
  private GetIdentityResolutionJobResponseJobStats jobStats;

  public GetIdentityResolutionJobResponse() {
  }

  public GetIdentityResolutionJobResponse domainName(String domainName) {
    this.domainName = domainName;
    return this;
  }

  /**
   * Get domainName
   * @return domainName
   */
  @javax.annotation.Nullable
  public String getDomainName() {
    return domainName;
  }

  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }


  public GetIdentityResolutionJobResponse jobId(String jobId) {
    this.jobId = jobId;
    return this;
  }

  /**
   * Get jobId
   * @return jobId
   */
  @javax.annotation.Nullable
  public String getJobId() {
    return jobId;
  }

  public void setJobId(String jobId) {
    this.jobId = jobId;
  }


  public GetIdentityResolutionJobResponse status(IdentityResolutionJobStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public IdentityResolutionJobStatus getStatus() {
    return status;
  }

  public void setStatus(IdentityResolutionJobStatus status) {
    this.status = status;
  }


  public GetIdentityResolutionJobResponse message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public GetIdentityResolutionJobResponse jobStartTime(OffsetDateTime jobStartTime) {
    this.jobStartTime = jobStartTime;
    return this;
  }

  /**
   * Get jobStartTime
   * @return jobStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getJobStartTime() {
    return jobStartTime;
  }

  public void setJobStartTime(OffsetDateTime jobStartTime) {
    this.jobStartTime = jobStartTime;
  }


  public GetIdentityResolutionJobResponse jobEndTime(OffsetDateTime jobEndTime) {
    this.jobEndTime = jobEndTime;
    return this;
  }

  /**
   * Get jobEndTime
   * @return jobEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getJobEndTime() {
    return jobEndTime;
  }

  public void setJobEndTime(OffsetDateTime jobEndTime) {
    this.jobEndTime = jobEndTime;
  }


  public GetIdentityResolutionJobResponse lastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

  /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(OffsetDateTime lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }


  public GetIdentityResolutionJobResponse jobExpirationTime(OffsetDateTime jobExpirationTime) {
    this.jobExpirationTime = jobExpirationTime;
    return this;
  }

  /**
   * Get jobExpirationTime
   * @return jobExpirationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getJobExpirationTime() {
    return jobExpirationTime;
  }

  public void setJobExpirationTime(OffsetDateTime jobExpirationTime) {
    this.jobExpirationTime = jobExpirationTime;
  }


  public GetIdentityResolutionJobResponse autoMerging(GetIdentityResolutionJobResponseAutoMerging autoMerging) {
    this.autoMerging = autoMerging;
    return this;
  }

  /**
   * Get autoMerging
   * @return autoMerging
   */
  @javax.annotation.Nullable
  public GetIdentityResolutionJobResponseAutoMerging getAutoMerging() {
    return autoMerging;
  }

  public void setAutoMerging(GetIdentityResolutionJobResponseAutoMerging autoMerging) {
    this.autoMerging = autoMerging;
  }


  public GetIdentityResolutionJobResponse exportingLocation(GetIdentityResolutionJobResponseExportingLocation exportingLocation) {
    this.exportingLocation = exportingLocation;
    return this;
  }

  /**
   * Get exportingLocation
   * @return exportingLocation
   */
  @javax.annotation.Nullable
  public GetIdentityResolutionJobResponseExportingLocation getExportingLocation() {
    return exportingLocation;
  }

  public void setExportingLocation(GetIdentityResolutionJobResponseExportingLocation exportingLocation) {
    this.exportingLocation = exportingLocation;
  }


  public GetIdentityResolutionJobResponse jobStats(GetIdentityResolutionJobResponseJobStats jobStats) {
    this.jobStats = jobStats;
    return this;
  }

  /**
   * Get jobStats
   * @return jobStats
   */
  @javax.annotation.Nullable
  public GetIdentityResolutionJobResponseJobStats getJobStats() {
    return jobStats;
  }

  public void setJobStats(GetIdentityResolutionJobResponseJobStats jobStats) {
    this.jobStats = jobStats;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetIdentityResolutionJobResponse getIdentityResolutionJobResponse = (GetIdentityResolutionJobResponse) o;
    return Objects.equals(this.domainName, getIdentityResolutionJobResponse.domainName) &&
        Objects.equals(this.jobId, getIdentityResolutionJobResponse.jobId) &&
        Objects.equals(this.status, getIdentityResolutionJobResponse.status) &&
        Objects.equals(this.message, getIdentityResolutionJobResponse.message) &&
        Objects.equals(this.jobStartTime, getIdentityResolutionJobResponse.jobStartTime) &&
        Objects.equals(this.jobEndTime, getIdentityResolutionJobResponse.jobEndTime) &&
        Objects.equals(this.lastUpdatedAt, getIdentityResolutionJobResponse.lastUpdatedAt) &&
        Objects.equals(this.jobExpirationTime, getIdentityResolutionJobResponse.jobExpirationTime) &&
        Objects.equals(this.autoMerging, getIdentityResolutionJobResponse.autoMerging) &&
        Objects.equals(this.exportingLocation, getIdentityResolutionJobResponse.exportingLocation) &&
        Objects.equals(this.jobStats, getIdentityResolutionJobResponse.jobStats);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domainName, jobId, status, message, jobStartTime, jobEndTime, lastUpdatedAt, jobExpirationTime, autoMerging, exportingLocation, jobStats);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetIdentityResolutionJobResponse {\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    jobStartTime: ").append(toIndentedString(jobStartTime)).append("\n");
    sb.append("    jobEndTime: ").append(toIndentedString(jobEndTime)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    jobExpirationTime: ").append(toIndentedString(jobExpirationTime)).append("\n");
    sb.append("    autoMerging: ").append(toIndentedString(autoMerging)).append("\n");
    sb.append("    exportingLocation: ").append(toIndentedString(exportingLocation)).append("\n");
    sb.append("    jobStats: ").append(toIndentedString(jobStats)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DomainName");
    openapiFields.add("JobId");
    openapiFields.add("Status");
    openapiFields.add("Message");
    openapiFields.add("JobStartTime");
    openapiFields.add("JobEndTime");
    openapiFields.add("LastUpdatedAt");
    openapiFields.add("JobExpirationTime");
    openapiFields.add("AutoMerging");
    openapiFields.add("ExportingLocation");
    openapiFields.add("JobStats");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetIdentityResolutionJobResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetIdentityResolutionJobResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetIdentityResolutionJobResponse is not found in the empty JSON string", GetIdentityResolutionJobResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetIdentityResolutionJobResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetIdentityResolutionJobResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `DomainName`
      if (jsonObj.get("DomainName") != null && !jsonObj.get("DomainName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DomainName"));
      }
      // validate the optional field `JobId`
      if (jsonObj.get("JobId") != null && !jsonObj.get("JobId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("JobId"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        IdentityResolutionJobStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `Message`
      if (jsonObj.get("Message") != null && !jsonObj.get("Message").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Message"));
      }
      // validate the optional field `JobStartTime`
      if (jsonObj.get("JobStartTime") != null && !jsonObj.get("JobStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("JobStartTime"));
      }
      // validate the optional field `JobEndTime`
      if (jsonObj.get("JobEndTime") != null && !jsonObj.get("JobEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("JobEndTime"));
      }
      // validate the optional field `LastUpdatedAt`
      if (jsonObj.get("LastUpdatedAt") != null && !jsonObj.get("LastUpdatedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastUpdatedAt"));
      }
      // validate the optional field `JobExpirationTime`
      if (jsonObj.get("JobExpirationTime") != null && !jsonObj.get("JobExpirationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("JobExpirationTime"));
      }
      // validate the optional field `AutoMerging`
      if (jsonObj.get("AutoMerging") != null && !jsonObj.get("AutoMerging").isJsonNull()) {
        GetIdentityResolutionJobResponseAutoMerging.validateJsonElement(jsonObj.get("AutoMerging"));
      }
      // validate the optional field `ExportingLocation`
      if (jsonObj.get("ExportingLocation") != null && !jsonObj.get("ExportingLocation").isJsonNull()) {
        GetIdentityResolutionJobResponseExportingLocation.validateJsonElement(jsonObj.get("ExportingLocation"));
      }
      // validate the optional field `JobStats`
      if (jsonObj.get("JobStats") != null && !jsonObj.get("JobStats").isJsonNull()) {
        GetIdentityResolutionJobResponseJobStats.validateJsonElement(jsonObj.get("JobStats"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetIdentityResolutionJobResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetIdentityResolutionJobResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetIdentityResolutionJobResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetIdentityResolutionJobResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetIdentityResolutionJobResponse>() {
           @Override
           public void write(JsonWriter out, GetIdentityResolutionJobResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetIdentityResolutionJobResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetIdentityResolutionJobResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetIdentityResolutionJobResponse
   * @throws IOException if the JSON string is invalid with respect to GetIdentityResolutionJobResponse
   */
  public static GetIdentityResolutionJobResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetIdentityResolutionJobResponse.class);
  }

  /**
   * Convert an instance of GetIdentityResolutionJobResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

