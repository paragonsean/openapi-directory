/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateCalculatedAttributeDefinition_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateCalculatedAttributeDefinition_request::OAIUpdateCalculatedAttributeDefinition_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateCalculatedAttributeDefinition_request::OAIUpdateCalculatedAttributeDefinition_request() {
    this->initializeModel();
}

OAIUpdateCalculatedAttributeDefinition_request::~OAIUpdateCalculatedAttributeDefinition_request() {}

void OAIUpdateCalculatedAttributeDefinition_request::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_conditions_isSet = false;
    m_conditions_isValid = false;
}

void OAIUpdateCalculatedAttributeDefinition_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateCalculatedAttributeDefinition_request::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("DisplayName")]);
    m_display_name_isSet = !json[QString("DisplayName")].isNull() && m_display_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_conditions_isValid = ::OpenAPI::fromJsonValue(m_conditions, json[QString("Conditions")]);
    m_conditions_isSet = !json[QString("Conditions")].isNull() && m_conditions_isValid;
}

QString OAIUpdateCalculatedAttributeDefinition_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateCalculatedAttributeDefinition_request::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("DisplayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_conditions.isSet()) {
        obj.insert(QString("Conditions"), ::OpenAPI::toJsonValue(m_conditions));
    }
    return obj;
}

QString OAIUpdateCalculatedAttributeDefinition_request::getDisplayName() const {
    return m_display_name;
}
void OAIUpdateCalculatedAttributeDefinition_request::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinition_request::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIUpdateCalculatedAttributeDefinition_request::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIUpdateCalculatedAttributeDefinition_request::getDescription() const {
    return m_description;
}
void OAIUpdateCalculatedAttributeDefinition_request::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinition_request::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateCalculatedAttributeDefinition_request::is_description_Valid() const{
    return m_description_isValid;
}

OAIUpdateCalculatedAttributeDefinition_request_Conditions OAIUpdateCalculatedAttributeDefinition_request::getConditions() const {
    return m_conditions;
}
void OAIUpdateCalculatedAttributeDefinition_request::setConditions(const OAIUpdateCalculatedAttributeDefinition_request_Conditions &conditions) {
    m_conditions = conditions;
    m_conditions_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinition_request::is_conditions_Set() const{
    return m_conditions_isSet;
}

bool OAIUpdateCalculatedAttributeDefinition_request::is_conditions_Valid() const{
    return m_conditions_isValid;
}

bool OAIUpdateCalculatedAttributeDefinition_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conditions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateCalculatedAttributeDefinition_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
