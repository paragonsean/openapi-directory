/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchProfilesRequest.h
 *
 * 
 */

#ifndef OAISearchProfilesRequest_H
#define OAISearchProfilesRequest_H

#include <QJsonObject>

#include "OAILogicalOperator.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISearchProfilesRequest : public OAIObject {
public:
    OAISearchProfilesRequest();
    OAISearchProfilesRequest(QString json);
    ~OAISearchProfilesRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKeyName() const;
    void setKeyName(const QString &key_name);
    bool is_key_name_Set() const;
    bool is_key_name_Valid() const;

    QList getValues() const;
    void setValues(const QList &values);
    bool is_values_Set() const;
    bool is_values_Valid() const;

    QList getAdditionalSearchKeys() const;
    void setAdditionalSearchKeys(const QList &additional_search_keys);
    bool is_additional_search_keys_Set() const;
    bool is_additional_search_keys_Valid() const;

    OAILogicalOperator getLogicalOperator() const;
    void setLogicalOperator(const OAILogicalOperator &logical_operator);
    bool is_logical_operator_Set() const;
    bool is_logical_operator_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_key_name;
    bool m_key_name_isSet;
    bool m_key_name_isValid;

    QList m_values;
    bool m_values_isSet;
    bool m_values_isValid;

    QList m_additional_search_keys;
    bool m_additional_search_keys_isSet;
    bool m_additional_search_keys_isValid;

    OAILogicalOperator m_logical_operator;
    bool m_logical_operator_isSet;
    bool m_logical_operator_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchProfilesRequest)

#endif // OAISearchProfilesRequest_H
