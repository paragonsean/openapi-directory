/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISourceFlowConfig_IncrementalPullConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISourceFlowConfig_IncrementalPullConfig::OAISourceFlowConfig_IncrementalPullConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISourceFlowConfig_IncrementalPullConfig::OAISourceFlowConfig_IncrementalPullConfig() {
    this->initializeModel();
}

OAISourceFlowConfig_IncrementalPullConfig::~OAISourceFlowConfig_IncrementalPullConfig() {}

void OAISourceFlowConfig_IncrementalPullConfig::initializeModel() {

    m_datetime_type_field_name_isSet = false;
    m_datetime_type_field_name_isValid = false;
}

void OAISourceFlowConfig_IncrementalPullConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISourceFlowConfig_IncrementalPullConfig::fromJsonObject(QJsonObject json) {

    m_datetime_type_field_name_isValid = ::OpenAPI::fromJsonValue(m_datetime_type_field_name, json[QString("DatetimeTypeFieldName")]);
    m_datetime_type_field_name_isSet = !json[QString("DatetimeTypeFieldName")].isNull() && m_datetime_type_field_name_isValid;
}

QString OAISourceFlowConfig_IncrementalPullConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISourceFlowConfig_IncrementalPullConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_datetime_type_field_name_isSet) {
        obj.insert(QString("DatetimeTypeFieldName"), ::OpenAPI::toJsonValue(m_datetime_type_field_name));
    }
    return obj;
}

QString OAISourceFlowConfig_IncrementalPullConfig::getDatetimeTypeFieldName() const {
    return m_datetime_type_field_name;
}
void OAISourceFlowConfig_IncrementalPullConfig::setDatetimeTypeFieldName(const QString &datetime_type_field_name) {
    m_datetime_type_field_name = datetime_type_field_name;
    m_datetime_type_field_name_isSet = true;
}

bool OAISourceFlowConfig_IncrementalPullConfig::is_datetime_type_field_name_Set() const{
    return m_datetime_type_field_name_isSet;
}

bool OAISourceFlowConfig_IncrementalPullConfig::is_datetime_type_field_name_Valid() const{
    return m_datetime_type_field_name_isValid;
}

bool OAISourceFlowConfig_IncrementalPullConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_datetime_type_field_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISourceFlowConfig_IncrementalPullConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
