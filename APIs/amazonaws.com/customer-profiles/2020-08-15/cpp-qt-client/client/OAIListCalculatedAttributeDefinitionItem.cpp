/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListCalculatedAttributeDefinitionItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListCalculatedAttributeDefinitionItem::OAIListCalculatedAttributeDefinitionItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListCalculatedAttributeDefinitionItem::OAIListCalculatedAttributeDefinitionItem() {
    this->initializeModel();
}

OAIListCalculatedAttributeDefinitionItem::~OAIListCalculatedAttributeDefinitionItem() {}

void OAIListCalculatedAttributeDefinitionItem::initializeModel() {

    m_calculated_attribute_name_isSet = false;
    m_calculated_attribute_name_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_last_updated_at_isSet = false;
    m_last_updated_at_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIListCalculatedAttributeDefinitionItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListCalculatedAttributeDefinitionItem::fromJsonObject(QJsonObject json) {

    m_calculated_attribute_name_isValid = ::OpenAPI::fromJsonValue(m_calculated_attribute_name, json[QString("CalculatedAttributeName")]);
    m_calculated_attribute_name_isSet = !json[QString("CalculatedAttributeName")].isNull() && m_calculated_attribute_name_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("DisplayName")]);
    m_display_name_isSet = !json[QString("DisplayName")].isNull() && m_display_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("CreatedAt")]);
    m_created_at_isSet = !json[QString("CreatedAt")].isNull() && m_created_at_isValid;

    m_last_updated_at_isValid = ::OpenAPI::fromJsonValue(m_last_updated_at, json[QString("LastUpdatedAt")]);
    m_last_updated_at_isSet = !json[QString("LastUpdatedAt")].isNull() && m_last_updated_at_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAIListCalculatedAttributeDefinitionItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListCalculatedAttributeDefinitionItem::asJsonObject() const {
    QJsonObject obj;
    if (m_calculated_attribute_name_isSet) {
        obj.insert(QString("CalculatedAttributeName"), ::OpenAPI::toJsonValue(m_calculated_attribute_name));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("DisplayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("CreatedAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_last_updated_at_isSet) {
        obj.insert(QString("LastUpdatedAt"), ::OpenAPI::toJsonValue(m_last_updated_at));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAIListCalculatedAttributeDefinitionItem::getCalculatedAttributeName() const {
    return m_calculated_attribute_name;
}
void OAIListCalculatedAttributeDefinitionItem::setCalculatedAttributeName(const QString &calculated_attribute_name) {
    m_calculated_attribute_name = calculated_attribute_name;
    m_calculated_attribute_name_isSet = true;
}

bool OAIListCalculatedAttributeDefinitionItem::is_calculated_attribute_name_Set() const{
    return m_calculated_attribute_name_isSet;
}

bool OAIListCalculatedAttributeDefinitionItem::is_calculated_attribute_name_Valid() const{
    return m_calculated_attribute_name_isValid;
}

QString OAIListCalculatedAttributeDefinitionItem::getDisplayName() const {
    return m_display_name;
}
void OAIListCalculatedAttributeDefinitionItem::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIListCalculatedAttributeDefinitionItem::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIListCalculatedAttributeDefinitionItem::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIListCalculatedAttributeDefinitionItem::getDescription() const {
    return m_description;
}
void OAIListCalculatedAttributeDefinitionItem::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIListCalculatedAttributeDefinitionItem::is_description_Set() const{
    return m_description_isSet;
}

bool OAIListCalculatedAttributeDefinitionItem::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIListCalculatedAttributeDefinitionItem::getCreatedAt() const {
    return m_created_at;
}
void OAIListCalculatedAttributeDefinitionItem::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIListCalculatedAttributeDefinitionItem::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIListCalculatedAttributeDefinitionItem::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QDateTime OAIListCalculatedAttributeDefinitionItem::getLastUpdatedAt() const {
    return m_last_updated_at;
}
void OAIListCalculatedAttributeDefinitionItem::setLastUpdatedAt(const QDateTime &last_updated_at) {
    m_last_updated_at = last_updated_at;
    m_last_updated_at_isSet = true;
}

bool OAIListCalculatedAttributeDefinitionItem::is_last_updated_at_Set() const{
    return m_last_updated_at_isSet;
}

bool OAIListCalculatedAttributeDefinitionItem::is_last_updated_at_Valid() const{
    return m_last_updated_at_isValid;
}

QMap OAIListCalculatedAttributeDefinitionItem::getTags() const {
    return m_tags;
}
void OAIListCalculatedAttributeDefinitionItem::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIListCalculatedAttributeDefinitionItem::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIListCalculatedAttributeDefinitionItem::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIListCalculatedAttributeDefinitionItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_calculated_attribute_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListCalculatedAttributeDefinitionItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
