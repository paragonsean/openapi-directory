/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListRuleBasedMatchesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListRuleBasedMatchesResponse::OAIListRuleBasedMatchesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListRuleBasedMatchesResponse::OAIListRuleBasedMatchesResponse() {
    this->initializeModel();
}

OAIListRuleBasedMatchesResponse::~OAIListRuleBasedMatchesResponse() {}

void OAIListRuleBasedMatchesResponse::initializeModel() {

    m_match_ids_isSet = false;
    m_match_ids_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListRuleBasedMatchesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListRuleBasedMatchesResponse::fromJsonObject(QJsonObject json) {

    m_match_ids_isValid = ::OpenAPI::fromJsonValue(m_match_ids, json[QString("MatchIds")]);
    m_match_ids_isSet = !json[QString("MatchIds")].isNull() && m_match_ids_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListRuleBasedMatchesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListRuleBasedMatchesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_match_ids.isSet()) {
        obj.insert(QString("MatchIds"), ::OpenAPI::toJsonValue(m_match_ids));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListRuleBasedMatchesResponse::getMatchIds() const {
    return m_match_ids;
}
void OAIListRuleBasedMatchesResponse::setMatchIds(const QList &match_ids) {
    m_match_ids = match_ids;
    m_match_ids_isSet = true;
}

bool OAIListRuleBasedMatchesResponse::is_match_ids_Set() const{
    return m_match_ids_isSet;
}

bool OAIListRuleBasedMatchesResponse::is_match_ids_Valid() const{
    return m_match_ids_isValid;
}

QString OAIListRuleBasedMatchesResponse::getNextToken() const {
    return m_next_token;
}
void OAIListRuleBasedMatchesResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListRuleBasedMatchesResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListRuleBasedMatchesResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListRuleBasedMatchesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_match_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListRuleBasedMatchesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
