/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteProfileKeyRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteProfileKeyRequest::OAIDeleteProfileKeyRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteProfileKeyRequest::OAIDeleteProfileKeyRequest() {
    this->initializeModel();
}

OAIDeleteProfileKeyRequest::~OAIDeleteProfileKeyRequest() {}

void OAIDeleteProfileKeyRequest::initializeModel() {

    m_profile_id_isSet = false;
    m_profile_id_isValid = false;

    m_key_name_isSet = false;
    m_key_name_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIDeleteProfileKeyRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteProfileKeyRequest::fromJsonObject(QJsonObject json) {

    m_profile_id_isValid = ::OpenAPI::fromJsonValue(m_profile_id, json[QString("ProfileId")]);
    m_profile_id_isSet = !json[QString("ProfileId")].isNull() && m_profile_id_isValid;

    m_key_name_isValid = ::OpenAPI::fromJsonValue(m_key_name, json[QString("KeyName")]);
    m_key_name_isSet = !json[QString("KeyName")].isNull() && m_key_name_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("Values")]);
    m_values_isSet = !json[QString("Values")].isNull() && m_values_isValid;
}

QString OAIDeleteProfileKeyRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteProfileKeyRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_profile_id_isSet) {
        obj.insert(QString("ProfileId"), ::OpenAPI::toJsonValue(m_profile_id));
    }
    if (m_key_name_isSet) {
        obj.insert(QString("KeyName"), ::OpenAPI::toJsonValue(m_key_name));
    }
    if (m_values.isSet()) {
        obj.insert(QString("Values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QString OAIDeleteProfileKeyRequest::getProfileId() const {
    return m_profile_id;
}
void OAIDeleteProfileKeyRequest::setProfileId(const QString &profile_id) {
    m_profile_id = profile_id;
    m_profile_id_isSet = true;
}

bool OAIDeleteProfileKeyRequest::is_profile_id_Set() const{
    return m_profile_id_isSet;
}

bool OAIDeleteProfileKeyRequest::is_profile_id_Valid() const{
    return m_profile_id_isValid;
}

QString OAIDeleteProfileKeyRequest::getKeyName() const {
    return m_key_name;
}
void OAIDeleteProfileKeyRequest::setKeyName(const QString &key_name) {
    m_key_name = key_name;
    m_key_name_isSet = true;
}

bool OAIDeleteProfileKeyRequest::is_key_name_Set() const{
    return m_key_name_isSet;
}

bool OAIDeleteProfileKeyRequest::is_key_name_Valid() const{
    return m_key_name_isValid;
}

QList OAIDeleteProfileKeyRequest::getValues() const {
    return m_values;
}
void OAIDeleteProfileKeyRequest::setValues(const QList &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIDeleteProfileKeyRequest::is_values_Set() const{
    return m_values_isSet;
}

bool OAIDeleteProfileKeyRequest::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIDeleteProfileKeyRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteProfileKeyRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_profile_id_isValid && m_key_name_isValid && m_values_isValid && true;
}

} // namespace OpenAPI
