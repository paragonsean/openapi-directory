/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIObjectTypeKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIObjectTypeKey::OAIObjectTypeKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIObjectTypeKey::OAIObjectTypeKey() {
    this->initializeModel();
}

OAIObjectTypeKey::~OAIObjectTypeKey() {}

void OAIObjectTypeKey::initializeModel() {

    m_standard_identifiers_isSet = false;
    m_standard_identifiers_isValid = false;

    m_field_names_isSet = false;
    m_field_names_isValid = false;
}

void OAIObjectTypeKey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIObjectTypeKey::fromJsonObject(QJsonObject json) {

    m_standard_identifiers_isValid = ::OpenAPI::fromJsonValue(m_standard_identifiers, json[QString("StandardIdentifiers")]);
    m_standard_identifiers_isSet = !json[QString("StandardIdentifiers")].isNull() && m_standard_identifiers_isValid;

    m_field_names_isValid = ::OpenAPI::fromJsonValue(m_field_names, json[QString("FieldNames")]);
    m_field_names_isSet = !json[QString("FieldNames")].isNull() && m_field_names_isValid;
}

QString OAIObjectTypeKey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIObjectTypeKey::asJsonObject() const {
    QJsonObject obj;
    if (m_standard_identifiers.isSet()) {
        obj.insert(QString("StandardIdentifiers"), ::OpenAPI::toJsonValue(m_standard_identifiers));
    }
    if (m_field_names.isSet()) {
        obj.insert(QString("FieldNames"), ::OpenAPI::toJsonValue(m_field_names));
    }
    return obj;
}

QList OAIObjectTypeKey::getStandardIdentifiers() const {
    return m_standard_identifiers;
}
void OAIObjectTypeKey::setStandardIdentifiers(const QList &standard_identifiers) {
    m_standard_identifiers = standard_identifiers;
    m_standard_identifiers_isSet = true;
}

bool OAIObjectTypeKey::is_standard_identifiers_Set() const{
    return m_standard_identifiers_isSet;
}

bool OAIObjectTypeKey::is_standard_identifiers_Valid() const{
    return m_standard_identifiers_isValid;
}

QList OAIObjectTypeKey::getFieldNames() const {
    return m_field_names;
}
void OAIObjectTypeKey::setFieldNames(const QList &field_names) {
    m_field_names = field_names;
    m_field_names_isSet = true;
}

bool OAIObjectTypeKey::is_field_names_Set() const{
    return m_field_names_isSet;
}

bool OAIObjectTypeKey::is_field_names_Valid() const{
    return m_field_names_isValid;
}

bool OAIObjectTypeKey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_standard_identifiers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_names.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIObjectTypeKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
