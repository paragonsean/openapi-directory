/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIS3SourceProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIS3SourceProperties::OAIS3SourceProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIS3SourceProperties::OAIS3SourceProperties() {
    this->initializeModel();
}

OAIS3SourceProperties::~OAIS3SourceProperties() {}

void OAIS3SourceProperties::initializeModel() {

    m_bucket_name_isSet = false;
    m_bucket_name_isValid = false;

    m_bucket_prefix_isSet = false;
    m_bucket_prefix_isValid = false;
}

void OAIS3SourceProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIS3SourceProperties::fromJsonObject(QJsonObject json) {

    m_bucket_name_isValid = ::OpenAPI::fromJsonValue(m_bucket_name, json[QString("BucketName")]);
    m_bucket_name_isSet = !json[QString("BucketName")].isNull() && m_bucket_name_isValid;

    m_bucket_prefix_isValid = ::OpenAPI::fromJsonValue(m_bucket_prefix, json[QString("BucketPrefix")]);
    m_bucket_prefix_isSet = !json[QString("BucketPrefix")].isNull() && m_bucket_prefix_isValid;
}

QString OAIS3SourceProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIS3SourceProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_bucket_name_isSet) {
        obj.insert(QString("BucketName"), ::OpenAPI::toJsonValue(m_bucket_name));
    }
    if (m_bucket_prefix_isSet) {
        obj.insert(QString("BucketPrefix"), ::OpenAPI::toJsonValue(m_bucket_prefix));
    }
    return obj;
}

QString OAIS3SourceProperties::getBucketName() const {
    return m_bucket_name;
}
void OAIS3SourceProperties::setBucketName(const QString &bucket_name) {
    m_bucket_name = bucket_name;
    m_bucket_name_isSet = true;
}

bool OAIS3SourceProperties::is_bucket_name_Set() const{
    return m_bucket_name_isSet;
}

bool OAIS3SourceProperties::is_bucket_name_Valid() const{
    return m_bucket_name_isValid;
}

QString OAIS3SourceProperties::getBucketPrefix() const {
    return m_bucket_prefix;
}
void OAIS3SourceProperties::setBucketPrefix(const QString &bucket_prefix) {
    m_bucket_prefix = bucket_prefix;
    m_bucket_prefix_isSet = true;
}

bool OAIS3SourceProperties::is_bucket_prefix_Set() const{
    return m_bucket_prefix_isSet;
}

bool OAIS3SourceProperties::is_bucket_prefix_Valid() const{
    return m_bucket_prefix_isValid;
}

bool OAIS3SourceProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bucket_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bucket_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIS3SourceProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_bucket_name_isValid && true;
}

} // namespace OpenAPI
