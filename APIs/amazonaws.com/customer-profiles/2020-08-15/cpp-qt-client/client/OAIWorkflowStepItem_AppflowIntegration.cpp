/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWorkflowStepItem_AppflowIntegration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWorkflowStepItem_AppflowIntegration::OAIWorkflowStepItem_AppflowIntegration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWorkflowStepItem_AppflowIntegration::OAIWorkflowStepItem_AppflowIntegration() {
    this->initializeModel();
}

OAIWorkflowStepItem_AppflowIntegration::~OAIWorkflowStepItem_AppflowIntegration() {}

void OAIWorkflowStepItem_AppflowIntegration::initializeModel() {

    m_flow_name_isSet = false;
    m_flow_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_execution_message_isSet = false;
    m_execution_message_isValid = false;

    m_records_processed_isSet = false;
    m_records_processed_isValid = false;

    m_batch_records_start_time_isSet = false;
    m_batch_records_start_time_isValid = false;

    m_batch_records_end_time_isSet = false;
    m_batch_records_end_time_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_last_updated_at_isSet = false;
    m_last_updated_at_isValid = false;
}

void OAIWorkflowStepItem_AppflowIntegration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWorkflowStepItem_AppflowIntegration::fromJsonObject(QJsonObject json) {

    m_flow_name_isValid = ::OpenAPI::fromJsonValue(m_flow_name, json[QString("FlowName")]);
    m_flow_name_isSet = !json[QString("FlowName")].isNull() && m_flow_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_execution_message_isValid = ::OpenAPI::fromJsonValue(m_execution_message, json[QString("ExecutionMessage")]);
    m_execution_message_isSet = !json[QString("ExecutionMessage")].isNull() && m_execution_message_isValid;

    m_records_processed_isValid = ::OpenAPI::fromJsonValue(m_records_processed, json[QString("RecordsProcessed")]);
    m_records_processed_isSet = !json[QString("RecordsProcessed")].isNull() && m_records_processed_isValid;

    m_batch_records_start_time_isValid = ::OpenAPI::fromJsonValue(m_batch_records_start_time, json[QString("BatchRecordsStartTime")]);
    m_batch_records_start_time_isSet = !json[QString("BatchRecordsStartTime")].isNull() && m_batch_records_start_time_isValid;

    m_batch_records_end_time_isValid = ::OpenAPI::fromJsonValue(m_batch_records_end_time, json[QString("BatchRecordsEndTime")]);
    m_batch_records_end_time_isSet = !json[QString("BatchRecordsEndTime")].isNull() && m_batch_records_end_time_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("CreatedAt")]);
    m_created_at_isSet = !json[QString("CreatedAt")].isNull() && m_created_at_isValid;

    m_last_updated_at_isValid = ::OpenAPI::fromJsonValue(m_last_updated_at, json[QString("LastUpdatedAt")]);
    m_last_updated_at_isSet = !json[QString("LastUpdatedAt")].isNull() && m_last_updated_at_isValid;
}

QString OAIWorkflowStepItem_AppflowIntegration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWorkflowStepItem_AppflowIntegration::asJsonObject() const {
    QJsonObject obj;
    if (m_flow_name_isSet) {
        obj.insert(QString("FlowName"), ::OpenAPI::toJsonValue(m_flow_name));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_execution_message_isSet) {
        obj.insert(QString("ExecutionMessage"), ::OpenAPI::toJsonValue(m_execution_message));
    }
    if (m_records_processed_isSet) {
        obj.insert(QString("RecordsProcessed"), ::OpenAPI::toJsonValue(m_records_processed));
    }
    if (m_batch_records_start_time_isSet) {
        obj.insert(QString("BatchRecordsStartTime"), ::OpenAPI::toJsonValue(m_batch_records_start_time));
    }
    if (m_batch_records_end_time_isSet) {
        obj.insert(QString("BatchRecordsEndTime"), ::OpenAPI::toJsonValue(m_batch_records_end_time));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("CreatedAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_last_updated_at_isSet) {
        obj.insert(QString("LastUpdatedAt"), ::OpenAPI::toJsonValue(m_last_updated_at));
    }
    return obj;
}

QString OAIWorkflowStepItem_AppflowIntegration::getFlowName() const {
    return m_flow_name;
}
void OAIWorkflowStepItem_AppflowIntegration::setFlowName(const QString &flow_name) {
    m_flow_name = flow_name;
    m_flow_name_isSet = true;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_flow_name_Set() const{
    return m_flow_name_isSet;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_flow_name_Valid() const{
    return m_flow_name_isValid;
}

OAIStatus OAIWorkflowStepItem_AppflowIntegration::getStatus() const {
    return m_status;
}
void OAIWorkflowStepItem_AppflowIntegration::setStatus(const OAIStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_status_Set() const{
    return m_status_isSet;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIWorkflowStepItem_AppflowIntegration::getExecutionMessage() const {
    return m_execution_message;
}
void OAIWorkflowStepItem_AppflowIntegration::setExecutionMessage(const QString &execution_message) {
    m_execution_message = execution_message;
    m_execution_message_isSet = true;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_execution_message_Set() const{
    return m_execution_message_isSet;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_execution_message_Valid() const{
    return m_execution_message_isValid;
}

qint32 OAIWorkflowStepItem_AppflowIntegration::getRecordsProcessed() const {
    return m_records_processed;
}
void OAIWorkflowStepItem_AppflowIntegration::setRecordsProcessed(const qint32 &records_processed) {
    m_records_processed = records_processed;
    m_records_processed_isSet = true;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_records_processed_Set() const{
    return m_records_processed_isSet;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_records_processed_Valid() const{
    return m_records_processed_isValid;
}

QString OAIWorkflowStepItem_AppflowIntegration::getBatchRecordsStartTime() const {
    return m_batch_records_start_time;
}
void OAIWorkflowStepItem_AppflowIntegration::setBatchRecordsStartTime(const QString &batch_records_start_time) {
    m_batch_records_start_time = batch_records_start_time;
    m_batch_records_start_time_isSet = true;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_batch_records_start_time_Set() const{
    return m_batch_records_start_time_isSet;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_batch_records_start_time_Valid() const{
    return m_batch_records_start_time_isValid;
}

QString OAIWorkflowStepItem_AppflowIntegration::getBatchRecordsEndTime() const {
    return m_batch_records_end_time;
}
void OAIWorkflowStepItem_AppflowIntegration::setBatchRecordsEndTime(const QString &batch_records_end_time) {
    m_batch_records_end_time = batch_records_end_time;
    m_batch_records_end_time_isSet = true;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_batch_records_end_time_Set() const{
    return m_batch_records_end_time_isSet;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_batch_records_end_time_Valid() const{
    return m_batch_records_end_time_isValid;
}

QDateTime OAIWorkflowStepItem_AppflowIntegration::getCreatedAt() const {
    return m_created_at;
}
void OAIWorkflowStepItem_AppflowIntegration::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QDateTime OAIWorkflowStepItem_AppflowIntegration::getLastUpdatedAt() const {
    return m_last_updated_at;
}
void OAIWorkflowStepItem_AppflowIntegration::setLastUpdatedAt(const QDateTime &last_updated_at) {
    m_last_updated_at = last_updated_at;
    m_last_updated_at_isSet = true;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_last_updated_at_Set() const{
    return m_last_updated_at_isSet;
}

bool OAIWorkflowStepItem_AppflowIntegration::is_last_updated_at_Valid() const{
    return m_last_updated_at_isValid;
}

bool OAIWorkflowStepItem_AppflowIntegration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_flow_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_records_processed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_batch_records_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_batch_records_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWorkflowStepItem_AppflowIntegration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_flow_name_isValid && m_status_isValid && m_execution_message_isValid && m_records_processed_isValid && m_batch_records_start_time_isValid && m_batch_records_end_time_isValid && m_created_at_isValid && m_last_updated_at_isValid && true;
}

} // namespace OpenAPI
