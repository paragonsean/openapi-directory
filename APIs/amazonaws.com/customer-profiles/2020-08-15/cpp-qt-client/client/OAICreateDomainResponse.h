/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateDomainResponse.h
 *
 * 
 */

#ifndef OAICreateDomainResponse_H
#define OAICreateDomainResponse_H

#include <QJsonObject>

#include "OAICreateDomainResponse_Matching.h"
#include "OAICreateDomainResponse_RuleBasedMatching.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateDomainResponse_Matching;
class OAICreateDomainResponse_RuleBasedMatching;

class OAICreateDomainResponse : public OAIObject {
public:
    OAICreateDomainResponse();
    OAICreateDomainResponse(QString json);
    ~OAICreateDomainResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    qint32 getDefaultExpirationDays() const;
    void setDefaultExpirationDays(const qint32 &default_expiration_days);
    bool is_default_expiration_days_Set() const;
    bool is_default_expiration_days_Valid() const;

    QString getDefaultEncryptionKey() const;
    void setDefaultEncryptionKey(const QString &default_encryption_key);
    bool is_default_encryption_key_Set() const;
    bool is_default_encryption_key_Valid() const;

    QString getDeadLetterQueueUrl() const;
    void setDeadLetterQueueUrl(const QString &dead_letter_queue_url);
    bool is_dead_letter_queue_url_Set() const;
    bool is_dead_letter_queue_url_Valid() const;

    OAICreateDomainResponse_Matching getMatching() const;
    void setMatching(const OAICreateDomainResponse_Matching &matching);
    bool is_matching_Set() const;
    bool is_matching_Valid() const;

    OAICreateDomainResponse_RuleBasedMatching getRuleBasedMatching() const;
    void setRuleBasedMatching(const OAICreateDomainResponse_RuleBasedMatching &rule_based_matching);
    bool is_rule_based_matching_Set() const;
    bool is_rule_based_matching_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getLastUpdatedAt() const;
    void setLastUpdatedAt(const QDateTime &last_updated_at);
    bool is_last_updated_at_Set() const;
    bool is_last_updated_at_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    qint32 m_default_expiration_days;
    bool m_default_expiration_days_isSet;
    bool m_default_expiration_days_isValid;

    QString m_default_encryption_key;
    bool m_default_encryption_key_isSet;
    bool m_default_encryption_key_isValid;

    QString m_dead_letter_queue_url;
    bool m_dead_letter_queue_url_isSet;
    bool m_dead_letter_queue_url_isValid;

    OAICreateDomainResponse_Matching m_matching;
    bool m_matching_isSet;
    bool m_matching_isValid;

    OAICreateDomainResponse_RuleBasedMatching m_rule_based_matching;
    bool m_rule_based_matching_isSet;
    bool m_rule_based_matching_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_last_updated_at;
    bool m_last_updated_at_isSet;
    bool m_last_updated_at_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateDomainResponse)

#endif // OAICreateDomainResponse_H
