/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetEventStreamResponse.h
 *
 * 
 */

#ifndef OAIGetEventStreamResponse_H
#define OAIGetEventStreamResponse_H

#include <QJsonObject>

#include "OAIEventStreamState.h"
#include "OAIGetEventStreamResponse_DestinationDetails.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetEventStreamResponse_DestinationDetails;

class OAIGetEventStreamResponse : public OAIObject {
public:
    OAIGetEventStreamResponse();
    OAIGetEventStreamResponse(QString json);
    ~OAIGetEventStreamResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    QString getEventStreamArn() const;
    void setEventStreamArn(const QString &event_stream_arn);
    bool is_event_stream_arn_Set() const;
    bool is_event_stream_arn_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIEventStreamState getState() const;
    void setState(const OAIEventStreamState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QDateTime getStoppedSince() const;
    void setStoppedSince(const QDateTime &stopped_since);
    bool is_stopped_since_Set() const;
    bool is_stopped_since_Valid() const;

    OAIGetEventStreamResponse_DestinationDetails getDestinationDetails() const;
    void setDestinationDetails(const OAIGetEventStreamResponse_DestinationDetails &destination_details);
    bool is_destination_details_Set() const;
    bool is_destination_details_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    QString m_event_stream_arn;
    bool m_event_stream_arn_isSet;
    bool m_event_stream_arn_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIEventStreamState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QDateTime m_stopped_since;
    bool m_stopped_since_isSet;
    bool m_stopped_since_isValid;

    OAIGetEventStreamResponse_DestinationDetails m_destination_details;
    bool m_destination_details_isSet;
    bool m_destination_details_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetEventStreamResponse)

#endif // OAIGetEventStreamResponse_H
