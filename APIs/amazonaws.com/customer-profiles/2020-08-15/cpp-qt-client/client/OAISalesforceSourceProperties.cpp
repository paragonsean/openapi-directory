/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISalesforceSourceProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISalesforceSourceProperties::OAISalesforceSourceProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISalesforceSourceProperties::OAISalesforceSourceProperties() {
    this->initializeModel();
}

OAISalesforceSourceProperties::~OAISalesforceSourceProperties() {}

void OAISalesforceSourceProperties::initializeModel() {

    m_object_isSet = false;
    m_object_isValid = false;

    m_enable_dynamic_field_update_isSet = false;
    m_enable_dynamic_field_update_isValid = false;

    m_include_deleted_records_isSet = false;
    m_include_deleted_records_isValid = false;
}

void OAISalesforceSourceProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISalesforceSourceProperties::fromJsonObject(QJsonObject json) {

    m_object_isValid = ::OpenAPI::fromJsonValue(m_object, json[QString("Object")]);
    m_object_isSet = !json[QString("Object")].isNull() && m_object_isValid;

    m_enable_dynamic_field_update_isValid = ::OpenAPI::fromJsonValue(m_enable_dynamic_field_update, json[QString("EnableDynamicFieldUpdate")]);
    m_enable_dynamic_field_update_isSet = !json[QString("EnableDynamicFieldUpdate")].isNull() && m_enable_dynamic_field_update_isValid;

    m_include_deleted_records_isValid = ::OpenAPI::fromJsonValue(m_include_deleted_records, json[QString("IncludeDeletedRecords")]);
    m_include_deleted_records_isSet = !json[QString("IncludeDeletedRecords")].isNull() && m_include_deleted_records_isValid;
}

QString OAISalesforceSourceProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISalesforceSourceProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_object_isSet) {
        obj.insert(QString("Object"), ::OpenAPI::toJsonValue(m_object));
    }
    if (m_enable_dynamic_field_update_isSet) {
        obj.insert(QString("EnableDynamicFieldUpdate"), ::OpenAPI::toJsonValue(m_enable_dynamic_field_update));
    }
    if (m_include_deleted_records_isSet) {
        obj.insert(QString("IncludeDeletedRecords"), ::OpenAPI::toJsonValue(m_include_deleted_records));
    }
    return obj;
}

QString OAISalesforceSourceProperties::getObject() const {
    return m_object;
}
void OAISalesforceSourceProperties::setObject(const QString &object) {
    m_object = object;
    m_object_isSet = true;
}

bool OAISalesforceSourceProperties::is_object_Set() const{
    return m_object_isSet;
}

bool OAISalesforceSourceProperties::is_object_Valid() const{
    return m_object_isValid;
}

bool OAISalesforceSourceProperties::getEnableDynamicFieldUpdate() const {
    return m_enable_dynamic_field_update;
}
void OAISalesforceSourceProperties::setEnableDynamicFieldUpdate(const bool &enable_dynamic_field_update) {
    m_enable_dynamic_field_update = enable_dynamic_field_update;
    m_enable_dynamic_field_update_isSet = true;
}

bool OAISalesforceSourceProperties::is_enable_dynamic_field_update_Set() const{
    return m_enable_dynamic_field_update_isSet;
}

bool OAISalesforceSourceProperties::is_enable_dynamic_field_update_Valid() const{
    return m_enable_dynamic_field_update_isValid;
}

bool OAISalesforceSourceProperties::getIncludeDeletedRecords() const {
    return m_include_deleted_records;
}
void OAISalesforceSourceProperties::setIncludeDeletedRecords(const bool &include_deleted_records) {
    m_include_deleted_records = include_deleted_records;
    m_include_deleted_records_isSet = true;
}

bool OAISalesforceSourceProperties::is_include_deleted_records_Set() const{
    return m_include_deleted_records_isSet;
}

bool OAISalesforceSourceProperties::is_include_deleted_records_Valid() const{
    return m_include_deleted_records_isValid;
}

bool OAISalesforceSourceProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_dynamic_field_update_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_deleted_records_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISalesforceSourceProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_object_isValid && true;
}

} // namespace OpenAPI
