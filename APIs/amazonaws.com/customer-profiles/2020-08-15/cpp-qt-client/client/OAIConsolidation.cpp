/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConsolidation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConsolidation::OAIConsolidation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConsolidation::OAIConsolidation() {
    this->initializeModel();
}

OAIConsolidation::~OAIConsolidation() {}

void OAIConsolidation::initializeModel() {

    m_matching_attributes_list_isSet = false;
    m_matching_attributes_list_isValid = false;
}

void OAIConsolidation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConsolidation::fromJsonObject(QJsonObject json) {

    m_matching_attributes_list_isValid = ::OpenAPI::fromJsonValue(m_matching_attributes_list, json[QString("MatchingAttributesList")]);
    m_matching_attributes_list_isSet = !json[QString("MatchingAttributesList")].isNull() && m_matching_attributes_list_isValid;
}

QString OAIConsolidation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConsolidation::asJsonObject() const {
    QJsonObject obj;
    if (m_matching_attributes_list.isSet()) {
        obj.insert(QString("MatchingAttributesList"), ::OpenAPI::toJsonValue(m_matching_attributes_list));
    }
    return obj;
}

QList OAIConsolidation::getMatchingAttributesList() const {
    return m_matching_attributes_list;
}
void OAIConsolidation::setMatchingAttributesList(const QList &matching_attributes_list) {
    m_matching_attributes_list = matching_attributes_list;
    m_matching_attributes_list_isSet = true;
}

bool OAIConsolidation::is_matching_attributes_list_Set() const{
    return m_matching_attributes_list_isSet;
}

bool OAIConsolidation::is_matching_attributes_list_Valid() const{
    return m_matching_attributes_list_isValid;
}

bool OAIConsolidation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_matching_attributes_list.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConsolidation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_matching_attributes_list_isValid && true;
}

} // namespace OpenAPI
