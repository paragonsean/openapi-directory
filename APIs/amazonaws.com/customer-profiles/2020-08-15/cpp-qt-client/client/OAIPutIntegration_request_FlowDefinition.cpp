/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutIntegration_request_FlowDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutIntegration_request_FlowDefinition::OAIPutIntegration_request_FlowDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutIntegration_request_FlowDefinition::OAIPutIntegration_request_FlowDefinition() {
    this->initializeModel();
}

OAIPutIntegration_request_FlowDefinition::~OAIPutIntegration_request_FlowDefinition() {}

void OAIPutIntegration_request_FlowDefinition::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_flow_name_isSet = false;
    m_flow_name_isValid = false;

    m_kms_arn_isSet = false;
    m_kms_arn_isValid = false;

    m_source_flow_config_isSet = false;
    m_source_flow_config_isValid = false;

    m_tasks_isSet = false;
    m_tasks_isValid = false;

    m_trigger_config_isSet = false;
    m_trigger_config_isValid = false;
}

void OAIPutIntegration_request_FlowDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutIntegration_request_FlowDefinition::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_flow_name_isValid = ::OpenAPI::fromJsonValue(m_flow_name, json[QString("FlowName")]);
    m_flow_name_isSet = !json[QString("FlowName")].isNull() && m_flow_name_isValid;

    m_kms_arn_isValid = ::OpenAPI::fromJsonValue(m_kms_arn, json[QString("KmsArn")]);
    m_kms_arn_isSet = !json[QString("KmsArn")].isNull() && m_kms_arn_isValid;

    m_source_flow_config_isValid = ::OpenAPI::fromJsonValue(m_source_flow_config, json[QString("SourceFlowConfig")]);
    m_source_flow_config_isSet = !json[QString("SourceFlowConfig")].isNull() && m_source_flow_config_isValid;

    m_tasks_isValid = ::OpenAPI::fromJsonValue(m_tasks, json[QString("Tasks")]);
    m_tasks_isSet = !json[QString("Tasks")].isNull() && m_tasks_isValid;

    m_trigger_config_isValid = ::OpenAPI::fromJsonValue(m_trigger_config, json[QString("TriggerConfig")]);
    m_trigger_config_isSet = !json[QString("TriggerConfig")].isNull() && m_trigger_config_isValid;
}

QString OAIPutIntegration_request_FlowDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutIntegration_request_FlowDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_flow_name_isSet) {
        obj.insert(QString("FlowName"), ::OpenAPI::toJsonValue(m_flow_name));
    }
    if (m_kms_arn_isSet) {
        obj.insert(QString("KmsArn"), ::OpenAPI::toJsonValue(m_kms_arn));
    }
    if (m_source_flow_config.isSet()) {
        obj.insert(QString("SourceFlowConfig"), ::OpenAPI::toJsonValue(m_source_flow_config));
    }
    if (m_tasks.isSet()) {
        obj.insert(QString("Tasks"), ::OpenAPI::toJsonValue(m_tasks));
    }
    if (m_trigger_config.isSet()) {
        obj.insert(QString("TriggerConfig"), ::OpenAPI::toJsonValue(m_trigger_config));
    }
    return obj;
}

QString OAIPutIntegration_request_FlowDefinition::getDescription() const {
    return m_description;
}
void OAIPutIntegration_request_FlowDefinition::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIPutIntegration_request_FlowDefinition::is_description_Set() const{
    return m_description_isSet;
}

bool OAIPutIntegration_request_FlowDefinition::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIPutIntegration_request_FlowDefinition::getFlowName() const {
    return m_flow_name;
}
void OAIPutIntegration_request_FlowDefinition::setFlowName(const QString &flow_name) {
    m_flow_name = flow_name;
    m_flow_name_isSet = true;
}

bool OAIPutIntegration_request_FlowDefinition::is_flow_name_Set() const{
    return m_flow_name_isSet;
}

bool OAIPutIntegration_request_FlowDefinition::is_flow_name_Valid() const{
    return m_flow_name_isValid;
}

QString OAIPutIntegration_request_FlowDefinition::getKmsArn() const {
    return m_kms_arn;
}
void OAIPutIntegration_request_FlowDefinition::setKmsArn(const QString &kms_arn) {
    m_kms_arn = kms_arn;
    m_kms_arn_isSet = true;
}

bool OAIPutIntegration_request_FlowDefinition::is_kms_arn_Set() const{
    return m_kms_arn_isSet;
}

bool OAIPutIntegration_request_FlowDefinition::is_kms_arn_Valid() const{
    return m_kms_arn_isValid;
}

OAIPutIntegration_request_FlowDefinition_SourceFlowConfig OAIPutIntegration_request_FlowDefinition::getSourceFlowConfig() const {
    return m_source_flow_config;
}
void OAIPutIntegration_request_FlowDefinition::setSourceFlowConfig(const OAIPutIntegration_request_FlowDefinition_SourceFlowConfig &source_flow_config) {
    m_source_flow_config = source_flow_config;
    m_source_flow_config_isSet = true;
}

bool OAIPutIntegration_request_FlowDefinition::is_source_flow_config_Set() const{
    return m_source_flow_config_isSet;
}

bool OAIPutIntegration_request_FlowDefinition::is_source_flow_config_Valid() const{
    return m_source_flow_config_isValid;
}

QList OAIPutIntegration_request_FlowDefinition::getTasks() const {
    return m_tasks;
}
void OAIPutIntegration_request_FlowDefinition::setTasks(const QList &tasks) {
    m_tasks = tasks;
    m_tasks_isSet = true;
}

bool OAIPutIntegration_request_FlowDefinition::is_tasks_Set() const{
    return m_tasks_isSet;
}

bool OAIPutIntegration_request_FlowDefinition::is_tasks_Valid() const{
    return m_tasks_isValid;
}

OAIPutIntegration_request_FlowDefinition_TriggerConfig OAIPutIntegration_request_FlowDefinition::getTriggerConfig() const {
    return m_trigger_config;
}
void OAIPutIntegration_request_FlowDefinition::setTriggerConfig(const OAIPutIntegration_request_FlowDefinition_TriggerConfig &trigger_config) {
    m_trigger_config = trigger_config;
    m_trigger_config_isSet = true;
}

bool OAIPutIntegration_request_FlowDefinition::is_trigger_config_Set() const{
    return m_trigger_config_isSet;
}

bool OAIPutIntegration_request_FlowDefinition::is_trigger_config_Valid() const{
    return m_trigger_config_isValid;
}

bool OAIPutIntegration_request_FlowDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flow_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kms_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_flow_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tasks.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutIntegration_request_FlowDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
