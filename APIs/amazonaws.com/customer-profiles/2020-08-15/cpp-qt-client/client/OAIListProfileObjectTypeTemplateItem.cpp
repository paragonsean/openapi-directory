/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListProfileObjectTypeTemplateItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListProfileObjectTypeTemplateItem::OAIListProfileObjectTypeTemplateItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListProfileObjectTypeTemplateItem::OAIListProfileObjectTypeTemplateItem() {
    this->initializeModel();
}

OAIListProfileObjectTypeTemplateItem::~OAIListProfileObjectTypeTemplateItem() {}

void OAIListProfileObjectTypeTemplateItem::initializeModel() {

    m_template_id_isSet = false;
    m_template_id_isValid = false;

    m_source_name_isSet = false;
    m_source_name_isValid = false;

    m_source_object_isSet = false;
    m_source_object_isValid = false;
}

void OAIListProfileObjectTypeTemplateItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListProfileObjectTypeTemplateItem::fromJsonObject(QJsonObject json) {

    m_template_id_isValid = ::OpenAPI::fromJsonValue(m_template_id, json[QString("TemplateId")]);
    m_template_id_isSet = !json[QString("TemplateId")].isNull() && m_template_id_isValid;

    m_source_name_isValid = ::OpenAPI::fromJsonValue(m_source_name, json[QString("SourceName")]);
    m_source_name_isSet = !json[QString("SourceName")].isNull() && m_source_name_isValid;

    m_source_object_isValid = ::OpenAPI::fromJsonValue(m_source_object, json[QString("SourceObject")]);
    m_source_object_isSet = !json[QString("SourceObject")].isNull() && m_source_object_isValid;
}

QString OAIListProfileObjectTypeTemplateItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListProfileObjectTypeTemplateItem::asJsonObject() const {
    QJsonObject obj;
    if (m_template_id_isSet) {
        obj.insert(QString("TemplateId"), ::OpenAPI::toJsonValue(m_template_id));
    }
    if (m_source_name_isSet) {
        obj.insert(QString("SourceName"), ::OpenAPI::toJsonValue(m_source_name));
    }
    if (m_source_object_isSet) {
        obj.insert(QString("SourceObject"), ::OpenAPI::toJsonValue(m_source_object));
    }
    return obj;
}

QString OAIListProfileObjectTypeTemplateItem::getTemplateId() const {
    return m_template_id;
}
void OAIListProfileObjectTypeTemplateItem::setTemplateId(const QString &template_id) {
    m_template_id = template_id;
    m_template_id_isSet = true;
}

bool OAIListProfileObjectTypeTemplateItem::is_template_id_Set() const{
    return m_template_id_isSet;
}

bool OAIListProfileObjectTypeTemplateItem::is_template_id_Valid() const{
    return m_template_id_isValid;
}

QString OAIListProfileObjectTypeTemplateItem::getSourceName() const {
    return m_source_name;
}
void OAIListProfileObjectTypeTemplateItem::setSourceName(const QString &source_name) {
    m_source_name = source_name;
    m_source_name_isSet = true;
}

bool OAIListProfileObjectTypeTemplateItem::is_source_name_Set() const{
    return m_source_name_isSet;
}

bool OAIListProfileObjectTypeTemplateItem::is_source_name_Valid() const{
    return m_source_name_isValid;
}

QString OAIListProfileObjectTypeTemplateItem::getSourceObject() const {
    return m_source_object;
}
void OAIListProfileObjectTypeTemplateItem::setSourceObject(const QString &source_object) {
    m_source_object = source_object;
    m_source_object_isSet = true;
}

bool OAIListProfileObjectTypeTemplateItem::is_source_object_Set() const{
    return m_source_object_isSet;
}

bool OAIListProfileObjectTypeTemplateItem::is_source_object_Valid() const{
    return m_source_object_isValid;
}

bool OAIListProfileObjectTypeTemplateItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_template_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_object_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListProfileObjectTypeTemplateItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
