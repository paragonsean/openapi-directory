/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutIntegration_request_FlowDefinition_TriggerConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutIntegration_request_FlowDefinition_TriggerConfig::OAIPutIntegration_request_FlowDefinition_TriggerConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutIntegration_request_FlowDefinition_TriggerConfig::OAIPutIntegration_request_FlowDefinition_TriggerConfig() {
    this->initializeModel();
}

OAIPutIntegration_request_FlowDefinition_TriggerConfig::~OAIPutIntegration_request_FlowDefinition_TriggerConfig() {}

void OAIPutIntegration_request_FlowDefinition_TriggerConfig::initializeModel() {

    m_trigger_type_isSet = false;
    m_trigger_type_isValid = false;

    m_trigger_properties_isSet = false;
    m_trigger_properties_isValid = false;
}

void OAIPutIntegration_request_FlowDefinition_TriggerConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutIntegration_request_FlowDefinition_TriggerConfig::fromJsonObject(QJsonObject json) {

    m_trigger_type_isValid = ::OpenAPI::fromJsonValue(m_trigger_type, json[QString("TriggerType")]);
    m_trigger_type_isSet = !json[QString("TriggerType")].isNull() && m_trigger_type_isValid;

    m_trigger_properties_isValid = ::OpenAPI::fromJsonValue(m_trigger_properties, json[QString("TriggerProperties")]);
    m_trigger_properties_isSet = !json[QString("TriggerProperties")].isNull() && m_trigger_properties_isValid;
}

QString OAIPutIntegration_request_FlowDefinition_TriggerConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutIntegration_request_FlowDefinition_TriggerConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_trigger_type.isSet()) {
        obj.insert(QString("TriggerType"), ::OpenAPI::toJsonValue(m_trigger_type));
    }
    if (m_trigger_properties.isSet()) {
        obj.insert(QString("TriggerProperties"), ::OpenAPI::toJsonValue(m_trigger_properties));
    }
    return obj;
}

OAITriggerType OAIPutIntegration_request_FlowDefinition_TriggerConfig::getTriggerType() const {
    return m_trigger_type;
}
void OAIPutIntegration_request_FlowDefinition_TriggerConfig::setTriggerType(const OAITriggerType &trigger_type) {
    m_trigger_type = trigger_type;
    m_trigger_type_isSet = true;
}

bool OAIPutIntegration_request_FlowDefinition_TriggerConfig::is_trigger_type_Set() const{
    return m_trigger_type_isSet;
}

bool OAIPutIntegration_request_FlowDefinition_TriggerConfig::is_trigger_type_Valid() const{
    return m_trigger_type_isValid;
}

OAITriggerConfig_TriggerProperties OAIPutIntegration_request_FlowDefinition_TriggerConfig::getTriggerProperties() const {
    return m_trigger_properties;
}
void OAIPutIntegration_request_FlowDefinition_TriggerConfig::setTriggerProperties(const OAITriggerConfig_TriggerProperties &trigger_properties) {
    m_trigger_properties = trigger_properties;
    m_trigger_properties_isSet = true;
}

bool OAIPutIntegration_request_FlowDefinition_TriggerConfig::is_trigger_properties_Set() const{
    return m_trigger_properties_isSet;
}

bool OAIPutIntegration_request_FlowDefinition_TriggerConfig::is_trigger_properties_Valid() const{
    return m_trigger_properties_isValid;
}

bool OAIPutIntegration_request_FlowDefinition_TriggerConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_trigger_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutIntegration_request_FlowDefinition_TriggerConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_trigger_type_isValid && true;
}

} // namespace OpenAPI
