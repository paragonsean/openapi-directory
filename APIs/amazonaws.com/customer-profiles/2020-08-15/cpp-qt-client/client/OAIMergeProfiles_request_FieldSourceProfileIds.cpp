/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMergeProfiles_request_FieldSourceProfileIds.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMergeProfiles_request_FieldSourceProfileIds::OAIMergeProfiles_request_FieldSourceProfileIds(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMergeProfiles_request_FieldSourceProfileIds::OAIMergeProfiles_request_FieldSourceProfileIds() {
    this->initializeModel();
}

OAIMergeProfiles_request_FieldSourceProfileIds::~OAIMergeProfiles_request_FieldSourceProfileIds() {}

void OAIMergeProfiles_request_FieldSourceProfileIds::initializeModel() {

    m_account_number_isSet = false;
    m_account_number_isValid = false;

    m_additional_information_isSet = false;
    m_additional_information_isValid = false;

    m_party_type_isSet = false;
    m_party_type_isValid = false;

    m_business_name_isSet = false;
    m_business_name_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_birth_date_isSet = false;
    m_birth_date_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_mobile_phone_number_isSet = false;
    m_mobile_phone_number_isValid = false;

    m_home_phone_number_isSet = false;
    m_home_phone_number_isValid = false;

    m_business_phone_number_isSet = false;
    m_business_phone_number_isValid = false;

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_personal_email_address_isSet = false;
    m_personal_email_address_isValid = false;

    m_business_email_address_isSet = false;
    m_business_email_address_isValid = false;

    m_address_isSet = false;
    m_address_isValid = false;

    m_shipping_address_isSet = false;
    m_shipping_address_isValid = false;

    m_mailing_address_isSet = false;
    m_mailing_address_isValid = false;

    m_billing_address_isSet = false;
    m_billing_address_isValid = false;

    m_attributes_isSet = false;
    m_attributes_isValid = false;
}

void OAIMergeProfiles_request_FieldSourceProfileIds::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMergeProfiles_request_FieldSourceProfileIds::fromJsonObject(QJsonObject json) {

    m_account_number_isValid = ::OpenAPI::fromJsonValue(m_account_number, json[QString("AccountNumber")]);
    m_account_number_isSet = !json[QString("AccountNumber")].isNull() && m_account_number_isValid;

    m_additional_information_isValid = ::OpenAPI::fromJsonValue(m_additional_information, json[QString("AdditionalInformation")]);
    m_additional_information_isSet = !json[QString("AdditionalInformation")].isNull() && m_additional_information_isValid;

    m_party_type_isValid = ::OpenAPI::fromJsonValue(m_party_type, json[QString("PartyType")]);
    m_party_type_isSet = !json[QString("PartyType")].isNull() && m_party_type_isValid;

    m_business_name_isValid = ::OpenAPI::fromJsonValue(m_business_name, json[QString("BusinessName")]);
    m_business_name_isSet = !json[QString("BusinessName")].isNull() && m_business_name_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("FirstName")]);
    m_first_name_isSet = !json[QString("FirstName")].isNull() && m_first_name_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("MiddleName")]);
    m_middle_name_isSet = !json[QString("MiddleName")].isNull() && m_middle_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("LastName")]);
    m_last_name_isSet = !json[QString("LastName")].isNull() && m_last_name_isValid;

    m_birth_date_isValid = ::OpenAPI::fromJsonValue(m_birth_date, json[QString("BirthDate")]);
    m_birth_date_isSet = !json[QString("BirthDate")].isNull() && m_birth_date_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("Gender")]);
    m_gender_isSet = !json[QString("Gender")].isNull() && m_gender_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("PhoneNumber")]);
    m_phone_number_isSet = !json[QString("PhoneNumber")].isNull() && m_phone_number_isValid;

    m_mobile_phone_number_isValid = ::OpenAPI::fromJsonValue(m_mobile_phone_number, json[QString("MobilePhoneNumber")]);
    m_mobile_phone_number_isSet = !json[QString("MobilePhoneNumber")].isNull() && m_mobile_phone_number_isValid;

    m_home_phone_number_isValid = ::OpenAPI::fromJsonValue(m_home_phone_number, json[QString("HomePhoneNumber")]);
    m_home_phone_number_isSet = !json[QString("HomePhoneNumber")].isNull() && m_home_phone_number_isValid;

    m_business_phone_number_isValid = ::OpenAPI::fromJsonValue(m_business_phone_number, json[QString("BusinessPhoneNumber")]);
    m_business_phone_number_isSet = !json[QString("BusinessPhoneNumber")].isNull() && m_business_phone_number_isValid;

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("EmailAddress")]);
    m_email_address_isSet = !json[QString("EmailAddress")].isNull() && m_email_address_isValid;

    m_personal_email_address_isValid = ::OpenAPI::fromJsonValue(m_personal_email_address, json[QString("PersonalEmailAddress")]);
    m_personal_email_address_isSet = !json[QString("PersonalEmailAddress")].isNull() && m_personal_email_address_isValid;

    m_business_email_address_isValid = ::OpenAPI::fromJsonValue(m_business_email_address, json[QString("BusinessEmailAddress")]);
    m_business_email_address_isSet = !json[QString("BusinessEmailAddress")].isNull() && m_business_email_address_isValid;

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("Address")]);
    m_address_isSet = !json[QString("Address")].isNull() && m_address_isValid;

    m_shipping_address_isValid = ::OpenAPI::fromJsonValue(m_shipping_address, json[QString("ShippingAddress")]);
    m_shipping_address_isSet = !json[QString("ShippingAddress")].isNull() && m_shipping_address_isValid;

    m_mailing_address_isValid = ::OpenAPI::fromJsonValue(m_mailing_address, json[QString("MailingAddress")]);
    m_mailing_address_isSet = !json[QString("MailingAddress")].isNull() && m_mailing_address_isValid;

    m_billing_address_isValid = ::OpenAPI::fromJsonValue(m_billing_address, json[QString("BillingAddress")]);
    m_billing_address_isSet = !json[QString("BillingAddress")].isNull() && m_billing_address_isValid;

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("Attributes")]);
    m_attributes_isSet = !json[QString("Attributes")].isNull() && m_attributes_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMergeProfiles_request_FieldSourceProfileIds::asJsonObject() const {
    QJsonObject obj;
    if (m_account_number_isSet) {
        obj.insert(QString("AccountNumber"), ::OpenAPI::toJsonValue(m_account_number));
    }
    if (m_additional_information_isSet) {
        obj.insert(QString("AdditionalInformation"), ::OpenAPI::toJsonValue(m_additional_information));
    }
    if (m_party_type_isSet) {
        obj.insert(QString("PartyType"), ::OpenAPI::toJsonValue(m_party_type));
    }
    if (m_business_name_isSet) {
        obj.insert(QString("BusinessName"), ::OpenAPI::toJsonValue(m_business_name));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("FirstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_middle_name_isSet) {
        obj.insert(QString("MiddleName"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("LastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_birth_date_isSet) {
        obj.insert(QString("BirthDate"), ::OpenAPI::toJsonValue(m_birth_date));
    }
    if (m_gender_isSet) {
        obj.insert(QString("Gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("PhoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_mobile_phone_number_isSet) {
        obj.insert(QString("MobilePhoneNumber"), ::OpenAPI::toJsonValue(m_mobile_phone_number));
    }
    if (m_home_phone_number_isSet) {
        obj.insert(QString("HomePhoneNumber"), ::OpenAPI::toJsonValue(m_home_phone_number));
    }
    if (m_business_phone_number_isSet) {
        obj.insert(QString("BusinessPhoneNumber"), ::OpenAPI::toJsonValue(m_business_phone_number));
    }
    if (m_email_address_isSet) {
        obj.insert(QString("EmailAddress"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_personal_email_address_isSet) {
        obj.insert(QString("PersonalEmailAddress"), ::OpenAPI::toJsonValue(m_personal_email_address));
    }
    if (m_business_email_address_isSet) {
        obj.insert(QString("BusinessEmailAddress"), ::OpenAPI::toJsonValue(m_business_email_address));
    }
    if (m_address_isSet) {
        obj.insert(QString("Address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_shipping_address_isSet) {
        obj.insert(QString("ShippingAddress"), ::OpenAPI::toJsonValue(m_shipping_address));
    }
    if (m_mailing_address_isSet) {
        obj.insert(QString("MailingAddress"), ::OpenAPI::toJsonValue(m_mailing_address));
    }
    if (m_billing_address_isSet) {
        obj.insert(QString("BillingAddress"), ::OpenAPI::toJsonValue(m_billing_address));
    }
    if (m_attributes.isSet()) {
        obj.insert(QString("Attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    return obj;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getAccountNumber() const {
    return m_account_number;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setAccountNumber(const QString &account_number) {
    m_account_number = account_number;
    m_account_number_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_account_number_Set() const{
    return m_account_number_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_account_number_Valid() const{
    return m_account_number_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getAdditionalInformation() const {
    return m_additional_information;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setAdditionalInformation(const QString &additional_information) {
    m_additional_information = additional_information;
    m_additional_information_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_additional_information_Set() const{
    return m_additional_information_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_additional_information_Valid() const{
    return m_additional_information_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getPartyType() const {
    return m_party_type;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setPartyType(const QString &party_type) {
    m_party_type = party_type;
    m_party_type_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_party_type_Set() const{
    return m_party_type_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_party_type_Valid() const{
    return m_party_type_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getBusinessName() const {
    return m_business_name;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setBusinessName(const QString &business_name) {
    m_business_name = business_name;
    m_business_name_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_business_name_Set() const{
    return m_business_name_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_business_name_Valid() const{
    return m_business_name_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getFirstName() const {
    return m_first_name;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getMiddleName() const {
    return m_middle_name;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setMiddleName(const QString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getLastName() const {
    return m_last_name;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getBirthDate() const {
    return m_birth_date;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setBirthDate(const QString &birth_date) {
    m_birth_date = birth_date;
    m_birth_date_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_birth_date_Set() const{
    return m_birth_date_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_birth_date_Valid() const{
    return m_birth_date_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getGender() const {
    return m_gender;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setGender(const QString &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_gender_Valid() const{
    return m_gender_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getPhoneNumber() const {
    return m_phone_number;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getMobilePhoneNumber() const {
    return m_mobile_phone_number;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setMobilePhoneNumber(const QString &mobile_phone_number) {
    m_mobile_phone_number = mobile_phone_number;
    m_mobile_phone_number_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_mobile_phone_number_Set() const{
    return m_mobile_phone_number_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_mobile_phone_number_Valid() const{
    return m_mobile_phone_number_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getHomePhoneNumber() const {
    return m_home_phone_number;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setHomePhoneNumber(const QString &home_phone_number) {
    m_home_phone_number = home_phone_number;
    m_home_phone_number_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_home_phone_number_Set() const{
    return m_home_phone_number_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_home_phone_number_Valid() const{
    return m_home_phone_number_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getBusinessPhoneNumber() const {
    return m_business_phone_number;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setBusinessPhoneNumber(const QString &business_phone_number) {
    m_business_phone_number = business_phone_number;
    m_business_phone_number_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_business_phone_number_Set() const{
    return m_business_phone_number_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_business_phone_number_Valid() const{
    return m_business_phone_number_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getEmailAddress() const {
    return m_email_address;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_email_address_Valid() const{
    return m_email_address_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getPersonalEmailAddress() const {
    return m_personal_email_address;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setPersonalEmailAddress(const QString &personal_email_address) {
    m_personal_email_address = personal_email_address;
    m_personal_email_address_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_personal_email_address_Set() const{
    return m_personal_email_address_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_personal_email_address_Valid() const{
    return m_personal_email_address_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getBusinessEmailAddress() const {
    return m_business_email_address;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setBusinessEmailAddress(const QString &business_email_address) {
    m_business_email_address = business_email_address;
    m_business_email_address_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_business_email_address_Set() const{
    return m_business_email_address_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_business_email_address_Valid() const{
    return m_business_email_address_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getAddress() const {
    return m_address;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_address_Set() const{
    return m_address_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getShippingAddress() const {
    return m_shipping_address;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setShippingAddress(const QString &shipping_address) {
    m_shipping_address = shipping_address;
    m_shipping_address_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_shipping_address_Set() const{
    return m_shipping_address_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_shipping_address_Valid() const{
    return m_shipping_address_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getMailingAddress() const {
    return m_mailing_address;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setMailingAddress(const QString &mailing_address) {
    m_mailing_address = mailing_address;
    m_mailing_address_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_mailing_address_Set() const{
    return m_mailing_address_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_mailing_address_Valid() const{
    return m_mailing_address_isValid;
}

QString OAIMergeProfiles_request_FieldSourceProfileIds::getBillingAddress() const {
    return m_billing_address;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setBillingAddress(const QString &billing_address) {
    m_billing_address = billing_address;
    m_billing_address_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_billing_address_Set() const{
    return m_billing_address_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_billing_address_Valid() const{
    return m_billing_address_isValid;
}

QMap OAIMergeProfiles_request_FieldSourceProfileIds::getAttributes() const {
    return m_attributes;
}
void OAIMergeProfiles_request_FieldSourceProfileIds::setAttributes(const QMap &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::is_attributes_Valid() const{
    return m_attributes_isValid;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_information_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_party_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_birth_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_personal_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mailing_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMergeProfiles_request_FieldSourceProfileIds::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
