/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateCalculatedAttributeDefinitionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateCalculatedAttributeDefinitionResponse::OAIUpdateCalculatedAttributeDefinitionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateCalculatedAttributeDefinitionResponse::OAIUpdateCalculatedAttributeDefinitionResponse() {
    this->initializeModel();
}

OAIUpdateCalculatedAttributeDefinitionResponse::~OAIUpdateCalculatedAttributeDefinitionResponse() {}

void OAIUpdateCalculatedAttributeDefinitionResponse::initializeModel() {

    m_calculated_attribute_name_isSet = false;
    m_calculated_attribute_name_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_last_updated_at_isSet = false;
    m_last_updated_at_isValid = false;

    m_statistic_isSet = false;
    m_statistic_isValid = false;

    m_conditions_isSet = false;
    m_conditions_isValid = false;

    m_attribute_details_isSet = false;
    m_attribute_details_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIUpdateCalculatedAttributeDefinitionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateCalculatedAttributeDefinitionResponse::fromJsonObject(QJsonObject json) {

    m_calculated_attribute_name_isValid = ::OpenAPI::fromJsonValue(m_calculated_attribute_name, json[QString("CalculatedAttributeName")]);
    m_calculated_attribute_name_isSet = !json[QString("CalculatedAttributeName")].isNull() && m_calculated_attribute_name_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("DisplayName")]);
    m_display_name_isSet = !json[QString("DisplayName")].isNull() && m_display_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("CreatedAt")]);
    m_created_at_isSet = !json[QString("CreatedAt")].isNull() && m_created_at_isValid;

    m_last_updated_at_isValid = ::OpenAPI::fromJsonValue(m_last_updated_at, json[QString("LastUpdatedAt")]);
    m_last_updated_at_isSet = !json[QString("LastUpdatedAt")].isNull() && m_last_updated_at_isValid;

    m_statistic_isValid = ::OpenAPI::fromJsonValue(m_statistic, json[QString("Statistic")]);
    m_statistic_isSet = !json[QString("Statistic")].isNull() && m_statistic_isValid;

    m_conditions_isValid = ::OpenAPI::fromJsonValue(m_conditions, json[QString("Conditions")]);
    m_conditions_isSet = !json[QString("Conditions")].isNull() && m_conditions_isValid;

    m_attribute_details_isValid = ::OpenAPI::fromJsonValue(m_attribute_details, json[QString("AttributeDetails")]);
    m_attribute_details_isSet = !json[QString("AttributeDetails")].isNull() && m_attribute_details_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAIUpdateCalculatedAttributeDefinitionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateCalculatedAttributeDefinitionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_calculated_attribute_name_isSet) {
        obj.insert(QString("CalculatedAttributeName"), ::OpenAPI::toJsonValue(m_calculated_attribute_name));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("DisplayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("CreatedAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_last_updated_at_isSet) {
        obj.insert(QString("LastUpdatedAt"), ::OpenAPI::toJsonValue(m_last_updated_at));
    }
    if (m_statistic.isSet()) {
        obj.insert(QString("Statistic"), ::OpenAPI::toJsonValue(m_statistic));
    }
    if (m_conditions.isSet()) {
        obj.insert(QString("Conditions"), ::OpenAPI::toJsonValue(m_conditions));
    }
    if (m_attribute_details.isSet()) {
        obj.insert(QString("AttributeDetails"), ::OpenAPI::toJsonValue(m_attribute_details));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAIUpdateCalculatedAttributeDefinitionResponse::getCalculatedAttributeName() const {
    return m_calculated_attribute_name;
}
void OAIUpdateCalculatedAttributeDefinitionResponse::setCalculatedAttributeName(const QString &calculated_attribute_name) {
    m_calculated_attribute_name = calculated_attribute_name;
    m_calculated_attribute_name_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_calculated_attribute_name_Set() const{
    return m_calculated_attribute_name_isSet;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_calculated_attribute_name_Valid() const{
    return m_calculated_attribute_name_isValid;
}

QString OAIUpdateCalculatedAttributeDefinitionResponse::getDisplayName() const {
    return m_display_name;
}
void OAIUpdateCalculatedAttributeDefinitionResponse::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIUpdateCalculatedAttributeDefinitionResponse::getDescription() const {
    return m_description;
}
void OAIUpdateCalculatedAttributeDefinitionResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIUpdateCalculatedAttributeDefinitionResponse::getCreatedAt() const {
    return m_created_at;
}
void OAIUpdateCalculatedAttributeDefinitionResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QDateTime OAIUpdateCalculatedAttributeDefinitionResponse::getLastUpdatedAt() const {
    return m_last_updated_at;
}
void OAIUpdateCalculatedAttributeDefinitionResponse::setLastUpdatedAt(const QDateTime &last_updated_at) {
    m_last_updated_at = last_updated_at;
    m_last_updated_at_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_last_updated_at_Set() const{
    return m_last_updated_at_isSet;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_last_updated_at_Valid() const{
    return m_last_updated_at_isValid;
}

OAIStatistic OAIUpdateCalculatedAttributeDefinitionResponse::getStatistic() const {
    return m_statistic;
}
void OAIUpdateCalculatedAttributeDefinitionResponse::setStatistic(const OAIStatistic &statistic) {
    m_statistic = statistic;
    m_statistic_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_statistic_Set() const{
    return m_statistic_isSet;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_statistic_Valid() const{
    return m_statistic_isValid;
}

OAICreateCalculatedAttributeDefinitionResponse_Conditions OAIUpdateCalculatedAttributeDefinitionResponse::getConditions() const {
    return m_conditions;
}
void OAIUpdateCalculatedAttributeDefinitionResponse::setConditions(const OAICreateCalculatedAttributeDefinitionResponse_Conditions &conditions) {
    m_conditions = conditions;
    m_conditions_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_conditions_Set() const{
    return m_conditions_isSet;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_conditions_Valid() const{
    return m_conditions_isValid;
}

OAIUpdateCalculatedAttributeDefinitionResponse_AttributeDetails OAIUpdateCalculatedAttributeDefinitionResponse::getAttributeDetails() const {
    return m_attribute_details;
}
void OAIUpdateCalculatedAttributeDefinitionResponse::setAttributeDetails(const OAIUpdateCalculatedAttributeDefinitionResponse_AttributeDetails &attribute_details) {
    m_attribute_details = attribute_details;
    m_attribute_details_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_attribute_details_Set() const{
    return m_attribute_details_isSet;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_attribute_details_Valid() const{
    return m_attribute_details_isValid;
}

QMap OAIUpdateCalculatedAttributeDefinitionResponse::getTags() const {
    return m_tags;
}
void OAIUpdateCalculatedAttributeDefinitionResponse::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_calculated_attribute_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_statistic.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_conditions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateCalculatedAttributeDefinitionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
