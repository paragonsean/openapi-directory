/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExportingConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExportingConfig::OAIExportingConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExportingConfig::OAIExportingConfig() {
    this->initializeModel();
}

OAIExportingConfig::~OAIExportingConfig() {}

void OAIExportingConfig::initializeModel() {

    m_s3_exporting_isSet = false;
    m_s3_exporting_isValid = false;
}

void OAIExportingConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExportingConfig::fromJsonObject(QJsonObject json) {

    m_s3_exporting_isValid = ::OpenAPI::fromJsonValue(m_s3_exporting, json[QString("S3Exporting")]);
    m_s3_exporting_isSet = !json[QString("S3Exporting")].isNull() && m_s3_exporting_isValid;
}

QString OAIExportingConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExportingConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_s3_exporting.isSet()) {
        obj.insert(QString("S3Exporting"), ::OpenAPI::toJsonValue(m_s3_exporting));
    }
    return obj;
}

OAIExportingConfig_S3Exporting OAIExportingConfig::getS3Exporting() const {
    return m_s3_exporting;
}
void OAIExportingConfig::setS3Exporting(const OAIExportingConfig_S3Exporting &s3_exporting) {
    m_s3_exporting = s3_exporting;
    m_s3_exporting_isSet = true;
}

bool OAIExportingConfig::is_s3_exporting_Set() const{
    return m_s3_exporting_isSet;
}

bool OAIExportingConfig::is_s3_exporting_Valid() const{
    return m_s3_exporting_isValid;
}

bool OAIExportingConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s3_exporting.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExportingConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
