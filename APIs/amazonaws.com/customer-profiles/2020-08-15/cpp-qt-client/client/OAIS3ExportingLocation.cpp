/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIS3ExportingLocation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIS3ExportingLocation::OAIS3ExportingLocation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIS3ExportingLocation::OAIS3ExportingLocation() {
    this->initializeModel();
}

OAIS3ExportingLocation::~OAIS3ExportingLocation() {}

void OAIS3ExportingLocation::initializeModel() {

    m_s3_bucket_name_isSet = false;
    m_s3_bucket_name_isValid = false;

    m_s3_key_name_isSet = false;
    m_s3_key_name_isValid = false;
}

void OAIS3ExportingLocation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIS3ExportingLocation::fromJsonObject(QJsonObject json) {

    m_s3_bucket_name_isValid = ::OpenAPI::fromJsonValue(m_s3_bucket_name, json[QString("S3BucketName")]);
    m_s3_bucket_name_isSet = !json[QString("S3BucketName")].isNull() && m_s3_bucket_name_isValid;

    m_s3_key_name_isValid = ::OpenAPI::fromJsonValue(m_s3_key_name, json[QString("S3KeyName")]);
    m_s3_key_name_isSet = !json[QString("S3KeyName")].isNull() && m_s3_key_name_isValid;
}

QString OAIS3ExportingLocation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIS3ExportingLocation::asJsonObject() const {
    QJsonObject obj;
    if (m_s3_bucket_name_isSet) {
        obj.insert(QString("S3BucketName"), ::OpenAPI::toJsonValue(m_s3_bucket_name));
    }
    if (m_s3_key_name_isSet) {
        obj.insert(QString("S3KeyName"), ::OpenAPI::toJsonValue(m_s3_key_name));
    }
    return obj;
}

QString OAIS3ExportingLocation::getS3BucketName() const {
    return m_s3_bucket_name;
}
void OAIS3ExportingLocation::setS3BucketName(const QString &s3_bucket_name) {
    m_s3_bucket_name = s3_bucket_name;
    m_s3_bucket_name_isSet = true;
}

bool OAIS3ExportingLocation::is_s3_bucket_name_Set() const{
    return m_s3_bucket_name_isSet;
}

bool OAIS3ExportingLocation::is_s3_bucket_name_Valid() const{
    return m_s3_bucket_name_isValid;
}

QString OAIS3ExportingLocation::getS3KeyName() const {
    return m_s3_key_name;
}
void OAIS3ExportingLocation::setS3KeyName(const QString &s3_key_name) {
    m_s3_key_name = s3_key_name;
    m_s3_key_name_isSet = true;
}

bool OAIS3ExportingLocation::is_s3_key_name_Set() const{
    return m_s3_key_name_isSet;
}

bool OAIS3ExportingLocation::is_s3_key_name_Valid() const{
    return m_s3_key_name_isValid;
}

bool OAIS3ExportingLocation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s3_bucket_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_key_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIS3ExportingLocation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
