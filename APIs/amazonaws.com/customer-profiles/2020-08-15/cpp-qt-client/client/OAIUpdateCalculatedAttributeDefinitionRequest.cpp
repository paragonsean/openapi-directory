/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateCalculatedAttributeDefinitionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateCalculatedAttributeDefinitionRequest::OAIUpdateCalculatedAttributeDefinitionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateCalculatedAttributeDefinitionRequest::OAIUpdateCalculatedAttributeDefinitionRequest() {
    this->initializeModel();
}

OAIUpdateCalculatedAttributeDefinitionRequest::~OAIUpdateCalculatedAttributeDefinitionRequest() {}

void OAIUpdateCalculatedAttributeDefinitionRequest::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_conditions_isSet = false;
    m_conditions_isValid = false;
}

void OAIUpdateCalculatedAttributeDefinitionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateCalculatedAttributeDefinitionRequest::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("DisplayName")]);
    m_display_name_isSet = !json[QString("DisplayName")].isNull() && m_display_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_conditions_isValid = ::OpenAPI::fromJsonValue(m_conditions, json[QString("Conditions")]);
    m_conditions_isSet = !json[QString("Conditions")].isNull() && m_conditions_isValid;
}

QString OAIUpdateCalculatedAttributeDefinitionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateCalculatedAttributeDefinitionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("DisplayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_conditions.isSet()) {
        obj.insert(QString("Conditions"), ::OpenAPI::toJsonValue(m_conditions));
    }
    return obj;
}

QString OAIUpdateCalculatedAttributeDefinitionRequest::getDisplayName() const {
    return m_display_name;
}
void OAIUpdateCalculatedAttributeDefinitionRequest::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinitionRequest::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIUpdateCalculatedAttributeDefinitionRequest::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIUpdateCalculatedAttributeDefinitionRequest::getDescription() const {
    return m_description;
}
void OAIUpdateCalculatedAttributeDefinitionRequest::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinitionRequest::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateCalculatedAttributeDefinitionRequest::is_description_Valid() const{
    return m_description_isValid;
}

OAICreateCalculatedAttributeDefinitionResponse_Conditions OAIUpdateCalculatedAttributeDefinitionRequest::getConditions() const {
    return m_conditions;
}
void OAIUpdateCalculatedAttributeDefinitionRequest::setConditions(const OAICreateCalculatedAttributeDefinitionResponse_Conditions &conditions) {
    m_conditions = conditions;
    m_conditions_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinitionRequest::is_conditions_Set() const{
    return m_conditions_isSet;
}

bool OAIUpdateCalculatedAttributeDefinitionRequest::is_conditions_Valid() const{
    return m_conditions_isValid;
}

bool OAIUpdateCalculatedAttributeDefinitionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conditions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateCalculatedAttributeDefinitionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
