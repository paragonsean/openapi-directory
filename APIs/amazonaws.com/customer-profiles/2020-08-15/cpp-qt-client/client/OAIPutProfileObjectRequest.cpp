/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutProfileObjectRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutProfileObjectRequest::OAIPutProfileObjectRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutProfileObjectRequest::OAIPutProfileObjectRequest() {
    this->initializeModel();
}

OAIPutProfileObjectRequest::~OAIPutProfileObjectRequest() {}

void OAIPutProfileObjectRequest::initializeModel() {

    m_object_type_name_isSet = false;
    m_object_type_name_isValid = false;

    m_object_isSet = false;
    m_object_isValid = false;
}

void OAIPutProfileObjectRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutProfileObjectRequest::fromJsonObject(QJsonObject json) {

    m_object_type_name_isValid = ::OpenAPI::fromJsonValue(m_object_type_name, json[QString("ObjectTypeName")]);
    m_object_type_name_isSet = !json[QString("ObjectTypeName")].isNull() && m_object_type_name_isValid;

    m_object_isValid = ::OpenAPI::fromJsonValue(m_object, json[QString("Object")]);
    m_object_isSet = !json[QString("Object")].isNull() && m_object_isValid;
}

QString OAIPutProfileObjectRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutProfileObjectRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_object_type_name_isSet) {
        obj.insert(QString("ObjectTypeName"), ::OpenAPI::toJsonValue(m_object_type_name));
    }
    if (m_object_isSet) {
        obj.insert(QString("Object"), ::OpenAPI::toJsonValue(m_object));
    }
    return obj;
}

QString OAIPutProfileObjectRequest::getObjectTypeName() const {
    return m_object_type_name;
}
void OAIPutProfileObjectRequest::setObjectTypeName(const QString &object_type_name) {
    m_object_type_name = object_type_name;
    m_object_type_name_isSet = true;
}

bool OAIPutProfileObjectRequest::is_object_type_name_Set() const{
    return m_object_type_name_isSet;
}

bool OAIPutProfileObjectRequest::is_object_type_name_Valid() const{
    return m_object_type_name_isValid;
}

QString OAIPutProfileObjectRequest::getObject() const {
    return m_object;
}
void OAIPutProfileObjectRequest::setObject(const QString &object) {
    m_object = object;
    m_object_isSet = true;
}

bool OAIPutProfileObjectRequest::is_object_Set() const{
    return m_object_isSet;
}

bool OAIPutProfileObjectRequest::is_object_Valid() const{
    return m_object_isValid;
}

bool OAIPutProfileObjectRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_type_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutProfileObjectRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_object_type_name_isValid && m_object_isValid && true;
}

} // namespace OpenAPI
