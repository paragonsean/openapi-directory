/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateDomainRequest_Matching.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateDomainRequest_Matching::OAICreateDomainRequest_Matching(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateDomainRequest_Matching::OAICreateDomainRequest_Matching() {
    this->initializeModel();
}

OAICreateDomainRequest_Matching::~OAICreateDomainRequest_Matching() {}

void OAICreateDomainRequest_Matching::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_job_schedule_isSet = false;
    m_job_schedule_isValid = false;

    m_auto_merging_isSet = false;
    m_auto_merging_isValid = false;

    m_exporting_config_isSet = false;
    m_exporting_config_isValid = false;
}

void OAICreateDomainRequest_Matching::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateDomainRequest_Matching::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("Enabled")]);
    m_enabled_isSet = !json[QString("Enabled")].isNull() && m_enabled_isValid;

    m_job_schedule_isValid = ::OpenAPI::fromJsonValue(m_job_schedule, json[QString("JobSchedule")]);
    m_job_schedule_isSet = !json[QString("JobSchedule")].isNull() && m_job_schedule_isValid;

    m_auto_merging_isValid = ::OpenAPI::fromJsonValue(m_auto_merging, json[QString("AutoMerging")]);
    m_auto_merging_isSet = !json[QString("AutoMerging")].isNull() && m_auto_merging_isValid;

    m_exporting_config_isValid = ::OpenAPI::fromJsonValue(m_exporting_config, json[QString("ExportingConfig")]);
    m_exporting_config_isSet = !json[QString("ExportingConfig")].isNull() && m_exporting_config_isValid;
}

QString OAICreateDomainRequest_Matching::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateDomainRequest_Matching::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("Enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_job_schedule.isSet()) {
        obj.insert(QString("JobSchedule"), ::OpenAPI::toJsonValue(m_job_schedule));
    }
    if (m_auto_merging.isSet()) {
        obj.insert(QString("AutoMerging"), ::OpenAPI::toJsonValue(m_auto_merging));
    }
    if (m_exporting_config.isSet()) {
        obj.insert(QString("ExportingConfig"), ::OpenAPI::toJsonValue(m_exporting_config));
    }
    return obj;
}

bool OAICreateDomainRequest_Matching::getEnabled() const {
    return m_enabled;
}
void OAICreateDomainRequest_Matching::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAICreateDomainRequest_Matching::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAICreateDomainRequest_Matching::is_enabled_Valid() const{
    return m_enabled_isValid;
}

OAIUpdateDomain_request_Matching_JobSchedule OAICreateDomainRequest_Matching::getJobSchedule() const {
    return m_job_schedule;
}
void OAICreateDomainRequest_Matching::setJobSchedule(const OAIUpdateDomain_request_Matching_JobSchedule &job_schedule) {
    m_job_schedule = job_schedule;
    m_job_schedule_isSet = true;
}

bool OAICreateDomainRequest_Matching::is_job_schedule_Set() const{
    return m_job_schedule_isSet;
}

bool OAICreateDomainRequest_Matching::is_job_schedule_Valid() const{
    return m_job_schedule_isValid;
}

OAIUpdateDomain_request_Matching_AutoMerging OAICreateDomainRequest_Matching::getAutoMerging() const {
    return m_auto_merging;
}
void OAICreateDomainRequest_Matching::setAutoMerging(const OAIUpdateDomain_request_Matching_AutoMerging &auto_merging) {
    m_auto_merging = auto_merging;
    m_auto_merging_isSet = true;
}

bool OAICreateDomainRequest_Matching::is_auto_merging_Set() const{
    return m_auto_merging_isSet;
}

bool OAICreateDomainRequest_Matching::is_auto_merging_Valid() const{
    return m_auto_merging_isValid;
}

OAIUpdateDomain_request_Matching_ExportingConfig OAICreateDomainRequest_Matching::getExportingConfig() const {
    return m_exporting_config;
}
void OAICreateDomainRequest_Matching::setExportingConfig(const OAIUpdateDomain_request_Matching_ExportingConfig &exporting_config) {
    m_exporting_config = exporting_config;
    m_exporting_config_isSet = true;
}

bool OAICreateDomainRequest_Matching::is_exporting_config_Set() const{
    return m_exporting_config_isSet;
}

bool OAICreateDomainRequest_Matching::is_exporting_config_Valid() const{
    return m_exporting_config_isValid;
}

bool OAICreateDomainRequest_Matching::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_merging.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_exporting_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateDomainRequest_Matching::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_enabled_isValid && true;
}

} // namespace OpenAPI
