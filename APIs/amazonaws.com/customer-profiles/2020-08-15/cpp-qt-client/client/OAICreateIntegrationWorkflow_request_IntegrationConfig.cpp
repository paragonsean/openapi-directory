/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateIntegrationWorkflow_request_IntegrationConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateIntegrationWorkflow_request_IntegrationConfig::OAICreateIntegrationWorkflow_request_IntegrationConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateIntegrationWorkflow_request_IntegrationConfig::OAICreateIntegrationWorkflow_request_IntegrationConfig() {
    this->initializeModel();
}

OAICreateIntegrationWorkflow_request_IntegrationConfig::~OAICreateIntegrationWorkflow_request_IntegrationConfig() {}

void OAICreateIntegrationWorkflow_request_IntegrationConfig::initializeModel() {

    m_appflow_integration_isSet = false;
    m_appflow_integration_isValid = false;
}

void OAICreateIntegrationWorkflow_request_IntegrationConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateIntegrationWorkflow_request_IntegrationConfig::fromJsonObject(QJsonObject json) {

    m_appflow_integration_isValid = ::OpenAPI::fromJsonValue(m_appflow_integration, json[QString("AppflowIntegration")]);
    m_appflow_integration_isSet = !json[QString("AppflowIntegration")].isNull() && m_appflow_integration_isValid;
}

QString OAICreateIntegrationWorkflow_request_IntegrationConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateIntegrationWorkflow_request_IntegrationConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_appflow_integration.isSet()) {
        obj.insert(QString("AppflowIntegration"), ::OpenAPI::toJsonValue(m_appflow_integration));
    }
    return obj;
}

OAICreateIntegrationWorkflow_request_IntegrationConfig_AppflowIntegration OAICreateIntegrationWorkflow_request_IntegrationConfig::getAppflowIntegration() const {
    return m_appflow_integration;
}
void OAICreateIntegrationWorkflow_request_IntegrationConfig::setAppflowIntegration(const OAICreateIntegrationWorkflow_request_IntegrationConfig_AppflowIntegration &appflow_integration) {
    m_appflow_integration = appflow_integration;
    m_appflow_integration_isSet = true;
}

bool OAICreateIntegrationWorkflow_request_IntegrationConfig::is_appflow_integration_Set() const{
    return m_appflow_integration_isSet;
}

bool OAICreateIntegrationWorkflow_request_IntegrationConfig::is_appflow_integration_Valid() const{
    return m_appflow_integration_isValid;
}

bool OAICreateIntegrationWorkflow_request_IntegrationConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_appflow_integration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateIntegrationWorkflow_request_IntegrationConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
