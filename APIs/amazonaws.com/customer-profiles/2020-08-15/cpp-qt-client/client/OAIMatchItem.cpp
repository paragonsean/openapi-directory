/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMatchItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMatchItem::OAIMatchItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMatchItem::OAIMatchItem() {
    this->initializeModel();
}

OAIMatchItem::~OAIMatchItem() {}

void OAIMatchItem::initializeModel() {

    m_match_id_isSet = false;
    m_match_id_isValid = false;

    m_profile_ids_isSet = false;
    m_profile_ids_isValid = false;

    m_confidence_score_isSet = false;
    m_confidence_score_isValid = false;
}

void OAIMatchItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMatchItem::fromJsonObject(QJsonObject json) {

    m_match_id_isValid = ::OpenAPI::fromJsonValue(m_match_id, json[QString("MatchId")]);
    m_match_id_isSet = !json[QString("MatchId")].isNull() && m_match_id_isValid;

    m_profile_ids_isValid = ::OpenAPI::fromJsonValue(m_profile_ids, json[QString("ProfileIds")]);
    m_profile_ids_isSet = !json[QString("ProfileIds")].isNull() && m_profile_ids_isValid;

    m_confidence_score_isValid = ::OpenAPI::fromJsonValue(m_confidence_score, json[QString("ConfidenceScore")]);
    m_confidence_score_isSet = !json[QString("ConfidenceScore")].isNull() && m_confidence_score_isValid;
}

QString OAIMatchItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMatchItem::asJsonObject() const {
    QJsonObject obj;
    if (m_match_id_isSet) {
        obj.insert(QString("MatchId"), ::OpenAPI::toJsonValue(m_match_id));
    }
    if (m_profile_ids.isSet()) {
        obj.insert(QString("ProfileIds"), ::OpenAPI::toJsonValue(m_profile_ids));
    }
    if (m_confidence_score_isSet) {
        obj.insert(QString("ConfidenceScore"), ::OpenAPI::toJsonValue(m_confidence_score));
    }
    return obj;
}

QString OAIMatchItem::getMatchId() const {
    return m_match_id;
}
void OAIMatchItem::setMatchId(const QString &match_id) {
    m_match_id = match_id;
    m_match_id_isSet = true;
}

bool OAIMatchItem::is_match_id_Set() const{
    return m_match_id_isSet;
}

bool OAIMatchItem::is_match_id_Valid() const{
    return m_match_id_isValid;
}

QList OAIMatchItem::getProfileIds() const {
    return m_profile_ids;
}
void OAIMatchItem::setProfileIds(const QList &profile_ids) {
    m_profile_ids = profile_ids;
    m_profile_ids_isSet = true;
}

bool OAIMatchItem::is_profile_ids_Set() const{
    return m_profile_ids_isSet;
}

bool OAIMatchItem::is_profile_ids_Valid() const{
    return m_profile_ids_isValid;
}

double OAIMatchItem::getConfidenceScore() const {
    return m_confidence_score;
}
void OAIMatchItem::setConfidenceScore(const double &confidence_score) {
    m_confidence_score = confidence_score;
    m_confidence_score_isSet = true;
}

bool OAIMatchItem::is_confidence_score_Set() const{
    return m_confidence_score_isSet;
}

bool OAIMatchItem::is_confidence_score_Valid() const{
    return m_confidence_score_isValid;
}

bool OAIMatchItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_match_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_confidence_score_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMatchItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
