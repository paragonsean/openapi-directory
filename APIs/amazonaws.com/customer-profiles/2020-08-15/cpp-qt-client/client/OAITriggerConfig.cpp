/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITriggerConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITriggerConfig::OAITriggerConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITriggerConfig::OAITriggerConfig() {
    this->initializeModel();
}

OAITriggerConfig::~OAITriggerConfig() {}

void OAITriggerConfig::initializeModel() {

    m_trigger_type_isSet = false;
    m_trigger_type_isValid = false;

    m_trigger_properties_isSet = false;
    m_trigger_properties_isValid = false;
}

void OAITriggerConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITriggerConfig::fromJsonObject(QJsonObject json) {

    m_trigger_type_isValid = ::OpenAPI::fromJsonValue(m_trigger_type, json[QString("TriggerType")]);
    m_trigger_type_isSet = !json[QString("TriggerType")].isNull() && m_trigger_type_isValid;

    m_trigger_properties_isValid = ::OpenAPI::fromJsonValue(m_trigger_properties, json[QString("TriggerProperties")]);
    m_trigger_properties_isSet = !json[QString("TriggerProperties")].isNull() && m_trigger_properties_isValid;
}

QString OAITriggerConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITriggerConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_trigger_type.isSet()) {
        obj.insert(QString("TriggerType"), ::OpenAPI::toJsonValue(m_trigger_type));
    }
    if (m_trigger_properties.isSet()) {
        obj.insert(QString("TriggerProperties"), ::OpenAPI::toJsonValue(m_trigger_properties));
    }
    return obj;
}

OAITriggerType OAITriggerConfig::getTriggerType() const {
    return m_trigger_type;
}
void OAITriggerConfig::setTriggerType(const OAITriggerType &trigger_type) {
    m_trigger_type = trigger_type;
    m_trigger_type_isSet = true;
}

bool OAITriggerConfig::is_trigger_type_Set() const{
    return m_trigger_type_isSet;
}

bool OAITriggerConfig::is_trigger_type_Valid() const{
    return m_trigger_type_isValid;
}

OAITriggerConfig_TriggerProperties OAITriggerConfig::getTriggerProperties() const {
    return m_trigger_properties;
}
void OAITriggerConfig::setTriggerProperties(const OAITriggerConfig_TriggerProperties &trigger_properties) {
    m_trigger_properties = trigger_properties;
    m_trigger_properties_isSet = true;
}

bool OAITriggerConfig::is_trigger_properties_Set() const{
    return m_trigger_properties_isSet;
}

bool OAITriggerConfig::is_trigger_properties_Valid() const{
    return m_trigger_properties_isValid;
}

bool OAITriggerConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_trigger_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger_properties.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITriggerConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_trigger_type_isValid && true;
}

} // namespace OpenAPI
