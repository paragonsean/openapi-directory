/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAppflowIntegrationWorkflowStep.h
 *
 * Workflow step details for &lt;code&gt;APPFLOW_INTEGRATION&lt;/code&gt; workflow.
 */

#ifndef OAIAppflowIntegrationWorkflowStep_H
#define OAIAppflowIntegrationWorkflowStep_H

#include <QJsonObject>

#include "OAIStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAppflowIntegrationWorkflowStep : public OAIObject {
public:
    OAIAppflowIntegrationWorkflowStep();
    OAIAppflowIntegrationWorkflowStep(QString json);
    ~OAIAppflowIntegrationWorkflowStep() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFlowName() const;
    void setFlowName(const QString &flow_name);
    bool is_flow_name_Set() const;
    bool is_flow_name_Valid() const;

    OAIStatus getStatus() const;
    void setStatus(const OAIStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getExecutionMessage() const;
    void setExecutionMessage(const QString &execution_message);
    bool is_execution_message_Set() const;
    bool is_execution_message_Valid() const;

    qint32 getRecordsProcessed() const;
    void setRecordsProcessed(const qint32 &records_processed);
    bool is_records_processed_Set() const;
    bool is_records_processed_Valid() const;

    QString getBatchRecordsStartTime() const;
    void setBatchRecordsStartTime(const QString &batch_records_start_time);
    bool is_batch_records_start_time_Set() const;
    bool is_batch_records_start_time_Valid() const;

    QString getBatchRecordsEndTime() const;
    void setBatchRecordsEndTime(const QString &batch_records_end_time);
    bool is_batch_records_end_time_Set() const;
    bool is_batch_records_end_time_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getLastUpdatedAt() const;
    void setLastUpdatedAt(const QDateTime &last_updated_at);
    bool is_last_updated_at_Set() const;
    bool is_last_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_flow_name;
    bool m_flow_name_isSet;
    bool m_flow_name_isValid;

    OAIStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_execution_message;
    bool m_execution_message_isSet;
    bool m_execution_message_isValid;

    qint32 m_records_processed;
    bool m_records_processed_isSet;
    bool m_records_processed_isValid;

    QString m_batch_records_start_time;
    bool m_batch_records_start_time_isSet;
    bool m_batch_records_start_time_isValid;

    QString m_batch_records_end_time;
    bool m_batch_records_end_time_isSet;
    bool m_batch_records_end_time_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_last_updated_at;
    bool m_last_updated_at_isSet;
    bool m_last_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAppflowIntegrationWorkflowStep)

#endif // OAIAppflowIntegrationWorkflowStep_H
