/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMatchingRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMatchingRule::OAIMatchingRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMatchingRule::OAIMatchingRule() {
    this->initializeModel();
}

OAIMatchingRule::~OAIMatchingRule() {}

void OAIMatchingRule::initializeModel() {

    m_rule_isSet = false;
    m_rule_isValid = false;
}

void OAIMatchingRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMatchingRule::fromJsonObject(QJsonObject json) {

    m_rule_isValid = ::OpenAPI::fromJsonValue(m_rule, json[QString("Rule")]);
    m_rule_isSet = !json[QString("Rule")].isNull() && m_rule_isValid;
}

QString OAIMatchingRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMatchingRule::asJsonObject() const {
    QJsonObject obj;
    if (m_rule.isSet()) {
        obj.insert(QString("Rule"), ::OpenAPI::toJsonValue(m_rule));
    }
    return obj;
}

QList OAIMatchingRule::getRule() const {
    return m_rule;
}
void OAIMatchingRule::setRule(const QList &rule) {
    m_rule = rule;
    m_rule_isSet = true;
}

bool OAIMatchingRule::is_rule_Set() const{
    return m_rule_isSet;
}

bool OAIMatchingRule::is_rule_Valid() const{
    return m_rule_isValid;
}

bool OAIMatchingRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rule.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMatchingRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_rule_isValid && true;
}

} // namespace OpenAPI
