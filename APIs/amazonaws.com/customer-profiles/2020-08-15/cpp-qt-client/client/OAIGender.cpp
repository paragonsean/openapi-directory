/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGender.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGender::OAIGender(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGender::OAIGender() {
    this->initializeModel();
}

OAIGender::~OAIGender() {}

void OAIGender::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIGender::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIGender::fromJson(QString jsonString) {
    
    if ( jsonString.compare("MALE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGender::MALE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FEMALE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGender::FEMALE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNSPECIFIED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIGender::UNSPECIFIED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIGender::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIGender::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIGender::MALE:
            val = "MALE";
            break;
        case eOAIGender::FEMALE:
            val = "FEMALE";
            break;
        case eOAIGender::UNSPECIFIED:
            val = "UNSPECIFIED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIGender::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIGender::eOAIGender OAIGender::getValue() const {
    return m_value;
}

void OAIGender::setValue(const OAIGender::eOAIGender& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIGender::isSet() const {
    
    return m_value_isSet;
}

bool OAIGender::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
