/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector() {
    this->initializeModel();
}

OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::~OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector() {}

void OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::initializeModel() {

    m_attribute_matching_model_isSet = false;
    m_attribute_matching_model_isValid = false;

    m_address_isSet = false;
    m_address_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_email_address_isSet = false;
    m_email_address_isValid = false;
}

void OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::fromJsonObject(QJsonObject json) {

    m_attribute_matching_model_isValid = ::OpenAPI::fromJsonValue(m_attribute_matching_model, json[QString("AttributeMatchingModel")]);
    m_attribute_matching_model_isSet = !json[QString("AttributeMatchingModel")].isNull() && m_attribute_matching_model_isValid;

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("Address")]);
    m_address_isSet = !json[QString("Address")].isNull() && m_address_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("PhoneNumber")]);
    m_phone_number_isSet = !json[QString("PhoneNumber")].isNull() && m_phone_number_isValid;

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("EmailAddress")]);
    m_email_address_isSet = !json[QString("EmailAddress")].isNull() && m_email_address_isValid;
}

QString OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_matching_model.isSet()) {
        obj.insert(QString("AttributeMatchingModel"), ::OpenAPI::toJsonValue(m_attribute_matching_model));
    }
    if (m_address.isSet()) {
        obj.insert(QString("Address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_phone_number.isSet()) {
        obj.insert(QString("PhoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_email_address.isSet()) {
        obj.insert(QString("EmailAddress"), ::OpenAPI::toJsonValue(m_email_address));
    }
    return obj;
}

OAIAttributeMatchingModel OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::getAttributeMatchingModel() const {
    return m_attribute_matching_model;
}
void OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::setAttributeMatchingModel(const OAIAttributeMatchingModel &attribute_matching_model) {
    m_attribute_matching_model = attribute_matching_model;
    m_attribute_matching_model_isSet = true;
}

bool OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::is_attribute_matching_model_Set() const{
    return m_attribute_matching_model_isSet;
}

bool OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::is_attribute_matching_model_Valid() const{
    return m_attribute_matching_model_isValid;
}

QList OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::getAddress() const {
    return m_address;
}
void OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::setAddress(const QList &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::is_address_Set() const{
    return m_address_isSet;
}

bool OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::is_address_Valid() const{
    return m_address_isValid;
}

QList OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::getPhoneNumber() const {
    return m_phone_number;
}
void OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::setPhoneNumber(const QList &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QList OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::getEmailAddress() const {
    return m_email_address;
}
void OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::setEmailAddress(const QList &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::is_email_address_Valid() const{
    return m_email_address_isValid;
}

bool OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_matching_model.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_attribute_matching_model_isValid && true;
}

} // namespace OpenAPI
