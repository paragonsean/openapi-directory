/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWorkflowAttributes_AppflowIntegration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWorkflowAttributes_AppflowIntegration::OAIWorkflowAttributes_AppflowIntegration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWorkflowAttributes_AppflowIntegration::OAIWorkflowAttributes_AppflowIntegration() {
    this->initializeModel();
}

OAIWorkflowAttributes_AppflowIntegration::~OAIWorkflowAttributes_AppflowIntegration() {}

void OAIWorkflowAttributes_AppflowIntegration::initializeModel() {

    m_source_connector_type_isSet = false;
    m_source_connector_type_isValid = false;

    m_connector_profile_name_isSet = false;
    m_connector_profile_name_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;
}

void OAIWorkflowAttributes_AppflowIntegration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWorkflowAttributes_AppflowIntegration::fromJsonObject(QJsonObject json) {

    m_source_connector_type_isValid = ::OpenAPI::fromJsonValue(m_source_connector_type, json[QString("SourceConnectorType")]);
    m_source_connector_type_isSet = !json[QString("SourceConnectorType")].isNull() && m_source_connector_type_isValid;

    m_connector_profile_name_isValid = ::OpenAPI::fromJsonValue(m_connector_profile_name, json[QString("ConnectorProfileName")]);
    m_connector_profile_name_isSet = !json[QString("ConnectorProfileName")].isNull() && m_connector_profile_name_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("RoleArn")]);
    m_role_arn_isSet = !json[QString("RoleArn")].isNull() && m_role_arn_isValid;
}

QString OAIWorkflowAttributes_AppflowIntegration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWorkflowAttributes_AppflowIntegration::asJsonObject() const {
    QJsonObject obj;
    if (m_source_connector_type.isSet()) {
        obj.insert(QString("SourceConnectorType"), ::OpenAPI::toJsonValue(m_source_connector_type));
    }
    if (m_connector_profile_name_isSet) {
        obj.insert(QString("ConnectorProfileName"), ::OpenAPI::toJsonValue(m_connector_profile_name));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("RoleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    return obj;
}

OAISourceConnectorType OAIWorkflowAttributes_AppflowIntegration::getSourceConnectorType() const {
    return m_source_connector_type;
}
void OAIWorkflowAttributes_AppflowIntegration::setSourceConnectorType(const OAISourceConnectorType &source_connector_type) {
    m_source_connector_type = source_connector_type;
    m_source_connector_type_isSet = true;
}

bool OAIWorkflowAttributes_AppflowIntegration::is_source_connector_type_Set() const{
    return m_source_connector_type_isSet;
}

bool OAIWorkflowAttributes_AppflowIntegration::is_source_connector_type_Valid() const{
    return m_source_connector_type_isValid;
}

QString OAIWorkflowAttributes_AppflowIntegration::getConnectorProfileName() const {
    return m_connector_profile_name;
}
void OAIWorkflowAttributes_AppflowIntegration::setConnectorProfileName(const QString &connector_profile_name) {
    m_connector_profile_name = connector_profile_name;
    m_connector_profile_name_isSet = true;
}

bool OAIWorkflowAttributes_AppflowIntegration::is_connector_profile_name_Set() const{
    return m_connector_profile_name_isSet;
}

bool OAIWorkflowAttributes_AppflowIntegration::is_connector_profile_name_Valid() const{
    return m_connector_profile_name_isValid;
}

QString OAIWorkflowAttributes_AppflowIntegration::getRoleArn() const {
    return m_role_arn;
}
void OAIWorkflowAttributes_AppflowIntegration::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAIWorkflowAttributes_AppflowIntegration::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAIWorkflowAttributes_AppflowIntegration::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

bool OAIWorkflowAttributes_AppflowIntegration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_source_connector_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_connector_profile_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWorkflowAttributes_AppflowIntegration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_source_connector_type_isValid && m_connector_profile_name_isValid && true;
}

} // namespace OpenAPI
