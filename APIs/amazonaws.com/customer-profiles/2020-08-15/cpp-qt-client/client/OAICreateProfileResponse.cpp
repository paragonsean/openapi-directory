/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateProfileResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateProfileResponse::OAICreateProfileResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateProfileResponse::OAICreateProfileResponse() {
    this->initializeModel();
}

OAICreateProfileResponse::~OAICreateProfileResponse() {}

void OAICreateProfileResponse::initializeModel() {

    m_profile_id_isSet = false;
    m_profile_id_isValid = false;
}

void OAICreateProfileResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateProfileResponse::fromJsonObject(QJsonObject json) {

    m_profile_id_isValid = ::OpenAPI::fromJsonValue(m_profile_id, json[QString("ProfileId")]);
    m_profile_id_isSet = !json[QString("ProfileId")].isNull() && m_profile_id_isValid;
}

QString OAICreateProfileResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateProfileResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_profile_id_isSet) {
        obj.insert(QString("ProfileId"), ::OpenAPI::toJsonValue(m_profile_id));
    }
    return obj;
}

QString OAICreateProfileResponse::getProfileId() const {
    return m_profile_id;
}
void OAICreateProfileResponse::setProfileId(const QString &profile_id) {
    m_profile_id = profile_id;
    m_profile_id_isSet = true;
}

bool OAICreateProfileResponse::is_profile_id_Set() const{
    return m_profile_id_isSet;
}

bool OAICreateProfileResponse::is_profile_id_Valid() const{
    return m_profile_id_isValid;
}

bool OAICreateProfileResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateProfileResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_profile_id_isValid && true;
}

} // namespace OpenAPI
