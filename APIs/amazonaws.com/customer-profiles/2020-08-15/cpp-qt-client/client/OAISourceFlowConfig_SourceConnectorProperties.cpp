/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISourceFlowConfig_SourceConnectorProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISourceFlowConfig_SourceConnectorProperties::OAISourceFlowConfig_SourceConnectorProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISourceFlowConfig_SourceConnectorProperties::OAISourceFlowConfig_SourceConnectorProperties() {
    this->initializeModel();
}

OAISourceFlowConfig_SourceConnectorProperties::~OAISourceFlowConfig_SourceConnectorProperties() {}

void OAISourceFlowConfig_SourceConnectorProperties::initializeModel() {

    m_marketo_isSet = false;
    m_marketo_isValid = false;

    m_s3_isSet = false;
    m_s3_isValid = false;

    m_salesforce_isSet = false;
    m_salesforce_isValid = false;

    m_service_now_isSet = false;
    m_service_now_isValid = false;

    m_zendesk_isSet = false;
    m_zendesk_isValid = false;
}

void OAISourceFlowConfig_SourceConnectorProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISourceFlowConfig_SourceConnectorProperties::fromJsonObject(QJsonObject json) {

    m_marketo_isValid = ::OpenAPI::fromJsonValue(m_marketo, json[QString("Marketo")]);
    m_marketo_isSet = !json[QString("Marketo")].isNull() && m_marketo_isValid;

    m_s3_isValid = ::OpenAPI::fromJsonValue(m_s3, json[QString("S3")]);
    m_s3_isSet = !json[QString("S3")].isNull() && m_s3_isValid;

    m_salesforce_isValid = ::OpenAPI::fromJsonValue(m_salesforce, json[QString("Salesforce")]);
    m_salesforce_isSet = !json[QString("Salesforce")].isNull() && m_salesforce_isValid;

    m_service_now_isValid = ::OpenAPI::fromJsonValue(m_service_now, json[QString("ServiceNow")]);
    m_service_now_isSet = !json[QString("ServiceNow")].isNull() && m_service_now_isValid;

    m_zendesk_isValid = ::OpenAPI::fromJsonValue(m_zendesk, json[QString("Zendesk")]);
    m_zendesk_isSet = !json[QString("Zendesk")].isNull() && m_zendesk_isValid;
}

QString OAISourceFlowConfig_SourceConnectorProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISourceFlowConfig_SourceConnectorProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_marketo.isSet()) {
        obj.insert(QString("Marketo"), ::OpenAPI::toJsonValue(m_marketo));
    }
    if (m_s3.isSet()) {
        obj.insert(QString("S3"), ::OpenAPI::toJsonValue(m_s3));
    }
    if (m_salesforce.isSet()) {
        obj.insert(QString("Salesforce"), ::OpenAPI::toJsonValue(m_salesforce));
    }
    if (m_service_now.isSet()) {
        obj.insert(QString("ServiceNow"), ::OpenAPI::toJsonValue(m_service_now));
    }
    if (m_zendesk.isSet()) {
        obj.insert(QString("Zendesk"), ::OpenAPI::toJsonValue(m_zendesk));
    }
    return obj;
}

OAISourceConnectorProperties_Marketo OAISourceFlowConfig_SourceConnectorProperties::getMarketo() const {
    return m_marketo;
}
void OAISourceFlowConfig_SourceConnectorProperties::setMarketo(const OAISourceConnectorProperties_Marketo &marketo) {
    m_marketo = marketo;
    m_marketo_isSet = true;
}

bool OAISourceFlowConfig_SourceConnectorProperties::is_marketo_Set() const{
    return m_marketo_isSet;
}

bool OAISourceFlowConfig_SourceConnectorProperties::is_marketo_Valid() const{
    return m_marketo_isValid;
}

OAISourceConnectorProperties_S3 OAISourceFlowConfig_SourceConnectorProperties::getS3() const {
    return m_s3;
}
void OAISourceFlowConfig_SourceConnectorProperties::setS3(const OAISourceConnectorProperties_S3 &s3) {
    m_s3 = s3;
    m_s3_isSet = true;
}

bool OAISourceFlowConfig_SourceConnectorProperties::is_s3_Set() const{
    return m_s3_isSet;
}

bool OAISourceFlowConfig_SourceConnectorProperties::is_s3_Valid() const{
    return m_s3_isValid;
}

OAISourceConnectorProperties_Salesforce OAISourceFlowConfig_SourceConnectorProperties::getSalesforce() const {
    return m_salesforce;
}
void OAISourceFlowConfig_SourceConnectorProperties::setSalesforce(const OAISourceConnectorProperties_Salesforce &salesforce) {
    m_salesforce = salesforce;
    m_salesforce_isSet = true;
}

bool OAISourceFlowConfig_SourceConnectorProperties::is_salesforce_Set() const{
    return m_salesforce_isSet;
}

bool OAISourceFlowConfig_SourceConnectorProperties::is_salesforce_Valid() const{
    return m_salesforce_isValid;
}

OAISourceConnectorProperties_ServiceNow OAISourceFlowConfig_SourceConnectorProperties::getServiceNow() const {
    return m_service_now;
}
void OAISourceFlowConfig_SourceConnectorProperties::setServiceNow(const OAISourceConnectorProperties_ServiceNow &service_now) {
    m_service_now = service_now;
    m_service_now_isSet = true;
}

bool OAISourceFlowConfig_SourceConnectorProperties::is_service_now_Set() const{
    return m_service_now_isSet;
}

bool OAISourceFlowConfig_SourceConnectorProperties::is_service_now_Valid() const{
    return m_service_now_isValid;
}

OAISourceConnectorProperties_Zendesk OAISourceFlowConfig_SourceConnectorProperties::getZendesk() const {
    return m_zendesk;
}
void OAISourceFlowConfig_SourceConnectorProperties::setZendesk(const OAISourceConnectorProperties_Zendesk &zendesk) {
    m_zendesk = zendesk;
    m_zendesk_isSet = true;
}

bool OAISourceFlowConfig_SourceConnectorProperties::is_zendesk_Set() const{
    return m_zendesk_isSet;
}

bool OAISourceFlowConfig_SourceConnectorProperties::is_zendesk_Valid() const{
    return m_zendesk_isValid;
}

bool OAISourceFlowConfig_SourceConnectorProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_marketo.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_salesforce.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_now.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_zendesk.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISourceFlowConfig_SourceConnectorProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
