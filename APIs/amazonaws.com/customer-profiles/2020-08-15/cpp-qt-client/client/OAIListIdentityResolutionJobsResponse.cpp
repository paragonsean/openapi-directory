/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListIdentityResolutionJobsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListIdentityResolutionJobsResponse::OAIListIdentityResolutionJobsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListIdentityResolutionJobsResponse::OAIListIdentityResolutionJobsResponse() {
    this->initializeModel();
}

OAIListIdentityResolutionJobsResponse::~OAIListIdentityResolutionJobsResponse() {}

void OAIListIdentityResolutionJobsResponse::initializeModel() {

    m_identity_resolution_jobs_list_isSet = false;
    m_identity_resolution_jobs_list_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListIdentityResolutionJobsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListIdentityResolutionJobsResponse::fromJsonObject(QJsonObject json) {

    m_identity_resolution_jobs_list_isValid = ::OpenAPI::fromJsonValue(m_identity_resolution_jobs_list, json[QString("IdentityResolutionJobsList")]);
    m_identity_resolution_jobs_list_isSet = !json[QString("IdentityResolutionJobsList")].isNull() && m_identity_resolution_jobs_list_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListIdentityResolutionJobsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListIdentityResolutionJobsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_identity_resolution_jobs_list.isSet()) {
        obj.insert(QString("IdentityResolutionJobsList"), ::OpenAPI::toJsonValue(m_identity_resolution_jobs_list));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListIdentityResolutionJobsResponse::getIdentityResolutionJobsList() const {
    return m_identity_resolution_jobs_list;
}
void OAIListIdentityResolutionJobsResponse::setIdentityResolutionJobsList(const QList &identity_resolution_jobs_list) {
    m_identity_resolution_jobs_list = identity_resolution_jobs_list;
    m_identity_resolution_jobs_list_isSet = true;
}

bool OAIListIdentityResolutionJobsResponse::is_identity_resolution_jobs_list_Set() const{
    return m_identity_resolution_jobs_list_isSet;
}

bool OAIListIdentityResolutionJobsResponse::is_identity_resolution_jobs_list_Valid() const{
    return m_identity_resolution_jobs_list_isValid;
}

QString OAIListIdentityResolutionJobsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListIdentityResolutionJobsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListIdentityResolutionJobsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListIdentityResolutionJobsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListIdentityResolutionJobsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_identity_resolution_jobs_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListIdentityResolutionJobsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
