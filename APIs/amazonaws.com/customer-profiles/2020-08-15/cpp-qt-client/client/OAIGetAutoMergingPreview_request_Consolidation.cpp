/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetAutoMergingPreview_request_Consolidation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetAutoMergingPreview_request_Consolidation::OAIGetAutoMergingPreview_request_Consolidation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetAutoMergingPreview_request_Consolidation::OAIGetAutoMergingPreview_request_Consolidation() {
    this->initializeModel();
}

OAIGetAutoMergingPreview_request_Consolidation::~OAIGetAutoMergingPreview_request_Consolidation() {}

void OAIGetAutoMergingPreview_request_Consolidation::initializeModel() {

    m_matching_attributes_list_isSet = false;
    m_matching_attributes_list_isValid = false;
}

void OAIGetAutoMergingPreview_request_Consolidation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetAutoMergingPreview_request_Consolidation::fromJsonObject(QJsonObject json) {

    m_matching_attributes_list_isValid = ::OpenAPI::fromJsonValue(m_matching_attributes_list, json[QString("MatchingAttributesList")]);
    m_matching_attributes_list_isSet = !json[QString("MatchingAttributesList")].isNull() && m_matching_attributes_list_isValid;
}

QString OAIGetAutoMergingPreview_request_Consolidation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetAutoMergingPreview_request_Consolidation::asJsonObject() const {
    QJsonObject obj;
    if (m_matching_attributes_list.isSet()) {
        obj.insert(QString("MatchingAttributesList"), ::OpenAPI::toJsonValue(m_matching_attributes_list));
    }
    return obj;
}

QList OAIGetAutoMergingPreview_request_Consolidation::getMatchingAttributesList() const {
    return m_matching_attributes_list;
}
void OAIGetAutoMergingPreview_request_Consolidation::setMatchingAttributesList(const QList &matching_attributes_list) {
    m_matching_attributes_list = matching_attributes_list;
    m_matching_attributes_list_isSet = true;
}

bool OAIGetAutoMergingPreview_request_Consolidation::is_matching_attributes_list_Set() const{
    return m_matching_attributes_list_isSet;
}

bool OAIGetAutoMergingPreview_request_Consolidation::is_matching_attributes_list_Valid() const{
    return m_matching_attributes_list_isValid;
}

bool OAIGetAutoMergingPreview_request_Consolidation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_matching_attributes_list.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetAutoMergingPreview_request_Consolidation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
