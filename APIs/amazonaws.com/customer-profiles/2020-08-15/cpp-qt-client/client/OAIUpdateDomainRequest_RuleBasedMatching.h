/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateDomainRequest_RuleBasedMatching.h
 *
 * 
 */

#ifndef OAIUpdateDomainRequest_RuleBasedMatching_H
#define OAIUpdateDomainRequest_RuleBasedMatching_H

#include <QJsonObject>

#include "OAIConflictResolution.h"
#include "OAIExportingConfig.h"
#include "OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector;
class OAIConflictResolution;
class OAIExportingConfig;

class OAIUpdateDomainRequest_RuleBasedMatching : public OAIObject {
public:
    OAIUpdateDomainRequest_RuleBasedMatching();
    OAIUpdateDomainRequest_RuleBasedMatching(QString json);
    ~OAIUpdateDomainRequest_RuleBasedMatching() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QList getMatchingRules() const;
    void setMatchingRules(const QList &matching_rules);
    bool is_matching_rules_Set() const;
    bool is_matching_rules_Valid() const;

    qint32 getMaxAllowedRuleLevelForMerging() const;
    void setMaxAllowedRuleLevelForMerging(const qint32 &max_allowed_rule_level_for_merging);
    bool is_max_allowed_rule_level_for_merging_Set() const;
    bool is_max_allowed_rule_level_for_merging_Valid() const;

    qint32 getMaxAllowedRuleLevelForMatching() const;
    void setMaxAllowedRuleLevelForMatching(const qint32 &max_allowed_rule_level_for_matching);
    bool is_max_allowed_rule_level_for_matching_Set() const;
    bool is_max_allowed_rule_level_for_matching_Valid() const;

    OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector getAttributeTypesSelector() const;
    void setAttributeTypesSelector(const OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector &attribute_types_selector);
    bool is_attribute_types_selector_Set() const;
    bool is_attribute_types_selector_Valid() const;

    OAIConflictResolution getConflictResolution() const;
    void setConflictResolution(const OAIConflictResolution &conflict_resolution);
    bool is_conflict_resolution_Set() const;
    bool is_conflict_resolution_Valid() const;

    OAIExportingConfig getExportingConfig() const;
    void setExportingConfig(const OAIExportingConfig &exporting_config);
    bool is_exporting_config_Set() const;
    bool is_exporting_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QList m_matching_rules;
    bool m_matching_rules_isSet;
    bool m_matching_rules_isValid;

    qint32 m_max_allowed_rule_level_for_merging;
    bool m_max_allowed_rule_level_for_merging_isSet;
    bool m_max_allowed_rule_level_for_merging_isValid;

    qint32 m_max_allowed_rule_level_for_matching;
    bool m_max_allowed_rule_level_for_matching_isSet;
    bool m_max_allowed_rule_level_for_matching_isValid;

    OAIUpdateDomain_request_RuleBasedMatching_AttributeTypesSelector m_attribute_types_selector;
    bool m_attribute_types_selector_isSet;
    bool m_attribute_types_selector_isValid;

    OAIConflictResolution m_conflict_resolution;
    bool m_conflict_resolution_isSet;
    bool m_conflict_resolution_isValid;

    OAIExportingConfig m_exporting_config;
    bool m_exporting_config_isSet;
    bool m_exporting_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateDomainRequest_RuleBasedMatching)

#endif // OAIUpdateDomainRequest_RuleBasedMatching_H
