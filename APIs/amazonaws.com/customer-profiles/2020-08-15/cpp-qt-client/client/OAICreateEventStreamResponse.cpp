/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateEventStreamResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateEventStreamResponse::OAICreateEventStreamResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateEventStreamResponse::OAICreateEventStreamResponse() {
    this->initializeModel();
}

OAICreateEventStreamResponse::~OAICreateEventStreamResponse() {}

void OAICreateEventStreamResponse::initializeModel() {

    m_event_stream_arn_isSet = false;
    m_event_stream_arn_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateEventStreamResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateEventStreamResponse::fromJsonObject(QJsonObject json) {

    m_event_stream_arn_isValid = ::OpenAPI::fromJsonValue(m_event_stream_arn, json[QString("EventStreamArn")]);
    m_event_stream_arn_isSet = !json[QString("EventStreamArn")].isNull() && m_event_stream_arn_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAICreateEventStreamResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateEventStreamResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_event_stream_arn_isSet) {
        obj.insert(QString("EventStreamArn"), ::OpenAPI::toJsonValue(m_event_stream_arn));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateEventStreamResponse::getEventStreamArn() const {
    return m_event_stream_arn;
}
void OAICreateEventStreamResponse::setEventStreamArn(const QString &event_stream_arn) {
    m_event_stream_arn = event_stream_arn;
    m_event_stream_arn_isSet = true;
}

bool OAICreateEventStreamResponse::is_event_stream_arn_Set() const{
    return m_event_stream_arn_isSet;
}

bool OAICreateEventStreamResponse::is_event_stream_arn_Valid() const{
    return m_event_stream_arn_isValid;
}

QMap OAICreateEventStreamResponse::getTags() const {
    return m_tags;
}
void OAICreateEventStreamResponse::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateEventStreamResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateEventStreamResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateEventStreamResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_event_stream_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateEventStreamResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_event_stream_arn_isValid && true;
}

} // namespace OpenAPI
