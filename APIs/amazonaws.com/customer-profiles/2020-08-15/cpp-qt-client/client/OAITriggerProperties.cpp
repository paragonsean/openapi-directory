/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITriggerProperties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITriggerProperties::OAITriggerProperties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITriggerProperties::OAITriggerProperties() {
    this->initializeModel();
}

OAITriggerProperties::~OAITriggerProperties() {}

void OAITriggerProperties::initializeModel() {

    m_scheduled_isSet = false;
    m_scheduled_isValid = false;
}

void OAITriggerProperties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITriggerProperties::fromJsonObject(QJsonObject json) {

    m_scheduled_isValid = ::OpenAPI::fromJsonValue(m_scheduled, json[QString("Scheduled")]);
    m_scheduled_isSet = !json[QString("Scheduled")].isNull() && m_scheduled_isValid;
}

QString OAITriggerProperties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITriggerProperties::asJsonObject() const {
    QJsonObject obj;
    if (m_scheduled.isSet()) {
        obj.insert(QString("Scheduled"), ::OpenAPI::toJsonValue(m_scheduled));
    }
    return obj;
}

OAITriggerProperties_Scheduled OAITriggerProperties::getScheduled() const {
    return m_scheduled;
}
void OAITriggerProperties::setScheduled(const OAITriggerProperties_Scheduled &scheduled) {
    m_scheduled = scheduled;
    m_scheduled_isSet = true;
}

bool OAITriggerProperties::is_scheduled_Set() const{
    return m_scheduled_isSet;
}

bool OAITriggerProperties::is_scheduled_Valid() const{
    return m_scheduled_isValid;
}

bool OAITriggerProperties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_scheduled.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITriggerProperties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
