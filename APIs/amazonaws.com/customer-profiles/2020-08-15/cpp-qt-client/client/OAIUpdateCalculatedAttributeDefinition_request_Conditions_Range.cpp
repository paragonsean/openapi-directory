/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range() {
    this->initializeModel();
}

OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::~OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range() {}

void OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;

    m_unit_isSet = false;
    m_unit_isValid = false;
}

void OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::fromJsonObject(QJsonObject json) {

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("Value")]);
    m_value_isSet = !json[QString("Value")].isNull() && m_value_isValid;

    m_unit_isValid = ::OpenAPI::fromJsonValue(m_unit, json[QString("Unit")]);
    m_unit_isSet = !json[QString("Unit")].isNull() && m_unit_isValid;
}

QString OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::asJsonObject() const {
    QJsonObject obj;
    if (m_value_isSet) {
        obj.insert(QString("Value"), ::OpenAPI::toJsonValue(m_value));
    }
    if (m_unit.isSet()) {
        obj.insert(QString("Unit"), ::OpenAPI::toJsonValue(m_unit));
    }
    return obj;
}

qint32 OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::getValue() const {
    return m_value;
}
void OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::setValue(const qint32 &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::is_value_Set() const{
    return m_value_isSet;
}

bool OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::is_value_Valid() const{
    return m_value_isValid;
}

OAIUnit OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::getUnit() const {
    return m_unit;
}
void OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::setUnit(const OAIUnit &unit) {
    m_unit = unit;
    m_unit_isSet = true;
}

bool OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::is_unit_Set() const{
    return m_unit_isSet;
}

bool OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::is_unit_Valid() const{
    return m_unit_isValid;
}

bool OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateCalculatedAttributeDefinition_request_Conditions_Range::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid && m_unit_isValid && true;
}

} // namespace OpenAPI
