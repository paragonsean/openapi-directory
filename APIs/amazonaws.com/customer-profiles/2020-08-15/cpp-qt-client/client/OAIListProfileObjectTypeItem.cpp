/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListProfileObjectTypeItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListProfileObjectTypeItem::OAIListProfileObjectTypeItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListProfileObjectTypeItem::OAIListProfileObjectTypeItem() {
    this->initializeModel();
}

OAIListProfileObjectTypeItem::~OAIListProfileObjectTypeItem() {}

void OAIListProfileObjectTypeItem::initializeModel() {

    m_object_type_name_isSet = false;
    m_object_type_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_last_updated_at_isSet = false;
    m_last_updated_at_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIListProfileObjectTypeItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListProfileObjectTypeItem::fromJsonObject(QJsonObject json) {

    m_object_type_name_isValid = ::OpenAPI::fromJsonValue(m_object_type_name, json[QString("ObjectTypeName")]);
    m_object_type_name_isSet = !json[QString("ObjectTypeName")].isNull() && m_object_type_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("CreatedAt")]);
    m_created_at_isSet = !json[QString("CreatedAt")].isNull() && m_created_at_isValid;

    m_last_updated_at_isValid = ::OpenAPI::fromJsonValue(m_last_updated_at, json[QString("LastUpdatedAt")]);
    m_last_updated_at_isSet = !json[QString("LastUpdatedAt")].isNull() && m_last_updated_at_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAIListProfileObjectTypeItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListProfileObjectTypeItem::asJsonObject() const {
    QJsonObject obj;
    if (m_object_type_name_isSet) {
        obj.insert(QString("ObjectTypeName"), ::OpenAPI::toJsonValue(m_object_type_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("CreatedAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_last_updated_at_isSet) {
        obj.insert(QString("LastUpdatedAt"), ::OpenAPI::toJsonValue(m_last_updated_at));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAIListProfileObjectTypeItem::getObjectTypeName() const {
    return m_object_type_name;
}
void OAIListProfileObjectTypeItem::setObjectTypeName(const QString &object_type_name) {
    m_object_type_name = object_type_name;
    m_object_type_name_isSet = true;
}

bool OAIListProfileObjectTypeItem::is_object_type_name_Set() const{
    return m_object_type_name_isSet;
}

bool OAIListProfileObjectTypeItem::is_object_type_name_Valid() const{
    return m_object_type_name_isValid;
}

QString OAIListProfileObjectTypeItem::getDescription() const {
    return m_description;
}
void OAIListProfileObjectTypeItem::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIListProfileObjectTypeItem::is_description_Set() const{
    return m_description_isSet;
}

bool OAIListProfileObjectTypeItem::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIListProfileObjectTypeItem::getCreatedAt() const {
    return m_created_at;
}
void OAIListProfileObjectTypeItem::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIListProfileObjectTypeItem::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIListProfileObjectTypeItem::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QDateTime OAIListProfileObjectTypeItem::getLastUpdatedAt() const {
    return m_last_updated_at;
}
void OAIListProfileObjectTypeItem::setLastUpdatedAt(const QDateTime &last_updated_at) {
    m_last_updated_at = last_updated_at;
    m_last_updated_at_isSet = true;
}

bool OAIListProfileObjectTypeItem::is_last_updated_at_Set() const{
    return m_last_updated_at_isSet;
}

bool OAIListProfileObjectTypeItem::is_last_updated_at_Valid() const{
    return m_last_updated_at_isValid;
}

QMap OAIListProfileObjectTypeItem::getTags() const {
    return m_tags;
}
void OAIListProfileObjectTypeItem::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIListProfileObjectTypeItem::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIListProfileObjectTypeItem::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIListProfileObjectTypeItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_type_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListProfileObjectTypeItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_object_type_name_isValid && m_description_isValid && true;
}

} // namespace OpenAPI
