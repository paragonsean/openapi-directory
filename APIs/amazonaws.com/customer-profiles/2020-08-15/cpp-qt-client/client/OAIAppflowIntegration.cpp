/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppflowIntegration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppflowIntegration::OAIAppflowIntegration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppflowIntegration::OAIAppflowIntegration() {
    this->initializeModel();
}

OAIAppflowIntegration::~OAIAppflowIntegration() {}

void OAIAppflowIntegration::initializeModel() {

    m_flow_definition_isSet = false;
    m_flow_definition_isValid = false;

    m_batches_isSet = false;
    m_batches_isValid = false;
}

void OAIAppflowIntegration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppflowIntegration::fromJsonObject(QJsonObject json) {

    m_flow_definition_isValid = ::OpenAPI::fromJsonValue(m_flow_definition, json[QString("FlowDefinition")]);
    m_flow_definition_isSet = !json[QString("FlowDefinition")].isNull() && m_flow_definition_isValid;

    m_batches_isValid = ::OpenAPI::fromJsonValue(m_batches, json[QString("Batches")]);
    m_batches_isSet = !json[QString("Batches")].isNull() && m_batches_isValid;
}

QString OAIAppflowIntegration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppflowIntegration::asJsonObject() const {
    QJsonObject obj;
    if (m_flow_definition.isSet()) {
        obj.insert(QString("FlowDefinition"), ::OpenAPI::toJsonValue(m_flow_definition));
    }
    if (m_batches.isSet()) {
        obj.insert(QString("Batches"), ::OpenAPI::toJsonValue(m_batches));
    }
    return obj;
}

OAIFlowDefinition OAIAppflowIntegration::getFlowDefinition() const {
    return m_flow_definition;
}
void OAIAppflowIntegration::setFlowDefinition(const OAIFlowDefinition &flow_definition) {
    m_flow_definition = flow_definition;
    m_flow_definition_isSet = true;
}

bool OAIAppflowIntegration::is_flow_definition_Set() const{
    return m_flow_definition_isSet;
}

bool OAIAppflowIntegration::is_flow_definition_Valid() const{
    return m_flow_definition_isValid;
}

QList OAIAppflowIntegration::getBatches() const {
    return m_batches;
}
void OAIAppflowIntegration::setBatches(const QList &batches) {
    m_batches = batches;
    m_batches_isSet = true;
}

bool OAIAppflowIntegration::is_batches_Set() const{
    return m_batches_isSet;
}

bool OAIAppflowIntegration::is_batches_Valid() const{
    return m_batches_isValid;
}

bool OAIAppflowIntegration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_flow_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_batches.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppflowIntegration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_flow_definition_isValid && true;
}

} // namespace OpenAPI
