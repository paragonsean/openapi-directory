/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobSchedule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobSchedule::OAIJobSchedule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobSchedule::OAIJobSchedule() {
    this->initializeModel();
}

OAIJobSchedule::~OAIJobSchedule() {}

void OAIJobSchedule::initializeModel() {

    m_day_of_the_week_isSet = false;
    m_day_of_the_week_isValid = false;

    m_time_isSet = false;
    m_time_isValid = false;
}

void OAIJobSchedule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobSchedule::fromJsonObject(QJsonObject json) {

    m_day_of_the_week_isValid = ::OpenAPI::fromJsonValue(m_day_of_the_week, json[QString("DayOfTheWeek")]);
    m_day_of_the_week_isSet = !json[QString("DayOfTheWeek")].isNull() && m_day_of_the_week_isValid;

    m_time_isValid = ::OpenAPI::fromJsonValue(m_time, json[QString("Time")]);
    m_time_isSet = !json[QString("Time")].isNull() && m_time_isValid;
}

QString OAIJobSchedule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobSchedule::asJsonObject() const {
    QJsonObject obj;
    if (m_day_of_the_week.isSet()) {
        obj.insert(QString("DayOfTheWeek"), ::OpenAPI::toJsonValue(m_day_of_the_week));
    }
    if (m_time_isSet) {
        obj.insert(QString("Time"), ::OpenAPI::toJsonValue(m_time));
    }
    return obj;
}

OAIJobScheduleDayOfTheWeek OAIJobSchedule::getDayOfTheWeek() const {
    return m_day_of_the_week;
}
void OAIJobSchedule::setDayOfTheWeek(const OAIJobScheduleDayOfTheWeek &day_of_the_week) {
    m_day_of_the_week = day_of_the_week;
    m_day_of_the_week_isSet = true;
}

bool OAIJobSchedule::is_day_of_the_week_Set() const{
    return m_day_of_the_week_isSet;
}

bool OAIJobSchedule::is_day_of_the_week_Valid() const{
    return m_day_of_the_week_isValid;
}

QString OAIJobSchedule::getTime() const {
    return m_time;
}
void OAIJobSchedule::setTime(const QString &time) {
    m_time = time;
    m_time_isSet = true;
}

bool OAIJobSchedule::is_time_Set() const{
    return m_time_isSet;
}

bool OAIJobSchedule::is_time_Valid() const{
    return m_time_isValid;
}

bool OAIJobSchedule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_day_of_the_week.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobSchedule::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_day_of_the_week_isValid && m_time_isValid && true;
}

} // namespace OpenAPI
