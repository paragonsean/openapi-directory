/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetSimilarProfilesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetSimilarProfilesRequest::OAIGetSimilarProfilesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetSimilarProfilesRequest::OAIGetSimilarProfilesRequest() {
    this->initializeModel();
}

OAIGetSimilarProfilesRequest::~OAIGetSimilarProfilesRequest() {}

void OAIGetSimilarProfilesRequest::initializeModel() {

    m_match_type_isSet = false;
    m_match_type_isValid = false;

    m_search_key_isSet = false;
    m_search_key_isValid = false;

    m_search_value_isSet = false;
    m_search_value_isValid = false;
}

void OAIGetSimilarProfilesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetSimilarProfilesRequest::fromJsonObject(QJsonObject json) {

    m_match_type_isValid = ::OpenAPI::fromJsonValue(m_match_type, json[QString("MatchType")]);
    m_match_type_isSet = !json[QString("MatchType")].isNull() && m_match_type_isValid;

    m_search_key_isValid = ::OpenAPI::fromJsonValue(m_search_key, json[QString("SearchKey")]);
    m_search_key_isSet = !json[QString("SearchKey")].isNull() && m_search_key_isValid;

    m_search_value_isValid = ::OpenAPI::fromJsonValue(m_search_value, json[QString("SearchValue")]);
    m_search_value_isSet = !json[QString("SearchValue")].isNull() && m_search_value_isValid;
}

QString OAIGetSimilarProfilesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetSimilarProfilesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_match_type.isSet()) {
        obj.insert(QString("MatchType"), ::OpenAPI::toJsonValue(m_match_type));
    }
    if (m_search_key_isSet) {
        obj.insert(QString("SearchKey"), ::OpenAPI::toJsonValue(m_search_key));
    }
    if (m_search_value_isSet) {
        obj.insert(QString("SearchValue"), ::OpenAPI::toJsonValue(m_search_value));
    }
    return obj;
}

OAIMatchType OAIGetSimilarProfilesRequest::getMatchType() const {
    return m_match_type;
}
void OAIGetSimilarProfilesRequest::setMatchType(const OAIMatchType &match_type) {
    m_match_type = match_type;
    m_match_type_isSet = true;
}

bool OAIGetSimilarProfilesRequest::is_match_type_Set() const{
    return m_match_type_isSet;
}

bool OAIGetSimilarProfilesRequest::is_match_type_Valid() const{
    return m_match_type_isValid;
}

QString OAIGetSimilarProfilesRequest::getSearchKey() const {
    return m_search_key;
}
void OAIGetSimilarProfilesRequest::setSearchKey(const QString &search_key) {
    m_search_key = search_key;
    m_search_key_isSet = true;
}

bool OAIGetSimilarProfilesRequest::is_search_key_Set() const{
    return m_search_key_isSet;
}

bool OAIGetSimilarProfilesRequest::is_search_key_Valid() const{
    return m_search_key_isValid;
}

QString OAIGetSimilarProfilesRequest::getSearchValue() const {
    return m_search_value;
}
void OAIGetSimilarProfilesRequest::setSearchValue(const QString &search_value) {
    m_search_value = search_value;
    m_search_value_isSet = true;
}

bool OAIGetSimilarProfilesRequest::is_search_value_Set() const{
    return m_search_value_isSet;
}

bool OAIGetSimilarProfilesRequest::is_search_value_Valid() const{
    return m_search_value_isValid;
}

bool OAIGetSimilarProfilesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_match_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetSimilarProfilesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_match_type_isValid && m_search_key_isValid && m_search_value_isValid && true;
}

} // namespace OpenAPI
