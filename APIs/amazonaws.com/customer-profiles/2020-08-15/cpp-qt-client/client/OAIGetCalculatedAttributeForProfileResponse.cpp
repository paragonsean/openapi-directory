/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetCalculatedAttributeForProfileResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetCalculatedAttributeForProfileResponse::OAIGetCalculatedAttributeForProfileResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetCalculatedAttributeForProfileResponse::OAIGetCalculatedAttributeForProfileResponse() {
    this->initializeModel();
}

OAIGetCalculatedAttributeForProfileResponse::~OAIGetCalculatedAttributeForProfileResponse() {}

void OAIGetCalculatedAttributeForProfileResponse::initializeModel() {

    m_calculated_attribute_name_isSet = false;
    m_calculated_attribute_name_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_is_data_partial_isSet = false;
    m_is_data_partial_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIGetCalculatedAttributeForProfileResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetCalculatedAttributeForProfileResponse::fromJsonObject(QJsonObject json) {

    m_calculated_attribute_name_isValid = ::OpenAPI::fromJsonValue(m_calculated_attribute_name, json[QString("CalculatedAttributeName")]);
    m_calculated_attribute_name_isSet = !json[QString("CalculatedAttributeName")].isNull() && m_calculated_attribute_name_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("DisplayName")]);
    m_display_name_isSet = !json[QString("DisplayName")].isNull() && m_display_name_isValid;

    m_is_data_partial_isValid = ::OpenAPI::fromJsonValue(m_is_data_partial, json[QString("IsDataPartial")]);
    m_is_data_partial_isSet = !json[QString("IsDataPartial")].isNull() && m_is_data_partial_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("Value")]);
    m_value_isSet = !json[QString("Value")].isNull() && m_value_isValid;
}

QString OAIGetCalculatedAttributeForProfileResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetCalculatedAttributeForProfileResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_calculated_attribute_name_isSet) {
        obj.insert(QString("CalculatedAttributeName"), ::OpenAPI::toJsonValue(m_calculated_attribute_name));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("DisplayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_is_data_partial_isSet) {
        obj.insert(QString("IsDataPartial"), ::OpenAPI::toJsonValue(m_is_data_partial));
    }
    if (m_value_isSet) {
        obj.insert(QString("Value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIGetCalculatedAttributeForProfileResponse::getCalculatedAttributeName() const {
    return m_calculated_attribute_name;
}
void OAIGetCalculatedAttributeForProfileResponse::setCalculatedAttributeName(const QString &calculated_attribute_name) {
    m_calculated_attribute_name = calculated_attribute_name;
    m_calculated_attribute_name_isSet = true;
}

bool OAIGetCalculatedAttributeForProfileResponse::is_calculated_attribute_name_Set() const{
    return m_calculated_attribute_name_isSet;
}

bool OAIGetCalculatedAttributeForProfileResponse::is_calculated_attribute_name_Valid() const{
    return m_calculated_attribute_name_isValid;
}

QString OAIGetCalculatedAttributeForProfileResponse::getDisplayName() const {
    return m_display_name;
}
void OAIGetCalculatedAttributeForProfileResponse::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGetCalculatedAttributeForProfileResponse::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGetCalculatedAttributeForProfileResponse::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGetCalculatedAttributeForProfileResponse::getIsDataPartial() const {
    return m_is_data_partial;
}
void OAIGetCalculatedAttributeForProfileResponse::setIsDataPartial(const QString &is_data_partial) {
    m_is_data_partial = is_data_partial;
    m_is_data_partial_isSet = true;
}

bool OAIGetCalculatedAttributeForProfileResponse::is_is_data_partial_Set() const{
    return m_is_data_partial_isSet;
}

bool OAIGetCalculatedAttributeForProfileResponse::is_is_data_partial_Valid() const{
    return m_is_data_partial_isValid;
}

QString OAIGetCalculatedAttributeForProfileResponse::getValue() const {
    return m_value;
}
void OAIGetCalculatedAttributeForProfileResponse::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIGetCalculatedAttributeForProfileResponse::is_value_Set() const{
    return m_value_isSet;
}

bool OAIGetCalculatedAttributeForProfileResponse::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIGetCalculatedAttributeForProfileResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_calculated_attribute_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_data_partial_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetCalculatedAttributeForProfileResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
