/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListProfileObjectsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListProfileObjectsRequest::OAIListProfileObjectsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListProfileObjectsRequest::OAIListProfileObjectsRequest() {
    this->initializeModel();
}

OAIListProfileObjectsRequest::~OAIListProfileObjectsRequest() {}

void OAIListProfileObjectsRequest::initializeModel() {

    m_object_type_name_isSet = false;
    m_object_type_name_isValid = false;

    m_profile_id_isSet = false;
    m_profile_id_isValid = false;

    m_object_filter_isSet = false;
    m_object_filter_isValid = false;
}

void OAIListProfileObjectsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListProfileObjectsRequest::fromJsonObject(QJsonObject json) {

    m_object_type_name_isValid = ::OpenAPI::fromJsonValue(m_object_type_name, json[QString("ObjectTypeName")]);
    m_object_type_name_isSet = !json[QString("ObjectTypeName")].isNull() && m_object_type_name_isValid;

    m_profile_id_isValid = ::OpenAPI::fromJsonValue(m_profile_id, json[QString("ProfileId")]);
    m_profile_id_isSet = !json[QString("ProfileId")].isNull() && m_profile_id_isValid;

    m_object_filter_isValid = ::OpenAPI::fromJsonValue(m_object_filter, json[QString("ObjectFilter")]);
    m_object_filter_isSet = !json[QString("ObjectFilter")].isNull() && m_object_filter_isValid;
}

QString OAIListProfileObjectsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListProfileObjectsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_object_type_name_isSet) {
        obj.insert(QString("ObjectTypeName"), ::OpenAPI::toJsonValue(m_object_type_name));
    }
    if (m_profile_id_isSet) {
        obj.insert(QString("ProfileId"), ::OpenAPI::toJsonValue(m_profile_id));
    }
    if (m_object_filter.isSet()) {
        obj.insert(QString("ObjectFilter"), ::OpenAPI::toJsonValue(m_object_filter));
    }
    return obj;
}

QString OAIListProfileObjectsRequest::getObjectTypeName() const {
    return m_object_type_name;
}
void OAIListProfileObjectsRequest::setObjectTypeName(const QString &object_type_name) {
    m_object_type_name = object_type_name;
    m_object_type_name_isSet = true;
}

bool OAIListProfileObjectsRequest::is_object_type_name_Set() const{
    return m_object_type_name_isSet;
}

bool OAIListProfileObjectsRequest::is_object_type_name_Valid() const{
    return m_object_type_name_isValid;
}

QString OAIListProfileObjectsRequest::getProfileId() const {
    return m_profile_id;
}
void OAIListProfileObjectsRequest::setProfileId(const QString &profile_id) {
    m_profile_id = profile_id;
    m_profile_id_isSet = true;
}

bool OAIListProfileObjectsRequest::is_profile_id_Set() const{
    return m_profile_id_isSet;
}

bool OAIListProfileObjectsRequest::is_profile_id_Valid() const{
    return m_profile_id_isValid;
}

OAIListProfileObjectsRequest_ObjectFilter OAIListProfileObjectsRequest::getObjectFilter() const {
    return m_object_filter;
}
void OAIListProfileObjectsRequest::setObjectFilter(const OAIListProfileObjectsRequest_ObjectFilter &object_filter) {
    m_object_filter = object_filter;
    m_object_filter_isSet = true;
}

bool OAIListProfileObjectsRequest::is_object_filter_Set() const{
    return m_object_filter_isSet;
}

bool OAIListProfileObjectsRequest::is_object_filter_Valid() const{
    return m_object_filter_isValid;
}

bool OAIListProfileObjectsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_type_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_filter.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListProfileObjectsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_object_type_name_isValid && m_profile_id_isValid && true;
}

} // namespace OpenAPI
