/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetWorkflowResponse.h
 *
 * 
 */

#ifndef OAIGetWorkflowResponse_H
#define OAIGetWorkflowResponse_H

#include <QJsonObject>

#include "OAIGetWorkflowResponse_Attributes.h"
#include "OAIGetWorkflowResponse_Metrics.h"
#include "OAIStatus.h"
#include "OAIWorkflowType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetWorkflowResponse_Attributes;
class OAIGetWorkflowResponse_Metrics;

class OAIGetWorkflowResponse : public OAIObject {
public:
    OAIGetWorkflowResponse();
    OAIGetWorkflowResponse(QString json);
    ~OAIGetWorkflowResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getWorkflowId() const;
    void setWorkflowId(const QString &workflow_id);
    bool is_workflow_id_Set() const;
    bool is_workflow_id_Valid() const;

    OAIWorkflowType getWorkflowType() const;
    void setWorkflowType(const OAIWorkflowType &workflow_type);
    bool is_workflow_type_Set() const;
    bool is_workflow_type_Valid() const;

    OAIStatus getStatus() const;
    void setStatus(const OAIStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getErrorDescription() const;
    void setErrorDescription(const QString &error_description);
    bool is_error_description_Set() const;
    bool is_error_description_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QDateTime getLastUpdatedAt() const;
    void setLastUpdatedAt(const QDateTime &last_updated_at);
    bool is_last_updated_at_Set() const;
    bool is_last_updated_at_Valid() const;

    OAIGetWorkflowResponse_Attributes getAttributes() const;
    void setAttributes(const OAIGetWorkflowResponse_Attributes &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    OAIGetWorkflowResponse_Metrics getMetrics() const;
    void setMetrics(const OAIGetWorkflowResponse_Metrics &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_workflow_id;
    bool m_workflow_id_isSet;
    bool m_workflow_id_isValid;

    OAIWorkflowType m_workflow_type;
    bool m_workflow_type_isSet;
    bool m_workflow_type_isValid;

    OAIStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_error_description;
    bool m_error_description_isSet;
    bool m_error_description_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QDateTime m_last_updated_at;
    bool m_last_updated_at_isSet;
    bool m_last_updated_at_isValid;

    OAIGetWorkflowResponse_Attributes m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    OAIGetWorkflowResponse_Metrics m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetWorkflowResponse)

#endif // OAIGetWorkflowResponse_H
