/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListProfileObjectsItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListProfileObjectsItem::OAIListProfileObjectsItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListProfileObjectsItem::OAIListProfileObjectsItem() {
    this->initializeModel();
}

OAIListProfileObjectsItem::~OAIListProfileObjectsItem() {}

void OAIListProfileObjectsItem::initializeModel() {

    m_object_type_name_isSet = false;
    m_object_type_name_isValid = false;

    m_profile_object_unique_key_isSet = false;
    m_profile_object_unique_key_isValid = false;

    m_object_isSet = false;
    m_object_isValid = false;
}

void OAIListProfileObjectsItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListProfileObjectsItem::fromJsonObject(QJsonObject json) {

    m_object_type_name_isValid = ::OpenAPI::fromJsonValue(m_object_type_name, json[QString("ObjectTypeName")]);
    m_object_type_name_isSet = !json[QString("ObjectTypeName")].isNull() && m_object_type_name_isValid;

    m_profile_object_unique_key_isValid = ::OpenAPI::fromJsonValue(m_profile_object_unique_key, json[QString("ProfileObjectUniqueKey")]);
    m_profile_object_unique_key_isSet = !json[QString("ProfileObjectUniqueKey")].isNull() && m_profile_object_unique_key_isValid;

    m_object_isValid = ::OpenAPI::fromJsonValue(m_object, json[QString("Object")]);
    m_object_isSet = !json[QString("Object")].isNull() && m_object_isValid;
}

QString OAIListProfileObjectsItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListProfileObjectsItem::asJsonObject() const {
    QJsonObject obj;
    if (m_object_type_name_isSet) {
        obj.insert(QString("ObjectTypeName"), ::OpenAPI::toJsonValue(m_object_type_name));
    }
    if (m_profile_object_unique_key_isSet) {
        obj.insert(QString("ProfileObjectUniqueKey"), ::OpenAPI::toJsonValue(m_profile_object_unique_key));
    }
    if (m_object_isSet) {
        obj.insert(QString("Object"), ::OpenAPI::toJsonValue(m_object));
    }
    return obj;
}

QString OAIListProfileObjectsItem::getObjectTypeName() const {
    return m_object_type_name;
}
void OAIListProfileObjectsItem::setObjectTypeName(const QString &object_type_name) {
    m_object_type_name = object_type_name;
    m_object_type_name_isSet = true;
}

bool OAIListProfileObjectsItem::is_object_type_name_Set() const{
    return m_object_type_name_isSet;
}

bool OAIListProfileObjectsItem::is_object_type_name_Valid() const{
    return m_object_type_name_isValid;
}

QString OAIListProfileObjectsItem::getProfileObjectUniqueKey() const {
    return m_profile_object_unique_key;
}
void OAIListProfileObjectsItem::setProfileObjectUniqueKey(const QString &profile_object_unique_key) {
    m_profile_object_unique_key = profile_object_unique_key;
    m_profile_object_unique_key_isSet = true;
}

bool OAIListProfileObjectsItem::is_profile_object_unique_key_Set() const{
    return m_profile_object_unique_key_isSet;
}

bool OAIListProfileObjectsItem::is_profile_object_unique_key_Valid() const{
    return m_profile_object_unique_key_isValid;
}

QString OAIListProfileObjectsItem::getObject() const {
    return m_object;
}
void OAIListProfileObjectsItem::setObject(const QString &object) {
    m_object = object;
    m_object_isSet = true;
}

bool OAIListProfileObjectsItem::is_object_Set() const{
    return m_object_isSet;
}

bool OAIListProfileObjectsItem::is_object_Valid() const{
    return m_object_isValid;
}

bool OAIListProfileObjectsItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_object_type_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_object_unique_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListProfileObjectsItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
