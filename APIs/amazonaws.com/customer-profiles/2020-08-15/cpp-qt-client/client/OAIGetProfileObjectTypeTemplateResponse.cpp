/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetProfileObjectTypeTemplateResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetProfileObjectTypeTemplateResponse::OAIGetProfileObjectTypeTemplateResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetProfileObjectTypeTemplateResponse::OAIGetProfileObjectTypeTemplateResponse() {
    this->initializeModel();
}

OAIGetProfileObjectTypeTemplateResponse::~OAIGetProfileObjectTypeTemplateResponse() {}

void OAIGetProfileObjectTypeTemplateResponse::initializeModel() {

    m_template_id_isSet = false;
    m_template_id_isValid = false;

    m_source_name_isSet = false;
    m_source_name_isValid = false;

    m_source_object_isSet = false;
    m_source_object_isValid = false;

    m_allow_profile_creation_isSet = false;
    m_allow_profile_creation_isValid = false;

    m_source_last_updated_timestamp_format_isSet = false;
    m_source_last_updated_timestamp_format_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_keys_isSet = false;
    m_keys_isValid = false;
}

void OAIGetProfileObjectTypeTemplateResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetProfileObjectTypeTemplateResponse::fromJsonObject(QJsonObject json) {

    m_template_id_isValid = ::OpenAPI::fromJsonValue(m_template_id, json[QString("TemplateId")]);
    m_template_id_isSet = !json[QString("TemplateId")].isNull() && m_template_id_isValid;

    m_source_name_isValid = ::OpenAPI::fromJsonValue(m_source_name, json[QString("SourceName")]);
    m_source_name_isSet = !json[QString("SourceName")].isNull() && m_source_name_isValid;

    m_source_object_isValid = ::OpenAPI::fromJsonValue(m_source_object, json[QString("SourceObject")]);
    m_source_object_isSet = !json[QString("SourceObject")].isNull() && m_source_object_isValid;

    m_allow_profile_creation_isValid = ::OpenAPI::fromJsonValue(m_allow_profile_creation, json[QString("AllowProfileCreation")]);
    m_allow_profile_creation_isSet = !json[QString("AllowProfileCreation")].isNull() && m_allow_profile_creation_isValid;

    m_source_last_updated_timestamp_format_isValid = ::OpenAPI::fromJsonValue(m_source_last_updated_timestamp_format, json[QString("SourceLastUpdatedTimestampFormat")]);
    m_source_last_updated_timestamp_format_isSet = !json[QString("SourceLastUpdatedTimestampFormat")].isNull() && m_source_last_updated_timestamp_format_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("Fields")]);
    m_fields_isSet = !json[QString("Fields")].isNull() && m_fields_isValid;

    m_keys_isValid = ::OpenAPI::fromJsonValue(m_keys, json[QString("Keys")]);
    m_keys_isSet = !json[QString("Keys")].isNull() && m_keys_isValid;
}

QString OAIGetProfileObjectTypeTemplateResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetProfileObjectTypeTemplateResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_template_id_isSet) {
        obj.insert(QString("TemplateId"), ::OpenAPI::toJsonValue(m_template_id));
    }
    if (m_source_name_isSet) {
        obj.insert(QString("SourceName"), ::OpenAPI::toJsonValue(m_source_name));
    }
    if (m_source_object_isSet) {
        obj.insert(QString("SourceObject"), ::OpenAPI::toJsonValue(m_source_object));
    }
    if (m_allow_profile_creation_isSet) {
        obj.insert(QString("AllowProfileCreation"), ::OpenAPI::toJsonValue(m_allow_profile_creation));
    }
    if (m_source_last_updated_timestamp_format_isSet) {
        obj.insert(QString("SourceLastUpdatedTimestampFormat"), ::OpenAPI::toJsonValue(m_source_last_updated_timestamp_format));
    }
    if (m_fields.isSet()) {
        obj.insert(QString("Fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_keys.isSet()) {
        obj.insert(QString("Keys"), ::OpenAPI::toJsonValue(m_keys));
    }
    return obj;
}

QString OAIGetProfileObjectTypeTemplateResponse::getTemplateId() const {
    return m_template_id;
}
void OAIGetProfileObjectTypeTemplateResponse::setTemplateId(const QString &template_id) {
    m_template_id = template_id;
    m_template_id_isSet = true;
}

bool OAIGetProfileObjectTypeTemplateResponse::is_template_id_Set() const{
    return m_template_id_isSet;
}

bool OAIGetProfileObjectTypeTemplateResponse::is_template_id_Valid() const{
    return m_template_id_isValid;
}

QString OAIGetProfileObjectTypeTemplateResponse::getSourceName() const {
    return m_source_name;
}
void OAIGetProfileObjectTypeTemplateResponse::setSourceName(const QString &source_name) {
    m_source_name = source_name;
    m_source_name_isSet = true;
}

bool OAIGetProfileObjectTypeTemplateResponse::is_source_name_Set() const{
    return m_source_name_isSet;
}

bool OAIGetProfileObjectTypeTemplateResponse::is_source_name_Valid() const{
    return m_source_name_isValid;
}

QString OAIGetProfileObjectTypeTemplateResponse::getSourceObject() const {
    return m_source_object;
}
void OAIGetProfileObjectTypeTemplateResponse::setSourceObject(const QString &source_object) {
    m_source_object = source_object;
    m_source_object_isSet = true;
}

bool OAIGetProfileObjectTypeTemplateResponse::is_source_object_Set() const{
    return m_source_object_isSet;
}

bool OAIGetProfileObjectTypeTemplateResponse::is_source_object_Valid() const{
    return m_source_object_isValid;
}

bool OAIGetProfileObjectTypeTemplateResponse::getAllowProfileCreation() const {
    return m_allow_profile_creation;
}
void OAIGetProfileObjectTypeTemplateResponse::setAllowProfileCreation(const bool &allow_profile_creation) {
    m_allow_profile_creation = allow_profile_creation;
    m_allow_profile_creation_isSet = true;
}

bool OAIGetProfileObjectTypeTemplateResponse::is_allow_profile_creation_Set() const{
    return m_allow_profile_creation_isSet;
}

bool OAIGetProfileObjectTypeTemplateResponse::is_allow_profile_creation_Valid() const{
    return m_allow_profile_creation_isValid;
}

QString OAIGetProfileObjectTypeTemplateResponse::getSourceLastUpdatedTimestampFormat() const {
    return m_source_last_updated_timestamp_format;
}
void OAIGetProfileObjectTypeTemplateResponse::setSourceLastUpdatedTimestampFormat(const QString &source_last_updated_timestamp_format) {
    m_source_last_updated_timestamp_format = source_last_updated_timestamp_format;
    m_source_last_updated_timestamp_format_isSet = true;
}

bool OAIGetProfileObjectTypeTemplateResponse::is_source_last_updated_timestamp_format_Set() const{
    return m_source_last_updated_timestamp_format_isSet;
}

bool OAIGetProfileObjectTypeTemplateResponse::is_source_last_updated_timestamp_format_Valid() const{
    return m_source_last_updated_timestamp_format_isValid;
}

QMap OAIGetProfileObjectTypeTemplateResponse::getFields() const {
    return m_fields;
}
void OAIGetProfileObjectTypeTemplateResponse::setFields(const QMap &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIGetProfileObjectTypeTemplateResponse::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIGetProfileObjectTypeTemplateResponse::is_fields_Valid() const{
    return m_fields_isValid;
}

QMap OAIGetProfileObjectTypeTemplateResponse::getKeys() const {
    return m_keys;
}
void OAIGetProfileObjectTypeTemplateResponse::setKeys(const QMap &keys) {
    m_keys = keys;
    m_keys_isSet = true;
}

bool OAIGetProfileObjectTypeTemplateResponse::is_keys_Set() const{
    return m_keys_isSet;
}

bool OAIGetProfileObjectTypeTemplateResponse::is_keys_Valid() const{
    return m_keys_isValid;
}

bool OAIGetProfileObjectTypeTemplateResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_template_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_object_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allow_profile_creation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_last_updated_timestamp_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_keys.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetProfileObjectTypeTemplateResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
