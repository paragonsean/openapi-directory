/**
 * Amazon Connect Customer Profiles
 * <fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. If you're new to Amazon Connect, you might find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\">Amazon Connect Administrator Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2020-08-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStatus::OAIStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStatus::OAIStatus() {
    this->initializeModel();
}

OAIStatus::~OAIStatus() {}

void OAIStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NOT_STARTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::NOT_STARTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IN_PROGRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COMPLETE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::COMPLETE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SPLIT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::SPLIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RETRY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::RETRY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CANCELLED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus::CANCELLED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIStatus::NOT_STARTED:
            val = "NOT_STARTED";
            break;
        case eOAIStatus::IN_PROGRESS:
            val = "IN_PROGRESS";
            break;
        case eOAIStatus::COMPLETE:
            val = "COMPLETE";
            break;
        case eOAIStatus::FAILED:
            val = "FAILED";
            break;
        case eOAIStatus::SPLIT:
            val = "SPLIT";
            break;
        case eOAIStatus::RETRY:
            val = "RETRY";
            break;
        case eOAIStatus::CANCELLED:
            val = "CANCELLED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIStatus::eOAIStatus OAIStatus::getValue() const {
    return m_value;
}

void OAIStatus::setValue(const OAIStatus::eOAIStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
