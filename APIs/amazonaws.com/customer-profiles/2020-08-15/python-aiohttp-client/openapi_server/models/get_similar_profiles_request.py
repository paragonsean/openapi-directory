# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetSimilarProfilesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, match_type: str=None, search_key: str=None, search_value: str=None):
        """GetSimilarProfilesRequest - a model defined in OpenAPI

        :param match_type: The match_type of this GetSimilarProfilesRequest.
        :param search_key: The search_key of this GetSimilarProfilesRequest.
        :param search_value: The search_value of this GetSimilarProfilesRequest.
        """
        self.openapi_types = {
            'match_type': str,
            'search_key': str,
            'search_value': str
        }

        self.attribute_map = {
            'match_type': 'MatchType',
            'search_key': 'SearchKey',
            'search_value': 'SearchValue'
        }

        self._match_type = match_type
        self._search_key = search_key
        self._search_value = search_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSimilarProfilesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSimilarProfiles_request of this GetSimilarProfilesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def match_type(self):
        """Gets the match_type of this GetSimilarProfilesRequest.

        Specify the type of matching to get similar profiles for.

        :return: The match_type of this GetSimilarProfilesRequest.
        :rtype: str
        """
        return self._match_type

    @match_type.setter
    def match_type(self, match_type):
        """Sets the match_type of this GetSimilarProfilesRequest.

        Specify the type of matching to get similar profiles for.

        :param match_type: The match_type of this GetSimilarProfilesRequest.
        :type match_type: str
        """
        allowed_values = ["RULE_BASED_MATCHING", "ML_BASED_MATCHING"]  # noqa: E501
        if match_type not in allowed_values:
            raise ValueError(
                "Invalid value for `match_type` ({0}), must be one of {1}"
                .format(match_type, allowed_values)
            )

        self._match_type = match_type

    @property
    def search_key(self):
        """Gets the search_key of this GetSimilarProfilesRequest.

        The string indicating the search key to be used.

        :return: The search_key of this GetSimilarProfilesRequest.
        :rtype: str
        """
        return self._search_key

    @search_key.setter
    def search_key(self, search_key):
        """Sets the search_key of this GetSimilarProfilesRequest.

        The string indicating the search key to be used.

        :param search_key: The search_key of this GetSimilarProfilesRequest.
        :type search_key: str
        """
        if search_key is None:
            raise ValueError("Invalid value for `search_key`, must not be `None`")
        if search_key is not None and len(search_key) > 255:
            raise ValueError("Invalid value for `search_key`, length must be less than or equal to `255`")
        if search_key is not None and len(search_key) < 1:
            raise ValueError("Invalid value for `search_key`, length must be greater than or equal to `1`")

        self._search_key = search_key

    @property
    def search_value(self):
        """Gets the search_value of this GetSimilarProfilesRequest.

        The string based on <code>SearchKey</code> to be searched for similar profiles.

        :return: The search_value of this GetSimilarProfilesRequest.
        :rtype: str
        """
        return self._search_value

    @search_value.setter
    def search_value(self, search_value):
        """Sets the search_value of this GetSimilarProfilesRequest.

        The string based on <code>SearchKey</code> to be searched for similar profiles.

        :param search_value: The search_value of this GetSimilarProfilesRequest.
        :type search_value: str
        """
        if search_value is None:
            raise ValueError("Invalid value for `search_value`, must not be `None`")
        if search_value is not None and len(search_value) > 255:
            raise ValueError("Invalid value for `search_value`, length must be less than or equal to `255`")
        if search_value is not None and len(search_value) < 1:
            raise ValueError("Invalid value for `search_value`, length must be greater than or equal to `1`")

        self._search_value = search_value
