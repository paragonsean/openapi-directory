# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_calculated_attribute_definition_request_conditions_range import UpdateCalculatedAttributeDefinitionRequestConditionsRange
from openapi_server.models.update_calculated_attribute_definition_request_conditions_threshold import UpdateCalculatedAttributeDefinitionRequestConditionsThreshold
from openapi_server import util


class Conditions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, range: UpdateCalculatedAttributeDefinitionRequestConditionsRange=None, object_count: int=None, threshold: UpdateCalculatedAttributeDefinitionRequestConditionsThreshold=None):
        """Conditions - a model defined in OpenAPI

        :param range: The range of this Conditions.
        :param object_count: The object_count of this Conditions.
        :param threshold: The threshold of this Conditions.
        """
        self.openapi_types = {
            'range': UpdateCalculatedAttributeDefinitionRequestConditionsRange,
            'object_count': int,
            'threshold': UpdateCalculatedAttributeDefinitionRequestConditionsThreshold
        }

        self.attribute_map = {
            'range': 'Range',
            'object_count': 'ObjectCount',
            'threshold': 'Threshold'
        }

        self._range = range
        self._object_count = object_count
        self._threshold = threshold

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Conditions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Conditions of this Conditions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def range(self):
        """Gets the range of this Conditions.


        :return: The range of this Conditions.
        :rtype: UpdateCalculatedAttributeDefinitionRequestConditionsRange
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this Conditions.


        :param range: The range of this Conditions.
        :type range: UpdateCalculatedAttributeDefinitionRequestConditionsRange
        """

        self._range = range

    @property
    def object_count(self):
        """Gets the object_count of this Conditions.


        :return: The object_count of this Conditions.
        :rtype: int
        """
        return self._object_count

    @object_count.setter
    def object_count(self, object_count):
        """Sets the object_count of this Conditions.


        :param object_count: The object_count of this Conditions.
        :type object_count: int
        """

        self._object_count = object_count

    @property
    def threshold(self):
        """Gets the threshold of this Conditions.


        :return: The threshold of this Conditions.
        :rtype: UpdateCalculatedAttributeDefinitionRequestConditionsThreshold
        """
        return self._threshold

    @threshold.setter
    def threshold(self, threshold):
        """Sets the threshold of this Conditions.


        :param threshold: The threshold of this Conditions.
        :type threshold: UpdateCalculatedAttributeDefinitionRequestConditionsThreshold
        """

        self._threshold = threshold
