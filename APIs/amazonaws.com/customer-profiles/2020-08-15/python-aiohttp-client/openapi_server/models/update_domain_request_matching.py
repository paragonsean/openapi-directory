# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_domain_request_matching_auto_merging import UpdateDomainRequestMatchingAutoMerging
from openapi_server.models.update_domain_request_matching_exporting_config import UpdateDomainRequestMatchingExportingConfig
from openapi_server.models.update_domain_request_matching_job_schedule import UpdateDomainRequestMatchingJobSchedule
from openapi_server import util


class UpdateDomainRequestMatching(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, job_schedule: UpdateDomainRequestMatchingJobSchedule=None, auto_merging: UpdateDomainRequestMatchingAutoMerging=None, exporting_config: UpdateDomainRequestMatchingExportingConfig=None):
        """UpdateDomainRequestMatching - a model defined in OpenAPI

        :param enabled: The enabled of this UpdateDomainRequestMatching.
        :param job_schedule: The job_schedule of this UpdateDomainRequestMatching.
        :param auto_merging: The auto_merging of this UpdateDomainRequestMatching.
        :param exporting_config: The exporting_config of this UpdateDomainRequestMatching.
        """
        self.openapi_types = {
            'enabled': bool,
            'job_schedule': UpdateDomainRequestMatchingJobSchedule,
            'auto_merging': UpdateDomainRequestMatchingAutoMerging,
            'exporting_config': UpdateDomainRequestMatchingExportingConfig
        }

        self.attribute_map = {
            'enabled': 'Enabled',
            'job_schedule': 'JobSchedule',
            'auto_merging': 'AutoMerging',
            'exporting_config': 'ExportingConfig'
        }

        self._enabled = enabled
        self._job_schedule = job_schedule
        self._auto_merging = auto_merging
        self._exporting_config = exporting_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDomainRequestMatching':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDomain_request_Matching of this UpdateDomainRequestMatching.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this UpdateDomainRequestMatching.


        :return: The enabled of this UpdateDomainRequestMatching.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this UpdateDomainRequestMatching.


        :param enabled: The enabled of this UpdateDomainRequestMatching.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def job_schedule(self):
        """Gets the job_schedule of this UpdateDomainRequestMatching.


        :return: The job_schedule of this UpdateDomainRequestMatching.
        :rtype: UpdateDomainRequestMatchingJobSchedule
        """
        return self._job_schedule

    @job_schedule.setter
    def job_schedule(self, job_schedule):
        """Sets the job_schedule of this UpdateDomainRequestMatching.


        :param job_schedule: The job_schedule of this UpdateDomainRequestMatching.
        :type job_schedule: UpdateDomainRequestMatchingJobSchedule
        """

        self._job_schedule = job_schedule

    @property
    def auto_merging(self):
        """Gets the auto_merging of this UpdateDomainRequestMatching.


        :return: The auto_merging of this UpdateDomainRequestMatching.
        :rtype: UpdateDomainRequestMatchingAutoMerging
        """
        return self._auto_merging

    @auto_merging.setter
    def auto_merging(self, auto_merging):
        """Sets the auto_merging of this UpdateDomainRequestMatching.


        :param auto_merging: The auto_merging of this UpdateDomainRequestMatching.
        :type auto_merging: UpdateDomainRequestMatchingAutoMerging
        """

        self._auto_merging = auto_merging

    @property
    def exporting_config(self):
        """Gets the exporting_config of this UpdateDomainRequestMatching.


        :return: The exporting_config of this UpdateDomainRequestMatching.
        :rtype: UpdateDomainRequestMatchingExportingConfig
        """
        return self._exporting_config

    @exporting_config.setter
    def exporting_config(self, exporting_config):
        """Sets the exporting_config of this UpdateDomainRequestMatching.


        :param exporting_config: The exporting_config of this UpdateDomainRequestMatching.
        :type exporting_config: UpdateDomainRequestMatchingExportingConfig
        """

        self._exporting_config = exporting_config
