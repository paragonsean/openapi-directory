# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentityResolutionJobJobStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, number_of_profiles_reviewed: int=None, number_of_matches_found: int=None, number_of_merges_done: int=None):
        """IdentityResolutionJobJobStats - a model defined in OpenAPI

        :param number_of_profiles_reviewed: The number_of_profiles_reviewed of this IdentityResolutionJobJobStats.
        :param number_of_matches_found: The number_of_matches_found of this IdentityResolutionJobJobStats.
        :param number_of_merges_done: The number_of_merges_done of this IdentityResolutionJobJobStats.
        """
        self.openapi_types = {
            'number_of_profiles_reviewed': int,
            'number_of_matches_found': int,
            'number_of_merges_done': int
        }

        self.attribute_map = {
            'number_of_profiles_reviewed': 'NumberOfProfilesReviewed',
            'number_of_matches_found': 'NumberOfMatchesFound',
            'number_of_merges_done': 'NumberOfMergesDone'
        }

        self._number_of_profiles_reviewed = number_of_profiles_reviewed
        self._number_of_matches_found = number_of_matches_found
        self._number_of_merges_done = number_of_merges_done

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentityResolutionJobJobStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentityResolutionJob_JobStats of this IdentityResolutionJobJobStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_of_profiles_reviewed(self):
        """Gets the number_of_profiles_reviewed of this IdentityResolutionJobJobStats.


        :return: The number_of_profiles_reviewed of this IdentityResolutionJobJobStats.
        :rtype: int
        """
        return self._number_of_profiles_reviewed

    @number_of_profiles_reviewed.setter
    def number_of_profiles_reviewed(self, number_of_profiles_reviewed):
        """Sets the number_of_profiles_reviewed of this IdentityResolutionJobJobStats.


        :param number_of_profiles_reviewed: The number_of_profiles_reviewed of this IdentityResolutionJobJobStats.
        :type number_of_profiles_reviewed: int
        """

        self._number_of_profiles_reviewed = number_of_profiles_reviewed

    @property
    def number_of_matches_found(self):
        """Gets the number_of_matches_found of this IdentityResolutionJobJobStats.


        :return: The number_of_matches_found of this IdentityResolutionJobJobStats.
        :rtype: int
        """
        return self._number_of_matches_found

    @number_of_matches_found.setter
    def number_of_matches_found(self, number_of_matches_found):
        """Sets the number_of_matches_found of this IdentityResolutionJobJobStats.


        :param number_of_matches_found: The number_of_matches_found of this IdentityResolutionJobJobStats.
        :type number_of_matches_found: int
        """

        self._number_of_matches_found = number_of_matches_found

    @property
    def number_of_merges_done(self):
        """Gets the number_of_merges_done of this IdentityResolutionJobJobStats.


        :return: The number_of_merges_done of this IdentityResolutionJobJobStats.
        :rtype: int
        """
        return self._number_of_merges_done

    @number_of_merges_done.setter
    def number_of_merges_done(self, number_of_merges_done):
        """Sets the number_of_merges_done of this IdentityResolutionJobJobStats.


        :param number_of_merges_done: The number_of_merges_done of this IdentityResolutionJobJobStats.
        :type number_of_merges_done: int
        """

        self._number_of_merges_done = number_of_merges_done
