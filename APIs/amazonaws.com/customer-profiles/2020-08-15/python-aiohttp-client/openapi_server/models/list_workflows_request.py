# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListWorkflowsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workflow_type: str=None, status: str=None, query_start_date: datetime=None, query_end_date: datetime=None):
        """ListWorkflowsRequest - a model defined in OpenAPI

        :param workflow_type: The workflow_type of this ListWorkflowsRequest.
        :param status: The status of this ListWorkflowsRequest.
        :param query_start_date: The query_start_date of this ListWorkflowsRequest.
        :param query_end_date: The query_end_date of this ListWorkflowsRequest.
        """
        self.openapi_types = {
            'workflow_type': str,
            'status': str,
            'query_start_date': datetime,
            'query_end_date': datetime
        }

        self.attribute_map = {
            'workflow_type': 'WorkflowType',
            'status': 'Status',
            'query_start_date': 'QueryStartDate',
            'query_end_date': 'QueryEndDate'
        }

        self._workflow_type = workflow_type
        self._status = status
        self._query_start_date = query_start_date
        self._query_end_date = query_end_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListWorkflowsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListWorkflows_request of this ListWorkflowsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workflow_type(self):
        """Gets the workflow_type of this ListWorkflowsRequest.

        The type of workflow. The only supported value is APPFLOW_INTEGRATION.

        :return: The workflow_type of this ListWorkflowsRequest.
        :rtype: str
        """
        return self._workflow_type

    @workflow_type.setter
    def workflow_type(self, workflow_type):
        """Sets the workflow_type of this ListWorkflowsRequest.

        The type of workflow. The only supported value is APPFLOW_INTEGRATION.

        :param workflow_type: The workflow_type of this ListWorkflowsRequest.
        :type workflow_type: str
        """
        allowed_values = ["APPFLOW_INTEGRATION"]  # noqa: E501
        if workflow_type not in allowed_values:
            raise ValueError(
                "Invalid value for `workflow_type` ({0}), must be one of {1}"
                .format(workflow_type, allowed_values)
            )

        self._workflow_type = workflow_type

    @property
    def status(self):
        """Gets the status of this ListWorkflowsRequest.

        Status of workflow execution.

        :return: The status of this ListWorkflowsRequest.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ListWorkflowsRequest.

        Status of workflow execution.

        :param status: The status of this ListWorkflowsRequest.
        :type status: str
        """
        allowed_values = ["NOT_STARTED", "IN_PROGRESS", "COMPLETE", "FAILED", "SPLIT", "RETRY", "CANCELLED"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def query_start_date(self):
        """Gets the query_start_date of this ListWorkflowsRequest.

        Retrieve workflows started after timestamp.

        :return: The query_start_date of this ListWorkflowsRequest.
        :rtype: datetime
        """
        return self._query_start_date

    @query_start_date.setter
    def query_start_date(self, query_start_date):
        """Sets the query_start_date of this ListWorkflowsRequest.

        Retrieve workflows started after timestamp.

        :param query_start_date: The query_start_date of this ListWorkflowsRequest.
        :type query_start_date: datetime
        """

        self._query_start_date = query_start_date

    @property
    def query_end_date(self):
        """Gets the query_end_date of this ListWorkflowsRequest.

        Retrieve workflows ended after timestamp.

        :return: The query_end_date of this ListWorkflowsRequest.
        :rtype: datetime
        """
        return self._query_end_date

    @query_end_date.setter
    def query_end_date(self, query_end_date):
        """Sets the query_end_date of this ListWorkflowsRequest.

        Retrieve workflows ended after timestamp.

        :param query_end_date: The query_end_date of this ListWorkflowsRequest.
        :type query_end_date: datetime
        """

        self._query_end_date = query_end_date
