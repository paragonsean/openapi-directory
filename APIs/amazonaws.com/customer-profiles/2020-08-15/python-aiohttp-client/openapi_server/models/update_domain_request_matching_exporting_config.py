# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.exporting_config_s3_exporting import ExportingConfigS3Exporting
from openapi_server import util


class UpdateDomainRequestMatchingExportingConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_exporting: ExportingConfigS3Exporting=None):
        """UpdateDomainRequestMatchingExportingConfig - a model defined in OpenAPI

        :param s3_exporting: The s3_exporting of this UpdateDomainRequestMatchingExportingConfig.
        """
        self.openapi_types = {
            's3_exporting': ExportingConfigS3Exporting
        }

        self.attribute_map = {
            's3_exporting': 'S3Exporting'
        }

        self._s3_exporting = s3_exporting

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDomainRequestMatchingExportingConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDomain_request_Matching_ExportingConfig of this UpdateDomainRequestMatchingExportingConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_exporting(self):
        """Gets the s3_exporting of this UpdateDomainRequestMatchingExportingConfig.


        :return: The s3_exporting of this UpdateDomainRequestMatchingExportingConfig.
        :rtype: ExportingConfigS3Exporting
        """
        return self._s3_exporting

    @s3_exporting.setter
    def s3_exporting(self, s3_exporting):
        """Sets the s3_exporting of this UpdateDomainRequestMatchingExportingConfig.


        :param s3_exporting: The s3_exporting of this UpdateDomainRequestMatchingExportingConfig.
        :type s3_exporting: ExportingConfigS3Exporting
        """

        self._s3_exporting = s3_exporting
