# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source_connector_type import SourceConnectorType
from openapi_server.models.source_flow_config_incremental_pull_config import SourceFlowConfigIncrementalPullConfig
from openapi_server.models.source_flow_config_source_connector_properties import SourceFlowConfigSourceConnectorProperties
from openapi_server import util


class SourceFlowConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connector_profile_name: str=None, connector_type: SourceConnectorType=None, incremental_pull_config: SourceFlowConfigIncrementalPullConfig=None, source_connector_properties: SourceFlowConfigSourceConnectorProperties=None):
        """SourceFlowConfig - a model defined in OpenAPI

        :param connector_profile_name: The connector_profile_name of this SourceFlowConfig.
        :param connector_type: The connector_type of this SourceFlowConfig.
        :param incremental_pull_config: The incremental_pull_config of this SourceFlowConfig.
        :param source_connector_properties: The source_connector_properties of this SourceFlowConfig.
        """
        self.openapi_types = {
            'connector_profile_name': str,
            'connector_type': SourceConnectorType,
            'incremental_pull_config': SourceFlowConfigIncrementalPullConfig,
            'source_connector_properties': SourceFlowConfigSourceConnectorProperties
        }

        self.attribute_map = {
            'connector_profile_name': 'ConnectorProfileName',
            'connector_type': 'ConnectorType',
            'incremental_pull_config': 'IncrementalPullConfig',
            'source_connector_properties': 'SourceConnectorProperties'
        }

        self._connector_profile_name = connector_profile_name
        self._connector_type = connector_type
        self._incremental_pull_config = incremental_pull_config
        self._source_connector_properties = source_connector_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceFlowConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceFlowConfig of this SourceFlowConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connector_profile_name(self):
        """Gets the connector_profile_name of this SourceFlowConfig.


        :return: The connector_profile_name of this SourceFlowConfig.
        :rtype: str
        """
        return self._connector_profile_name

    @connector_profile_name.setter
    def connector_profile_name(self, connector_profile_name):
        """Sets the connector_profile_name of this SourceFlowConfig.


        :param connector_profile_name: The connector_profile_name of this SourceFlowConfig.
        :type connector_profile_name: str
        """

        self._connector_profile_name = connector_profile_name

    @property
    def connector_type(self):
        """Gets the connector_type of this SourceFlowConfig.


        :return: The connector_type of this SourceFlowConfig.
        :rtype: SourceConnectorType
        """
        return self._connector_type

    @connector_type.setter
    def connector_type(self, connector_type):
        """Sets the connector_type of this SourceFlowConfig.


        :param connector_type: The connector_type of this SourceFlowConfig.
        :type connector_type: SourceConnectorType
        """
        if connector_type is None:
            raise ValueError("Invalid value for `connector_type`, must not be `None`")

        self._connector_type = connector_type

    @property
    def incremental_pull_config(self):
        """Gets the incremental_pull_config of this SourceFlowConfig.


        :return: The incremental_pull_config of this SourceFlowConfig.
        :rtype: SourceFlowConfigIncrementalPullConfig
        """
        return self._incremental_pull_config

    @incremental_pull_config.setter
    def incremental_pull_config(self, incremental_pull_config):
        """Sets the incremental_pull_config of this SourceFlowConfig.


        :param incremental_pull_config: The incremental_pull_config of this SourceFlowConfig.
        :type incremental_pull_config: SourceFlowConfigIncrementalPullConfig
        """

        self._incremental_pull_config = incremental_pull_config

    @property
    def source_connector_properties(self):
        """Gets the source_connector_properties of this SourceFlowConfig.


        :return: The source_connector_properties of this SourceFlowConfig.
        :rtype: SourceFlowConfigSourceConnectorProperties
        """
        return self._source_connector_properties

    @source_connector_properties.setter
    def source_connector_properties(self, source_connector_properties):
        """Sets the source_connector_properties of this SourceFlowConfig.


        :param source_connector_properties: The source_connector_properties of this SourceFlowConfig.
        :type source_connector_properties: SourceFlowConfigSourceConnectorProperties
        """
        if source_connector_properties is None:
            raise ValueError("Invalid value for `source_connector_properties`, must not be `None`")

        self._source_connector_properties = source_connector_properties
