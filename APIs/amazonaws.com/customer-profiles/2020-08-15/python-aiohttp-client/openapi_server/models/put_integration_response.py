# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutIntegrationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_name: str=None, uri: str=None, object_type_name: str=None, created_at: datetime=None, last_updated_at: datetime=None, tags: Dict=None, object_type_names: Dict=None, workflow_id: str=None, is_unstructured: bool=None):
        """PutIntegrationResponse - a model defined in OpenAPI

        :param domain_name: The domain_name of this PutIntegrationResponse.
        :param uri: The uri of this PutIntegrationResponse.
        :param object_type_name: The object_type_name of this PutIntegrationResponse.
        :param created_at: The created_at of this PutIntegrationResponse.
        :param last_updated_at: The last_updated_at of this PutIntegrationResponse.
        :param tags: The tags of this PutIntegrationResponse.
        :param object_type_names: The object_type_names of this PutIntegrationResponse.
        :param workflow_id: The workflow_id of this PutIntegrationResponse.
        :param is_unstructured: The is_unstructured of this PutIntegrationResponse.
        """
        self.openapi_types = {
            'domain_name': str,
            'uri': str,
            'object_type_name': str,
            'created_at': datetime,
            'last_updated_at': datetime,
            'tags': Dict,
            'object_type_names': Dict,
            'workflow_id': str,
            'is_unstructured': bool
        }

        self.attribute_map = {
            'domain_name': 'DomainName',
            'uri': 'Uri',
            'object_type_name': 'ObjectTypeName',
            'created_at': 'CreatedAt',
            'last_updated_at': 'LastUpdatedAt',
            'tags': 'Tags',
            'object_type_names': 'ObjectTypeNames',
            'workflow_id': 'WorkflowId',
            'is_unstructured': 'IsUnstructured'
        }

        self._domain_name = domain_name
        self._uri = uri
        self._object_type_name = object_type_name
        self._created_at = created_at
        self._last_updated_at = last_updated_at
        self._tags = tags
        self._object_type_names = object_type_names
        self._workflow_id = workflow_id
        self._is_unstructured = is_unstructured

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutIntegrationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutIntegrationResponse of this PutIntegrationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_name(self):
        """Gets the domain_name of this PutIntegrationResponse.


        :return: The domain_name of this PutIntegrationResponse.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this PutIntegrationResponse.


        :param domain_name: The domain_name of this PutIntegrationResponse.
        :type domain_name: str
        """
        if domain_name is None:
            raise ValueError("Invalid value for `domain_name`, must not be `None`")

        self._domain_name = domain_name

    @property
    def uri(self):
        """Gets the uri of this PutIntegrationResponse.


        :return: The uri of this PutIntegrationResponse.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this PutIntegrationResponse.


        :param uri: The uri of this PutIntegrationResponse.
        :type uri: str
        """
        if uri is None:
            raise ValueError("Invalid value for `uri`, must not be `None`")

        self._uri = uri

    @property
    def object_type_name(self):
        """Gets the object_type_name of this PutIntegrationResponse.


        :return: The object_type_name of this PutIntegrationResponse.
        :rtype: str
        """
        return self._object_type_name

    @object_type_name.setter
    def object_type_name(self, object_type_name):
        """Sets the object_type_name of this PutIntegrationResponse.


        :param object_type_name: The object_type_name of this PutIntegrationResponse.
        :type object_type_name: str
        """

        self._object_type_name = object_type_name

    @property
    def created_at(self):
        """Gets the created_at of this PutIntegrationResponse.


        :return: The created_at of this PutIntegrationResponse.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PutIntegrationResponse.


        :param created_at: The created_at of this PutIntegrationResponse.
        :type created_at: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")

        self._created_at = created_at

    @property
    def last_updated_at(self):
        """Gets the last_updated_at of this PutIntegrationResponse.


        :return: The last_updated_at of this PutIntegrationResponse.
        :rtype: datetime
        """
        return self._last_updated_at

    @last_updated_at.setter
    def last_updated_at(self, last_updated_at):
        """Sets the last_updated_at of this PutIntegrationResponse.


        :param last_updated_at: The last_updated_at of this PutIntegrationResponse.
        :type last_updated_at: datetime
        """
        if last_updated_at is None:
            raise ValueError("Invalid value for `last_updated_at`, must not be `None`")

        self._last_updated_at = last_updated_at

    @property
    def tags(self):
        """Gets the tags of this PutIntegrationResponse.


        :return: The tags of this PutIntegrationResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this PutIntegrationResponse.


        :param tags: The tags of this PutIntegrationResponse.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def object_type_names(self):
        """Gets the object_type_names of this PutIntegrationResponse.


        :return: The object_type_names of this PutIntegrationResponse.
        :rtype: Dict
        """
        return self._object_type_names

    @object_type_names.setter
    def object_type_names(self, object_type_names):
        """Sets the object_type_names of this PutIntegrationResponse.


        :param object_type_names: The object_type_names of this PutIntegrationResponse.
        :type object_type_names: Dict
        """

        self._object_type_names = object_type_names

    @property
    def workflow_id(self):
        """Gets the workflow_id of this PutIntegrationResponse.


        :return: The workflow_id of this PutIntegrationResponse.
        :rtype: str
        """
        return self._workflow_id

    @workflow_id.setter
    def workflow_id(self, workflow_id):
        """Sets the workflow_id of this PutIntegrationResponse.


        :param workflow_id: The workflow_id of this PutIntegrationResponse.
        :type workflow_id: str
        """

        self._workflow_id = workflow_id

    @property
    def is_unstructured(self):
        """Gets the is_unstructured of this PutIntegrationResponse.


        :return: The is_unstructured of this PutIntegrationResponse.
        :rtype: bool
        """
        return self._is_unstructured

    @is_unstructured.setter
    def is_unstructured(self, is_unstructured):
        """Sets the is_unstructured of this PutIntegrationResponse.


        :param is_unstructured: The is_unstructured of this PutIntegrationResponse.
        :type is_unstructured: bool
        """

        self._is_unstructured = is_unstructured
