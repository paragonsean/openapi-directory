# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListCalculatedAttributeForProfileItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, calculated_attribute_name: str=None, display_name: str=None, is_data_partial: str=None, value: str=None):
        """ListCalculatedAttributeForProfileItem - a model defined in OpenAPI

        :param calculated_attribute_name: The calculated_attribute_name of this ListCalculatedAttributeForProfileItem.
        :param display_name: The display_name of this ListCalculatedAttributeForProfileItem.
        :param is_data_partial: The is_data_partial of this ListCalculatedAttributeForProfileItem.
        :param value: The value of this ListCalculatedAttributeForProfileItem.
        """
        self.openapi_types = {
            'calculated_attribute_name': str,
            'display_name': str,
            'is_data_partial': str,
            'value': str
        }

        self.attribute_map = {
            'calculated_attribute_name': 'CalculatedAttributeName',
            'display_name': 'DisplayName',
            'is_data_partial': 'IsDataPartial',
            'value': 'Value'
        }

        self._calculated_attribute_name = calculated_attribute_name
        self._display_name = display_name
        self._is_data_partial = is_data_partial
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListCalculatedAttributeForProfileItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListCalculatedAttributeForProfileItem of this ListCalculatedAttributeForProfileItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def calculated_attribute_name(self):
        """Gets the calculated_attribute_name of this ListCalculatedAttributeForProfileItem.


        :return: The calculated_attribute_name of this ListCalculatedAttributeForProfileItem.
        :rtype: str
        """
        return self._calculated_attribute_name

    @calculated_attribute_name.setter
    def calculated_attribute_name(self, calculated_attribute_name):
        """Sets the calculated_attribute_name of this ListCalculatedAttributeForProfileItem.


        :param calculated_attribute_name: The calculated_attribute_name of this ListCalculatedAttributeForProfileItem.
        :type calculated_attribute_name: str
        """

        self._calculated_attribute_name = calculated_attribute_name

    @property
    def display_name(self):
        """Gets the display_name of this ListCalculatedAttributeForProfileItem.


        :return: The display_name of this ListCalculatedAttributeForProfileItem.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ListCalculatedAttributeForProfileItem.


        :param display_name: The display_name of this ListCalculatedAttributeForProfileItem.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def is_data_partial(self):
        """Gets the is_data_partial of this ListCalculatedAttributeForProfileItem.


        :return: The is_data_partial of this ListCalculatedAttributeForProfileItem.
        :rtype: str
        """
        return self._is_data_partial

    @is_data_partial.setter
    def is_data_partial(self, is_data_partial):
        """Sets the is_data_partial of this ListCalculatedAttributeForProfileItem.


        :param is_data_partial: The is_data_partial of this ListCalculatedAttributeForProfileItem.
        :type is_data_partial: str
        """

        self._is_data_partial = is_data_partial

    @property
    def value(self):
        """Gets the value of this ListCalculatedAttributeForProfileItem.


        :return: The value of this ListCalculatedAttributeForProfileItem.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ListCalculatedAttributeForProfileItem.


        :param value: The value of this ListCalculatedAttributeForProfileItem.
        :type value: str
        """

        self._value = value
