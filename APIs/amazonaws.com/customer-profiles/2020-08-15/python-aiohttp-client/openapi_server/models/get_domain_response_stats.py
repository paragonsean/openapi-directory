# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetDomainResponseStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, profile_count: int=None, metering_profile_count: int=None, object_count: int=None, total_size: int=None):
        """GetDomainResponseStats - a model defined in OpenAPI

        :param profile_count: The profile_count of this GetDomainResponseStats.
        :param metering_profile_count: The metering_profile_count of this GetDomainResponseStats.
        :param object_count: The object_count of this GetDomainResponseStats.
        :param total_size: The total_size of this GetDomainResponseStats.
        """
        self.openapi_types = {
            'profile_count': int,
            'metering_profile_count': int,
            'object_count': int,
            'total_size': int
        }

        self.attribute_map = {
            'profile_count': 'ProfileCount',
            'metering_profile_count': 'MeteringProfileCount',
            'object_count': 'ObjectCount',
            'total_size': 'TotalSize'
        }

        self._profile_count = profile_count
        self._metering_profile_count = metering_profile_count
        self._object_count = object_count
        self._total_size = total_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDomainResponseStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDomainResponse_Stats of this GetDomainResponseStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def profile_count(self):
        """Gets the profile_count of this GetDomainResponseStats.


        :return: The profile_count of this GetDomainResponseStats.
        :rtype: int
        """
        return self._profile_count

    @profile_count.setter
    def profile_count(self, profile_count):
        """Sets the profile_count of this GetDomainResponseStats.


        :param profile_count: The profile_count of this GetDomainResponseStats.
        :type profile_count: int
        """

        self._profile_count = profile_count

    @property
    def metering_profile_count(self):
        """Gets the metering_profile_count of this GetDomainResponseStats.


        :return: The metering_profile_count of this GetDomainResponseStats.
        :rtype: int
        """
        return self._metering_profile_count

    @metering_profile_count.setter
    def metering_profile_count(self, metering_profile_count):
        """Sets the metering_profile_count of this GetDomainResponseStats.


        :param metering_profile_count: The metering_profile_count of this GetDomainResponseStats.
        :type metering_profile_count: int
        """

        self._metering_profile_count = metering_profile_count

    @property
    def object_count(self):
        """Gets the object_count of this GetDomainResponseStats.


        :return: The object_count of this GetDomainResponseStats.
        :rtype: int
        """
        return self._object_count

    @object_count.setter
    def object_count(self, object_count):
        """Sets the object_count of this GetDomainResponseStats.


        :param object_count: The object_count of this GetDomainResponseStats.
        :type object_count: int
        """

        self._object_count = object_count

    @property
    def total_size(self):
        """Gets the total_size of this GetDomainResponseStats.


        :return: The total_size of this GetDomainResponseStats.
        :rtype: int
        """
        return self._total_size

    @total_size.setter
    def total_size(self, total_size):
        """Sets the total_size of this GetDomainResponseStats.


        :param total_size: The total_size of this GetDomainResponseStats.
        :type total_size: int
        """

        self._total_size = total_size
