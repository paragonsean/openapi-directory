openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Amazon Connect Customer Profiles</fullname> <p>Amazon Connect\
    \ Customer Profiles is a unified customer profile for your contact center that\
    \ has pre-built connectors powered by AppFlow that make it easy to combine customer\
    \ information from third party applications, such as Salesforce (CRM), ServiceNow\
    \ (ITSM), and your enterprise resource planning (ERP), with contact history from\
    \ your Amazon Connect contact center. If you're new to Amazon Connect, you might\
    \ find it helpful to review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/\"\
    >Amazon Connect Administrator Guide</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Connect Customer Profiles
  version: 2020-08-15
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: customer-profiles
  x-aws-signingName: profile
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/customer-profiles-2020-08-15.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/profile/
servers:
- description: The Customer Profiles multi-region endpoint
  url: "http://profile.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Customer Profiles multi-region endpoint
  url: "https://profile.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Customer Profiles endpoint for China (Beijing) and China (Ningxia)
  url: "http://profile.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Customer Profiles endpoint for China (Beijing) and China (Ningxia)
  url: "https://profile.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /domains:
    get:
      description: Returns a list of all the domains for an AWS account that have
        been created.
      operationId: list_domains
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The pagination token from the previous ListDomain API call.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: The maximum number of objects returned per page.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /domains/{DomainName}:
    delete:
      description: "Deletes a specific domain and all of its customer data, such as\
        \ customer profile attributes and their related objects."
      operationId: delete_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Returns information about a specific domain.
      operationId: get_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates a domain, which is a container for all customer data,\
        \ such as customer profile attributes, object types, profile keys, and encryption\
        \ keys. You can create multiple domains, and each domain can have multiple\
        \ third-party integrations.</p> <p>Each Amazon Connect instance can be associated\
        \ with only one domain. Multiple Amazon Connect instances can be associated\
        \ with one domain.</p> <p>Use this API or <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UpdateDomain.html\"\
        >UpdateDomain</a> to enable <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\"\
        >identity resolution</a>: set <code>Matching</code> to true.</p> <p>To prevent\
        \ cross-service impersonation when you call this API, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/cross-service-confused-deputy-prevention.html\"\
        >Cross-service confused deputy prevention</a> for sample policies that you\
        \ should apply. </p>"
      operationId: create_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDomain_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: "<p>Updates the properties of a domain, including creating or selecting\
        \ a dead letter queue or an encryption key.</p> <p>After a domain is created,\
        \ the name can’t be changed.</p> <p>Use this API or <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_CreateDomain.html\"\
        >CreateDomain</a> to enable <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\"\
        >identity resolution</a>: set <code>Matching</code> to true.</p> <p>To prevent\
        \ cross-service impersonation when you call this API, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/cross-service-confused-deputy-prevention.html\"\
        >Cross-service confused deputy prevention</a> for sample policies that you\
        \ should apply. </p> <p>To add or remove tags on an existing Domain, see <a\
        \ href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_TagResource.html\"\
        >TagResource</a>/<a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UntagResource.html\"\
        >UntagResource</a>.</p>"
      operationId: update_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDomain_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/calculated-attributes:
    get:
      description: Lists calculated attribute definitions for Customer Profiles
      operationId: list_calculated_attribute_definitions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The pagination token from the previous call to ListCalculatedAttributeDefinitions.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: The maximum number of calculated attribute definitions returned
          per page.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCalculatedAttributeDefinitionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /domains/{DomainName}/calculated-attributes/{CalculatedAttributeName}:
    delete:
      description: "Deletes an existing calculated attribute definition. Note that\
        \ deleting a default calculated attribute is possible, however once deleted,\
        \ you will be unable to undo that action and will need to recreate it on your\
        \ own using the CreateCalculatedAttributeDefinition API if you want it back."
      operationId: delete_calculated_attribute_definition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The unique name of the calculated attribute.
        explode: false
        in: path
        name: CalculatedAttributeName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z_][a-zA-Z_0-9-]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCalculatedAttributeDefinitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Provides more information on a calculated attribute definition
        for Customer Profiles.
      operationId: get_calculated_attribute_definition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The unique name of the calculated attribute.
        explode: false
        in: path
        name: CalculatedAttributeName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z_][a-zA-Z_0-9-]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCalculatedAttributeDefinitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Creates a new calculated attribute definition. After creation,\
        \ new object data ingested into Customer Profiles will be included in the\
        \ calculated attribute, which can be retrieved for a profile using the <a\
        \ href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetCalculatedAttributeForProfile.html\"\
        >GetCalculatedAttributeForProfile</a> API. Defining a calculated attribute\
        \ makes it available for all profiles within a domain. Each calculated attribute\
        \ can only reference one <code>ObjectType</code> and at most, two fields from\
        \ that <code>ObjectType</code>."
      operationId: create_calculated_attribute_definition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The unique name of the calculated attribute.
        explode: false
        in: path
        name: CalculatedAttributeName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z_][a-zA-Z_0-9-]*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCalculatedAttributeDefinition_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCalculatedAttributeDefinitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: "Updates an existing calculated attribute definition. When updating\
        \ the Conditions, note that increasing the date range of a calculated attribute\
        \ will not trigger inclusion of historical data greater than the current date\
        \ range."
      operationId: update_calculated_attribute_definition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The unique name of the calculated attribute.
        explode: false
        in: path
        name: CalculatedAttributeName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z_][a-zA-Z_0-9-]*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCalculatedAttributeDefinition_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCalculatedAttributeDefinitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/event-streams:
    get:
      description: Returns a list of all the event streams in a specific domain.
      operationId: list_event_streams
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: Identifies the next page of results to return.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: The maximum number of objects returned per page.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventStreamsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /domains/{DomainName}/event-streams/{EventStreamName}:
    delete:
      description: Disables and deletes the specified event stream.
      operationId: delete_event_stream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The name of the event stream
        explode: false
        in: path
        name: EventStreamName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEventStreamResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Returns information about the specified event stream in a specific
        domain.
      operationId: get_event_stream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The name of the event stream provided during create operations.
        explode: false
        in: path
        name: EventStreamName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventStreamResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates an event stream, which is a subscription to real-time\
        \ events, such as when profiles are created and updated through Amazon Connect\
        \ Customer Profiles.</p> <p>Each event stream can be associated with only\
        \ one Kinesis Data Stream destination in the same region and Amazon Web Services\
        \ account as the customer profiles domain</p>"
      operationId: create_event_stream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The name of the event stream.
        explode: false
        in: path
        name: EventStreamName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventStream_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEventStreamResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/identity-resolution-jobs:
    get:
      description: Lists all of the Identity Resolution Jobs in your domain. The response
        sorts the list by <code>JobStartTime</code>.
      operationId: list_identity_resolution_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: The maximum number of results to return per page.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdentityResolutionJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /domains/{DomainName}/identity-resolution-jobs/auto-merging-preview:
    post:
      description: "<p>Tests the auto-merging settings of your Identity Resolution\
        \ Job without merging your data. It randomly selects a sample of matching\
        \ groups from the existing matching results, and applies the automerging settings\
        \ that you provided. You can then view the number of profiles in the sample,\
        \ the number of matches, and the number of profiles identified to be merged.\
        \ This enables you to evaluate the accuracy of the attributes in your matching\
        \ list. </p> <p>You can't view which profiles are matched and would be merged.</p>\
        \ <important> <p>We strongly recommend you use this API to do a dry run of\
        \ the automerging process before running the Identity Resolution Job. Include\
        \ <b>at least</b> two matching attributes. If your matching list includes\
        \ too few attributes (such as only <code>FirstName</code> or only <code>LastName</code>),\
        \ there may be a large number of matches. This increases the chances of erroneous\
        \ merges.</p> </important>"
      operationId: get_auto_merging_preview
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAutoMergingPreview_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAutoMergingPreviewResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/identity-resolution-jobs/{JobId}:
    get:
      description: "<p>Returns information about an Identity Resolution Job in a specific\
        \ domain. </p> <p>Identity Resolution Jobs are set up using the Amazon Connect\
        \ admin console. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/use-identity-resolution.html\"\
        >Use Identity Resolution to consolidate similar profiles</a>.</p>"
      operationId: get_identity_resolution_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The unique identifier of the Identity Resolution Job.
        explode: false
        in: path
        name: JobId
        required: true
        schema:
          pattern: "[a-f0-9]{32}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIdentityResolutionJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /domains/{DomainName}/integrations:
    get:
      description: Lists all of the integrations in your domain.
      operationId: list_integrations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The pagination token from the previous ListIntegrations API call.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: The maximum number of objects returned per page.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Boolean to indicate if hidden integration should be returned.
          Defaults to <code>False</code>.
        explode: true
        in: query
        name: include-hidden
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIntegrationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Returns an integration for a domain.
      operationId: get_integration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteIntegration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIntegrationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: "<p>Adds an integration between the service and a third-party service,\
        \ which includes Amazon AppFlow and Amazon Connect.</p> <p>An integration\
        \ can belong to only one domain.</p> <p>To add or remove tags on an existing\
        \ Integration, see <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_TagResource.html\"\
        > TagResource </a>/<a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UntagResource.html\"\
        > UntagResource</a>.</p>"
      operationId: put_integration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutIntegration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutIntegrationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/integrations/delete:
    post:
      description: Removes an integration from a specific domain.
      operationId: delete_integration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteIntegration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteIntegrationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/matches:
    get:
      description: "<p>Before calling this API, use <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_CreateDomain.html\"\
        >CreateDomain</a> or <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UpdateDomain.html\"\
        >UpdateDomain</a> to enable identity resolution: set <code>Matching</code>\
        \ to true.</p> <p>GetMatches returns potentially matching profiles, based\
        \ on the results of the latest run of a machine learning process. </p> <important>\
        \ <p>The process of matching duplicate profiles. If <code>Matching</code>\
        \ = <code>true</code>, Amazon Connect Customer Profiles starts a weekly batch\
        \ process called Identity Resolution Job. If you do not specify a date and\
        \ time for Identity Resolution Job to run, by default it runs every Saturday\
        \ at 12AM UTC to detect duplicate profiles in your domains. </p> <p>After\
        \ the Identity Resolution Job completes, use the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\"\
        >GetMatches</a> API to return and review the results. Or, if you have configured\
        \ <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you can\
        \ download the results from S3.</p> </important> <p>Amazon Connect uses the\
        \ following profile attributes to identify matches:</p> <ul> <li> <p>PhoneNumber</p>\
        \ </li> <li> <p>HomePhoneNumber</p> </li> <li> <p>BusinessPhoneNumber</p>\
        \ </li> <li> <p>MobilePhoneNumber</p> </li> <li> <p>EmailAddress</p> </li>\
        \ <li> <p>PersonalEmailAddress</p> </li> <li> <p>BusinessEmailAddress</p>\
        \ </li> <li> <p>FullName</p> </li> </ul> <p>For example, two or more profiles—\
        with spelling mistakes such as <b>John Doe</b> and <b>Jhn Doe</b>, or different\
        \ casing email addresses such as <b>JOHN_DOE@ANYCOMPANY.COM</b> and <b>johndoe@anycompany.com</b>,\
        \ or different phone number formats such as <b>555-010-0000</b> and <b>+1-555-010-0000</b>—\
        can be detected as belonging to the same customer <b>John Doe</b> and merged\
        \ into a unified profile.</p>"
      operationId: get_matches
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: The maximum number of results to return per page.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMatchesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Returns a set of profiles that belong to the same matching group
        using the <code>matchId</code> or <code>profileId</code>. You can also specify
        the type of matching that you want for finding similar profiles using either
        <code>RULE_BASED_MATCHING</code> or <code>ML_BASED_MATCHING</code>.
      operationId: get_similar_profiles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The pagination token from the previous <code>GetSimilarProfiles</code>
          API call.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: The maximum number of objects returned per page.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSimilarProfiles_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSimilarProfilesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/object-types:
    get:
      description: Lists all of the templates available within the service.
      operationId: list_profile_object_types
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: Identifies the next page of results to return.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: The maximum number of objects returned per page.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProfileObjectTypesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /domains/{DomainName}/object-types/{ObjectTypeName}:
    delete:
      description: "Removes a ProfileObjectType from a specific domain as well as\
        \ removes all the ProfileObjects of that type. It also disables integrations\
        \ from this specific ProfileObjectType. In addition, it scrubs all of the\
        \ fields of the standard profile that were populated from this ProfileObjectType."
      operationId: delete_profile_object_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The name of the profile object type.
        explode: false
        in: path
        name: ObjectTypeName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z_][a-zA-Z_0-9-]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProfileObjectTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Returns the object types for a specific domain.
      operationId: get_profile_object_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The name of the profile object type.
        explode: false
        in: path
        name: ObjectTypeName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z_][a-zA-Z_0-9-]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProfileObjectTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "<p>Defines a ProfileObjectType.</p> <p>To add or remove tags on\
        \ an existing ObjectType, see <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_TagResource.html\"\
        > TagResource</a>/<a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UntagResource.html\"\
        >UntagResource</a>.</p>"
      operationId: put_profile_object_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The name of the profile object type.
        explode: false
        in: path
        name: ObjectTypeName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z_][a-zA-Z_0-9-]*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutProfileObjectType_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProfileObjectTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/profile/{ProfileId}/calculated-attributes:
    get:
      description: Retrieve a list of calculated attributes for a customer profile.
      operationId: list_calculated_attributes_for_profile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The pagination token from the previous call to ListCalculatedAttributesForProfile.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: The maximum number of calculated attributes returned per page.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The unique identifier of a customer profile.
        explode: false
        in: path
        name: ProfileId
        required: true
        schema:
          pattern: "[a-f0-9]{32}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCalculatedAttributesForProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /domains/{DomainName}/profile/{ProfileId}/calculated-attributes/{CalculatedAttributeName}:
    get:
      description: Retrieve a calculated attribute for a customer profile.
      operationId: get_calculated_attribute_for_profile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The unique identifier of a customer profile.
        explode: false
        in: path
        name: ProfileId
        required: true
        schema:
          pattern: "[a-f0-9]{32}"
          type: string
        style: simple
      - description: The unique name of the calculated attribute.
        explode: false
        in: path
        name: CalculatedAttributeName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z_][a-zA-Z_0-9-]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCalculatedAttributeForProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /domains/{DomainName}/profiles:
    post:
      description: <p>Creates a standard profile.</p> <p>A standard profile represents
        the following attributes for a customer profile in a domain.</p>
      operationId: create_profile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfile_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: "<p>Updates the properties of a profile. The ProfileId is required\
        \ for updating a customer profile.</p> <p>When calling the UpdateProfile API,\
        \ specifying an empty string value means that any existing value will be removed.\
        \ Not specifying a string value means that any value already there will be\
        \ kept.</p>"
      operationId: update_profile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfile_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/profiles/delete:
    post:
      description: Deletes the standard customer profile and all data pertaining to
        the profile.
      operationId: delete_profile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProfile_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/profiles/keys:
    post:
      description: "<p>Associates a new key value with a specific profile, such as\
        \ a Contact Record ContactId.</p> <p>A profile object can have a single unique\
        \ key and any number of additional keys that can be used to identify the profile\
        \ that it belongs to.</p>"
      operationId: add_profile_key
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProfileKey_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddProfileKeyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/profiles/keys/delete:
    post:
      description: Removes a searchable key from a customer profile.
      operationId: delete_profile_key
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProfileKey_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProfileKeyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/profiles/objects:
    post:
      description: Returns a list of objects associated with a profile of a given
        ProfileObjectType.
      operationId: list_profile_objects
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The pagination token from the previous call to ListProfileObjects.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: The maximum number of objects returned per page.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProfileObjects_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProfileObjectsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: "<p>Adds additional objects to customer profiles of a given ObjectType.</p>\
        \ <p>When adding a specific profile object, like a Contact Record, an inferred\
        \ profile can get created if it is not mapped to an existing profile. The\
        \ resulting profile will only have a phone number populated in the standard\
        \ ProfileObject. Any additional Contact Records with the same phone number\
        \ will be mapped to the same inferred profile.</p> <p>When a ProfileObject\
        \ is created and if a ProfileObjectType already exists for the ProfileObject,\
        \ it will provide data to a standard profile depending on the ProfileObjectType\
        \ definition.</p> <p>PutProfileObject needs an ObjectType, which can be created\
        \ using PutProfileObjectType.</p>"
      operationId: put_profile_object
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutProfileObject_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProfileObjectResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/profiles/objects/delete:
    post:
      description: Removes an object associated with a profile of a given ProfileObjectType.
      operationId: delete_profile_object
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProfileObject_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProfileObjectResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/profiles/objects/merge:
    post:
      description: "<p>Runs an AWS Lambda job that does the following:</p> <ol> <li>\
        \ <p>All the profileKeys in the <code>ProfileToBeMerged</code> will be moved\
        \ to the main profile.</p> </li> <li> <p>All the objects in the <code>ProfileToBeMerged</code>\
        \ will be moved to the main profile.</p> </li> <li> <p>All the <code>ProfileToBeMerged</code>\
        \ will be deleted at the end.</p> </li> <li> <p>All the profileKeys in the\
        \ <code>ProfileIdsToBeMerged</code> will be moved to the main profile.</p>\
        \ </li> <li> <p>Standard fields are merged as follows:</p> <ol> <li> <p>Fields\
        \ are always \"union\"-ed if there are no conflicts in standard fields or\
        \ attributeKeys.</p> </li> <li> <p>When there are conflicting fields:</p>\
        \ <ol> <li> <p>If no <code>SourceProfileIds</code> entry is specified, the\
        \ main Profile value is always taken. </p> </li> <li> <p>If a <code>SourceProfileIds</code>\
        \ entry is specified, the specified profileId is always taken, even if it\
        \ is a NULL value.</p> </li> </ol> </li> </ol> </li> </ol> <p>You can use\
        \ MergeProfiles together with <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\"\
        >GetMatches</a>, which returns potentially matching profiles, or use it with\
        \ the results of another matching system. After profiles have been merged,\
        \ they cannot be separated (unmerged).</p>"
      operationId: merge_profiles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeProfiles_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeProfilesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/profiles/ruleBasedMatches:
    get:
      description: Returns a set of <code>MatchIds</code> that belong to the given
        domain.
      operationId: list_rule_based_matches
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The pagination token from the previous <code>ListRuleBasedMatches</code>
          API call.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: The maximum number of <code>MatchIds</code> returned per page.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRuleBasedMatchesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /domains/{DomainName}/profiles/search:
    post:
      description: "<p>Searches for profiles within a specific domain using one or\
        \ more predefined search keys (e.g., _fullName, _phone, _email, _account,\
        \ etc.) and/or custom-defined search keys. A search key is a data type pair\
        \ that consists of a <code>KeyName</code> and <code>Values</code> list.</p>\
        \ <p>This operation supports searching for profiles with a minimum of 1 key-value(s)\
        \ pair and up to 5 key-value(s) pairs using either <code>AND</code> or <code>OR</code>\
        \ logic.</p>"
      operationId: search_profiles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The pagination token from the previous SearchProfiles API call.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: <p>The maximum number of objects returned per page.</p> <p>The
          default is 20 if this parameter is not included in the request.</p>
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchProfiles_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProfilesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/workflows:
    post:
      description: Query to list all workflows.
      operationId: list_workflows
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: The maximum number of results to return per page.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorkflows_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/workflows/integrations:
    post:
      description: " Creates an integration workflow. An integration workflow is an\
        \ async process which ingests historic data and sets up an integration for\
        \ ongoing updates. The supported Amazon AppFlow sources are Salesforce, ServiceNow,\
        \ and Marketo. "
      operationId: create_integration_workflow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIntegrationWorkflow_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIntegrationWorkflowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /domains/{DomainName}/workflows/{WorkflowId}:
    delete:
      description: Deletes the specified workflow and all its corresponding resources.
        This is an async process.
      operationId: delete_workflow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: Unique identifier for the workflow.
        explode: false
        in: path
        name: WorkflowId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkflowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Get details of specified workflow.
      operationId: get_workflow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: Unique identifier for the workflow.
        explode: false
        in: path
        name: WorkflowId
        required: true
        schema:
          pattern: "[a-f0-9]{32}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /domains/{DomainName}/workflows/{WorkflowId}/steps:
    get:
      description: Get granular list of steps in workflow.
      operationId: get_workflow_steps
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of the domain.
        explode: false
        in: path
        name: DomainName
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: Unique identifier for the workflow.
        explode: false
        in: path
        name: WorkflowId
        required: true
        schema:
          pattern: "[a-f0-9]{32}"
          type: string
        style: simple
      - description: The token for the next set of results. Use the value returned
          in the previous response in the next request to retrieve the next set of
          results.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: The maximum number of results to return per page.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowStepsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /integrations:
    post:
      description: Lists all of the integrations associated to a specific URI in the
        AWS account.
      operationId: list_account_integrations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The pagination token from the previous ListAccountIntegrations
          API call.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: The maximum number of objects returned per page.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Boolean to indicate if hidden integration should be returned.
          Defaults to <code>False</code>.
        explode: true
        in: query
        name: include-hidden
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteIntegration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountIntegrationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}:
    get:
      description: "Displays the tags associated with an Amazon Connect Customer Profiles\
        \ resource. In Connect Customer Profiles, domains, profile object types, and\
        \ integrations can be tagged."
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource for which you want to view tags.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 256
          pattern: "^arn:[a-z0-9]{1,10}:profile"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Assigns one or more tags (key-value pairs) to the specified\
        \ Amazon Connect Customer Profiles resource. Tags can help you organize and\
        \ categorize your resources. You can also use them to scope user permissions\
        \ by granting a user permission to access or change only resources with certain\
        \ tag values. In Connect Customer Profiles, domains, profile object types,\
        \ and integrations can be tagged.</p> <p>Tags don't have any semantic meaning\
        \ to AWS and are interpreted strictly as strings of characters.</p> <p>You\
        \ can use the TagResource action with a resource that already has tags. If\
        \ you specify a new tag key, this tag is appended to the list of tags associated\
        \ with the resource. If you specify a tag key that is already associated with\
        \ the resource, the new tag value that you specify replaces the previous value\
        \ for that tag.</p> <p>You can associate as many as 50 tags with a resource.</p>"
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource that you're adding tags to.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 256
          pattern: "^arn:[a-z0-9]{1,10}:profile"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}#tagKeys:
    delete:
      description: "Removes one or more tags from the specified Amazon Connect Customer\
        \ Profiles resource. In Connect Customer Profiles, domains, profile object\
        \ types, and integrations can be tagged."
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource from which you are removing tags.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 256
          pattern: "^arn:[a-z0-9]{1,10}:profile"
          type: string
        style: simple
      - description: The list of tag keys to remove from the resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /templates:
    get:
      description: Lists all of the template information for object types.
      operationId: list_profile_object_type_templates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The pagination token from the previous ListObjectTypeTemplates
          API call.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: The maximum number of objects returned per page.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProfileObjectTypeTemplatesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /templates/{TemplateId}:
    get:
      description: "<p>Returns the template information for a specific object type.</p>\
        \ <p>A template is a predefined ProfileObjectType, such as “Salesforce-Account”\
        \ or “Salesforce-Contact.” When a user sends a ProfileObject, using the PutProfileObject\
        \ API, with an ObjectTypeName that matches one of the TemplateIds, it uses\
        \ the mappings from the template.</p>"
      operationId: get_profile_object_type_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A unique identifier for the object template.
        explode: false
        in: path
        name: TemplateId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProfileObjectTypeTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AddProfileKeyResponse:
      example:
        KeyName: ""
        Values: ""
      properties:
        KeyName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: A searchable identifier of a customer profile.
          title: KeyName
        Values:
          allOf:
          - $ref: '#/components/schemas/requestValueList'
          - description: A list of key values.
          title: Values
      title: AddProfileKeyResponse
      type: object
    string1To255:
      maxLength: 255
      minLength: 1
      title: string1To255
      type: string
    BadRequestException: {}
    AccessDeniedException: {}
    ResourceNotFoundException: {}
    ThrottlingException: {}
    InternalServerException: {}
    CreateCalculatedAttributeDefinitionResponse:
      example:
        Description: ""
        AttributeDetails:
          Expression: ""
          Attributes: ""
        Statistic: ""
        LastUpdatedAt: ""
        CreatedAt: ""
        DisplayName: ""
        CalculatedAttributeName: ""
        Conditions:
          Range:
            Value: ""
            Unit: ""
          ObjectCount: ""
          Threshold:
            Operator: ""
            Value: ""
        Tags: ""
      properties:
        CalculatedAttributeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The unique name of the calculated attribute.
          title: CalculatedAttributeName
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/displayName'
          - description: The display name of the calculated attribute.
          title: DisplayName
        Description:
          allOf:
          - $ref: '#/components/schemas/text'
          - description: The description of the calculated attribute.
          title: Description
        AttributeDetails:
          $ref: '#/components/schemas/CreateCalculatedAttributeDefinitionResponse_AttributeDetails'
        Conditions:
          $ref: '#/components/schemas/CreateCalculatedAttributeDefinitionResponse_Conditions'
        Statistic:
          allOf:
          - $ref: '#/components/schemas/Statistic'
          - description: The aggregation operation to perform for the calculated attribute.
          title: Statistic
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the calculated attribute definition
              was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the calculated attribute definition
              was most recently edited.
          title: LastUpdatedAt
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
      title: CreateCalculatedAttributeDefinitionResponse
      type: object
    AttributeList:
      items:
        $ref: '#/components/schemas/AttributeItem'
      maxItems: 2
      minItems: 1
      type: array
    Range:
      description: The relative time period over which data is included in the aggregation.
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/Value'
          - description: The amount of time of the specified unit.
          title: Value
        Unit:
          allOf:
          - $ref: '#/components/schemas/Unit'
          - description: The unit of time.
          title: Unit
      required:
      - Unit
      - Value
      title: Range
      type: object
    ObjectCount:
      maximum: 100
      minimum: 1
      type: integer
    Threshold:
      description: The threshold for the calculated attribute.
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The value of the threshold.
          title: Value
        Operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          - description: The operator of the threshold.
          title: Operator
      required:
      - Operator
      - Value
      title: Threshold
      type: object
    TagValue:
      maxLength: 256
      title: TagValue
      type: string
    CreateDomainResponse:
      example:
        Matching:
          AutoMerging:
            Consolidation:
              MatchingAttributesList: ""
            Enabled: ""
            ConflictResolution:
              ConflictResolvingModel: ""
              SourceName: ""
            MinAllowedConfidenceScoreForMerging: ""
          JobSchedule:
            DayOfTheWeek: ""
            Time: ""
          Enabled: ""
          ExportingConfig:
            S3Exporting:
              S3BucketName: ""
              S3KeyName: ""
        DefaultExpirationDays: ""
        LastUpdatedAt: ""
        DomainName: ""
        DeadLetterQueueUrl: ""
        CreatedAt: ""
        DefaultEncryptionKey: ""
        RuleBasedMatching:
          Status: ""
          MaxAllowedRuleLevelForMerging: ""
          Enabled: ""
          MatchingRules: ""
          AttributeTypesSelector:
            Address: ""
            AttributeMatchingModel: ""
            PhoneNumber: ""
            EmailAddress: ""
          ConflictResolution:
            ConflictResolvingModel: ""
            SourceName: ""
          ExportingConfig:
            S3Exporting:
              S3BucketName: ""
              S3KeyName: ""
          MaxAllowedRuleLevelForMatching: ""
        Tags: ""
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The unique name of the domain.
          title: DomainName
        DefaultExpirationDays:
          allOf:
          - $ref: '#/components/schemas/expirationDaysInteger'
          - description: The default number of days until the data within the domain
              expires.
          title: DefaultExpirationDays
        DefaultEncryptionKey:
          allOf:
          - $ref: '#/components/schemas/encryptionKey'
          - description: "The default encryption key, which is an AWS managed key,\
              \ is used when no specific type of encryption key is specified. It is\
              \ used to encrypt all data before it is placed in permanent or semi-permanent\
              \ storage."
          title: DefaultEncryptionKey
        DeadLetterQueueUrl:
          allOf:
          - $ref: '#/components/schemas/sqsQueueUrl'
          - description: "The URL of the SQS dead letter queue, which is used for\
              \ reporting errors associated with ingesting data from third party applications."
          title: DeadLetterQueueUrl
        Matching:
          $ref: '#/components/schemas/CreateDomainResponse_Matching'
        RuleBasedMatching:
          $ref: '#/components/schemas/CreateDomainResponse_RuleBasedMatching'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was most recently edited.
          title: LastUpdatedAt
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
      required:
      - CreatedAt
      - DefaultExpirationDays
      - DomainName
      - LastUpdatedAt
      title: CreateDomainResponse
      type: object
    optionalBoolean:
      type: boolean
    JobSchedule:
      description: The day and time when do you want to start the Identity Resolution
        Job every week.
      properties:
        DayOfTheWeek:
          allOf:
          - $ref: '#/components/schemas/JobScheduleDayOfTheWeek'
          - description: The day when the Identity Resolution Job should run every
              week.
          title: DayOfTheWeek
        Time:
          allOf:
          - $ref: '#/components/schemas/JobScheduleTime'
          - description: The time when the Identity Resolution Job should run every
              week.
          title: Time
      required:
      - DayOfTheWeek
      - Time
      title: JobSchedule
      type: object
    AutoMerging:
      description: Configuration settings for how to perform the auto-merging of profiles.
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/optionalBoolean'
          - description: The flag that enables the auto-merging of duplicate profiles.
          title: Enabled
        Consolidation:
          $ref: '#/components/schemas/AutoMerging_Consolidation'
        ConflictResolution:
          $ref: '#/components/schemas/AutoMerging_ConflictResolution'
        MinAllowedConfidenceScoreForMerging:
          allOf:
          - $ref: '#/components/schemas/Double0To1'
          - description: 'A number between 0 and 1 that represents the minimum confidence
              score required for profiles within a matching group to be merged during
              the auto-merge process. A higher score means higher similarity required
              to merge profiles. '
          title: MinAllowedConfidenceScoreForMerging
      required:
      - Enabled
      title: AutoMerging
      type: object
    ExportingConfig:
      description: "<p>Configuration information about the S3 bucket where Identity\
        \ Resolution Jobs writes result files. </p> <note> <p>You need to give Customer\
        \ Profiles service principal write permission to your S3 bucket. Otherwise,\
        \ you'll get an exception in the API response. For an example policy, see\
        \ <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/cross-service-confused-deputy-prevention.html#customer-profiles-cross-service\"\
        >Amazon Connect Customer Profiles cross-service confused deputy prevention</a>.\
        \ </p> </note>"
      example:
        S3Exporting:
          S3BucketName: ""
          S3KeyName: ""
      properties:
        S3Exporting:
          $ref: '#/components/schemas/ExportingConfig_S3Exporting'
      title: ExportingConfig
      type: object
    MatchingRules:
      items:
        $ref: '#/components/schemas/MatchingRule'
      maxItems: 15
      minItems: 1
      type: array
    MaxAllowedRuleLevelForMerging:
      maximum: 15
      minimum: 1
      type: integer
    MaxAllowedRuleLevelForMatching:
      maximum: 15
      minimum: 1
      type: integer
    AttributeTypesSelector:
      description: "<p>Configuration information about the <code>AttributeTypesSelector\
        \ </code>where the rule-based identity resolution uses to match profiles.\
        \ You can choose how profiles are compared across attribute types and which\
        \ attribute to use for matching from each type. There are three attribute\
        \ types you can configure:</p> <ul> <li> <p>Email type</p> <ul> <li> <p>You\
        \ can choose from <code>Email</code>, <code>BusinessEmail</code>, and <code>PersonalEmail</code>\
        \ </p> </li> </ul> </li> <li> <p>Phone number type</p> <ul> <li> <p>You can\
        \ choose from <code>Phone</code>, <code>HomePhone</code>, and <code>MobilePhone</code>\
        \ </p> </li> </ul> </li> <li> <p>Address type</p> <ul> <li> <p>You can choose\
        \ from <code>Address</code>, <code>BusinessAddress</code>, <code>MaillingAddress</code>,\
        \ and <code>ShippingAddress</code> </p> </li> </ul> </li> </ul> <p>You can\
        \ either choose <code>ONE_TO_ONE</code> or <code>MANY_TO_MANY</code> as the\
        \ <code>AttributeMatchingModel</code>. When choosing <code>MANY_TO_MANY</code>,\
        \ the system can match attribute across the sub-types of an attribute type.\
        \ For example, if the value of the <code>Email</code> field of Profile A and\
        \ the value of <code>BusinessEmail</code> field of Profile B matches, the\
        \ two profiles are matched on the Email type. When choosing <code>ONE_TO_ONE</code>\
        \ the system can only match if the sub-types are exact matches. For example,\
        \ only when the value of the <code>Email</code> field of Profile A and the\
        \ value of the <code>Email</code> field of Profile B matches, the two profiles\
        \ are matched on the Email type.</p>"
      properties:
        AttributeMatchingModel:
          allOf:
          - $ref: '#/components/schemas/AttributeMatchingModel'
          - description: "Configures the <code>AttributeMatchingModel</code>, you\
              \ can either choose <code>ONE_TO_ONE</code> or <code>MANY_TO_MANY</code>."
          title: AttributeMatchingModel
        Address:
          allOf:
          - $ref: '#/components/schemas/AddressList'
          - description: "<p>The <code>Address</code> type. You can choose from <code>Address</code>,\
              \ <code>BusinessAddress</code>, <code>MaillingAddress</code>, and <code>ShippingAddress</code>.</p>\
              \ <p>You only can use the Address type in the <code>MatchingRule</code>.\
              \ For example, if you want to match profile based on <code>BusinessAddress.City</code>\
              \ or <code>MaillingAddress.City</code>, you need to choose the <code>BusinessAddress</code>\
              \ and the <code>MaillingAddress</code> to represent the Address type\
              \ and specify the <code>Address.City</code> on the matching rule.</p>"
          title: Address
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberList'
          - description: "<p>The <code>PhoneNumber</code> type. You can choose from\
              \ <code>PhoneNumber</code>, <code>HomePhoneNumber</code>, and <code>MobilePhoneNumber</code>.</p>\
              \ <p>You only can use the <code>PhoneNumber</code> type in the <code>MatchingRule</code>.\
              \ For example, if you want to match a profile based on <code>Phone</code>\
              \ or <code>HomePhone</code>, you need to choose the <code>Phone</code>\
              \ and the <code>HomePhone</code> to represent the <code>PhoneNumber</code>\
              \ type and only specify the <code>PhoneNumber</code> on the matching\
              \ rule.</p>"
          title: PhoneNumber
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailList'
          - description: "<p>The <code>Email</code> type. You can choose from <code>EmailAddress</code>,\
              \ <code>BusinessEmailAddress</code> and <code>PersonalEmailAddress</code>.</p>\
              \ <p>You only can use the <code>EmailAddress</code> type in the <code>MatchingRule</code>.\
              \ For example, if you want to match profile based on <code>PersonalEmailAddress</code>\
              \ or <code>BusinessEmailAddress</code>, you need to choose the <code>PersonalEmailAddress</code>\
              \ and the <code>BusinessEmailAddress</code> to represent the <code>EmailAddress</code>\
              \ type and only specify the <code>EmailAddress</code> on the matching\
              \ rule.</p>"
          title: EmailAddress
      required:
      - AttributeMatchingModel
      title: AttributeTypesSelector
      type: object
    ConflictResolution:
      description: How the auto-merging process should resolve conflicts between different
        profiles.
      example:
        ConflictResolvingModel: ""
        SourceName: ""
      properties:
        ConflictResolvingModel:
          allOf:
          - $ref: '#/components/schemas/ConflictResolvingModel'
          - description: "<p>How the auto-merging process should resolve conflicts\
              \ between different profiles.</p> <ul> <li> <p> <code>RECENCY</code>:\
              \ Uses the data that was most recently updated.</p> </li> <li> <p> <code>SOURCE</code>:\
              \ Uses the data from a specific source. For example, if a company has\
              \ been aquired or two departments have merged, data from the specified\
              \ source is used. If two duplicate profiles are from the same source,\
              \ then <code>RECENCY</code> is used again.</p> </li> </ul>"
          title: ConflictResolvingModel
        SourceName:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The <code>ObjectType</code> name that is used to resolve
              profile merging conflicts when choosing <code>SOURCE</code> as the <code>ConflictResolvingModel</code>.
          title: SourceName
      required:
      - ConflictResolvingModel
      title: ConflictResolution
      type: object
    CreateEventStreamResponse:
      example:
        EventStreamArn: ""
        Tags: ""
      properties:
        EventStreamArn:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: A unique identifier for the event stream.
          title: EventStreamArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
      required:
      - EventStreamArn
      title: CreateEventStreamResponse
      type: object
    CreateIntegrationWorkflowResponse:
      example:
        Message: ""
        WorkflowId: ""
      properties:
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: Unique identifier for the workflow.
          title: WorkflowId
        Message:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: A message indicating create request was received.
          title: Message
      required:
      - Message
      - WorkflowId
      title: CreateIntegrationWorkflowResponse
      type: object
    AppflowIntegration:
      description: Details for workflow of type <code>APPFLOW_INTEGRATION</code>.
      properties:
        FlowDefinition:
          $ref: '#/components/schemas/FlowDefinition'
        Batches:
          allOf:
          - $ref: '#/components/schemas/Batches'
          - description: Batches in workflow of type <code>APPFLOW_INTEGRATION</code>.
          title: Batches
      required:
      - FlowDefinition
      title: AppflowIntegration
      type: object
    CreateProfileResponse:
      example:
        ProfileId: ""
      properties:
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: The unique identifier of a customer profile.
          title: ProfileId
      required:
      - ProfileId
      title: CreateProfileResponse
      type: object
    DeleteCalculatedAttributeDefinitionResponse:
      properties: {}
      type: object
    DeleteDomainResponse:
      example:
        Message: ""
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/message'
          - description: A message that indicates the delete request is done.
          title: Message
      required:
      - Message
      title: DeleteDomainResponse
      type: object
    DeleteEventStreamResponse:
      properties: {}
      type: object
    DeleteIntegrationResponse:
      example:
        Message: ""
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/message'
          - description: A message that indicates the delete request is done.
          title: Message
      required:
      - Message
      title: DeleteIntegrationResponse
      type: object
    DeleteProfileResponse:
      example:
        Message: ""
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/message'
          - description: A message that indicates the delete request is done.
          title: Message
      title: DeleteProfileResponse
      type: object
    DeleteProfileKeyResponse:
      example:
        Message: ""
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/message'
          - description: A message that indicates the delete request is done.
          title: Message
      title: DeleteProfileKeyResponse
      type: object
    DeleteProfileObjectResponse:
      example:
        Message: ""
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/message'
          - description: A message that indicates the delete request is done.
          title: Message
      title: DeleteProfileObjectResponse
      type: object
    DeleteProfileObjectTypeResponse:
      example:
        Message: ""
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/message'
          - description: A message that indicates the delete request is done.
          title: Message
      required:
      - Message
      title: DeleteProfileObjectTypeResponse
      type: object
    DeleteWorkflowResponse:
      properties: {}
      type: object
    GetAutoMergingPreviewResponse:
      example:
        NumberOfMatchesInSample: ""
        NumberOfProfilesInSample: ""
        DomainName: ""
        NumberOfProfilesWillBeMerged: ""
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The unique name of the domain.
          title: DomainName
        NumberOfMatchesInSample:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: The number of match groups in the domain that have been reviewed
              in this preview dry run.
          title: NumberOfMatchesInSample
        NumberOfProfilesInSample:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: The number of profiles found in this preview dry run.
          title: NumberOfProfilesInSample
        NumberOfProfilesWillBeMerged:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: The number of profiles that would be merged if this wasn't
              a preview dry run.
          title: NumberOfProfilesWillBeMerged
      required:
      - DomainName
      title: GetAutoMergingPreviewResponse
      type: object
    MatchingAttributesList:
      items:
        $ref: '#/components/schemas/MatchingAttributes'
      maxItems: 10
      minItems: 1
      type: array
    ConflictResolvingModel:
      enum:
      - RECENCY
      - SOURCE
      title: ConflictResolvingModel
      type: string
    GetCalculatedAttributeDefinitionResponse:
      example:
        Description: ""
        LastUpdatedAt: ""
        Statistic: ""
        AttributeDetails:
          Expression: ""
          Attributes: ""
        CreatedAt: ""
        DisplayName: ""
        CalculatedAttributeName: ""
        Conditions:
          Range:
            Value: ""
            Unit: ""
          ObjectCount: ""
          Threshold:
            Operator: ""
            Value: ""
        Tags: ""
      properties:
        CalculatedAttributeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The unique name of the calculated attribute.
          title: CalculatedAttributeName
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/displayName'
          - description: The display name of the calculated attribute.
          title: DisplayName
        Description:
          allOf:
          - $ref: '#/components/schemas/text'
          - description: The description of the calculated attribute.
          title: Description
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the calculated attribute definition
              was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the calculated attribute definition
              was most recently edited.
          title: LastUpdatedAt
        Statistic:
          allOf:
          - $ref: '#/components/schemas/Statistic'
          - description: The aggregation operation to perform for the calculated attribute.
          title: Statistic
        Conditions:
          $ref: '#/components/schemas/CreateCalculatedAttributeDefinitionResponse_Conditions'
        AttributeDetails:
          $ref: '#/components/schemas/CreateCalculatedAttributeDefinitionResponse_AttributeDetails'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
      title: GetCalculatedAttributeDefinitionResponse
      type: object
    GetCalculatedAttributeForProfileResponse:
      example:
        DisplayName: ""
        Value: ""
        IsDataPartial: ""
        CalculatedAttributeName: ""
      properties:
        CalculatedAttributeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The unique name of the calculated attribute.
          title: CalculatedAttributeName
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/displayName'
          - description: The display name of the calculated attribute.
          title: DisplayName
        IsDataPartial:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: "Indicates whether the calculated attribute’s value is based\
              \ on partial data. If data is partial, it is set to true."
          title: IsDataPartial
        Value:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The value of the calculated attribute.
          title: Value
      title: GetCalculatedAttributeForProfileResponse
      type: object
    GetDomainResponse:
      example:
        Matching:
          AutoMerging:
            Consolidation:
              MatchingAttributesList: ""
            Enabled: ""
            ConflictResolution:
              ConflictResolvingModel: ""
              SourceName: ""
            MinAllowedConfidenceScoreForMerging: ""
          JobSchedule:
            DayOfTheWeek: ""
            Time: ""
          Enabled: ""
          ExportingConfig:
            S3Exporting:
              S3BucketName: ""
              S3KeyName: ""
        DefaultExpirationDays: ""
        LastUpdatedAt: ""
        DomainName: ""
        DeadLetterQueueUrl: ""
        CreatedAt: ""
        DefaultEncryptionKey: ""
        Stats:
          MeteringProfileCount: ""
          ProfileCount: ""
          ObjectCount: ""
          TotalSize: ""
        RuleBasedMatching:
          Status: ""
          MaxAllowedRuleLevelForMerging: ""
          Enabled: ""
          MatchingRules: ""
          AttributeTypesSelector:
            Address: ""
            AttributeMatchingModel: ""
            PhoneNumber: ""
            EmailAddress: ""
          ConflictResolution:
            ConflictResolvingModel: ""
            SourceName: ""
          ExportingConfig:
            S3Exporting:
              S3BucketName: ""
              S3KeyName: ""
          MaxAllowedRuleLevelForMatching: ""
        Tags: ""
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The unique name of the domain.
          title: DomainName
        DefaultExpirationDays:
          allOf:
          - $ref: '#/components/schemas/expirationDaysInteger'
          - description: The default number of days until the data within the domain
              expires.
          title: DefaultExpirationDays
        DefaultEncryptionKey:
          allOf:
          - $ref: '#/components/schemas/encryptionKey'
          - description: "The default encryption key, which is an AWS managed key,\
              \ is used when no specific type of encryption key is specified. It is\
              \ used to encrypt all data before it is placed in permanent or semi-permanent\
              \ storage."
          title: DefaultEncryptionKey
        DeadLetterQueueUrl:
          allOf:
          - $ref: '#/components/schemas/sqsQueueUrl'
          - description: "The URL of the SQS dead letter queue, which is used for\
              \ reporting errors associated with ingesting data from third party applications."
          title: DeadLetterQueueUrl
        Stats:
          $ref: '#/components/schemas/GetDomainResponse_Stats'
        Matching:
          $ref: '#/components/schemas/CreateDomainResponse_Matching'
        RuleBasedMatching:
          $ref: '#/components/schemas/CreateDomainResponse_RuleBasedMatching'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was most recently edited.
          title: LastUpdatedAt
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
      required:
      - CreatedAt
      - DomainName
      - LastUpdatedAt
      title: GetDomainResponse
      type: object
    GetEventStreamResponse:
      example:
        EventStreamArn: ""
        DomainName: ""
        State: ""
        CreatedAt: ""
        DestinationDetails:
          Status: ""
          UnhealthySince: ""
          Message: ""
          Uri: ""
        Tags: ""
        StoppedSince: ""
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The unique name of the domain.
          title: DomainName
        EventStreamArn:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: A unique identifier for the event stream.
          title: EventStreamArn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the export was created.
          title: CreatedAt
        State:
          allOf:
          - $ref: '#/components/schemas/EventStreamState'
          - description: The operational state of destination stream for export.
          title: State
        StoppedSince:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp when the <code>State</code> changed to <code>STOPPED</code>.
          title: StoppedSince
        DestinationDetails:
          $ref: '#/components/schemas/GetEventStreamResponse_DestinationDetails'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
      required:
      - CreatedAt
      - DestinationDetails
      - DomainName
      - EventStreamArn
      - State
      title: GetEventStreamResponse
      type: object
    GetIdentityResolutionJobResponse:
      example:
        Status: ""
        JobExpirationTime: ""
        AutoMerging:
          Consolidation:
            MatchingAttributesList: ""
          Enabled: ""
          ConflictResolution:
            ConflictResolvingModel: ""
            SourceName: ""
          MinAllowedConfidenceScoreForMerging: ""
        Message: ""
        LastUpdatedAt: ""
        DomainName: ""
        JobStartTime: ""
        ExportingLocation:
          S3Exporting:
            S3BucketName: ""
            S3KeyName: ""
        JobEndTime: ""
        JobId: ""
        JobStats:
          NumberOfProfilesReviewed: ""
          NumberOfMatchesFound: ""
          NumberOfMergesDone: ""
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The unique name of the domain.
          title: DomainName
        JobId:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: The unique identifier of the Identity Resolution Job.
          title: JobId
        Status:
          allOf:
          - $ref: '#/components/schemas/IdentityResolutionJobStatus'
          - description: "<p>The status of the Identity Resolution Job.</p> <ul> <li>\
              \ <p> <code>PENDING</code>: The Identity Resolution Job is scheduled\
              \ but has not started yet. If you turn off the Identity Resolution feature\
              \ in your domain, jobs in the <code>PENDING</code> state are deleted.</p>\
              \ </li> <li> <p> <code>PREPROCESSING</code>: The Identity Resolution\
              \ Job is loading your data.</p> </li> <li> <p> <code>FIND_MATCHING</code>:\
              \ The Identity Resolution Job is using the machine learning model to\
              \ identify profiles that belong to the same matching group.</p> </li>\
              \ <li> <p> <code>MERGING</code>: The Identity Resolution Job is merging\
              \ duplicate profiles.</p> </li> <li> <p> <code>COMPLETED</code>: The\
              \ Identity Resolution Job completed successfully.</p> </li> <li> <p>\
              \ <code>PARTIAL_SUCCESS</code>: There's a system error and not all of\
              \ the data is merged. The Identity Resolution Job writes a message indicating\
              \ the source of the problem.</p> </li> <li> <p> <code>FAILED</code>:\
              \ The Identity Resolution Job did not merge any data. It writes a message\
              \ indicating the source of the problem.</p> </li> </ul>"
          title: Status
        Message:
          allOf:
          - $ref: '#/components/schemas/stringTo2048'
          - description: The error messages that are generated when the Identity Resolution
              Job runs.
          title: Message
        JobStartTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the Identity Resolution Job was started
              or will be started.
          title: JobStartTime
        JobEndTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the Identity Resolution Job was completed.
          title: JobEndTime
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the Identity Resolution Job was most
              recently edited.
          title: LastUpdatedAt
        JobExpirationTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the Identity Resolution Job will expire.
          title: JobExpirationTime
        AutoMerging:
          $ref: '#/components/schemas/GetIdentityResolutionJobResponse_AutoMerging'
        ExportingLocation:
          $ref: '#/components/schemas/GetIdentityResolutionJobResponse_ExportingLocation'
        JobStats:
          $ref: '#/components/schemas/GetIdentityResolutionJobResponse_JobStats'
      title: GetIdentityResolutionJobResponse
      type: object
    GetIntegrationResponse:
      example:
        LastUpdatedAt: ""
        ObjectTypeNames: ""
        DomainName: ""
        ObjectTypeName: ""
        CreatedAt: ""
        IsUnstructured: ""
        WorkflowId: ""
        Uri: ""
        Tags: ""
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The unique name of the domain.
          title: DomainName
        Uri:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The URI of the S3 bucket or any other type of data source.
          title: Uri
        ObjectTypeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The name of the profile object type.
          title: ObjectTypeName
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was most recently edited.
          title: LastUpdatedAt
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
        ObjectTypeNames:
          allOf:
          - $ref: '#/components/schemas/ObjectTypeNames'
          - description: "A map in which each key is an event type from an external\
              \ application such as Segment or Shopify, and each value is an <code>ObjectTypeName</code>\
              \ (template) used to ingest the event. It supports the following event\
              \ types: <code>SegmentIdentify</code>, <code>ShopifyCreateCustomers</code>,\
              \ <code>ShopifyUpdateCustomers</code>, <code>ShopifyCreateDraftOrders</code>,\
              \ <code>ShopifyUpdateDraftOrders</code>, <code>ShopifyCreateOrders</code>,\
              \ and <code>ShopifyUpdatedOrders</code>."
          title: ObjectTypeNames
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: Unique identifier for the workflow.
          title: WorkflowId
        IsUnstructured:
          allOf:
          - $ref: '#/components/schemas/optionalBoolean'
          - description: "Boolean that shows if the Flow that's associated with the\
              \ Integration is created in Amazon Appflow, or with ObjectTypeName equals\
              \ _unstructured via API/CLI in flowDefinition."
          title: IsUnstructured
      required:
      - CreatedAt
      - DomainName
      - LastUpdatedAt
      - Uri
      title: GetIntegrationResponse
      type: object
    GetMatchesResponse:
      example:
        NextToken: ""
        Matches: ""
        PotentialMatches: ""
        MatchGenerationDate: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: "If there are additional results, this is the token for the\
              \ next set of results."
          title: NextToken
        MatchGenerationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp this version of Match Result generated.
          title: MatchGenerationDate
        PotentialMatches:
          allOf:
          - $ref: '#/components/schemas/matchesNumber'
          - description: The number of potential matches found.
          title: PotentialMatches
        Matches:
          allOf:
          - $ref: '#/components/schemas/MatchesList'
          - description: The list of matched profiles for this instance.
          title: Matches
      title: GetMatchesResponse
      type: object
    GetProfileObjectTypeResponse:
      example:
        Description: ""
        Fields: ""
        LastUpdatedAt: ""
        AllowProfileCreation: ""
        ObjectTypeName: ""
        Keys: ""
        CreatedAt: ""
        SourceLastUpdatedTimestampFormat: ""
        EncryptionKey: ""
        TemplateId: ""
        Tags: ""
        ExpirationDays: ""
      properties:
        ObjectTypeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The name of the profile object type.
          title: ObjectTypeName
        Description:
          allOf:
          - $ref: '#/components/schemas/text'
          - description: The description of the profile object type.
          title: Description
        TemplateId:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: A unique identifier for the object template.
          title: TemplateId
        ExpirationDays:
          allOf:
          - $ref: '#/components/schemas/expirationDaysInteger'
          - description: The number of days until the data in the object expires.
          title: ExpirationDays
        EncryptionKey:
          allOf:
          - $ref: '#/components/schemas/encryptionKey'
          - description: The customer-provided key to encrypt the profile object that
              will be created in this profile object type.
          title: EncryptionKey
        AllowProfileCreation:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: "Indicates whether a profile should be created when data\
              \ is received if one doesn’t exist for an object of this type. The default\
              \ is <code>FALSE</code>. If the AllowProfileCreation flag is set to\
              \ <code>FALSE</code>, then the service tries to fetch a standard profile\
              \ and associate this object with the profile. If it is set to <code>TRUE</code>,\
              \ and if no match is found, then the service creates a new standard\
              \ profile."
          title: AllowProfileCreation
        SourceLastUpdatedTimestampFormat:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The format of your <code>sourceLastUpdatedTimestamp</code>
              that was previously set up.
          title: SourceLastUpdatedTimestampFormat
        Fields:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          - description: A map of the name and ObjectType field.
          title: Fields
        Keys:
          allOf:
          - $ref: '#/components/schemas/KeyMap'
          - description: A list of unique keys that can be used to map data to the
              profile.
          title: Keys
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was most recently edited.
          title: LastUpdatedAt
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
      required:
      - Description
      - ObjectTypeName
      title: GetProfileObjectTypeResponse
      type: object
    GetProfileObjectTypeTemplateResponse:
      example:
        SourceObject: ""
        Fields: ""
        AllowProfileCreation: ""
        Keys: ""
        SourceLastUpdatedTimestampFormat: ""
        SourceName: ""
        TemplateId: ""
      properties:
        TemplateId:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: A unique identifier for the object template.
          title: TemplateId
        SourceName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The name of the source of the object template.
          title: SourceName
        SourceObject:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The source of the object template.
          title: SourceObject
        AllowProfileCreation:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: "Indicates whether a profile should be created when data\
              \ is received if one doesn’t exist for an object of this type. The default\
              \ is <code>FALSE</code>. If the AllowProfileCreation flag is set to\
              \ <code>FALSE</code>, then the service tries to fetch a standard profile\
              \ and associate this object with the profile. If it is set to <code>TRUE</code>,\
              \ and if no match is found, then the service creates a new standard\
              \ profile."
          title: AllowProfileCreation
        SourceLastUpdatedTimestampFormat:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The format of your <code>sourceLastUpdatedTimestamp</code>
              that was previously set up.
          title: SourceLastUpdatedTimestampFormat
        Fields:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          - description: A map of the name and ObjectType field.
          title: Fields
        Keys:
          allOf:
          - $ref: '#/components/schemas/KeyMap'
          - description: A list of unique keys that can be used to map data to the
              profile.
          title: Keys
      title: GetProfileObjectTypeTemplateResponse
      type: object
    GetSimilarProfilesResponse:
      example:
        MatchType: ""
        NextToken: ""
        ConfidenceScore: ""
        RuleLevel: ""
        ProfileIds: ""
        MatchId: ""
      properties:
        ProfileIds:
          allOf:
          - $ref: '#/components/schemas/ProfileIdList'
          - description: Set of <code>profileId</code>s that belong to the same matching
              group.
          title: ProfileIds
        MatchId:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The string <code>matchId</code> that the similar profiles
              belong to.
          title: MatchId
        MatchType:
          allOf:
          - $ref: '#/components/schemas/MatchType'
          - description: Specify the type of matching to get similar profiles for.
          title: MatchType
        RuleLevel:
          allOf:
          - $ref: '#/components/schemas/RuleLevel'
          - description: The integer rule level that the profiles matched on.
          title: RuleLevel
        ConfidenceScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: "It only has value when the <code>MatchType</code> is <code>ML_BASED_MATCHING</code>.A\
              \ number between 0 and 1, where a higher score means higher similarity.\
              \ Examining match confidence scores lets you distinguish between groups\
              \ of similar records in which the system is highly confident (which\
              \ you may decide to merge), groups of similar records about which the\
              \ system is uncertain (which you may decide to have reviewed by a human),\
              \ and groups of similar records that the system deems to be unlikely\
              \ (which you may decide to reject). Given confidence scores vary as\
              \ per the data input, it should not be used as an absolute measure of\
              \ matching quality."
          title: ConfidenceScore
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: The pagination token from the previous <code>GetSimilarProfiles</code>
              API call.
          title: NextToken
      title: GetSimilarProfilesResponse
      type: object
    GetWorkflowResponse:
      example:
        Status: ""
        ErrorDescription: ""
        StartDate: ""
        Metrics:
          AppflowIntegration:
            RecordsProcessed: ""
            StepsCompleted: ""
            TotalSteps: ""
        LastUpdatedAt: ""
        WorkflowType: ""
        Attributes:
          AppflowIntegration:
            ConnectorProfileName: ""
            SourceConnectorType: ""
            RoleArn: ""
        WorkflowId: ""
      properties:
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: Unique identifier for the workflow.
          title: WorkflowId
        WorkflowType:
          allOf:
          - $ref: '#/components/schemas/WorkflowType'
          - description: The type of workflow. The only supported value is APPFLOW_INTEGRATION.
          title: WorkflowType
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: Status of workflow execution.
          title: Status
        ErrorDescription:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: Workflow error messages during execution (if any).
          title: ErrorDescription
        StartDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp that represents when workflow execution started.
          title: StartDate
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp that represents when workflow execution last
              updated.
          title: LastUpdatedAt
        Attributes:
          $ref: '#/components/schemas/GetWorkflowResponse_Attributes'
        Metrics:
          $ref: '#/components/schemas/GetWorkflowResponse_Metrics'
      title: GetWorkflowResponse
      type: object
    GetWorkflowStepsResponse:
      example:
        NextToken: ""
        WorkflowType: ""
        Items: ""
        WorkflowId: ""
      properties:
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: Unique identifier for the workflow.
          title: WorkflowId
        WorkflowType:
          allOf:
          - $ref: '#/components/schemas/WorkflowType'
          - description: The type of workflow. The only supported value is APPFLOW_INTEGRATION.
          title: WorkflowType
        Items:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepsList'
          - description: List containing workflow step details.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: "If there are additional results, this is the token for the\
              \ next set of results."
          title: NextToken
      title: GetWorkflowStepsResponse
      type: object
    ListAccountIntegrationsResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/IntegrationList'
          - description: The list of ListAccountIntegration instances.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: The pagination token from the previous ListAccountIntegrations
              API call.
          title: NextToken
      title: ListAccountIntegrationsResponse
      type: object
    ListCalculatedAttributeDefinitionsResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/CalculatedAttributeDefinitionsList'
          - description: The list of calculated attribute definitions.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: The pagination token from the previous call to ListCalculatedAttributeDefinitions.
          title: NextToken
      title: ListCalculatedAttributeDefinitionsResponse
      type: object
    ListCalculatedAttributesForProfileResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/CalculatedAttributesForProfileList'
          - description: The list of calculated attributes.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: The pagination token from the previous call to ListCalculatedAttributesForProfile.
          title: NextToken
      title: ListCalculatedAttributesForProfileResponse
      type: object
    ListDomainsResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/DomainList'
          - description: The list of ListDomains instances.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: The pagination token from the previous ListDomains API call.
          title: NextToken
      title: ListDomainsResponse
      type: object
    ListEventStreamsResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/EventStreamSummaryList'
          - description: Contains summary information about an EventStream.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: Identifies the next page of results to return.
          title: NextToken
      title: ListEventStreamsResponse
      type: object
    ListIdentityResolutionJobsResponse:
      example:
        IdentityResolutionJobsList: ""
        NextToken: ""
      properties:
        IdentityResolutionJobsList:
          allOf:
          - $ref: '#/components/schemas/IdentityResolutionJobsList'
          - description: A list of Identity Resolution Jobs.
          title: IdentityResolutionJobsList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: "If there are additional results, this is the token for the\
              \ next set of results."
          title: NextToken
      title: ListIdentityResolutionJobsResponse
      type: object
    ListIntegrationsResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/IntegrationList'
          - description: The list of ListIntegrations instances.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: The pagination token from the previous ListIntegrations API
              call.
          title: NextToken
      title: ListIntegrationsResponse
      type: object
    ListProfileObjectTypeTemplatesResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/ProfileObjectTypeTemplateList'
          - description: The list of ListProfileObjectType template instances.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: 'The pagination token from the previous ListObjectTypeTemplates
              API call. '
          title: NextToken
      title: ListProfileObjectTypeTemplatesResponse
      type: object
    ListProfileObjectTypesResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/ProfileObjectTypeList'
          - description: The list of ListProfileObjectTypes instances.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: Identifies the next page of results to return.
          title: NextToken
      title: ListProfileObjectTypesResponse
      type: object
    ListProfileObjectsResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/ProfileObjectList'
          - description: The list of ListProfileObject instances.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: The pagination token from the previous call to ListProfileObjects.
          title: NextToken
      title: ListProfileObjectsResponse
      type: object
    name:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9_-]+$"
      title: name
      type: string
    requestValueList:
      items:
        $ref: '#/components/schemas/string1To255'
      type: array
    ListRuleBasedMatchesResponse:
      example:
        NextToken: ""
        MatchIds: ""
      properties:
        MatchIds:
          allOf:
          - $ref: '#/components/schemas/MatchIdList'
          - description: The list of <code>MatchIds</code> for the given domain.
          title: MatchIds
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: The pagination token from the previous <code>ListRuleBasedMatches</code>
              API call.
          title: NextToken
      title: ListRuleBasedMatchesResponse
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: tags
      title: ListTagsForResourceResponse
      type: object
    ListWorkflowsResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/WorkflowList'
          - description: List containing workflow details.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: "If there are additional results, this is the token for the\
              \ next set of results."
          title: NextToken
      title: ListWorkflowsResponse
      type: object
    MergeProfilesResponse:
      example:
        Message: ""
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/message'
          - description: A message that indicates the merge request is complete.
          title: Message
      title: MergeProfilesResponse
      type: object
    uuid:
      pattern: "[a-f0-9]{32}"
      title: uuid
      type: string
    AttributeSourceIdMap:
      additionalProperties:
        $ref: '#/components/schemas/uuid'
      type: object
    PutIntegrationResponse:
      example:
        LastUpdatedAt: ""
        ObjectTypeNames: ""
        DomainName: ""
        ObjectTypeName: ""
        CreatedAt: ""
        IsUnstructured: ""
        WorkflowId: ""
        Uri: ""
        Tags: ""
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The unique name of the domain.
          title: DomainName
        Uri:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The URI of the S3 bucket or any other type of data source.
          title: Uri
        ObjectTypeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The name of the profile object type.
          title: ObjectTypeName
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was most recently edited.
          title: LastUpdatedAt
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
        ObjectTypeNames:
          allOf:
          - $ref: '#/components/schemas/ObjectTypeNames'
          - description: "A map in which each key is an event type from an external\
              \ application such as Segment or Shopify, and each value is an <code>ObjectTypeName</code>\
              \ (template) used to ingest the event. It supports the following event\
              \ types: <code>SegmentIdentify</code>, <code>ShopifyCreateCustomers</code>,\
              \ <code>ShopifyUpdateCustomers</code>, <code>ShopifyCreateDraftOrders</code>,\
              \ <code>ShopifyUpdateDraftOrders</code>, <code>ShopifyCreateOrders</code>,\
              \ and <code>ShopifyUpdatedOrders</code>."
          title: ObjectTypeNames
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: Unique identifier for the workflow.
          title: WorkflowId
        IsUnstructured:
          allOf:
          - $ref: '#/components/schemas/optionalBoolean'
          - description: "Boolean that shows if the Flow that's associated with the\
              \ Integration is created in Amazon Appflow, or with ObjectTypeName equals\
              \ _unstructured via API/CLI in flowDefinition."
          title: IsUnstructured
      required:
      - CreatedAt
      - DomainName
      - LastUpdatedAt
      - Uri
      title: PutIntegrationResponse
      type: object
    FlowDescription:
      maxLength: 2048
      pattern: "[\\w!@#\\-.?,\\s]*"
      type: string
    FlowName:
      maxLength: 256
      pattern: "[a-zA-Z0-9][\\w!@#.-]+"
      type: string
    KmsArn:
      maxLength: 2048
      minLength: 20
      pattern: "arn:aws:kms:.*:[0-9]+:.*"
      type: string
    SourceFlowConfig:
      description: Contains information about the configuration of the source connector
        used in the flow.
      properties:
        ConnectorProfileName:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileName'
          - description: The name of the AppFlow connector profile. This name must
              be unique for each connector profile in the AWS account.
          title: ConnectorProfileName
        ConnectorType:
          allOf:
          - $ref: '#/components/schemas/SourceConnectorType'
          - description: "The type of connector, such as Salesforce, Marketo, and\
              \ so on."
          title: ConnectorType
        IncrementalPullConfig:
          $ref: '#/components/schemas/SourceFlowConfig_IncrementalPullConfig'
        SourceConnectorProperties:
          $ref: '#/components/schemas/SourceFlowConfig_SourceConnectorProperties'
      required:
      - ConnectorType
      - SourceConnectorProperties
      title: SourceFlowConfig
      type: object
    Tasks:
      items:
        $ref: '#/components/schemas/Task'
      type: array
    TriggerConfig:
      description: The trigger settings that determine how and when Amazon AppFlow
        runs the specified flow.
      properties:
        TriggerType:
          allOf:
          - $ref: '#/components/schemas/TriggerType'
          - description: "Specifies the type of flow trigger. It can be OnDemand,\
              \ Scheduled, or Event."
          title: TriggerType
        TriggerProperties:
          $ref: '#/components/schemas/TriggerConfig_TriggerProperties'
      required:
      - TriggerType
      title: TriggerConfig
      type: object
    typeName:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z_][a-zA-Z_0-9-]*$"
      title: typeName
      type: string
    PutProfileObjectResponse:
      example:
        ProfileObjectUniqueKey: ""
      properties:
        ProfileObjectUniqueKey:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The unique identifier of the profile object generated by
              the service.
          title: ProfileObjectUniqueKey
      title: PutProfileObjectResponse
      type: object
    PutProfileObjectTypeResponse:
      example:
        Description: ""
        Fields: ""
        LastUpdatedAt: ""
        AllowProfileCreation: ""
        ObjectTypeName: ""
        Keys: ""
        CreatedAt: ""
        SourceLastUpdatedTimestampFormat: ""
        EncryptionKey: ""
        TemplateId: ""
        Tags: ""
        ExpirationDays: ""
      properties:
        ObjectTypeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The name of the profile object type.
          title: ObjectTypeName
        Description:
          allOf:
          - $ref: '#/components/schemas/text'
          - description: Description of the profile object type.
          title: Description
        TemplateId:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: A unique identifier for the object template.
          title: TemplateId
        ExpirationDays:
          allOf:
          - $ref: '#/components/schemas/expirationDaysInteger'
          - description: The number of days until the data in the object expires.
          title: ExpirationDays
        EncryptionKey:
          allOf:
          - $ref: '#/components/schemas/encryptionKey'
          - description: The customer-provided key to encrypt the profile object that
              will be created in this profile object type.
          title: EncryptionKey
        AllowProfileCreation:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: "Indicates whether a profile should be created when data\
              \ is received if one doesn’t exist for an object of this type. The default\
              \ is <code>FALSE</code>. If the AllowProfileCreation flag is set to\
              \ <code>FALSE</code>, then the service tries to fetch a standard profile\
              \ and associate this object with the profile. If it is set to <code>TRUE</code>,\
              \ and if no match is found, then the service creates a new standard\
              \ profile."
          title: AllowProfileCreation
        SourceLastUpdatedTimestampFormat:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: "The format of your <code>sourceLastUpdatedTimestamp</code>\
              \ that was previously set up in fields that were parsed using <a href=\"\
              https://docs.oracle.com/javase/10/docs/api/java/text/SimpleDateFormat.html\"\
              >SimpleDateFormat</a>. If you have <code>sourceLastUpdatedTimestamp</code>\
              \ in your field, you must set up <code>sourceLastUpdatedTimestampFormat</code>."
          title: SourceLastUpdatedTimestampFormat
        Fields:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          - description: A map of the name and ObjectType field.
          title: Fields
        Keys:
          allOf:
          - $ref: '#/components/schemas/KeyMap'
          - description: A list of unique keys that can be used to map data to the
              profile.
          title: Keys
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was most recently edited.
          title: LastUpdatedAt
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
      required:
      - Description
      - ObjectTypeName
      title: PutProfileObjectTypeResponse
      type: object
    ObjectTypeField:
      description: Represents a field in a ProfileObjectType.
      properties:
        Source:
          allOf:
          - $ref: '#/components/schemas/text'
          - description: "A field of a ProfileObject. For example: _source.FirstName,\
              \ where “_source” is a ProfileObjectType of a Zendesk user and “FirstName”\
              \ is a field in that ObjectType."
          title: Source
        Target:
          allOf:
          - $ref: '#/components/schemas/text'
          - description: "The location of the data in the standard ProfileObject model.\
              \ For example: _profile.Address.PostalCode."
          title: Target
        ContentType:
          allOf:
          - $ref: '#/components/schemas/FieldContentType'
          - description: The content type of the field. Used for determining equality
              when searching.
          title: ContentType
      title: ObjectTypeField
      type: object
    ObjectTypeKeyList:
      items:
        $ref: '#/components/schemas/ObjectTypeKey'
      title: ObjectTypeKeyList
      type: array
    SearchProfilesResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/ProfileList'
          - description: The list of Profiles matching the search criteria.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/token'
          - description: The pagination token from the previous SearchProfiles API
              call.
          title: NextToken
      title: SearchProfilesResponse
      type: object
    AdditionalSearchKey:
      description: A data type pair that consists of a <code>KeyName</code> and <code>Values</code>
        list that is used in conjunction with the <a href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_SearchProfiles.html#customerprofiles-SearchProfiles-request-KeyName">KeyName</a>
        and <a href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_SearchProfiles.html#customerprofiles-SearchProfiles-request-Values">Values</a>
        parameters to search for profiles using the <a href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_SearchProfiles.html">SearchProfiles</a>
        API.
      properties:
        KeyName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: A searchable identifier of a customer profile.
          title: KeyName
        Values:
          allOf:
          - $ref: '#/components/schemas/requestValueList'
          - description: A list of key values.
          title: Values
      required:
      - KeyName
      - Values
      title: AdditionalSearchKey
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(?!aws:)[a-zA-Z+-=._:/]+$"
      title: TagKey
      type: string
    UpdateCalculatedAttributeDefinitionResponse:
      example:
        Description: ""
        LastUpdatedAt: ""
        Statistic: ""
        AttributeDetails:
          Expression: ""
          Attributes: ""
        CreatedAt: ""
        DisplayName: ""
        CalculatedAttributeName: ""
        Conditions:
          Range:
            Value: ""
            Unit: ""
          ObjectCount: ""
          Threshold:
            Operator: ""
            Value: ""
        Tags: ""
      properties:
        CalculatedAttributeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The unique name of the calculated attribute.
          title: CalculatedAttributeName
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/displayName'
          - description: The display name of the calculated attribute.
          title: DisplayName
        Description:
          allOf:
          - $ref: '#/components/schemas/text'
          - description: The description of the calculated attribute.
          title: Description
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the calculated attribute definition
              was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the calculated attribute definition
              was most recently edited.
          title: LastUpdatedAt
        Statistic:
          allOf:
          - $ref: '#/components/schemas/Statistic'
          - description: The aggregation operation to perform for the calculated attribute.
          title: Statistic
        Conditions:
          $ref: '#/components/schemas/CreateCalculatedAttributeDefinitionResponse_Conditions'
        AttributeDetails:
          $ref: '#/components/schemas/UpdateCalculatedAttributeDefinitionResponse_AttributeDetails'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
      title: UpdateCalculatedAttributeDefinitionResponse
      type: object
    UpdateDomainResponse:
      example:
        Matching:
          AutoMerging:
            Consolidation:
              MatchingAttributesList: ""
            Enabled: ""
            ConflictResolution:
              ConflictResolvingModel: ""
              SourceName: ""
            MinAllowedConfidenceScoreForMerging: ""
          JobSchedule:
            DayOfTheWeek: ""
            Time: ""
          Enabled: ""
          ExportingConfig:
            S3Exporting:
              S3BucketName: ""
              S3KeyName: ""
        DefaultExpirationDays: ""
        LastUpdatedAt: ""
        DomainName: ""
        DeadLetterQueueUrl: ""
        CreatedAt: ""
        DefaultEncryptionKey: ""
        RuleBasedMatching:
          Status: ""
          MaxAllowedRuleLevelForMerging: ""
          Enabled: ""
          MatchingRules: ""
          AttributeTypesSelector:
            Address: ""
            AttributeMatchingModel: ""
            PhoneNumber: ""
            EmailAddress: ""
          ConflictResolution:
            ConflictResolvingModel: ""
            SourceName: ""
          ExportingConfig:
            S3Exporting:
              S3BucketName: ""
              S3KeyName: ""
          MaxAllowedRuleLevelForMatching: ""
        Tags: ""
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The unique name of the domain.
          title: DomainName
        DefaultExpirationDays:
          allOf:
          - $ref: '#/components/schemas/expirationDaysInteger'
          - description: The default number of days until the data within the domain
              expires.
          title: DefaultExpirationDays
        DefaultEncryptionKey:
          allOf:
          - $ref: '#/components/schemas/encryptionKey'
          - description: "The default encryption key, which is an AWS managed key,\
              \ is used when no specific type of encryption key is specified. It is\
              \ used to encrypt all data before it is placed in permanent or semi-permanent\
              \ storage."
          title: DefaultEncryptionKey
        DeadLetterQueueUrl:
          allOf:
          - $ref: '#/components/schemas/sqsQueueUrl'
          - description: "The URL of the SQS dead letter queue, which is used for\
              \ reporting errors associated with ingesting data from third party applications."
          title: DeadLetterQueueUrl
        Matching:
          $ref: '#/components/schemas/CreateDomainResponse_Matching'
        RuleBasedMatching:
          $ref: '#/components/schemas/UpdateDomainResponse_RuleBasedMatching'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was most recently edited.
          title: LastUpdatedAt
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
      required:
      - CreatedAt
      - DomainName
      - LastUpdatedAt
      title: UpdateDomainResponse
      type: object
    UpdateProfileResponse:
      example:
        ProfileId: ""
      properties:
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: The unique identifier of a customer profile.
          title: ProfileId
      required:
      - ProfileId
      title: UpdateProfileResponse
      type: object
    string0To255:
      maxLength: 255
      minLength: 0
      title: string0To255
      type: string
    AddProfileKeyRequest:
      example:
        ProfileId: ""
        KeyName: ""
        Values: ""
      properties:
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: The unique identifier of a customer profile.
        KeyName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: "A searchable identifier of a customer profile. The predefined\
              \ keys you can use include: _account, _profileId, _assetId, _caseId,\
              \ _orderId, _fullName, _phone, _email, _ctrContactId, _marketoLeadId,\
              \ _salesforceAccountId, _salesforceContactId, _salesforceAssetId, _zendeskUserId,\
              \ _zendeskExternalId, _zendeskTicketId, _serviceNowSystemId, _serviceNowIncidentId,\
              \ _segmentUserId, _shopifyCustomerId, _shopifyOrderId."
        Values:
          allOf:
          - $ref: '#/components/schemas/requestValueList'
          - description: A list of key values.
      required:
      - KeyName
      - ProfileId
      - Values
      title: AddProfileKeyRequest
      type: object
    Address:
      description: "A generic address associated with the customer that is not mailing,\
        \ shipping, or billing."
      properties:
        Address1:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The first line of a customer address.
          title: Address1
        Address2:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The second line of a customer address.
          title: Address2
        Address3:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The third line of a customer address.
          title: Address3
        Address4:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The fourth line of a customer address.
          title: Address4
        City:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The city in which a customer lives.
          title: City
        County:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The county in which a customer lives.
          title: County
        State:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The state in which a customer lives.
          title: State
        Province:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The province in which a customer lives.
          title: Province
        Country:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The country in which a customer lives.
          title: Country
        PostalCode:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The postal code of a customer address.
          title: PostalCode
      title: Address
      type: object
    AddressList:
      items:
        $ref: '#/components/schemas/string1To255'
      maxItems: 4
      minItems: 1
      type: array
    FlowDefinition:
      description: "The configurations that control how Customer Profiles retrieves\
        \ data from the source, Amazon AppFlow. Customer Profiles uses this information\
        \ to create an AppFlow flow on behalf of customers."
      example:
        Description: ""
        Tasks: ""
        FlowName: ""
        TriggerConfig:
          TriggerType: ""
          TriggerProperties:
            Scheduled:
              ScheduleEndTime: ""
              Timezone: ""
              ScheduleExpression: ""
              FirstExecutionFrom: ""
              ScheduleStartTime: ""
              DataPullMode: ""
              ScheduleOffset: ""
        SourceFlowConfig:
          ConnectorProfileName: ""
          SourceConnectorProperties:
            S3:
              BucketName: ""
              BucketPrefix: ""
            ServiceNow:
              Object: ""
            Zendesk:
              Object: ""
            Marketo:
              Object: ""
            Salesforce:
              IncludeDeletedRecords: ""
              Object: ""
              EnableDynamicFieldUpdate: ""
          ConnectorType: ""
          IncrementalPullConfig:
            DatetimeTypeFieldName: ""
        KmsArn: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/FlowDescription'
          - description: A description of the flow you want to create.
          title: Description
        FlowName:
          allOf:
          - $ref: '#/components/schemas/FlowName'
          - description: The specified name of the flow. Use underscores (_) or hyphens
              (-) only. Spaces are not allowed.
          title: FlowName
        KmsArn:
          allOf:
          - $ref: '#/components/schemas/KmsArn'
          - description: The Amazon Resource Name of the AWS Key Management Service
              (KMS) key you provide for encryption.
          title: KmsArn
        SourceFlowConfig:
          $ref: '#/components/schemas/PutIntegration_request_FlowDefinition_SourceFlowConfig'
        Tasks:
          allOf:
          - $ref: '#/components/schemas/Tasks'
          - description: A list of tasks that Customer Profiles performs while transferring
              the data in the flow run.
          title: Tasks
        TriggerConfig:
          $ref: '#/components/schemas/PutIntegration_request_FlowDefinition_TriggerConfig'
      required:
      - FlowName
      - KmsArn
      - SourceFlowConfig
      - Tasks
      - TriggerConfig
      title: FlowDefinition
      type: object
    Batches:
      items:
        $ref: '#/components/schemas/Batch'
      type: array
    SourceConnectorType:
      enum:
      - Salesforce
      - Marketo
      - Zendesk
      - Servicenow
      - S3
      title: SourceConnectorType
      type: string
    ConnectorProfileName:
      maxLength: 256
      pattern: "[\\w/!@#+=.-]+"
      type: string
    AppflowIntegrationWorkflowAttributes:
      description: Structure holding all <code>APPFLOW_INTEGRATION</code> specific
        workflow attributes.
      properties:
        SourceConnectorType:
          allOf:
          - $ref: '#/components/schemas/SourceConnectorType'
          - description: "Specifies the source connector type, such as Salesforce,\
              \ ServiceNow, and Marketo. Indicates source of ingestion."
          title: SourceConnectorType
        ConnectorProfileName:
          allOf:
          - $ref: '#/components/schemas/ConnectorProfileName'
          - description: The name of the AppFlow connector profile used for ingestion.
          title: ConnectorProfileName
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The Amazon Resource Name (ARN) of the IAM role. Customer
              Profiles assumes this role to create resources on your behalf as part
              of workflow execution.
          title: RoleArn
      required:
      - ConnectorProfileName
      - SourceConnectorType
      title: AppflowIntegrationWorkflowAttributes
      type: object
    long:
      type: integer
    AppflowIntegrationWorkflowMetrics:
      description: Workflow specific execution metrics for <code>APPFLOW_INTEGRATION</code>
        workflow.
      properties:
        RecordsProcessed:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: Number of records processed in <code>APPFLOW_INTEGRATION</code>
              workflow.
          title: RecordsProcessed
        StepsCompleted:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: Total steps completed in <code>APPFLOW_INTEGRATION</code>
              workflow.
          title: StepsCompleted
        TotalSteps:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: Total steps in <code>APPFLOW_INTEGRATION</code> workflow.
          title: TotalSteps
      required:
      - RecordsProcessed
      - StepsCompleted
      - TotalSteps
      title: AppflowIntegrationWorkflowMetrics
      type: object
    Status:
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - COMPLETE
      - FAILED
      - SPLIT
      - RETRY
      - CANCELLED
      title: Status
      type: string
    timestamp:
      format: date-time
      type: string
    AppflowIntegrationWorkflowStep:
      description: Workflow step details for <code>APPFLOW_INTEGRATION</code> workflow.
      properties:
        FlowName:
          allOf:
          - $ref: '#/components/schemas/FlowName'
          - description: Name of the flow created during execution of workflow step.
              <code>APPFLOW_INTEGRATION</code> workflow type creates an appflow flow
              during workflow step execution on the customers behalf.
          title: FlowName
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: Workflow step status for <code>APPFLOW_INTEGRATION</code>
              workflow.
          title: Status
        ExecutionMessage:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: Message indicating execution of workflow step for <code>APPFLOW_INTEGRATION</code>
              workflow.
          title: ExecutionMessage
        RecordsProcessed:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: Total number of records processed during execution of workflow
              step for <code>APPFLOW_INTEGRATION</code> workflow.
          title: RecordsProcessed
        BatchRecordsStartTime:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: Start datetime of records pulled in batch during execution
              of workflow step for <code>APPFLOW_INTEGRATION</code> workflow.
          title: BatchRecordsStartTime
        BatchRecordsEndTime:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: End datetime of records pulled in batch during execution
              of workflow step for <code>APPFLOW_INTEGRATION</code> workflow.
          title: BatchRecordsEndTime
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: Creation timestamp of workflow step for <code>APPFLOW_INTEGRATION</code>
              workflow.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: Last updated timestamp for workflow step for <code>APPFLOW_INTEGRATION</code>
              workflow.
          title: LastUpdatedAt
      required:
      - BatchRecordsEndTime
      - BatchRecordsStartTime
      - CreatedAt
      - ExecutionMessage
      - FlowName
      - LastUpdatedAt
      - RecordsProcessed
      - Status
      title: AppflowIntegrationWorkflowStep
      type: object
    AttributeDetails:
      description: Mathematical expression and a list of attribute items specified
        in that expression.
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeList'
          - description: A list of attribute items specified in the mathematical expression.
          title: Attributes
        Expression:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: "Mathematical expression that is performed on attribute items\
              \ provided in the attribute list. Each element in the expression should\
              \ follow the structure of \\\"{ObjectTypeName.AttributeName}\\\"."
          title: Expression
      required:
      - Attributes
      - Expression
      title: AttributeDetails
      type: object
    attributeName:
      maxLength: 64
      minLength: 1
      pattern: "^[a-zA-Z0-9_.-]+$"
      type: string
    AttributeItem:
      description: The details of a single attribute item specified in the mathematical
        expression.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/attributeName'
          - description: The name of an attribute defined in a profile object type.
          title: Name
      required:
      - Name
      title: AttributeItem
      type: object
    AttributeMatchingModel:
      enum:
      - ONE_TO_ONE
      - MANY_TO_MANY
      title: AttributeMatchingModel
      type: string
    PhoneNumberList:
      items:
        $ref: '#/components/schemas/string1To255'
      maxItems: 4
      minItems: 1
      type: array
    EmailList:
      items:
        $ref: '#/components/schemas/string1To255'
      maxItems: 3
      minItems: 1
      type: array
    Attributes:
      additionalProperties:
        $ref: '#/components/schemas/string1To255'
      type: object
    Consolidation:
      description: 'The matching criteria to be used during the auto-merging process. '
      properties:
        MatchingAttributesList:
          allOf:
          - $ref: '#/components/schemas/MatchingAttributesList'
          - description: A list of matching criteria.
          title: MatchingAttributesList
      required:
      - MatchingAttributesList
      title: Consolidation
      type: object
    Double0To1:
      format: double
      maximum: 1
      minimum: 0
      type: number
    Batch:
      description: Batch defines the boundaries for ingestion for each step in <code>APPFLOW_INTEGRATION</code>
        workflow. <code>APPFLOW_INTEGRATION</code> workflow splits ingestion based
        on these boundaries.
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: Start time of batch to split ingestion.
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: End time of batch to split ingestion.
          title: EndTime
      required:
      - EndTime
      - StartTime
      title: Batch
      type: object
    BucketName:
      maxLength: 63
      minLength: 3
      pattern: \S+
      type: string
    BucketPrefix:
      maxLength: 512
      pattern: .*
      type: string
    ListCalculatedAttributeDefinitionItem:
      description: The details of a single calculated attribute definition.
      properties:
        CalculatedAttributeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The unique name of the calculated attribute.
          title: CalculatedAttributeName
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/displayName'
          - description: The display name of the calculated attribute.
          title: DisplayName
        Description:
          allOf:
          - $ref: '#/components/schemas/text'
          - description: The threshold for the calculated attribute.
          title: Description
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The threshold for the calculated attribute.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the calculated attribute definition
              was most recently edited.
          title: LastUpdatedAt
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
      title: ListCalculatedAttributeDefinitionItem
      type: object
    CalculatedAttributeDefinitionsList:
      items:
        $ref: '#/components/schemas/ListCalculatedAttributeDefinitionItem'
      type: array
    ListCalculatedAttributeForProfileItem:
      description: The details of a single calculated attribute for a profile.
      properties:
        CalculatedAttributeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The unique name of the calculated attribute.
          title: CalculatedAttributeName
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/displayName'
          - description: The display name of the calculated attribute.
          title: DisplayName
        IsDataPartial:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: "Indicates whether the calculated attribute’s value is based\
              \ on partial data. If data is partial, it is set to true."
          title: IsDataPartial
        Value:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The value of the calculated attribute.
          title: Value
      title: ListCalculatedAttributeForProfileItem
      type: object
    CalculatedAttributesForProfileList:
      items:
        $ref: '#/components/schemas/ListCalculatedAttributeForProfileItem'
      type: array
    Conditions:
      description: "The conditions including range, object count, and threshold for\
        \ the calculated attribute."
      properties:
        Range:
          $ref: '#/components/schemas/UpdateCalculatedAttributeDefinition_request_Conditions_Range'
        ObjectCount:
          allOf:
          - $ref: '#/components/schemas/ObjectCount'
          - description: The number of profile objects used for the calculated attribute.
          title: ObjectCount
        Threshold:
          $ref: '#/components/schemas/UpdateCalculatedAttributeDefinition_request_Conditions_Threshold'
      title: Conditions
      type: object
    MarketoConnectorOperator:
      enum:
      - PROJECTION
      - LESS_THAN
      - GREATER_THAN
      - BETWEEN
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      title: MarketoConnectorOperator
      type: string
    S3ConnectorOperator:
      enum:
      - PROJECTION
      - LESS_THAN
      - GREATER_THAN
      - BETWEEN
      - LESS_THAN_OR_EQUAL_TO
      - GREATER_THAN_OR_EQUAL_TO
      - EQUAL_TO
      - NOT_EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      title: S3ConnectorOperator
      type: string
    SalesforceConnectorOperator:
      enum:
      - PROJECTION
      - LESS_THAN
      - CONTAINS
      - GREATER_THAN
      - BETWEEN
      - LESS_THAN_OR_EQUAL_TO
      - GREATER_THAN_OR_EQUAL_TO
      - EQUAL_TO
      - NOT_EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      title: SalesforceConnectorOperator
      type: string
    ServiceNowConnectorOperator:
      enum:
      - PROJECTION
      - CONTAINS
      - LESS_THAN
      - GREATER_THAN
      - BETWEEN
      - LESS_THAN_OR_EQUAL_TO
      - GREATER_THAN_OR_EQUAL_TO
      - EQUAL_TO
      - NOT_EQUAL_TO
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      title: ServiceNowConnectorOperator
      type: string
    ZendeskConnectorOperator:
      enum:
      - PROJECTION
      - GREATER_THAN
      - ADDITION
      - MULTIPLICATION
      - DIVISION
      - SUBTRACTION
      - MASK_ALL
      - MASK_FIRST_N
      - MASK_LAST_N
      - VALIDATE_NON_NULL
      - VALIDATE_NON_ZERO
      - VALIDATE_NON_NEGATIVE
      - VALIDATE_NUMERIC
      - NO_OP
      title: ZendeskConnectorOperator
      type: string
    ConnectorOperator:
      description: The operation to be performed on the provided source fields.
      properties:
        Marketo:
          allOf:
          - $ref: '#/components/schemas/MarketoConnectorOperator'
          - description: The operation to be performed on the provided Marketo source
              fields.
          title: Marketo
        S3:
          allOf:
          - $ref: '#/components/schemas/S3ConnectorOperator'
          - description: The operation to be performed on the provided Amazon S3 source
              fields.
          title: S3
        Salesforce:
          allOf:
          - $ref: '#/components/schemas/SalesforceConnectorOperator'
          - description: The operation to be performed on the provided Salesforce
              source fields.
          title: Salesforce
        ServiceNow:
          allOf:
          - $ref: '#/components/schemas/ServiceNowConnectorOperator'
          - description: The operation to be performed on the provided ServiceNow
              source fields.
          title: ServiceNow
        Zendesk:
          allOf:
          - $ref: '#/components/schemas/ZendeskConnectorOperator'
          - description: The operation to be performed on the provided Zendesk source
              fields.
          title: Zendesk
      title: ConnectorOperator
      type: object
    displayName:
      maxLength: 255
      minLength: 1
      pattern: "^[a-zA-Z_][a-zA-Z_0-9-\\s]*$"
      type: string
    text:
      maxLength: 1000
      minLength: 1
      type: string
    Statistic:
      enum:
      - FIRST_OCCURRENCE
      - LAST_OCCURRENCE
      - COUNT
      - SUM
      - MINIMUM
      - MAXIMUM
      - AVERAGE
      - MAX_OCCURRENCE
      title: Statistic
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 1
      type: object
    CreateCalculatedAttributeDefinitionRequest:
      example:
        Description: ""
        AttributeDetails:
          Expression: ""
          Attributes: ""
        Statistic: ""
        DisplayName: ""
        Conditions:
          Range:
            Value: ""
            Unit: ""
          ObjectCount: ""
          Threshold:
            Operator: ""
            Value: ""
        Tags: ""
      properties:
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/displayName'
          - description: The display name of the calculated attribute.
        Description:
          allOf:
          - $ref: '#/components/schemas/text'
          - description: The description of the calculated attribute.
        AttributeDetails:
          $ref: '#/components/schemas/CreateCalculatedAttributeDefinitionResponse_AttributeDetails'
        Conditions:
          $ref: '#/components/schemas/CreateCalculatedAttributeDefinitionResponse_Conditions'
        Statistic:
          allOf:
          - $ref: '#/components/schemas/Statistic'
          - description: The aggregation operation to perform for the calculated attribute.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - AttributeDetails
      - Statistic
      title: CreateCalculatedAttributeDefinitionRequest
      type: object
    expirationDaysInteger:
      maximum: 1098
      minimum: 1
      type: integer
    encryptionKey:
      maxLength: 255
      minLength: 0
      type: string
    sqsQueueUrl:
      maxLength: 255
      minLength: 0
      type: string
    MatchingRequest:
      description: The flag that enables the matching process of duplicate profiles.
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/optionalBoolean'
          - description: The flag that enables the matching process of duplicate profiles.
          title: Enabled
        JobSchedule:
          $ref: '#/components/schemas/UpdateDomain_request_Matching_JobSchedule'
        AutoMerging:
          $ref: '#/components/schemas/UpdateDomain_request_Matching_AutoMerging'
        ExportingConfig:
          $ref: '#/components/schemas/UpdateDomain_request_Matching_ExportingConfig'
      required:
      - Enabled
      title: MatchingRequest
      type: object
    RuleBasedMatchingRequest:
      description: The request to enable the rule-based matching.
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/optionalBoolean'
          - description: The flag that enables the rule-based matching process of
              duplicate profiles.
          title: Enabled
        MatchingRules:
          allOf:
          - $ref: '#/components/schemas/MatchingRules'
          - description: Configures how the rule-based matching process should match
              profiles. You can have up to 15 <code>MatchingRule</code> in the <code>MatchingRules</code>.
          title: MatchingRules
        MaxAllowedRuleLevelForMerging:
          allOf:
          - $ref: '#/components/schemas/MaxAllowedRuleLevelForMerging'
          - description: ' <a href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_MatchingRule.html">MatchingRule</a> '
          title: MaxAllowedRuleLevelForMerging
        MaxAllowedRuleLevelForMatching:
          allOf:
          - $ref: '#/components/schemas/MaxAllowedRuleLevelForMatching'
          - description: Indicates the maximum allowed rule level.
          title: MaxAllowedRuleLevelForMatching
        AttributeTypesSelector:
          $ref: '#/components/schemas/UpdateDomain_request_RuleBasedMatching_AttributeTypesSelector'
        ConflictResolution:
          $ref: '#/components/schemas/ConflictResolution'
        ExportingConfig:
          $ref: '#/components/schemas/ExportingConfig'
      required:
      - Enabled
      title: RuleBasedMatchingRequest
      type: object
    CreateDomainRequest:
      example:
        Matching:
          AutoMerging:
            Consolidation:
              MatchingAttributesList: ""
            Enabled: ""
            ConflictResolution:
              ConflictResolvingModel: ""
              SourceName: ""
            MinAllowedConfidenceScoreForMerging: ""
          JobSchedule:
            DayOfTheWeek: ""
            Time: ""
          Enabled: ""
          ExportingConfig:
            S3Exporting:
              S3BucketName: ""
              S3KeyName: ""
        DefaultExpirationDays: ""
        DeadLetterQueueUrl: ""
        DefaultEncryptionKey: ""
        RuleBasedMatching:
          MaxAllowedRuleLevelForMerging: ""
          Enabled: ""
          MatchingRules: ""
          AttributeTypesSelector:
            Address: ""
            AttributeMatchingModel: ""
            PhoneNumber: ""
            EmailAddress: ""
          ConflictResolution:
            ConflictResolvingModel: ""
            SourceName: ""
          ExportingConfig:
            S3Exporting:
              S3BucketName: ""
              S3KeyName: ""
          MaxAllowedRuleLevelForMatching: ""
        Tags: ""
      properties:
        DefaultExpirationDays:
          allOf:
          - $ref: '#/components/schemas/expirationDaysInteger'
          - description: The default number of days until the data within the domain
              expires.
        DefaultEncryptionKey:
          allOf:
          - $ref: '#/components/schemas/encryptionKey'
          - description: "The default encryption key, which is an AWS managed key,\
              \ is used when no specific type of encryption key is specified. It is\
              \ used to encrypt all data before it is placed in permanent or semi-permanent\
              \ storage."
        DeadLetterQueueUrl:
          allOf:
          - $ref: '#/components/schemas/sqsQueueUrl'
          - description: "The URL of the SQS dead letter queue, which is used for\
              \ reporting errors associated with ingesting data from third party applications.\
              \ You must set up a policy on the DeadLetterQueue for the SendMessage\
              \ operation to enable Amazon Connect Customer Profiles to send messages\
              \ to the DeadLetterQueue."
        Matching:
          $ref: '#/components/schemas/CreateDomainRequest_Matching'
        RuleBasedMatching:
          $ref: '#/components/schemas/CreateDomainRequest_RuleBasedMatching'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - DefaultExpirationDays
      title: CreateDomainRequest
      type: object
    MatchingResponse:
      description: The flag that enables the matching process of duplicate profiles.
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/optionalBoolean'
          - description: The flag that enables the matching process of duplicate profiles.
          title: Enabled
        JobSchedule:
          $ref: '#/components/schemas/UpdateDomain_request_Matching_JobSchedule'
        AutoMerging:
          $ref: '#/components/schemas/UpdateDomain_request_Matching_AutoMerging'
        ExportingConfig:
          $ref: '#/components/schemas/UpdateDomain_request_Matching_ExportingConfig'
      title: MatchingResponse
      type: object
    RuleBasedMatchingResponse:
      description: The response of the Rule-based matching request.
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/optionalBoolean'
          - description: The flag that enables the rule-based matching process of
              duplicate profiles.
          title: Enabled
        MatchingRules:
          allOf:
          - $ref: '#/components/schemas/MatchingRules'
          - description: Configures how the rule-based matching process should match
              profiles. You can have up to 15 <code>MatchingRule</code> in the <code>MatchingRules</code>.
          title: MatchingRules
        Status:
          allOf:
          - $ref: '#/components/schemas/RuleBasedMatchingStatus'
          - description: "<p>PENDING</p> <ul> <li> <p>The first status after configuration\
              \ a rule-based matching rule. If it is an existing domain, the rule-based\
              \ Identity Resolution waits one hour before creating the matching rule.\
              \ If it is a new domain, the system will skip the <code>PENDING</code>\
              \ stage.</p> </li> </ul> <p>IN_PROGRESS</p> <ul> <li> <p>The system\
              \ is creating the rule-based matching rule. Under this status, the system\
              \ is evaluating the existing data and you can no longer change the Rule-based\
              \ matching configuration.</p> </li> </ul> <p>ACTIVE</p> <ul> <li> <p>The\
              \ rule is ready to use. You can change the rule a day after the status\
              \ is in <code>ACTIVE</code>.</p> </li> </ul>"
          title: Status
        MaxAllowedRuleLevelForMerging:
          allOf:
          - $ref: '#/components/schemas/MaxAllowedRuleLevelForMerging'
          - description: ' <a href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_MatchingRule.html">MatchingRule</a> '
          title: MaxAllowedRuleLevelForMerging
        MaxAllowedRuleLevelForMatching:
          allOf:
          - $ref: '#/components/schemas/MaxAllowedRuleLevelForMatching'
          - description: Indicates the maximum allowed rule level.
          title: MaxAllowedRuleLevelForMatching
        AttributeTypesSelector:
          $ref: '#/components/schemas/UpdateDomain_request_RuleBasedMatching_AttributeTypesSelector'
        ConflictResolution:
          $ref: '#/components/schemas/ConflictResolution'
        ExportingConfig:
          $ref: '#/components/schemas/ExportingConfig'
      title: RuleBasedMatchingResponse
      type: object
    CreateEventStreamRequest:
      example:
        Uri: ""
        Tags: ""
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: "The StreamARN of the destination to deliver profile events\
              \ to. For example, arn:aws:kinesis:region:account-id:stream/stream-name"
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - Uri
      title: CreateEventStreamRequest
      type: object
    WorkflowType:
      enum:
      - APPFLOW_INTEGRATION
      title: WorkflowType
      type: string
    IntegrationConfig:
      description: Configuration data for integration workflow.
      properties:
        AppflowIntegration:
          $ref: '#/components/schemas/CreateIntegrationWorkflow_request_IntegrationConfig_AppflowIntegration'
      title: IntegrationConfig
      type: object
    RoleArn:
      maxLength: 512
      pattern: "arn:aws:iam:.*:[0-9]+:.*"
      type: string
    CreateIntegrationWorkflowRequest:
      example:
        IntegrationConfig:
          AppflowIntegration:
            Batches: ""
            FlowDefinition:
              Description: ""
              Tasks: ""
              FlowName: ""
              TriggerConfig:
                TriggerType: ""
                TriggerProperties:
                  Scheduled:
                    ScheduleEndTime: ""
                    Timezone: ""
                    ScheduleExpression: ""
                    FirstExecutionFrom: ""
                    ScheduleStartTime: ""
                    DataPullMode: ""
                    ScheduleOffset: ""
              SourceFlowConfig:
                ConnectorProfileName: ""
                SourceConnectorProperties:
                  S3:
                    BucketName: ""
                    BucketPrefix: ""
                  ServiceNow:
                    Object: ""
                  Zendesk:
                    Object: ""
                  Marketo:
                    Object: ""
                  Salesforce:
                    IncludeDeletedRecords: ""
                    Object: ""
                    EnableDynamicFieldUpdate: ""
                ConnectorType: ""
                IncrementalPullConfig:
                  DatetimeTypeFieldName: ""
              KmsArn: ""
        WorkflowType: ""
        ObjectTypeName: ""
        RoleArn: ""
        Tags: ""
      properties:
        WorkflowType:
          allOf:
          - $ref: '#/components/schemas/WorkflowType'
          - description: The type of workflow. The only supported value is APPFLOW_INTEGRATION.
        IntegrationConfig:
          $ref: '#/components/schemas/CreateIntegrationWorkflowRequest_IntegrationConfig'
        ObjectTypeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The name of the profile object type.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of the IAM role. Customer
              Profiles assumes this role to create resources on your behalf as part
              of workflow execution.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - IntegrationConfig
      - ObjectTypeName
      - RoleArn
      - WorkflowType
      title: CreateIntegrationWorkflowRequest
      type: object
    string1To1000:
      maxLength: 1000
      minLength: 1
      type: string
    PartyType:
      deprecated: true
      enum:
      - INDIVIDUAL
      - BUSINESS
      - OTHER
      title: PartyType
      type: string
    Gender:
      deprecated: true
      enum:
      - MALE
      - FEMALE
      - UNSPECIFIED
      title: Gender
      type: string
    CreateProfileRequest:
      example:
        AdditionalInformation: ""
        BusinessName: ""
        Address:
          Address4: ""
          State: ""
          Address2: ""
          Address3: ""
          Country: ""
          PostalCode: ""
          Address1: ""
          City: ""
          County: ""
          Province: ""
        FirstName: ""
        PersonalEmailAddress: ""
        BusinessEmailAddress: ""
        Attributes: ""
        MailingAddress:
          Address4: ""
          State: ""
          Address2: ""
          Address3: ""
          Country: ""
          PostalCode: ""
          Address1: ""
          City: ""
          County: ""
          Province: ""
        Gender: ""
        BusinessPhoneNumber: ""
        MiddleName: ""
        MobilePhoneNumber: ""
        EmailAddress: ""
        AccountNumber: ""
        BillingAddress:
          Address4: ""
          State: ""
          Address2: ""
          Address3: ""
          Country: ""
          PostalCode: ""
          Address1: ""
          City: ""
          County: ""
          Province: ""
        GenderString: ""
        HomePhoneNumber: ""
        ShippingAddress:
          Address4: ""
          State: ""
          Address2: ""
          Address3: ""
          Country: ""
          PostalCode: ""
          Address1: ""
          City: ""
          County: ""
          Province: ""
        PhoneNumber: ""
        LastName: ""
        PartyType: ""
        PartyTypeString: ""
        BirthDate: ""
      properties:
        AccountNumber:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: A unique account number that you have given to the customer.
        AdditionalInformation:
          allOf:
          - $ref: '#/components/schemas/string1To1000'
          - description: Any additional information relevant to the customer’s profile.
        PartyType:
          allOf:
          - $ref: '#/components/schemas/PartyType'
          - description: The type of profile used to describe the customer.
        BusinessName:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The name of the customer’s business.
        FirstName:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s first name.
        MiddleName:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s middle name.
        LastName:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s last name.
        BirthDate:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: 'The customer’s birth date. '
        Gender:
          allOf:
          - $ref: '#/components/schemas/Gender'
          - description: 'The gender with which the customer identifies. '
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: "The customer’s phone number, which has not been specified\
              \ as a mobile, home, or business number. "
        MobilePhoneNumber:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s mobile phone number.
        HomePhoneNumber:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s home phone number.
        BusinessPhoneNumber:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s business phone number.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: "The customer’s email address, which has not been specified\
              \ as a personal or business address. "
        PersonalEmailAddress:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s personal email address.
        BusinessEmailAddress:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s business email address.
        Address:
          $ref: '#/components/schemas/CreateProfileRequest_Address'
        ShippingAddress:
          $ref: '#/components/schemas/CreateProfileRequest_ShippingAddress'
        MailingAddress:
          $ref: '#/components/schemas/CreateProfileRequest_MailingAddress'
        BillingAddress:
          $ref: '#/components/schemas/CreateProfileRequest_BillingAddress'
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: A key value pair of attributes of a customer profile.
        PartyTypeString:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: An alternative to <code>PartyType</code> which accepts any
              string as input.
        GenderString:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: An alternative to <code>Gender</code> which accepts any string
              as input.
      title: CreateProfileRequest
      type: object
    DataPullMode:
      enum:
      - Incremental
      - Complete
      title: DataPullMode
      type: string
    Date:
      format: date-time
      type: string
    DatetimeTypeFieldName:
      maxLength: 256
      pattern: .*
      type: string
    DeleteCalculatedAttributeDefinitionRequest:
      properties: {}
      title: DeleteCalculatedAttributeDefinitionRequest
      type: object
    DeleteDomainRequest:
      properties: {}
      title: DeleteDomainRequest
      type: object
    message:
      type: string
    DeleteEventStreamRequest:
      properties: {}
      title: DeleteEventStreamRequest
      type: object
    DeleteIntegrationRequest:
      example:
        Uri: ""
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The URI of the S3 bucket or any other type of data source.
      required:
      - Uri
      title: DeleteIntegrationRequest
      type: object
    DeleteProfileKeyRequest:
      example:
        ProfileId: ""
        KeyName: ""
        Values: ""
      properties:
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: The unique identifier of a customer profile.
        KeyName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: A searchable identifier of a customer profile.
        Values:
          allOf:
          - $ref: '#/components/schemas/requestValueList'
          - description: A list of key values.
      required:
      - KeyName
      - ProfileId
      - Values
      title: DeleteProfileKeyRequest
      type: object
    DeleteProfileObjectRequest:
      example:
        ProfileId: ""
        ObjectTypeName: ""
        ProfileObjectUniqueKey: ""
      properties:
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: The unique identifier of a customer profile.
        ProfileObjectUniqueKey:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The unique identifier of the profile object generated by
              the service.
        ObjectTypeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The name of the profile object type.
      required:
      - ObjectTypeName
      - ProfileId
      - ProfileObjectUniqueKey
      title: DeleteProfileObjectRequest
      type: object
    DeleteProfileObjectTypeRequest:
      properties: {}
      title: DeleteProfileObjectTypeRequest
      type: object
    DeleteProfileRequest:
      example:
        ProfileId: ""
      properties:
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: The unique identifier of a customer profile.
      required:
      - ProfileId
      title: DeleteProfileRequest
      type: object
    DeleteWorkflowRequest:
      properties: {}
      title: DeleteWorkflowRequest
      type: object
    DestinationField:
      maxLength: 256
      pattern: .*
      type: string
    EventStreamDestinationStatus:
      enum:
      - HEALTHY
      - UNHEALTHY
      title: EventStreamDestinationStatus
      type: string
    DestinationSummary:
      description: Summary information about the Kinesis data stream
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: "The StreamARN of the destination to deliver profile events\
              \ to. For example, arn:aws:kinesis:region:account-id:stream/stream-name."
          title: Uri
        Status:
          allOf:
          - $ref: '#/components/schemas/EventStreamDestinationStatus'
          - description: The status of enabling the Kinesis stream as a destination
              for export.
          title: Status
        UnhealthySince:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp when the status last changed to <code>UNHEALHY</code>.
          title: UnhealthySince
      required:
      - Status
      - Uri
      title: DestinationSummary
      type: object
    ListDomainItem:
      description: An object in a list that represents a domain.
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The unique name of the domain.
          title: DomainName
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was most recently edited.
          title: LastUpdatedAt
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
      required:
      - CreatedAt
      - DomainName
      - LastUpdatedAt
      title: ListDomainItem
      type: object
    DomainList:
      items:
        $ref: '#/components/schemas/ListDomainItem'
      type: array
    DomainStats:
      description: Usage-specific statistics about the domain.
      properties:
        ProfileCount:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: The total number of profiles currently in the domain.
          title: ProfileCount
        MeteringProfileCount:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: "The number of profiles that you are currently paying for\
              \ in the domain. If you have more than 100 objects associated with a\
              \ single profile, that profile counts as two profiles. If you have more\
              \ than 200 objects, that profile counts as three, and so on."
          title: MeteringProfileCount
        ObjectCount:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: The total number of objects in domain.
          title: ObjectCount
        TotalSize:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: "The total size, in bytes, of all objects in the domain."
          title: TotalSize
      title: DomainStats
      type: object
    Double:
      format: double
      type: number
    EventStreamDestinationDetails:
      description: Details of the destination being used for the EventStream.
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: "The StreamARN of the destination to deliver profile events\
              \ to. For example, arn:aws:kinesis:region:account-id:stream/stream-name."
          title: Uri
        Status:
          allOf:
          - $ref: '#/components/schemas/EventStreamDestinationStatus'
          - description: The status of enabling the Kinesis stream as a destination
              for export.
          title: Status
        UnhealthySince:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp when the status last changed to <code>UNHEALHY</code>.
          title: UnhealthySince
        Message:
          allOf:
          - $ref: '#/components/schemas/string1To1000'
          - description: The human-readable string that corresponds to the error or
              success while enabling the streaming destination.
          title: Message
      required:
      - Status
      - Uri
      title: EventStreamDestinationDetails
      type: object
    EventStreamState:
      enum:
      - RUNNING
      - STOPPED
      title: EventStreamState
      type: string
    EventStreamSummary:
      description: An instance of EventStream in a list of EventStreams.
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The unique name of the domain.
          title: DomainName
        EventStreamName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The name of the event stream.
          title: EventStreamName
        EventStreamArn:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: A unique identifier for the event stream.
          title: EventStreamArn
        State:
          allOf:
          - $ref: '#/components/schemas/EventStreamState'
          - description: The operational state of destination stream for export.
          title: State
        StoppedSince:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp when the <code>State</code> changed to <code>STOPPED</code>.
          title: StoppedSince
        DestinationSummary:
          $ref: '#/components/schemas/EventStreamSummary_DestinationSummary'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
      required:
      - DomainName
      - EventStreamArn
      - EventStreamName
      - State
      title: EventStreamSummary
      type: object
    EventStreamSummaryList:
      items:
        $ref: '#/components/schemas/EventStreamSummary'
      type: array
    S3ExportingConfig:
      description: Configuration information about the S3 bucket where Identity Resolution
        Jobs write result files.
      properties:
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/s3BucketName'
          - description: The name of the S3 bucket where Identity Resolution Jobs
              write result files.
          title: S3BucketName
        S3KeyName:
          allOf:
          - $ref: '#/components/schemas/s3KeyNameCustomerOutputConfig'
          - description: The S3 key name of the location where Identity Resolution
              Jobs write result files.
          title: S3KeyName
      required:
      - S3BucketName
      title: S3ExportingConfig
      type: object
    S3ExportingLocation:
      description: The S3 location where Identity Resolution Jobs write result files.
      properties:
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/s3BucketName'
          - description: The name of the S3 bucket name where Identity Resolution
              Jobs write result files.
          title: S3BucketName
        S3KeyName:
          allOf:
          - $ref: '#/components/schemas/s3KeyName'
          - description: The S3 key name of the location where Identity Resolution
              Jobs write result files.
          title: S3KeyName
      title: S3ExportingLocation
      type: object
    ExportingLocation:
      description: The S3 location where Identity Resolution Jobs write result files.
      properties:
        S3Exporting:
          $ref: '#/components/schemas/ExportingLocation_S3Exporting'
      title: ExportingLocation
      type: object
    FieldContentType:
      enum:
      - STRING
      - NUMBER
      - PHONE_NUMBER
      - EMAIL_ADDRESS
      - NAME
      title: FieldContentType
      type: string
    FieldMap:
      additionalProperties:
        $ref: '#/components/schemas/ObjectTypeField'
      type: object
    FieldNameList:
      items:
        $ref: '#/components/schemas/name'
      type: array
    FieldSourceProfileIds:
      description: 'A duplicate customer profile that is to be merged into a main
        profile. '
      properties:
        AccountNumber:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: 'A unique identifier for the account number field to be merged. '
          title: AccountNumber
        AdditionalInformation:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the additional information field
              to be merged.
          title: AdditionalInformation
        PartyType:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the party type field to be merged.
          title: PartyType
        BusinessName:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the business name field to be merged.
          title: BusinessName
        FirstName:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the first name field to be merged.
          title: FirstName
        MiddleName:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the middle name field to be merged.
          title: MiddleName
        LastName:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the last name field to be merged.
          title: LastName
        BirthDate:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the birthdate field to be merged.
          title: BirthDate
        Gender:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the gender field to be merged.
          title: Gender
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the phone number field to be merged.
          title: PhoneNumber
        MobilePhoneNumber:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the mobile phone number field to
              be merged.
          title: MobilePhoneNumber
        HomePhoneNumber:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the home phone number field to be
              merged.
          title: HomePhoneNumber
        BusinessPhoneNumber:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the business phone number field to
              be merged.
          title: BusinessPhoneNumber
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the email address field to be merged.
          title: EmailAddress
        PersonalEmailAddress:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the personal email address field
              to be merged.
          title: PersonalEmailAddress
        BusinessEmailAddress:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the party type field to be merged.
          title: BusinessEmailAddress
        Address:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the party type field to be merged.
          title: Address
        ShippingAddress:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the shipping address field to be
              merged.
          title: ShippingAddress
        MailingAddress:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the mailing address field to be merged.
          title: MailingAddress
        BillingAddress:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the billing type field to be merged.
          title: BillingAddress
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeSourceIdMap'
          - description: A unique identifier for the attributes field to be merged.
          title: Attributes
      title: FieldSourceProfileIds
      type: object
    FoundByKeyValue:
      description: 'A data type pair that consists of a <code>KeyName</code> and <code>Values</code>
        list that were used to find a profile returned in response to a <a href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_SearchProfiles.html">SearchProfiles</a>
        request. '
      properties:
        KeyName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: A searchable identifier of a customer profile.
          title: KeyName
        Values:
          allOf:
          - $ref: '#/components/schemas/requestValueList'
          - description: A list of key values.
          title: Values
      title: FoundByKeyValue
      type: object
    GetAutoMergingPreviewRequest:
      example:
        Consolidation:
          MatchingAttributesList: ""
        ConflictResolution:
          ConflictResolvingModel: ""
          SourceName: ""
        MinAllowedConfidenceScoreForMerging: ""
      properties:
        Consolidation:
          $ref: '#/components/schemas/GetAutoMergingPreviewRequest_Consolidation'
        ConflictResolution:
          $ref: '#/components/schemas/GetAutoMergingPreviewRequest_ConflictResolution'
        MinAllowedConfidenceScoreForMerging:
          allOf:
          - $ref: '#/components/schemas/Double0To1'
          - description: Minimum confidence score required for profiles within a matching
              group to be merged during the auto-merge process.
      required:
      - ConflictResolution
      - Consolidation
      title: GetAutoMergingPreviewRequest
      type: object
    GetCalculatedAttributeDefinitionRequest:
      properties: {}
      title: GetCalculatedAttributeDefinitionRequest
      type: object
    GetCalculatedAttributeForProfileRequest:
      properties: {}
      title: GetCalculatedAttributeForProfileRequest
      type: object
    GetDomainRequest:
      properties: {}
      title: GetDomainRequest
      type: object
    GetEventStreamRequest:
      properties: {}
      title: GetEventStreamRequest
      type: object
    GetIdentityResolutionJobRequest:
      properties: {}
      title: GetIdentityResolutionJobRequest
      type: object
    IdentityResolutionJobStatus:
      enum:
      - PENDING
      - PREPROCESSING
      - FIND_MATCHING
      - MERGING
      - COMPLETED
      - PARTIAL_SUCCESS
      - FAILED
      title: IdentityResolutionJobStatus
      type: string
    stringTo2048:
      maxLength: 2048
      pattern: .*
      title: stringTo2048
      type: string
    JobStats:
      description: Statistics about the Identity Resolution Job.
      properties:
        NumberOfProfilesReviewed:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: The number of profiles reviewed.
          title: NumberOfProfilesReviewed
        NumberOfMatchesFound:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: The number of matches found.
          title: NumberOfMatchesFound
        NumberOfMergesDone:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: The number of merges completed.
          title: NumberOfMergesDone
      title: JobStats
      type: object
    GetIntegrationRequest:
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The URI of the S3 bucket or any other type of data source.
      required:
      - Uri
      title: GetIntegrationRequest
      type: object
    ObjectTypeNames:
      additionalProperties:
        $ref: '#/components/schemas/typeName'
      type: object
    token:
      maxLength: 1024
      minLength: 1
      type: string
    maxSize100:
      maximum: 100
      minimum: 1
      type: integer
    GetMatchesRequest:
      properties: {}
      title: GetMatchesRequest
      type: object
    matchesNumber:
      minimum: 0
      type: integer
    MatchesList:
      items:
        $ref: '#/components/schemas/MatchItem'
      type: array
    GetProfileObjectTypeRequest:
      properties: {}
      title: GetProfileObjectTypeRequest
      type: object
    boolean:
      type: boolean
    KeyMap:
      additionalProperties:
        $ref: '#/components/schemas/ObjectTypeKeyList'
      type: object
    GetProfileObjectTypeTemplateRequest:
      properties: {}
      title: GetProfileObjectTypeTemplateRequest
      type: object
    MatchType:
      enum:
      - RULE_BASED_MATCHING
      - ML_BASED_MATCHING
      title: MatchType
      type: string
    GetSimilarProfilesRequest:
      example:
        MatchType: ""
        SearchValue: ""
        SearchKey: ""
      properties:
        MatchType:
          allOf:
          - $ref: '#/components/schemas/MatchType'
          - description: Specify the type of matching to get similar profiles for.
        SearchKey:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The string indicating the search key to be used.
        SearchValue:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The string based on <code>SearchKey</code> to be searched
              for similar profiles.
      required:
      - MatchType
      - SearchKey
      - SearchValue
      title: GetSimilarProfilesRequest
      type: object
    ProfileIdList:
      items:
        $ref: '#/components/schemas/uuid'
      type: array
    RuleLevel:
      maximum: 15
      minimum: 1
      type: integer
    GetWorkflowRequest:
      properties: {}
      title: GetWorkflowRequest
      type: object
    WorkflowAttributes:
      description: Structure to hold workflow attributes.
      properties:
        AppflowIntegration:
          $ref: '#/components/schemas/WorkflowAttributes_AppflowIntegration'
      title: WorkflowAttributes
      type: object
    WorkflowMetrics:
      description: Generic object containing workflow execution metrics.
      properties:
        AppflowIntegration:
          $ref: '#/components/schemas/WorkflowMetrics_AppflowIntegration'
      title: WorkflowMetrics
      type: object
    GetWorkflowStepsRequest:
      properties: {}
      title: GetWorkflowStepsRequest
      type: object
    WorkflowStepsList:
      items:
        $ref: '#/components/schemas/WorkflowStepItem'
      type: array
    IdentityResolutionJob:
      description: Information about the Identity Resolution Job.
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The unique name of the domain.
          title: DomainName
        JobId:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: The unique identifier of the Identity Resolution Job.
          title: JobId
        Status:
          allOf:
          - $ref: '#/components/schemas/IdentityResolutionJobStatus'
          - description: "<p>The status of the Identity Resolution Job.</p> <ul> <li>\
              \ <p> <code>PENDING</code>: The Identity Resolution Job is scheduled\
              \ but has not started yet. If you turn off the Identity Resolution feature\
              \ in your domain, jobs in the <code>PENDING</code> state are deleted.</p>\
              \ </li> <li> <p> <code>PREPROCESSING</code>: The Identity Resolution\
              \ Job is loading your data.</p> </li> <li> <p> <code>FIND_MATCHING</code>:\
              \ The Identity Resolution Job is using the machine learning model to\
              \ identify profiles that belong to the same matching group.</p> </li>\
              \ <li> <p> <code>MERGING</code>: The Identity Resolution Job is merging\
              \ duplicate profiles.</p> </li> <li> <p> <code>COMPLETED</code>: The\
              \ Identity Resolution Job completed successfully.</p> </li> <li> <p>\
              \ <code>PARTIAL_SUCCESS</code>: There's a system error and not all of\
              \ the data is merged. The Identity Resolution Job writes a message indicating\
              \ the source of the problem.</p> </li> <li> <p> <code>FAILED</code>:\
              \ The Identity Resolution Job did not merge any data. It writes a message\
              \ indicating the source of the problem.</p> </li> </ul>"
          title: Status
        JobStartTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the job was started or will be started.
          title: JobStartTime
        JobEndTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the job was completed.
          title: JobEndTime
        JobStats:
          $ref: '#/components/schemas/IdentityResolutionJob_JobStats'
        ExportingLocation:
          $ref: '#/components/schemas/GetIdentityResolutionJobResponse_ExportingLocation'
        Message:
          allOf:
          - $ref: '#/components/schemas/stringTo2048'
          - description: The error messages that are generated when the Identity Resolution
              Job runs.
          title: Message
      title: IdentityResolutionJob
      type: object
    IdentityResolutionJobsList:
      items:
        $ref: '#/components/schemas/IdentityResolutionJob'
      type: array
    IncrementalPullConfig:
      description: Specifies the configuration used when importing incremental records
        from the source.
      properties:
        DatetimeTypeFieldName:
          allOf:
          - $ref: '#/components/schemas/DatetimeTypeFieldName'
          - description: A field that specifies the date time or timestamp field as
              the criteria to use when importing incremental records from the source.
          title: DatetimeTypeFieldName
      title: IncrementalPullConfig
      type: object
    ListIntegrationItem:
      description: An integration in list of integrations.
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The unique name of the domain.
          title: DomainName
        Uri:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The URI of the S3 bucket or any other type of data source.
          title: Uri
        ObjectTypeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The name of the profile object type.
          title: ObjectTypeName
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was most recently edited.
          title: LastUpdatedAt
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
        ObjectTypeNames:
          allOf:
          - $ref: '#/components/schemas/ObjectTypeNames'
          - description: "A map in which each key is an event type from an external\
              \ application such as Segment or Shopify, and each value is an <code>ObjectTypeName</code>\
              \ (template) used to ingest the event. It supports the following event\
              \ types: <code>SegmentIdentify</code>, <code>ShopifyCreateCustomers</code>,\
              \ <code>ShopifyUpdateCustomers</code>, <code>ShopifyCreateDraftOrders</code>,\
              \ <code>ShopifyUpdateDraftOrders</code>, <code>ShopifyCreateOrders</code>,\
              \ and <code>ShopifyUpdatedOrders</code>."
          title: ObjectTypeNames
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: Unique identifier for the workflow.
          title: WorkflowId
        IsUnstructured:
          allOf:
          - $ref: '#/components/schemas/optionalBoolean'
          - description: "Boolean that shows if the Flow that's associated with the\
              \ Integration is created in Amazon Appflow, or with ObjectTypeName equals\
              \ _unstructured via API/CLI in flowDefinition."
          title: IsUnstructured
      required:
      - CreatedAt
      - DomainName
      - LastUpdatedAt
      - Uri
      title: ListIntegrationItem
      type: object
    IntegrationList:
      items:
        $ref: '#/components/schemas/ListIntegrationItem'
      type: array
    JobScheduleDayOfTheWeek:
      enum:
      - SUNDAY
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      title: JobScheduleDayOfTheWeek
      type: string
    JobScheduleTime:
      maxLength: 5
      minLength: 3
      pattern: "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"
      type: string
    ListAccountIntegrationsRequest:
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The URI of the S3 bucket or any other type of data source.
      required:
      - Uri
      title: ListAccountIntegrationsRequest
      type: object
    ListCalculatedAttributeDefinitionsRequest:
      properties: {}
      title: ListCalculatedAttributeDefinitionsRequest
      type: object
    ListCalculatedAttributesForProfileRequest:
      properties: {}
      title: ListCalculatedAttributesForProfileRequest
      type: object
    ListDomainsRequest:
      properties: {}
      title: ListDomainsRequest
      type: object
    ListEventStreamsRequest:
      properties: {}
      title: ListEventStreamsRequest
      type: object
    ListIdentityResolutionJobsRequest:
      properties: {}
      title: ListIdentityResolutionJobsRequest
      type: object
    ListIntegrationsRequest:
      properties: {}
      title: ListIntegrationsRequest
      type: object
    ListProfileObjectTypeItem:
      description: A ProfileObjectType instance.
      properties:
        ObjectTypeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The name of the profile object type.
          title: ObjectTypeName
        Description:
          allOf:
          - $ref: '#/components/schemas/text'
          - description: Description of the profile object type.
          title: Description
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was created.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: The timestamp of when the domain was most recently edited.
          title: LastUpdatedAt
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: Tags
      required:
      - Description
      - ObjectTypeName
      title: ListProfileObjectTypeItem
      type: object
    ListProfileObjectTypeTemplateItem:
      description: A ProfileObjectTypeTemplate in a list of ProfileObjectTypeTemplates.
      properties:
        TemplateId:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: A unique identifier for the object template.
          title: TemplateId
        SourceName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The name of the source of the object template.
          title: SourceName
        SourceObject:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: The source of the object template.
          title: SourceObject
      title: ListProfileObjectTypeTemplateItem
      type: object
    ListProfileObjectTypeTemplatesRequest:
      properties: {}
      title: ListProfileObjectTypeTemplatesRequest
      type: object
    ProfileObjectTypeTemplateList:
      items:
        $ref: '#/components/schemas/ListProfileObjectTypeTemplateItem'
      type: array
    ListProfileObjectTypesRequest:
      properties: {}
      title: ListProfileObjectTypesRequest
      type: object
    ProfileObjectTypeList:
      items:
        $ref: '#/components/schemas/ListProfileObjectTypeItem'
      type: array
    stringifiedJson:
      maxLength: 256000
      minLength: 1
      type: string
    ListProfileObjectsItem:
      description: A ProfileObject in a list of ProfileObjects.
      properties:
        ObjectTypeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: "Specifies the kind of object being added to a profile, such\
              \ as \"Salesforce-Account.\""
          title: ObjectTypeName
        ProfileObjectUniqueKey:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The unique identifier of the ProfileObject generated by the
              service.
          title: ProfileObjectUniqueKey
        Object:
          allOf:
          - $ref: '#/components/schemas/stringifiedJson'
          - description: A JSON representation of a ProfileObject that belongs to
              a profile.
          title: Object
      title: ListProfileObjectsItem
      type: object
    ObjectFilter:
      description: The filter applied to <code>ListProfileObjects</code> response
        to include profile objects with the specified index values.
      properties:
        KeyName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: "A searchable identifier of a profile object. The predefined\
              \ keys you can use to search for <code>_asset</code> include: <code>_assetId</code>,\
              \ <code>_assetName</code>, and <code>_serialNumber</code>. The predefined\
              \ keys you can use to search for <code>_case</code> include: <code>_caseId</code>.\
              \ The predefined keys you can use to search for <code>_order</code>\
              \ include: <code>_orderId</code>."
          title: KeyName
        Values:
          allOf:
          - $ref: '#/components/schemas/requestValueList'
          - description: A list of key values.
          title: Values
      required:
      - KeyName
      - Values
      title: ObjectFilter
      type: object
    ListProfileObjectsRequest:
      example:
        ProfileId: ""
        ObjectTypeName: ""
        ObjectFilter:
          KeyName: ""
          Values: ""
      properties:
        ObjectTypeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The name of the profile object type.
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: The unique identifier of a customer profile.
        ObjectFilter:
          $ref: '#/components/schemas/ListProfileObjectsRequest_ObjectFilter'
      required:
      - ObjectTypeName
      - ProfileId
      title: ListProfileObjectsRequest
      type: object
    ProfileObjectList:
      items:
        $ref: '#/components/schemas/ListProfileObjectsItem'
      type: array
    ListRuleBasedMatchesRequest:
      properties: {}
      title: ListRuleBasedMatchesRequest
      type: object
    MatchIdList:
      items:
        $ref: '#/components/schemas/string1To255'
      type: array
    TagArn:
      maxLength: 256
      pattern: "^arn:[a-z0-9]{1,10}:profile"
      type: string
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    ListWorkflowsItem:
      description: A workflow in list of workflows.
      properties:
        WorkflowType:
          allOf:
          - $ref: '#/components/schemas/WorkflowType'
          - description: The type of workflow. The only supported value is APPFLOW_INTEGRATION.
          title: WorkflowType
        WorkflowId:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: Unique identifier for the workflow.
          title: WorkflowId
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: Status of workflow execution.
          title: Status
        StatusDescription:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: Description for workflow execution status.
          title: StatusDescription
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: Creation timestamp for workflow.
          title: CreatedAt
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: Last updated timestamp for workflow.
          title: LastUpdatedAt
      required:
      - CreatedAt
      - LastUpdatedAt
      - Status
      - StatusDescription
      - WorkflowId
      - WorkflowType
      title: ListWorkflowsItem
      type: object
    ListWorkflowsRequest:
      example:
        Status: ""
        QueryEndDate: ""
        WorkflowType: ""
        QueryStartDate: ""
      properties:
        WorkflowType:
          allOf:
          - $ref: '#/components/schemas/WorkflowType'
          - description: The type of workflow. The only supported value is APPFLOW_INTEGRATION.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: Status of workflow execution.
        QueryStartDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: Retrieve workflows started after timestamp.
        QueryEndDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: Retrieve workflows ended after timestamp.
      title: ListWorkflowsRequest
      type: object
    WorkflowList:
      items:
        $ref: '#/components/schemas/ListWorkflowsItem'
      type: array
    Object:
      maxLength: 512
      pattern: \S+
      type: string
    MarketoSourceProperties:
      description: The properties that are applied when Marketo is being used as a
        source.
      properties:
        Object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: The object specified in the Marketo flow source.
          title: Object
      required:
      - Object
      title: MarketoSourceProperties
      type: object
    MatchItem:
      description: The Match group object.
      properties:
        MatchId:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The unique identifiers for this group of profiles that match.
          title: MatchId
        ProfileIds:
          allOf:
          - $ref: '#/components/schemas/ProfileIdList'
          - description: A list of identifiers for profiles that match.
          title: ProfileIds
        ConfidenceScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: "A number between 0 and 1, where a higher score means higher\
              \ similarity. Examining match confidence scores lets you distinguish\
              \ between groups of similar records in which the system is highly confident\
              \ (which you may decide to merge), groups of similar records about which\
              \ the system is uncertain (which you may decide to have reviewed by\
              \ a human), and groups of similar records that the system deems to be\
              \ unlikely (which you may decide to reject). Given confidence scores\
              \ vary as per the data input, it should not be used an absolute measure\
              \ of matching quality."
          title: ConfidenceScore
      title: MatchItem
      type: object
    MatchingAttributes:
      items:
        $ref: '#/components/schemas/string1To255'
      maxItems: 20
      minItems: 1
      title: MatchingAttributes
      type: array
    MatchingRuleAttributeList:
      items:
        $ref: '#/components/schemas/string1To255'
      maxItems: 15
      minItems: 1
      type: array
    MatchingRule:
      description: <p>Specifies how does the rule-based matching process should match
        profiles. You can choose from the following attributes to build the matching
        Rule:</p> <ul> <li> <p>AccountNumber</p> </li> <li> <p>Address.Address</p>
        </li> <li> <p>Address.City</p> </li> <li> <p>Address.Country</p> </li> <li>
        <p>Address.County</p> </li> <li> <p>Address.PostalCode</p> </li> <li> <p>Address.State</p>
        </li> <li> <p>Address.Province</p> </li> <li> <p>BirthDate</p> </li> <li>
        <p>BusinessName</p> </li> <li> <p>EmailAddress</p> </li> <li> <p>FirstName</p>
        </li> <li> <p>Gender</p> </li> <li> <p>LastName</p> </li> <li> <p>MiddleName</p>
        </li> <li> <p>PhoneNumber</p> </li> <li> <p>Any customized profile attributes
        that start with the <code>Attributes</code> </p> </li> </ul>
      properties:
        Rule:
          allOf:
          - $ref: '#/components/schemas/MatchingRuleAttributeList'
          - description: A single rule level of the <code>MatchRules</code>. Configures
              how the rule-based matching process should match profiles.
          title: Rule
      required:
      - Rule
      title: MatchingRule
      type: object
    ProfileIdToBeMergedList:
      items:
        $ref: '#/components/schemas/uuid'
      maxItems: 20
      minItems: 1
      type: array
    MergeProfilesRequest:
      example:
        MainProfileId: ""
        FieldSourceProfileIds:
          AdditionalInformation: ""
          BusinessName: ""
          Address: ""
          FirstName: ""
          PersonalEmailAddress: ""
          BusinessEmailAddress: ""
          Attributes: ""
          MailingAddress: ""
          Gender: ""
          BusinessPhoneNumber: ""
          MiddleName: ""
          MobilePhoneNumber: ""
          EmailAddress: ""
          AccountNumber: ""
          BillingAddress: ""
          HomePhoneNumber: ""
          ShippingAddress: ""
          PhoneNumber: ""
          LastName: ""
          PartyType: ""
          BirthDate: ""
        ProfileIdsToBeMerged: ""
      properties:
        MainProfileId:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: The identifier of the profile to be taken.
        ProfileIdsToBeMerged:
          allOf:
          - $ref: '#/components/schemas/ProfileIdToBeMergedList'
          - description: The identifier of the profile to be merged into MainProfileId.
        FieldSourceProfileIds:
          $ref: '#/components/schemas/MergeProfilesRequest_FieldSourceProfileIds'
      required:
      - MainProfileId
      - ProfileIdsToBeMerged
      title: MergeProfilesRequest
      type: object
    StandardIdentifierList:
      items:
        $ref: '#/components/schemas/StandardIdentifier'
      type: array
    ObjectTypeKey:
      description: An object that defines the Key element of a ProfileObject. A Key
        is a special element that can be used to search for a customer profile.
      properties:
        StandardIdentifiers:
          allOf:
          - $ref: '#/components/schemas/StandardIdentifierList'
          - description: "The types of keys that a ProfileObject can have. Each ProfileObject\
              \ can have only 1 UNIQUE key but multiple PROFILE keys. PROFILE, ASSET,\
              \ CASE, or ORDER means that this key can be used to tie an object to\
              \ a PROFILE, ASSET, CASE, or ORDER respectively. UNIQUE means that it\
              \ can be used to uniquely identify an object. If a key a is marked as\
              \ SECONDARY, it will be used to search for profiles after all other\
              \ PROFILE keys have been searched. A LOOKUP_ONLY key is only used to\
              \ match a profile but is not persisted to be used for searching of the\
              \ profile. A NEW_ONLY key is only used if the profile does not already\
              \ exist before the object is ingested, otherwise it is only used for\
              \ matching objects to profiles."
          title: StandardIdentifiers
        FieldNames:
          allOf:
          - $ref: '#/components/schemas/FieldNameList'
          - description: The reference for the key name of the fields map.
          title: FieldNames
      title: ObjectTypeKey
      type: object
    Operator:
      enum:
      - EQUAL_TO
      - GREATER_THAN
      - LESS_THAN
      - NOT_EQUAL_TO
      title: Operator
      type: string
    OperatorPropertiesKeys:
      enum:
      - VALUE
      - VALUES
      - DATA_TYPE
      - UPPER_BOUND
      - LOWER_BOUND
      - SOURCE_DATA_TYPE
      - DESTINATION_DATA_TYPE
      - VALIDATION_ACTION
      - MASK_VALUE
      - MASK_LENGTH
      - TRUNCATE_LENGTH
      - MATH_OPERATION_FIELDS_ORDER
      - CONCAT_FORMAT
      - SUBFIELD_CATEGORY_MAP
      type: string
    foundByList:
      items:
        $ref: '#/components/schemas/FoundByKeyValue'
      maxItems: 5
      minItems: 1
      type: array
    Profile:
      description: The standard profile of a customer.
      properties:
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: The unique identifier of a customer profile.
          title: ProfileId
        AccountNumber:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: A unique account number that you have given to the customer.
          title: AccountNumber
        AdditionalInformation:
          allOf:
          - $ref: '#/components/schemas/string1To1000'
          - description: Any additional information relevant to the customer’s profile.
          title: AdditionalInformation
        PartyType:
          allOf:
          - $ref: '#/components/schemas/PartyType'
          - description: The type of profile used to describe the customer.
          title: PartyType
        BusinessName:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The name of the customer’s business.
          title: BusinessName
        FirstName:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s first name.
          title: FirstName
        MiddleName:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s middle name.
          title: MiddleName
        LastName:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s last name.
          title: LastName
        BirthDate:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: 'The customer’s birth date. '
          title: BirthDate
        Gender:
          allOf:
          - $ref: '#/components/schemas/Gender'
          - description: 'The gender with which the customer identifies. '
          title: Gender
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: "The customer's phone number, which has not been specified\
              \ as a mobile, home, or business number."
          title: PhoneNumber
        MobilePhoneNumber:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s mobile phone number.
          title: MobilePhoneNumber
        HomePhoneNumber:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s home phone number.
          title: HomePhoneNumber
        BusinessPhoneNumber:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s home phone number.
          title: BusinessPhoneNumber
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: "The customer’s email address, which has not been specified\
              \ as a personal or business address. "
          title: EmailAddress
        PersonalEmailAddress:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s personal email address.
          title: PersonalEmailAddress
        BusinessEmailAddress:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The customer’s business email address.
          title: BusinessEmailAddress
        Address:
          $ref: '#/components/schemas/CreateProfileRequest_Address'
        ShippingAddress:
          $ref: '#/components/schemas/CreateProfileRequest_ShippingAddress'
        MailingAddress:
          $ref: '#/components/schemas/CreateProfileRequest_MailingAddress'
        BillingAddress:
          $ref: '#/components/schemas/CreateProfileRequest_BillingAddress'
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: A key value pair of attributes of a customer profile.
          title: Attributes
        FoundByItems:
          allOf:
          - $ref: '#/components/schemas/foundByList'
          - description: "<p>A list of items used to find a profile returned in a\
              \ <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_SearchProfiles.html\"\
              >SearchProfiles</a> response. An item is a key-value(s) pair that matches\
              \ an attribute in the profile.</p> <p>If the optional <code>AdditionalSearchKeys</code>\
              \ parameter was included in the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_SearchProfiles.html\"\
              >SearchProfiles</a> request, the <code>FoundByItems</code> list should\
              \ be interpreted based on the <code>LogicalOperator</code> used in the\
              \ request:</p> <ul> <li> <p> <code>AND</code> - The profile included\
              \ in the response matched all of the search keys specified in the request.\
              \ The <code>FoundByItems</code> will include all of the key-value(s)\
              \ pairs that were specified in the request (as this is a requirement\
              \ of <code>AND</code> search logic).</p> </li> <li> <p> <code>OR</code>\
              \ - The profile included in the response matched at least one of the\
              \ search keys specified in the request. The <code>FoundByItems</code>\
              \ will include each of the key-value(s) pairs that the profile was found\
              \ by.</p> </li> </ul> <p>The <code>OR</code> relationship is the default\
              \ behavior if the <code>LogicalOperator</code> parameter is not included\
              \ in the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_SearchProfiles.html\"\
              >SearchProfiles</a> request.</p>"
          title: FoundByItems
        PartyTypeString:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: An alternative to PartyType which accepts any string as input.
          title: PartyTypeString
        GenderString:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: An alternative to Gender which accepts any string as input.
          title: GenderString
      title: Profile
      type: object
    ProfileList:
      items:
        $ref: '#/components/schemas/Profile'
      type: array
    Property:
      maxLength: 2048
      pattern: .+
      title: Property
      type: string
    PutIntegrationRequest:
      example:
        ObjectTypeNames: ""
        ObjectTypeName: ""
        Uri: ""
        FlowDefinition:
          Description: ""
          Tasks: ""
          FlowName: ""
          TriggerConfig:
            TriggerType: ""
            TriggerProperties:
              Scheduled:
                ScheduleEndTime: ""
                Timezone: ""
                ScheduleExpression: ""
                FirstExecutionFrom: ""
                ScheduleStartTime: ""
                DataPullMode: ""
                ScheduleOffset: ""
          SourceFlowConfig:
            ConnectorProfileName: ""
            SourceConnectorProperties:
              S3:
                BucketName: ""
                BucketPrefix: ""
              ServiceNow:
                Object: ""
              Zendesk:
                Object: ""
              Marketo:
                Object: ""
              Salesforce:
                IncludeDeletedRecords: ""
                Object: ""
                EnableDynamicFieldUpdate: ""
            ConnectorType: ""
            IncrementalPullConfig:
              DatetimeTypeFieldName: ""
          KmsArn: ""
        Tags: ""
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The URI of the S3 bucket or any other type of data source.
        ObjectTypeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The name of the profile object type.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
        FlowDefinition:
          $ref: '#/components/schemas/PutIntegrationRequest_FlowDefinition'
        ObjectTypeNames:
          allOf:
          - $ref: '#/components/schemas/ObjectTypeNames'
          - description: "A map in which each key is an event type from an external\
              \ application such as Segment or Shopify, and each value is an <code>ObjectTypeName</code>\
              \ (template) used to ingest the event. It supports the following event\
              \ types: <code>SegmentIdentify</code>, <code>ShopifyCreateCustomers</code>,\
              \ <code>ShopifyUpdateCustomers</code>, <code>ShopifyCreateDraftOrders</code>,\
              \ <code>ShopifyUpdateDraftOrders</code>, <code>ShopifyCreateOrders</code>,\
              \ and <code>ShopifyUpdatedOrders</code>."
      title: PutIntegrationRequest
      type: object
    PutProfileObjectRequest:
      example:
        ObjectTypeName: ""
        Object: ""
      properties:
        ObjectTypeName:
          allOf:
          - $ref: '#/components/schemas/typeName'
          - description: The name of the profile object type.
        Object:
          allOf:
          - $ref: '#/components/schemas/stringifiedJson'
          - description: A string that is serialized from a JSON object.
      required:
      - Object
      - ObjectTypeName
      title: PutProfileObjectRequest
      type: object
    PutProfileObjectTypeRequest:
      example:
        Description: ""
        Fields: ""
        AllowProfileCreation: ""
        Keys: ""
        SourceLastUpdatedTimestampFormat: ""
        EncryptionKey: ""
        TemplateId: ""
        Tags: ""
        ExpirationDays: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/text'
          - description: Description of the profile object type.
        TemplateId:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: "A unique identifier for the object template. For some attributes\
              \ in the request, the service will use the default value from the object\
              \ template when TemplateId is present. If these attributes are present\
              \ in the request, the service may return a <code>BadRequestException</code>.\
              \ These attributes include: AllowProfileCreation, SourceLastUpdatedTimestampFormat,\
              \ Fields, and Keys. For example, if AllowProfileCreation is set to true\
              \ when TemplateId is set, the service may return a <code>BadRequestException</code>."
        ExpirationDays:
          allOf:
          - $ref: '#/components/schemas/expirationDaysInteger'
          - description: The number of days until the data in the object expires.
        EncryptionKey:
          allOf:
          - $ref: '#/components/schemas/encryptionKey'
          - description: The customer-provided key to encrypt the profile object that
              will be created in this profile object type.
        AllowProfileCreation:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: "Indicates whether a profile should be created when data\
              \ is received if one doesn’t exist for an object of this type. The default\
              \ is <code>FALSE</code>. If the AllowProfileCreation flag is set to\
              \ <code>FALSE</code>, then the service tries to fetch a standard profile\
              \ and associate this object with the profile. If it is set to <code>TRUE</code>,\
              \ and if no match is found, then the service creates a new standard\
              \ profile."
        SourceLastUpdatedTimestampFormat:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: 'The format of your <code>sourceLastUpdatedTimestamp</code>
              that was previously set up. '
        Fields:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          - description: A map of the name and ObjectType field.
        Keys:
          allOf:
          - $ref: '#/components/schemas/KeyMap'
          - description: A list of unique keys that can be used to map data to the
              profile.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - Description
      title: PutProfileObjectTypeRequest
      type: object
    Value:
      maximum: 366
      minimum: 1
      type: integer
    Unit:
      enum:
      - DAYS
      title: Unit
      type: string
    RuleBasedMatchingStatus:
      enum:
      - PENDING
      - IN_PROGRESS
      - ACTIVE
      title: RuleBasedMatchingStatus
      type: string
    s3BucketName:
      maxLength: 63
      minLength: 3
      pattern: "^[a-z0-9.-]+$"
      type: string
    s3KeyNameCustomerOutputConfig:
      maxLength: 800
      minLength: 1
      pattern: .*
      type: string
    s3KeyName:
      maxLength: 1024
      minLength: 1
      pattern: .*
      type: string
    S3SourceProperties:
      description: The properties that are applied when Amazon S3 is being used as
        the flow source.
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: The Amazon S3 bucket name where the source files are stored.
          title: BucketName
        BucketPrefix:
          allOf:
          - $ref: '#/components/schemas/BucketPrefix'
          - description: The object key for the Amazon S3 bucket in which the source
              files are stored.
          title: BucketPrefix
      required:
      - BucketName
      title: S3SourceProperties
      type: object
    SalesforceSourceProperties:
      description: The properties that are applied when Salesforce is being used as
        a source.
      properties:
        Object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: The object specified in the Salesforce flow source.
          title: Object
        EnableDynamicFieldUpdate:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: The flag that enables dynamic fetching of new (recently added)
              fields in the Salesforce objects while running a flow.
          title: EnableDynamicFieldUpdate
        IncludeDeletedRecords:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: Indicates whether Amazon AppFlow includes deleted files in
              the flow run.
          title: IncludeDeletedRecords
      required:
      - Object
      title: SalesforceSourceProperties
      type: object
    ScheduleExpression:
      maxLength: 256
      pattern: .*
      type: string
    ScheduleOffset:
      maximum: 36000
      minimum: 0
      type: integer
    Timezone:
      maxLength: 256
      pattern: .*
      type: string
    ScheduledTriggerProperties:
      description: "Specifies the configuration details of a scheduled-trigger flow\
        \ that you define. Currently, these settings only apply to the scheduled-trigger\
        \ type."
      properties:
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          - description: "The scheduling expression that determines the rate at which\
              \ the schedule will run, for example rate (5 minutes)."
          title: ScheduleExpression
        DataPullMode:
          allOf:
          - $ref: '#/components/schemas/DataPullMode'
          - description: Specifies whether a scheduled flow has an incremental data
              transfer or a complete data transfer for each flow run.
          title: DataPullMode
        ScheduleStartTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: Specifies the scheduled start time for a scheduled-trigger
              flow.
          title: ScheduleStartTime
        ScheduleEndTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: Specifies the scheduled end time for a scheduled-trigger
              flow.
          title: ScheduleEndTime
        Timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          - description: "Specifies the time zone used when referring to the date\
              \ and time of a scheduled-triggered flow, such as America/New_York."
          title: Timezone
        ScheduleOffset:
          allOf:
          - $ref: '#/components/schemas/ScheduleOffset'
          - description: Specifies the optional offset that is added to the time interval
              for a schedule-triggered flow.
          title: ScheduleOffset
        FirstExecutionFrom:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: Specifies the date range for the records to import from the
              connector in the first flow run.
          title: FirstExecutionFrom
      required:
      - ScheduleExpression
      title: ScheduledTriggerProperties
      type: object
    additionalSearchKeysList:
      items:
        $ref: '#/components/schemas/AdditionalSearchKey'
      maxItems: 4
      minItems: 1
      type: array
    logicalOperator:
      enum:
      - AND
      - OR
      title: logicalOperator
      type: string
    SearchProfilesRequest:
      example:
        KeyName: ""
        LogicalOperator: ""
        Values: ""
        AdditionalSearchKeys: ""
      properties:
        KeyName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: "A searchable identifier of a customer profile. The predefined\
              \ keys you can use to search include: _account, _profileId, _assetId,\
              \ _caseId, _orderId, _fullName, _phone, _email, _ctrContactId, _marketoLeadId,\
              \ _salesforceAccountId, _salesforceContactId, _salesforceAssetId, _zendeskUserId,\
              \ _zendeskExternalId, _zendeskTicketId, _serviceNowSystemId, _serviceNowIncidentId,\
              \ _segmentUserId, _shopifyCustomerId, _shopifyOrderId."
        Values:
          allOf:
          - $ref: '#/components/schemas/requestValueList'
          - description: A list of key values.
        AdditionalSearchKeys:
          allOf:
          - $ref: '#/components/schemas/additionalSearchKeysList'
          - description: "A list of <code>AdditionalSearchKey</code> objects that\
              \ are each searchable identifiers of a profile. Each <code>AdditionalSearchKey</code>\
              \ object contains a <code>KeyName</code> and a list of <code>Values</code>\
              \ associated with that specific key (i.e., a key-value(s) pair). These\
              \ additional search keys will be used in conjunction with the <code>LogicalOperator</code>\
              \ and the required <code>KeyName</code> and <code>Values</code> parameters\
              \ to search for profiles that satisfy the search criteria. "
        LogicalOperator:
          allOf:
          - $ref: '#/components/schemas/logicalOperator'
          - description: <p>Relationship between all specified search keys that will
              be used to search for profiles. This includes the required <code>KeyName</code>
              and <code>Values</code> parameters as well as any key-value(s) pairs
              specified in the <code>AdditionalSearchKeys</code> list.</p> <p>This
              parameter influences which profiles will be returned in the response
              in the following manner:</p> <ul> <li> <p> <code>AND</code> - The response
              only includes profiles that match all of the search keys.</p> </li>
              <li> <p> <code>OR</code> - The response includes profiles that match
              at least one of the search keys.</p> </li> </ul> <p>The <code>OR</code>
              relationship is the default behavior if this parameter is not included
              in the request.</p>
      required:
      - KeyName
      - Values
      title: SearchProfilesRequest
      type: object
    ServiceNowSourceProperties:
      description: The properties that are applied when ServiceNow is being used as
        a source.
      properties:
        Object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: The object specified in the ServiceNow flow source.
          title: Object
      required:
      - Object
      title: ServiceNowSourceProperties
      type: object
    ZendeskSourceProperties:
      description: The properties that are applied when using Zendesk as a flow source.
      properties:
        Object:
          allOf:
          - $ref: '#/components/schemas/Object'
          - description: The object specified in the Zendesk flow source.
          title: Object
      required:
      - Object
      title: ZendeskSourceProperties
      type: object
    SourceConnectorProperties:
      description: "Specifies the information that is required to query a particular\
        \ Amazon AppFlow connector. Customer Profiles supports Salesforce, Zendesk,\
        \ Marketo, ServiceNow and Amazon S3."
      properties:
        Marketo:
          $ref: '#/components/schemas/SourceConnectorProperties_Marketo'
        S3:
          $ref: '#/components/schemas/SourceConnectorProperties_S3'
        Salesforce:
          $ref: '#/components/schemas/SourceConnectorProperties_Salesforce'
        ServiceNow:
          $ref: '#/components/schemas/SourceConnectorProperties_ServiceNow'
        Zendesk:
          $ref: '#/components/schemas/SourceConnectorProperties_Zendesk'
      title: SourceConnectorProperties
      type: object
    SourceFields:
      items:
        $ref: '#/components/schemas/stringTo2048'
      type: array
    StandardIdentifier:
      enum:
      - PROFILE
      - ASSET
      - CASE
      - UNIQUE
      - SECONDARY
      - LOOKUP_ONLY
      - NEW_ONLY
      - ORDER
      title: StandardIdentifier
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - tags
      title: TagResourceRequest
      type: object
    TaskPropertiesMap:
      additionalProperties:
        $ref: '#/components/schemas/Property'
      type: object
    TaskType:
      enum:
      - Arithmetic
      - Filter
      - Map
      - Mask
      - Merge
      - Truncate
      - Validate
      title: TaskType
      type: string
    Task:
      description: A class for modeling different type of tasks. Task implementation
        varies based on the TaskType.
      properties:
        ConnectorOperator:
          $ref: '#/components/schemas/Task_ConnectorOperator'
        DestinationField:
          allOf:
          - $ref: '#/components/schemas/DestinationField'
          - description: "A field in a destination connector, or a field value against\
              \ which Amazon AppFlow validates a source field."
          title: DestinationField
        SourceFields:
          allOf:
          - $ref: '#/components/schemas/SourceFields'
          - description: The source fields to which a particular task is applied.
          title: SourceFields
        TaskProperties:
          allOf:
          - $ref: '#/components/schemas/TaskPropertiesMap'
          - description: A map used to store task-related information. The service
              looks for particular information based on the TaskType.
          title: TaskProperties
        TaskType:
          allOf:
          - $ref: '#/components/schemas/TaskType'
          - description: Specifies the particular task implementation that Amazon
              AppFlow performs.
          title: TaskType
      required:
      - SourceFields
      - TaskType
      title: Task
      type: object
    TriggerType:
      enum:
      - Scheduled
      - Event
      - OnDemand
      title: TriggerType
      type: string
    TriggerProperties:
      description: "Specifies the configuration details that control the trigger for\
        \ a flow. Currently, these settings only apply to the Scheduled trigger type."
      properties:
        Scheduled:
          $ref: '#/components/schemas/TriggerProperties_Scheduled'
      title: TriggerProperties
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateAddress:
      description: Updates associated with the address properties of a customer profile.
      properties:
        Address1:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The first line of a customer address.
          title: Address1
        Address2:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The second line of a customer address.
          title: Address2
        Address3:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The third line of a customer address.
          title: Address3
        Address4:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The fourth line of a customer address.
          title: Address4
        City:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The city in which a customer lives.
          title: City
        County:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The county in which a customer lives.
          title: County
        State:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The state in which a customer lives.
          title: State
        Province:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The province in which a customer lives.
          title: Province
        Country:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The country in which a customer lives.
          title: Country
        PostalCode:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The postal code of a customer address.
          title: PostalCode
      title: UpdateAddress
      type: object
    UpdateAttributes:
      additionalProperties:
        $ref: '#/components/schemas/string0To255'
      type: object
    UpdateCalculatedAttributeDefinitionRequest:
      example:
        Description: ""
        DisplayName: ""
        Conditions:
          Range:
            Value: ""
            Unit: ""
          ObjectCount: ""
          Threshold:
            Operator: ""
            Value: ""
      properties:
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/displayName'
          - description: The display name of the calculated attribute.
        Description:
          allOf:
          - $ref: '#/components/schemas/text'
          - description: The description of the calculated attribute.
        Conditions:
          $ref: '#/components/schemas/CreateCalculatedAttributeDefinitionResponse_Conditions'
      title: UpdateCalculatedAttributeDefinitionRequest
      type: object
    UpdateDomainRequest:
      example:
        Matching:
          AutoMerging:
            Consolidation:
              MatchingAttributesList: ""
            Enabled: ""
            ConflictResolution:
              ConflictResolvingModel: ""
              SourceName: ""
            MinAllowedConfidenceScoreForMerging: ""
          JobSchedule:
            DayOfTheWeek: ""
            Time: ""
          Enabled: ""
          ExportingConfig:
            S3Exporting:
              S3BucketName: ""
              S3KeyName: ""
        DefaultExpirationDays: ""
        DeadLetterQueueUrl: ""
        DefaultEncryptionKey: ""
        RuleBasedMatching:
          MaxAllowedRuleLevelForMerging: ""
          Enabled: ""
          MatchingRules: ""
          AttributeTypesSelector:
            Address: ""
            AttributeMatchingModel: ""
            PhoneNumber: ""
            EmailAddress: ""
          ConflictResolution:
            ConflictResolvingModel: ""
            SourceName: ""
          ExportingConfig:
            S3Exporting:
              S3BucketName: ""
              S3KeyName: ""
          MaxAllowedRuleLevelForMatching: ""
        Tags: ""
      properties:
        DefaultExpirationDays:
          allOf:
          - $ref: '#/components/schemas/expirationDaysInteger'
          - description: The default number of days until the data within the domain
              expires.
        DefaultEncryptionKey:
          allOf:
          - $ref: '#/components/schemas/encryptionKey'
          - description: "The default encryption key, which is an AWS managed key,\
              \ is used when no specific type of encryption key is specified. It is\
              \ used to encrypt all data before it is placed in permanent or semi-permanent\
              \ storage. If specified as an empty string, it will clear any existing\
              \ value."
        DeadLetterQueueUrl:
          allOf:
          - $ref: '#/components/schemas/sqsQueueUrl'
          - description: "The URL of the SQS dead letter queue, which is used for\
              \ reporting errors associated with ingesting data from third party applications.\
              \ If specified as an empty string, it will clear any existing value.\
              \ You must set up a policy on the DeadLetterQueue for the SendMessage\
              \ operation to enable Amazon Connect Customer Profiles to send messages\
              \ to the DeadLetterQueue."
        Matching:
          $ref: '#/components/schemas/CreateDomainRequest_Matching'
        RuleBasedMatching:
          $ref: '#/components/schemas/UpdateDomainRequest_RuleBasedMatching'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      title: UpdateDomainRequest
      type: object
    string0To1000:
      maxLength: 1000
      minLength: 0
      type: string
    UpdateProfileRequest:
      example:
        ProfileId: ""
        AdditionalInformation: ""
        BusinessName: ""
        Address:
          Address4: ""
          State: ""
          Address2: ""
          Address3: ""
          Country: ""
          PostalCode: ""
          Address1: ""
          City: ""
          County: ""
          Province: ""
        FirstName: ""
        PersonalEmailAddress: ""
        BusinessEmailAddress: ""
        Attributes: ""
        MailingAddress:
          Address4: ""
          State: ""
          Address2: ""
          Address3: ""
          Country: ""
          PostalCode: ""
          Address1: ""
          City: ""
          County: ""
          Province: ""
        Gender: ""
        BusinessPhoneNumber: ""
        MiddleName: ""
        MobilePhoneNumber: ""
        EmailAddress: ""
        AccountNumber: ""
        BillingAddress:
          Address4: ""
          State: ""
          Address2: ""
          Address3: ""
          Country: ""
          PostalCode: ""
          Address1: ""
          City: ""
          County: ""
          Province: ""
        GenderString: ""
        HomePhoneNumber: ""
        ShippingAddress:
          Address4: ""
          State: ""
          Address2: ""
          Address3: ""
          Country: ""
          PostalCode: ""
          Address1: ""
          City: ""
          County: ""
          Province: ""
        PhoneNumber: ""
        LastName: ""
        PartyType: ""
        PartyTypeString: ""
        BirthDate: ""
      properties:
        ProfileId:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: The unique identifier of a customer profile.
        AdditionalInformation:
          allOf:
          - $ref: '#/components/schemas/string0To1000'
          - description: Any additional information relevant to the customer’s profile.
        AccountNumber:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: A unique account number that you have given to the customer.
        PartyType:
          allOf:
          - $ref: '#/components/schemas/PartyType'
          - description: The type of profile used to describe the customer.
        BusinessName:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The name of the customer’s business.
        FirstName:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The customer’s first name.
        MiddleName:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The customer’s middle name.
        LastName:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The customer’s last name.
        BirthDate:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: 'The customer’s birth date. '
        Gender:
          allOf:
          - $ref: '#/components/schemas/Gender'
          - description: 'The gender with which the customer identifies. '
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: "The customer’s phone number, which has not been specified\
              \ as a mobile, home, or business number. "
        MobilePhoneNumber:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The customer’s mobile phone number.
        HomePhoneNumber:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The customer’s home phone number.
        BusinessPhoneNumber:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The customer’s business phone number.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: "The customer’s email address, which has not been specified\
              \ as a personal or business address. "
        PersonalEmailAddress:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The customer’s personal email address.
        BusinessEmailAddress:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The customer’s business email address.
        Address:
          $ref: '#/components/schemas/UpdateProfileRequest_Address'
        ShippingAddress:
          $ref: '#/components/schemas/UpdateProfileRequest_ShippingAddress'
        MailingAddress:
          $ref: '#/components/schemas/UpdateProfileRequest_MailingAddress'
        BillingAddress:
          $ref: '#/components/schemas/UpdateProfileRequest_BillingAddress'
        Attributes:
          allOf:
          - $ref: '#/components/schemas/UpdateAttributes'
          - description: A key value pair of attributes of a customer profile.
        PartyTypeString:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: An alternative to <code>PartyType</code> which accepts any
              string as input.
        GenderString:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: An alternative to <code>Gender</code> which accepts any string
              as input.
      required:
      - ProfileId
      title: UpdateProfileRequest
      type: object
    WorkflowStepItem:
      description: List containing steps in workflow.
      properties:
        AppflowIntegration:
          $ref: '#/components/schemas/WorkflowStepItem_AppflowIntegration'
      title: WorkflowStepItem
      type: object
    AddProfileKey_request:
      properties:
        ProfileId:
          description: The unique identifier of a customer profile.
          pattern: "[a-f0-9]{32}"
          title: ProfileId
          type: string
        KeyName:
          description: "A searchable identifier of a customer profile. The predefined\
            \ keys you can use include: _account, _profileId, _assetId, _caseId, _orderId,\
            \ _fullName, _phone, _email, _ctrContactId, _marketoLeadId, _salesforceAccountId,\
            \ _salesforceContactId, _salesforceAssetId, _zendeskUserId, _zendeskExternalId,\
            \ _zendeskTicketId, _serviceNowSystemId, _serviceNowIncidentId, _segmentUserId,\
            \ _shopifyCustomerId, _shopifyOrderId."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          title: KeyName
          type: string
        Values:
          description: A list of key values.
          items:
            $ref: '#/components/schemas/string1To255'
          title: Values
          type: array
      required:
      - KeyName
      - ProfileId
      - Values
      title: AddProfileKey_request
      type: object
    UpdateCalculatedAttributeDefinition_request_Conditions_Range:
      allOf:
      - $ref: '#/components/schemas/Range'
      - description: The relative time period over which data is included in the aggregation.
      example:
        Value: ""
        Unit: ""
      title: UpdateCalculatedAttributeDefinition_request_Conditions_Range
    UpdateCalculatedAttributeDefinition_request_Conditions_Threshold:
      allOf:
      - $ref: '#/components/schemas/Threshold'
      - description: The threshold for the calculated attribute.
      example:
        Operator: ""
        Value: ""
      title: UpdateCalculatedAttributeDefinition_request_Conditions_Threshold
    UpdateCalculatedAttributeDefinition_request_Conditions:
      description: "The conditions including range, object count, and threshold for\
        \ the calculated attribute."
      properties:
        Range:
          $ref: '#/components/schemas/UpdateCalculatedAttributeDefinition_request_Conditions_Range'
        ObjectCount:
          allOf:
          - $ref: '#/components/schemas/ObjectCount'
          - description: The number of profile objects used for the calculated attribute.
          title: ObjectCount
        Threshold:
          $ref: '#/components/schemas/UpdateCalculatedAttributeDefinition_request_Conditions_Threshold'
      title: UpdateCalculatedAttributeDefinition_request_Conditions
      type: object
    UpdateCalculatedAttributeDefinition_request:
      properties:
        DisplayName:
          description: The display name of the calculated attribute.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z_][a-zA-Z_0-9-\\s]*$"
          title: DisplayName
          type: string
        Description:
          description: The description of the calculated attribute.
          maxLength: 1000
          minLength: 1
          type: string
        Conditions:
          $ref: '#/components/schemas/UpdateCalculatedAttributeDefinition_request_Conditions'
      title: UpdateCalculatedAttributeDefinition_request
      type: object
    CreateCalculatedAttributeDefinition_request_AttributeDetails:
      description: Mathematical expression and a list of attribute items specified
        in that expression.
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeList'
          - description: A list of attribute items specified in the mathematical expression.
          title: Attributes
        Expression:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: "Mathematical expression that is performed on attribute items\
              \ provided in the attribute list. Each element in the expression should\
              \ follow the structure of \\\"{ObjectTypeName.AttributeName}\\\"."
          title: Expression
      title: CreateCalculatedAttributeDefinition_request_AttributeDetails
      type: object
    CreateCalculatedAttributeDefinition_request:
      properties:
        DisplayName:
          description: The display name of the calculated attribute.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z_][a-zA-Z_0-9-\\s]*$"
          title: DisplayName
          type: string
        Description:
          description: The description of the calculated attribute.
          maxLength: 1000
          minLength: 1
          type: string
        AttributeDetails:
          $ref: '#/components/schemas/CreateCalculatedAttributeDefinition_request_AttributeDetails'
        Conditions:
          $ref: '#/components/schemas/UpdateCalculatedAttributeDefinition_request_Conditions'
        Statistic:
          description: The aggregation operation to perform for the calculated attribute.
          enum:
          - FIRST_OCCURRENCE
          - LAST_OCCURRENCE
          - COUNT
          - SUM
          - MINIMUM
          - MAXIMUM
          - AVERAGE
          - MAX_OCCURRENCE
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          maxProperties: 50
          minProperties: 1
          type: object
      required:
      - AttributeDetails
      - Statistic
      title: CreateCalculatedAttributeDefinition_request
      type: object
    UpdateDomain_request_Matching_JobSchedule:
      allOf:
      - $ref: '#/components/schemas/JobSchedule'
      - description: The day and time when do you want to start the Identity Resolution
          Job every week.
      example:
        DayOfTheWeek: ""
        Time: ""
      title: UpdateDomain_request_Matching_JobSchedule
    UpdateDomain_request_Matching_AutoMerging:
      allOf:
      - $ref: '#/components/schemas/AutoMerging'
      - description: Configuration information about the auto-merging process.
      example:
        Consolidation:
          MatchingAttributesList: ""
        Enabled: ""
        ConflictResolution:
          ConflictResolvingModel: ""
          SourceName: ""
        MinAllowedConfidenceScoreForMerging: ""
      title: UpdateDomain_request_Matching_AutoMerging
    UpdateDomain_request_Matching_ExportingConfig:
      allOf:
      - $ref: '#/components/schemas/ExportingConfig'
      - description: "Configuration information for exporting Identity Resolution\
          \ results, for example, to an S3 bucket."
      example:
        S3Exporting:
          S3BucketName: ""
          S3KeyName: ""
      title: UpdateDomain_request_Matching_ExportingConfig
    UpdateDomain_request_Matching:
      description: The flag that enables the matching process of duplicate profiles.
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/optionalBoolean'
          - description: The flag that enables the matching process of duplicate profiles.
          title: Enabled
        JobSchedule:
          $ref: '#/components/schemas/UpdateDomain_request_Matching_JobSchedule'
        AutoMerging:
          $ref: '#/components/schemas/UpdateDomain_request_Matching_AutoMerging'
        ExportingConfig:
          $ref: '#/components/schemas/UpdateDomain_request_Matching_ExportingConfig'
      title: UpdateDomain_request_Matching
      type: object
    UpdateDomain_request_RuleBasedMatching_AttributeTypesSelector:
      allOf:
      - $ref: '#/components/schemas/AttributeTypesSelector'
      - description: Configures information about the <code>AttributeTypesSelector</code>
          where the rule-based identity resolution uses to match profiles.
      example:
        Address: ""
        AttributeMatchingModel: ""
        PhoneNumber: ""
        EmailAddress: ""
      title: UpdateDomain_request_RuleBasedMatching_AttributeTypesSelector
    UpdateDomain_request_RuleBasedMatching:
      description: The request to enable the rule-based matching.
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/optionalBoolean'
          - description: The flag that enables the rule-based matching process of
              duplicate profiles.
          title: Enabled
        MatchingRules:
          allOf:
          - $ref: '#/components/schemas/MatchingRules'
          - description: Configures how the rule-based matching process should match
              profiles. You can have up to 15 <code>MatchingRule</code> in the <code>MatchingRules</code>.
          title: MatchingRules
        MaxAllowedRuleLevelForMerging:
          allOf:
          - $ref: '#/components/schemas/MaxAllowedRuleLevelForMerging'
          - description: ' <a href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_MatchingRule.html">MatchingRule</a> '
          title: MaxAllowedRuleLevelForMerging
        MaxAllowedRuleLevelForMatching:
          allOf:
          - $ref: '#/components/schemas/MaxAllowedRuleLevelForMatching'
          - description: Indicates the maximum allowed rule level.
          title: MaxAllowedRuleLevelForMatching
        AttributeTypesSelector:
          $ref: '#/components/schemas/UpdateDomain_request_RuleBasedMatching_AttributeTypesSelector'
        ConflictResolution:
          $ref: '#/components/schemas/ConflictResolution'
        ExportingConfig:
          $ref: '#/components/schemas/ExportingConfig'
      title: UpdateDomain_request_RuleBasedMatching
      type: object
    UpdateDomain_request:
      properties:
        DefaultExpirationDays:
          description: The default number of days until the data within the domain
            expires.
          maximum: 1098
          minimum: 1
          title: DefaultExpirationDays
          type: integer
        DefaultEncryptionKey:
          description: "The default encryption key, which is an AWS managed key, is\
            \ used when no specific type of encryption key is specified. It is used\
            \ to encrypt all data before it is placed in permanent or semi-permanent\
            \ storage. If specified as an empty string, it will clear any existing\
            \ value."
          maxLength: 255
          minLength: 0
          title: DefaultEncryptionKey
          type: string
        DeadLetterQueueUrl:
          description: "The URL of the SQS dead letter queue, which is used for reporting\
            \ errors associated with ingesting data from third party applications.\
            \ If specified as an empty string, it will clear any existing value. You\
            \ must set up a policy on the DeadLetterQueue for the SendMessage operation\
            \ to enable Amazon Connect Customer Profiles to send messages to the DeadLetterQueue."
          maxLength: 255
          minLength: 0
          title: DeadLetterQueueUrl
          type: string
        Matching:
          $ref: '#/components/schemas/UpdateDomain_request_Matching'
        RuleBasedMatching:
          $ref: '#/components/schemas/UpdateDomain_request_RuleBasedMatching'
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          maxProperties: 50
          minProperties: 1
          title: Tags
          type: object
      title: UpdateDomain_request
      type: object
    CreateDomain_request:
      properties:
        DefaultExpirationDays:
          description: The default number of days until the data within the domain
            expires.
          maximum: 1098
          minimum: 1
          title: DefaultExpirationDays
          type: integer
        DefaultEncryptionKey:
          description: "The default encryption key, which is an AWS managed key, is\
            \ used when no specific type of encryption key is specified. It is used\
            \ to encrypt all data before it is placed in permanent or semi-permanent\
            \ storage."
          maxLength: 255
          minLength: 0
          title: DefaultEncryptionKey
          type: string
        DeadLetterQueueUrl:
          description: "The URL of the SQS dead letter queue, which is used for reporting\
            \ errors associated with ingesting data from third party applications.\
            \ You must set up a policy on the DeadLetterQueue for the SendMessage\
            \ operation to enable Amazon Connect Customer Profiles to send messages\
            \ to the DeadLetterQueue."
          maxLength: 255
          minLength: 0
          title: DeadLetterQueueUrl
          type: string
        Matching:
          $ref: '#/components/schemas/UpdateDomain_request_Matching'
        RuleBasedMatching:
          $ref: '#/components/schemas/UpdateDomain_request_RuleBasedMatching'
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          maxProperties: 50
          minProperties: 1
          title: Tags
          type: object
      required:
      - DefaultExpirationDays
      title: CreateDomain_request
      type: object
    CreateEventStream_request:
      properties:
        Uri:
          description: "The StreamARN of the destination to deliver profile events\
            \ to. For example, arn:aws:kinesis:region:account-id:stream/stream-name"
          maxLength: 255
          minLength: 1
          title: Uri
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          maxProperties: 50
          minProperties: 1
          title: Tags
          type: object
      required:
      - Uri
      title: CreateEventStream_request
      type: object
    CreateIntegrationWorkflow_request_IntegrationConfig_AppflowIntegration:
      allOf:
      - $ref: '#/components/schemas/AppflowIntegration'
      - description: Configuration data for <code>APPFLOW_INTEGRATION</code> workflow
          type.
      example:
        Batches: ""
        FlowDefinition:
          Description: ""
          Tasks: ""
          FlowName: ""
          TriggerConfig:
            TriggerType: ""
            TriggerProperties:
              Scheduled:
                ScheduleEndTime: ""
                Timezone: ""
                ScheduleExpression: ""
                FirstExecutionFrom: ""
                ScheduleStartTime: ""
                DataPullMode: ""
                ScheduleOffset: ""
          SourceFlowConfig:
            ConnectorProfileName: ""
            SourceConnectorProperties:
              S3:
                BucketName: ""
                BucketPrefix: ""
              ServiceNow:
                Object: ""
              Zendesk:
                Object: ""
              Marketo:
                Object: ""
              Salesforce:
                IncludeDeletedRecords: ""
                Object: ""
                EnableDynamicFieldUpdate: ""
            ConnectorType: ""
            IncrementalPullConfig:
              DatetimeTypeFieldName: ""
          KmsArn: ""
      title: CreateIntegrationWorkflow_request_IntegrationConfig_AppflowIntegration
    CreateIntegrationWorkflow_request_IntegrationConfig:
      description: Configuration data for integration workflow.
      properties:
        AppflowIntegration:
          $ref: '#/components/schemas/CreateIntegrationWorkflow_request_IntegrationConfig_AppflowIntegration'
      title: CreateIntegrationWorkflow_request_IntegrationConfig
      type: object
    CreateIntegrationWorkflow_request:
      properties:
        WorkflowType:
          description: The type of workflow. The only supported value is APPFLOW_INTEGRATION.
          enum:
          - APPFLOW_INTEGRATION
          title: WorkflowType
          type: string
        IntegrationConfig:
          $ref: '#/components/schemas/CreateIntegrationWorkflow_request_IntegrationConfig'
        ObjectTypeName:
          description: The name of the profile object type.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z_][a-zA-Z_0-9-]*$"
          title: ObjectTypeName
          type: string
        RoleArn:
          description: The Amazon Resource Name (ARN) of the IAM role. Customer Profiles
            assumes this role to create resources on your behalf as part of workflow
            execution.
          maxLength: 512
          pattern: "arn:aws:iam:.*:[0-9]+:.*"
          title: RoleArn
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          maxProperties: 50
          minProperties: 1
          title: Tags
          type: object
      required:
      - IntegrationConfig
      - ObjectTypeName
      - RoleArn
      - WorkflowType
      title: CreateIntegrationWorkflow_request
      type: object
    UpdateProfile_request_Address:
      description: Updates associated with the address properties of a customer profile.
      properties:
        Address1:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The first line of a customer address.
          title: Address1
        Address2:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The second line of a customer address.
          title: Address2
        Address3:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The third line of a customer address.
          title: Address3
        Address4:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The fourth line of a customer address.
          title: Address4
        City:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The city in which a customer lives.
          title: City
        County:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The county in which a customer lives.
          title: County
        State:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The state in which a customer lives.
          title: State
        Province:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The province in which a customer lives.
          title: Province
        Country:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The country in which a customer lives.
          title: Country
        PostalCode:
          allOf:
          - $ref: '#/components/schemas/string0To255'
          - description: The postal code of a customer address.
          title: PostalCode
      title: UpdateProfile_request_Address
      type: object
    UpdateProfile_request:
      properties:
        ProfileId:
          description: The unique identifier of a customer profile.
          pattern: "[a-f0-9]{32}"
          title: ProfileId
          type: string
        AdditionalInformation:
          description: Any additional information relevant to the customer’s profile.
          maxLength: 1000
          minLength: 0
          title: AdditionalInformation
          type: string
        AccountNumber:
          description: A unique account number that you have given to the customer.
          maxLength: 255
          minLength: 0
          title: AccountNumber
          type: string
        PartyType:
          deprecated: true
          description: The type of profile used to describe the customer.
          enum:
          - INDIVIDUAL
          - BUSINESS
          - OTHER
          title: PartyType
          type: string
        BusinessName:
          description: The name of the customer’s business.
          maxLength: 255
          minLength: 0
          title: BusinessName
          type: string
        FirstName:
          description: The customer’s first name.
          maxLength: 255
          minLength: 0
          title: FirstName
          type: string
        MiddleName:
          description: The customer’s middle name.
          maxLength: 255
          minLength: 0
          title: MiddleName
          type: string
        LastName:
          description: The customer’s last name.
          maxLength: 255
          minLength: 0
          title: LastName
          type: string
        BirthDate:
          description: 'The customer’s birth date. '
          maxLength: 255
          minLength: 0
          title: BirthDate
          type: string
        Gender:
          deprecated: true
          description: 'The gender with which the customer identifies. '
          enum:
          - MALE
          - FEMALE
          - UNSPECIFIED
          title: Gender
          type: string
        PhoneNumber:
          description: "The customer’s phone number, which has not been specified\
            \ as a mobile, home, or business number. "
          maxLength: 255
          minLength: 0
          title: PhoneNumber
          type: string
        MobilePhoneNumber:
          description: The customer’s mobile phone number.
          maxLength: 255
          minLength: 0
          title: MobilePhoneNumber
          type: string
        HomePhoneNumber:
          description: The customer’s home phone number.
          maxLength: 255
          minLength: 0
          title: HomePhoneNumber
          type: string
        BusinessPhoneNumber:
          description: The customer’s business phone number.
          maxLength: 255
          minLength: 0
          title: BusinessPhoneNumber
          type: string
        EmailAddress:
          description: "The customer’s email address, which has not been specified\
            \ as a personal or business address. "
          maxLength: 255
          minLength: 0
          title: EmailAddress
          type: string
        PersonalEmailAddress:
          description: The customer’s personal email address.
          maxLength: 255
          minLength: 0
          title: PersonalEmailAddress
          type: string
        BusinessEmailAddress:
          description: The customer’s business email address.
          maxLength: 255
          minLength: 0
          title: BusinessEmailAddress
          type: string
        Address:
          $ref: '#/components/schemas/UpdateProfile_request_Address'
        ShippingAddress:
          $ref: '#/components/schemas/UpdateProfile_request_Address'
        MailingAddress:
          $ref: '#/components/schemas/UpdateProfile_request_Address'
        BillingAddress:
          $ref: '#/components/schemas/UpdateProfile_request_Address'
        Attributes:
          additionalProperties:
            $ref: '#/components/schemas/string0To255'
          description: A key value pair of attributes of a customer profile.
          title: Attributes
          type: object
        PartyTypeString:
          description: An alternative to <code>PartyType</code> which accepts any
            string as input.
          maxLength: 255
          minLength: 0
          title: PartyTypeString
          type: string
        GenderString:
          description: An alternative to <code>Gender</code> which accepts any string
            as input.
          maxLength: 255
          minLength: 0
          title: GenderString
          type: string
      required:
      - ProfileId
      title: UpdateProfile_request
      type: object
    CreateProfile_request_Address:
      description: "A generic address associated with the customer that is not mailing,\
        \ shipping, or billing."
      properties:
        Address1:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The first line of a customer address.
          title: Address1
        Address2:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The second line of a customer address.
          title: Address2
        Address3:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The third line of a customer address.
          title: Address3
        Address4:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The fourth line of a customer address.
          title: Address4
        City:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The city in which a customer lives.
          title: City
        County:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The county in which a customer lives.
          title: County
        State:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The state in which a customer lives.
          title: State
        Province:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The province in which a customer lives.
          title: Province
        Country:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The country in which a customer lives.
          title: Country
        PostalCode:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The postal code of a customer address.
          title: PostalCode
      title: CreateProfile_request_Address
      type: object
    CreateProfile_request:
      properties:
        AccountNumber:
          description: A unique account number that you have given to the customer.
          maxLength: 255
          minLength: 1
          title: AccountNumber
          type: string
        AdditionalInformation:
          description: Any additional information relevant to the customer’s profile.
          maxLength: 1000
          minLength: 1
          title: AdditionalInformation
          type: string
        PartyType:
          deprecated: true
          description: The type of profile used to describe the customer.
          enum:
          - INDIVIDUAL
          - BUSINESS
          - OTHER
          title: PartyType
          type: string
        BusinessName:
          description: The name of the customer’s business.
          maxLength: 255
          minLength: 1
          title: BusinessName
          type: string
        FirstName:
          description: The customer’s first name.
          maxLength: 255
          minLength: 1
          title: FirstName
          type: string
        MiddleName:
          description: The customer’s middle name.
          maxLength: 255
          minLength: 1
          title: MiddleName
          type: string
        LastName:
          description: The customer’s last name.
          maxLength: 255
          minLength: 1
          title: LastName
          type: string
        BirthDate:
          description: 'The customer’s birth date. '
          maxLength: 255
          minLength: 1
          title: BirthDate
          type: string
        Gender:
          deprecated: true
          description: 'The gender with which the customer identifies. '
          enum:
          - MALE
          - FEMALE
          - UNSPECIFIED
          title: Gender
          type: string
        PhoneNumber:
          description: "The customer’s phone number, which has not been specified\
            \ as a mobile, home, or business number. "
          maxLength: 255
          minLength: 1
          title: PhoneNumber
          type: string
        MobilePhoneNumber:
          description: The customer’s mobile phone number.
          maxLength: 255
          minLength: 1
          title: MobilePhoneNumber
          type: string
        HomePhoneNumber:
          description: The customer’s home phone number.
          maxLength: 255
          minLength: 1
          title: HomePhoneNumber
          type: string
        BusinessPhoneNumber:
          description: The customer’s business phone number.
          maxLength: 255
          minLength: 1
          title: BusinessPhoneNumber
          type: string
        EmailAddress:
          description: "The customer’s email address, which has not been specified\
            \ as a personal or business address. "
          maxLength: 255
          minLength: 1
          title: EmailAddress
          type: string
        PersonalEmailAddress:
          description: The customer’s personal email address.
          maxLength: 255
          minLength: 1
          title: PersonalEmailAddress
          type: string
        BusinessEmailAddress:
          description: The customer’s business email address.
          maxLength: 255
          minLength: 1
          title: BusinessEmailAddress
          type: string
        Address:
          $ref: '#/components/schemas/CreateProfile_request_Address'
        ShippingAddress:
          $ref: '#/components/schemas/CreateProfile_request_Address'
        MailingAddress:
          $ref: '#/components/schemas/CreateProfile_request_Address'
        BillingAddress:
          $ref: '#/components/schemas/CreateProfile_request_Address'
        Attributes:
          additionalProperties:
            $ref: '#/components/schemas/string1To255'
          description: A key value pair of attributes of a customer profile.
          title: Attributes
          type: object
        PartyTypeString:
          description: An alternative to <code>PartyType</code> which accepts any
            string as input.
          maxLength: 255
          minLength: 1
          title: PartyTypeString
          type: string
        GenderString:
          description: An alternative to <code>Gender</code> which accepts any string
            as input.
          maxLength: 255
          minLength: 1
          title: GenderString
          type: string
      title: CreateProfile_request
      type: object
    DeleteIntegration_request:
      properties:
        Uri:
          description: The URI of the S3 bucket or any other type of data source.
          maxLength: 255
          minLength: 1
          title: Uri
          type: string
      required:
      - Uri
      title: DeleteIntegration_request
      type: object
    DeleteProfile_request:
      properties:
        ProfileId:
          description: The unique identifier of a customer profile.
          pattern: "[a-f0-9]{32}"
          title: ProfileId
          type: string
      required:
      - ProfileId
      title: DeleteProfile_request
      type: object
    DeleteProfileKey_request:
      properties:
        ProfileId:
          description: The unique identifier of a customer profile.
          pattern: "[a-f0-9]{32}"
          title: ProfileId
          type: string
        KeyName:
          description: A searchable identifier of a customer profile.
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          title: KeyName
          type: string
        Values:
          description: A list of key values.
          items:
            $ref: '#/components/schemas/string1To255'
          title: Values
          type: array
      required:
      - KeyName
      - ProfileId
      - Values
      title: DeleteProfileKey_request
      type: object
    DeleteProfileObject_request:
      properties:
        ProfileId:
          description: The unique identifier of a customer profile.
          pattern: "[a-f0-9]{32}"
          title: ProfileId
          type: string
        ProfileObjectUniqueKey:
          description: The unique identifier of the profile object generated by the
            service.
          maxLength: 255
          minLength: 1
          title: ProfileObjectUniqueKey
          type: string
        ObjectTypeName:
          description: The name of the profile object type.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z_][a-zA-Z_0-9-]*$"
          title: ObjectTypeName
          type: string
      required:
      - ObjectTypeName
      - ProfileId
      - ProfileObjectUniqueKey
      title: DeleteProfileObject_request
      type: object
    PutProfileObjectType_request:
      properties:
        Description:
          description: Description of the profile object type.
          maxLength: 1000
          minLength: 1
          title: Description
          type: string
        TemplateId:
          description: "A unique identifier for the object template. For some attributes\
            \ in the request, the service will use the default value from the object\
            \ template when TemplateId is present. If these attributes are present\
            \ in the request, the service may return a <code>BadRequestException</code>.\
            \ These attributes include: AllowProfileCreation, SourceLastUpdatedTimestampFormat,\
            \ Fields, and Keys. For example, if AllowProfileCreation is set to true\
            \ when TemplateId is set, the service may return a <code>BadRequestException</code>."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          title: TemplateId
          type: string
        ExpirationDays:
          description: The number of days until the data in the object expires.
          maximum: 1098
          minimum: 1
          title: ExpirationDays
          type: integer
        EncryptionKey:
          description: The customer-provided key to encrypt the profile object that
            will be created in this profile object type.
          maxLength: 255
          minLength: 0
          title: EncryptionKey
          type: string
        AllowProfileCreation:
          description: "Indicates whether a profile should be created when data is\
            \ received if one doesn’t exist for an object of this type. The default\
            \ is <code>FALSE</code>. If the AllowProfileCreation flag is set to <code>FALSE</code>,\
            \ then the service tries to fetch a standard profile and associate this\
            \ object with the profile. If it is set to <code>TRUE</code>, and if no\
            \ match is found, then the service creates a new standard profile."
          title: AllowProfileCreation
          type: boolean
        SourceLastUpdatedTimestampFormat:
          description: 'The format of your <code>sourceLastUpdatedTimestamp</code>
            that was previously set up. '
          maxLength: 255
          minLength: 1
          title: SourceLastUpdatedTimestampFormat
          type: string
        Fields:
          additionalProperties:
            $ref: '#/components/schemas/ObjectTypeField'
          description: A map of the name and ObjectType field.
          title: Fields
          type: object
        Keys:
          additionalProperties:
            $ref: '#/components/schemas/ObjectTypeKeyList'
          description: A list of unique keys that can be used to map data to the profile.
          title: Keys
          type: object
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          maxProperties: 50
          minProperties: 1
          title: Tags
          type: object
      required:
      - Description
      title: PutProfileObjectType_request
      type: object
    GetAutoMergingPreview_request_Consolidation:
      description: 'The matching criteria to be used during the auto-merging process. '
      properties:
        MatchingAttributesList:
          allOf:
          - $ref: '#/components/schemas/MatchingAttributesList'
          - description: A list of matching criteria.
          title: MatchingAttributesList
      title: GetAutoMergingPreview_request_Consolidation
      type: object
    GetAutoMergingPreview_request_ConflictResolution:
      description: How the auto-merging process should resolve conflicts between different
        profiles.
      properties:
        ConflictResolvingModel:
          allOf:
          - $ref: '#/components/schemas/ConflictResolvingModel'
          - description: "<p>How the auto-merging process should resolve conflicts\
              \ between different profiles.</p> <ul> <li> <p> <code>RECENCY</code>:\
              \ Uses the data that was most recently updated.</p> </li> <li> <p> <code>SOURCE</code>:\
              \ Uses the data from a specific source. For example, if a company has\
              \ been aquired or two departments have merged, data from the specified\
              \ source is used. If two duplicate profiles are from the same source,\
              \ then <code>RECENCY</code> is used again.</p> </li> </ul>"
          title: ConflictResolvingModel
        SourceName:
          allOf:
          - $ref: '#/components/schemas/string1To255'
          - description: The <code>ObjectType</code> name that is used to resolve
              profile merging conflicts when choosing <code>SOURCE</code> as the <code>ConflictResolvingModel</code>.
          title: SourceName
      title: GetAutoMergingPreview_request_ConflictResolution
      type: object
    GetAutoMergingPreview_request:
      properties:
        Consolidation:
          $ref: '#/components/schemas/GetAutoMergingPreview_request_Consolidation'
        ConflictResolution:
          $ref: '#/components/schemas/GetAutoMergingPreview_request_ConflictResolution'
        MinAllowedConfidenceScoreForMerging:
          description: Minimum confidence score required for profiles within a matching
            group to be merged during the auto-merge process.
          format: double
          maximum: 1
          minimum: 0
          title: MinAllowedConfidenceScoreForMerging
          type: number
      required:
      - ConflictResolution
      - Consolidation
      title: GetAutoMergingPreview_request
      type: object
    PutIntegration_request_FlowDefinition_SourceFlowConfig:
      allOf:
      - $ref: '#/components/schemas/SourceFlowConfig'
      - description: The configuration that controls how Customer Profiles retrieves
          data from the source.
      example:
        ConnectorProfileName: ""
        SourceConnectorProperties:
          S3:
            BucketName: ""
            BucketPrefix: ""
          ServiceNow:
            Object: ""
          Zendesk:
            Object: ""
          Marketo:
            Object: ""
          Salesforce:
            IncludeDeletedRecords: ""
            Object: ""
            EnableDynamicFieldUpdate: ""
        ConnectorType: ""
        IncrementalPullConfig:
          DatetimeTypeFieldName: ""
      title: PutIntegration_request_FlowDefinition_SourceFlowConfig
    PutIntegration_request_FlowDefinition_TriggerConfig:
      allOf:
      - $ref: '#/components/schemas/TriggerConfig'
      - description: The trigger settings that determine how and when the flow runs.
      example:
        TriggerType: ""
        TriggerProperties:
          Scheduled:
            ScheduleEndTime: ""
            Timezone: ""
            ScheduleExpression: ""
            FirstExecutionFrom: ""
            ScheduleStartTime: ""
            DataPullMode: ""
            ScheduleOffset: ""
      title: PutIntegration_request_FlowDefinition_TriggerConfig
    PutIntegration_request_FlowDefinition:
      description: "The configurations that control how Customer Profiles retrieves\
        \ data from the source, Amazon AppFlow. Customer Profiles uses this information\
        \ to create an AppFlow flow on behalf of customers."
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/FlowDescription'
          - description: A description of the flow you want to create.
          title: Description
        FlowName:
          allOf:
          - $ref: '#/components/schemas/FlowName'
          - description: The specified name of the flow. Use underscores (_) or hyphens
              (-) only. Spaces are not allowed.
          title: FlowName
        KmsArn:
          allOf:
          - $ref: '#/components/schemas/KmsArn'
          - description: The Amazon Resource Name of the AWS Key Management Service
              (KMS) key you provide for encryption.
          title: KmsArn
        SourceFlowConfig:
          $ref: '#/components/schemas/PutIntegration_request_FlowDefinition_SourceFlowConfig'
        Tasks:
          allOf:
          - $ref: '#/components/schemas/Tasks'
          - description: A list of tasks that Customer Profiles performs while transferring
              the data in the flow run.
          title: Tasks
        TriggerConfig:
          $ref: '#/components/schemas/PutIntegration_request_FlowDefinition_TriggerConfig'
      title: PutIntegration_request_FlowDefinition
      type: object
    PutIntegration_request:
      properties:
        Uri:
          description: The URI of the S3 bucket or any other type of data source.
          maxLength: 255
          minLength: 1
          title: Uri
          type: string
        ObjectTypeName:
          description: The name of the profile object type.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z_][a-zA-Z_0-9-]*$"
          title: ObjectTypeName
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          maxProperties: 50
          minProperties: 1
          title: Tags
          type: object
        FlowDefinition:
          $ref: '#/components/schemas/PutIntegration_request_FlowDefinition'
        ObjectTypeNames:
          additionalProperties:
            $ref: '#/components/schemas/typeName'
          description: "A map in which each key is an event type from an external\
            \ application such as Segment or Shopify, and each value is an <code>ObjectTypeName</code>\
            \ (template) used to ingest the event. It supports the following event\
            \ types: <code>SegmentIdentify</code>, <code>ShopifyCreateCustomers</code>,\
            \ <code>ShopifyUpdateCustomers</code>, <code>ShopifyCreateDraftOrders</code>,\
            \ <code>ShopifyUpdateDraftOrders</code>, <code>ShopifyCreateOrders</code>,\
            \ and <code>ShopifyUpdatedOrders</code>."
          title: ObjectTypeNames
          type: object
      title: PutIntegration_request
      type: object
    GetSimilarProfiles_request:
      properties:
        MatchType:
          description: Specify the type of matching to get similar profiles for.
          enum:
          - RULE_BASED_MATCHING
          - ML_BASED_MATCHING
          title: MatchType
          type: string
        SearchKey:
          description: The string indicating the search key to be used.
          maxLength: 255
          minLength: 1
          title: SearchKey
          type: string
        SearchValue:
          description: The string based on <code>SearchKey</code> to be searched for
            similar profiles.
          maxLength: 255
          minLength: 1
          title: SearchValue
          type: string
      required:
      - MatchType
      - SearchKey
      - SearchValue
      title: GetSimilarProfiles_request
      type: object
    PutProfileObject_request:
      properties:
        ObjectTypeName:
          description: The name of the profile object type.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z_][a-zA-Z_0-9-]*$"
          title: ObjectTypeName
          type: string
        Object:
          description: A string that is serialized from a JSON object.
          maxLength: 256000
          minLength: 1
          title: Object
          type: string
      required:
      - Object
      - ObjectTypeName
      title: PutProfileObject_request
      type: object
    ListProfileObjects_request_ObjectFilter:
      description: The filter applied to <code>ListProfileObjects</code> response
        to include profile objects with the specified index values.
      properties:
        KeyName:
          allOf:
          - $ref: '#/components/schemas/name'
          - description: "A searchable identifier of a profile object. The predefined\
              \ keys you can use to search for <code>_asset</code> include: <code>_assetId</code>,\
              \ <code>_assetName</code>, and <code>_serialNumber</code>. The predefined\
              \ keys you can use to search for <code>_case</code> include: <code>_caseId</code>.\
              \ The predefined keys you can use to search for <code>_order</code>\
              \ include: <code>_orderId</code>."
          title: KeyName
        Values:
          allOf:
          - $ref: '#/components/schemas/requestValueList'
          - description: A list of key values.
          title: Values
      title: ListProfileObjects_request_ObjectFilter
      type: object
    ListProfileObjects_request:
      properties:
        ObjectTypeName:
          description: The name of the profile object type.
          maxLength: 255
          minLength: 1
          pattern: "^[a-zA-Z_][a-zA-Z_0-9-]*$"
          title: ObjectTypeName
          type: string
        ProfileId:
          description: The unique identifier of a customer profile.
          pattern: "[a-f0-9]{32}"
          title: ProfileId
          type: string
        ObjectFilter:
          $ref: '#/components/schemas/ListProfileObjects_request_ObjectFilter'
      required:
      - ObjectTypeName
      - ProfileId
      title: ListProfileObjects_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          maxProperties: 50
          minProperties: 1
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    ListWorkflows_request:
      properties:
        WorkflowType:
          description: The type of workflow. The only supported value is APPFLOW_INTEGRATION.
          enum:
          - APPFLOW_INTEGRATION
          title: WorkflowType
          type: string
        Status:
          description: Status of workflow execution.
          enum:
          - NOT_STARTED
          - IN_PROGRESS
          - COMPLETE
          - FAILED
          - SPLIT
          - RETRY
          - CANCELLED
          title: Status
          type: string
        QueryStartDate:
          description: Retrieve workflows started after timestamp.
          format: date-time
          title: QueryStartDate
          type: string
        QueryEndDate:
          description: Retrieve workflows ended after timestamp.
          format: date-time
          title: QueryEndDate
          type: string
      title: ListWorkflows_request
      type: object
    MergeProfiles_request_FieldSourceProfileIds:
      description: 'A duplicate customer profile that is to be merged into a main
        profile. '
      properties:
        AccountNumber:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: 'A unique identifier for the account number field to be merged. '
          title: AccountNumber
        AdditionalInformation:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the additional information field
              to be merged.
          title: AdditionalInformation
        PartyType:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the party type field to be merged.
          title: PartyType
        BusinessName:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the business name field to be merged.
          title: BusinessName
        FirstName:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the first name field to be merged.
          title: FirstName
        MiddleName:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the middle name field to be merged.
          title: MiddleName
        LastName:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the last name field to be merged.
          title: LastName
        BirthDate:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the birthdate field to be merged.
          title: BirthDate
        Gender:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the gender field to be merged.
          title: Gender
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the phone number field to be merged.
          title: PhoneNumber
        MobilePhoneNumber:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the mobile phone number field to
              be merged.
          title: MobilePhoneNumber
        HomePhoneNumber:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the home phone number field to be
              merged.
          title: HomePhoneNumber
        BusinessPhoneNumber:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the business phone number field to
              be merged.
          title: BusinessPhoneNumber
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the email address field to be merged.
          title: EmailAddress
        PersonalEmailAddress:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the personal email address field
              to be merged.
          title: PersonalEmailAddress
        BusinessEmailAddress:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the party type field to be merged.
          title: BusinessEmailAddress
        Address:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the party type field to be merged.
          title: Address
        ShippingAddress:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the shipping address field to be
              merged.
          title: ShippingAddress
        MailingAddress:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the mailing address field to be merged.
          title: MailingAddress
        BillingAddress:
          allOf:
          - $ref: '#/components/schemas/uuid'
          - description: A unique identifier for the billing type field to be merged.
          title: BillingAddress
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeSourceIdMap'
          - description: A unique identifier for the attributes field to be merged.
          title: Attributes
      title: MergeProfiles_request_FieldSourceProfileIds
      type: object
    MergeProfiles_request:
      properties:
        MainProfileId:
          description: The identifier of the profile to be taken.
          pattern: "[a-f0-9]{32}"
          title: MainProfileId
          type: string
        ProfileIdsToBeMerged:
          description: The identifier of the profile to be merged into MainProfileId.
          items:
            $ref: '#/components/schemas/uuid'
          maxItems: 20
          minItems: 1
          title: ProfileIdsToBeMerged
          type: array
        FieldSourceProfileIds:
          $ref: '#/components/schemas/MergeProfiles_request_FieldSourceProfileIds'
      required:
      - MainProfileId
      - ProfileIdsToBeMerged
      title: MergeProfiles_request
      type: object
    SearchProfiles_request:
      properties:
        KeyName:
          description: "A searchable identifier of a customer profile. The predefined\
            \ keys you can use to search include: _account, _profileId, _assetId,\
            \ _caseId, _orderId, _fullName, _phone, _email, _ctrContactId, _marketoLeadId,\
            \ _salesforceAccountId, _salesforceContactId, _salesforceAssetId, _zendeskUserId,\
            \ _zendeskExternalId, _zendeskTicketId, _serviceNowSystemId, _serviceNowIncidentId,\
            \ _segmentUserId, _shopifyCustomerId, _shopifyOrderId."
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          title: KeyName
          type: string
        Values:
          description: A list of key values.
          items:
            $ref: '#/components/schemas/string1To255'
          title: Values
          type: array
        AdditionalSearchKeys:
          description: "A list of <code>AdditionalSearchKey</code> objects that are\
            \ each searchable identifiers of a profile. Each <code>AdditionalSearchKey</code>\
            \ object contains a <code>KeyName</code> and a list of <code>Values</code>\
            \ associated with that specific key (i.e., a key-value(s) pair). These\
            \ additional search keys will be used in conjunction with the <code>LogicalOperator</code>\
            \ and the required <code>KeyName</code> and <code>Values</code> parameters\
            \ to search for profiles that satisfy the search criteria. "
          items:
            $ref: '#/components/schemas/AdditionalSearchKey'
          maxItems: 4
          minItems: 1
          title: AdditionalSearchKeys
          type: array
        LogicalOperator:
          description: <p>Relationship between all specified search keys that will
            be used to search for profiles. This includes the required <code>KeyName</code>
            and <code>Values</code> parameters as well as any key-value(s) pairs specified
            in the <code>AdditionalSearchKeys</code> list.</p> <p>This parameter influences
            which profiles will be returned in the response in the following manner:</p>
            <ul> <li> <p> <code>AND</code> - The response only includes profiles that
            match all of the search keys.</p> </li> <li> <p> <code>OR</code> - The
            response includes profiles that match at least one of the search keys.</p>
            </li> </ul> <p>The <code>OR</code> relationship is the default behavior
            if this parameter is not included in the request.</p>
          enum:
          - AND
          - OR
          title: LogicalOperator
          type: string
      required:
      - KeyName
      - Values
      title: SearchProfiles_request
      type: object
    CreateCalculatedAttributeDefinitionResponse_AttributeDetails:
      allOf:
      - $ref: '#/components/schemas/AttributeDetails'
      - description: Mathematical expression and a list of attribute items specified
          in that expression.
      example:
        Expression: ""
        Attributes: ""
      title: CreateCalculatedAttributeDefinitionResponse_AttributeDetails
    CreateCalculatedAttributeDefinitionResponse_Conditions:
      allOf:
      - $ref: '#/components/schemas/Conditions'
      - description: "The conditions including range, object count, and threshold\
          \ for the calculated attribute."
      example:
        Range:
          Value: ""
          Unit: ""
        ObjectCount: ""
        Threshold:
          Operator: ""
          Value: ""
      title: CreateCalculatedAttributeDefinitionResponse_Conditions
    CreateDomainResponse_Matching:
      allOf:
      - $ref: '#/components/schemas/MatchingResponse'
      - description: "<p>The process of matching duplicate profiles. If <code>Matching</code>\
          \ = <code>true</code>, Amazon Connect Customer Profiles starts a weekly\
          \ batch process called Identity Resolution Job. If you do not specify a\
          \ date and time for Identity Resolution Job to run, by default it runs every\
          \ Saturday at 12AM UTC to detect duplicate profiles in your domains. </p>\
          \ <p>After the Identity Resolution Job completes, use the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\"\
          >GetMatches</a> API to return and review the results. Or, if you have configured\
          \ <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you\
          \ can download the results from S3.</p>"
      example:
        AutoMerging:
          Consolidation:
            MatchingAttributesList: ""
          Enabled: ""
          ConflictResolution:
            ConflictResolvingModel: ""
            SourceName: ""
          MinAllowedConfidenceScoreForMerging: ""
        JobSchedule:
          DayOfTheWeek: ""
          Time: ""
        Enabled: ""
        ExportingConfig:
          S3Exporting:
            S3BucketName: ""
            S3KeyName: ""
      title: CreateDomainResponse_Matching
    CreateDomainResponse_RuleBasedMatching:
      allOf:
      - $ref: '#/components/schemas/RuleBasedMatchingResponse'
      - description: "The process of matching duplicate profiles using the Rule-Based\
          \ matching. If <code>RuleBasedMatching</code> = true, Amazon Connect Customer\
          \ Profiles will start to match and merge your profiles according to your\
          \ configuration in the <code>RuleBasedMatchingRequest</code>. You can use\
          \ the <code>ListRuleBasedMatches</code> and <code>GetSimilarProfiles</code>\
          \ API to return and review the results. Also, if you have configured <code>ExportingConfig</code>\
          \ in the <code>RuleBasedMatchingRequest</code>, you can download the results\
          \ from S3."
      example:
        Status: ""
        MaxAllowedRuleLevelForMerging: ""
        Enabled: ""
        MatchingRules: ""
        AttributeTypesSelector:
          Address: ""
          AttributeMatchingModel: ""
          PhoneNumber: ""
          EmailAddress: ""
        ConflictResolution:
          ConflictResolvingModel: ""
          SourceName: ""
        ExportingConfig:
          S3Exporting:
            S3BucketName: ""
            S3KeyName: ""
        MaxAllowedRuleLevelForMatching: ""
      title: CreateDomainResponse_RuleBasedMatching
    AutoMerging_Consolidation:
      allOf:
      - $ref: '#/components/schemas/Consolidation'
      - description: "A list of matching attributes that represent matching criteria.\
          \ If two profiles meet at least one of the requirements in the matching\
          \ attributes list, they will be merged."
      example:
        MatchingAttributesList: ""
      title: AutoMerging_Consolidation
    AutoMerging_ConflictResolution:
      allOf:
      - $ref: '#/components/schemas/ConflictResolution'
      - description: "How the auto-merging process should resolve conflicts between\
          \ different profiles. For example, if Profile A and Profile B have the same\
          \ <code>FirstName</code> and <code>LastName</code> (and that is the matching\
          \ criteria), which <code>EmailAddress</code> should be used? "
      example:
        ConflictResolvingModel: ""
        SourceName: ""
      title: AutoMerging_ConflictResolution
    ExportingConfig_S3Exporting:
      allOf:
      - $ref: '#/components/schemas/S3ExportingConfig'
      - description: The S3 location where Identity Resolution Jobs write result files.
      example:
        S3BucketName: ""
        S3KeyName: ""
      title: ExportingConfig_S3Exporting
    GetDomainResponse_Stats:
      allOf:
      - $ref: '#/components/schemas/DomainStats'
      - description: Usage-specific statistics about the domain.
      example:
        MeteringProfileCount: ""
        ProfileCount: ""
        ObjectCount: ""
        TotalSize: ""
      title: GetDomainResponse_Stats
    GetEventStreamResponse_DestinationDetails:
      allOf:
      - $ref: '#/components/schemas/EventStreamDestinationDetails'
      - description: Details regarding the Kinesis stream.
      example:
        Status: ""
        UnhealthySince: ""
        Message: ""
        Uri: ""
      title: GetEventStreamResponse_DestinationDetails
    GetIdentityResolutionJobResponse_AutoMerging:
      allOf:
      - $ref: '#/components/schemas/AutoMerging'
      - description: Configuration settings for how to perform the auto-merging of
          profiles.
      example:
        Consolidation:
          MatchingAttributesList: ""
        Enabled: ""
        ConflictResolution:
          ConflictResolvingModel: ""
          SourceName: ""
        MinAllowedConfidenceScoreForMerging: ""
      title: GetIdentityResolutionJobResponse_AutoMerging
    GetIdentityResolutionJobResponse_ExportingLocation:
      allOf:
      - $ref: '#/components/schemas/ExportingLocation'
      - description: The S3 location where the Identity Resolution Job writes result
          files.
      example:
        S3Exporting:
          S3BucketName: ""
          S3KeyName: ""
      title: GetIdentityResolutionJobResponse_ExportingLocation
    GetIdentityResolutionJobResponse_JobStats:
      allOf:
      - $ref: '#/components/schemas/JobStats'
      - description: Statistics about the Identity Resolution Job.
      example:
        NumberOfProfilesReviewed: ""
        NumberOfMatchesFound: ""
        NumberOfMergesDone: ""
      title: GetIdentityResolutionJobResponse_JobStats
    GetWorkflowResponse_Attributes:
      allOf:
      - $ref: '#/components/schemas/WorkflowAttributes'
      - description: Attributes provided for workflow execution.
      example:
        AppflowIntegration:
          ConnectorProfileName: ""
          SourceConnectorType: ""
          RoleArn: ""
      title: GetWorkflowResponse_Attributes
    GetWorkflowResponse_Metrics:
      allOf:
      - $ref: '#/components/schemas/WorkflowMetrics'
      - description: Workflow specific execution metrics.
      example:
        AppflowIntegration:
          RecordsProcessed: ""
          StepsCompleted: ""
          TotalSteps: ""
      title: GetWorkflowResponse_Metrics
    SourceFlowConfig_IncrementalPullConfig:
      allOf:
      - $ref: '#/components/schemas/IncrementalPullConfig'
      - description: "Defines the configuration for a scheduled incremental data pull.\
          \ If a valid configuration is provided, the fields specified in the configuration\
          \ are used when querying for the incremental data pull."
      example:
        DatetimeTypeFieldName: ""
      title: SourceFlowConfig_IncrementalPullConfig
    SourceFlowConfig_SourceConnectorProperties:
      allOf:
      - $ref: '#/components/schemas/SourceConnectorProperties'
      - description: Specifies the information that is required to query a particular
          source connector.
      example:
        S3:
          BucketName: ""
          BucketPrefix: ""
        ServiceNow:
          Object: ""
        Zendesk:
          Object: ""
        Marketo:
          Object: ""
        Salesforce:
          IncludeDeletedRecords: ""
          Object: ""
          EnableDynamicFieldUpdate: ""
      title: SourceFlowConfig_SourceConnectorProperties
    TriggerConfig_TriggerProperties:
      allOf:
      - $ref: '#/components/schemas/TriggerProperties'
      - description: "Specifies the configuration details of a schedule-triggered\
          \ flow that you define. Currently, these settings only apply to the Scheduled\
          \ trigger type."
      example:
        Scheduled:
          ScheduleEndTime: ""
          Timezone: ""
          ScheduleExpression: ""
          FirstExecutionFrom: ""
          ScheduleStartTime: ""
          DataPullMode: ""
          ScheduleOffset: ""
      title: TriggerConfig_TriggerProperties
    UpdateCalculatedAttributeDefinitionResponse_AttributeDetails:
      allOf:
      - $ref: '#/components/schemas/AttributeDetails'
      - description: The mathematical expression and a list of attribute items specified
          in that expression.
      example:
        Expression: ""
        Attributes: ""
      title: UpdateCalculatedAttributeDefinitionResponse_AttributeDetails
    UpdateDomainResponse_RuleBasedMatching:
      allOf:
      - $ref: '#/components/schemas/RuleBasedMatchingResponse'
      - description: "The process of matching duplicate profiles using the rule-Based\
          \ matching. If <code>RuleBasedMatching</code> = true, Amazon Connect Customer\
          \ Profiles will start to match and merge your profiles according to your\
          \ configuration in the <code>RuleBasedMatchingRequest</code>. You can use\
          \ the <code>ListRuleBasedMatches</code> and <code>GetSimilarProfiles</code>\
          \ API to return and review the results. Also, if you have configured <code>ExportingConfig</code>\
          \ in the <code>RuleBasedMatchingRequest</code>, you can download the results\
          \ from S3."
      example:
        Status: ""
        MaxAllowedRuleLevelForMerging: ""
        Enabled: ""
        MatchingRules: ""
        AttributeTypesSelector:
          Address: ""
          AttributeMatchingModel: ""
          PhoneNumber: ""
          EmailAddress: ""
        ConflictResolution:
          ConflictResolvingModel: ""
          SourceName: ""
        ExportingConfig:
          S3Exporting:
            S3BucketName: ""
            S3KeyName: ""
        MaxAllowedRuleLevelForMatching: ""
      title: UpdateDomainResponse_RuleBasedMatching
    CreateDomainRequest_Matching:
      allOf:
      - $ref: '#/components/schemas/MatchingRequest'
      - description: "<p>The process of matching duplicate profiles. If <code>Matching</code>\
          \ = <code>true</code>, Amazon Connect Customer Profiles starts a weekly\
          \ batch process called Identity Resolution Job. If you do not specify a\
          \ date and time for Identity Resolution Job to run, by default it runs every\
          \ Saturday at 12AM UTC to detect duplicate profiles in your domains. </p>\
          \ <p>After the Identity Resolution Job completes, use the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\"\
          >GetMatches</a> API to return and review the results. Or, if you have configured\
          \ <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you\
          \ can download the results from S3.</p>"
      example:
        AutoMerging:
          Consolidation:
            MatchingAttributesList: ""
          Enabled: ""
          ConflictResolution:
            ConflictResolvingModel: ""
            SourceName: ""
          MinAllowedConfidenceScoreForMerging: ""
        JobSchedule:
          DayOfTheWeek: ""
          Time: ""
        Enabled: ""
        ExportingConfig:
          S3Exporting:
            S3BucketName: ""
            S3KeyName: ""
      title: CreateDomainRequest_Matching
    CreateDomainRequest_RuleBasedMatching:
      allOf:
      - $ref: '#/components/schemas/RuleBasedMatchingRequest'
      - description: "The process of matching duplicate profiles using the Rule-Based\
          \ matching. If <code>RuleBasedMatching</code> = true, Amazon Connect Customer\
          \ Profiles will start to match and merge your profiles according to your\
          \ configuration in the <code>RuleBasedMatchingRequest</code>. You can use\
          \ the <code>ListRuleBasedMatches</code> and <code>GetSimilarProfiles</code>\
          \ API to return and review the results. Also, if you have configured <code>ExportingConfig</code>\
          \ in the <code>RuleBasedMatchingRequest</code>, you can download the results\
          \ from S3."
      example:
        MaxAllowedRuleLevelForMerging: ""
        Enabled: ""
        MatchingRules: ""
        AttributeTypesSelector:
          Address: ""
          AttributeMatchingModel: ""
          PhoneNumber: ""
          EmailAddress: ""
        ConflictResolution:
          ConflictResolvingModel: ""
          SourceName: ""
        ExportingConfig:
          S3Exporting:
            S3BucketName: ""
            S3KeyName: ""
        MaxAllowedRuleLevelForMatching: ""
      title: CreateDomainRequest_RuleBasedMatching
    CreateIntegrationWorkflowRequest_IntegrationConfig:
      allOf:
      - $ref: '#/components/schemas/IntegrationConfig'
      - description: Configuration data for integration workflow.
      example:
        AppflowIntegration:
          Batches: ""
          FlowDefinition:
            Description: ""
            Tasks: ""
            FlowName: ""
            TriggerConfig:
              TriggerType: ""
              TriggerProperties:
                Scheduled:
                  ScheduleEndTime: ""
                  Timezone: ""
                  ScheduleExpression: ""
                  FirstExecutionFrom: ""
                  ScheduleStartTime: ""
                  DataPullMode: ""
                  ScheduleOffset: ""
            SourceFlowConfig:
              ConnectorProfileName: ""
              SourceConnectorProperties:
                S3:
                  BucketName: ""
                  BucketPrefix: ""
                ServiceNow:
                  Object: ""
                Zendesk:
                  Object: ""
                Marketo:
                  Object: ""
                Salesforce:
                  IncludeDeletedRecords: ""
                  Object: ""
                  EnableDynamicFieldUpdate: ""
              ConnectorType: ""
              IncrementalPullConfig:
                DatetimeTypeFieldName: ""
            KmsArn: ""
      title: CreateIntegrationWorkflowRequest_IntegrationConfig
    CreateProfileRequest_Address:
      allOf:
      - $ref: '#/components/schemas/Address'
      - description: "A generic address associated with the customer that is not mailing,\
          \ shipping, or billing."
      example:
        Address4: ""
        State: ""
        Address2: ""
        Address3: ""
        Country: ""
        PostalCode: ""
        Address1: ""
        City: ""
        County: ""
        Province: ""
      title: CreateProfileRequest_Address
    CreateProfileRequest_ShippingAddress:
      allOf:
      - $ref: '#/components/schemas/Address'
      - description: The customer’s shipping address.
      example:
        Address4: ""
        State: ""
        Address2: ""
        Address3: ""
        Country: ""
        PostalCode: ""
        Address1: ""
        City: ""
        County: ""
        Province: ""
      title: CreateProfileRequest_ShippingAddress
    CreateProfileRequest_MailingAddress:
      allOf:
      - $ref: '#/components/schemas/Address'
      - description: The customer’s mailing address.
      example:
        Address4: ""
        State: ""
        Address2: ""
        Address3: ""
        Country: ""
        PostalCode: ""
        Address1: ""
        City: ""
        County: ""
        Province: ""
      title: CreateProfileRequest_MailingAddress
    CreateProfileRequest_BillingAddress:
      allOf:
      - $ref: '#/components/schemas/Address'
      - description: The customer’s billing address.
      example:
        Address4: ""
        State: ""
        Address2: ""
        Address3: ""
        Country: ""
        PostalCode: ""
        Address1: ""
        City: ""
        County: ""
        Province: ""
      title: CreateProfileRequest_BillingAddress
    EventStreamSummary_DestinationSummary:
      allOf:
      - $ref: '#/components/schemas/DestinationSummary'
      - description: Summary information about the Kinesis data stream.
      title: EventStreamSummary_DestinationSummary
    ExportingLocation_S3Exporting:
      allOf:
      - $ref: '#/components/schemas/S3ExportingLocation'
      - description: Information about the S3 location where Identity Resolution Jobs
          write result files.
      example:
        S3BucketName: ""
        S3KeyName: ""
      title: ExportingLocation_S3Exporting
    GetAutoMergingPreviewRequest_Consolidation:
      allOf:
      - $ref: '#/components/schemas/Consolidation'
      - description: A list of matching attributes that represent matching criteria.
      example:
        MatchingAttributesList: ""
      title: GetAutoMergingPreviewRequest_Consolidation
    GetAutoMergingPreviewRequest_ConflictResolution:
      allOf:
      - $ref: '#/components/schemas/ConflictResolution'
      - description: How the auto-merging process should resolve conflicts between
          different profiles.
      example:
        ConflictResolvingModel: ""
        SourceName: ""
      title: GetAutoMergingPreviewRequest_ConflictResolution
    WorkflowAttributes_AppflowIntegration:
      allOf:
      - $ref: '#/components/schemas/AppflowIntegrationWorkflowAttributes'
      - description: Workflow attributes specific to <code>APPFLOW_INTEGRATION</code>
          workflow.
      example:
        ConnectorProfileName: ""
        SourceConnectorType: ""
        RoleArn: ""
      title: WorkflowAttributes_AppflowIntegration
    WorkflowMetrics_AppflowIntegration:
      allOf:
      - $ref: '#/components/schemas/AppflowIntegrationWorkflowMetrics'
      - description: Workflow execution metrics for <code>APPFLOW_INTEGRATION</code>
          workflow.
      example:
        RecordsProcessed: ""
        StepsCompleted: ""
        TotalSteps: ""
      title: WorkflowMetrics_AppflowIntegration
    IdentityResolutionJob_JobStats:
      allOf:
      - $ref: '#/components/schemas/JobStats'
      - description: Statistics about an Identity Resolution Job.
      title: IdentityResolutionJob_JobStats
    ListProfileObjectsRequest_ObjectFilter:
      allOf:
      - $ref: '#/components/schemas/ObjectFilter'
      - description: Applies a filter to the response to include profile objects with
          the specified index values.
      example:
        KeyName: ""
        Values: ""
      title: ListProfileObjectsRequest_ObjectFilter
    MergeProfilesRequest_FieldSourceProfileIds:
      allOf:
      - $ref: '#/components/schemas/FieldSourceProfileIds'
      - description: "The identifiers of the fields in the profile that has the information\
          \ you want to apply to the merge. For example, say you want to merge EmailAddress\
          \ from Profile1 into MainProfile. This would be the identifier of the EmailAddress\
          \ field in Profile1. "
      example:
        AdditionalInformation: ""
        BusinessName: ""
        Address: ""
        FirstName: ""
        PersonalEmailAddress: ""
        BusinessEmailAddress: ""
        Attributes: ""
        MailingAddress: ""
        Gender: ""
        BusinessPhoneNumber: ""
        MiddleName: ""
        MobilePhoneNumber: ""
        EmailAddress: ""
        AccountNumber: ""
        BillingAddress: ""
        HomePhoneNumber: ""
        ShippingAddress: ""
        PhoneNumber: ""
        LastName: ""
        PartyType: ""
        BirthDate: ""
      title: MergeProfilesRequest_FieldSourceProfileIds
    PutIntegrationRequest_FlowDefinition:
      allOf:
      - $ref: '#/components/schemas/FlowDefinition'
      - description: The configuration that controls how Customer Profiles retrieves
          data from the source.
      example:
        Description: ""
        Tasks: ""
        FlowName: ""
        TriggerConfig:
          TriggerType: ""
          TriggerProperties:
            Scheduled:
              ScheduleEndTime: ""
              Timezone: ""
              ScheduleExpression: ""
              FirstExecutionFrom: ""
              ScheduleStartTime: ""
              DataPullMode: ""
              ScheduleOffset: ""
        SourceFlowConfig:
          ConnectorProfileName: ""
          SourceConnectorProperties:
            S3:
              BucketName: ""
              BucketPrefix: ""
            ServiceNow:
              Object: ""
            Zendesk:
              Object: ""
            Marketo:
              Object: ""
            Salesforce:
              IncludeDeletedRecords: ""
              Object: ""
              EnableDynamicFieldUpdate: ""
          ConnectorType: ""
          IncrementalPullConfig:
            DatetimeTypeFieldName: ""
        KmsArn: ""
      title: PutIntegrationRequest_FlowDefinition
    SourceConnectorProperties_Marketo:
      allOf:
      - $ref: '#/components/schemas/MarketoSourceProperties'
      - description: The properties that are applied when Marketo is being used as
          a source.
      example:
        Object: ""
      title: SourceConnectorProperties_Marketo
    SourceConnectorProperties_S3:
      allOf:
      - $ref: '#/components/schemas/S3SourceProperties'
      - description: The properties that are applied when Amazon S3 is being used
          as the flow source.
      example:
        BucketName: ""
        BucketPrefix: ""
      title: SourceConnectorProperties_S3
    SourceConnectorProperties_Salesforce:
      allOf:
      - $ref: '#/components/schemas/SalesforceSourceProperties'
      - description: The properties that are applied when Salesforce is being used
          as a source.
      example:
        IncludeDeletedRecords: ""
        Object: ""
        EnableDynamicFieldUpdate: ""
      title: SourceConnectorProperties_Salesforce
    SourceConnectorProperties_ServiceNow:
      allOf:
      - $ref: '#/components/schemas/ServiceNowSourceProperties'
      - description: The properties that are applied when ServiceNow is being used
          as a source.
      example:
        Object: ""
      title: SourceConnectorProperties_ServiceNow
    SourceConnectorProperties_Zendesk:
      allOf:
      - $ref: '#/components/schemas/ZendeskSourceProperties'
      - description: The properties that are applied when using Zendesk as a flow
          source.
      example:
        Object: ""
      title: SourceConnectorProperties_Zendesk
    Task_ConnectorOperator:
      allOf:
      - $ref: '#/components/schemas/ConnectorOperator'
      - description: The operation to be performed on the provided source fields.
      title: Task_ConnectorOperator
    TriggerProperties_Scheduled:
      allOf:
      - $ref: '#/components/schemas/ScheduledTriggerProperties'
      - description: Specifies the configuration details of a schedule-triggered flow
          that you define.
      example:
        ScheduleEndTime: ""
        Timezone: ""
        ScheduleExpression: ""
        FirstExecutionFrom: ""
        ScheduleStartTime: ""
        DataPullMode: ""
        ScheduleOffset: ""
      title: TriggerProperties_Scheduled
    UpdateDomainRequest_RuleBasedMatching:
      allOf:
      - $ref: '#/components/schemas/RuleBasedMatchingRequest'
      - description: "The process of matching duplicate profiles using the rule-Based\
          \ matching. If <code>RuleBasedMatching</code> = true, Amazon Connect Customer\
          \ Profiles will start to match and merge your profiles according to your\
          \ configuration in the <code>RuleBasedMatchingRequest</code>. You can use\
          \ the <code>ListRuleBasedMatches</code> and <code>GetSimilarProfiles</code>\
          \ API to return and review the results. Also, if you have configured <code>ExportingConfig</code>\
          \ in the <code>RuleBasedMatchingRequest</code>, you can download the results\
          \ from S3."
      example:
        MaxAllowedRuleLevelForMerging: ""
        Enabled: ""
        MatchingRules: ""
        AttributeTypesSelector:
          Address: ""
          AttributeMatchingModel: ""
          PhoneNumber: ""
          EmailAddress: ""
        ConflictResolution:
          ConflictResolvingModel: ""
          SourceName: ""
        ExportingConfig:
          S3Exporting:
            S3BucketName: ""
            S3KeyName: ""
        MaxAllowedRuleLevelForMatching: ""
      title: UpdateDomainRequest_RuleBasedMatching
    UpdateProfileRequest_Address:
      allOf:
      - $ref: '#/components/schemas/UpdateAddress'
      - description: "A generic address associated with the customer that is not mailing,\
          \ shipping, or billing."
      example:
        Address4: ""
        State: ""
        Address2: ""
        Address3: ""
        Country: ""
        PostalCode: ""
        Address1: ""
        City: ""
        County: ""
        Province: ""
      title: UpdateProfileRequest_Address
    UpdateProfileRequest_ShippingAddress:
      allOf:
      - $ref: '#/components/schemas/UpdateAddress'
      - description: The customer’s shipping address.
      example:
        Address4: ""
        State: ""
        Address2: ""
        Address3: ""
        Country: ""
        PostalCode: ""
        Address1: ""
        City: ""
        County: ""
        Province: ""
      title: UpdateProfileRequest_ShippingAddress
    UpdateProfileRequest_MailingAddress:
      allOf:
      - $ref: '#/components/schemas/UpdateAddress'
      - description: The customer’s mailing address.
      example:
        Address4: ""
        State: ""
        Address2: ""
        Address3: ""
        Country: ""
        PostalCode: ""
        Address1: ""
        City: ""
        County: ""
        Province: ""
      title: UpdateProfileRequest_MailingAddress
    UpdateProfileRequest_BillingAddress:
      allOf:
      - $ref: '#/components/schemas/UpdateAddress'
      - description: The customer’s billing address.
      example:
        Address4: ""
        State: ""
        Address2: ""
        Address3: ""
        Country: ""
        PostalCode: ""
        Address1: ""
        City: ""
        County: ""
        Province: ""
      title: UpdateProfileRequest_BillingAddress
    WorkflowStepItem_AppflowIntegration:
      allOf:
      - $ref: '#/components/schemas/AppflowIntegrationWorkflowStep'
      - description: Workflow step information specific to <code>APPFLOW_INTEGRATION</code>
          workflow.
      title: WorkflowStepItem_AppflowIntegration
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
