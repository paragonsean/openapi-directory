/*
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettingsChannelRetentionSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The details of the data-retention settings for an &lt;code&gt;AppInstance&lt;/code&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:40.081252-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings {
  public static final String SERIALIZED_NAME_CHANNEL_RETENTION_SETTINGS = "ChannelRetentionSettings";
  @SerializedName(SERIALIZED_NAME_CHANNEL_RETENTION_SETTINGS)
  private PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettingsChannelRetentionSettings channelRetentionSettings;

  public PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings() {
  }

  public PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings channelRetentionSettings(PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettingsChannelRetentionSettings channelRetentionSettings) {
    this.channelRetentionSettings = channelRetentionSettings;
    return this;
  }

  /**
   * Get channelRetentionSettings
   * @return channelRetentionSettings
   */
  @javax.annotation.Nullable
  public PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettingsChannelRetentionSettings getChannelRetentionSettings() {
    return channelRetentionSettings;
  }

  public void setChannelRetentionSettings(PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettingsChannelRetentionSettings channelRetentionSettings) {
    this.channelRetentionSettings = channelRetentionSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings putAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings = (PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings) o;
    return Objects.equals(this.channelRetentionSettings, putAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings.channelRetentionSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channelRetentionSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings {\n");
    sb.append("    channelRetentionSettings: ").append(toIndentedString(channelRetentionSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ChannelRetentionSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings is not found in the empty JSON string", PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ChannelRetentionSettings`
      if (jsonObj.get("ChannelRetentionSettings") != null && !jsonObj.get("ChannelRetentionSettings").isJsonNull()) {
        PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettingsChannelRetentionSettings.validateJsonElement(jsonObj.get("ChannelRetentionSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings>() {
           @Override
           public void write(JsonWriter out, PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings
   * @throws IOException if the JSON string is invalid with respect to PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings
   */
  public static PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings.class);
  }

  /**
   * Convert an instance of PutAppInstanceRetentionSettingsRequestAppInstanceRetentionSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

