/*
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateAppInstanceBotRequestConfiguration;
import org.openapitools.client.model.Tag;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateAppInstanceBotRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:40.081252-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateAppInstanceBotRequest {
  public static final String SERIALIZED_NAME_APP_INSTANCE_ARN = "AppInstanceArn";
  @SerializedName(SERIALIZED_NAME_APP_INSTANCE_ARN)
  private String appInstanceArn;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_METADATA = "Metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private String metadata;

  public static final String SERIALIZED_NAME_CLIENT_REQUEST_TOKEN = "ClientRequestToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUEST_TOKEN)
  private String clientRequestToken;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Tag> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONFIGURATION = "Configuration";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION)
  private CreateAppInstanceBotRequestConfiguration _configuration;

  public CreateAppInstanceBotRequest() {
  }

  public CreateAppInstanceBotRequest appInstanceArn(String appInstanceArn) {
    this.appInstanceArn = appInstanceArn;
    return this;
  }

  /**
   * The ARN of the &lt;code&gt;AppInstance&lt;/code&gt; request.
   * @return appInstanceArn
   */
  @javax.annotation.Nonnull
  public String getAppInstanceArn() {
    return appInstanceArn;
  }

  public void setAppInstanceArn(String appInstanceArn) {
    this.appInstanceArn = appInstanceArn;
  }


  public CreateAppInstanceBotRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The user&#39;s name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateAppInstanceBotRequest metadata(String metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * The request metadata. Limited to a 1KB string in UTF-8.
   * @return metadata
   */
  @javax.annotation.Nullable
  public String getMetadata() {
    return metadata;
  }

  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }


  public CreateAppInstanceBotRequest clientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
    return this;
  }

  /**
   * The unique ID for the client making the request. Use different tokens for different &lt;code&gt;AppInstanceBots&lt;/code&gt;.
   * @return clientRequestToken
   */
  @javax.annotation.Nonnull
  public String getClientRequestToken() {
    return clientRequestToken;
  }

  public void setClientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
  }


  public CreateAppInstanceBotRequest tags(List<Tag> tags) {
    this.tags = tags;
    return this;
  }

  public CreateAppInstanceBotRequest addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * The tags assigned to the &lt;code&gt;AppInstanceBot&lt;/code&gt;.
   * @return tags
   */
  @javax.annotation.Nullable
  public List<Tag> getTags() {
    return tags;
  }

  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  public CreateAppInstanceBotRequest _configuration(CreateAppInstanceBotRequestConfiguration _configuration) {
    this._configuration = _configuration;
    return this;
  }

  /**
   * Get _configuration
   * @return _configuration
   */
  @javax.annotation.Nonnull
  public CreateAppInstanceBotRequestConfiguration getConfiguration() {
    return _configuration;
  }

  public void setConfiguration(CreateAppInstanceBotRequestConfiguration _configuration) {
    this._configuration = _configuration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAppInstanceBotRequest createAppInstanceBotRequest = (CreateAppInstanceBotRequest) o;
    return Objects.equals(this.appInstanceArn, createAppInstanceBotRequest.appInstanceArn) &&
        Objects.equals(this.name, createAppInstanceBotRequest.name) &&
        Objects.equals(this.metadata, createAppInstanceBotRequest.metadata) &&
        Objects.equals(this.clientRequestToken, createAppInstanceBotRequest.clientRequestToken) &&
        Objects.equals(this.tags, createAppInstanceBotRequest.tags) &&
        Objects.equals(this._configuration, createAppInstanceBotRequest._configuration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appInstanceArn, name, metadata, clientRequestToken, tags, _configuration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAppInstanceBotRequest {\n");
    sb.append("    appInstanceArn: ").append(toIndentedString(appInstanceArn)).append("\n");
    sb.append("    name: ").append("*").append("\n");
    sb.append("    metadata: ").append("*").append("\n");
    sb.append("    clientRequestToken: ").append(toIndentedString(clientRequestToken)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AppInstanceArn");
    openapiFields.add("Name");
    openapiFields.add("Metadata");
    openapiFields.add("ClientRequestToken");
    openapiFields.add("Tags");
    openapiFields.add("Configuration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("AppInstanceArn");
    openapiRequiredFields.add("ClientRequestToken");
    openapiRequiredFields.add("Configuration");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateAppInstanceBotRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateAppInstanceBotRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateAppInstanceBotRequest is not found in the empty JSON string", CreateAppInstanceBotRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateAppInstanceBotRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateAppInstanceBotRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateAppInstanceBotRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("AppInstanceArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AppInstanceArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AppInstanceArn").toString()));
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("Metadata") != null && !jsonObj.get("Metadata").isJsonNull()) && !jsonObj.get("Metadata").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Metadata` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Metadata").toString()));
      }
      if (!jsonObj.get("ClientRequestToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ClientRequestToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ClientRequestToken").toString()));
      }
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        JsonArray jsonArraytags = jsonObj.getAsJsonArray("Tags");
        if (jsonArraytags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Tags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Tags` to be an array in the JSON string but got `%s`", jsonObj.get("Tags").toString()));
          }

          // validate the optional field `Tags` (array)
          for (int i = 0; i < jsonArraytags.size(); i++) {
            Tag.validateJsonElement(jsonArraytags.get(i));
          };
        }
      }
      // validate the required field `Configuration`
      CreateAppInstanceBotRequestConfiguration.validateJsonElement(jsonObj.get("Configuration"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateAppInstanceBotRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateAppInstanceBotRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateAppInstanceBotRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateAppInstanceBotRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateAppInstanceBotRequest>() {
           @Override
           public void write(JsonWriter out, CreateAppInstanceBotRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateAppInstanceBotRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateAppInstanceBotRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateAppInstanceBotRequest
   * @throws IOException if the JSON string is invalid with respect to CreateAppInstanceBotRequest
   */
  public static CreateAppInstanceBotRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateAppInstanceBotRequest.class);
  }

  /**
   * Convert an instance of CreateAppInstanceBotRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

