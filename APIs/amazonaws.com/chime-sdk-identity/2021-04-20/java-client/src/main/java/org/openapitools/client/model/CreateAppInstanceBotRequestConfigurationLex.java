/*
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.LexConfigurationInvokedBy;
import org.openapitools.client.model.RespondsTo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateAppInstanceBotRequestConfigurationLex
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:07:40.081252-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateAppInstanceBotRequestConfigurationLex {
  public static final String SERIALIZED_NAME_RESPONDS_TO = "RespondsTo";
  @SerializedName(SERIALIZED_NAME_RESPONDS_TO)
  private RespondsTo respondsTo;

  public static final String SERIALIZED_NAME_INVOKED_BY = "InvokedBy";
  @SerializedName(SERIALIZED_NAME_INVOKED_BY)
  private LexConfigurationInvokedBy invokedBy;

  public static final String SERIALIZED_NAME_LEX_BOT_ALIAS_ARN = "LexBotAliasArn";
  @SerializedName(SERIALIZED_NAME_LEX_BOT_ALIAS_ARN)
  private String lexBotAliasArn;

  public static final String SERIALIZED_NAME_LOCALE_ID = "LocaleId";
  @SerializedName(SERIALIZED_NAME_LOCALE_ID)
  private String localeId;

  public static final String SERIALIZED_NAME_WELCOME_INTENT = "WelcomeIntent";
  @SerializedName(SERIALIZED_NAME_WELCOME_INTENT)
  private String welcomeIntent;

  public CreateAppInstanceBotRequestConfigurationLex() {
  }

  public CreateAppInstanceBotRequestConfigurationLex respondsTo(RespondsTo respondsTo) {
    this.respondsTo = respondsTo;
    return this;
  }

  /**
   * Get respondsTo
   * @return respondsTo
   */
  @javax.annotation.Nullable
  public RespondsTo getRespondsTo() {
    return respondsTo;
  }

  public void setRespondsTo(RespondsTo respondsTo) {
    this.respondsTo = respondsTo;
  }


  public CreateAppInstanceBotRequestConfigurationLex invokedBy(LexConfigurationInvokedBy invokedBy) {
    this.invokedBy = invokedBy;
    return this;
  }

  /**
   * Get invokedBy
   * @return invokedBy
   */
  @javax.annotation.Nullable
  public LexConfigurationInvokedBy getInvokedBy() {
    return invokedBy;
  }

  public void setInvokedBy(LexConfigurationInvokedBy invokedBy) {
    this.invokedBy = invokedBy;
  }


  public CreateAppInstanceBotRequestConfigurationLex lexBotAliasArn(String lexBotAliasArn) {
    this.lexBotAliasArn = lexBotAliasArn;
    return this;
  }

  /**
   * Get lexBotAliasArn
   * @return lexBotAliasArn
   */
  @javax.annotation.Nonnull
  public String getLexBotAliasArn() {
    return lexBotAliasArn;
  }

  public void setLexBotAliasArn(String lexBotAliasArn) {
    this.lexBotAliasArn = lexBotAliasArn;
  }


  public CreateAppInstanceBotRequestConfigurationLex localeId(String localeId) {
    this.localeId = localeId;
    return this;
  }

  /**
   * Get localeId
   * @return localeId
   */
  @javax.annotation.Nonnull
  public String getLocaleId() {
    return localeId;
  }

  public void setLocaleId(String localeId) {
    this.localeId = localeId;
  }


  public CreateAppInstanceBotRequestConfigurationLex welcomeIntent(String welcomeIntent) {
    this.welcomeIntent = welcomeIntent;
    return this;
  }

  /**
   * Get welcomeIntent
   * @return welcomeIntent
   */
  @javax.annotation.Nullable
  public String getWelcomeIntent() {
    return welcomeIntent;
  }

  public void setWelcomeIntent(String welcomeIntent) {
    this.welcomeIntent = welcomeIntent;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAppInstanceBotRequestConfigurationLex createAppInstanceBotRequestConfigurationLex = (CreateAppInstanceBotRequestConfigurationLex) o;
    return Objects.equals(this.respondsTo, createAppInstanceBotRequestConfigurationLex.respondsTo) &&
        Objects.equals(this.invokedBy, createAppInstanceBotRequestConfigurationLex.invokedBy) &&
        Objects.equals(this.lexBotAliasArn, createAppInstanceBotRequestConfigurationLex.lexBotAliasArn) &&
        Objects.equals(this.localeId, createAppInstanceBotRequestConfigurationLex.localeId) &&
        Objects.equals(this.welcomeIntent, createAppInstanceBotRequestConfigurationLex.welcomeIntent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(respondsTo, invokedBy, lexBotAliasArn, localeId, welcomeIntent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAppInstanceBotRequestConfigurationLex {\n");
    sb.append("    respondsTo: ").append(toIndentedString(respondsTo)).append("\n");
    sb.append("    invokedBy: ").append(toIndentedString(invokedBy)).append("\n");
    sb.append("    lexBotAliasArn: ").append(toIndentedString(lexBotAliasArn)).append("\n");
    sb.append("    localeId: ").append(toIndentedString(localeId)).append("\n");
    sb.append("    welcomeIntent: ").append(toIndentedString(welcomeIntent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("RespondsTo");
    openapiFields.add("InvokedBy");
    openapiFields.add("LexBotAliasArn");
    openapiFields.add("LocaleId");
    openapiFields.add("WelcomeIntent");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("LexBotAliasArn");
    openapiRequiredFields.add("LocaleId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateAppInstanceBotRequestConfigurationLex
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateAppInstanceBotRequestConfigurationLex.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateAppInstanceBotRequestConfigurationLex is not found in the empty JSON string", CreateAppInstanceBotRequestConfigurationLex.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateAppInstanceBotRequestConfigurationLex.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateAppInstanceBotRequestConfigurationLex` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateAppInstanceBotRequestConfigurationLex.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `RespondsTo`
      if (jsonObj.get("RespondsTo") != null && !jsonObj.get("RespondsTo").isJsonNull()) {
        RespondsTo.validateJsonElement(jsonObj.get("RespondsTo"));
      }
      // validate the optional field `InvokedBy`
      if (jsonObj.get("InvokedBy") != null && !jsonObj.get("InvokedBy").isJsonNull()) {
        LexConfigurationInvokedBy.validateJsonElement(jsonObj.get("InvokedBy"));
      }
      // validate the required field `LexBotAliasArn`
      String.validateJsonElement(jsonObj.get("LexBotAliasArn"));
      // validate the required field `LocaleId`
      String.validateJsonElement(jsonObj.get("LocaleId"));
      // validate the optional field `WelcomeIntent`
      if (jsonObj.get("WelcomeIntent") != null && !jsonObj.get("WelcomeIntent").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("WelcomeIntent"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateAppInstanceBotRequestConfigurationLex.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateAppInstanceBotRequestConfigurationLex' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateAppInstanceBotRequestConfigurationLex> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateAppInstanceBotRequestConfigurationLex.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateAppInstanceBotRequestConfigurationLex>() {
           @Override
           public void write(JsonWriter out, CreateAppInstanceBotRequestConfigurationLex value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateAppInstanceBotRequestConfigurationLex read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateAppInstanceBotRequestConfigurationLex given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateAppInstanceBotRequestConfigurationLex
   * @throws IOException if the JSON string is invalid with respect to CreateAppInstanceBotRequestConfigurationLex
   */
  public static CreateAppInstanceBotRequestConfigurationLex fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateAppInstanceBotRequestConfigurationLex.class);
  }

  /**
   * Convert an instance of CreateAppInstanceBotRequestConfigurationLex to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

