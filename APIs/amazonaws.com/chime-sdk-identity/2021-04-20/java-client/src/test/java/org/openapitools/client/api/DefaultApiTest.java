/*
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateAppInstanceAdminRequest;
import org.openapitools.client.model.CreateAppInstanceAdminResponse;
import org.openapitools.client.model.CreateAppInstanceBotRequest;
import org.openapitools.client.model.CreateAppInstanceBotResponse;
import org.openapitools.client.model.CreateAppInstanceRequest;
import org.openapitools.client.model.CreateAppInstanceResponse;
import org.openapitools.client.model.CreateAppInstanceUserRequest;
import org.openapitools.client.model.CreateAppInstanceUserResponse;
import org.openapitools.client.model.DescribeAppInstanceAdminResponse;
import org.openapitools.client.model.DescribeAppInstanceBotResponse;
import org.openapitools.client.model.DescribeAppInstanceResponse;
import org.openapitools.client.model.DescribeAppInstanceUserEndpointResponse;
import org.openapitools.client.model.DescribeAppInstanceUserResponse;
import org.openapitools.client.model.GetAppInstanceRetentionSettingsResponse;
import org.openapitools.client.model.ListAppInstanceAdminsResponse;
import org.openapitools.client.model.ListAppInstanceBotsResponse;
import org.openapitools.client.model.ListAppInstanceUserEndpointsResponse;
import org.openapitools.client.model.ListAppInstanceUsersResponse;
import org.openapitools.client.model.ListAppInstancesResponse;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.PutAppInstanceRetentionSettingsRequest;
import org.openapitools.client.model.PutAppInstanceRetentionSettingsResponse;
import org.openapitools.client.model.PutAppInstanceUserExpirationSettingsRequest;
import org.openapitools.client.model.PutAppInstanceUserExpirationSettingsResponse;
import org.openapitools.client.model.RegisterAppInstanceUserEndpointRequest;
import org.openapitools.client.model.RegisterAppInstanceUserEndpointResponse;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UntagResourceRequest;
import org.openapitools.client.model.UpdateAppInstanceBotRequest;
import org.openapitools.client.model.UpdateAppInstanceBotResponse;
import org.openapitools.client.model.UpdateAppInstanceRequest;
import org.openapitools.client.model.UpdateAppInstanceResponse;
import org.openapitools.client.model.UpdateAppInstanceUserEndpointRequest;
import org.openapitools.client.model.UpdateAppInstanceUserEndpointResponse;
import org.openapitools.client.model.UpdateAppInstanceUserRequest;
import org.openapitools.client.model.UpdateAppInstanceUserResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * &lt;p&gt;Creates an Amazon Chime SDK messaging &lt;code&gt;AppInstance&lt;/code&gt; under an AWS account. Only SDK messaging customers use this API. &lt;code&gt;CreateAppInstance&lt;/code&gt; supports idempotency behavior as described in the AWS API Standard.&lt;/p&gt; &lt;p&gt;identity&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAppInstanceTest() throws ApiException {
        CreateAppInstanceRequest createAppInstanceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateAppInstanceResponse response = api.createAppInstance(createAppInstanceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Promotes an &lt;code&gt;AppInstanceUser&lt;/code&gt; or &lt;code&gt;AppInstanceBot&lt;/code&gt; to an &lt;code&gt;AppInstanceAdmin&lt;/code&gt;. The promoted entity can perform the following actions. &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ChannelModerator&lt;/code&gt; actions across all channels in the &lt;code&gt;AppInstance&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DeleteChannelMessage&lt;/code&gt; actions.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Only an &lt;code&gt;AppInstanceUser&lt;/code&gt; and &lt;code&gt;AppInstanceBot&lt;/code&gt; can be promoted to an &lt;code&gt;AppInstanceAdmin&lt;/code&gt; role.&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAppInstanceAdminTest() throws ApiException {
        String appInstanceArn = null;
        CreateAppInstanceAdminRequest createAppInstanceAdminRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateAppInstanceAdminResponse response = api.createAppInstanceAdmin(appInstanceArn, createAppInstanceAdminRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a bot under an Amazon Chime &lt;code&gt;AppInstance&lt;/code&gt;. The request consists of a unique &lt;code&gt;Configuration&lt;/code&gt; and &lt;code&gt;Name&lt;/code&gt; for that bot.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAppInstanceBotTest() throws ApiException {
        CreateAppInstanceBotRequest createAppInstanceBotRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateAppInstanceBotResponse response = api.createAppInstanceBot(createAppInstanceBotRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a user under an Amazon Chime &lt;code&gt;AppInstance&lt;/code&gt;. The request consists of a unique &lt;code&gt;appInstanceUserId&lt;/code&gt; and &lt;code&gt;Name&lt;/code&gt; for that user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAppInstanceUserTest() throws ApiException {
        CreateAppInstanceUserRequest createAppInstanceUserRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateAppInstanceUserResponse response = api.createAppInstanceUser(createAppInstanceUserRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an &lt;code&gt;AppInstance&lt;/code&gt; and all associated data asynchronously.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAppInstanceTest() throws ApiException {
        String appInstanceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteAppInstance(appInstanceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Demotes an &lt;code&gt;AppInstanceAdmin&lt;/code&gt; to an &lt;code&gt;AppInstanceUser&lt;/code&gt; or &lt;code&gt;AppInstanceBot&lt;/code&gt;. This action does not delete the user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAppInstanceAdminTest() throws ApiException {
        String appInstanceAdminArn = null;
        String appInstanceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteAppInstanceAdmin(appInstanceAdminArn, appInstanceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an &lt;code&gt;AppInstanceBot&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAppInstanceBotTest() throws ApiException {
        String appInstanceBotArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteAppInstanceBot(appInstanceBotArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an &lt;code&gt;AppInstanceUser&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAppInstanceUserTest() throws ApiException {
        String appInstanceUserArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deleteAppInstanceUser(appInstanceUserArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deregisters an &lt;code&gt;AppInstanceUserEndpoint&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deregisterAppInstanceUserEndpointTest() throws ApiException {
        String appInstanceUserArn = null;
        String endpointId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.deregisterAppInstanceUserEndpoint(appInstanceUserArn, endpointId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns the full details of an &lt;code&gt;AppInstance&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAppInstanceTest() throws ApiException {
        String appInstanceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAppInstanceResponse response = api.describeAppInstance(appInstanceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns the full details of an &lt;code&gt;AppInstanceAdmin&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAppInstanceAdminTest() throws ApiException {
        String appInstanceAdminArn = null;
        String appInstanceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAppInstanceAdminResponse response = api.describeAppInstanceAdmin(appInstanceAdminArn, appInstanceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * The &lt;code&gt;AppInstanceBot&#39;s&lt;/code&gt; information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAppInstanceBotTest() throws ApiException {
        String appInstanceBotArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAppInstanceBotResponse response = api.describeAppInstanceBot(appInstanceBotArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns the full details of an &lt;code&gt;AppInstanceUser&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAppInstanceUserTest() throws ApiException {
        String appInstanceUserArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAppInstanceUserResponse response = api.describeAppInstanceUser(appInstanceUserArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns the full details of an &lt;code&gt;AppInstanceUserEndpoint&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAppInstanceUserEndpointTest() throws ApiException {
        String appInstanceUserArn = null;
        String endpointId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAppInstanceUserEndpointResponse response = api.describeAppInstanceUserEndpoint(appInstanceUserArn, endpointId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Gets the retention settings for an &lt;code&gt;AppInstance&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAppInstanceRetentionSettingsTest() throws ApiException {
        String appInstanceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetAppInstanceRetentionSettingsResponse response = api.getAppInstanceRetentionSettings(appInstanceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns a list of the administrators in the &lt;code&gt;AppInstance&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppInstanceAdminsTest() throws ApiException {
        String appInstanceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListAppInstanceAdminsResponse response = api.listAppInstanceAdmins(appInstanceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists all &lt;code&gt;AppInstanceBots&lt;/code&gt; created under a single &lt;code&gt;AppInstance&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppInstanceBotsTest() throws ApiException {
        String appInstanceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListAppInstanceBotsResponse response = api.listAppInstanceBots(appInstanceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists all the &lt;code&gt;AppInstanceUserEndpoints&lt;/code&gt; created under a single &lt;code&gt;AppInstanceUser&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppInstanceUserEndpointsTest() throws ApiException {
        String appInstanceUserArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListAppInstanceUserEndpointsResponse response = api.listAppInstanceUserEndpoints(appInstanceUserArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * List all &lt;code&gt;AppInstanceUsers&lt;/code&gt; created under a single &lt;code&gt;AppInstance&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppInstanceUsersTest() throws ApiException {
        String appInstanceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListAppInstanceUsersResponse response = api.listAppInstanceUsers(appInstanceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists all Amazon Chime &lt;code&gt;AppInstance&lt;/code&gt;s created under a single AWS account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppInstancesTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListAppInstancesResponse response = api.listAppInstances(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists the tags applied to an Amazon Chime SDK identity resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        String arn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(arn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Sets the amount of time in days that a given &lt;code&gt;AppInstance&lt;/code&gt; retains data.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putAppInstanceRetentionSettingsTest() throws ApiException {
        String appInstanceArn = null;
        PutAppInstanceRetentionSettingsRequest putAppInstanceRetentionSettingsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        PutAppInstanceRetentionSettingsResponse response = api.putAppInstanceRetentionSettings(appInstanceArn, putAppInstanceRetentionSettingsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Sets the number of days before the &lt;code&gt;AppInstanceUser&lt;/code&gt; is automatically deleted.&lt;/p&gt; &lt;note&gt; &lt;p&gt;A background process deletes expired &lt;code&gt;AppInstanceUsers&lt;/code&gt; within 6 hours of expiration. Actual deletion times may vary.&lt;/p&gt; &lt;p&gt;Expired &lt;code&gt;AppInstanceUsers&lt;/code&gt; that have not yet been deleted appear as active, and you can update their expiration settings. The system honors the new settings.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putAppInstanceUserExpirationSettingsTest() throws ApiException {
        String appInstanceUserArn = null;
        PutAppInstanceUserExpirationSettingsRequest putAppInstanceUserExpirationSettingsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        PutAppInstanceUserExpirationSettingsResponse response = api.putAppInstanceUserExpirationSettings(appInstanceUserArn, putAppInstanceUserExpirationSettingsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Registers an endpoint under an Amazon Chime &lt;code&gt;AppInstanceUser&lt;/code&gt;. The endpoint receives messages for a user. For push notifications, the endpoint is a mobile device used to receive mobile push notifications for a user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registerAppInstanceUserEndpointTest() throws ApiException {
        String appInstanceUserArn = null;
        RegisterAppInstanceUserEndpointRequest registerAppInstanceUserEndpointRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        RegisterAppInstanceUserEndpointResponse response = api.registerAppInstanceUserEndpoint(appInstanceUserArn, registerAppInstanceUserEndpointRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Applies the specified tags to the specified Amazon Chime SDK identity resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String operation = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.tagResource(operation, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes the specified tags from the specified Amazon Chime SDK identity resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String operation = null;
        UntagResourceRequest untagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.untagResource(operation, untagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates &lt;code&gt;AppInstance&lt;/code&gt; metadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAppInstanceTest() throws ApiException {
        String appInstanceArn = null;
        UpdateAppInstanceRequest updateAppInstanceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateAppInstanceResponse response = api.updateAppInstance(appInstanceArn, updateAppInstanceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates the name and metadata of an &lt;code&gt;AppInstanceBot&lt;/code&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAppInstanceBotTest() throws ApiException {
        String appInstanceBotArn = null;
        UpdateAppInstanceBotRequest updateAppInstanceBotRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateAppInstanceBotResponse response = api.updateAppInstanceBot(appInstanceBotArn, updateAppInstanceBotRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates the details of an &lt;code&gt;AppInstanceUser&lt;/code&gt;. You can update names and metadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAppInstanceUserTest() throws ApiException {
        String appInstanceUserArn = null;
        UpdateAppInstanceUserRequest updateAppInstanceUserRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateAppInstanceUserResponse response = api.updateAppInstanceUser(appInstanceUserArn, updateAppInstanceUserRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates the details of an &lt;code&gt;AppInstanceUserEndpoint&lt;/code&gt;. You can update the name and &lt;code&gt;AllowMessage&lt;/code&gt; values.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAppInstanceUserEndpointTest() throws ApiException {
        String appInstanceUserArn = null;
        String endpointId = null;
        UpdateAppInstanceUserEndpointRequest updateAppInstanceUserEndpointRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateAppInstanceUserEndpointResponse response = api.updateAppInstanceUserEndpoint(appInstanceUserArn, endpointId, updateAppInstanceUserEndpointRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
