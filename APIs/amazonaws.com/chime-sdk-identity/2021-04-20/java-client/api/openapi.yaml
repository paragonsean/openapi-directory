openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "The Amazon Chime SDK Identity APIs in this section allow software\
    \ developers to create and manage unique instances of their messaging applications.\
    \ These APIs provide the overarching framework for creating and sending messages.\
    \ For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\"\
    >Amazon Chime SDK identity</a>."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Chime SDK Identity
  version: 2021-04-20
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: chime-sdk-identity
  x-aws-signingName: chime
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/chime-sdk-identity-2021-04-20.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/identity-chime/
servers:
- description: The Amazon Chime SDK Identity multi-region endpoint
  url: "http://identity-chime.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Chime SDK Identity multi-region endpoint
  url: "https://identity-chime.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Chime SDK Identity endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://identity-chime.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Chime SDK Identity endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://identity-chime.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /app-instances:
    get:
      description: Lists all Amazon Chime <code>AppInstance</code>s created under
        a single AWS account.
      operationId: ListAppInstances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of <code>AppInstance</code>s that you want
          to return.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token passed by previous API requests until you reach the
          maximum number of <code>AppInstances</code>.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppInstancesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    post:
      description: <p>Creates an Amazon Chime SDK messaging <code>AppInstance</code>
        under an AWS account. Only SDK messaging customers use this API. <code>CreateAppInstance</code>
        supports idempotency behavior as described in the AWS API Standard.</p> <p>identity</p>
      operationId: CreateAppInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppInstance_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app-instances/{appInstanceArn}/admins:
    get:
      description: Returns a list of the administrators in the <code>AppInstance</code>.
      operationId: ListAppInstanceAdmins
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstance</code>.
        explode: false
        in: path
        name: appInstanceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The maximum number of administrators that you want to return.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token returned from previous API requests until the number
          of administrators is reached.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppInstanceAdminsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    post:
      description: <p>Promotes an <code>AppInstanceUser</code> or <code>AppInstanceBot</code>
        to an <code>AppInstanceAdmin</code>. The promoted entity can perform the following
        actions. </p> <ul> <li> <p> <code>ChannelModerator</code> actions across all
        channels in the <code>AppInstance</code>.</p> </li> <li> <p> <code>DeleteChannelMessage</code>
        actions.</p> </li> </ul> <p>Only an <code>AppInstanceUser</code> and <code>AppInstanceBot</code>
        can be promoted to an <code>AppInstanceAdmin</code> role.</p>
      operationId: CreateAppInstanceAdmin
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstance</code>.
        explode: false
        in: path
        name: appInstanceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppInstanceAdmin_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppInstanceAdminResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app-instance-bots:
    post:
      description: Creates a bot under an Amazon Chime <code>AppInstance</code>. The
        request consists of a unique <code>Configuration</code> and <code>Name</code>
        for that bot.
      operationId: CreateAppInstanceBot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppInstanceBot_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppInstanceBotResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app-instance-users:
    post:
      description: Creates a user under an Amazon Chime <code>AppInstance</code>.
        The request consists of a unique <code>appInstanceUserId</code> and <code>Name</code>
        for that user.
      operationId: CreateAppInstanceUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppInstanceUser_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppInstanceUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app-instances/{appInstanceArn}:
    delete:
      description: Deletes an <code>AppInstance</code> and all associated data asynchronously.
      operationId: DeleteAppInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstance</code>.
        explode: false
        in: path
        name: appInstanceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    get:
      description: Returns the full details of an <code>AppInstance</code>.
      operationId: DescribeAppInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstance</code>.
        explode: false
        in: path
        name: appInstanceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAppInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    put:
      description: Updates <code>AppInstance</code> metadata.
      operationId: UpdateAppInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstance</code>.
        explode: false
        in: path
        name: appInstanceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppInstance_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app-instances/{appInstanceArn}/admins/{appInstanceAdminArn}:
    delete:
      description: Demotes an <code>AppInstanceAdmin</code> to an <code>AppInstanceUser</code>
        or <code>AppInstanceBot</code>. This action does not delete the user.
      operationId: DeleteAppInstanceAdmin
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstance</code>'s administrator.
        explode: false
        in: path
        name: appInstanceAdminArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstance</code>.
        explode: false
        in: path
        name: appInstanceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    get:
      description: Returns the full details of an <code>AppInstanceAdmin</code>.
      operationId: DescribeAppInstanceAdmin
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceAdmin</code>.
        explode: false
        in: path
        name: appInstanceAdminArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The ARN of the <code>AppInstance</code>.
        explode: false
        in: path
        name: appInstanceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAppInstanceAdminResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /app-instance-bots/{appInstanceBotArn}:
    delete:
      description: Deletes an <code>AppInstanceBot</code>.
      operationId: DeleteAppInstanceBot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceBot</code> being deleted.
        explode: false
        in: path
        name: appInstanceBotArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    get:
      description: The <code>AppInstanceBot's</code> information.
      operationId: DescribeAppInstanceBot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceBot</code>.
        explode: false
        in: path
        name: appInstanceBotArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAppInstanceBotResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    put:
      description: Updates the name and metadata of an <code>AppInstanceBot</code>.
      operationId: UpdateAppInstanceBot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceBot</code>.
        explode: false
        in: path
        name: appInstanceBotArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppInstanceBot_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppInstanceBotResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app-instance-users/{appInstanceUserArn}:
    delete:
      description: Deletes an <code>AppInstanceUser</code>.
      operationId: DeleteAppInstanceUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the user request being deleted.
        explode: false
        in: path
        name: appInstanceUserArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    get:
      description: Returns the full details of an <code>AppInstanceUser</code>.
      operationId: DescribeAppInstanceUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code>.
        explode: false
        in: path
        name: appInstanceUserArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAppInstanceUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    put:
      description: Updates the details of an <code>AppInstanceUser</code>. You can
        update names and metadata.
      operationId: UpdateAppInstanceUser
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code>.
        explode: false
        in: path
        name: appInstanceUserArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppInstanceUser_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppInstanceUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app-instance-users/{appInstanceUserArn}/endpoints/{endpointId}:
    delete:
      description: Deregisters an <code>AppInstanceUserEndpoint</code>.
      operationId: DeregisterAppInstanceUserEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code>.
        explode: false
        in: path
        name: appInstanceUserArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The unique identifier of the <code>AppInstanceUserEndpoint</code>.
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          maxLength: 64
          minLength: 0
          pattern: .*
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    get:
      description: Returns the full details of an <code>AppInstanceUserEndpoint</code>.
      operationId: DescribeAppInstanceUserEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code>.
        explode: false
        in: path
        name: appInstanceUserArn
        required: true
        schema:
          maxLength: 1600
          minLength: 0
          pattern: .*
          type: string
        style: simple
      - description: The unique identifier of the <code>AppInstanceUserEndpoint</code>.
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          maxLength: 64
          minLength: 0
          pattern: .*
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAppInstanceUserEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    put:
      description: Updates the details of an <code>AppInstanceUserEndpoint</code>.
        You can update the name and <code>AllowMessage</code> values.
      operationId: UpdateAppInstanceUserEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code>.
        explode: false
        in: path
        name: appInstanceUserArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The unique identifier of the <code>AppInstanceUserEndpoint</code>.
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          maxLength: 64
          minLength: 0
          pattern: .*
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppInstanceUserEndpoint_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppInstanceUserEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app-instances/{appInstanceArn}/retention-settings:
    get:
      description: Gets the retention settings for an <code>AppInstance</code>.
      operationId: GetAppInstanceRetentionSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstance</code>.
        explode: false
        in: path
        name: appInstanceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppInstanceRetentionSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    put:
      description: Sets the amount of time in days that a given <code>AppInstance</code>
        retains data.
      operationId: PutAppInstanceRetentionSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstance</code>.
        explode: false
        in: path
        name: appInstanceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAppInstanceRetentionSettings_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAppInstanceRetentionSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app-instance-bots#app-instance-arn:
    get:
      description: Lists all <code>AppInstanceBots</code> created under a single <code>AppInstance</code>.
      operationId: ListAppInstanceBots
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstance</code>.
        explode: true
        in: query
        name: app-instance-arn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: form
      - description: The maximum number of requests to return.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token passed by previous API calls until all requested bots
          are returned.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppInstanceBotsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /app-instance-users/{appInstanceUserArn}/endpoints:
    get:
      description: Lists all the <code>AppInstanceUserEndpoints</code> created under
        a single <code>AppInstanceUser</code>.
      operationId: ListAppInstanceUserEndpoints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code>.
        explode: false
        in: path
        name: appInstanceUserArn
        required: true
        schema:
          format: password
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      - description: The maximum number of endpoints that you want to return.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token passed by previous API calls until all requested endpoints
          are returned.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppInstanceUserEndpointsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
    post:
      description: "Registers an endpoint under an Amazon Chime <code>AppInstanceUser</code>.\
        \ The endpoint receives messages for a user. For push notifications, the endpoint\
        \ is a mobile device used to receive mobile push notifications for a user."
      operationId: RegisterAppInstanceUserEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code>.
        explode: false
        in: path
        name: appInstanceUserArn
        required: true
        schema:
          format: password
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterAppInstanceUserEndpoint_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterAppInstanceUserEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app-instance-users#app-instance-arn:
    get:
      description: List all <code>AppInstanceUsers</code> created under a single <code>AppInstance</code>.
      operationId: ListAppInstanceUsers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstance</code>.
        explode: true
        in: query
        name: app-instance-arn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: form
      - description: The maximum number of requests that you want returned.
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token passed by previous API calls until all requested users
          are returned.
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          format: password
          maxLength: 2048
          minLength: 0
          pattern: .*
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppInstanceUsersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /tags#arn:
    get:
      description: Lists the tags applied to an Amazon Chime SDK identity resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource.
        explode: true
        in: query
        name: arn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-accepts:
      - application/json
  /app-instance-users/{appInstanceUserArn}/expiration-settings:
    put:
      description: "<p>Sets the number of days before the <code>AppInstanceUser</code>\
        \ is automatically deleted.</p> <note> <p>A background process deletes expired\
        \ <code>AppInstanceUsers</code> within 6 hours of expiration. Actual deletion\
        \ times may vary.</p> <p>Expired <code>AppInstanceUsers</code> that have not\
        \ yet been deleted appear as active, and you can update their expiration settings.\
        \ The system honors the new settings.</p> </note>"
      operationId: PutAppInstanceUserExpirationSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>AppInstanceUser</code>.
        explode: false
        in: path
        name: appInstanceUserArn
        required: true
        schema:
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAppInstanceUserExpirationSettings_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAppInstanceUserExpirationSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags#operation=tag-resource:
    post:
      description: Applies the specified tags to the specified Amazon Chime SDK identity
        resource.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: operation
        required: true
        schema:
          enum:
          - tag-resource
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
          description: ResourceLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags#operation=untag-resource:
    post:
      description: Removes the specified tags from the specified Amazon Chime SDK
        identity resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: operation
        required: true
        schema:
          enum:
          - untag-resource
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResource_request'
        required: true
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
          description: UnauthorizedClientException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
          description: ThrottledClientException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateAppInstanceResponse:
      example:
        AppInstanceArn: ""
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The Amazon Resource Number (ARN) of the <code>AppInstance</code>.
      type: object
    Tag:
      description: A tag object containing a key-value pair.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key in a tag.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value in a tag.
      required:
      - Key
      - Value
      type: object
    BadRequestException: {}
    ConflictException: {}
    ForbiddenException: {}
    ResourceLimitExceededException: {}
    ThrottledClientException: {}
    UnauthorizedClientException: {}
    ServiceUnavailableException: {}
    ServiceFailureException: {}
    CreateAppInstanceAdminResponse:
      example:
        AppInstanceAdmin:
          Arn: ""
          Name: ""
        AppInstanceArn: ""
      properties:
        AppInstanceAdmin:
          $ref: '#/components/schemas/CreateAppInstanceAdminResponse_AppInstanceAdmin'
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the of the admin for the <code>AppInstance</code>.
      type: object
    CreateAppInstanceBotResponse:
      example:
        AppInstanceBotArn: ""
      properties:
        AppInstanceBotArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppinstanceBot</code>.
      type: object
    LexConfiguration:
      description: The configuration for an Amazon Lex V2 bot.
      properties:
        RespondsTo:
          allOf:
          - $ref: '#/components/schemas/RespondsTo'
          - description: <important> <p> <b>Deprecated</b>. Use <code>InvokedBy</code>
              instead.</p> </important> <p>Determines whether the Amazon Lex V2 bot
              responds to all standard messages. Control messages are not supported.</p>
        InvokedBy:
          $ref: '#/components/schemas/LexConfiguration_InvokedBy'
        LexBotAliasArn:
          allOf:
          - $ref: '#/components/schemas/LexBotAliasArn'
          - description: "The ARN of the Amazon Lex V2 bot's alias. The ARN uses this\
              \ format: <code>arn:aws:lex:REGION:ACCOUNT:bot-alias/MYBOTID/MYBOTALIAS</code> "
        LocaleId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Identifies the Amazon Lex V2 bot's language and locale.\
              \ The string must match one of the supported locales in Amazon Lex V2.\
              \ All of the intents, slot types, and slots used in the bot must have\
              \ the same locale. For more information, see <a href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"\
              >Supported languages</a> in the <i>Amazon Lex V2 Developer Guide</i>."
        WelcomeIntent:
          allOf:
          - $ref: '#/components/schemas/LexIntentName'
          - description: The name of the welcome intent configured in the Amazon Lex
              V2 bot.
      required:
      - LexBotAliasArn
      - LocaleId
      type: object
    CreateAppInstanceUserResponse:
      example:
        AppInstanceUserArn: ""
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The user's ARN.
      type: object
    ExpirationDays:
      maximum: 5475
      minimum: 1
      type: integer
    ExpirationCriterion:
      enum:
      - CREATED_TIMESTAMP
      type: string
    DescribeAppInstanceResponse:
      example:
        AppInstance:
          CreatedTimestamp: ""
          LastUpdatedTimestamp: ""
          Metadata: ""
          AppInstanceArn: ""
          Name: ""
      properties:
        AppInstance:
          $ref: '#/components/schemas/DescribeAppInstanceResponse_AppInstance'
      type: object
    DescribeAppInstanceAdminResponse:
      example:
        AppInstanceAdmin:
          CreatedTimestamp: ""
          Admin:
            Arn: ""
            Name: ""
          AppInstanceArn: ""
      properties:
        AppInstanceAdmin:
          $ref: '#/components/schemas/DescribeAppInstanceAdminResponse_AppInstanceAdmin'
      type: object
    DescribeAppInstanceBotResponse:
      example:
        AppInstanceBot:
          CreatedTimestamp: ""
          Configuration:
            Lex:
              LexBotAliasArn: ""
              InvokedBy:
                StandardMessages: ""
                TargetedMessages: ""
              LocaleId: ""
              RespondsTo: ""
              WelcomeIntent: ""
          LastUpdatedTimestamp: ""
          Metadata: ""
          AppInstanceBotArn: ""
          Name: ""
      properties:
        AppInstanceBot:
          $ref: '#/components/schemas/DescribeAppInstanceBotResponse_AppInstanceBot'
      type: object
    NotFoundException: {}
    DescribeAppInstanceUserResponse:
      example:
        AppInstanceUser:
          AppInstanceUserArn: ""
          CreatedTimestamp: ""
          ExpirationSettings:
            ExpirationCriterion: ""
            ExpirationDays: ""
          LastUpdatedTimestamp: ""
          Metadata: ""
          Name: ""
      properties:
        AppInstanceUser:
          $ref: '#/components/schemas/DescribeAppInstanceUserResponse_AppInstanceUser'
      type: object
    DescribeAppInstanceUserEndpointResponse:
      example:
        AppInstanceUserEndpoint:
          AppInstanceUserArn: ""
          EndpointState:
            Status: ""
            StatusReason: ""
          ResourceArn: ""
          Type: ""
          CreatedTimestamp: ""
          EndpointId: ""
          LastUpdatedTimestamp: ""
          EndpointAttributes:
            DeviceToken: ""
            VoipDeviceToken: ""
          AllowMessages: ""
          Name: ""
      properties:
        AppInstanceUserEndpoint:
          $ref: '#/components/schemas/DescribeAppInstanceUserEndpointResponse_AppInstanceUserEndpoint'
      type: object
    GetAppInstanceRetentionSettingsResponse:
      example:
        InitiateDeletionTimestamp: ""
        AppInstanceRetentionSettings:
          ChannelRetentionSettings:
            RetentionDays: ""
      properties:
        AppInstanceRetentionSettings:
          $ref: '#/components/schemas/GetAppInstanceRetentionSettingsResponse_AppInstanceRetentionSettings'
        InitiateDeletionTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The timestamp representing the time at which the specified\
              \ items are retained, in Epoch Seconds."
      type: object
    ListAppInstanceAdminsResponse:
      example:
        NextToken: ""
        AppInstanceAdmins: ""
        AppInstanceArn: ""
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppInstance</code>.
        AppInstanceAdmins:
          allOf:
          - $ref: '#/components/schemas/AppInstanceAdminList'
          - description: The information for each administrator.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned from previous API requests until the number
              of administrators is reached.
      type: object
    ListAppInstanceBotsResponse:
      example:
        NextToken: ""
        AppInstanceArn: ""
        AppInstanceBots: ""
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the AppInstance.
        AppInstanceBots:
          allOf:
          - $ref: '#/components/schemas/AppInstanceBotList'
          - description: The information for each requested <code>AppInstanceBot</code>.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token passed by previous API calls until all requested
              bots are returned.
      type: object
    ListAppInstanceUserEndpointsResponse:
      example:
        NextToken: ""
        AppInstanceUserEndpoints: ""
      properties:
        AppInstanceUserEndpoints:
          allOf:
          - $ref: '#/components/schemas/AppInstanceUserEndpointSummaryList'
          - description: The information for each requested <code>AppInstanceUserEndpoint</code>.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token passed by previous API calls until all requested
              endpoints are returned.
      type: object
    ListAppInstanceUsersResponse:
      example:
        NextToken: ""
        AppInstanceUsers: ""
        AppInstanceArn: ""
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppInstance</code>.
        AppInstanceUsers:
          allOf:
          - $ref: '#/components/schemas/AppInstanceUserList'
          - description: The information for each requested <code>AppInstanceUser</code>.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token passed by previous API calls until all requested
              users are returned.
      type: object
    ListAppInstancesResponse:
      example:
        NextToken: ""
        AppInstances: ""
      properties:
        AppInstances:
          allOf:
          - $ref: '#/components/schemas/AppInstanceList'
          - description: The information for each <code>AppInstance</code>.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token passed by previous API requests until the maximum
              number of <code>AppInstance</code>s is reached.
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tag key-value pairs.
      type: object
    PutAppInstanceRetentionSettingsResponse:
      example:
        InitiateDeletionTimestamp: ""
        AppInstanceRetentionSettings:
          ChannelRetentionSettings:
            RetentionDays: ""
      properties:
        AppInstanceRetentionSettings:
          $ref: '#/components/schemas/PutAppInstanceRetentionSettingsResponse_AppInstanceRetentionSettings'
        InitiateDeletionTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the API deletes data.
      type: object
    ChannelRetentionSettings:
      description: The details of the retention settings for a channel.
      properties:
        RetentionDays:
          allOf:
          - $ref: '#/components/schemas/RetentionDays'
          - description: The time in days to retain the messages in a channel.
      type: object
    PutAppInstanceUserExpirationSettingsResponse:
      example:
        AppInstanceUserArn: ""
        ExpirationSettings:
          ExpirationCriterion: ""
          ExpirationDays: ""
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppInstanceUser</code>.
        ExpirationSettings:
          $ref: '#/components/schemas/PutAppInstanceUserExpirationSettingsResponse_ExpirationSettings'
      type: object
    RegisterAppInstanceUserEndpointResponse:
      example:
        AppInstanceUserArn: ""
        EndpointId: ""
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppInstanceUser</code>.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/String64'
          - description: The unique identifier of the <code>AppInstanceUserEndpoint</code>.
      type: object
    NonEmptySensitiveString1600:
      format: password
      maxLength: 1600
      minLength: 1
      pattern: .*
      type: string
    TagKey:
      format: password
      maxLength: 128
      minLength: 1
      type: string
    UpdateAppInstanceResponse:
      example:
        AppInstanceArn: ""
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppInstance</code>.
      type: object
    UpdateAppInstanceBotResponse:
      example:
        AppInstanceBotArn: ""
      properties:
        AppInstanceBotArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppInstanceBot</code>.
      type: object
    UpdateAppInstanceUserResponse:
      example:
        AppInstanceUserArn: ""
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppInstanceUser</code>.
      type: object
    UpdateAppInstanceUserEndpointResponse:
      example:
        AppInstanceUserArn: ""
        EndpointId: ""
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppInstanceUser</code>.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/String64'
          - description: The unique identifier of the <code>AppInstanceUserEndpoint</code>.
      type: object
    AllowMessages:
      enum:
      - ALL
      - NONE
      type: string
    ChimeArn:
      maxLength: 1600
      minLength: 5
      pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
        .]{0,63}:[^/].{0,1023}"
      type: string
    NonEmptyResourceName:
      format: password
      maxLength: 256
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    Timestamp:
      format: date-time
      type: string
    Metadata:
      format: password
      maxLength: 1024
      minLength: 0
      pattern: .*
      type: string
    AppInstance:
      description: "The details of an <code>AppInstance</code>, an instance of an\
        \ Amazon Chime SDK messaging application."
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the messaging instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          - description: The name of an <code>AppInstance</code>.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which an <code>AppInstance</code> was created.
              In epoch milliseconds.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time an <code>AppInstance</code> was last updated. In
              epoch milliseconds.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The metadata of an <code>AppInstance</code>.
      type: object
    Identity:
      description: The details of a user or bot.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN in an Identity.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name in an Identity.
      type: object
    AppInstanceAdmin:
      description: The name and ARN of the admin for the <code>AppInstance</code>.
      properties:
        Admin:
          $ref: '#/components/schemas/AppInstanceAdmin_Admin'
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppInstance</code> for which the user
              is an administrator.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which an administrator was created.
      type: object
    AppInstanceAdminSummary:
      description: Summary of the details of an <code>AppInstanceAdmin</code>.
      properties:
        Admin:
          $ref: '#/components/schemas/AppInstanceAdminSummary_Admin'
      type: object
    AppInstanceAdminList:
      items:
        $ref: '#/components/schemas/AppInstanceAdminSummary'
      type: array
    ResourceName:
      format: password
      maxLength: 256
      minLength: 0
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\\
        uFFFD\\u10000-\\u10FFFF]*"
      type: string
    Configuration:
      description: A structure that contains configuration data.
      properties:
        Lex:
          $ref: '#/components/schemas/CreateAppInstanceBot_request_Configuration_Lex'
      required:
      - Lex
      type: object
    AppInstanceBot:
      description: An Amazon Lex V2 chat bot created under an <code>AppInstance</code>.
      properties:
        AppInstanceBotArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the AppInstanceBot.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the AppInstanceBot.
        Configuration:
          $ref: '#/components/schemas/AppInstanceBot_Configuration'
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the <code>AppInstanceBot</code> was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the <code>AppInstanceBot</code> was last
              updated.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The metadata for an AppInstanceBot.
      type: object
    AppInstanceBotSummary:
      description: High-level information about an AppInstanceBot.
      properties:
        AppInstanceBotArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the AppInstanceBot.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the AppInstanceBox.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The metadata of the AppInstanceBot.
      type: object
    AppInstanceBotList:
      items:
        $ref: '#/components/schemas/AppInstanceBotSummary'
      type: array
    AppInstanceSummary:
      description: Summary of the data for an <code>AppInstance</code>.
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The <code>AppInstance</code> ARN.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          - description: The name of the <code>AppInstance</code>.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The metadata of the <code>AppInstance</code>.
      type: object
    AppInstanceList:
      items:
        $ref: '#/components/schemas/AppInstanceSummary'
      type: array
    AppInstanceRetentionSettings:
      description: The details of the data-retention settings for an <code>AppInstance</code>.
      properties:
        ChannelRetentionSettings:
          $ref: '#/components/schemas/PutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings'
      type: object
    UserName:
      format: password
      maxLength: 100
      minLength: 1
      pattern: .*\S.*
      type: string
    ExpirationSettings:
      description: Determines the interval after which an <code>AppInstanceUser</code>
        is automatically deleted.
      properties:
        ExpirationDays:
          allOf:
          - $ref: '#/components/schemas/ExpirationDays'
          - description: The period in days after which an <code>AppInstanceUser</code>
              will be automatically deleted.
        ExpirationCriterion:
          allOf:
          - $ref: '#/components/schemas/ExpirationCriterion'
          - description: Specifies the conditions under which an <code>AppInstanceUser</code>
              will expire.
      required:
      - ExpirationCriterion
      - ExpirationDays
      type: object
    AppInstanceUser:
      description: The details of an <code>AppInstanceUser</code>.
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppInstanceUser</code>.
        Name:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The name of the <code>AppInstanceUser</code>.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The metadata of the <code>AppInstanceUser</code>.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the <code>AppInstanceUser</code> was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the <code>AppInstanceUser</code> was last
              updated.
        ExpirationSettings:
          $ref: '#/components/schemas/AppInstanceUser_ExpirationSettings'
      type: object
    String64:
      maxLength: 64
      minLength: 0
      pattern: .*
      type: string
    SensitiveString1600:
      format: password
      maxLength: 1600
      minLength: 0
      pattern: .*
      type: string
    AppInstanceUserEndpointType:
      enum:
      - APNS
      - APNS_SANDBOX
      - GCM
      type: string
    EndpointAttributes:
      description: The attributes of an <code>Endpoint</code>.
      properties:
        DeviceToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptySensitiveString1600'
          - description: "The device token for the GCM, APNS, and APNS_SANDBOX endpoint\
              \ types."
        VoipDeviceToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptySensitiveString1600'
          - description: The VOIP device token for the APNS and APNS_SANDBOX endpoint
              types.
      required:
      - DeviceToken
      type: object
    EndpointState:
      description: "<p>A read-only field that represents the state of an <code>AppInstanceUserEndpoint</code>.\
        \ Supported values:</p> <ul> <li> <p> <code>ACTIVE</code>: The <code>AppInstanceUserEndpoint</code>\
        \ is active and able to receive messages. When <code>ACTIVE</code>, the <code>EndpointStatusReason</code>\
        \ remains empty.</p> </li> <li> <p> <code>INACTIVE</code>: The <code>AppInstanceUserEndpoint</code>\
        \ is inactive and can't receive message. When INACTIVE, the corresponding\
        \ reason will be conveyed through EndpointStatusReason.</p> </li> <li> <p>\
        \ <code>INVALID_DEVICE_TOKEN</code> indicates that an <code>AppInstanceUserEndpoint</code>\
        \ is <code>INACTIVE</code> due to invalid device token</p> </li> <li> <p>\
        \ <code>INVALID_PINPOINT_ARN</code> indicates that an <code>AppInstanceUserEndpoint</code>\
        \ is <code>INACTIVE</code> due to an invalid pinpoint ARN that was input through\
        \ the <code>ResourceArn</code> field.</p> </li> </ul>"
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/EndpointStatus'
          - description: Enum that indicates the Status of an <code>AppInstanceUserEndpoint</code>.
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/EndpointStatusReason'
          - description: The reason for the <code>EndpointStatus</code>.
      required:
      - Status
      type: object
    AppInstanceUserEndpoint:
      description: "An endpoint under an Amazon Chime <code>AppInstanceUser</code>\
        \ that receives messages for a user. For push notifications, the endpoint\
        \ is a mobile device used to receive mobile push notifications for a user."
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppInstanceUser</code>.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/String64'
          - description: The unique identifier of the <code>AppInstanceUserEndpoint</code>.
        Name:
          allOf:
          - $ref: '#/components/schemas/SensitiveString1600'
          - description: The name of the <code>AppInstanceUserEndpoint</code>.
        Type:
          allOf:
          - $ref: '#/components/schemas/AppInstanceUserEndpointType'
          - description: The type of the <code>AppInstanceUserEndpoint</code>.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the resource to which the endpoint belongs.
        EndpointAttributes:
          $ref: '#/components/schemas/AppInstanceUserEndpoint_EndpointAttributes'
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which an <code>AppInstanceUserEndpoint</code>
              was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which an <code>AppInstanceUserEndpoint</code>
              was last updated.
        AllowMessages:
          allOf:
          - $ref: '#/components/schemas/AllowMessages'
          - description: Boolean that controls whether the <code>AppInstanceUserEndpoint</code>
              is opted in to receive messages. <code>ALL</code> indicates the endpoint
              will receive all messages. <code>NONE</code> indicates the endpoint
              will receive no messages.
        EndpointState:
          $ref: '#/components/schemas/AppInstanceUserEndpoint_EndpointState'
      type: object
    AppInstanceUserEndpointSummary:
      description: Summary of the details of an <code>AppInstanceUserEndpoint</code>.
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppInstanceUser</code>.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/String64'
          - description: The unique identifier of the <code>AppInstanceUserEndpoint</code>.
        Name:
          allOf:
          - $ref: '#/components/schemas/SensitiveString1600'
          - description: The name of the <code>AppInstanceUserEndpoint</code>.
        Type:
          allOf:
          - $ref: '#/components/schemas/AppInstanceUserEndpointType'
          - description: The type of the <code>AppInstanceUserEndpoint</code>.
        AllowMessages:
          allOf:
          - $ref: '#/components/schemas/AllowMessages'
          - description: BBoolean that controls whether the <code>AppInstanceUserEndpoint</code>
              is opted in to receive messages. <code>ALL</code> indicates the endpoint
              will receive all messages. <code>NONE</code> indicates the endpoint
              will receive no messages.
        EndpointState:
          $ref: '#/components/schemas/AppInstanceUserEndpointSummary_EndpointState'
      type: object
    AppInstanceUserEndpointSummaryList:
      items:
        $ref: '#/components/schemas/AppInstanceUserEndpointSummary'
      type: array
    AppInstanceUserSummary:
      description: Summary of the details of an <code>AppInstanceUser</code>.
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppInstanceUser</code>.
        Name:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The name of an <code>AppInstanceUser</code>.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The metadata of the <code>AppInstanceUser</code>.
      type: object
    AppInstanceUserList:
      items:
        $ref: '#/components/schemas/AppInstanceUserSummary'
      type: array
    RetentionDays:
      maximum: 5475
      minimum: 1
      type: integer
    ClientRequestToken:
      maxLength: 64
      minLength: 2
      pattern: "[-_a-zA-Z0-9]*"
      type: string
    CreateAppInstanceAdminRequest:
      example:
        AppInstanceAdminArn: ""
      properties:
        AppInstanceAdminArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the administrator of the current <code>AppInstance</code>.
      required:
      - AppInstanceAdminArn
      title: CreateAppInstanceAdminRequest
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      minItems: 1
      type: array
    CreateAppInstanceBotRequest:
      example:
        ClientRequestToken: ""
        Configuration:
          Lex:
            LexBotAliasArn: ""
            InvokedBy:
              StandardMessages: ""
              TargetedMessages: ""
            LocaleId: ""
            RespondsTo: ""
            WelcomeIntent: ""
        Metadata: ""
        AppInstanceArn: ""
        Tags: ""
        Name: ""
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppInstance</code> request.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The user's name.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The request metadata. Limited to a 1KB string in UTF-8.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The unique ID for the client making the request. Use different
              tokens for different <code>AppInstanceBots</code>.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags assigned to the <code>AppInstanceBot</code>.
        Configuration:
          $ref: '#/components/schemas/CreateAppInstanceBotRequest_Configuration'
      required:
      - AppInstanceArn
      - ClientRequestToken
      - Configuration
      title: CreateAppInstanceBotRequest
      type: object
    CreateAppInstanceRequest:
      example:
        ClientRequestToken: ""
        Metadata: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          - description: The name of the <code>AppInstance</code>.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The metadata of the <code>AppInstance</code>. Limited to
              a 1KB string in UTF-8.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The unique ID of the request. Use different tokens to create
              different <code>AppInstances</code>.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Tags assigned to the <code>AppInstance</code>.
      required:
      - ClientRequestToken
      - Name
      title: CreateAppInstanceRequest
      type: object
    UserId:
      format: password
      maxLength: 64
      minLength: 1
      pattern: "[A-Za-z0-9]([A-Za-z0-9\\:\\-\\_\\.\\@]{0,62}[A-Za-z0-9])?"
      type: string
    CreateAppInstanceUserRequest:
      example:
        ClientRequestToken: ""
        AppInstanceUserId: ""
        ExpirationSettings:
          ExpirationCriterion: ""
          ExpirationDays: ""
        Metadata: ""
        AppInstanceArn: ""
        Tags: ""
        Name: ""
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the <code>AppInstance</code> request.
        AppInstanceUserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: The user ID of the <code>AppInstance</code>.
        Name:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The user's name.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The request's metadata. Limited to a 1KB string in UTF-8.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The unique ID of the request. Use different tokens to request
              additional <code>AppInstances</code>.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Tags assigned to the <code>AppInstanceUser</code>.
        ExpirationSettings:
          $ref: '#/components/schemas/CreateAppInstanceUserRequest_ExpirationSettings'
      required:
      - AppInstanceArn
      - AppInstanceUserId
      - ClientRequestToken
      - Name
      title: CreateAppInstanceUserRequest
      type: object
    DeleteAppInstanceAdminRequest:
      properties: {}
      title: DeleteAppInstanceAdminRequest
      type: object
    DeleteAppInstanceBotRequest:
      properties: {}
      title: DeleteAppInstanceBotRequest
      type: object
    DeleteAppInstanceRequest:
      properties: {}
      title: DeleteAppInstanceRequest
      type: object
    DeleteAppInstanceUserRequest:
      properties: {}
      title: DeleteAppInstanceUserRequest
      type: object
    DeregisterAppInstanceUserEndpointRequest:
      properties: {}
      title: DeregisterAppInstanceUserEndpointRequest
      type: object
    DescribeAppInstanceAdminRequest:
      properties: {}
      title: DescribeAppInstanceAdminRequest
      type: object
    DescribeAppInstanceBotRequest:
      properties: {}
      title: DescribeAppInstanceBotRequest
      type: object
    DescribeAppInstanceRequest:
      properties: {}
      title: DescribeAppInstanceRequest
      type: object
    String1600:
      maxLength: 1600
      minLength: 0
      pattern: .*
      type: string
    DescribeAppInstanceUserEndpointRequest:
      properties: {}
      title: DescribeAppInstanceUserEndpointRequest
      type: object
    DescribeAppInstanceUserRequest:
      properties: {}
      title: DescribeAppInstanceUserRequest
      type: object
    EndpointStatus:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
    EndpointStatusReason:
      enum:
      - INVALID_DEVICE_TOKEN
      - INVALID_PINPOINT_ARN
      type: string
    GetAppInstanceRetentionSettingsRequest:
      properties: {}
      title: GetAppInstanceRetentionSettingsRequest
      type: object
    StandardMessages:
      enum:
      - AUTO
      - ALL
      - MENTIONS
      - NONE
      type: string
    TargetedMessages:
      enum:
      - ALL
      - NONE
      type: string
    InvokedBy:
      description: Specifies the type of message that triggers a bot.
      properties:
        StandardMessages:
          allOf:
          - $ref: '#/components/schemas/StandardMessages'
          - description: "<p>Sets standard messages as the bot trigger. For standard\
              \ messages:</p> <ul> <li> <p> <code>ALL</code>: The bot processes all\
              \ standard messages.</p> </li> <li> <p> <code>AUTO</code>: The bot responds\
              \ to ALL messages when the channel has one other non-hidden member,\
              \ and responds to MENTIONS when the channel has more than one other\
              \ non-hidden member.</p> </li> <li> <p> <code>MENTIONS</code>: The bot\
              \ processes all standard messages that have a message attribute with\
              \ <code>CHIME.mentions</code> and a value of the bot ARN.</p> </li>\
              \ <li> <p> <code>NONE</code>: The bot processes no standard messages.</p>\
              \ </li> </ul>"
        TargetedMessages:
          allOf:
          - $ref: '#/components/schemas/TargetedMessages'
          - description: "<p>Sets targeted messages as the bot trigger. For targeted\
              \ messages:</p> <ul> <li> <p> <code>ALL</code>: The bot processes all\
              \ <code>TargetedMessages</code> sent to it. The bot then responds with\
              \ a targeted message back to the sender. </p> </li> <li> <p> <code>NONE</code>:\
              \ The bot processes no targeted messages.</p> </li> </ul>"
      required:
      - StandardMessages
      - TargetedMessages
      type: object
    LexBotAliasArn:
      maxLength: 2048
      minLength: 15
      pattern: "arn:aws:lex:[a-z]{2}-[a-z]+-\\d{1}:\\d{12}:bot-alias/[A-Z0-9]{10}/[A-Z0-9]{10}"
      type: string
    RespondsTo:
      enum:
      - STANDARD_MESSAGES
      type: string
    String:
      type: string
    LexIntentName:
      maxLength: 100
      minLength: 1
      pattern: "^([A-Za-z]_?)+$"
      type: string
    MaxResults:
      maximum: 50
      minimum: 1
      type: integer
    NextToken:
      format: password
      maxLength: 2048
      minLength: 0
      pattern: .*
      type: string
    ListAppInstanceAdminsRequest:
      properties: {}
      title: ListAppInstanceAdminsRequest
      type: object
    ListAppInstanceBotsRequest:
      properties: {}
      title: ListAppInstanceBotsRequest
      type: object
    SensitiveChimeArn:
      format: password
      maxLength: 1600
      minLength: 5
      pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
        .]{0,63}:[^/].{0,1023}"
      type: string
    ListAppInstanceUserEndpointsRequest:
      properties: {}
      title: ListAppInstanceUserEndpointsRequest
      type: object
    ListAppInstanceUsersRequest:
      properties: {}
      title: ListAppInstanceUsersRequest
      type: object
    ListAppInstancesRequest:
      properties: {}
      title: ListAppInstancesRequest
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    PutAppInstanceRetentionSettingsRequest:
      example:
        AppInstanceRetentionSettings:
          ChannelRetentionSettings:
            RetentionDays: ""
      properties:
        AppInstanceRetentionSettings:
          $ref: '#/components/schemas/PutAppInstanceRetentionSettingsResponse_AppInstanceRetentionSettings'
      required:
      - AppInstanceRetentionSettings
      title: PutAppInstanceRetentionSettingsRequest
      type: object
    PutAppInstanceUserExpirationSettingsRequest:
      example:
        ExpirationSettings:
          ExpirationCriterion: ""
          ExpirationDays: ""
      properties:
        ExpirationSettings:
          $ref: '#/components/schemas/PutAppInstanceUserExpirationSettingsResponse_ExpirationSettings'
      title: PutAppInstanceUserExpirationSettingsRequest
      type: object
    RegisterAppInstanceUserEndpointRequest:
      example:
        ResourceArn: ""
        ClientRequestToken: ""
        Type: ""
        EndpointAttributes:
          DeviceToken: ""
          VoipDeviceToken: ""
        AllowMessages: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/SensitiveString1600'
          - description: The name of the <code>AppInstanceUserEndpoint</code>.
        Type:
          allOf:
          - $ref: '#/components/schemas/AppInstanceUserEndpointType'
          - description: "<p>The type of the <code>AppInstanceUserEndpoint</code>.\
              \ Supported types:</p> <ul> <li> <p> <code>APNS</code>: The mobile notification\
              \ service for an Apple device.</p> </li> <li> <p> <code>APNS_SANDBOX</code>:\
              \ The sandbox environment of the mobile notification service for an\
              \ Apple device.</p> </li> <li> <p> <code>GCM</code>: The mobile notification\
              \ service for an Android device.</p> </li> </ul> <p>Populate the <code>ResourceArn</code>\
              \ value of each type as <code>PinpointAppArn</code>.</p>"
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The ARN of the resource to which the endpoint belongs.
        EndpointAttributes:
          $ref: '#/components/schemas/AppInstanceUserEndpoint_EndpointAttributes'
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The unique ID assigned to the request. Use different tokens
              to register other endpoints.
        AllowMessages:
          allOf:
          - $ref: '#/components/schemas/AllowMessages'
          - description: Boolean that controls whether the AppInstanceUserEndpoint
              is opted in to receive messages. <code>ALL</code> indicates the endpoint
              receives all messages. <code>NONE</code> indicates the endpoint receives
              no messages.
      required:
      - ClientRequestToken
      - EndpointAttributes
      - ResourceArn
      - Type
      title: RegisterAppInstanceUserEndpointRequest
      type: object
    TagValue:
      format: password
      maxLength: 256
      minLength: 1
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    TagResourceRequest:
      example:
        ResourceARN: ""
        Tags: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The resource ARN.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tag key-value pairs.
      required:
      - ResourceARN
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      example:
        ResourceARN: ""
        TagKeys: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          - description: The resource ARN.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The tag keys.
      required:
      - ResourceARN
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateAppInstanceBotRequest:
      example:
        Configuration:
          Lex:
            LexBotAliasArn: ""
            InvokedBy:
              StandardMessages: ""
              TargetedMessages: ""
            LocaleId: ""
            RespondsTo: ""
            WelcomeIntent: ""
        Metadata: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: The name of the <code>AppInstanceBot</code>.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The metadata of the <code>AppInstanceBot</code>.
        Configuration:
          $ref: '#/components/schemas/UpdateAppInstanceBotRequest_Configuration'
      required:
      - Metadata
      - Name
      title: UpdateAppInstanceBotRequest
      type: object
    UpdateAppInstanceRequest:
      example:
        Metadata: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          - description: The name that you want to change.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The metadata that you want to change.
      required:
      - Metadata
      - Name
      title: UpdateAppInstanceRequest
      type: object
    UpdateAppInstanceUserEndpointRequest:
      example:
        AllowMessages: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/SensitiveString1600'
          - description: The name of the <code>AppInstanceUserEndpoint</code>.
        AllowMessages:
          allOf:
          - $ref: '#/components/schemas/AllowMessages'
          - description: Boolean that controls whether the <code>AppInstanceUserEndpoint</code>
              is opted in to receive messages. <code>ALL</code> indicates the endpoint
              will receive all messages. <code>NONE</code> indicates the endpoint
              will receive no messages.
      title: UpdateAppInstanceUserEndpointRequest
      type: object
    UpdateAppInstanceUserRequest:
      example:
        Metadata: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/UserName'
          - description: The name of the <code>AppInstanceUser</code>.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The metadata of the <code>AppInstanceUser</code>.
      required:
      - Metadata
      - Name
      title: UpdateAppInstanceUserRequest
      type: object
    CreateAppInstance_request:
      properties:
        Name:
          description: The name of the <code>AppInstance</code>.
          format: password
          maxLength: 256
          minLength: 1
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
            uE000-\\uFFFD\\u10000-\\u10FFFF]*"
          type: string
        Metadata:
          description: The metadata of the <code>AppInstance</code>. Limited to a
            1KB string in UTF-8.
          format: password
          maxLength: 1024
          minLength: 0
          pattern: .*
          type: string
        ClientRequestToken:
          description: The unique ID of the request. Use different tokens to create
            different <code>AppInstances</code>.
          maxLength: 64
          minLength: 2
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        Tags:
          description: Tags assigned to the <code>AppInstance</code>.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - ClientRequestToken
      - Name
      type: object
    CreateAppInstanceAdmin_request:
      properties:
        AppInstanceAdminArn:
          description: The ARN of the administrator of the current <code>AppInstance</code>.
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
      required:
      - AppInstanceAdminArn
      type: object
    CreateAppInstanceBot_request_Configuration_Lex:
      allOf:
      - $ref: '#/components/schemas/LexConfiguration'
      - description: The configuration for an Amazon Lex V2 bot.
      example:
        LexBotAliasArn: ""
        InvokedBy:
          StandardMessages: ""
          TargetedMessages: ""
        LocaleId: ""
        RespondsTo: ""
        WelcomeIntent: ""
    CreateAppInstanceBot_request_Configuration:
      description: A structure that contains configuration data.
      properties:
        Lex:
          $ref: '#/components/schemas/CreateAppInstanceBot_request_Configuration_Lex'
      type: object
    CreateAppInstanceBot_request:
      properties:
        AppInstanceArn:
          description: The ARN of the <code>AppInstance</code> request.
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        Name:
          description: The user's name.
          format: password
          maxLength: 256
          minLength: 0
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
            uE000-\\uFFFD\\u10000-\\u10FFFF]*"
          type: string
        Metadata:
          description: The request metadata. Limited to a 1KB string in UTF-8.
          format: password
          maxLength: 1024
          minLength: 0
          pattern: .*
          type: string
        ClientRequestToken:
          description: The unique ID for the client making the request. Use different
            tokens for different <code>AppInstanceBots</code>.
          maxLength: 64
          minLength: 2
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        Tags:
          description: The tags assigned to the <code>AppInstanceBot</code>.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 1
          type: array
        Configuration:
          $ref: '#/components/schemas/CreateAppInstanceBot_request_Configuration'
      required:
      - AppInstanceArn
      - ClientRequestToken
      - Configuration
      type: object
    CreateAppInstanceUser_request_ExpirationSettings:
      description: Determines the interval after which an <code>AppInstanceUser</code>
        is automatically deleted.
      properties:
        ExpirationDays:
          allOf:
          - $ref: '#/components/schemas/ExpirationDays'
          - description: The period in days after which an <code>AppInstanceUser</code>
              will be automatically deleted.
        ExpirationCriterion:
          allOf:
          - $ref: '#/components/schemas/ExpirationCriterion'
          - description: Specifies the conditions under which an <code>AppInstanceUser</code>
              will expire.
      type: object
    CreateAppInstanceUser_request:
      properties:
        AppInstanceArn:
          description: The ARN of the <code>AppInstance</code> request.
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        AppInstanceUserId:
          description: The user ID of the <code>AppInstance</code>.
          format: password
          maxLength: 64
          minLength: 1
          pattern: "[A-Za-z0-9]([A-Za-z0-9\\:\\-\\_\\.\\@]{0,62}[A-Za-z0-9])?"
          type: string
        Name:
          description: The user's name.
          format: password
          maxLength: 100
          minLength: 1
          pattern: .*\S.*
          type: string
        Metadata:
          description: The request's metadata. Limited to a 1KB string in UTF-8.
          format: password
          maxLength: 1024
          minLength: 0
          pattern: .*
          type: string
        ClientRequestToken:
          description: The unique ID of the request. Use different tokens to request
            additional <code>AppInstances</code>.
          maxLength: 64
          minLength: 2
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        Tags:
          description: Tags assigned to the <code>AppInstanceUser</code>.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 1
          type: array
        ExpirationSettings:
          $ref: '#/components/schemas/CreateAppInstanceUser_request_ExpirationSettings'
      required:
      - AppInstanceArn
      - AppInstanceUserId
      - ClientRequestToken
      - Name
      type: object
    UpdateAppInstance_request:
      properties:
        Name:
          description: The name that you want to change.
          format: password
          maxLength: 256
          minLength: 1
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
            uE000-\\uFFFD\\u10000-\\u10FFFF]*"
          type: string
        Metadata:
          description: The metadata that you want to change.
          format: password
          maxLength: 1024
          minLength: 0
          pattern: .*
          type: string
      required:
      - Metadata
      - Name
      type: object
    UpdateAppInstanceBot_request:
      properties:
        Name:
          description: The name of the <code>AppInstanceBot</code>.
          format: password
          maxLength: 256
          minLength: 0
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
            uE000-\\uFFFD\\u10000-\\u10FFFF]*"
          type: string
        Metadata:
          description: The metadata of the <code>AppInstanceBot</code>.
          format: password
          maxLength: 1024
          minLength: 0
          pattern: .*
          type: string
        Configuration:
          $ref: '#/components/schemas/CreateAppInstanceBot_request_Configuration'
      required:
      - Metadata
      - Name
      type: object
    UpdateAppInstanceUser_request:
      properties:
        Name:
          description: The name of the <code>AppInstanceUser</code>.
          format: password
          maxLength: 100
          minLength: 1
          pattern: .*\S.*
          type: string
        Metadata:
          description: The metadata of the <code>AppInstanceUser</code>.
          format: password
          maxLength: 1024
          minLength: 0
          pattern: .*
          type: string
      required:
      - Metadata
      - Name
      type: object
    UpdateAppInstanceUserEndpoint_request:
      properties:
        Name:
          description: The name of the <code>AppInstanceUserEndpoint</code>.
          format: password
          maxLength: 1600
          minLength: 0
          pattern: .*
          type: string
        AllowMessages:
          description: Boolean that controls whether the <code>AppInstanceUserEndpoint</code>
            is opted in to receive messages. <code>ALL</code> indicates the endpoint
            will receive all messages. <code>NONE</code> indicates the endpoint will
            receive no messages.
          enum:
          - ALL
          - NONE
          type: string
      type: object
    PutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings:
      allOf:
      - $ref: '#/components/schemas/ChannelRetentionSettings'
      - description: The length of time in days to retain the messages in a channel.
      example:
        RetentionDays: ""
    PutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings:
      description: The details of the data-retention settings for an <code>AppInstance</code>.
      properties:
        ChannelRetentionSettings:
          $ref: '#/components/schemas/PutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings'
      type: object
    PutAppInstanceRetentionSettings_request:
      properties:
        AppInstanceRetentionSettings:
          $ref: '#/components/schemas/PutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings'
      required:
      - AppInstanceRetentionSettings
      type: object
    RegisterAppInstanceUserEndpoint_request_EndpointAttributes:
      description: The attributes of an <code>Endpoint</code>.
      properties:
        DeviceToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptySensitiveString1600'
          - description: "The device token for the GCM, APNS, and APNS_SANDBOX endpoint\
              \ types."
        VoipDeviceToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptySensitiveString1600'
          - description: The VOIP device token for the APNS and APNS_SANDBOX endpoint
              types.
      type: object
    RegisterAppInstanceUserEndpoint_request:
      properties:
        Name:
          description: The name of the <code>AppInstanceUserEndpoint</code>.
          format: password
          maxLength: 1600
          minLength: 0
          pattern: .*
          type: string
        Type:
          description: "<p>The type of the <code>AppInstanceUserEndpoint</code>. Supported\
            \ types:</p> <ul> <li> <p> <code>APNS</code>: The mobile notification\
            \ service for an Apple device.</p> </li> <li> <p> <code>APNS_SANDBOX</code>:\
            \ The sandbox environment of the mobile notification service for an Apple\
            \ device.</p> </li> <li> <p> <code>GCM</code>: The mobile notification\
            \ service for an Android device.</p> </li> </ul> <p>Populate the <code>ResourceArn</code>\
            \ value of each type as <code>PinpointAppArn</code>.</p>"
          enum:
          - APNS
          - APNS_SANDBOX
          - GCM
          type: string
        ResourceArn:
          description: The ARN of the resource to which the endpoint belongs.
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        EndpointAttributes:
          $ref: '#/components/schemas/RegisterAppInstanceUserEndpoint_request_EndpointAttributes'
        ClientRequestToken:
          description: The unique ID assigned to the request. Use different tokens
            to register other endpoints.
          maxLength: 64
          minLength: 2
          pattern: "[-_a-zA-Z0-9]*"
          type: string
        AllowMessages:
          description: Boolean that controls whether the AppInstanceUserEndpoint is
            opted in to receive messages. <code>ALL</code> indicates the endpoint
            receives all messages. <code>NONE</code> indicates the endpoint receives
            no messages.
          enum:
          - ALL
          - NONE
          type: string
      required:
      - ClientRequestToken
      - EndpointAttributes
      - ResourceArn
      - Type
      type: object
    PutAppInstanceUserExpirationSettings_request:
      properties:
        ExpirationSettings:
          $ref: '#/components/schemas/CreateAppInstanceUser_request_ExpirationSettings'
      type: object
    TagResource_request:
      properties:
        ResourceARN:
          description: The resource ARN.
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        Tags:
          description: The tag key-value pairs.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - ResourceARN
      - Tags
      type: object
    UntagResource_request:
      properties:
        ResourceARN:
          description: The resource ARN.
          maxLength: 1600
          minLength: 5
          pattern: "arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\\
            .]{0,63}:[^/].{0,1023}"
          type: string
        TagKeys:
          description: The tag keys.
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - ResourceARN
      - TagKeys
      type: object
    CreateAppInstanceAdminResponse_AppInstanceAdmin:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: "The ARN and name of the administrator, the ARN of the <code>AppInstance</code>,\
          \ and the created and last-updated timestamps. All timestamps use epoch\
          \ milliseconds."
      example:
        Arn: ""
        Name: ""
    LexConfiguration_InvokedBy:
      allOf:
      - $ref: '#/components/schemas/InvokedBy'
      - description: Specifies the type of message that triggers a bot.
      example:
        StandardMessages: ""
        TargetedMessages: ""
    DescribeAppInstanceResponse_AppInstance:
      allOf:
      - $ref: '#/components/schemas/AppInstance'
      - description: "The ARN, metadata, created and last-updated timestamps, and\
          \ the name of the <code>AppInstance</code>. All timestamps use epoch milliseconds."
      example:
        CreatedTimestamp: ""
        LastUpdatedTimestamp: ""
        Metadata: ""
        AppInstanceArn: ""
        Name: ""
    DescribeAppInstanceAdminResponse_AppInstanceAdmin:
      allOf:
      - $ref: '#/components/schemas/AppInstanceAdmin'
      - description: "The ARN and name of the <code>AppInstanceUser</code>, the ARN\
          \ of the <code>AppInstance</code>, and the created and last-updated timestamps.\
          \ All timestamps use epoch milliseconds."
      example:
        CreatedTimestamp: ""
        Admin:
          Arn: ""
          Name: ""
        AppInstanceArn: ""
    DescribeAppInstanceBotResponse_AppInstanceBot:
      allOf:
      - $ref: '#/components/schemas/AppInstanceBot'
      - description: The detials of the <code>AppInstanceBot</code>.
      example:
        CreatedTimestamp: ""
        Configuration:
          Lex:
            LexBotAliasArn: ""
            InvokedBy:
              StandardMessages: ""
              TargetedMessages: ""
            LocaleId: ""
            RespondsTo: ""
            WelcomeIntent: ""
        LastUpdatedTimestamp: ""
        Metadata: ""
        AppInstanceBotArn: ""
        Name: ""
    DescribeAppInstanceUserResponse_AppInstanceUser:
      allOf:
      - $ref: '#/components/schemas/AppInstanceUser'
      - description: The name of the <code>AppInstanceUser</code>.
      example:
        AppInstanceUserArn: ""
        CreatedTimestamp: ""
        ExpirationSettings:
          ExpirationCriterion: ""
          ExpirationDays: ""
        LastUpdatedTimestamp: ""
        Metadata: ""
        Name: ""
    DescribeAppInstanceUserEndpointResponse_AppInstanceUserEndpoint:
      allOf:
      - $ref: '#/components/schemas/AppInstanceUserEndpoint'
      - description: "The full details of an <code>AppInstanceUserEndpoint</code>:\
          \ the <code>AppInstanceUserArn</code>, ID, name, type, resource ARN, attributes,\
          \ allow messages, state, and created and last updated timestamps. All timestamps\
          \ use epoch milliseconds."
      example:
        AppInstanceUserArn: ""
        EndpointState:
          Status: ""
          StatusReason: ""
        ResourceArn: ""
        Type: ""
        CreatedTimestamp: ""
        EndpointId: ""
        LastUpdatedTimestamp: ""
        EndpointAttributes:
          DeviceToken: ""
          VoipDeviceToken: ""
        AllowMessages: ""
        Name: ""
    GetAppInstanceRetentionSettingsResponse_AppInstanceRetentionSettings:
      allOf:
      - $ref: '#/components/schemas/AppInstanceRetentionSettings'
      - description: The retention settings for the <code>AppInstance</code>.
      example:
        ChannelRetentionSettings:
          RetentionDays: ""
    PutAppInstanceRetentionSettingsResponse_AppInstanceRetentionSettings:
      allOf:
      - $ref: '#/components/schemas/AppInstanceRetentionSettings'
      - description: "The time in days to retain data. Data type: number."
      example:
        ChannelRetentionSettings:
          RetentionDays: ""
    PutAppInstanceUserExpirationSettingsResponse_ExpirationSettings:
      allOf:
      - $ref: '#/components/schemas/ExpirationSettings'
      - description: Settings that control the interval after which an <code>AppInstanceUser</code>
          is automatically deleted.
      example:
        ExpirationCriterion: ""
        ExpirationDays: ""
    AppInstanceAdmin_Admin:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The <code>AppInstanceAdmin</code> data.
      example:
        Arn: ""
        Name: ""
    AppInstanceAdminSummary_Admin:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: The details of the <code>AppInstanceAdmin</code>.
    AppInstanceBot_Configuration:
      allOf:
      - $ref: '#/components/schemas/Configuration'
      - description: The data processing instructions for an AppInstanceBot.
      example:
        Lex:
          LexBotAliasArn: ""
          InvokedBy:
            StandardMessages: ""
            TargetedMessages: ""
          LocaleId: ""
          RespondsTo: ""
          WelcomeIntent: ""
    AppInstanceUser_ExpirationSettings:
      allOf:
      - $ref: '#/components/schemas/ExpirationSettings'
      - description: The interval after which an <code>AppInstanceUser</code> is automatically
          deleted.
      example:
        ExpirationCriterion: ""
        ExpirationDays: ""
    AppInstanceUserEndpoint_EndpointAttributes:
      allOf:
      - $ref: '#/components/schemas/EndpointAttributes'
      - description: The attributes of an <code>Endpoint</code>.
      example:
        DeviceToken: ""
        VoipDeviceToken: ""
    AppInstanceUserEndpoint_EndpointState:
      allOf:
      - $ref: '#/components/schemas/EndpointState'
      - description: "<p>A read-only field that represents the state of an <code>AppInstanceUserEndpoint</code>.\
          \ Supported values:</p> <ul> <li> <p> <code>ACTIVE</code>: The <code>AppInstanceUserEndpoint</code>\
          \ is active and able to receive messages. When <code>ACTIVE</code>, the\
          \ <code>EndpointStatusReason</code> remains empty.</p> </li> <li> <p> <code>INACTIVE</code>:\
          \ The <code>AppInstanceUserEndpoint</code> is inactive and can't receive\
          \ message. When <code>INACTIVE</code>, the corresponding reason will be\
          \ conveyed through <code>EndpointStatusReason</code>.</p> </li> <li> <p>\
          \ <code>INVALID_DEVICE_TOKEN</code> indicates that an <code>AppInstanceUserEndpoint</code>\
          \ is <code>INACTIVE</code> due to invalid device token</p> </li> <li> <p>\
          \ <code>INVALID_PINPOINT_ARN</code> indicates that an <code>AppInstanceUserEndpoint</code>\
          \ is <code>INACTIVE</code> due to an invalid pinpoint ARN that was input\
          \ through the <code>ResourceArn</code> field.</p> </li> </ul>"
      example:
        Status: ""
        StatusReason: ""
    AppInstanceUserEndpointSummary_EndpointState:
      allOf:
      - $ref: '#/components/schemas/EndpointState'
      - description: A read-only field that represent the state of an <code>AppInstanceUserEndpoint</code>.
    CreateAppInstanceBotRequest_Configuration:
      allOf:
      - $ref: '#/components/schemas/Configuration'
      - description: Configuration information about the Amazon Lex V2 V2 bot.
      example:
        Lex:
          LexBotAliasArn: ""
          InvokedBy:
            StandardMessages: ""
            TargetedMessages: ""
          LocaleId: ""
          RespondsTo: ""
          WelcomeIntent: ""
    CreateAppInstanceUserRequest_ExpirationSettings:
      allOf:
      - $ref: '#/components/schemas/ExpirationSettings'
      - description: Settings that control the interval after which the <code>AppInstanceUser</code>
          is automatically deleted.
      example:
        ExpirationCriterion: ""
        ExpirationDays: ""
    UpdateAppInstanceBotRequest_Configuration:
      allOf:
      - $ref: '#/components/schemas/Configuration'
      - description: The configuration for the bot update.
      example:
        Lex:
          LexBotAliasArn: ""
          InvokedBy:
            StandardMessages: ""
            TargetedMessages: ""
          LocaleId: ""
          RespondsTo: ""
          WelcomeIntent: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

