# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.endpoint_status import EndpointStatus
from openapi_server.models.endpoint_status_reason import EndpointStatusReason
from openapi_server import util


class AppInstanceUserEndpointEndpointState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: EndpointStatus=None, status_reason: EndpointStatusReason=None):
        """AppInstanceUserEndpointEndpointState - a model defined in OpenAPI

        :param status: The status of this AppInstanceUserEndpointEndpointState.
        :param status_reason: The status_reason of this AppInstanceUserEndpointEndpointState.
        """
        self.openapi_types = {
            'status': EndpointStatus,
            'status_reason': EndpointStatusReason
        }

        self.attribute_map = {
            'status': 'Status',
            'status_reason': 'StatusReason'
        }

        self._status = status
        self._status_reason = status_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppInstanceUserEndpointEndpointState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppInstanceUserEndpoint_EndpointState of this AppInstanceUserEndpointEndpointState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this AppInstanceUserEndpointEndpointState.


        :return: The status of this AppInstanceUserEndpointEndpointState.
        :rtype: EndpointStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AppInstanceUserEndpointEndpointState.


        :param status: The status of this AppInstanceUserEndpointEndpointState.
        :type status: EndpointStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def status_reason(self):
        """Gets the status_reason of this AppInstanceUserEndpointEndpointState.


        :return: The status_reason of this AppInstanceUserEndpointEndpointState.
        :rtype: EndpointStatusReason
        """
        return self._status_reason

    @status_reason.setter
    def status_reason(self, status_reason):
        """Sets the status_reason of this AppInstanceUserEndpointEndpointState.


        :param status_reason: The status_reason of this AppInstanceUserEndpointEndpointState.
        :type status_reason: EndpointStatusReason
        """

        self._status_reason = status_reason
