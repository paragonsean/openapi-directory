# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppInstanceUserEndpointEndpointAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_token: str=None, voip_device_token: str=None):
        """AppInstanceUserEndpointEndpointAttributes - a model defined in OpenAPI

        :param device_token: The device_token of this AppInstanceUserEndpointEndpointAttributes.
        :param voip_device_token: The voip_device_token of this AppInstanceUserEndpointEndpointAttributes.
        """
        self.openapi_types = {
            'device_token': str,
            'voip_device_token': str
        }

        self.attribute_map = {
            'device_token': 'DeviceToken',
            'voip_device_token': 'VoipDeviceToken'
        }

        self._device_token = device_token
        self._voip_device_token = voip_device_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppInstanceUserEndpointEndpointAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppInstanceUserEndpoint_EndpointAttributes of this AppInstanceUserEndpointEndpointAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_token(self):
        """Gets the device_token of this AppInstanceUserEndpointEndpointAttributes.


        :return: The device_token of this AppInstanceUserEndpointEndpointAttributes.
        :rtype: str
        """
        return self._device_token

    @device_token.setter
    def device_token(self, device_token):
        """Sets the device_token of this AppInstanceUserEndpointEndpointAttributes.


        :param device_token: The device_token of this AppInstanceUserEndpointEndpointAttributes.
        :type device_token: str
        """
        if device_token is None:
            raise ValueError("Invalid value for `device_token`, must not be `None`")

        self._device_token = device_token

    @property
    def voip_device_token(self):
        """Gets the voip_device_token of this AppInstanceUserEndpointEndpointAttributes.


        :return: The voip_device_token of this AppInstanceUserEndpointEndpointAttributes.
        :rtype: str
        """
        return self._voip_device_token

    @voip_device_token.setter
    def voip_device_token(self, voip_device_token):
        """Sets the voip_device_token of this AppInstanceUserEndpointEndpointAttributes.


        :param voip_device_token: The voip_device_token of this AppInstanceUserEndpointEndpointAttributes.
        :type voip_device_token: str
        """

        self._voip_device_token = voip_device_token
