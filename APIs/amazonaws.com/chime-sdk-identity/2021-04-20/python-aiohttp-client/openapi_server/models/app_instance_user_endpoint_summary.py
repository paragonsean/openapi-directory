# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.allow_messages import AllowMessages
from openapi_server.models.app_instance_user_endpoint_summary_endpoint_state import AppInstanceUserEndpointSummaryEndpointState
from openapi_server.models.app_instance_user_endpoint_type import AppInstanceUserEndpointType
from openapi_server import util


class AppInstanceUserEndpointSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_instance_user_arn: str=None, endpoint_id: str=None, name: str=None, type: AppInstanceUserEndpointType=None, allow_messages: AllowMessages=None, endpoint_state: AppInstanceUserEndpointSummaryEndpointState=None):
        """AppInstanceUserEndpointSummary - a model defined in OpenAPI

        :param app_instance_user_arn: The app_instance_user_arn of this AppInstanceUserEndpointSummary.
        :param endpoint_id: The endpoint_id of this AppInstanceUserEndpointSummary.
        :param name: The name of this AppInstanceUserEndpointSummary.
        :param type: The type of this AppInstanceUserEndpointSummary.
        :param allow_messages: The allow_messages of this AppInstanceUserEndpointSummary.
        :param endpoint_state: The endpoint_state of this AppInstanceUserEndpointSummary.
        """
        self.openapi_types = {
            'app_instance_user_arn': str,
            'endpoint_id': str,
            'name': str,
            'type': AppInstanceUserEndpointType,
            'allow_messages': AllowMessages,
            'endpoint_state': AppInstanceUserEndpointSummaryEndpointState
        }

        self.attribute_map = {
            'app_instance_user_arn': 'AppInstanceUserArn',
            'endpoint_id': 'EndpointId',
            'name': 'Name',
            'type': 'Type',
            'allow_messages': 'AllowMessages',
            'endpoint_state': 'EndpointState'
        }

        self._app_instance_user_arn = app_instance_user_arn
        self._endpoint_id = endpoint_id
        self._name = name
        self._type = type
        self._allow_messages = allow_messages
        self._endpoint_state = endpoint_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppInstanceUserEndpointSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppInstanceUserEndpointSummary of this AppInstanceUserEndpointSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_instance_user_arn(self):
        """Gets the app_instance_user_arn of this AppInstanceUserEndpointSummary.


        :return: The app_instance_user_arn of this AppInstanceUserEndpointSummary.
        :rtype: str
        """
        return self._app_instance_user_arn

    @app_instance_user_arn.setter
    def app_instance_user_arn(self, app_instance_user_arn):
        """Sets the app_instance_user_arn of this AppInstanceUserEndpointSummary.


        :param app_instance_user_arn: The app_instance_user_arn of this AppInstanceUserEndpointSummary.
        :type app_instance_user_arn: str
        """

        self._app_instance_user_arn = app_instance_user_arn

    @property
    def endpoint_id(self):
        """Gets the endpoint_id of this AppInstanceUserEndpointSummary.


        :return: The endpoint_id of this AppInstanceUserEndpointSummary.
        :rtype: str
        """
        return self._endpoint_id

    @endpoint_id.setter
    def endpoint_id(self, endpoint_id):
        """Sets the endpoint_id of this AppInstanceUserEndpointSummary.


        :param endpoint_id: The endpoint_id of this AppInstanceUserEndpointSummary.
        :type endpoint_id: str
        """

        self._endpoint_id = endpoint_id

    @property
    def name(self):
        """Gets the name of this AppInstanceUserEndpointSummary.


        :return: The name of this AppInstanceUserEndpointSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AppInstanceUserEndpointSummary.


        :param name: The name of this AppInstanceUserEndpointSummary.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this AppInstanceUserEndpointSummary.


        :return: The type of this AppInstanceUserEndpointSummary.
        :rtype: AppInstanceUserEndpointType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AppInstanceUserEndpointSummary.


        :param type: The type of this AppInstanceUserEndpointSummary.
        :type type: AppInstanceUserEndpointType
        """

        self._type = type

    @property
    def allow_messages(self):
        """Gets the allow_messages of this AppInstanceUserEndpointSummary.


        :return: The allow_messages of this AppInstanceUserEndpointSummary.
        :rtype: AllowMessages
        """
        return self._allow_messages

    @allow_messages.setter
    def allow_messages(self, allow_messages):
        """Sets the allow_messages of this AppInstanceUserEndpointSummary.


        :param allow_messages: The allow_messages of this AppInstanceUserEndpointSummary.
        :type allow_messages: AllowMessages
        """

        self._allow_messages = allow_messages

    @property
    def endpoint_state(self):
        """Gets the endpoint_state of this AppInstanceUserEndpointSummary.


        :return: The endpoint_state of this AppInstanceUserEndpointSummary.
        :rtype: AppInstanceUserEndpointSummaryEndpointState
        """
        return self._endpoint_state

    @endpoint_state.setter
    def endpoint_state(self, endpoint_state):
        """Sets the endpoint_state of this AppInstanceUserEndpointSummary.


        :param endpoint_state: The endpoint_state of this AppInstanceUserEndpointSummary.
        :type endpoint_state: AppInstanceUserEndpointSummaryEndpointState
        """

        self._endpoint_state = endpoint_state
