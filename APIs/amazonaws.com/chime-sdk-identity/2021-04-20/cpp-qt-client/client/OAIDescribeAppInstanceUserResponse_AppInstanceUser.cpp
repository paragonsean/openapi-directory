/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAppInstanceUserResponse_AppInstanceUser.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAppInstanceUserResponse_AppInstanceUser::OAIDescribeAppInstanceUserResponse_AppInstanceUser(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAppInstanceUserResponse_AppInstanceUser::OAIDescribeAppInstanceUserResponse_AppInstanceUser() {
    this->initializeModel();
}

OAIDescribeAppInstanceUserResponse_AppInstanceUser::~OAIDescribeAppInstanceUserResponse_AppInstanceUser() {}

void OAIDescribeAppInstanceUserResponse_AppInstanceUser::initializeModel() {

    m_app_instance_user_arn_isSet = false;
    m_app_instance_user_arn_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_created_timestamp_isSet = false;
    m_created_timestamp_isValid = false;

    m_last_updated_timestamp_isSet = false;
    m_last_updated_timestamp_isValid = false;

    m_expiration_settings_isSet = false;
    m_expiration_settings_isValid = false;
}

void OAIDescribeAppInstanceUserResponse_AppInstanceUser::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAppInstanceUserResponse_AppInstanceUser::fromJsonObject(QJsonObject json) {

    m_app_instance_user_arn_isValid = ::OpenAPI::fromJsonValue(m_app_instance_user_arn, json[QString("AppInstanceUserArn")]);
    m_app_instance_user_arn_isSet = !json[QString("AppInstanceUserArn")].isNull() && m_app_instance_user_arn_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("Metadata")]);
    m_metadata_isSet = !json[QString("Metadata")].isNull() && m_metadata_isValid;

    m_created_timestamp_isValid = ::OpenAPI::fromJsonValue(m_created_timestamp, json[QString("CreatedTimestamp")]);
    m_created_timestamp_isSet = !json[QString("CreatedTimestamp")].isNull() && m_created_timestamp_isValid;

    m_last_updated_timestamp_isValid = ::OpenAPI::fromJsonValue(m_last_updated_timestamp, json[QString("LastUpdatedTimestamp")]);
    m_last_updated_timestamp_isSet = !json[QString("LastUpdatedTimestamp")].isNull() && m_last_updated_timestamp_isValid;

    m_expiration_settings_isValid = ::OpenAPI::fromJsonValue(m_expiration_settings, json[QString("ExpirationSettings")]);
    m_expiration_settings_isSet = !json[QString("ExpirationSettings")].isNull() && m_expiration_settings_isValid;
}

QString OAIDescribeAppInstanceUserResponse_AppInstanceUser::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAppInstanceUserResponse_AppInstanceUser::asJsonObject() const {
    QJsonObject obj;
    if (m_app_instance_user_arn_isSet) {
        obj.insert(QString("AppInstanceUserArn"), ::OpenAPI::toJsonValue(m_app_instance_user_arn));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_metadata_isSet) {
        obj.insert(QString("Metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_created_timestamp_isSet) {
        obj.insert(QString("CreatedTimestamp"), ::OpenAPI::toJsonValue(m_created_timestamp));
    }
    if (m_last_updated_timestamp_isSet) {
        obj.insert(QString("LastUpdatedTimestamp"), ::OpenAPI::toJsonValue(m_last_updated_timestamp));
    }
    if (m_expiration_settings.isSet()) {
        obj.insert(QString("ExpirationSettings"), ::OpenAPI::toJsonValue(m_expiration_settings));
    }
    return obj;
}

QString OAIDescribeAppInstanceUserResponse_AppInstanceUser::getAppInstanceUserArn() const {
    return m_app_instance_user_arn;
}
void OAIDescribeAppInstanceUserResponse_AppInstanceUser::setAppInstanceUserArn(const QString &app_instance_user_arn) {
    m_app_instance_user_arn = app_instance_user_arn;
    m_app_instance_user_arn_isSet = true;
}

bool OAIDescribeAppInstanceUserResponse_AppInstanceUser::is_app_instance_user_arn_Set() const{
    return m_app_instance_user_arn_isSet;
}

bool OAIDescribeAppInstanceUserResponse_AppInstanceUser::is_app_instance_user_arn_Valid() const{
    return m_app_instance_user_arn_isValid;
}

QString OAIDescribeAppInstanceUserResponse_AppInstanceUser::getName() const {
    return m_name;
}
void OAIDescribeAppInstanceUserResponse_AppInstanceUser::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDescribeAppInstanceUserResponse_AppInstanceUser::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDescribeAppInstanceUserResponse_AppInstanceUser::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIDescribeAppInstanceUserResponse_AppInstanceUser::getMetadata() const {
    return m_metadata;
}
void OAIDescribeAppInstanceUserResponse_AppInstanceUser::setMetadata(const QString &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIDescribeAppInstanceUserResponse_AppInstanceUser::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIDescribeAppInstanceUserResponse_AppInstanceUser::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QDateTime OAIDescribeAppInstanceUserResponse_AppInstanceUser::getCreatedTimestamp() const {
    return m_created_timestamp;
}
void OAIDescribeAppInstanceUserResponse_AppInstanceUser::setCreatedTimestamp(const QDateTime &created_timestamp) {
    m_created_timestamp = created_timestamp;
    m_created_timestamp_isSet = true;
}

bool OAIDescribeAppInstanceUserResponse_AppInstanceUser::is_created_timestamp_Set() const{
    return m_created_timestamp_isSet;
}

bool OAIDescribeAppInstanceUserResponse_AppInstanceUser::is_created_timestamp_Valid() const{
    return m_created_timestamp_isValid;
}

QDateTime OAIDescribeAppInstanceUserResponse_AppInstanceUser::getLastUpdatedTimestamp() const {
    return m_last_updated_timestamp;
}
void OAIDescribeAppInstanceUserResponse_AppInstanceUser::setLastUpdatedTimestamp(const QDateTime &last_updated_timestamp) {
    m_last_updated_timestamp = last_updated_timestamp;
    m_last_updated_timestamp_isSet = true;
}

bool OAIDescribeAppInstanceUserResponse_AppInstanceUser::is_last_updated_timestamp_Set() const{
    return m_last_updated_timestamp_isSet;
}

bool OAIDescribeAppInstanceUserResponse_AppInstanceUser::is_last_updated_timestamp_Valid() const{
    return m_last_updated_timestamp_isValid;
}

OAIAppInstanceUser_ExpirationSettings OAIDescribeAppInstanceUserResponse_AppInstanceUser::getExpirationSettings() const {
    return m_expiration_settings;
}
void OAIDescribeAppInstanceUserResponse_AppInstanceUser::setExpirationSettings(const OAIAppInstanceUser_ExpirationSettings &expiration_settings) {
    m_expiration_settings = expiration_settings;
    m_expiration_settings_isSet = true;
}

bool OAIDescribeAppInstanceUserResponse_AppInstanceUser::is_expiration_settings_Set() const{
    return m_expiration_settings_isSet;
}

bool OAIDescribeAppInstanceUserResponse_AppInstanceUser::is_expiration_settings_Valid() const{
    return m_expiration_settings_isValid;
}

bool OAIDescribeAppInstanceUserResponse_AppInstanceUser::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_instance_user_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAppInstanceUserResponse_AppInstanceUser::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
