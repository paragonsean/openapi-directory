/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin() {
    this->initializeModel();
}

OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::~OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin() {}

void OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::initializeModel() {

    m_admin_isSet = false;
    m_admin_isValid = false;

    m_app_instance_arn_isSet = false;
    m_app_instance_arn_isValid = false;

    m_created_timestamp_isSet = false;
    m_created_timestamp_isValid = false;
}

void OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::fromJsonObject(QJsonObject json) {

    m_admin_isValid = ::OpenAPI::fromJsonValue(m_admin, json[QString("Admin")]);
    m_admin_isSet = !json[QString("Admin")].isNull() && m_admin_isValid;

    m_app_instance_arn_isValid = ::OpenAPI::fromJsonValue(m_app_instance_arn, json[QString("AppInstanceArn")]);
    m_app_instance_arn_isSet = !json[QString("AppInstanceArn")].isNull() && m_app_instance_arn_isValid;

    m_created_timestamp_isValid = ::OpenAPI::fromJsonValue(m_created_timestamp, json[QString("CreatedTimestamp")]);
    m_created_timestamp_isSet = !json[QString("CreatedTimestamp")].isNull() && m_created_timestamp_isValid;
}

QString OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::asJsonObject() const {
    QJsonObject obj;
    if (m_admin.isSet()) {
        obj.insert(QString("Admin"), ::OpenAPI::toJsonValue(m_admin));
    }
    if (m_app_instance_arn_isSet) {
        obj.insert(QString("AppInstanceArn"), ::OpenAPI::toJsonValue(m_app_instance_arn));
    }
    if (m_created_timestamp_isSet) {
        obj.insert(QString("CreatedTimestamp"), ::OpenAPI::toJsonValue(m_created_timestamp));
    }
    return obj;
}

OAIAppInstanceAdmin_Admin OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::getAdmin() const {
    return m_admin;
}
void OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::setAdmin(const OAIAppInstanceAdmin_Admin &admin) {
    m_admin = admin;
    m_admin_isSet = true;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::is_admin_Set() const{
    return m_admin_isSet;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::is_admin_Valid() const{
    return m_admin_isValid;
}

QString OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::getAppInstanceArn() const {
    return m_app_instance_arn;
}
void OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::setAppInstanceArn(const QString &app_instance_arn) {
    m_app_instance_arn = app_instance_arn;
    m_app_instance_arn_isSet = true;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::is_app_instance_arn_Set() const{
    return m_app_instance_arn_isSet;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::is_app_instance_arn_Valid() const{
    return m_app_instance_arn_isValid;
}

QDateTime OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::getCreatedTimestamp() const {
    return m_created_timestamp;
}
void OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::setCreatedTimestamp(const QDateTime &created_timestamp) {
    m_created_timestamp = created_timestamp;
    m_created_timestamp_isSet = true;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::is_created_timestamp_Set() const{
    return m_created_timestamp_isSet;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::is_created_timestamp_Valid() const{
    return m_created_timestamp_isValid;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_instance_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
