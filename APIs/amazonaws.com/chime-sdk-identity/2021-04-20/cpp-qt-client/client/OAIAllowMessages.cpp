/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAllowMessages.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAllowMessages::OAIAllowMessages(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAllowMessages::OAIAllowMessages() {
    this->initializeModel();
}

OAIAllowMessages::~OAIAllowMessages() {}

void OAIAllowMessages::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAllowMessages::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAllowMessages::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ALL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAllowMessages::ALL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAllowMessages::NONE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAllowMessages::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAllowMessages::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAllowMessages::ALL:
            val = "ALL";
            break;
        case eOAIAllowMessages::NONE:
            val = "NONE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAllowMessages::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAllowMessages::eOAIAllowMessages OAIAllowMessages::getValue() const {
    return m_value;
}

void OAIAllowMessages::setValue(const OAIAllowMessages::eOAIAllowMessages& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAllowMessages::isSet() const {
    
    return m_value_isSet;
}

bool OAIAllowMessages::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
