/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetAppInstanceRetentionSettingsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetAppInstanceRetentionSettingsResponse::OAIGetAppInstanceRetentionSettingsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetAppInstanceRetentionSettingsResponse::OAIGetAppInstanceRetentionSettingsResponse() {
    this->initializeModel();
}

OAIGetAppInstanceRetentionSettingsResponse::~OAIGetAppInstanceRetentionSettingsResponse() {}

void OAIGetAppInstanceRetentionSettingsResponse::initializeModel() {

    m_app_instance_retention_settings_isSet = false;
    m_app_instance_retention_settings_isValid = false;

    m_initiate_deletion_timestamp_isSet = false;
    m_initiate_deletion_timestamp_isValid = false;
}

void OAIGetAppInstanceRetentionSettingsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetAppInstanceRetentionSettingsResponse::fromJsonObject(QJsonObject json) {

    m_app_instance_retention_settings_isValid = ::OpenAPI::fromJsonValue(m_app_instance_retention_settings, json[QString("AppInstanceRetentionSettings")]);
    m_app_instance_retention_settings_isSet = !json[QString("AppInstanceRetentionSettings")].isNull() && m_app_instance_retention_settings_isValid;

    m_initiate_deletion_timestamp_isValid = ::OpenAPI::fromJsonValue(m_initiate_deletion_timestamp, json[QString("InitiateDeletionTimestamp")]);
    m_initiate_deletion_timestamp_isSet = !json[QString("InitiateDeletionTimestamp")].isNull() && m_initiate_deletion_timestamp_isValid;
}

QString OAIGetAppInstanceRetentionSettingsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetAppInstanceRetentionSettingsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_app_instance_retention_settings.isSet()) {
        obj.insert(QString("AppInstanceRetentionSettings"), ::OpenAPI::toJsonValue(m_app_instance_retention_settings));
    }
    if (m_initiate_deletion_timestamp_isSet) {
        obj.insert(QString("InitiateDeletionTimestamp"), ::OpenAPI::toJsonValue(m_initiate_deletion_timestamp));
    }
    return obj;
}

OAIGetAppInstanceRetentionSettingsResponse_AppInstanceRetentionSettings OAIGetAppInstanceRetentionSettingsResponse::getAppInstanceRetentionSettings() const {
    return m_app_instance_retention_settings;
}
void OAIGetAppInstanceRetentionSettingsResponse::setAppInstanceRetentionSettings(const OAIGetAppInstanceRetentionSettingsResponse_AppInstanceRetentionSettings &app_instance_retention_settings) {
    m_app_instance_retention_settings = app_instance_retention_settings;
    m_app_instance_retention_settings_isSet = true;
}

bool OAIGetAppInstanceRetentionSettingsResponse::is_app_instance_retention_settings_Set() const{
    return m_app_instance_retention_settings_isSet;
}

bool OAIGetAppInstanceRetentionSettingsResponse::is_app_instance_retention_settings_Valid() const{
    return m_app_instance_retention_settings_isValid;
}

QDateTime OAIGetAppInstanceRetentionSettingsResponse::getInitiateDeletionTimestamp() const {
    return m_initiate_deletion_timestamp;
}
void OAIGetAppInstanceRetentionSettingsResponse::setInitiateDeletionTimestamp(const QDateTime &initiate_deletion_timestamp) {
    m_initiate_deletion_timestamp = initiate_deletion_timestamp;
    m_initiate_deletion_timestamp_isSet = true;
}

bool OAIGetAppInstanceRetentionSettingsResponse::is_initiate_deletion_timestamp_Set() const{
    return m_initiate_deletion_timestamp_isSet;
}

bool OAIGetAppInstanceRetentionSettingsResponse::is_initiate_deletion_timestamp_Valid() const{
    return m_initiate_deletion_timestamp_isValid;
}

bool OAIGetAppInstanceRetentionSettingsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_instance_retention_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_initiate_deletion_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetAppInstanceRetentionSettingsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
