/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutAppInstanceUserExpirationSettingsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutAppInstanceUserExpirationSettingsRequest::OAIPutAppInstanceUserExpirationSettingsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutAppInstanceUserExpirationSettingsRequest::OAIPutAppInstanceUserExpirationSettingsRequest() {
    this->initializeModel();
}

OAIPutAppInstanceUserExpirationSettingsRequest::~OAIPutAppInstanceUserExpirationSettingsRequest() {}

void OAIPutAppInstanceUserExpirationSettingsRequest::initializeModel() {

    m_expiration_settings_isSet = false;
    m_expiration_settings_isValid = false;
}

void OAIPutAppInstanceUserExpirationSettingsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutAppInstanceUserExpirationSettingsRequest::fromJsonObject(QJsonObject json) {

    m_expiration_settings_isValid = ::OpenAPI::fromJsonValue(m_expiration_settings, json[QString("ExpirationSettings")]);
    m_expiration_settings_isSet = !json[QString("ExpirationSettings")].isNull() && m_expiration_settings_isValid;
}

QString OAIPutAppInstanceUserExpirationSettingsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutAppInstanceUserExpirationSettingsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_expiration_settings.isSet()) {
        obj.insert(QString("ExpirationSettings"), ::OpenAPI::toJsonValue(m_expiration_settings));
    }
    return obj;
}

OAIPutAppInstanceUserExpirationSettingsResponse_ExpirationSettings OAIPutAppInstanceUserExpirationSettingsRequest::getExpirationSettings() const {
    return m_expiration_settings;
}
void OAIPutAppInstanceUserExpirationSettingsRequest::setExpirationSettings(const OAIPutAppInstanceUserExpirationSettingsResponse_ExpirationSettings &expiration_settings) {
    m_expiration_settings = expiration_settings;
    m_expiration_settings_isSet = true;
}

bool OAIPutAppInstanceUserExpirationSettingsRequest::is_expiration_settings_Set() const{
    return m_expiration_settings_isSet;
}

bool OAIPutAppInstanceUserExpirationSettingsRequest::is_expiration_settings_Valid() const{
    return m_expiration_settings_isValid;
}

bool OAIPutAppInstanceUserExpirationSettingsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expiration_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutAppInstanceUserExpirationSettingsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
