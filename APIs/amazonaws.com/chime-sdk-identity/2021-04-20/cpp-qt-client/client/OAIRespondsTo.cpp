/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRespondsTo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRespondsTo::OAIRespondsTo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRespondsTo::OAIRespondsTo() {
    this->initializeModel();
}

OAIRespondsTo::~OAIRespondsTo() {}

void OAIRespondsTo::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRespondsTo::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRespondsTo::fromJson(QString jsonString) {
    
    if ( jsonString.compare("STANDARD_MESSAGES", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRespondsTo::STANDARD_MESSAGES;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRespondsTo::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRespondsTo::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRespondsTo::STANDARD_MESSAGES:
            val = "STANDARD_MESSAGES";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRespondsTo::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRespondsTo::eOAIRespondsTo OAIRespondsTo::getValue() const {
    return m_value;
}

void OAIRespondsTo::setValue(const OAIRespondsTo::eOAIRespondsTo& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRespondsTo::isSet() const {
    
    return m_value_isSet;
}

bool OAIRespondsTo::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
