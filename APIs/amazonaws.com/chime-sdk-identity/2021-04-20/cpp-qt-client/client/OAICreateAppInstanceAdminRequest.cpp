/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAppInstanceAdminRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAppInstanceAdminRequest::OAICreateAppInstanceAdminRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAppInstanceAdminRequest::OAICreateAppInstanceAdminRequest() {
    this->initializeModel();
}

OAICreateAppInstanceAdminRequest::~OAICreateAppInstanceAdminRequest() {}

void OAICreateAppInstanceAdminRequest::initializeModel() {

    m_app_instance_admin_arn_isSet = false;
    m_app_instance_admin_arn_isValid = false;
}

void OAICreateAppInstanceAdminRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAppInstanceAdminRequest::fromJsonObject(QJsonObject json) {

    m_app_instance_admin_arn_isValid = ::OpenAPI::fromJsonValue(m_app_instance_admin_arn, json[QString("AppInstanceAdminArn")]);
    m_app_instance_admin_arn_isSet = !json[QString("AppInstanceAdminArn")].isNull() && m_app_instance_admin_arn_isValid;
}

QString OAICreateAppInstanceAdminRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAppInstanceAdminRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_app_instance_admin_arn_isSet) {
        obj.insert(QString("AppInstanceAdminArn"), ::OpenAPI::toJsonValue(m_app_instance_admin_arn));
    }
    return obj;
}

QString OAICreateAppInstanceAdminRequest::getAppInstanceAdminArn() const {
    return m_app_instance_admin_arn;
}
void OAICreateAppInstanceAdminRequest::setAppInstanceAdminArn(const QString &app_instance_admin_arn) {
    m_app_instance_admin_arn = app_instance_admin_arn;
    m_app_instance_admin_arn_isSet = true;
}

bool OAICreateAppInstanceAdminRequest::is_app_instance_admin_arn_Set() const{
    return m_app_instance_admin_arn_isSet;
}

bool OAICreateAppInstanceAdminRequest::is_app_instance_admin_arn_Valid() const{
    return m_app_instance_admin_arn_isValid;
}

bool OAICreateAppInstanceAdminRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_instance_admin_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAppInstanceAdminRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_instance_admin_arn_isValid && true;
}

} // namespace OpenAPI
