/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExpirationSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExpirationSettings::OAIExpirationSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExpirationSettings::OAIExpirationSettings() {
    this->initializeModel();
}

OAIExpirationSettings::~OAIExpirationSettings() {}

void OAIExpirationSettings::initializeModel() {

    m_expiration_days_isSet = false;
    m_expiration_days_isValid = false;

    m_expiration_criterion_isSet = false;
    m_expiration_criterion_isValid = false;
}

void OAIExpirationSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExpirationSettings::fromJsonObject(QJsonObject json) {

    m_expiration_days_isValid = ::OpenAPI::fromJsonValue(m_expiration_days, json[QString("ExpirationDays")]);
    m_expiration_days_isSet = !json[QString("ExpirationDays")].isNull() && m_expiration_days_isValid;

    m_expiration_criterion_isValid = ::OpenAPI::fromJsonValue(m_expiration_criterion, json[QString("ExpirationCriterion")]);
    m_expiration_criterion_isSet = !json[QString("ExpirationCriterion")].isNull() && m_expiration_criterion_isValid;
}

QString OAIExpirationSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExpirationSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_expiration_days_isSet) {
        obj.insert(QString("ExpirationDays"), ::OpenAPI::toJsonValue(m_expiration_days));
    }
    if (m_expiration_criterion.isSet()) {
        obj.insert(QString("ExpirationCriterion"), ::OpenAPI::toJsonValue(m_expiration_criterion));
    }
    return obj;
}

qint32 OAIExpirationSettings::getExpirationDays() const {
    return m_expiration_days;
}
void OAIExpirationSettings::setExpirationDays(const qint32 &expiration_days) {
    m_expiration_days = expiration_days;
    m_expiration_days_isSet = true;
}

bool OAIExpirationSettings::is_expiration_days_Set() const{
    return m_expiration_days_isSet;
}

bool OAIExpirationSettings::is_expiration_days_Valid() const{
    return m_expiration_days_isValid;
}

OAIExpirationCriterion OAIExpirationSettings::getExpirationCriterion() const {
    return m_expiration_criterion;
}
void OAIExpirationSettings::setExpirationCriterion(const OAIExpirationCriterion &expiration_criterion) {
    m_expiration_criterion = expiration_criterion;
    m_expiration_criterion_isSet = true;
}

bool OAIExpirationSettings::is_expiration_criterion_Set() const{
    return m_expiration_criterion_isSet;
}

bool OAIExpirationSettings::is_expiration_criterion_Valid() const{
    return m_expiration_criterion_isValid;
}

bool OAIExpirationSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expiration_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_criterion.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExpirationSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_expiration_days_isValid && m_expiration_criterion_isValid && true;
}

} // namespace OpenAPI
