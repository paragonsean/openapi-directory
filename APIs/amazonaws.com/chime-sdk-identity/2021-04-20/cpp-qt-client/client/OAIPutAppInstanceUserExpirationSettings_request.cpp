/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutAppInstanceUserExpirationSettings_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutAppInstanceUserExpirationSettings_request::OAIPutAppInstanceUserExpirationSettings_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutAppInstanceUserExpirationSettings_request::OAIPutAppInstanceUserExpirationSettings_request() {
    this->initializeModel();
}

OAIPutAppInstanceUserExpirationSettings_request::~OAIPutAppInstanceUserExpirationSettings_request() {}

void OAIPutAppInstanceUserExpirationSettings_request::initializeModel() {

    m_expiration_settings_isSet = false;
    m_expiration_settings_isValid = false;
}

void OAIPutAppInstanceUserExpirationSettings_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutAppInstanceUserExpirationSettings_request::fromJsonObject(QJsonObject json) {

    m_expiration_settings_isValid = ::OpenAPI::fromJsonValue(m_expiration_settings, json[QString("ExpirationSettings")]);
    m_expiration_settings_isSet = !json[QString("ExpirationSettings")].isNull() && m_expiration_settings_isValid;
}

QString OAIPutAppInstanceUserExpirationSettings_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutAppInstanceUserExpirationSettings_request::asJsonObject() const {
    QJsonObject obj;
    if (m_expiration_settings.isSet()) {
        obj.insert(QString("ExpirationSettings"), ::OpenAPI::toJsonValue(m_expiration_settings));
    }
    return obj;
}

OAICreateAppInstanceUser_request_ExpirationSettings OAIPutAppInstanceUserExpirationSettings_request::getExpirationSettings() const {
    return m_expiration_settings;
}
void OAIPutAppInstanceUserExpirationSettings_request::setExpirationSettings(const OAICreateAppInstanceUser_request_ExpirationSettings &expiration_settings) {
    m_expiration_settings = expiration_settings;
    m_expiration_settings_isSet = true;
}

bool OAIPutAppInstanceUserExpirationSettings_request::is_expiration_settings_Set() const{
    return m_expiration_settings_isSet;
}

bool OAIPutAppInstanceUserExpirationSettings_request::is_expiration_settings_Valid() const{
    return m_expiration_settings_isValid;
}

bool OAIPutAppInstanceUserExpirationSettings_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expiration_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutAppInstanceUserExpirationSettings_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
