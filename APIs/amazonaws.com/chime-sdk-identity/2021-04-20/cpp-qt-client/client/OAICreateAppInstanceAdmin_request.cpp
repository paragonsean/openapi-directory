/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAppInstanceAdmin_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAppInstanceAdmin_request::OAICreateAppInstanceAdmin_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAppInstanceAdmin_request::OAICreateAppInstanceAdmin_request() {
    this->initializeModel();
}

OAICreateAppInstanceAdmin_request::~OAICreateAppInstanceAdmin_request() {}

void OAICreateAppInstanceAdmin_request::initializeModel() {

    m_app_instance_admin_arn_isSet = false;
    m_app_instance_admin_arn_isValid = false;
}

void OAICreateAppInstanceAdmin_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAppInstanceAdmin_request::fromJsonObject(QJsonObject json) {

    m_app_instance_admin_arn_isValid = ::OpenAPI::fromJsonValue(m_app_instance_admin_arn, json[QString("AppInstanceAdminArn")]);
    m_app_instance_admin_arn_isSet = !json[QString("AppInstanceAdminArn")].isNull() && m_app_instance_admin_arn_isValid;
}

QString OAICreateAppInstanceAdmin_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAppInstanceAdmin_request::asJsonObject() const {
    QJsonObject obj;
    if (m_app_instance_admin_arn_isSet) {
        obj.insert(QString("AppInstanceAdminArn"), ::OpenAPI::toJsonValue(m_app_instance_admin_arn));
    }
    return obj;
}

QString OAICreateAppInstanceAdmin_request::getAppInstanceAdminArn() const {
    return m_app_instance_admin_arn;
}
void OAICreateAppInstanceAdmin_request::setAppInstanceAdminArn(const QString &app_instance_admin_arn) {
    m_app_instance_admin_arn = app_instance_admin_arn;
    m_app_instance_admin_arn_isSet = true;
}

bool OAICreateAppInstanceAdmin_request::is_app_instance_admin_arn_Set() const{
    return m_app_instance_admin_arn_isSet;
}

bool OAICreateAppInstanceAdmin_request::is_app_instance_admin_arn_Valid() const{
    return m_app_instance_admin_arn_isValid;
}

bool OAICreateAppInstanceAdmin_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_instance_admin_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAppInstanceAdmin_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_instance_admin_arn_isValid && true;
}

} // namespace OpenAPI
