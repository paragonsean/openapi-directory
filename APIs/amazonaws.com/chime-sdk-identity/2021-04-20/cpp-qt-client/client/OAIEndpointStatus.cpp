/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEndpointStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEndpointStatus::OAIEndpointStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEndpointStatus::OAIEndpointStatus() {
    this->initializeModel();
}

OAIEndpointStatus::~OAIEndpointStatus() {}

void OAIEndpointStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIEndpointStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIEndpointStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ACTIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEndpointStatus::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INACTIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEndpointStatus::INACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIEndpointStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIEndpointStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIEndpointStatus::ACTIVE:
            val = "ACTIVE";
            break;
        case eOAIEndpointStatus::INACTIVE:
            val = "INACTIVE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIEndpointStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIEndpointStatus::eOAIEndpointStatus OAIEndpointStatus::getValue() const {
    return m_value;
}

void OAIEndpointStatus::setValue(const OAIEndpointStatus::eOAIEndpointStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIEndpointStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIEndpointStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
