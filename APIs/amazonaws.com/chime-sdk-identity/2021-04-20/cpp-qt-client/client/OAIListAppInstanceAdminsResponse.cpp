/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAppInstanceAdminsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAppInstanceAdminsResponse::OAIListAppInstanceAdminsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAppInstanceAdminsResponse::OAIListAppInstanceAdminsResponse() {
    this->initializeModel();
}

OAIListAppInstanceAdminsResponse::~OAIListAppInstanceAdminsResponse() {}

void OAIListAppInstanceAdminsResponse::initializeModel() {

    m_app_instance_arn_isSet = false;
    m_app_instance_arn_isValid = false;

    m_app_instance_admins_isSet = false;
    m_app_instance_admins_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListAppInstanceAdminsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAppInstanceAdminsResponse::fromJsonObject(QJsonObject json) {

    m_app_instance_arn_isValid = ::OpenAPI::fromJsonValue(m_app_instance_arn, json[QString("AppInstanceArn")]);
    m_app_instance_arn_isSet = !json[QString("AppInstanceArn")].isNull() && m_app_instance_arn_isValid;

    m_app_instance_admins_isValid = ::OpenAPI::fromJsonValue(m_app_instance_admins, json[QString("AppInstanceAdmins")]);
    m_app_instance_admins_isSet = !json[QString("AppInstanceAdmins")].isNull() && m_app_instance_admins_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListAppInstanceAdminsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAppInstanceAdminsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_app_instance_arn_isSet) {
        obj.insert(QString("AppInstanceArn"), ::OpenAPI::toJsonValue(m_app_instance_arn));
    }
    if (m_app_instance_admins.isSet()) {
        obj.insert(QString("AppInstanceAdmins"), ::OpenAPI::toJsonValue(m_app_instance_admins));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QString OAIListAppInstanceAdminsResponse::getAppInstanceArn() const {
    return m_app_instance_arn;
}
void OAIListAppInstanceAdminsResponse::setAppInstanceArn(const QString &app_instance_arn) {
    m_app_instance_arn = app_instance_arn;
    m_app_instance_arn_isSet = true;
}

bool OAIListAppInstanceAdminsResponse::is_app_instance_arn_Set() const{
    return m_app_instance_arn_isSet;
}

bool OAIListAppInstanceAdminsResponse::is_app_instance_arn_Valid() const{
    return m_app_instance_arn_isValid;
}

QList OAIListAppInstanceAdminsResponse::getAppInstanceAdmins() const {
    return m_app_instance_admins;
}
void OAIListAppInstanceAdminsResponse::setAppInstanceAdmins(const QList &app_instance_admins) {
    m_app_instance_admins = app_instance_admins;
    m_app_instance_admins_isSet = true;
}

bool OAIListAppInstanceAdminsResponse::is_app_instance_admins_Set() const{
    return m_app_instance_admins_isSet;
}

bool OAIListAppInstanceAdminsResponse::is_app_instance_admins_Valid() const{
    return m_app_instance_admins_isValid;
}

QString OAIListAppInstanceAdminsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListAppInstanceAdminsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListAppInstanceAdminsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListAppInstanceAdminsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListAppInstanceAdminsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_instance_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_instance_admins.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAppInstanceAdminsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
