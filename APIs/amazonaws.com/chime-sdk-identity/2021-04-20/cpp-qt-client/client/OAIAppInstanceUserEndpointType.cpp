/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppInstanceUserEndpointType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppInstanceUserEndpointType::OAIAppInstanceUserEndpointType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppInstanceUserEndpointType::OAIAppInstanceUserEndpointType() {
    this->initializeModel();
}

OAIAppInstanceUserEndpointType::~OAIAppInstanceUserEndpointType() {}

void OAIAppInstanceUserEndpointType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAppInstanceUserEndpointType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAppInstanceUserEndpointType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("APNS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAppInstanceUserEndpointType::APNS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("APNS_SANDBOX", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAppInstanceUserEndpointType::APNS_SANDBOX;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GCM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAppInstanceUserEndpointType::GCM;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAppInstanceUserEndpointType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAppInstanceUserEndpointType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAppInstanceUserEndpointType::APNS:
            val = "APNS";
            break;
        case eOAIAppInstanceUserEndpointType::APNS_SANDBOX:
            val = "APNS_SANDBOX";
            break;
        case eOAIAppInstanceUserEndpointType::GCM:
            val = "GCM";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAppInstanceUserEndpointType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAppInstanceUserEndpointType::eOAIAppInstanceUserEndpointType OAIAppInstanceUserEndpointType::getValue() const {
    return m_value;
}

void OAIAppInstanceUserEndpointType::setValue(const OAIAppInstanceUserEndpointType::eOAIAppInstanceUserEndpointType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAppInstanceUserEndpointType::isSet() const {
    
    return m_value_isSet;
}

bool OAIAppInstanceUserEndpointType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
