/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannelRetentionSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannelRetentionSettings::OAIChannelRetentionSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannelRetentionSettings::OAIChannelRetentionSettings() {
    this->initializeModel();
}

OAIChannelRetentionSettings::~OAIChannelRetentionSettings() {}

void OAIChannelRetentionSettings::initializeModel() {

    m_retention_days_isSet = false;
    m_retention_days_isValid = false;
}

void OAIChannelRetentionSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChannelRetentionSettings::fromJsonObject(QJsonObject json) {

    m_retention_days_isValid = ::OpenAPI::fromJsonValue(m_retention_days, json[QString("RetentionDays")]);
    m_retention_days_isSet = !json[QString("RetentionDays")].isNull() && m_retention_days_isValid;
}

QString OAIChannelRetentionSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChannelRetentionSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_retention_days_isSet) {
        obj.insert(QString("RetentionDays"), ::OpenAPI::toJsonValue(m_retention_days));
    }
    return obj;
}

qint32 OAIChannelRetentionSettings::getRetentionDays() const {
    return m_retention_days;
}
void OAIChannelRetentionSettings::setRetentionDays(const qint32 &retention_days) {
    m_retention_days = retention_days;
    m_retention_days_isSet = true;
}

bool OAIChannelRetentionSettings::is_retention_days_Set() const{
    return m_retention_days_isSet;
}

bool OAIChannelRetentionSettings::is_retention_days_Valid() const{
    return m_retention_days_isValid;
}

bool OAIChannelRetentionSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_retention_days_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChannelRetentionSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
