/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAppInstanceResponse_AppInstance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAppInstanceResponse_AppInstance::OAIDescribeAppInstanceResponse_AppInstance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAppInstanceResponse_AppInstance::OAIDescribeAppInstanceResponse_AppInstance() {
    this->initializeModel();
}

OAIDescribeAppInstanceResponse_AppInstance::~OAIDescribeAppInstanceResponse_AppInstance() {}

void OAIDescribeAppInstanceResponse_AppInstance::initializeModel() {

    m_app_instance_arn_isSet = false;
    m_app_instance_arn_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_created_timestamp_isSet = false;
    m_created_timestamp_isValid = false;

    m_last_updated_timestamp_isSet = false;
    m_last_updated_timestamp_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;
}

void OAIDescribeAppInstanceResponse_AppInstance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAppInstanceResponse_AppInstance::fromJsonObject(QJsonObject json) {

    m_app_instance_arn_isValid = ::OpenAPI::fromJsonValue(m_app_instance_arn, json[QString("AppInstanceArn")]);
    m_app_instance_arn_isSet = !json[QString("AppInstanceArn")].isNull() && m_app_instance_arn_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_created_timestamp_isValid = ::OpenAPI::fromJsonValue(m_created_timestamp, json[QString("CreatedTimestamp")]);
    m_created_timestamp_isSet = !json[QString("CreatedTimestamp")].isNull() && m_created_timestamp_isValid;

    m_last_updated_timestamp_isValid = ::OpenAPI::fromJsonValue(m_last_updated_timestamp, json[QString("LastUpdatedTimestamp")]);
    m_last_updated_timestamp_isSet = !json[QString("LastUpdatedTimestamp")].isNull() && m_last_updated_timestamp_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("Metadata")]);
    m_metadata_isSet = !json[QString("Metadata")].isNull() && m_metadata_isValid;
}

QString OAIDescribeAppInstanceResponse_AppInstance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAppInstanceResponse_AppInstance::asJsonObject() const {
    QJsonObject obj;
    if (m_app_instance_arn_isSet) {
        obj.insert(QString("AppInstanceArn"), ::OpenAPI::toJsonValue(m_app_instance_arn));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_created_timestamp_isSet) {
        obj.insert(QString("CreatedTimestamp"), ::OpenAPI::toJsonValue(m_created_timestamp));
    }
    if (m_last_updated_timestamp_isSet) {
        obj.insert(QString("LastUpdatedTimestamp"), ::OpenAPI::toJsonValue(m_last_updated_timestamp));
    }
    if (m_metadata_isSet) {
        obj.insert(QString("Metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    return obj;
}

QString OAIDescribeAppInstanceResponse_AppInstance::getAppInstanceArn() const {
    return m_app_instance_arn;
}
void OAIDescribeAppInstanceResponse_AppInstance::setAppInstanceArn(const QString &app_instance_arn) {
    m_app_instance_arn = app_instance_arn;
    m_app_instance_arn_isSet = true;
}

bool OAIDescribeAppInstanceResponse_AppInstance::is_app_instance_arn_Set() const{
    return m_app_instance_arn_isSet;
}

bool OAIDescribeAppInstanceResponse_AppInstance::is_app_instance_arn_Valid() const{
    return m_app_instance_arn_isValid;
}

QString OAIDescribeAppInstanceResponse_AppInstance::getName() const {
    return m_name;
}
void OAIDescribeAppInstanceResponse_AppInstance::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDescribeAppInstanceResponse_AppInstance::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDescribeAppInstanceResponse_AppInstance::is_name_Valid() const{
    return m_name_isValid;
}

QDateTime OAIDescribeAppInstanceResponse_AppInstance::getCreatedTimestamp() const {
    return m_created_timestamp;
}
void OAIDescribeAppInstanceResponse_AppInstance::setCreatedTimestamp(const QDateTime &created_timestamp) {
    m_created_timestamp = created_timestamp;
    m_created_timestamp_isSet = true;
}

bool OAIDescribeAppInstanceResponse_AppInstance::is_created_timestamp_Set() const{
    return m_created_timestamp_isSet;
}

bool OAIDescribeAppInstanceResponse_AppInstance::is_created_timestamp_Valid() const{
    return m_created_timestamp_isValid;
}

QDateTime OAIDescribeAppInstanceResponse_AppInstance::getLastUpdatedTimestamp() const {
    return m_last_updated_timestamp;
}
void OAIDescribeAppInstanceResponse_AppInstance::setLastUpdatedTimestamp(const QDateTime &last_updated_timestamp) {
    m_last_updated_timestamp = last_updated_timestamp;
    m_last_updated_timestamp_isSet = true;
}

bool OAIDescribeAppInstanceResponse_AppInstance::is_last_updated_timestamp_Set() const{
    return m_last_updated_timestamp_isSet;
}

bool OAIDescribeAppInstanceResponse_AppInstance::is_last_updated_timestamp_Valid() const{
    return m_last_updated_timestamp_isValid;
}

QString OAIDescribeAppInstanceResponse_AppInstance::getMetadata() const {
    return m_metadata;
}
void OAIDescribeAppInstanceResponse_AppInstance::setMetadata(const QString &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIDescribeAppInstanceResponse_AppInstance::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIDescribeAppInstanceResponse_AppInstance::is_metadata_Valid() const{
    return m_metadata_isValid;
}

bool OAIDescribeAppInstanceResponse_AppInstance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_instance_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAppInstanceResponse_AppInstance::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
