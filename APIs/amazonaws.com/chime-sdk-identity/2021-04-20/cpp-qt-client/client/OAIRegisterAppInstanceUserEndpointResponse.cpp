/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegisterAppInstanceUserEndpointResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegisterAppInstanceUserEndpointResponse::OAIRegisterAppInstanceUserEndpointResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegisterAppInstanceUserEndpointResponse::OAIRegisterAppInstanceUserEndpointResponse() {
    this->initializeModel();
}

OAIRegisterAppInstanceUserEndpointResponse::~OAIRegisterAppInstanceUserEndpointResponse() {}

void OAIRegisterAppInstanceUserEndpointResponse::initializeModel() {

    m_app_instance_user_arn_isSet = false;
    m_app_instance_user_arn_isValid = false;

    m_endpoint_id_isSet = false;
    m_endpoint_id_isValid = false;
}

void OAIRegisterAppInstanceUserEndpointResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegisterAppInstanceUserEndpointResponse::fromJsonObject(QJsonObject json) {

    m_app_instance_user_arn_isValid = ::OpenAPI::fromJsonValue(m_app_instance_user_arn, json[QString("AppInstanceUserArn")]);
    m_app_instance_user_arn_isSet = !json[QString("AppInstanceUserArn")].isNull() && m_app_instance_user_arn_isValid;

    m_endpoint_id_isValid = ::OpenAPI::fromJsonValue(m_endpoint_id, json[QString("EndpointId")]);
    m_endpoint_id_isSet = !json[QString("EndpointId")].isNull() && m_endpoint_id_isValid;
}

QString OAIRegisterAppInstanceUserEndpointResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegisterAppInstanceUserEndpointResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_app_instance_user_arn_isSet) {
        obj.insert(QString("AppInstanceUserArn"), ::OpenAPI::toJsonValue(m_app_instance_user_arn));
    }
    if (m_endpoint_id_isSet) {
        obj.insert(QString("EndpointId"), ::OpenAPI::toJsonValue(m_endpoint_id));
    }
    return obj;
}

QString OAIRegisterAppInstanceUserEndpointResponse::getAppInstanceUserArn() const {
    return m_app_instance_user_arn;
}
void OAIRegisterAppInstanceUserEndpointResponse::setAppInstanceUserArn(const QString &app_instance_user_arn) {
    m_app_instance_user_arn = app_instance_user_arn;
    m_app_instance_user_arn_isSet = true;
}

bool OAIRegisterAppInstanceUserEndpointResponse::is_app_instance_user_arn_Set() const{
    return m_app_instance_user_arn_isSet;
}

bool OAIRegisterAppInstanceUserEndpointResponse::is_app_instance_user_arn_Valid() const{
    return m_app_instance_user_arn_isValid;
}

QString OAIRegisterAppInstanceUserEndpointResponse::getEndpointId() const {
    return m_endpoint_id;
}
void OAIRegisterAppInstanceUserEndpointResponse::setEndpointId(const QString &endpoint_id) {
    m_endpoint_id = endpoint_id;
    m_endpoint_id_isSet = true;
}

bool OAIRegisterAppInstanceUserEndpointResponse::is_endpoint_id_Set() const{
    return m_endpoint_id_isSet;
}

bool OAIRegisterAppInstanceUserEndpointResponse::is_endpoint_id_Valid() const{
    return m_endpoint_id_isValid;
}

bool OAIRegisterAppInstanceUserEndpointResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_instance_user_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoint_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegisterAppInstanceUserEndpointResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
