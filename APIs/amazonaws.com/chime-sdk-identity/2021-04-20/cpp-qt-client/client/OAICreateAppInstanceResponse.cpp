/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAppInstanceResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAppInstanceResponse::OAICreateAppInstanceResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAppInstanceResponse::OAICreateAppInstanceResponse() {
    this->initializeModel();
}

OAICreateAppInstanceResponse::~OAICreateAppInstanceResponse() {}

void OAICreateAppInstanceResponse::initializeModel() {

    m_app_instance_arn_isSet = false;
    m_app_instance_arn_isValid = false;
}

void OAICreateAppInstanceResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAppInstanceResponse::fromJsonObject(QJsonObject json) {

    m_app_instance_arn_isValid = ::OpenAPI::fromJsonValue(m_app_instance_arn, json[QString("AppInstanceArn")]);
    m_app_instance_arn_isSet = !json[QString("AppInstanceArn")].isNull() && m_app_instance_arn_isValid;
}

QString OAICreateAppInstanceResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAppInstanceResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_app_instance_arn_isSet) {
        obj.insert(QString("AppInstanceArn"), ::OpenAPI::toJsonValue(m_app_instance_arn));
    }
    return obj;
}

QString OAICreateAppInstanceResponse::getAppInstanceArn() const {
    return m_app_instance_arn;
}
void OAICreateAppInstanceResponse::setAppInstanceArn(const QString &app_instance_arn) {
    m_app_instance_arn = app_instance_arn;
    m_app_instance_arn_isSet = true;
}

bool OAICreateAppInstanceResponse::is_app_instance_arn_Set() const{
    return m_app_instance_arn_isSet;
}

bool OAICreateAppInstanceResponse::is_app_instance_arn_Valid() const{
    return m_app_instance_arn_isValid;
}

bool OAICreateAppInstanceResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_instance_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAppInstanceResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
