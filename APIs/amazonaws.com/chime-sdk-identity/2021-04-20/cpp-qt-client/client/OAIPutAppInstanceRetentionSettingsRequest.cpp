/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutAppInstanceRetentionSettingsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutAppInstanceRetentionSettingsRequest::OAIPutAppInstanceRetentionSettingsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutAppInstanceRetentionSettingsRequest::OAIPutAppInstanceRetentionSettingsRequest() {
    this->initializeModel();
}

OAIPutAppInstanceRetentionSettingsRequest::~OAIPutAppInstanceRetentionSettingsRequest() {}

void OAIPutAppInstanceRetentionSettingsRequest::initializeModel() {

    m_app_instance_retention_settings_isSet = false;
    m_app_instance_retention_settings_isValid = false;
}

void OAIPutAppInstanceRetentionSettingsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutAppInstanceRetentionSettingsRequest::fromJsonObject(QJsonObject json) {

    m_app_instance_retention_settings_isValid = ::OpenAPI::fromJsonValue(m_app_instance_retention_settings, json[QString("AppInstanceRetentionSettings")]);
    m_app_instance_retention_settings_isSet = !json[QString("AppInstanceRetentionSettings")].isNull() && m_app_instance_retention_settings_isValid;
}

QString OAIPutAppInstanceRetentionSettingsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutAppInstanceRetentionSettingsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_app_instance_retention_settings.isSet()) {
        obj.insert(QString("AppInstanceRetentionSettings"), ::OpenAPI::toJsonValue(m_app_instance_retention_settings));
    }
    return obj;
}

OAIPutAppInstanceRetentionSettingsResponse_AppInstanceRetentionSettings OAIPutAppInstanceRetentionSettingsRequest::getAppInstanceRetentionSettings() const {
    return m_app_instance_retention_settings;
}
void OAIPutAppInstanceRetentionSettingsRequest::setAppInstanceRetentionSettings(const OAIPutAppInstanceRetentionSettingsResponse_AppInstanceRetentionSettings &app_instance_retention_settings) {
    m_app_instance_retention_settings = app_instance_retention_settings;
    m_app_instance_retention_settings_isSet = true;
}

bool OAIPutAppInstanceRetentionSettingsRequest::is_app_instance_retention_settings_Set() const{
    return m_app_instance_retention_settings_isSet;
}

bool OAIPutAppInstanceRetentionSettingsRequest::is_app_instance_retention_settings_Valid() const{
    return m_app_instance_retention_settings_isValid;
}

bool OAIPutAppInstanceRetentionSettingsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_instance_retention_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutAppInstanceRetentionSettingsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_instance_retention_settings_isValid && true;
}

} // namespace OpenAPI
