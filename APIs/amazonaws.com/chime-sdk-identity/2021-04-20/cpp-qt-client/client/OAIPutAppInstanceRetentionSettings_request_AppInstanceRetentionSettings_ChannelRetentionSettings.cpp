/**
 * Amazon Chime SDK Identity
 * The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html\">Amazon Chime SDK identity</a>.
 *
 * The version of the OpenAPI document: 2021-04-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings::OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings::OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings() {
    this->initializeModel();
}

OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings::~OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings() {}

void OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings::initializeModel() {

    m_retention_days_isSet = false;
    m_retention_days_isValid = false;
}

void OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings::fromJsonObject(QJsonObject json) {

    m_retention_days_isValid = ::OpenAPI::fromJsonValue(m_retention_days, json[QString("RetentionDays")]);
    m_retention_days_isSet = !json[QString("RetentionDays")].isNull() && m_retention_days_isValid;
}

QString OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_retention_days_isSet) {
        obj.insert(QString("RetentionDays"), ::OpenAPI::toJsonValue(m_retention_days));
    }
    return obj;
}

qint32 OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings::getRetentionDays() const {
    return m_retention_days;
}
void OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings::setRetentionDays(const qint32 &retention_days) {
    m_retention_days = retention_days;
    m_retention_days_isSet = true;
}

bool OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings::is_retention_days_Set() const{
    return m_retention_days_isSet;
}

bool OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings::is_retention_days_Valid() const{
    return m_retention_days_isValid;
}

bool OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_retention_days_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutAppInstanceRetentionSettings_request_AppInstanceRetentionSettings_ChannelRetentionSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
