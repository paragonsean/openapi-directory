/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUtteranceData.h
 *
 * Provides information about a single utterance that was made to your bot. 
 */

#ifndef OAIUtteranceData_H
#define OAIUtteranceData_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUtteranceData : public OAIObject {
public:
    OAIUtteranceData();
    OAIUtteranceData(QString json);
    ~OAIUtteranceData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getUtteranceString() const;
    void setUtteranceString(const QString &utterance_string);
    bool is_utterance_string_Set() const;
    bool is_utterance_string_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    qint32 getDistinctUsers() const;
    void setDistinctUsers(const qint32 &distinct_users);
    bool is_distinct_users_Set() const;
    bool is_distinct_users_Valid() const;

    QDateTime getFirstUtteredDate() const;
    void setFirstUtteredDate(const QDateTime &first_uttered_date);
    bool is_first_uttered_date_Set() const;
    bool is_first_uttered_date_Valid() const;

    QDateTime getLastUtteredDate() const;
    void setLastUtteredDate(const QDateTime &last_uttered_date);
    bool is_last_uttered_date_Set() const;
    bool is_last_uttered_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_utterance_string;
    bool m_utterance_string_isSet;
    bool m_utterance_string_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    qint32 m_distinct_users;
    bool m_distinct_users_isSet;
    bool m_distinct_users_isValid;

    QDateTime m_first_uttered_date;
    bool m_first_uttered_date_isSet;
    bool m_first_uttered_date_isValid;

    QDateTime m_last_uttered_date;
    bool m_last_uttered_date_isSet;
    bool m_last_uttered_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUtteranceData)

#endif // OAIUtteranceData_H
