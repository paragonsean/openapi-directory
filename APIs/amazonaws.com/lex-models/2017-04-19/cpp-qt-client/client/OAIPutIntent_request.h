/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutIntent_request.h
 *
 * 
 */

#ifndef OAIPutIntent_request_H
#define OAIPutIntent_request_H

#include <QJsonObject>

#include "OAIInputContext.h"
#include "OAIOutputContext.h"
#include "OAIPutBot_request_abortStatement.h"
#include "OAIPutBot_request_clarificationPrompt.h"
#include "OAIPutIntent_request_dialogCodeHook.h"
#include "OAIPutIntent_request_followUpPrompt.h"
#include "OAIPutIntent_request_fulfillmentActivity.h"
#include "OAIPutIntent_request_kendraConfiguration.h"
#include "OAISlot.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISlot;
class OAIPutBot_request_clarificationPrompt;
class OAIPutBot_request_abortStatement;
class OAIPutIntent_request_followUpPrompt;
class OAIPutIntent_request_dialogCodeHook;
class OAIPutIntent_request_fulfillmentActivity;
class OAIPutIntent_request_kendraConfiguration;
class OAIInputContext;
class OAIOutputContext;

class OAIPutIntent_request : public OAIObject {
public:
    OAIPutIntent_request();
    OAIPutIntent_request(QString json);
    ~OAIPutIntent_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAISlot> getRSlots() const;
    void setRSlots(const QList<OAISlot> &r_slots);
    bool is_r_slots_Set() const;
    bool is_r_slots_Valid() const;

    QList<QString> getSampleUtterances() const;
    void setSampleUtterances(const QList<QString> &sample_utterances);
    bool is_sample_utterances_Set() const;
    bool is_sample_utterances_Valid() const;

    OAIPutBot_request_clarificationPrompt getConfirmationPrompt() const;
    void setConfirmationPrompt(const OAIPutBot_request_clarificationPrompt &confirmation_prompt);
    bool is_confirmation_prompt_Set() const;
    bool is_confirmation_prompt_Valid() const;

    OAIPutBot_request_abortStatement getRejectionStatement() const;
    void setRejectionStatement(const OAIPutBot_request_abortStatement &rejection_statement);
    bool is_rejection_statement_Set() const;
    bool is_rejection_statement_Valid() const;

    OAIPutIntent_request_followUpPrompt getFollowUpPrompt() const;
    void setFollowUpPrompt(const OAIPutIntent_request_followUpPrompt &follow_up_prompt);
    bool is_follow_up_prompt_Set() const;
    bool is_follow_up_prompt_Valid() const;

    OAIPutBot_request_abortStatement getConclusionStatement() const;
    void setConclusionStatement(const OAIPutBot_request_abortStatement &conclusion_statement);
    bool is_conclusion_statement_Set() const;
    bool is_conclusion_statement_Valid() const;

    OAIPutIntent_request_dialogCodeHook getDialogCodeHook() const;
    void setDialogCodeHook(const OAIPutIntent_request_dialogCodeHook &dialog_code_hook);
    bool is_dialog_code_hook_Set() const;
    bool is_dialog_code_hook_Valid() const;

    OAIPutIntent_request_fulfillmentActivity getFulfillmentActivity() const;
    void setFulfillmentActivity(const OAIPutIntent_request_fulfillmentActivity &fulfillment_activity);
    bool is_fulfillment_activity_Set() const;
    bool is_fulfillment_activity_Valid() const;

    QString getParentIntentSignature() const;
    void setParentIntentSignature(const QString &parent_intent_signature);
    bool is_parent_intent_signature_Set() const;
    bool is_parent_intent_signature_Valid() const;

    QString getChecksum() const;
    void setChecksum(const QString &checksum);
    bool is_checksum_Set() const;
    bool is_checksum_Valid() const;

    bool isCreateVersion() const;
    void setCreateVersion(const bool &create_version);
    bool is_create_version_Set() const;
    bool is_create_version_Valid() const;

    OAIPutIntent_request_kendraConfiguration getKendraConfiguration() const;
    void setKendraConfiguration(const OAIPutIntent_request_kendraConfiguration &kendra_configuration);
    bool is_kendra_configuration_Set() const;
    bool is_kendra_configuration_Valid() const;

    QList<OAIInputContext> getInputContexts() const;
    void setInputContexts(const QList<OAIInputContext> &input_contexts);
    bool is_input_contexts_Set() const;
    bool is_input_contexts_Valid() const;

    QList<OAIOutputContext> getOutputContexts() const;
    void setOutputContexts(const QList<OAIOutputContext> &output_contexts);
    bool is_output_contexts_Set() const;
    bool is_output_contexts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAISlot> m_r_slots;
    bool m_r_slots_isSet;
    bool m_r_slots_isValid;

    QList<QString> m_sample_utterances;
    bool m_sample_utterances_isSet;
    bool m_sample_utterances_isValid;

    OAIPutBot_request_clarificationPrompt m_confirmation_prompt;
    bool m_confirmation_prompt_isSet;
    bool m_confirmation_prompt_isValid;

    OAIPutBot_request_abortStatement m_rejection_statement;
    bool m_rejection_statement_isSet;
    bool m_rejection_statement_isValid;

    OAIPutIntent_request_followUpPrompt m_follow_up_prompt;
    bool m_follow_up_prompt_isSet;
    bool m_follow_up_prompt_isValid;

    OAIPutBot_request_abortStatement m_conclusion_statement;
    bool m_conclusion_statement_isSet;
    bool m_conclusion_statement_isValid;

    OAIPutIntent_request_dialogCodeHook m_dialog_code_hook;
    bool m_dialog_code_hook_isSet;
    bool m_dialog_code_hook_isValid;

    OAIPutIntent_request_fulfillmentActivity m_fulfillment_activity;
    bool m_fulfillment_activity_isSet;
    bool m_fulfillment_activity_isValid;

    QString m_parent_intent_signature;
    bool m_parent_intent_signature_isSet;
    bool m_parent_intent_signature_isValid;

    QString m_checksum;
    bool m_checksum_isSet;
    bool m_checksum_isValid;

    bool m_create_version;
    bool m_create_version_isSet;
    bool m_create_version_isValid;

    OAIPutIntent_request_kendraConfiguration m_kendra_configuration;
    bool m_kendra_configuration_isSet;
    bool m_kendra_configuration_isValid;

    QList<OAIInputContext> m_input_contexts;
    bool m_input_contexts_isSet;
    bool m_input_contexts_isValid;

    QList<OAIOutputContext> m_output_contexts;
    bool m_output_contexts_isSet;
    bool m_output_contexts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutIntent_request)

#endif // OAIPutIntent_request_H
