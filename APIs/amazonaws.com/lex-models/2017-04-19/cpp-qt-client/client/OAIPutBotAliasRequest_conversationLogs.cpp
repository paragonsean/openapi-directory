/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutBotAliasRequest_conversationLogs.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutBotAliasRequest_conversationLogs::OAIPutBotAliasRequest_conversationLogs(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutBotAliasRequest_conversationLogs::OAIPutBotAliasRequest_conversationLogs() {
    this->initializeModel();
}

OAIPutBotAliasRequest_conversationLogs::~OAIPutBotAliasRequest_conversationLogs() {}

void OAIPutBotAliasRequest_conversationLogs::initializeModel() {

    m_log_settings_isSet = false;
    m_log_settings_isValid = false;

    m_iam_role_arn_isSet = false;
    m_iam_role_arn_isValid = false;
}

void OAIPutBotAliasRequest_conversationLogs::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutBotAliasRequest_conversationLogs::fromJsonObject(QJsonObject json) {

    m_log_settings_isValid = ::OpenAPI::fromJsonValue(m_log_settings, json[QString("logSettings")]);
    m_log_settings_isSet = !json[QString("logSettings")].isNull() && m_log_settings_isValid;

    m_iam_role_arn_isValid = ::OpenAPI::fromJsonValue(m_iam_role_arn, json[QString("iamRoleArn")]);
    m_iam_role_arn_isSet = !json[QString("iamRoleArn")].isNull() && m_iam_role_arn_isValid;
}

QString OAIPutBotAliasRequest_conversationLogs::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutBotAliasRequest_conversationLogs::asJsonObject() const {
    QJsonObject obj;
    if (m_log_settings.isSet()) {
        obj.insert(QString("logSettings"), ::OpenAPI::toJsonValue(m_log_settings));
    }
    if (m_iam_role_arn_isSet) {
        obj.insert(QString("iamRoleArn"), ::OpenAPI::toJsonValue(m_iam_role_arn));
    }
    return obj;
}

QList OAIPutBotAliasRequest_conversationLogs::getLogSettings() const {
    return m_log_settings;
}
void OAIPutBotAliasRequest_conversationLogs::setLogSettings(const QList &log_settings) {
    m_log_settings = log_settings;
    m_log_settings_isSet = true;
}

bool OAIPutBotAliasRequest_conversationLogs::is_log_settings_Set() const{
    return m_log_settings_isSet;
}

bool OAIPutBotAliasRequest_conversationLogs::is_log_settings_Valid() const{
    return m_log_settings_isValid;
}

QString OAIPutBotAliasRequest_conversationLogs::getIamRoleArn() const {
    return m_iam_role_arn;
}
void OAIPutBotAliasRequest_conversationLogs::setIamRoleArn(const QString &iam_role_arn) {
    m_iam_role_arn = iam_role_arn;
    m_iam_role_arn_isSet = true;
}

bool OAIPutBotAliasRequest_conversationLogs::is_iam_role_arn_Set() const{
    return m_iam_role_arn_isSet;
}

bool OAIPutBotAliasRequest_conversationLogs::is_iam_role_arn_Valid() const{
    return m_iam_role_arn_isValid;
}

bool OAIPutBotAliasRequest_conversationLogs::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_log_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_iam_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutBotAliasRequest_conversationLogs::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_log_settings_isValid && m_iam_role_arn_isValid && true;
}

} // namespace OpenAPI
