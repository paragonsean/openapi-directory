/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetIntentResponse.h
 *
 * 
 */

#ifndef OAIGetIntentResponse_H
#define OAIGetIntentResponse_H

#include <QJsonObject>

#include "OAICreateIntentVersionResponse_rejectionStatement.h"
#include "OAIGetIntentResponse_conclusionStatement.h"
#include "OAIGetIntentResponse_confirmationPrompt.h"
#include "OAIGetIntentResponse_dialogCodeHook.h"
#include "OAIGetIntentResponse_followUpPrompt.h"
#include "OAIGetIntentResponse_fulfillmentActivity.h"
#include "OAIGetIntentResponse_kendraConfiguration.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetIntentResponse_confirmationPrompt;
class OAICreateIntentVersionResponse_rejectionStatement;
class OAIGetIntentResponse_followUpPrompt;
class OAIGetIntentResponse_conclusionStatement;
class OAIGetIntentResponse_dialogCodeHook;
class OAIGetIntentResponse_fulfillmentActivity;
class OAIGetIntentResponse_kendraConfiguration;

class OAIGetIntentResponse : public OAIObject {
public:
    OAIGetIntentResponse();
    OAIGetIntentResponse(QString json);
    ~OAIGetIntentResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList getRSlots() const;
    void setRSlots(const QList &r_slots);
    bool is_r_slots_Set() const;
    bool is_r_slots_Valid() const;

    QList getSampleUtterances() const;
    void setSampleUtterances(const QList &sample_utterances);
    bool is_sample_utterances_Set() const;
    bool is_sample_utterances_Valid() const;

    OAIGetIntentResponse_confirmationPrompt getConfirmationPrompt() const;
    void setConfirmationPrompt(const OAIGetIntentResponse_confirmationPrompt &confirmation_prompt);
    bool is_confirmation_prompt_Set() const;
    bool is_confirmation_prompt_Valid() const;

    OAICreateIntentVersionResponse_rejectionStatement getRejectionStatement() const;
    void setRejectionStatement(const OAICreateIntentVersionResponse_rejectionStatement &rejection_statement);
    bool is_rejection_statement_Set() const;
    bool is_rejection_statement_Valid() const;

    OAIGetIntentResponse_followUpPrompt getFollowUpPrompt() const;
    void setFollowUpPrompt(const OAIGetIntentResponse_followUpPrompt &follow_up_prompt);
    bool is_follow_up_prompt_Set() const;
    bool is_follow_up_prompt_Valid() const;

    OAIGetIntentResponse_conclusionStatement getConclusionStatement() const;
    void setConclusionStatement(const OAIGetIntentResponse_conclusionStatement &conclusion_statement);
    bool is_conclusion_statement_Set() const;
    bool is_conclusion_statement_Valid() const;

    OAIGetIntentResponse_dialogCodeHook getDialogCodeHook() const;
    void setDialogCodeHook(const OAIGetIntentResponse_dialogCodeHook &dialog_code_hook);
    bool is_dialog_code_hook_Set() const;
    bool is_dialog_code_hook_Valid() const;

    OAIGetIntentResponse_fulfillmentActivity getFulfillmentActivity() const;
    void setFulfillmentActivity(const OAIGetIntentResponse_fulfillmentActivity &fulfillment_activity);
    bool is_fulfillment_activity_Set() const;
    bool is_fulfillment_activity_Valid() const;

    QString getParentIntentSignature() const;
    void setParentIntentSignature(const QString &parent_intent_signature);
    bool is_parent_intent_signature_Set() const;
    bool is_parent_intent_signature_Valid() const;

    QDateTime getLastUpdatedDate() const;
    void setLastUpdatedDate(const QDateTime &last_updated_date);
    bool is_last_updated_date_Set() const;
    bool is_last_updated_date_Valid() const;

    QDateTime getCreatedDate() const;
    void setCreatedDate(const QDateTime &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getChecksum() const;
    void setChecksum(const QString &checksum);
    bool is_checksum_Set() const;
    bool is_checksum_Valid() const;

    OAIGetIntentResponse_kendraConfiguration getKendraConfiguration() const;
    void setKendraConfiguration(const OAIGetIntentResponse_kendraConfiguration &kendra_configuration);
    bool is_kendra_configuration_Set() const;
    bool is_kendra_configuration_Valid() const;

    QList getInputContexts() const;
    void setInputContexts(const QList &input_contexts);
    bool is_input_contexts_Set() const;
    bool is_input_contexts_Valid() const;

    QList getOutputContexts() const;
    void setOutputContexts(const QList &output_contexts);
    bool is_output_contexts_Set() const;
    bool is_output_contexts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList m_r_slots;
    bool m_r_slots_isSet;
    bool m_r_slots_isValid;

    QList m_sample_utterances;
    bool m_sample_utterances_isSet;
    bool m_sample_utterances_isValid;

    OAIGetIntentResponse_confirmationPrompt m_confirmation_prompt;
    bool m_confirmation_prompt_isSet;
    bool m_confirmation_prompt_isValid;

    OAICreateIntentVersionResponse_rejectionStatement m_rejection_statement;
    bool m_rejection_statement_isSet;
    bool m_rejection_statement_isValid;

    OAIGetIntentResponse_followUpPrompt m_follow_up_prompt;
    bool m_follow_up_prompt_isSet;
    bool m_follow_up_prompt_isValid;

    OAIGetIntentResponse_conclusionStatement m_conclusion_statement;
    bool m_conclusion_statement_isSet;
    bool m_conclusion_statement_isValid;

    OAIGetIntentResponse_dialogCodeHook m_dialog_code_hook;
    bool m_dialog_code_hook_isSet;
    bool m_dialog_code_hook_isValid;

    OAIGetIntentResponse_fulfillmentActivity m_fulfillment_activity;
    bool m_fulfillment_activity_isSet;
    bool m_fulfillment_activity_isValid;

    QString m_parent_intent_signature;
    bool m_parent_intent_signature_isSet;
    bool m_parent_intent_signature_isValid;

    QDateTime m_last_updated_date;
    bool m_last_updated_date_isSet;
    bool m_last_updated_date_isValid;

    QDateTime m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_checksum;
    bool m_checksum_isSet;
    bool m_checksum_isValid;

    OAIGetIntentResponse_kendraConfiguration m_kendra_configuration;
    bool m_kendra_configuration_isSet;
    bool m_kendra_configuration_isValid;

    QList m_input_contexts;
    bool m_input_contexts_isSet;
    bool m_input_contexts_isValid;

    QList m_output_contexts;
    bool m_output_contexts_isSet;
    bool m_output_contexts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetIntentResponse)

#endif // OAIGetIntentResponse_H
