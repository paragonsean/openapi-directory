/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutBotAliasRequest.h
 *
 * 
 */

#ifndef OAIPutBotAliasRequest_H
#define OAIPutBotAliasRequest_H

#include <QJsonObject>

#include "OAIPutBotAliasRequest_conversationLogs.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPutBotAliasRequest_conversationLogs;

class OAIPutBotAliasRequest : public OAIObject {
public:
    OAIPutBotAliasRequest();
    OAIPutBotAliasRequest(QString json);
    ~OAIPutBotAliasRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getBotVersion() const;
    void setBotVersion(const QString &bot_version);
    bool is_bot_version_Set() const;
    bool is_bot_version_Valid() const;

    QString getChecksum() const;
    void setChecksum(const QString &checksum);
    bool is_checksum_Set() const;
    bool is_checksum_Valid() const;

    OAIPutBotAliasRequest_conversationLogs getConversationLogs() const;
    void setConversationLogs(const OAIPutBotAliasRequest_conversationLogs &conversation_logs);
    bool is_conversation_logs_Set() const;
    bool is_conversation_logs_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_bot_version;
    bool m_bot_version_isSet;
    bool m_bot_version_isValid;

    QString m_checksum;
    bool m_checksum_isSet;
    bool m_checksum_isValid;

    OAIPutBotAliasRequest_conversationLogs m_conversation_logs;
    bool m_conversation_logs_isSet;
    bool m_conversation_logs_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutBotAliasRequest)

#endif // OAIPutBotAliasRequest_H
