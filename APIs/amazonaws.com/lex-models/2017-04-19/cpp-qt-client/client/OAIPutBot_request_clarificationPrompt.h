/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutBot_request_clarificationPrompt.h
 *
 * Obtains information from the user. To define a prompt, provide one or more messages and specify the number of attempts to get information from the user. If you provide more than one message, Amazon Lex chooses one of the messages to use to prompt the user. For more information, see &lt;a&gt;how-it-works&lt;/a&gt;.
 */

#ifndef OAIPutBot_request_clarificationPrompt_H
#define OAIPutBot_request_clarificationPrompt_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPutBot_request_clarificationPrompt : public OAIObject {
public:
    OAIPutBot_request_clarificationPrompt();
    OAIPutBot_request_clarificationPrompt(QString json);
    ~OAIPutBot_request_clarificationPrompt() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getMessages() const;
    void setMessages(const QList &messages);
    bool is_messages_Set() const;
    bool is_messages_Valid() const;

    qint32 getMaxAttempts() const;
    void setMaxAttempts(const qint32 &max_attempts);
    bool is_max_attempts_Set() const;
    bool is_max_attempts_Valid() const;

    QString getResponseCard() const;
    void setResponseCard(const QString &response_card);
    bool is_response_card_Set() const;
    bool is_response_card_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_messages;
    bool m_messages_isSet;
    bool m_messages_isValid;

    qint32 m_max_attempts;
    bool m_max_attempts_isSet;
    bool m_max_attempts_isValid;

    QString m_response_card;
    bool m_response_card_isSet;
    bool m_response_card_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutBot_request_clarificationPrompt)

#endif // OAIPutBot_request_clarificationPrompt_H
