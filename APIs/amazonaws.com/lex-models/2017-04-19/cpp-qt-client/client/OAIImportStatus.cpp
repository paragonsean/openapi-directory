/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIImportStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIImportStatus::OAIImportStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIImportStatus::OAIImportStatus() {
    this->initializeModel();
}

OAIImportStatus::~OAIImportStatus() {}

void OAIImportStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIImportStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIImportStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("IN_PROGRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIImportStatus::IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COMPLETE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIImportStatus::COMPLETE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIImportStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIImportStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIImportStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIImportStatus::IN_PROGRESS:
            val = "IN_PROGRESS";
            break;
        case eOAIImportStatus::COMPLETE:
            val = "COMPLETE";
            break;
        case eOAIImportStatus::FAILED:
            val = "FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIImportStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIImportStatus::eOAIImportStatus OAIImportStatus::getValue() const {
    return m_value;
}

void OAIImportStatus::setValue(const OAIImportStatus::eOAIImportStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIImportStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIImportStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
