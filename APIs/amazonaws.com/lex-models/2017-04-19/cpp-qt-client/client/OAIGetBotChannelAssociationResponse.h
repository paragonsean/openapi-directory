/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetBotChannelAssociationResponse.h
 *
 * 
 */

#ifndef OAIGetBotChannelAssociationResponse_H
#define OAIGetBotChannelAssociationResponse_H

#include <QJsonObject>

#include "OAIChannelStatus.h"
#include "OAIChannelType.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetBotChannelAssociationResponse : public OAIObject {
public:
    OAIGetBotChannelAssociationResponse();
    OAIGetBotChannelAssociationResponse(QString json);
    ~OAIGetBotChannelAssociationResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getBotAlias() const;
    void setBotAlias(const QString &bot_alias);
    bool is_bot_alias_Set() const;
    bool is_bot_alias_Valid() const;

    QString getBotName() const;
    void setBotName(const QString &bot_name);
    bool is_bot_name_Set() const;
    bool is_bot_name_Valid() const;

    QDateTime getCreatedDate() const;
    void setCreatedDate(const QDateTime &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    OAIChannelType getType() const;
    void setType(const OAIChannelType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QMap getBotConfiguration() const;
    void setBotConfiguration(const QMap &bot_configuration);
    bool is_bot_configuration_Set() const;
    bool is_bot_configuration_Valid() const;

    OAIChannelStatus getStatus() const;
    void setStatus(const OAIChannelStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getFailureReason() const;
    void setFailureReason(const QString &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_bot_alias;
    bool m_bot_alias_isSet;
    bool m_bot_alias_isValid;

    QString m_bot_name;
    bool m_bot_name_isSet;
    bool m_bot_name_isValid;

    QDateTime m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    OAIChannelType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QMap m_bot_configuration;
    bool m_bot_configuration_isSet;
    bool m_bot_configuration_isValid;

    OAIChannelStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetBotChannelAssociationResponse)

#endif // OAIGetBotChannelAssociationResponse_H
