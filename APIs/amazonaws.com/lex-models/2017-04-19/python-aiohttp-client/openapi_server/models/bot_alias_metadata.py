# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bot_alias_metadata_conversation_logs import BotAliasMetadataConversationLogs
from openapi_server import util


class BotAliasMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, description: str=None, bot_version: str=None, bot_name: str=None, last_updated_date: datetime=None, created_date: datetime=None, checksum: str=None, conversation_logs: BotAliasMetadataConversationLogs=None):
        """BotAliasMetadata - a model defined in OpenAPI

        :param name: The name of this BotAliasMetadata.
        :param description: The description of this BotAliasMetadata.
        :param bot_version: The bot_version of this BotAliasMetadata.
        :param bot_name: The bot_name of this BotAliasMetadata.
        :param last_updated_date: The last_updated_date of this BotAliasMetadata.
        :param created_date: The created_date of this BotAliasMetadata.
        :param checksum: The checksum of this BotAliasMetadata.
        :param conversation_logs: The conversation_logs of this BotAliasMetadata.
        """
        self.openapi_types = {
            'name': str,
            'description': str,
            'bot_version': str,
            'bot_name': str,
            'last_updated_date': datetime,
            'created_date': datetime,
            'checksum': str,
            'conversation_logs': BotAliasMetadataConversationLogs
        }

        self.attribute_map = {
            'name': 'name',
            'description': 'description',
            'bot_version': 'botVersion',
            'bot_name': 'botName',
            'last_updated_date': 'lastUpdatedDate',
            'created_date': 'createdDate',
            'checksum': 'checksum',
            'conversation_logs': 'conversationLogs'
        }

        self._name = name
        self._description = description
        self._bot_version = bot_version
        self._bot_name = bot_name
        self._last_updated_date = last_updated_date
        self._created_date = created_date
        self._checksum = checksum
        self._conversation_logs = conversation_logs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BotAliasMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BotAliasMetadata of this BotAliasMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this BotAliasMetadata.


        :return: The name of this BotAliasMetadata.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BotAliasMetadata.


        :param name: The name of this BotAliasMetadata.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this BotAliasMetadata.


        :return: The description of this BotAliasMetadata.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BotAliasMetadata.


        :param description: The description of this BotAliasMetadata.
        :type description: str
        """

        self._description = description

    @property
    def bot_version(self):
        """Gets the bot_version of this BotAliasMetadata.


        :return: The bot_version of this BotAliasMetadata.
        :rtype: str
        """
        return self._bot_version

    @bot_version.setter
    def bot_version(self, bot_version):
        """Sets the bot_version of this BotAliasMetadata.


        :param bot_version: The bot_version of this BotAliasMetadata.
        :type bot_version: str
        """

        self._bot_version = bot_version

    @property
    def bot_name(self):
        """Gets the bot_name of this BotAliasMetadata.


        :return: The bot_name of this BotAliasMetadata.
        :rtype: str
        """
        return self._bot_name

    @bot_name.setter
    def bot_name(self, bot_name):
        """Sets the bot_name of this BotAliasMetadata.


        :param bot_name: The bot_name of this BotAliasMetadata.
        :type bot_name: str
        """

        self._bot_name = bot_name

    @property
    def last_updated_date(self):
        """Gets the last_updated_date of this BotAliasMetadata.


        :return: The last_updated_date of this BotAliasMetadata.
        :rtype: datetime
        """
        return self._last_updated_date

    @last_updated_date.setter
    def last_updated_date(self, last_updated_date):
        """Sets the last_updated_date of this BotAliasMetadata.


        :param last_updated_date: The last_updated_date of this BotAliasMetadata.
        :type last_updated_date: datetime
        """

        self._last_updated_date = last_updated_date

    @property
    def created_date(self):
        """Gets the created_date of this BotAliasMetadata.


        :return: The created_date of this BotAliasMetadata.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this BotAliasMetadata.


        :param created_date: The created_date of this BotAliasMetadata.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def checksum(self):
        """Gets the checksum of this BotAliasMetadata.


        :return: The checksum of this BotAliasMetadata.
        :rtype: str
        """
        return self._checksum

    @checksum.setter
    def checksum(self, checksum):
        """Sets the checksum of this BotAliasMetadata.


        :param checksum: The checksum of this BotAliasMetadata.
        :type checksum: str
        """

        self._checksum = checksum

    @property
    def conversation_logs(self):
        """Gets the conversation_logs of this BotAliasMetadata.


        :return: The conversation_logs of this BotAliasMetadata.
        :rtype: BotAliasMetadataConversationLogs
        """
        return self._conversation_logs

    @conversation_logs.setter
    def conversation_logs(self, conversation_logs):
        """Sets the conversation_logs of this BotAliasMetadata.


        :param conversation_logs: The conversation_logs of this BotAliasMetadata.
        :type conversation_logs: BotAliasMetadataConversationLogs
        """

        self._conversation_logs = conversation_logs
