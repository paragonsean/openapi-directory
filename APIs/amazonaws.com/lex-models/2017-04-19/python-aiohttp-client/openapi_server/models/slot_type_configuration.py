# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.slot_type_configuration_regex_configuration import SlotTypeConfigurationRegexConfiguration
from openapi_server import util


class SlotTypeConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, regex_configuration: SlotTypeConfigurationRegexConfiguration=None):
        """SlotTypeConfiguration - a model defined in OpenAPI

        :param regex_configuration: The regex_configuration of this SlotTypeConfiguration.
        """
        self.openapi_types = {
            'regex_configuration': SlotTypeConfigurationRegexConfiguration
        }

        self.attribute_map = {
            'regex_configuration': 'regexConfiguration'
        }

        self._regex_configuration = regex_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SlotTypeConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SlotTypeConfiguration of this SlotTypeConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def regex_configuration(self):
        """Gets the regex_configuration of this SlotTypeConfiguration.


        :return: The regex_configuration of this SlotTypeConfiguration.
        :rtype: SlotTypeConfigurationRegexConfiguration
        """
        return self._regex_configuration

    @regex_configuration.setter
    def regex_configuration(self, regex_configuration):
        """Sets the regex_configuration of this SlotTypeConfiguration.


        :param regex_configuration: The regex_configuration of this SlotTypeConfiguration.
        :type regex_configuration: SlotTypeConfigurationRegexConfiguration
        """

        self._regex_configuration = regex_configuration
