# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.put_intent_request_follow_up_prompt_prompt import PutIntentRequestFollowUpPromptPrompt
from openapi_server.models.put_intent_request_follow_up_prompt_rejection_statement import PutIntentRequestFollowUpPromptRejectionStatement
from openapi_server import util


class FollowUpPrompt(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, prompt: PutIntentRequestFollowUpPromptPrompt=None, rejection_statement: PutIntentRequestFollowUpPromptRejectionStatement=None):
        """FollowUpPrompt - a model defined in OpenAPI

        :param prompt: The prompt of this FollowUpPrompt.
        :param rejection_statement: The rejection_statement of this FollowUpPrompt.
        """
        self.openapi_types = {
            'prompt': PutIntentRequestFollowUpPromptPrompt,
            'rejection_statement': PutIntentRequestFollowUpPromptRejectionStatement
        }

        self.attribute_map = {
            'prompt': 'prompt',
            'rejection_statement': 'rejectionStatement'
        }

        self._prompt = prompt
        self._rejection_statement = rejection_statement

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FollowUpPrompt':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FollowUpPrompt of this FollowUpPrompt.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prompt(self):
        """Gets the prompt of this FollowUpPrompt.


        :return: The prompt of this FollowUpPrompt.
        :rtype: PutIntentRequestFollowUpPromptPrompt
        """
        return self._prompt

    @prompt.setter
    def prompt(self, prompt):
        """Sets the prompt of this FollowUpPrompt.


        :param prompt: The prompt of this FollowUpPrompt.
        :type prompt: PutIntentRequestFollowUpPromptPrompt
        """
        if prompt is None:
            raise ValueError("Invalid value for `prompt`, must not be `None`")

        self._prompt = prompt

    @property
    def rejection_statement(self):
        """Gets the rejection_statement of this FollowUpPrompt.


        :return: The rejection_statement of this FollowUpPrompt.
        :rtype: PutIntentRequestFollowUpPromptRejectionStatement
        """
        return self._rejection_statement

    @rejection_statement.setter
    def rejection_statement(self, rejection_statement):
        """Sets the rejection_statement of this FollowUpPrompt.


        :param rejection_statement: The rejection_statement of this FollowUpPrompt.
        :type rejection_statement: PutIntentRequestFollowUpPromptRejectionStatement
        """
        if rejection_statement is None:
            raise ValueError("Invalid value for `rejection_statement`, must not be `None`")

        self._rejection_statement = rejection_statement
