# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.import_status import ImportStatus
from openapi_server.models.merge_strategy import MergeStrategy
from openapi_server.models.resource_type import ResourceType
from openapi_server import util


class StartImportResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, resource_type: ResourceType=None, merge_strategy: MergeStrategy=None, import_id: str=None, import_status: ImportStatus=None, tags: List=None, created_date: datetime=None):
        """StartImportResponse - a model defined in OpenAPI

        :param name: The name of this StartImportResponse.
        :param resource_type: The resource_type of this StartImportResponse.
        :param merge_strategy: The merge_strategy of this StartImportResponse.
        :param import_id: The import_id of this StartImportResponse.
        :param import_status: The import_status of this StartImportResponse.
        :param tags: The tags of this StartImportResponse.
        :param created_date: The created_date of this StartImportResponse.
        """
        self.openapi_types = {
            'name': str,
            'resource_type': ResourceType,
            'merge_strategy': MergeStrategy,
            'import_id': str,
            'import_status': ImportStatus,
            'tags': List,
            'created_date': datetime
        }

        self.attribute_map = {
            'name': 'name',
            'resource_type': 'resourceType',
            'merge_strategy': 'mergeStrategy',
            'import_id': 'importId',
            'import_status': 'importStatus',
            'tags': 'tags',
            'created_date': 'createdDate'
        }

        self._name = name
        self._resource_type = resource_type
        self._merge_strategy = merge_strategy
        self._import_id = import_id
        self._import_status = import_status
        self._tags = tags
        self._created_date = created_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartImportResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartImportResponse of this StartImportResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this StartImportResponse.


        :return: The name of this StartImportResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StartImportResponse.


        :param name: The name of this StartImportResponse.
        :type name: str
        """

        self._name = name

    @property
    def resource_type(self):
        """Gets the resource_type of this StartImportResponse.


        :return: The resource_type of this StartImportResponse.
        :rtype: ResourceType
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this StartImportResponse.


        :param resource_type: The resource_type of this StartImportResponse.
        :type resource_type: ResourceType
        """

        self._resource_type = resource_type

    @property
    def merge_strategy(self):
        """Gets the merge_strategy of this StartImportResponse.


        :return: The merge_strategy of this StartImportResponse.
        :rtype: MergeStrategy
        """
        return self._merge_strategy

    @merge_strategy.setter
    def merge_strategy(self, merge_strategy):
        """Sets the merge_strategy of this StartImportResponse.


        :param merge_strategy: The merge_strategy of this StartImportResponse.
        :type merge_strategy: MergeStrategy
        """

        self._merge_strategy = merge_strategy

    @property
    def import_id(self):
        """Gets the import_id of this StartImportResponse.


        :return: The import_id of this StartImportResponse.
        :rtype: str
        """
        return self._import_id

    @import_id.setter
    def import_id(self, import_id):
        """Sets the import_id of this StartImportResponse.


        :param import_id: The import_id of this StartImportResponse.
        :type import_id: str
        """

        self._import_id = import_id

    @property
    def import_status(self):
        """Gets the import_status of this StartImportResponse.


        :return: The import_status of this StartImportResponse.
        :rtype: ImportStatus
        """
        return self._import_status

    @import_status.setter
    def import_status(self, import_status):
        """Sets the import_status of this StartImportResponse.


        :param import_status: The import_status of this StartImportResponse.
        :type import_status: ImportStatus
        """

        self._import_status = import_status

    @property
    def tags(self):
        """Gets the tags of this StartImportResponse.


        :return: The tags of this StartImportResponse.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this StartImportResponse.


        :param tags: The tags of this StartImportResponse.
        :type tags: List
        """

        self._tags = tags

    @property
    def created_date(self):
        """Gets the created_date of this StartImportResponse.


        :return: The created_date of this StartImportResponse.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this StartImportResponse.


        :param created_date: The created_date of this StartImportResponse.
        :type created_date: datetime
        """

        self._created_date = created_date
