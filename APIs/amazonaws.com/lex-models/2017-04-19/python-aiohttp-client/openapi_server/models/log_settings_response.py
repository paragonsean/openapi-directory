# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destination import Destination
from openapi_server.models.log_type import LogType
from openapi_server import util


class LogSettingsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, log_type: LogType=None, destination: Destination=None, kms_key_arn: str=None, resource_arn: str=None, resource_prefix: str=None):
        """LogSettingsResponse - a model defined in OpenAPI

        :param log_type: The log_type of this LogSettingsResponse.
        :param destination: The destination of this LogSettingsResponse.
        :param kms_key_arn: The kms_key_arn of this LogSettingsResponse.
        :param resource_arn: The resource_arn of this LogSettingsResponse.
        :param resource_prefix: The resource_prefix of this LogSettingsResponse.
        """
        self.openapi_types = {
            'log_type': LogType,
            'destination': Destination,
            'kms_key_arn': str,
            'resource_arn': str,
            'resource_prefix': str
        }

        self.attribute_map = {
            'log_type': 'logType',
            'destination': 'destination',
            'kms_key_arn': 'kmsKeyArn',
            'resource_arn': 'resourceArn',
            'resource_prefix': 'resourcePrefix'
        }

        self._log_type = log_type
        self._destination = destination
        self._kms_key_arn = kms_key_arn
        self._resource_arn = resource_arn
        self._resource_prefix = resource_prefix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LogSettingsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LogSettingsResponse of this LogSettingsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log_type(self):
        """Gets the log_type of this LogSettingsResponse.


        :return: The log_type of this LogSettingsResponse.
        :rtype: LogType
        """
        return self._log_type

    @log_type.setter
    def log_type(self, log_type):
        """Sets the log_type of this LogSettingsResponse.


        :param log_type: The log_type of this LogSettingsResponse.
        :type log_type: LogType
        """

        self._log_type = log_type

    @property
    def destination(self):
        """Gets the destination of this LogSettingsResponse.


        :return: The destination of this LogSettingsResponse.
        :rtype: Destination
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this LogSettingsResponse.


        :param destination: The destination of this LogSettingsResponse.
        :type destination: Destination
        """

        self._destination = destination

    @property
    def kms_key_arn(self):
        """Gets the kms_key_arn of this LogSettingsResponse.


        :return: The kms_key_arn of this LogSettingsResponse.
        :rtype: str
        """
        return self._kms_key_arn

    @kms_key_arn.setter
    def kms_key_arn(self, kms_key_arn):
        """Sets the kms_key_arn of this LogSettingsResponse.


        :param kms_key_arn: The kms_key_arn of this LogSettingsResponse.
        :type kms_key_arn: str
        """

        self._kms_key_arn = kms_key_arn

    @property
    def resource_arn(self):
        """Gets the resource_arn of this LogSettingsResponse.


        :return: The resource_arn of this LogSettingsResponse.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this LogSettingsResponse.


        :param resource_arn: The resource_arn of this LogSettingsResponse.
        :type resource_arn: str
        """

        self._resource_arn = resource_arn

    @property
    def resource_prefix(self):
        """Gets the resource_prefix of this LogSettingsResponse.


        :return: The resource_prefix of this LogSettingsResponse.
        :rtype: str
        """
        return self._resource_prefix

    @resource_prefix.setter
    def resource_prefix(self, resource_prefix):
        """Sets the resource_prefix of this LogSettingsResponse.


        :param resource_prefix: The resource_prefix of this LogSettingsResponse.
        :type resource_prefix: str
        """

        self._resource_prefix = resource_prefix
