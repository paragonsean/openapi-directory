# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Intent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, intent_name: str=None, intent_version: str=None):
        """Intent - a model defined in OpenAPI

        :param intent_name: The intent_name of this Intent.
        :param intent_version: The intent_version of this Intent.
        """
        self.openapi_types = {
            'intent_name': str,
            'intent_version': str
        }

        self.attribute_map = {
            'intent_name': 'intentName',
            'intent_version': 'intentVersion'
        }

        self._intent_name = intent_name
        self._intent_version = intent_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Intent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Intent of this Intent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def intent_name(self):
        """Gets the intent_name of this Intent.


        :return: The intent_name of this Intent.
        :rtype: str
        """
        return self._intent_name

    @intent_name.setter
    def intent_name(self, intent_name):
        """Sets the intent_name of this Intent.


        :param intent_name: The intent_name of this Intent.
        :type intent_name: str
        """
        if intent_name is None:
            raise ValueError("Invalid value for `intent_name`, must not be `None`")

        self._intent_name = intent_name

    @property
    def intent_version(self):
        """Gets the intent_version of this Intent.


        :return: The intent_version of this Intent.
        :rtype: str
        """
        return self._intent_version

    @intent_version.setter
    def intent_version(self, intent_version):
        """Sets the intent_version of this Intent.


        :param intent_version: The intent_version of this Intent.
        :type intent_version: str
        """
        if intent_version is None:
            raise ValueError("Invalid value for `intent_version`, must not be `None`")

        self._intent_version = intent_version
