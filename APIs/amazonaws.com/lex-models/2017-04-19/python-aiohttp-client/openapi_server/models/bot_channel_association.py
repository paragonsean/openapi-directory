# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel_status import ChannelStatus
from openapi_server.models.channel_type import ChannelType
from openapi_server import util


class BotChannelAssociation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, description: str=None, bot_alias: str=None, bot_name: str=None, created_date: datetime=None, type: ChannelType=None, bot_configuration: Dict=None, status: ChannelStatus=None, failure_reason: str=None):
        """BotChannelAssociation - a model defined in OpenAPI

        :param name: The name of this BotChannelAssociation.
        :param description: The description of this BotChannelAssociation.
        :param bot_alias: The bot_alias of this BotChannelAssociation.
        :param bot_name: The bot_name of this BotChannelAssociation.
        :param created_date: The created_date of this BotChannelAssociation.
        :param type: The type of this BotChannelAssociation.
        :param bot_configuration: The bot_configuration of this BotChannelAssociation.
        :param status: The status of this BotChannelAssociation.
        :param failure_reason: The failure_reason of this BotChannelAssociation.
        """
        self.openapi_types = {
            'name': str,
            'description': str,
            'bot_alias': str,
            'bot_name': str,
            'created_date': datetime,
            'type': ChannelType,
            'bot_configuration': Dict,
            'status': ChannelStatus,
            'failure_reason': str
        }

        self.attribute_map = {
            'name': 'name',
            'description': 'description',
            'bot_alias': 'botAlias',
            'bot_name': 'botName',
            'created_date': 'createdDate',
            'type': 'type',
            'bot_configuration': 'botConfiguration',
            'status': 'status',
            'failure_reason': 'failureReason'
        }

        self._name = name
        self._description = description
        self._bot_alias = bot_alias
        self._bot_name = bot_name
        self._created_date = created_date
        self._type = type
        self._bot_configuration = bot_configuration
        self._status = status
        self._failure_reason = failure_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BotChannelAssociation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BotChannelAssociation of this BotChannelAssociation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this BotChannelAssociation.


        :return: The name of this BotChannelAssociation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BotChannelAssociation.


        :param name: The name of this BotChannelAssociation.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this BotChannelAssociation.


        :return: The description of this BotChannelAssociation.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BotChannelAssociation.


        :param description: The description of this BotChannelAssociation.
        :type description: str
        """

        self._description = description

    @property
    def bot_alias(self):
        """Gets the bot_alias of this BotChannelAssociation.


        :return: The bot_alias of this BotChannelAssociation.
        :rtype: str
        """
        return self._bot_alias

    @bot_alias.setter
    def bot_alias(self, bot_alias):
        """Sets the bot_alias of this BotChannelAssociation.


        :param bot_alias: The bot_alias of this BotChannelAssociation.
        :type bot_alias: str
        """

        self._bot_alias = bot_alias

    @property
    def bot_name(self):
        """Gets the bot_name of this BotChannelAssociation.


        :return: The bot_name of this BotChannelAssociation.
        :rtype: str
        """
        return self._bot_name

    @bot_name.setter
    def bot_name(self, bot_name):
        """Sets the bot_name of this BotChannelAssociation.


        :param bot_name: The bot_name of this BotChannelAssociation.
        :type bot_name: str
        """

        self._bot_name = bot_name

    @property
    def created_date(self):
        """Gets the created_date of this BotChannelAssociation.


        :return: The created_date of this BotChannelAssociation.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this BotChannelAssociation.


        :param created_date: The created_date of this BotChannelAssociation.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def type(self):
        """Gets the type of this BotChannelAssociation.


        :return: The type of this BotChannelAssociation.
        :rtype: ChannelType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this BotChannelAssociation.


        :param type: The type of this BotChannelAssociation.
        :type type: ChannelType
        """

        self._type = type

    @property
    def bot_configuration(self):
        """Gets the bot_configuration of this BotChannelAssociation.


        :return: The bot_configuration of this BotChannelAssociation.
        :rtype: Dict
        """
        return self._bot_configuration

    @bot_configuration.setter
    def bot_configuration(self, bot_configuration):
        """Sets the bot_configuration of this BotChannelAssociation.


        :param bot_configuration: The bot_configuration of this BotChannelAssociation.
        :type bot_configuration: Dict
        """

        self._bot_configuration = bot_configuration

    @property
    def status(self):
        """Gets the status of this BotChannelAssociation.


        :return: The status of this BotChannelAssociation.
        :rtype: ChannelStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BotChannelAssociation.


        :param status: The status of this BotChannelAssociation.
        :type status: ChannelStatus
        """

        self._status = status

    @property
    def failure_reason(self):
        """Gets the failure_reason of this BotChannelAssociation.


        :return: The failure_reason of this BotChannelAssociation.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this BotChannelAssociation.


        :param failure_reason: The failure_reason of this BotChannelAssociation.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason
