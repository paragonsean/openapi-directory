# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetIntentResponseConfirmationPrompt(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, messages: List=None, max_attempts: int=None, response_card: str=None):
        """GetIntentResponseConfirmationPrompt - a model defined in OpenAPI

        :param messages: The messages of this GetIntentResponseConfirmationPrompt.
        :param max_attempts: The max_attempts of this GetIntentResponseConfirmationPrompt.
        :param response_card: The response_card of this GetIntentResponseConfirmationPrompt.
        """
        self.openapi_types = {
            'messages': List,
            'max_attempts': int,
            'response_card': str
        }

        self.attribute_map = {
            'messages': 'messages',
            'max_attempts': 'maxAttempts',
            'response_card': 'responseCard'
        }

        self._messages = messages
        self._max_attempts = max_attempts
        self._response_card = response_card

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetIntentResponseConfirmationPrompt':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetIntentResponse_confirmationPrompt of this GetIntentResponseConfirmationPrompt.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def messages(self):
        """Gets the messages of this GetIntentResponseConfirmationPrompt.


        :return: The messages of this GetIntentResponseConfirmationPrompt.
        :rtype: List
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this GetIntentResponseConfirmationPrompt.


        :param messages: The messages of this GetIntentResponseConfirmationPrompt.
        :type messages: List
        """
        if messages is None:
            raise ValueError("Invalid value for `messages`, must not be `None`")

        self._messages = messages

    @property
    def max_attempts(self):
        """Gets the max_attempts of this GetIntentResponseConfirmationPrompt.


        :return: The max_attempts of this GetIntentResponseConfirmationPrompt.
        :rtype: int
        """
        return self._max_attempts

    @max_attempts.setter
    def max_attempts(self, max_attempts):
        """Sets the max_attempts of this GetIntentResponseConfirmationPrompt.


        :param max_attempts: The max_attempts of this GetIntentResponseConfirmationPrompt.
        :type max_attempts: int
        """
        if max_attempts is None:
            raise ValueError("Invalid value for `max_attempts`, must not be `None`")

        self._max_attempts = max_attempts

    @property
    def response_card(self):
        """Gets the response_card of this GetIntentResponseConfirmationPrompt.


        :return: The response_card of this GetIntentResponseConfirmationPrompt.
        :rtype: str
        """
        return self._response_card

    @response_card.setter
    def response_card(self, response_card):
        """Sets the response_card of this GetIntentResponseConfirmationPrompt.


        :param response_card: The response_card of this GetIntentResponseConfirmationPrompt.
        :type response_card: str
        """

        self._response_card = response_card
