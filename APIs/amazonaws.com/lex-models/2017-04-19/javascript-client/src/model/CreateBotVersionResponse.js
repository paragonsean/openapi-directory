/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateBotVersionResponseAbortStatement from './CreateBotVersionResponseAbortStatement';
import CreateBotVersionResponseClarificationPrompt from './CreateBotVersionResponseClarificationPrompt';
import Locale from './Locale';
import Status from './Status';

/**
 * The CreateBotVersionResponse model module.
 * @module model/CreateBotVersionResponse
 * @version 2017-04-19
 */
class CreateBotVersionResponse {
    /**
     * Constructs a new <code>CreateBotVersionResponse</code>.
     * @alias module:model/CreateBotVersionResponse
     */
    constructor() { 
        
        CreateBotVersionResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateBotVersionResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateBotVersionResponse} obj Optional instance to populate.
     * @return {module:model/CreateBotVersionResponse} The populated <code>CreateBotVersionResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateBotVersionResponse();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('intents')) {
                obj['intents'] = ApiClient.convertToType(data['intents'], Array);
            }
            if (data.hasOwnProperty('clarificationPrompt')) {
                obj['clarificationPrompt'] = CreateBotVersionResponseClarificationPrompt.constructFromObject(data['clarificationPrompt']);
            }
            if (data.hasOwnProperty('abortStatement')) {
                obj['abortStatement'] = CreateBotVersionResponseAbortStatement.constructFromObject(data['abortStatement']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], Status);
            }
            if (data.hasOwnProperty('failureReason')) {
                obj['failureReason'] = ApiClient.convertToType(data['failureReason'], 'String');
            }
            if (data.hasOwnProperty('lastUpdatedDate')) {
                obj['lastUpdatedDate'] = ApiClient.convertToType(data['lastUpdatedDate'], 'Date');
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'Date');
            }
            if (data.hasOwnProperty('idleSessionTTLInSeconds')) {
                obj['idleSessionTTLInSeconds'] = ApiClient.convertToType(data['idleSessionTTLInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('voiceId')) {
                obj['voiceId'] = ApiClient.convertToType(data['voiceId'], 'String');
            }
            if (data.hasOwnProperty('checksum')) {
                obj['checksum'] = ApiClient.convertToType(data['checksum'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], Locale);
            }
            if (data.hasOwnProperty('childDirected')) {
                obj['childDirected'] = ApiClient.convertToType(data['childDirected'], 'Boolean');
            }
            if (data.hasOwnProperty('enableModelImprovements')) {
                obj['enableModelImprovements'] = ApiClient.convertToType(data['enableModelImprovements'], 'Boolean');
            }
            if (data.hasOwnProperty('detectSentiment')) {
                obj['detectSentiment'] = ApiClient.convertToType(data['detectSentiment'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateBotVersionResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateBotVersionResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `intents`
        if (data['intents']) { // data not null
          Array.validateJSON(data['intents']);
        }
        // validate the optional field `clarificationPrompt`
        if (data['clarificationPrompt']) { // data not null
          CreateBotVersionResponseClarificationPrompt.validateJSON(data['clarificationPrompt']);
        }
        // validate the optional field `abortStatement`
        if (data['abortStatement']) { // data not null
          CreateBotVersionResponseAbortStatement.validateJSON(data['abortStatement']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          Status.validateJSON(data['status']);
        }
        // validate the optional field `failureReason`
        if (data['failureReason']) { // data not null
          String.validateJSON(data['failureReason']);
        }
        // validate the optional field `lastUpdatedDate`
        if (data['lastUpdatedDate']) { // data not null
          Date.validateJSON(data['lastUpdatedDate']);
        }
        // validate the optional field `createdDate`
        if (data['createdDate']) { // data not null
          Date.validateJSON(data['createdDate']);
        }
        // validate the optional field `idleSessionTTLInSeconds`
        if (data['idleSessionTTLInSeconds']) { // data not null
          Number.validateJSON(data['idleSessionTTLInSeconds']);
        }
        // validate the optional field `voiceId`
        if (data['voiceId']) { // data not null
          String.validateJSON(data['voiceId']);
        }
        // validate the optional field `checksum`
        if (data['checksum']) { // data not null
          String.validateJSON(data['checksum']);
        }
        // validate the optional field `version`
        if (data['version']) { // data not null
          String.validateJSON(data['version']);
        }
        // validate the optional field `locale`
        if (data['locale']) { // data not null
          Locale.validateJSON(data['locale']);
        }
        // validate the optional field `childDirected`
        if (data['childDirected']) { // data not null
          Boolean.validateJSON(data['childDirected']);
        }
        // validate the optional field `enableModelImprovements`
        if (data['enableModelImprovements']) { // data not null
          Boolean.validateJSON(data['enableModelImprovements']);
        }
        // validate the optional field `detectSentiment`
        if (data['detectSentiment']) { // data not null
          Boolean.validateJSON(data['detectSentiment']);
        }

        return true;
    }


}



/**
 * @member {String} name
 */
CreateBotVersionResponse.prototype['name'] = undefined;

/**
 * @member {String} description
 */
CreateBotVersionResponse.prototype['description'] = undefined;

/**
 * @member {Array} intents
 */
CreateBotVersionResponse.prototype['intents'] = undefined;

/**
 * @member {module:model/CreateBotVersionResponseClarificationPrompt} clarificationPrompt
 */
CreateBotVersionResponse.prototype['clarificationPrompt'] = undefined;

/**
 * @member {module:model/CreateBotVersionResponseAbortStatement} abortStatement
 */
CreateBotVersionResponse.prototype['abortStatement'] = undefined;

/**
 * @member {module:model/Status} status
 */
CreateBotVersionResponse.prototype['status'] = undefined;

/**
 * @member {String} failureReason
 */
CreateBotVersionResponse.prototype['failureReason'] = undefined;

/**
 * @member {Date} lastUpdatedDate
 */
CreateBotVersionResponse.prototype['lastUpdatedDate'] = undefined;

/**
 * @member {Date} createdDate
 */
CreateBotVersionResponse.prototype['createdDate'] = undefined;

/**
 * @member {Number} idleSessionTTLInSeconds
 */
CreateBotVersionResponse.prototype['idleSessionTTLInSeconds'] = undefined;

/**
 * @member {String} voiceId
 */
CreateBotVersionResponse.prototype['voiceId'] = undefined;

/**
 * @member {String} checksum
 */
CreateBotVersionResponse.prototype['checksum'] = undefined;

/**
 * @member {String} version
 */
CreateBotVersionResponse.prototype['version'] = undefined;

/**
 * @member {module:model/Locale} locale
 */
CreateBotVersionResponse.prototype['locale'] = undefined;

/**
 * @member {Boolean} childDirected
 */
CreateBotVersionResponse.prototype['childDirected'] = undefined;

/**
 * @member {Boolean} enableModelImprovements
 */
CreateBotVersionResponse.prototype['enableModelImprovements'] = undefined;

/**
 * @member {Boolean} detectSentiment
 */
CreateBotVersionResponse.prototype['detectSentiment'] = undefined;






export default CreateBotVersionResponse;

