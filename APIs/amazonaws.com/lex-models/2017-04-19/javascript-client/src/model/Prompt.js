/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Prompt model module.
 * @module model/Prompt
 * @version 2017-04-19
 */
class Prompt {
    /**
     * Constructs a new <code>Prompt</code>.
     * Obtains information from the user. To define a prompt, provide one or more messages and specify the number of attempts to get information from the user. If you provide more than one message, Amazon Lex chooses one of the messages to use to prompt the user. For more information, see &lt;a&gt;how-it-works&lt;/a&gt;.
     * @alias module:model/Prompt
     * @param messages {Array} 
     * @param maxAttempts {Number} 
     */
    constructor(messages, maxAttempts) { 
        
        Prompt.initialize(this, messages, maxAttempts);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, messages, maxAttempts) { 
        obj['messages'] = messages;
        obj['maxAttempts'] = maxAttempts;
    }

    /**
     * Constructs a <code>Prompt</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Prompt} obj Optional instance to populate.
     * @return {module:model/Prompt} The populated <code>Prompt</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Prompt();

            if (data.hasOwnProperty('messages')) {
                obj['messages'] = ApiClient.convertToType(data['messages'], Array);
            }
            if (data.hasOwnProperty('maxAttempts')) {
                obj['maxAttempts'] = ApiClient.convertToType(data['maxAttempts'], 'Number');
            }
            if (data.hasOwnProperty('responseCard')) {
                obj['responseCard'] = ApiClient.convertToType(data['responseCard'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Prompt</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Prompt</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Prompt.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `messages`
        if (data['messages']) { // data not null
          Array.validateJSON(data['messages']);
        }
        // validate the optional field `maxAttempts`
        if (data['maxAttempts']) { // data not null
          Number.validateJSON(data['maxAttempts']);
        }
        // validate the optional field `responseCard`
        if (data['responseCard']) { // data not null
          String.validateJSON(data['responseCard']);
        }

        return true;
    }


}

Prompt.RequiredProperties = ["messages", "maxAttempts"];

/**
 * @member {Array} messages
 */
Prompt.prototype['messages'] = undefined;

/**
 * @member {Number} maxAttempts
 */
Prompt.prototype['maxAttempts'] = undefined;

/**
 * @member {String} responseCard
 */
Prompt.prototype['responseCard'] = undefined;






export default Prompt;

