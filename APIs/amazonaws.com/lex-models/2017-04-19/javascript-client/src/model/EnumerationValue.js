/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EnumerationValue model module.
 * @module model/EnumerationValue
 * @version 2017-04-19
 */
class EnumerationValue {
    /**
     * Constructs a new <code>EnumerationValue</code>.
     * &lt;p&gt;Each slot type can have a set of values. Each enumeration value represents a value the slot type can take. &lt;/p&gt; &lt;p&gt;For example, a pizza ordering bot could have a slot type that specifies the type of crust that the pizza should have. The slot type could include the values &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;thick&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;thin&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;stuffed&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     * @alias module:model/EnumerationValue
     * @param value {String} 
     */
    constructor(value) { 
        
        EnumerationValue.initialize(this, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, value) { 
        obj['value'] = value;
    }

    /**
     * Constructs a <code>EnumerationValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnumerationValue} obj Optional instance to populate.
     * @return {module:model/EnumerationValue} The populated <code>EnumerationValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnumerationValue();

            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('synonyms')) {
                obj['synonyms'] = ApiClient.convertToType(data['synonyms'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnumerationValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnumerationValue</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EnumerationValue.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `value`
        if (data['value']) { // data not null
          String.validateJSON(data['value']);
        }
        // validate the optional field `synonyms`
        if (data['synonyms']) { // data not null
          Array.validateJSON(data['synonyms']);
        }

        return true;
    }


}

EnumerationValue.RequiredProperties = ["value"];

/**
 * @member {String} value
 */
EnumerationValue.prototype['value'] = undefined;

/**
 * @member {Array} synonyms
 */
EnumerationValue.prototype['synonyms'] = undefined;






export default EnumerationValue;

