/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FulfillmentActivityType from './FulfillmentActivityType';
import PutIntentRequestFulfillmentActivityCodeHook from './PutIntentRequestFulfillmentActivityCodeHook';

/**
 * The FulfillmentActivity model module.
 * @module model/FulfillmentActivity
 * @version 2017-04-19
 */
class FulfillmentActivity {
    /**
     * Constructs a new <code>FulfillmentActivity</code>.
     * &lt;p&gt; Describes how the intent is fulfilled after the user provides all of the information required for the intent. You can provide a Lambda function to process the intent, or you can return the intent information to the client application. We recommend that you use a Lambda function so that the relevant logic lives in the Cloud and limit the client-side code primarily to presentation. If you need to update the logic, you only update the Lambda function; you don&#39;t need to upgrade your client application. &lt;/p&gt; &lt;p&gt;Consider the following examples:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;In a pizza ordering application, after the user provides all of the information for placing an order, you use a Lambda function to place an order with a pizzeria. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;In a gaming application, when a user says \&quot;pick up a rock,\&quot; this information must go back to the client application so that it can perform the operation and update the graphics. In this case, you want Amazon Lex to return the intent data to the client. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     * @alias module:model/FulfillmentActivity
     * @param type {module:model/FulfillmentActivityType} 
     */
    constructor(type) { 
        
        FulfillmentActivity.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['type'] = type;
    }

    /**
     * Constructs a <code>FulfillmentActivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FulfillmentActivity} obj Optional instance to populate.
     * @return {module:model/FulfillmentActivity} The populated <code>FulfillmentActivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FulfillmentActivity();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], FulfillmentActivityType);
            }
            if (data.hasOwnProperty('codeHook')) {
                obj['codeHook'] = PutIntentRequestFulfillmentActivityCodeHook.constructFromObject(data['codeHook']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FulfillmentActivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FulfillmentActivity</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FulfillmentActivity.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          FulfillmentActivityType.validateJSON(data['type']);
        }
        // validate the optional field `codeHook`
        if (data['codeHook']) { // data not null
          PutIntentRequestFulfillmentActivityCodeHook.validateJSON(data['codeHook']);
        }

        return true;
    }


}

FulfillmentActivity.RequiredProperties = ["type"];

/**
 * @member {module:model/FulfillmentActivityType} type
 */
FulfillmentActivity.prototype['type'] = undefined;

/**
 * @member {module:model/PutIntentRequestFulfillmentActivityCodeHook} codeHook
 */
FulfillmentActivity.prototype['codeHook'] = undefined;






export default FulfillmentActivity;

