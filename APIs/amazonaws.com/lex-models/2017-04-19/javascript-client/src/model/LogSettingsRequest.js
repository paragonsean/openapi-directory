/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Destination from './Destination';
import LogType from './LogType';

/**
 * The LogSettingsRequest model module.
 * @module model/LogSettingsRequest
 * @version 2017-04-19
 */
class LogSettingsRequest {
    /**
     * Constructs a new <code>LogSettingsRequest</code>.
     * Settings used to configure delivery mode and destination for conversation logs.
     * @alias module:model/LogSettingsRequest
     * @param logType {module:model/LogType} 
     * @param destination {module:model/Destination} 
     * @param resourceArn {String} 
     */
    constructor(logType, destination, resourceArn) { 
        
        LogSettingsRequest.initialize(this, logType, destination, resourceArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, logType, destination, resourceArn) { 
        obj['logType'] = logType;
        obj['destination'] = destination;
        obj['resourceArn'] = resourceArn;
    }

    /**
     * Constructs a <code>LogSettingsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LogSettingsRequest} obj Optional instance to populate.
     * @return {module:model/LogSettingsRequest} The populated <code>LogSettingsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LogSettingsRequest();

            if (data.hasOwnProperty('logType')) {
                obj['logType'] = ApiClient.convertToType(data['logType'], LogType);
            }
            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], Destination);
            }
            if (data.hasOwnProperty('kmsKeyArn')) {
                obj['kmsKeyArn'] = ApiClient.convertToType(data['kmsKeyArn'], 'String');
            }
            if (data.hasOwnProperty('resourceArn')) {
                obj['resourceArn'] = ApiClient.convertToType(data['resourceArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LogSettingsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LogSettingsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LogSettingsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `logType`
        if (data['logType']) { // data not null
          LogType.validateJSON(data['logType']);
        }
        // validate the optional field `destination`
        if (data['destination']) { // data not null
          Destination.validateJSON(data['destination']);
        }
        // validate the optional field `kmsKeyArn`
        if (data['kmsKeyArn']) { // data not null
          String.validateJSON(data['kmsKeyArn']);
        }
        // validate the optional field `resourceArn`
        if (data['resourceArn']) { // data not null
          String.validateJSON(data['resourceArn']);
        }

        return true;
    }


}

LogSettingsRequest.RequiredProperties = ["logType", "destination", "resourceArn"];

/**
 * @member {module:model/LogType} logType
 */
LogSettingsRequest.prototype['logType'] = undefined;

/**
 * @member {module:model/Destination} destination
 */
LogSettingsRequest.prototype['destination'] = undefined;

/**
 * @member {String} kmsKeyArn
 */
LogSettingsRequest.prototype['kmsKeyArn'] = undefined;

/**
 * @member {String} resourceArn
 */
LogSettingsRequest.prototype['resourceArn'] = undefined;






export default LogSettingsRequest;

