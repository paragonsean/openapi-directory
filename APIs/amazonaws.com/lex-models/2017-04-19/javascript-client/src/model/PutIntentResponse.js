/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PutIntentResponseConclusionStatement from './PutIntentResponseConclusionStatement';
import PutIntentResponseConfirmationPrompt from './PutIntentResponseConfirmationPrompt';
import PutIntentResponseDialogCodeHook from './PutIntentResponseDialogCodeHook';
import PutIntentResponseFollowUpPrompt from './PutIntentResponseFollowUpPrompt';
import PutIntentResponseFulfillmentActivity from './PutIntentResponseFulfillmentActivity';
import PutIntentResponseKendraConfiguration from './PutIntentResponseKendraConfiguration';
import PutIntentResponseRejectionStatement from './PutIntentResponseRejectionStatement';

/**
 * The PutIntentResponse model module.
 * @module model/PutIntentResponse
 * @version 2017-04-19
 */
class PutIntentResponse {
    /**
     * Constructs a new <code>PutIntentResponse</code>.
     * @alias module:model/PutIntentResponse
     */
    constructor() { 
        
        PutIntentResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PutIntentResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutIntentResponse} obj Optional instance to populate.
     * @return {module:model/PutIntentResponse} The populated <code>PutIntentResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutIntentResponse();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('slots')) {
                obj['slots'] = ApiClient.convertToType(data['slots'], Array);
            }
            if (data.hasOwnProperty('sampleUtterances')) {
                obj['sampleUtterances'] = ApiClient.convertToType(data['sampleUtterances'], Array);
            }
            if (data.hasOwnProperty('confirmationPrompt')) {
                obj['confirmationPrompt'] = PutIntentResponseConfirmationPrompt.constructFromObject(data['confirmationPrompt']);
            }
            if (data.hasOwnProperty('rejectionStatement')) {
                obj['rejectionStatement'] = PutIntentResponseRejectionStatement.constructFromObject(data['rejectionStatement']);
            }
            if (data.hasOwnProperty('followUpPrompt')) {
                obj['followUpPrompt'] = PutIntentResponseFollowUpPrompt.constructFromObject(data['followUpPrompt']);
            }
            if (data.hasOwnProperty('conclusionStatement')) {
                obj['conclusionStatement'] = PutIntentResponseConclusionStatement.constructFromObject(data['conclusionStatement']);
            }
            if (data.hasOwnProperty('dialogCodeHook')) {
                obj['dialogCodeHook'] = PutIntentResponseDialogCodeHook.constructFromObject(data['dialogCodeHook']);
            }
            if (data.hasOwnProperty('fulfillmentActivity')) {
                obj['fulfillmentActivity'] = PutIntentResponseFulfillmentActivity.constructFromObject(data['fulfillmentActivity']);
            }
            if (data.hasOwnProperty('parentIntentSignature')) {
                obj['parentIntentSignature'] = ApiClient.convertToType(data['parentIntentSignature'], 'String');
            }
            if (data.hasOwnProperty('lastUpdatedDate')) {
                obj['lastUpdatedDate'] = ApiClient.convertToType(data['lastUpdatedDate'], 'Date');
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'Date');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('checksum')) {
                obj['checksum'] = ApiClient.convertToType(data['checksum'], 'String');
            }
            if (data.hasOwnProperty('createVersion')) {
                obj['createVersion'] = ApiClient.convertToType(data['createVersion'], 'Boolean');
            }
            if (data.hasOwnProperty('kendraConfiguration')) {
                obj['kendraConfiguration'] = PutIntentResponseKendraConfiguration.constructFromObject(data['kendraConfiguration']);
            }
            if (data.hasOwnProperty('inputContexts')) {
                obj['inputContexts'] = ApiClient.convertToType(data['inputContexts'], Array);
            }
            if (data.hasOwnProperty('outputContexts')) {
                obj['outputContexts'] = ApiClient.convertToType(data['outputContexts'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutIntentResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutIntentResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `slots`
        if (data['slots']) { // data not null
          Array.validateJSON(data['slots']);
        }
        // validate the optional field `sampleUtterances`
        if (data['sampleUtterances']) { // data not null
          Array.validateJSON(data['sampleUtterances']);
        }
        // validate the optional field `confirmationPrompt`
        if (data['confirmationPrompt']) { // data not null
          PutIntentResponseConfirmationPrompt.validateJSON(data['confirmationPrompt']);
        }
        // validate the optional field `rejectionStatement`
        if (data['rejectionStatement']) { // data not null
          PutIntentResponseRejectionStatement.validateJSON(data['rejectionStatement']);
        }
        // validate the optional field `followUpPrompt`
        if (data['followUpPrompt']) { // data not null
          PutIntentResponseFollowUpPrompt.validateJSON(data['followUpPrompt']);
        }
        // validate the optional field `conclusionStatement`
        if (data['conclusionStatement']) { // data not null
          PutIntentResponseConclusionStatement.validateJSON(data['conclusionStatement']);
        }
        // validate the optional field `dialogCodeHook`
        if (data['dialogCodeHook']) { // data not null
          PutIntentResponseDialogCodeHook.validateJSON(data['dialogCodeHook']);
        }
        // validate the optional field `fulfillmentActivity`
        if (data['fulfillmentActivity']) { // data not null
          PutIntentResponseFulfillmentActivity.validateJSON(data['fulfillmentActivity']);
        }
        // validate the optional field `parentIntentSignature`
        if (data['parentIntentSignature']) { // data not null
          String.validateJSON(data['parentIntentSignature']);
        }
        // validate the optional field `lastUpdatedDate`
        if (data['lastUpdatedDate']) { // data not null
          Date.validateJSON(data['lastUpdatedDate']);
        }
        // validate the optional field `createdDate`
        if (data['createdDate']) { // data not null
          Date.validateJSON(data['createdDate']);
        }
        // validate the optional field `version`
        if (data['version']) { // data not null
          String.validateJSON(data['version']);
        }
        // validate the optional field `checksum`
        if (data['checksum']) { // data not null
          String.validateJSON(data['checksum']);
        }
        // validate the optional field `createVersion`
        if (data['createVersion']) { // data not null
          Boolean.validateJSON(data['createVersion']);
        }
        // validate the optional field `kendraConfiguration`
        if (data['kendraConfiguration']) { // data not null
          PutIntentResponseKendraConfiguration.validateJSON(data['kendraConfiguration']);
        }
        // validate the optional field `inputContexts`
        if (data['inputContexts']) { // data not null
          Array.validateJSON(data['inputContexts']);
        }
        // validate the optional field `outputContexts`
        if (data['outputContexts']) { // data not null
          Array.validateJSON(data['outputContexts']);
        }

        return true;
    }


}



/**
 * @member {String} name
 */
PutIntentResponse.prototype['name'] = undefined;

/**
 * @member {String} description
 */
PutIntentResponse.prototype['description'] = undefined;

/**
 * @member {Array} slots
 */
PutIntentResponse.prototype['slots'] = undefined;

/**
 * @member {Array} sampleUtterances
 */
PutIntentResponse.prototype['sampleUtterances'] = undefined;

/**
 * @member {module:model/PutIntentResponseConfirmationPrompt} confirmationPrompt
 */
PutIntentResponse.prototype['confirmationPrompt'] = undefined;

/**
 * @member {module:model/PutIntentResponseRejectionStatement} rejectionStatement
 */
PutIntentResponse.prototype['rejectionStatement'] = undefined;

/**
 * @member {module:model/PutIntentResponseFollowUpPrompt} followUpPrompt
 */
PutIntentResponse.prototype['followUpPrompt'] = undefined;

/**
 * @member {module:model/PutIntentResponseConclusionStatement} conclusionStatement
 */
PutIntentResponse.prototype['conclusionStatement'] = undefined;

/**
 * @member {module:model/PutIntentResponseDialogCodeHook} dialogCodeHook
 */
PutIntentResponse.prototype['dialogCodeHook'] = undefined;

/**
 * @member {module:model/PutIntentResponseFulfillmentActivity} fulfillmentActivity
 */
PutIntentResponse.prototype['fulfillmentActivity'] = undefined;

/**
 * @member {String} parentIntentSignature
 */
PutIntentResponse.prototype['parentIntentSignature'] = undefined;

/**
 * @member {Date} lastUpdatedDate
 */
PutIntentResponse.prototype['lastUpdatedDate'] = undefined;

/**
 * @member {Date} createdDate
 */
PutIntentResponse.prototype['createdDate'] = undefined;

/**
 * @member {String} version
 */
PutIntentResponse.prototype['version'] = undefined;

/**
 * @member {String} checksum
 */
PutIntentResponse.prototype['checksum'] = undefined;

/**
 * @member {Boolean} createVersion
 */
PutIntentResponse.prototype['createVersion'] = undefined;

/**
 * @member {module:model/PutIntentResponseKendraConfiguration} kendraConfiguration
 */
PutIntentResponse.prototype['kendraConfiguration'] = undefined;

/**
 * @member {Array} inputContexts
 */
PutIntentResponse.prototype['inputContexts'] = undefined;

/**
 * @member {Array} outputContexts
 */
PutIntentResponse.prototype['outputContexts'] = undefined;






export default PutIntentResponse;

