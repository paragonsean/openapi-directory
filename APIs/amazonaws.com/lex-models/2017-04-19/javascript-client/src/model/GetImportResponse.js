/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImportStatus from './ImportStatus';
import MergeStrategy from './MergeStrategy';
import ResourceType from './ResourceType';

/**
 * The GetImportResponse model module.
 * @module model/GetImportResponse
 * @version 2017-04-19
 */
class GetImportResponse {
    /**
     * Constructs a new <code>GetImportResponse</code>.
     * @alias module:model/GetImportResponse
     */
    constructor() { 
        
        GetImportResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetImportResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetImportResponse} obj Optional instance to populate.
     * @return {module:model/GetImportResponse} The populated <code>GetImportResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetImportResponse();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('resourceType')) {
                obj['resourceType'] = ApiClient.convertToType(data['resourceType'], ResourceType);
            }
            if (data.hasOwnProperty('mergeStrategy')) {
                obj['mergeStrategy'] = ApiClient.convertToType(data['mergeStrategy'], MergeStrategy);
            }
            if (data.hasOwnProperty('importId')) {
                obj['importId'] = ApiClient.convertToType(data['importId'], 'String');
            }
            if (data.hasOwnProperty('importStatus')) {
                obj['importStatus'] = ApiClient.convertToType(data['importStatus'], ImportStatus);
            }
            if (data.hasOwnProperty('failureReason')) {
                obj['failureReason'] = ApiClient.convertToType(data['failureReason'], Array);
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetImportResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetImportResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `resourceType`
        if (data['resourceType']) { // data not null
          ResourceType.validateJSON(data['resourceType']);
        }
        // validate the optional field `mergeStrategy`
        if (data['mergeStrategy']) { // data not null
          MergeStrategy.validateJSON(data['mergeStrategy']);
        }
        // validate the optional field `importId`
        if (data['importId']) { // data not null
          String.validateJSON(data['importId']);
        }
        // validate the optional field `importStatus`
        if (data['importStatus']) { // data not null
          ImportStatus.validateJSON(data['importStatus']);
        }
        // validate the optional field `failureReason`
        if (data['failureReason']) { // data not null
          Array.validateJSON(data['failureReason']);
        }
        // validate the optional field `createdDate`
        if (data['createdDate']) { // data not null
          Date.validateJSON(data['createdDate']);
        }

        return true;
    }


}



/**
 * @member {String} name
 */
GetImportResponse.prototype['name'] = undefined;

/**
 * @member {module:model/ResourceType} resourceType
 */
GetImportResponse.prototype['resourceType'] = undefined;

/**
 * @member {module:model/MergeStrategy} mergeStrategy
 */
GetImportResponse.prototype['mergeStrategy'] = undefined;

/**
 * @member {String} importId
 */
GetImportResponse.prototype['importId'] = undefined;

/**
 * @member {module:model/ImportStatus} importStatus
 */
GetImportResponse.prototype['importStatus'] = undefined;

/**
 * @member {Array} failureReason
 */
GetImportResponse.prototype['failureReason'] = undefined;

/**
 * @member {Date} createdDate
 */
GetImportResponse.prototype['createdDate'] = undefined;






export default GetImportResponse;

