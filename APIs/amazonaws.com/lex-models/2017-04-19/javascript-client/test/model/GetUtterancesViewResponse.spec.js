/**
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonLexModelBuildingService);
  }
}(this, function(expect, AmazonLexModelBuildingService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonLexModelBuildingService.GetUtterancesViewResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetUtterancesViewResponse', function() {
    it('should create an instance of GetUtterancesViewResponse', function() {
      // uncomment below and update the code to test GetUtterancesViewResponse
      //var instance = new AmazonLexModelBuildingService.GetUtterancesViewResponse();
      //expect(instance).to.be.a(AmazonLexModelBuildingService.GetUtterancesViewResponse);
    });

    it('should have the property botName (base name: "botName")', function() {
      // uncomment below and update the code to test the property botName
      //var instance = new AmazonLexModelBuildingService.GetUtterancesViewResponse();
      //expect(instance).to.be();
    });

    it('should have the property utterances (base name: "utterances")', function() {
      // uncomment below and update the code to test the property utterances
      //var instance = new AmazonLexModelBuildingService.GetUtterancesViewResponse();
      //expect(instance).to.be();
    });

  });

}));
