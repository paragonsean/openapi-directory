/*
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.ChannelStatus;
import org.openapitools.client.model.ChannelType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetBotChannelAssociationResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:37.850486-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetBotChannelAssociationResponse {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_BOT_ALIAS = "botAlias";
  @SerializedName(SERIALIZED_NAME_BOT_ALIAS)
  private String botAlias;

  public static final String SERIALIZED_NAME_BOT_NAME = "botName";
  @SerializedName(SERIALIZED_NAME_BOT_NAME)
  private String botName;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private ChannelType type;

  public static final String SERIALIZED_NAME_BOT_CONFIGURATION = "botConfiguration";
  @SerializedName(SERIALIZED_NAME_BOT_CONFIGURATION)
  private Map botConfiguration;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ChannelStatus status;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "failureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public GetBotChannelAssociationResponse() {
  }

  public GetBotChannelAssociationResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetBotChannelAssociationResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GetBotChannelAssociationResponse botAlias(String botAlias) {
    this.botAlias = botAlias;
    return this;
  }

  /**
   * Get botAlias
   * @return botAlias
   */
  @javax.annotation.Nullable
  public String getBotAlias() {
    return botAlias;
  }

  public void setBotAlias(String botAlias) {
    this.botAlias = botAlias;
  }


  public GetBotChannelAssociationResponse botName(String botName) {
    this.botName = botName;
    return this;
  }

  /**
   * Get botName
   * @return botName
   */
  @javax.annotation.Nullable
  public String getBotName() {
    return botName;
  }

  public void setBotName(String botName) {
    this.botName = botName;
  }


  public GetBotChannelAssociationResponse createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Get createdDate
   * @return createdDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public GetBotChannelAssociationResponse type(ChannelType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public ChannelType getType() {
    return type;
  }

  public void setType(ChannelType type) {
    this.type = type;
  }


  public GetBotChannelAssociationResponse botConfiguration(Map botConfiguration) {
    this.botConfiguration = botConfiguration;
    return this;
  }

  /**
   * Get botConfiguration
   * @return botConfiguration
   */
  @javax.annotation.Nullable
  public Map getBotConfiguration() {
    return botConfiguration;
  }

  public void setBotConfiguration(Map botConfiguration) {
    this.botConfiguration = botConfiguration;
  }


  public GetBotChannelAssociationResponse status(ChannelStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ChannelStatus getStatus() {
    return status;
  }

  public void setStatus(ChannelStatus status) {
    this.status = status;
  }


  public GetBotChannelAssociationResponse failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * Get failureReason
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetBotChannelAssociationResponse getBotChannelAssociationResponse = (GetBotChannelAssociationResponse) o;
    return Objects.equals(this.name, getBotChannelAssociationResponse.name) &&
        Objects.equals(this.description, getBotChannelAssociationResponse.description) &&
        Objects.equals(this.botAlias, getBotChannelAssociationResponse.botAlias) &&
        Objects.equals(this.botName, getBotChannelAssociationResponse.botName) &&
        Objects.equals(this.createdDate, getBotChannelAssociationResponse.createdDate) &&
        Objects.equals(this.type, getBotChannelAssociationResponse.type) &&
        Objects.equals(this.botConfiguration, getBotChannelAssociationResponse.botConfiguration) &&
        Objects.equals(this.status, getBotChannelAssociationResponse.status) &&
        Objects.equals(this.failureReason, getBotChannelAssociationResponse.failureReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, botAlias, botName, createdDate, type, botConfiguration, status, failureReason);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetBotChannelAssociationResponse {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    botAlias: ").append(toIndentedString(botAlias)).append("\n");
    sb.append("    botName: ").append(toIndentedString(botName)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    botConfiguration: ").append(toIndentedString(botConfiguration)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("botAlias");
    openapiFields.add("botName");
    openapiFields.add("createdDate");
    openapiFields.add("type");
    openapiFields.add("botConfiguration");
    openapiFields.add("status");
    openapiFields.add("failureReason");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetBotChannelAssociationResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetBotChannelAssociationResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetBotChannelAssociationResponse is not found in the empty JSON string", GetBotChannelAssociationResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetBotChannelAssociationResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetBotChannelAssociationResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `botAlias`
      if (jsonObj.get("botAlias") != null && !jsonObj.get("botAlias").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botAlias"));
      }
      // validate the optional field `botName`
      if (jsonObj.get("botName") != null && !jsonObj.get("botName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("botName"));
      }
      // validate the optional field `createdDate`
      if (jsonObj.get("createdDate") != null && !jsonObj.get("createdDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdDate"));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        ChannelType.validateJsonElement(jsonObj.get("type"));
      }
      // validate the optional field `botConfiguration`
      if (jsonObj.get("botConfiguration") != null && !jsonObj.get("botConfiguration").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("botConfiguration"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        ChannelStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `failureReason`
      if (jsonObj.get("failureReason") != null && !jsonObj.get("failureReason").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("failureReason"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetBotChannelAssociationResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetBotChannelAssociationResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetBotChannelAssociationResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetBotChannelAssociationResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetBotChannelAssociationResponse>() {
           @Override
           public void write(JsonWriter out, GetBotChannelAssociationResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetBotChannelAssociationResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetBotChannelAssociationResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetBotChannelAssociationResponse
   * @throws IOException if the JSON string is invalid with respect to GetBotChannelAssociationResponse
   */
  public static GetBotChannelAssociationResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetBotChannelAssociationResponse.class);
  }

  /**
   * Convert an instance of GetBotChannelAssociationResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

