/*
 * Amazon Lex Model Building Service
 * <fullname>Amazon Lex Build-Time Actions</fullname> <p> Amazon Lex is an AWS service for building conversational voice and text interfaces. Use these actions to create, update, and delete conversational bots for new and existing client applications. </p>
 *
 * The version of the OpenAPI document: 2017-04-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateIntentVersionResponseRejectionStatement;
import org.openapitools.client.model.GetIntentResponseConclusionStatement;
import org.openapitools.client.model.GetIntentResponseConfirmationPrompt;
import org.openapitools.client.model.GetIntentResponseDialogCodeHook;
import org.openapitools.client.model.GetIntentResponseFollowUpPrompt;
import org.openapitools.client.model.GetIntentResponseFulfillmentActivity;
import org.openapitools.client.model.GetIntentResponseKendraConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetIntentResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:37.850486-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetIntentResponse {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SLOTS = "slots";
  @SerializedName(SERIALIZED_NAME_SLOTS)
  private List slots;

  public static final String SERIALIZED_NAME_SAMPLE_UTTERANCES = "sampleUtterances";
  @SerializedName(SERIALIZED_NAME_SAMPLE_UTTERANCES)
  private List sampleUtterances;

  public static final String SERIALIZED_NAME_CONFIRMATION_PROMPT = "confirmationPrompt";
  @SerializedName(SERIALIZED_NAME_CONFIRMATION_PROMPT)
  private GetIntentResponseConfirmationPrompt confirmationPrompt;

  public static final String SERIALIZED_NAME_REJECTION_STATEMENT = "rejectionStatement";
  @SerializedName(SERIALIZED_NAME_REJECTION_STATEMENT)
  private CreateIntentVersionResponseRejectionStatement rejectionStatement;

  public static final String SERIALIZED_NAME_FOLLOW_UP_PROMPT = "followUpPrompt";
  @SerializedName(SERIALIZED_NAME_FOLLOW_UP_PROMPT)
  private GetIntentResponseFollowUpPrompt followUpPrompt;

  public static final String SERIALIZED_NAME_CONCLUSION_STATEMENT = "conclusionStatement";
  @SerializedName(SERIALIZED_NAME_CONCLUSION_STATEMENT)
  private GetIntentResponseConclusionStatement conclusionStatement;

  public static final String SERIALIZED_NAME_DIALOG_CODE_HOOK = "dialogCodeHook";
  @SerializedName(SERIALIZED_NAME_DIALOG_CODE_HOOK)
  private GetIntentResponseDialogCodeHook dialogCodeHook;

  public static final String SERIALIZED_NAME_FULFILLMENT_ACTIVITY = "fulfillmentActivity";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_ACTIVITY)
  private GetIntentResponseFulfillmentActivity fulfillmentActivity;

  public static final String SERIALIZED_NAME_PARENT_INTENT_SIGNATURE = "parentIntentSignature";
  @SerializedName(SERIALIZED_NAME_PARENT_INTENT_SIGNATURE)
  private String parentIntentSignature;

  public static final String SERIALIZED_NAME_LAST_UPDATED_DATE = "lastUpdatedDate";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_DATE)
  private OffsetDateTime lastUpdatedDate;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_CHECKSUM = "checksum";
  @SerializedName(SERIALIZED_NAME_CHECKSUM)
  private String checksum;

  public static final String SERIALIZED_NAME_KENDRA_CONFIGURATION = "kendraConfiguration";
  @SerializedName(SERIALIZED_NAME_KENDRA_CONFIGURATION)
  private GetIntentResponseKendraConfiguration kendraConfiguration;

  public static final String SERIALIZED_NAME_INPUT_CONTEXTS = "inputContexts";
  @SerializedName(SERIALIZED_NAME_INPUT_CONTEXTS)
  private List inputContexts;

  public static final String SERIALIZED_NAME_OUTPUT_CONTEXTS = "outputContexts";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CONTEXTS)
  private List outputContexts;

  public GetIntentResponse() {
  }

  public GetIntentResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetIntentResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GetIntentResponse slots(List slots) {
    this.slots = slots;
    return this;
  }

  /**
   * Get slots
   * @return slots
   */
  @javax.annotation.Nullable
  public List getSlots() {
    return slots;
  }

  public void setSlots(List slots) {
    this.slots = slots;
  }


  public GetIntentResponse sampleUtterances(List sampleUtterances) {
    this.sampleUtterances = sampleUtterances;
    return this;
  }

  /**
   * Get sampleUtterances
   * @return sampleUtterances
   */
  @javax.annotation.Nullable
  public List getSampleUtterances() {
    return sampleUtterances;
  }

  public void setSampleUtterances(List sampleUtterances) {
    this.sampleUtterances = sampleUtterances;
  }


  public GetIntentResponse confirmationPrompt(GetIntentResponseConfirmationPrompt confirmationPrompt) {
    this.confirmationPrompt = confirmationPrompt;
    return this;
  }

  /**
   * Get confirmationPrompt
   * @return confirmationPrompt
   */
  @javax.annotation.Nullable
  public GetIntentResponseConfirmationPrompt getConfirmationPrompt() {
    return confirmationPrompt;
  }

  public void setConfirmationPrompt(GetIntentResponseConfirmationPrompt confirmationPrompt) {
    this.confirmationPrompt = confirmationPrompt;
  }


  public GetIntentResponse rejectionStatement(CreateIntentVersionResponseRejectionStatement rejectionStatement) {
    this.rejectionStatement = rejectionStatement;
    return this;
  }

  /**
   * Get rejectionStatement
   * @return rejectionStatement
   */
  @javax.annotation.Nullable
  public CreateIntentVersionResponseRejectionStatement getRejectionStatement() {
    return rejectionStatement;
  }

  public void setRejectionStatement(CreateIntentVersionResponseRejectionStatement rejectionStatement) {
    this.rejectionStatement = rejectionStatement;
  }


  public GetIntentResponse followUpPrompt(GetIntentResponseFollowUpPrompt followUpPrompt) {
    this.followUpPrompt = followUpPrompt;
    return this;
  }

  /**
   * Get followUpPrompt
   * @return followUpPrompt
   */
  @javax.annotation.Nullable
  public GetIntentResponseFollowUpPrompt getFollowUpPrompt() {
    return followUpPrompt;
  }

  public void setFollowUpPrompt(GetIntentResponseFollowUpPrompt followUpPrompt) {
    this.followUpPrompt = followUpPrompt;
  }


  public GetIntentResponse conclusionStatement(GetIntentResponseConclusionStatement conclusionStatement) {
    this.conclusionStatement = conclusionStatement;
    return this;
  }

  /**
   * Get conclusionStatement
   * @return conclusionStatement
   */
  @javax.annotation.Nullable
  public GetIntentResponseConclusionStatement getConclusionStatement() {
    return conclusionStatement;
  }

  public void setConclusionStatement(GetIntentResponseConclusionStatement conclusionStatement) {
    this.conclusionStatement = conclusionStatement;
  }


  public GetIntentResponse dialogCodeHook(GetIntentResponseDialogCodeHook dialogCodeHook) {
    this.dialogCodeHook = dialogCodeHook;
    return this;
  }

  /**
   * Get dialogCodeHook
   * @return dialogCodeHook
   */
  @javax.annotation.Nullable
  public GetIntentResponseDialogCodeHook getDialogCodeHook() {
    return dialogCodeHook;
  }

  public void setDialogCodeHook(GetIntentResponseDialogCodeHook dialogCodeHook) {
    this.dialogCodeHook = dialogCodeHook;
  }


  public GetIntentResponse fulfillmentActivity(GetIntentResponseFulfillmentActivity fulfillmentActivity) {
    this.fulfillmentActivity = fulfillmentActivity;
    return this;
  }

  /**
   * Get fulfillmentActivity
   * @return fulfillmentActivity
   */
  @javax.annotation.Nullable
  public GetIntentResponseFulfillmentActivity getFulfillmentActivity() {
    return fulfillmentActivity;
  }

  public void setFulfillmentActivity(GetIntentResponseFulfillmentActivity fulfillmentActivity) {
    this.fulfillmentActivity = fulfillmentActivity;
  }


  public GetIntentResponse parentIntentSignature(String parentIntentSignature) {
    this.parentIntentSignature = parentIntentSignature;
    return this;
  }

  /**
   * Get parentIntentSignature
   * @return parentIntentSignature
   */
  @javax.annotation.Nullable
  public String getParentIntentSignature() {
    return parentIntentSignature;
  }

  public void setParentIntentSignature(String parentIntentSignature) {
    this.parentIntentSignature = parentIntentSignature;
  }


  public GetIntentResponse lastUpdatedDate(OffsetDateTime lastUpdatedDate) {
    this.lastUpdatedDate = lastUpdatedDate;
    return this;
  }

  /**
   * Get lastUpdatedDate
   * @return lastUpdatedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdatedDate() {
    return lastUpdatedDate;
  }

  public void setLastUpdatedDate(OffsetDateTime lastUpdatedDate) {
    this.lastUpdatedDate = lastUpdatedDate;
  }


  public GetIntentResponse createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Get createdDate
   * @return createdDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public GetIntentResponse version(String version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  public GetIntentResponse checksum(String checksum) {
    this.checksum = checksum;
    return this;
  }

  /**
   * Get checksum
   * @return checksum
   */
  @javax.annotation.Nullable
  public String getChecksum() {
    return checksum;
  }

  public void setChecksum(String checksum) {
    this.checksum = checksum;
  }


  public GetIntentResponse kendraConfiguration(GetIntentResponseKendraConfiguration kendraConfiguration) {
    this.kendraConfiguration = kendraConfiguration;
    return this;
  }

  /**
   * Get kendraConfiguration
   * @return kendraConfiguration
   */
  @javax.annotation.Nullable
  public GetIntentResponseKendraConfiguration getKendraConfiguration() {
    return kendraConfiguration;
  }

  public void setKendraConfiguration(GetIntentResponseKendraConfiguration kendraConfiguration) {
    this.kendraConfiguration = kendraConfiguration;
  }


  public GetIntentResponse inputContexts(List inputContexts) {
    this.inputContexts = inputContexts;
    return this;
  }

  /**
   * Get inputContexts
   * @return inputContexts
   */
  @javax.annotation.Nullable
  public List getInputContexts() {
    return inputContexts;
  }

  public void setInputContexts(List inputContexts) {
    this.inputContexts = inputContexts;
  }


  public GetIntentResponse outputContexts(List outputContexts) {
    this.outputContexts = outputContexts;
    return this;
  }

  /**
   * Get outputContexts
   * @return outputContexts
   */
  @javax.annotation.Nullable
  public List getOutputContexts() {
    return outputContexts;
  }

  public void setOutputContexts(List outputContexts) {
    this.outputContexts = outputContexts;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetIntentResponse getIntentResponse = (GetIntentResponse) o;
    return Objects.equals(this.name, getIntentResponse.name) &&
        Objects.equals(this.description, getIntentResponse.description) &&
        Objects.equals(this.slots, getIntentResponse.slots) &&
        Objects.equals(this.sampleUtterances, getIntentResponse.sampleUtterances) &&
        Objects.equals(this.confirmationPrompt, getIntentResponse.confirmationPrompt) &&
        Objects.equals(this.rejectionStatement, getIntentResponse.rejectionStatement) &&
        Objects.equals(this.followUpPrompt, getIntentResponse.followUpPrompt) &&
        Objects.equals(this.conclusionStatement, getIntentResponse.conclusionStatement) &&
        Objects.equals(this.dialogCodeHook, getIntentResponse.dialogCodeHook) &&
        Objects.equals(this.fulfillmentActivity, getIntentResponse.fulfillmentActivity) &&
        Objects.equals(this.parentIntentSignature, getIntentResponse.parentIntentSignature) &&
        Objects.equals(this.lastUpdatedDate, getIntentResponse.lastUpdatedDate) &&
        Objects.equals(this.createdDate, getIntentResponse.createdDate) &&
        Objects.equals(this.version, getIntentResponse.version) &&
        Objects.equals(this.checksum, getIntentResponse.checksum) &&
        Objects.equals(this.kendraConfiguration, getIntentResponse.kendraConfiguration) &&
        Objects.equals(this.inputContexts, getIntentResponse.inputContexts) &&
        Objects.equals(this.outputContexts, getIntentResponse.outputContexts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, slots, sampleUtterances, confirmationPrompt, rejectionStatement, followUpPrompt, conclusionStatement, dialogCodeHook, fulfillmentActivity, parentIntentSignature, lastUpdatedDate, createdDate, version, checksum, kendraConfiguration, inputContexts, outputContexts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetIntentResponse {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    slots: ").append(toIndentedString(slots)).append("\n");
    sb.append("    sampleUtterances: ").append(toIndentedString(sampleUtterances)).append("\n");
    sb.append("    confirmationPrompt: ").append(toIndentedString(confirmationPrompt)).append("\n");
    sb.append("    rejectionStatement: ").append(toIndentedString(rejectionStatement)).append("\n");
    sb.append("    followUpPrompt: ").append(toIndentedString(followUpPrompt)).append("\n");
    sb.append("    conclusionStatement: ").append(toIndentedString(conclusionStatement)).append("\n");
    sb.append("    dialogCodeHook: ").append(toIndentedString(dialogCodeHook)).append("\n");
    sb.append("    fulfillmentActivity: ").append(toIndentedString(fulfillmentActivity)).append("\n");
    sb.append("    parentIntentSignature: ").append(toIndentedString(parentIntentSignature)).append("\n");
    sb.append("    lastUpdatedDate: ").append(toIndentedString(lastUpdatedDate)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    checksum: ").append(toIndentedString(checksum)).append("\n");
    sb.append("    kendraConfiguration: ").append(toIndentedString(kendraConfiguration)).append("\n");
    sb.append("    inputContexts: ").append(toIndentedString(inputContexts)).append("\n");
    sb.append("    outputContexts: ").append(toIndentedString(outputContexts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("slots");
    openapiFields.add("sampleUtterances");
    openapiFields.add("confirmationPrompt");
    openapiFields.add("rejectionStatement");
    openapiFields.add("followUpPrompt");
    openapiFields.add("conclusionStatement");
    openapiFields.add("dialogCodeHook");
    openapiFields.add("fulfillmentActivity");
    openapiFields.add("parentIntentSignature");
    openapiFields.add("lastUpdatedDate");
    openapiFields.add("createdDate");
    openapiFields.add("version");
    openapiFields.add("checksum");
    openapiFields.add("kendraConfiguration");
    openapiFields.add("inputContexts");
    openapiFields.add("outputContexts");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetIntentResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetIntentResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetIntentResponse is not found in the empty JSON string", GetIntentResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetIntentResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetIntentResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `slots`
      if (jsonObj.get("slots") != null && !jsonObj.get("slots").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("slots"));
      }
      // validate the optional field `sampleUtterances`
      if (jsonObj.get("sampleUtterances") != null && !jsonObj.get("sampleUtterances").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("sampleUtterances"));
      }
      // validate the optional field `confirmationPrompt`
      if (jsonObj.get("confirmationPrompt") != null && !jsonObj.get("confirmationPrompt").isJsonNull()) {
        GetIntentResponseConfirmationPrompt.validateJsonElement(jsonObj.get("confirmationPrompt"));
      }
      // validate the optional field `rejectionStatement`
      if (jsonObj.get("rejectionStatement") != null && !jsonObj.get("rejectionStatement").isJsonNull()) {
        CreateIntentVersionResponseRejectionStatement.validateJsonElement(jsonObj.get("rejectionStatement"));
      }
      // validate the optional field `followUpPrompt`
      if (jsonObj.get("followUpPrompt") != null && !jsonObj.get("followUpPrompt").isJsonNull()) {
        GetIntentResponseFollowUpPrompt.validateJsonElement(jsonObj.get("followUpPrompt"));
      }
      // validate the optional field `conclusionStatement`
      if (jsonObj.get("conclusionStatement") != null && !jsonObj.get("conclusionStatement").isJsonNull()) {
        GetIntentResponseConclusionStatement.validateJsonElement(jsonObj.get("conclusionStatement"));
      }
      // validate the optional field `dialogCodeHook`
      if (jsonObj.get("dialogCodeHook") != null && !jsonObj.get("dialogCodeHook").isJsonNull()) {
        GetIntentResponseDialogCodeHook.validateJsonElement(jsonObj.get("dialogCodeHook"));
      }
      // validate the optional field `fulfillmentActivity`
      if (jsonObj.get("fulfillmentActivity") != null && !jsonObj.get("fulfillmentActivity").isJsonNull()) {
        GetIntentResponseFulfillmentActivity.validateJsonElement(jsonObj.get("fulfillmentActivity"));
      }
      // validate the optional field `parentIntentSignature`
      if (jsonObj.get("parentIntentSignature") != null && !jsonObj.get("parentIntentSignature").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("parentIntentSignature"));
      }
      // validate the optional field `lastUpdatedDate`
      if (jsonObj.get("lastUpdatedDate") != null && !jsonObj.get("lastUpdatedDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdatedDate"));
      }
      // validate the optional field `createdDate`
      if (jsonObj.get("createdDate") != null && !jsonObj.get("createdDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdDate"));
      }
      // validate the optional field `version`
      if (jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("version"));
      }
      // validate the optional field `checksum`
      if (jsonObj.get("checksum") != null && !jsonObj.get("checksum").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("checksum"));
      }
      // validate the optional field `kendraConfiguration`
      if (jsonObj.get("kendraConfiguration") != null && !jsonObj.get("kendraConfiguration").isJsonNull()) {
        GetIntentResponseKendraConfiguration.validateJsonElement(jsonObj.get("kendraConfiguration"));
      }
      // validate the optional field `inputContexts`
      if (jsonObj.get("inputContexts") != null && !jsonObj.get("inputContexts").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("inputContexts"));
      }
      // validate the optional field `outputContexts`
      if (jsonObj.get("outputContexts") != null && !jsonObj.get("outputContexts").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("outputContexts"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetIntentResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetIntentResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetIntentResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetIntentResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetIntentResponse>() {
           @Override
           public void write(JsonWriter out, GetIntentResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetIntentResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetIntentResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetIntentResponse
   * @throws IOException if the JSON string is invalid with respect to GetIntentResponse
   */
  public static GetIntentResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetIntentResponse.class);
  }

  /**
   * Convert an instance of GetIntentResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

