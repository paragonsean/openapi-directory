openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "Amazon WorkLink is a cloud-based service that provides secure access\
    \ to internal websites and web apps from iOS and Android phones. In a single step,\
    \ your users, such as employees, can access internal websites as efficiently as\
    \ they access any other public website. They enter a URL in their web browser,\
    \ or choose a link to an internal website in an email. Amazon WorkLink authenticates\
    \ the user's access and securely renders authorized internal web content in a\
    \ secure rendering service in the AWS cloud. Amazon WorkLink doesn't download\
    \ or store any internal web content on mobile devices."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon WorkLink
  version: 2018-09-25
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: worklink
  x-aws-signingName: worklink
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/worklink-2018-09-25.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/worklink/
servers:
- description: The WorkLink multi-region endpoint
  url: "http://worklink.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The WorkLink multi-region endpoint
  url: "https://worklink.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The WorkLink endpoint for China (Beijing) and China (Ningxia)
  url: "http://worklink.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The WorkLink endpoint for China (Beijing) and China (Ningxia)
  url: "https://worklink.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /UpdateFleetMetadata:
    post:
      deprecated: true
      description: "Updates fleet metadata, such as DisplayName."
      operationId: update_fleet_metadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFleetMetadata_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFleetMetadataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /associateDomain:
    post:
      deprecated: true
      description: Specifies a domain to be associated to Amazon WorkLink.
      operationId: associate_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateDomain_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /associateWebsiteAuthorizationProvider:
    post:
      deprecated: true
      description: Associates a website authorization provider with a specified fleet.
        This is used to authorize users against associated websites in the company
        network.
      operationId: associate_website_authorization_provider
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateWebsiteAuthorizationProvider_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateWebsiteAuthorizationProviderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /associateWebsiteCertificateAuthority:
    post:
      deprecated: true
      description: Imports the root certificate of a certificate authority (CA) used
        to obtain TLS certificates used by associated websites within the company
        network.
      operationId: associate_website_certificate_authority
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateWebsiteCertificateAuthority_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateWebsiteCertificateAuthorityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /createFleet:
    post:
      deprecated: true
      description: Creates a fleet. A fleet consists of resources and the configuration
        that delivers associated websites to authorized users who download and set
        up the Amazon WorkLink app.
      operationId: create_fleet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFleet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFleetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /deleteFleet:
    post:
      deprecated: true
      description: 'Deletes a fleet. Prevents users from accessing previously associated
        websites. '
      operationId: delete_fleet
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFleet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFleetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeAuditStreamConfiguration:
    post:
      deprecated: true
      description: Describes the configuration for delivering audit streams to the
        customer account.
      operationId: describe_audit_stream_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFleet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAuditStreamConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeCompanyNetworkConfiguration:
    post:
      deprecated: true
      description: Describes the networking configuration to access the internal websites
        associated with the specified fleet.
      operationId: describe_company_network_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFleet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCompanyNetworkConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeDevice:
    post:
      deprecated: true
      description: Provides information about a user's device.
      operationId: describe_device
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDevice_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeDevicePolicyConfiguration:
    post:
      deprecated: true
      description: Describes the device policy configuration for the specified fleet.
      operationId: describe_device_policy_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFleet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDevicePolicyConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeDomain:
    post:
      deprecated: true
      description: Provides information about the domain.
      operationId: describe_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDomain_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeFleetMetadata:
    post:
      deprecated: true
      description: "Provides basic information for the specified fleet, excluding\
        \ identity provider, networking, and device configuration details."
      operationId: describe_fleet_metadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFleetMetadata_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFleetMetadataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeIdentityProviderConfiguration:
    post:
      deprecated: true
      description: Describes the identity provider configuration of the specified
        fleet.
      operationId: describe_identity_provider_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFleet_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeIdentityProviderConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /describeWebsiteCertificateAuthority:
    post:
      deprecated: true
      description: Provides information about the certificate authority.
      operationId: describe_website_certificate_authority
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWebsiteCertificateAuthority_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWebsiteCertificateAuthorityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /disassociateDomain:
    post:
      deprecated: true
      description: 'Disassociates a domain from Amazon WorkLink. End users lose the
        ability to access the domain with Amazon WorkLink. '
      operationId: disassociate_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDomain_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateDomainResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /disassociateWebsiteAuthorizationProvider:
    post:
      deprecated: true
      description: "Disassociates a website authorization provider from a specified\
        \ fleet. After the disassociation, users can't load any associated websites\
        \ that require this authorization provider."
      operationId: disassociate_website_authorization_provider
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateWebsiteAuthorizationProvider_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateWebsiteAuthorizationProviderResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /disassociateWebsiteCertificateAuthority:
    post:
      deprecated: true
      description: Removes a certificate authority (CA).
      operationId: disassociate_website_certificate_authority
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateWebsiteCertificateAuthority_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateWebsiteCertificateAuthorityResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listDevices:
    post:
      deprecated: true
      description: Retrieves a list of devices registered with the specified fleet.
      operationId: list_devices
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDevices_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listDomains:
    post:
      deprecated: true
      description: Retrieves a list of domains associated to a specified fleet.
      operationId: list_domains
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDevices_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listFleets:
    post:
      deprecated: true
      description: Retrieves a list of fleets for the current account and Region.
      operationId: list_fleets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFleets_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFleetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listWebsiteAuthorizationProviders:
    post:
      deprecated: true
      description: Retrieves a list of website authorization providers associated
        with a specified fleet.
      operationId: list_website_authorization_providers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWebsiteAuthorizationProviders_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWebsiteAuthorizationProvidersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /listWebsiteCertificateAuthorities:
    post:
      deprecated: true
      description: Retrieves a list of certificate authorities added for the current
        account and Region.
      operationId: list_website_certificate_authorities
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWebsiteCertificateAuthorities_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWebsiteCertificateAuthoritiesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /restoreDomainAccess:
    post:
      deprecated: true
      description: Moves a domain to ACTIVE status if it was in the INACTIVE status.
      operationId: restore_domain_access
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDomain_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoreDomainAccessResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /revokeDomainAccess:
    post:
      deprecated: true
      description: Moves a domain to INACTIVE status if it was in the ACTIVE status.
      operationId: revoke_domain_access
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDomain_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeDomainAccessResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /signOutUser:
    post:
      deprecated: true
      description: Signs the user out from all of their devices. The user can sign
        in again if they have valid credentials.
      operationId: sign_out_user
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignOutUser_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignOutUserResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{ResourceArn}:
    get:
      deprecated: true
      description: Retrieves a list of tags for the specified resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the fleet.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      deprecated: true
      description: "Adds or overwrites one or more tags for the specified resource,\
        \ such as a fleet. Each tag consists of a key and an optional value. If a\
        \ resource already has a tag with the same key, this operation updates its\
        \ value."
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the fleet.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{ResourceArn}#tagKeys:
    delete:
      deprecated: true
      description: Removes one or more tags from the specified resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the fleet.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 20
          type: string
        style: simple
      - description: The list of tag keys to remove from the resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /updateAuditStreamConfiguration:
    post:
      deprecated: true
      description: Updates the audit stream configuration for the fleet.
      operationId: update_audit_stream_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuditStreamConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAuditStreamConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /updateCompanyNetworkConfiguration:
    post:
      deprecated: true
      description: Updates the company network configuration for the fleet.
      operationId: update_company_network_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyNetworkConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCompanyNetworkConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /updateDevicePolicyConfiguration:
    post:
      deprecated: true
      description: Updates the device policy configuration for the fleet.
      operationId: update_device_policy_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDevicePolicyConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDevicePolicyConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /updateDomainMetadata:
    post:
      deprecated: true
      description: "Updates domain metadata, such as DisplayName."
      operationId: update_domain_metadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDomainMetadata_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDomainMetadataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /updateIdentityProviderConfiguration:
    post:
      deprecated: true
      description: Updates the identity provider configuration for the fleet.
      operationId: update_identity_provider_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIdentityProviderConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateIdentityProviderConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssociateDomainResponse:
      properties: {}
      type: object
    UnauthorizedException: {}
    InternalServerErrorException: {}
    InvalidRequestException: {}
    ResourceNotFoundException: {}
    ResourceAlreadyExistsException: {}
    TooManyRequestsException: {}
    AssociateWebsiteAuthorizationProviderResponse:
      example:
        AuthorizationProviderId: ""
      properties:
        AuthorizationProviderId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: A unique identifier for the authorization provider.
          title: AuthorizationProviderId
      title: AssociateWebsiteAuthorizationProviderResponse
      type: object
    AssociateWebsiteCertificateAuthorityResponse:
      example:
        WebsiteCaId: ""
      properties:
        WebsiteCaId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: A unique identifier for the CA.
          title: WebsiteCaId
      title: AssociateWebsiteCertificateAuthorityResponse
      type: object
    CreateFleetResponse:
      example:
        FleetArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The Amazon Resource Name (ARN) of the fleet.
          title: FleetArn
      title: CreateFleetResponse
      type: object
    TagValue:
      maxLength: 256
      title: TagValue
      type: string
    DeleteFleetResponse:
      properties: {}
      type: object
    DescribeAuditStreamConfigurationResponse:
      example:
        AuditStreamArn: ""
      properties:
        AuditStreamArn:
          allOf:
          - $ref: '#/components/schemas/AuditStreamArn'
          - description: The ARN of the Amazon Kinesis data stream that will receive
              the audit events.
          title: AuditStreamArn
      title: DescribeAuditStreamConfigurationResponse
      type: object
    DescribeCompanyNetworkConfigurationResponse:
      example:
        VpcId: ""
        SubnetIds: ""
        SecurityGroupIds: ""
      properties:
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: The VPC with connectivity to associated websites.
          title: VpcId
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: The subnets used for X-ENI connections from Amazon WorkLink
              rendering containers.
          title: SubnetIds
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: The security groups associated with access to the provided
              subnets.
          title: SecurityGroupIds
      title: DescribeCompanyNetworkConfigurationResponse
      type: object
    DescribeDeviceResponse:
      example:
        Status: ""
        OperatingSystem: ""
        PatchLevel: ""
        FirstAccessedTime: ""
        Username: ""
        Model: ""
        Manufacturer: ""
        OperatingSystemVersion: ""
        LastAccessedTime: ""
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/DeviceStatus'
          - description: The current state of the device.
          title: Status
        Model:
          allOf:
          - $ref: '#/components/schemas/DeviceModel'
          - description: The model of the device.
          title: Model
        Manufacturer:
          allOf:
          - $ref: '#/components/schemas/DeviceManufacturer'
          - description: The manufacturer of the device.
          title: Manufacturer
        OperatingSystem:
          allOf:
          - $ref: '#/components/schemas/DeviceOperatingSystemName'
          - description: The operating system of the device.
          title: OperatingSystem
        OperatingSystemVersion:
          allOf:
          - $ref: '#/components/schemas/DeviceOperatingSystemVersion'
          - description: The operating system version of the device.
          title: OperatingSystemVersion
        PatchLevel:
          allOf:
          - $ref: '#/components/schemas/DevicePatchLevel'
          - description: The operating system patch level of the device.
          title: PatchLevel
        FirstAccessedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date that the device first signed in to Amazon WorkLink.
          title: FirstAccessedTime
        LastAccessedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date that the device last accessed Amazon WorkLink.
          title: LastAccessedTime
        Username:
          allOf:
          - $ref: '#/components/schemas/Username'
          - description: The user name associated with the device.
          title: Username
      title: DescribeDeviceResponse
      type: object
    DescribeDevicePolicyConfigurationResponse:
      example:
        DeviceCaCertificate: ""
      properties:
        DeviceCaCertificate:
          allOf:
          - $ref: '#/components/schemas/Certificate'
          - description: "The certificate chain, including intermediate certificates\
              \ and the root certificate authority certificate used to issue device\
              \ certificates."
          title: DeviceCaCertificate
      title: DescribeDevicePolicyConfigurationResponse
      type: object
    DescribeDomainResponse:
      example:
        CreatedTime: ""
        DomainName: ""
        DisplayName: ""
        DomainStatus: ""
        AcmCertificateArn: ""
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain.
          title: DomainName
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name to display.
          title: DisplayName
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time that the domain was added.
          title: CreatedTime
        DomainStatus:
          allOf:
          - $ref: '#/components/schemas/DomainStatus'
          - description: The current state for the domain.
          title: DomainStatus
        AcmCertificateArn:
          allOf:
          - $ref: '#/components/schemas/AcmCertificateArn'
          - description: The ARN of an issued ACM certificate that is valid for the
              domain being associated.
          title: AcmCertificateArn
      title: DescribeDomainResponse
      type: object
    DescribeFleetMetadataResponse:
      example:
        FleetStatus: ""
        FleetName: ""
        CreatedTime: ""
        OptimizeForEndUserLocation: ""
        DisplayName: ""
        LastUpdatedTime: ""
        CompanyCode: ""
        Tags: ""
      properties:
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time that the fleet was created.
          title: CreatedTime
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time that the fleet was last updated.
          title: LastUpdatedTime
        FleetName:
          allOf:
          - $ref: '#/components/schemas/FleetName'
          - description: The name of the fleet.
          title: FleetName
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name to display.
          title: DisplayName
        OptimizeForEndUserLocation:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "The option to optimize for better performance by routing\
              \ traffic through the closest AWS Region to users, which may be outside\
              \ of your home Region."
          title: OptimizeForEndUserLocation
        CompanyCode:
          allOf:
          - $ref: '#/components/schemas/CompanyCode'
          - description: The identifier used by users to sign in to the Amazon WorkLink
              app.
          title: CompanyCode
        FleetStatus:
          allOf:
          - $ref: '#/components/schemas/FleetStatus'
          - description: The current state of the fleet.
          title: FleetStatus
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags attached to the resource. A tag is a key-value pair.
          title: Tags
      title: DescribeFleetMetadataResponse
      type: object
    DescribeIdentityProviderConfigurationResponse:
      example:
        ServiceProviderSamlMetadata: ""
        IdentityProviderType: ""
        IdentityProviderSamlMetadata: ""
      properties:
        IdentityProviderType:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderType'
          - description: The type of identity provider.
          title: IdentityProviderType
        ServiceProviderSamlMetadata:
          allOf:
          - $ref: '#/components/schemas/SamlMetadata'
          - description: The SAML metadata document uploaded to the user’s identity
              provider.
          title: ServiceProviderSamlMetadata
        IdentityProviderSamlMetadata:
          allOf:
          - $ref: '#/components/schemas/SamlMetadata'
          - description: The SAML metadata document provided by the user’s identity
              provider.
          title: IdentityProviderSamlMetadata
      title: DescribeIdentityProviderConfigurationResponse
      type: object
    DescribeWebsiteCertificateAuthorityResponse:
      example:
        CreatedTime: ""
        DisplayName: ""
        Certificate: ""
      properties:
        Certificate:
          allOf:
          - $ref: '#/components/schemas/Certificate'
          - description: The root certificate of the certificate authority.
          title: Certificate
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time that the certificate authority was added.
          title: CreatedTime
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The certificate name to display.
          title: DisplayName
      title: DescribeWebsiteCertificateAuthorityResponse
      type: object
    DisassociateDomainResponse:
      properties: {}
      type: object
    DisassociateWebsiteAuthorizationProviderResponse:
      properties: {}
      type: object
    DisassociateWebsiteCertificateAuthorityResponse:
      properties: {}
      type: object
    ListDevicesResponse:
      example:
        NextToken: ""
        Devices: ""
      properties:
        Devices:
          allOf:
          - $ref: '#/components/schemas/DeviceSummaryList'
          - description: Information about the devices.
          title: Devices
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The pagination token used to retrieve the next page of results\
              \ for this operation. If there are no more pages, this value is null."
          title: NextToken
      title: ListDevicesResponse
      type: object
    ListDomainsResponse:
      example:
        Domains: ""
        NextToken: ""
      properties:
        Domains:
          allOf:
          - $ref: '#/components/schemas/DomainSummaryList'
          - description: Information about the domains.
          title: Domains
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The pagination token used to retrieve the next page of results\
              \ for this operation. If there are no more pages, this value is null."
          title: NextToken
      title: ListDomainsResponse
      type: object
    ListFleetsResponse:
      example:
        NextToken: ""
        FleetSummaryList: ""
      properties:
        FleetSummaryList:
          allOf:
          - $ref: '#/components/schemas/FleetSummaryList'
          - description: The summary list of the fleets.
          title: FleetSummaryList
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The pagination token used to retrieve the next page of results\
              \ for this operation. If there are no more pages, this value is null."
          title: NextToken
      title: ListFleetsResponse
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags attached to the resource. A tag is a key-value pair.
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    ListWebsiteAuthorizationProvidersResponse:
      example:
        NextToken: ""
        WebsiteAuthorizationProviders: ""
      properties:
        WebsiteAuthorizationProviders:
          allOf:
          - $ref: '#/components/schemas/WebsiteAuthorizationProvidersSummaryList'
          - description: The website authorization providers.
          title: WebsiteAuthorizationProviders
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If this value is null, it retrieves the\
              \ first page."
          title: NextToken
      title: ListWebsiteAuthorizationProvidersResponse
      type: object
    ListWebsiteCertificateAuthoritiesResponse:
      example:
        WebsiteCertificateAuthorities: ""
        NextToken: ""
      properties:
        WebsiteCertificateAuthorities:
          allOf:
          - $ref: '#/components/schemas/WebsiteCaSummaryList'
          - description: Information about the certificates.
          title: WebsiteCertificateAuthorities
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The pagination token used to retrieve the next page of results\
              \ for this operation. If there are no more pages, this value is null."
          title: NextToken
      title: ListWebsiteCertificateAuthoritiesResponse
      type: object
    RestoreDomainAccessResponse:
      properties: {}
      type: object
    RevokeDomainAccessResponse:
      properties: {}
      type: object
    SignOutUserResponse:
      properties: {}
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(?!aws:)[a-zA-Z+-=._:/]+$"
      title: TagKey
      type: string
    UpdateAuditStreamConfigurationResponse:
      properties: {}
      type: object
    UpdateCompanyNetworkConfigurationResponse:
      properties: {}
      type: object
    SubnetId:
      pattern: "^subnet-([0-9a-f]{8}|[0-9a-f]{17})$"
      title: SubnetId
      type: string
    SecurityGroupId:
      pattern: "^sg-([0-9a-f]{8}|[0-9a-f]{17})$"
      title: SecurityGroupId
      type: string
    UpdateDevicePolicyConfigurationResponse:
      properties: {}
      type: object
    UpdateDomainMetadataResponse:
      properties: {}
      type: object
    UpdateFleetMetadataResponse:
      properties: {}
      type: object
    UpdateIdentityProviderConfigurationResponse:
      properties: {}
      type: object
    AcmCertificateArn:
      pattern: "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\\
        w+=/,.@-]+)*"
      type: string
    FleetArn:
      maxLength: 2048
      minLength: 20
      type: string
    DomainName:
      maxLength: 253
      minLength: 1
      pattern: "^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\\.)+[a-zA-Z0-9]+$"
      type: string
    DisplayName:
      maxLength: 100
      type: string
    AssociateDomainRequest:
      example:
        DomainName: ""
        DisplayName: ""
        FleetArn: ""
        AcmCertificateArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The Amazon Resource Name (ARN) of the fleet.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The fully qualified domain name (FQDN).
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name to display.
        AcmCertificateArn:
          allOf:
          - $ref: '#/components/schemas/AcmCertificateArn'
          - description: The ARN of an issued ACM certificate that is valid for the
              domain being associated.
      required:
      - AcmCertificateArn
      - DomainName
      - FleetArn
      title: AssociateDomainRequest
      type: object
    AuthorizationProviderType:
      enum:
      - SAML
      title: AuthorizationProviderType
      type: string
    AssociateWebsiteAuthorizationProviderRequest:
      example:
        DomainName: ""
        AuthorizationProviderType: ""
        FleetArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        AuthorizationProviderType:
          allOf:
          - $ref: '#/components/schemas/AuthorizationProviderType'
          - description: The authorization provider type.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The domain name of the authorization provider. This applies
              only to SAML-based authorization providers.
      required:
      - AuthorizationProviderType
      - FleetArn
      title: AssociateWebsiteAuthorizationProviderRequest
      type: object
    Id:
      maxLength: 256
      minLength: 1
      type: string
    Certificate:
      maxLength: 8192
      minLength: 1
      pattern: "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\\
        u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\\
        u000D?\\u000A)?"
      type: string
    AssociateWebsiteCertificateAuthorityRequest:
      example:
        DisplayName: ""
        FleetArn: ""
        Certificate: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/Certificate'
          - description: The root certificate of the CA.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The certificate name to display.
      required:
      - Certificate
      - FleetArn
      title: AssociateWebsiteCertificateAuthorityRequest
      type: object
    AuditStreamArn:
      pattern: "^arn:aws:kinesis:.+:[0-9]{12}:stream/AmazonWorkLink-.*$"
      type: string
    Boolean:
      type: boolean
    CertificateChain:
      maxLength: 32768
      minLength: 1
      pattern: "(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\\
        u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\u000D?\\\
        u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\\
        u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\\
        u000D?\\u000A)?"
      type: string
    CompanyCode:
      maxLength: 32
      minLength: 1
      type: string
    FleetName:
      maxLength: 48
      minLength: 1
      pattern: "^[a-z0-9](?:[a-z0-9\\-]{0,46}[a-z0-9])?$"
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 1
      type: object
    CreateFleetRequest:
      example:
        FleetName: ""
        OptimizeForEndUserLocation: ""
        DisplayName: ""
        Tags: ""
      properties:
        FleetName:
          allOf:
          - $ref: '#/components/schemas/FleetName'
          - description: A unique name for the fleet.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The fleet name to display.
        OptimizeForEndUserLocation:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "The option to optimize for better performance by routing\
              \ traffic through the closest AWS Region to users, which may be outside\
              \ of your home Region."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The tags to add to the resource. A tag is a key-value pair.'
      required:
      - FleetName
      title: CreateFleetRequest
      type: object
    DateTime:
      format: date-time
      type: string
    DeleteFleetRequest:
      example:
        FleetArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
      required:
      - FleetArn
      title: DeleteFleetRequest
      type: object
    DescribeAuditStreamConfigurationRequest:
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
      required:
      - FleetArn
      title: DescribeAuditStreamConfigurationRequest
      type: object
    DescribeCompanyNetworkConfigurationRequest:
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
      required:
      - FleetArn
      title: DescribeCompanyNetworkConfigurationRequest
      type: object
    VpcId:
      pattern: "^vpc-([0-9a-f]{8}|[0-9a-f]{17})$"
      type: string
    SubnetIds:
      items:
        $ref: '#/components/schemas/SubnetId'
      type: array
    SecurityGroupIds:
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      maxItems: 5
      type: array
    DescribeDevicePolicyConfigurationRequest:
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
      required:
      - FleetArn
      title: DescribeDevicePolicyConfigurationRequest
      type: object
    DescribeDeviceRequest:
      example:
        DeviceId: ""
        FleetArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: A unique identifier for a registered user's device.
      required:
      - DeviceId
      - FleetArn
      title: DescribeDeviceRequest
      type: object
    DeviceStatus:
      enum:
      - ACTIVE
      - SIGNED_OUT
      title: DeviceStatus
      type: string
    DeviceModel:
      maxLength: 256
      minLength: 1
      type: string
    DeviceManufacturer:
      maxLength: 256
      minLength: 1
      type: string
    DeviceOperatingSystemName:
      maxLength: 256
      minLength: 1
      type: string
    DeviceOperatingSystemVersion:
      maxLength: 256
      minLength: 1
      type: string
    DevicePatchLevel:
      maxLength: 256
      minLength: 1
      type: string
    Username:
      maxLength: 256
      minLength: 1
      type: string
    DescribeDomainRequest:
      example:
        DomainName: ""
        FleetArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain.
      required:
      - DomainName
      - FleetArn
      title: DescribeDomainRequest
      type: object
    DomainStatus:
      enum:
      - PENDING_VALIDATION
      - ASSOCIATING
      - ACTIVE
      - INACTIVE
      - DISASSOCIATING
      - DISASSOCIATED
      - FAILED_TO_ASSOCIATE
      - FAILED_TO_DISASSOCIATE
      title: DomainStatus
      type: string
    DescribeFleetMetadataRequest:
      example:
        FleetArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The Amazon Resource Name (ARN) of the fleet.
      required:
      - FleetArn
      title: DescribeFleetMetadataRequest
      type: object
    FleetStatus:
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - DELETED
      - FAILED_TO_CREATE
      - FAILED_TO_DELETE
      title: FleetStatus
      type: string
    DescribeIdentityProviderConfigurationRequest:
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
      required:
      - FleetArn
      title: DescribeIdentityProviderConfigurationRequest
      type: object
    IdentityProviderType:
      enum:
      - SAML
      title: IdentityProviderType
      type: string
    SamlMetadata:
      maxLength: 204800
      minLength: 1
      type: string
    DescribeWebsiteCertificateAuthorityRequest:
      example:
        FleetArn: ""
        WebsiteCaId: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        WebsiteCaId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: A unique identifier for the certificate authority.
      required:
      - FleetArn
      - WebsiteCaId
      title: DescribeWebsiteCertificateAuthorityRequest
      type: object
    DeviceSummary:
      description: The summary of devices.
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: The ID of the device.
          title: DeviceId
        DeviceStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceStatus'
          - description: The status of the device.
          title: DeviceStatus
      title: DeviceSummary
      type: object
    DeviceSummaryList:
      items:
        $ref: '#/components/schemas/DeviceSummary'
      type: array
    DisassociateDomainRequest:
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain.
      required:
      - DomainName
      - FleetArn
      title: DisassociateDomainRequest
      type: object
    DisassociateWebsiteAuthorizationProviderRequest:
      example:
        AuthorizationProviderId: ""
        FleetArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        AuthorizationProviderId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: A unique identifier for the authorization provider.
      required:
      - AuthorizationProviderId
      - FleetArn
      title: DisassociateWebsiteAuthorizationProviderRequest
      type: object
    DisassociateWebsiteCertificateAuthorityRequest:
      example:
        FleetArn: ""
        WebsiteCaId: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        WebsiteCaId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: A unique identifier for the CA.
      required:
      - FleetArn
      - WebsiteCaId
      title: DisassociateWebsiteCertificateAuthorityRequest
      type: object
    DomainSummary:
      description: The summary of the domain.
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain.
          title: DomainName
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name to display.
          title: DisplayName
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time that the domain was created.
          title: CreatedTime
        DomainStatus:
          allOf:
          - $ref: '#/components/schemas/DomainStatus'
          - description: The status of the domain.
          title: DomainStatus
      required:
      - CreatedTime
      - DomainName
      - DomainStatus
      title: DomainSummary
      type: object
    DomainSummaryList:
      items:
        $ref: '#/components/schemas/DomainSummary'
      type: array
    FleetSummary:
      description: The summary of the fleet.
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The Amazon Resource Name (ARN) of the fleet.
          title: FleetArn
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time when the fleet was created.
          title: CreatedTime
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time when the fleet was last updated.
          title: LastUpdatedTime
        FleetName:
          allOf:
          - $ref: '#/components/schemas/FleetName'
          - description: The name of the fleet.
          title: FleetName
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name of the fleet to display.
          title: DisplayName
        CompanyCode:
          allOf:
          - $ref: '#/components/schemas/CompanyCode'
          - description: The identifier used by users to sign into the Amazon WorkLink
              app.
          title: CompanyCode
        FleetStatus:
          allOf:
          - $ref: '#/components/schemas/FleetStatus'
          - description: The status of the fleet.
          title: FleetStatus
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags attached to the resource. A tag is a key-value pair.
          title: Tags
      title: FleetSummary
      type: object
    FleetSummaryList:
      items:
        $ref: '#/components/schemas/FleetSummary'
      type: array
    NextToken:
      maxLength: 4096
      minLength: 1
      pattern: "[\\w\\-]+"
      type: string
    MaxResults:
      minimum: 1
      type: integer
    ListDevicesRequest:
      example:
        NextToken: ""
        MaxResults: ""
        FleetArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The pagination token used to retrieve the next page of results\
              \ for this operation. If this value is null, it retrieves the first\
              \ page."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to be included in the next
              page.
      required:
      - FleetArn
      title: ListDevicesRequest
      type: object
    ListDomainsRequest:
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The pagination token used to retrieve the next page of results\
              \ for this operation. If this value is null, it retrieves the first\
              \ page."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to be included in the next
              page.
      required:
      - FleetArn
      title: ListDomainsRequest
      type: object
    ListFleetsRequest:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The pagination token used to retrieve the next page of results\
              \ for this operation. If this value is null, it retrieves the first\
              \ page."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to be included in the next
              page.
      title: ListFleetsRequest
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    ListWebsiteAuthorizationProvidersRequest:
      example:
        NextToken: ""
        MaxResults: ""
        FleetArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The pagination token to use to retrieve the next page of\
              \ results for this operation. If this value is null, it retrieves the\
              \ first page."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to be included in the next
              page.
      required:
      - FleetArn
      title: ListWebsiteAuthorizationProvidersRequest
      type: object
    WebsiteAuthorizationProvidersSummaryList:
      items:
        $ref: '#/components/schemas/WebsiteAuthorizationProviderSummary'
      type: array
    ListWebsiteCertificateAuthoritiesRequest:
      example:
        NextToken: ""
        MaxResults: ""
        FleetArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to be included in the next
              page.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The pagination token used to retrieve the next page of results\
              \ for this operation. If this value is null, it retrieves the first\
              \ page."
      required:
      - FleetArn
      title: ListWebsiteCertificateAuthoritiesRequest
      type: object
    WebsiteCaSummaryList:
      items:
        $ref: '#/components/schemas/WebsiteCaSummary'
      type: array
    RestoreDomainAccessRequest:
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain.
      required:
      - DomainName
      - FleetArn
      title: RestoreDomainAccessRequest
      type: object
    RevokeDomainAccessRequest:
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain.
      required:
      - DomainName
      - FleetArn
      title: RevokeDomainAccessRequest
      type: object
    SignOutUserRequest:
      example:
        Username: ""
        FleetArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        Username:
          allOf:
          - $ref: '#/components/schemas/Username'
          - description: The name of the user.
      required:
      - FleetArn
      - Username
      title: SignOutUserRequest
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The tags to add to the resource. A tag is a key-value pair.
      required:
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateAuditStreamConfigurationRequest:
      example:
        FleetArn: ""
        AuditStreamArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        AuditStreamArn:
          allOf:
          - $ref: '#/components/schemas/AuditStreamArn'
          - description: The ARN of the Amazon Kinesis data stream that receives the
              audit events.
      required:
      - FleetArn
      title: UpdateAuditStreamConfigurationRequest
      type: object
    UpdateCompanyNetworkConfigurationRequest:
      example:
        VpcId: ""
        SubnetIds: ""
        SecurityGroupIds: ""
        FleetArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: The VPC with connectivity to associated websites.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: The subnets used for X-ENI connections from Amazon WorkLink
              rendering containers.
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: The security groups associated with access to the provided
              subnets.
      required:
      - FleetArn
      - SecurityGroupIds
      - SubnetIds
      - VpcId
      title: UpdateCompanyNetworkConfigurationRequest
      type: object
    UpdateDevicePolicyConfigurationRequest:
      example:
        DeviceCaCertificate: ""
        FleetArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        DeviceCaCertificate:
          allOf:
          - $ref: '#/components/schemas/CertificateChain'
          - description: "The certificate chain, including intermediate certificates\
              \ and the root certificate authority certificate used to issue device\
              \ certificates."
      required:
      - FleetArn
      title: UpdateDevicePolicyConfigurationRequest
      type: object
    UpdateDomainMetadataRequest:
      example:
        DomainName: ""
        DisplayName: ""
        FleetArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name to display.
      required:
      - DomainName
      - FleetArn
      title: UpdateDomainMetadataRequest
      type: object
    UpdateFleetMetadataRequest:
      example:
        OptimizeForEndUserLocation: ""
        DisplayName: ""
        FleetArn: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The fleet name to display. The existing DisplayName is unset
              if null is passed.
        OptimizeForEndUserLocation:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "The option to optimize for better performance by routing\
              \ traffic through the closest AWS Region to users, which may be outside\
              \ of your home Region."
      required:
      - FleetArn
      title: UpdateFleetMetadataRequest
      type: object
    UpdateIdentityProviderConfigurationRequest:
      example:
        IdentityProviderType: ""
        FleetArn: ""
        IdentityProviderSamlMetadata: ""
      properties:
        FleetArn:
          allOf:
          - $ref: '#/components/schemas/FleetArn'
          - description: The ARN of the fleet.
        IdentityProviderType:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderType'
          - description: The type of identity provider.
        IdentityProviderSamlMetadata:
          allOf:
          - $ref: '#/components/schemas/SamlMetadata'
          - description: The SAML metadata document provided by the customer’s identity
              provider. The existing IdentityProviderSamlMetadata is unset if null
              is passed.
      required:
      - FleetArn
      - IdentityProviderType
      title: UpdateIdentityProviderConfigurationRequest
      type: object
    WebsiteAuthorizationProviderSummary:
      description: The summary of the website authorization provider.
      properties:
        AuthorizationProviderId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: A unique identifier for the authorization provider.
          title: AuthorizationProviderId
        AuthorizationProviderType:
          allOf:
          - $ref: '#/components/schemas/AuthorizationProviderType'
          - description: The authorization provider type.
          title: AuthorizationProviderType
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The domain name of the authorization provider. This applies
              only to SAML-based authorization providers.
          title: DomainName
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time of creation.
          title: CreatedTime
      required:
      - AuthorizationProviderType
      title: WebsiteAuthorizationProviderSummary
      type: object
    WebsiteCaSummary:
      description: The summary of the certificate authority (CA).
      properties:
        WebsiteCaId:
          allOf:
          - $ref: '#/components/schemas/Id'
          - description: A unique identifier for the CA.
          title: WebsiteCaId
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time when the CA was added.
          title: CreatedTime
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: The name to display.
          title: DisplayName
      title: WebsiteCaSummary
      type: object
    AssociateDomain_request:
      properties:
        FleetArn:
          description: The Amazon Resource Name (ARN) of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        DomainName:
          description: The fully qualified domain name (FQDN).
          maxLength: 253
          minLength: 1
          pattern: "^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\\.)+[a-zA-Z0-9]+$"
          title: DomainName
          type: string
        DisplayName:
          description: The name to display.
          maxLength: 100
          title: DisplayName
          type: string
        AcmCertificateArn:
          description: The ARN of an issued ACM certificate that is valid for the
            domain being associated.
          pattern: "arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\\
            w+=/,.@-]+)*"
          title: AcmCertificateArn
          type: string
      required:
      - AcmCertificateArn
      - DomainName
      - FleetArn
      title: AssociateDomain_request
      type: object
    AssociateWebsiteAuthorizationProvider_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        AuthorizationProviderType:
          description: The authorization provider type.
          enum:
          - SAML
          title: AuthorizationProviderType
          type: string
        DomainName:
          description: The domain name of the authorization provider. This applies
            only to SAML-based authorization providers.
          maxLength: 253
          minLength: 1
          pattern: "^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\\.)+[a-zA-Z0-9]+$"
          title: DomainName
          type: string
      required:
      - AuthorizationProviderType
      - FleetArn
      title: AssociateWebsiteAuthorizationProvider_request
      type: object
    AssociateWebsiteCertificateAuthority_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        Certificate:
          description: The root certificate of the CA.
          maxLength: 8192
          minLength: 1
          pattern: "-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\\
            u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\\
            u000D?\\u000A)?"
          title: Certificate
          type: string
        DisplayName:
          description: The certificate name to display.
          maxLength: 100
          title: DisplayName
          type: string
      required:
      - Certificate
      - FleetArn
      title: AssociateWebsiteCertificateAuthority_request
      type: object
    CreateFleet_request:
      properties:
        FleetName:
          description: A unique name for the fleet.
          maxLength: 48
          minLength: 1
          pattern: "^[a-z0-9](?:[a-z0-9\\-]{0,46}[a-z0-9])?$"
          title: FleetName
          type: string
        DisplayName:
          description: The fleet name to display.
          maxLength: 100
          title: DisplayName
          type: string
        OptimizeForEndUserLocation:
          description: "The option to optimize for better performance by routing traffic\
            \ through the closest AWS Region to users, which may be outside of your\
            \ home Region."
          title: OptimizeForEndUserLocation
          type: boolean
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: ' The tags to add to the resource. A tag is a key-value pair.'
          maxProperties: 50
          minProperties: 1
          title: Tags
          type: object
      required:
      - FleetName
      title: CreateFleet_request
      type: object
    DeleteFleet_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
      required:
      - FleetArn
      title: DeleteFleet_request
      type: object
    DescribeDevice_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        DeviceId:
          description: A unique identifier for a registered user's device.
          maxLength: 256
          minLength: 1
          title: DeviceId
          type: string
      required:
      - DeviceId
      - FleetArn
      title: DescribeDevice_request
      type: object
    DescribeDomain_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        DomainName:
          description: The name of the domain.
          maxLength: 253
          minLength: 1
          pattern: "^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\\.)+[a-zA-Z0-9]+$"
          title: DomainName
          type: string
      required:
      - DomainName
      - FleetArn
      title: DescribeDomain_request
      type: object
    DescribeFleetMetadata_request:
      properties:
        FleetArn:
          description: The Amazon Resource Name (ARN) of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
      required:
      - FleetArn
      title: DescribeFleetMetadata_request
      type: object
    DescribeWebsiteCertificateAuthority_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        WebsiteCaId:
          description: A unique identifier for the certificate authority.
          maxLength: 256
          minLength: 1
          title: WebsiteCaId
          type: string
      required:
      - FleetArn
      - WebsiteCaId
      title: DescribeWebsiteCertificateAuthority_request
      type: object
    DisassociateWebsiteAuthorizationProvider_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        AuthorizationProviderId:
          description: A unique identifier for the authorization provider.
          maxLength: 256
          minLength: 1
          title: AuthorizationProviderId
          type: string
      required:
      - AuthorizationProviderId
      - FleetArn
      title: DisassociateWebsiteAuthorizationProvider_request
      type: object
    DisassociateWebsiteCertificateAuthority_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        WebsiteCaId:
          description: A unique identifier for the CA.
          maxLength: 256
          minLength: 1
          title: WebsiteCaId
          type: string
      required:
      - FleetArn
      - WebsiteCaId
      title: DisassociateWebsiteCertificateAuthority_request
      type: object
    ListDevices_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        NextToken:
          description: "The pagination token used to retrieve the next page of results\
            \ for this operation. If this value is null, it retrieves the first page."
          maxLength: 4096
          minLength: 1
          pattern: "[\\w\\-]+"
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to be included in the next page.
          minimum: 1
          title: MaxResults
          type: integer
      required:
      - FleetArn
      title: ListDevices_request
      type: object
    ListFleets_request:
      properties:
        NextToken:
          description: "The pagination token used to retrieve the next page of results\
            \ for this operation. If this value is null, it retrieves the first page."
          maxLength: 4096
          minLength: 1
          pattern: "[\\w\\-]+"
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to be included in the next page.
          minimum: 1
          title: MaxResults
          type: integer
      title: ListFleets_request
      type: object
    TagResource_request:
      properties:
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The tags to add to the resource. A tag is a key-value pair.
          maxProperties: 50
          minProperties: 1
          title: Tags
          type: object
      required:
      - Tags
      title: TagResource_request
      type: object
    ListWebsiteAuthorizationProviders_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        NextToken:
          description: "The pagination token to use to retrieve the next page of results\
            \ for this operation. If this value is null, it retrieves the first page."
          maxLength: 4096
          minLength: 1
          pattern: "[\\w\\-]+"
          title: NextToken
          type: string
        MaxResults:
          description: The maximum number of results to be included in the next page.
          minimum: 1
          title: MaxResults
          type: integer
      required:
      - FleetArn
      title: ListWebsiteAuthorizationProviders_request
      type: object
    ListWebsiteCertificateAuthorities_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        MaxResults:
          description: The maximum number of results to be included in the next page.
          minimum: 1
          title: MaxResults
          type: integer
        NextToken:
          description: "The pagination token used to retrieve the next page of results\
            \ for this operation. If this value is null, it retrieves the first page."
          maxLength: 4096
          minLength: 1
          pattern: "[\\w\\-]+"
          title: NextToken
          type: string
      required:
      - FleetArn
      title: ListWebsiteCertificateAuthorities_request
      type: object
    SignOutUser_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        Username:
          description: The name of the user.
          maxLength: 256
          minLength: 1
          title: Username
          type: string
      required:
      - FleetArn
      - Username
      title: SignOutUser_request
      type: object
    UpdateAuditStreamConfiguration_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        AuditStreamArn:
          description: The ARN of the Amazon Kinesis data stream that receives the
            audit events.
          pattern: "^arn:aws:kinesis:.+:[0-9]{12}:stream/AmazonWorkLink-.*$"
          title: AuditStreamArn
          type: string
      required:
      - FleetArn
      title: UpdateAuditStreamConfiguration_request
      type: object
    UpdateCompanyNetworkConfiguration_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        VpcId:
          description: The VPC with connectivity to associated websites.
          pattern: "^vpc-([0-9a-f]{8}|[0-9a-f]{17})$"
          title: VpcId
          type: string
        SubnetIds:
          description: The subnets used for X-ENI connections from Amazon WorkLink
            rendering containers.
          items:
            $ref: '#/components/schemas/SubnetId'
          title: SubnetIds
          type: array
        SecurityGroupIds:
          description: The security groups associated with access to the provided
            subnets.
          items:
            $ref: '#/components/schemas/SecurityGroupId'
          maxItems: 5
          title: SecurityGroupIds
          type: array
      required:
      - FleetArn
      - SecurityGroupIds
      - SubnetIds
      - VpcId
      title: UpdateCompanyNetworkConfiguration_request
      type: object
    UpdateDevicePolicyConfiguration_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        DeviceCaCertificate:
          description: "The certificate chain, including intermediate certificates\
            \ and the root certificate authority certificate used to issue device\
            \ certificates."
          maxLength: 32768
          minLength: 1
          pattern: "(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\\
            u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\\
            u000D?\\u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\\
            u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\\
            u000D?\\u000A)?"
          title: DeviceCaCertificate
          type: string
      required:
      - FleetArn
      title: UpdateDevicePolicyConfiguration_request
      type: object
    UpdateDomainMetadata_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        DomainName:
          description: The name of the domain.
          maxLength: 253
          minLength: 1
          pattern: "^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\\.)+[a-zA-Z0-9]+$"
          title: DomainName
          type: string
        DisplayName:
          description: The name to display.
          maxLength: 100
          title: DisplayName
          type: string
      required:
      - DomainName
      - FleetArn
      title: UpdateDomainMetadata_request
      type: object
    UpdateFleetMetadata_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        DisplayName:
          description: The fleet name to display. The existing DisplayName is unset
            if null is passed.
          maxLength: 100
          title: DisplayName
          type: string
        OptimizeForEndUserLocation:
          description: "The option to optimize for better performance by routing traffic\
            \ through the closest AWS Region to users, which may be outside of your\
            \ home Region."
          title: OptimizeForEndUserLocation
          type: boolean
      required:
      - FleetArn
      title: UpdateFleetMetadata_request
      type: object
    UpdateIdentityProviderConfiguration_request:
      properties:
        FleetArn:
          description: The ARN of the fleet.
          maxLength: 2048
          minLength: 20
          title: FleetArn
          type: string
        IdentityProviderType:
          description: The type of identity provider.
          enum:
          - SAML
          title: IdentityProviderType
          type: string
        IdentityProviderSamlMetadata:
          description: The SAML metadata document provided by the customer’s identity
            provider. The existing IdentityProviderSamlMetadata is unset if null is
            passed.
          maxLength: 204800
          minLength: 1
          title: IdentityProviderSamlMetadata
          type: string
      required:
      - FleetArn
      - IdentityProviderType
      title: UpdateIdentityProviderConfiguration_request
      type: object
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
