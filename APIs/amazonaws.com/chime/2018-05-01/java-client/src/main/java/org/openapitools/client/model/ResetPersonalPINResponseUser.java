/*
 * Amazon Chime
 * <important> <p> <b>Most of these APIs are no longer supported and will not be updated.</b> We recommend using the latest versions in the <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/welcome.html\">Amazon Chime SDK API reference</a>, in the Amazon Chime SDK.</p> <p>Using the latest versions requires migrating to dedicated namespaces. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important> <p>The Amazon Chime application programming interface (API) is designed so administrators can perform key tasks, such as creating and managing Amazon Chime accounts, users, and Voice Connectors. This guide provides detailed information about the Amazon Chime API, including operations, types, inputs and outputs, and error codes.</p> <p>You can use an AWS SDK, the AWS Command Line Interface (AWS CLI), or the REST API to make API calls for Amazon Chime. We recommend using an AWS SDK or the AWS CLI. The page for each API action contains a <i>See Also</i> section that includes links to information about using the action with a language-specific AWS SDK or the AWS CLI.</p> <dl> <dt>Using an AWS SDK</dt> <dd> <p> You don't need to write code to calculate a signature for request authentication. The SDK clients authenticate your requests by using access keys that you provide. For more information about AWS SDKs, see the <a href=\"http://aws.amazon.com/developer/\">AWS Developer Center</a>. </p> </dd> <dt>Using the AWS CLI</dt> <dd> <p>Use your access keys with the AWS CLI to make API calls. For information about setting up the AWS CLI, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/installing.html\">Installing the AWS Command Line Interface</a> in the <i>AWS Command Line Interface User Guide</i>. For a list of available Amazon Chime commands, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/chime/index.html\">Amazon Chime commands</a> in the <i>AWS CLI Command Reference</i>. </p> </dd> <dt>Using REST APIs</dt> <dd> <p>If you use REST to make API calls, you must authenticate your request by providing a signature. Amazon Chime supports Signature Version 4. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>When making REST API calls, use the service name <code>chime</code> and REST endpoint <code>https://service.chime.aws.amazon.com</code>.</p> </dd> </dl> <p>Administrative permissions are controlled using AWS Identity and Access Management (IAM). For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/security-iam.html\">Identity and Access Management for Amazon Chime</a> in the <i>Amazon Chime Administration Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-05-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.InviteStatus;
import org.openapitools.client.model.License;
import org.openapitools.client.model.RegistrationStatus;
import org.openapitools.client.model.UpdateUserRequestItemAlexaForBusinessMetadata;
import org.openapitools.client.model.UserType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ResetPersonalPINResponseUser
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:22.248115-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ResetPersonalPINResponseUser {
  public static final String SERIALIZED_NAME_USER_ID = "UserId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_ACCOUNT_ID = "AccountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_PRIMARY_EMAIL = "PrimaryEmail";
  @SerializedName(SERIALIZED_NAME_PRIMARY_EMAIL)
  private String primaryEmail;

  public static final String SERIALIZED_NAME_PRIMARY_PROVISIONED_NUMBER = "PrimaryProvisionedNumber";
  @SerializedName(SERIALIZED_NAME_PRIMARY_PROVISIONED_NUMBER)
  private String primaryProvisionedNumber;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "DisplayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_LICENSE_TYPE = "LicenseType";
  @SerializedName(SERIALIZED_NAME_LICENSE_TYPE)
  private License licenseType;

  public static final String SERIALIZED_NAME_USER_TYPE = "UserType";
  @SerializedName(SERIALIZED_NAME_USER_TYPE)
  private UserType userType;

  public static final String SERIALIZED_NAME_USER_REGISTRATION_STATUS = "UserRegistrationStatus";
  @SerializedName(SERIALIZED_NAME_USER_REGISTRATION_STATUS)
  private RegistrationStatus userRegistrationStatus;

  public static final String SERIALIZED_NAME_USER_INVITATION_STATUS = "UserInvitationStatus";
  @SerializedName(SERIALIZED_NAME_USER_INVITATION_STATUS)
  private InviteStatus userInvitationStatus;

  public static final String SERIALIZED_NAME_REGISTERED_ON = "RegisteredOn";
  @SerializedName(SERIALIZED_NAME_REGISTERED_ON)
  private OffsetDateTime registeredOn;

  public static final String SERIALIZED_NAME_INVITED_ON = "InvitedOn";
  @SerializedName(SERIALIZED_NAME_INVITED_ON)
  private OffsetDateTime invitedOn;

  public static final String SERIALIZED_NAME_ALEXA_FOR_BUSINESS_METADATA = "AlexaForBusinessMetadata";
  @SerializedName(SERIALIZED_NAME_ALEXA_FOR_BUSINESS_METADATA)
  private UpdateUserRequestItemAlexaForBusinessMetadata alexaForBusinessMetadata;

  public static final String SERIALIZED_NAME_PERSONAL_P_I_N = "PersonalPIN";
  @SerializedName(SERIALIZED_NAME_PERSONAL_P_I_N)
  private String personalPIN;

  public ResetPersonalPINResponseUser() {
  }

  public ResetPersonalPINResponseUser userId(String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nonnull
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }


  public ResetPersonalPINResponseUser accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Get accountId
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public ResetPersonalPINResponseUser primaryEmail(String primaryEmail) {
    this.primaryEmail = primaryEmail;
    return this;
  }

  /**
   * Get primaryEmail
   * @return primaryEmail
   */
  @javax.annotation.Nullable
  public String getPrimaryEmail() {
    return primaryEmail;
  }

  public void setPrimaryEmail(String primaryEmail) {
    this.primaryEmail = primaryEmail;
  }


  public ResetPersonalPINResponseUser primaryProvisionedNumber(String primaryProvisionedNumber) {
    this.primaryProvisionedNumber = primaryProvisionedNumber;
    return this;
  }

  /**
   * Get primaryProvisionedNumber
   * @return primaryProvisionedNumber
   */
  @javax.annotation.Nullable
  public String getPrimaryProvisionedNumber() {
    return primaryProvisionedNumber;
  }

  public void setPrimaryProvisionedNumber(String primaryProvisionedNumber) {
    this.primaryProvisionedNumber = primaryProvisionedNumber;
  }


  public ResetPersonalPINResponseUser displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public ResetPersonalPINResponseUser licenseType(License licenseType) {
    this.licenseType = licenseType;
    return this;
  }

  /**
   * Get licenseType
   * @return licenseType
   */
  @javax.annotation.Nullable
  public License getLicenseType() {
    return licenseType;
  }

  public void setLicenseType(License licenseType) {
    this.licenseType = licenseType;
  }


  public ResetPersonalPINResponseUser userType(UserType userType) {
    this.userType = userType;
    return this;
  }

  /**
   * Get userType
   * @return userType
   */
  @javax.annotation.Nullable
  public UserType getUserType() {
    return userType;
  }

  public void setUserType(UserType userType) {
    this.userType = userType;
  }


  public ResetPersonalPINResponseUser userRegistrationStatus(RegistrationStatus userRegistrationStatus) {
    this.userRegistrationStatus = userRegistrationStatus;
    return this;
  }

  /**
   * Get userRegistrationStatus
   * @return userRegistrationStatus
   */
  @javax.annotation.Nullable
  public RegistrationStatus getUserRegistrationStatus() {
    return userRegistrationStatus;
  }

  public void setUserRegistrationStatus(RegistrationStatus userRegistrationStatus) {
    this.userRegistrationStatus = userRegistrationStatus;
  }


  public ResetPersonalPINResponseUser userInvitationStatus(InviteStatus userInvitationStatus) {
    this.userInvitationStatus = userInvitationStatus;
    return this;
  }

  /**
   * Get userInvitationStatus
   * @return userInvitationStatus
   */
  @javax.annotation.Nullable
  public InviteStatus getUserInvitationStatus() {
    return userInvitationStatus;
  }

  public void setUserInvitationStatus(InviteStatus userInvitationStatus) {
    this.userInvitationStatus = userInvitationStatus;
  }


  public ResetPersonalPINResponseUser registeredOn(OffsetDateTime registeredOn) {
    this.registeredOn = registeredOn;
    return this;
  }

  /**
   * Get registeredOn
   * @return registeredOn
   */
  @javax.annotation.Nullable
  public OffsetDateTime getRegisteredOn() {
    return registeredOn;
  }

  public void setRegisteredOn(OffsetDateTime registeredOn) {
    this.registeredOn = registeredOn;
  }


  public ResetPersonalPINResponseUser invitedOn(OffsetDateTime invitedOn) {
    this.invitedOn = invitedOn;
    return this;
  }

  /**
   * Get invitedOn
   * @return invitedOn
   */
  @javax.annotation.Nullable
  public OffsetDateTime getInvitedOn() {
    return invitedOn;
  }

  public void setInvitedOn(OffsetDateTime invitedOn) {
    this.invitedOn = invitedOn;
  }


  public ResetPersonalPINResponseUser alexaForBusinessMetadata(UpdateUserRequestItemAlexaForBusinessMetadata alexaForBusinessMetadata) {
    this.alexaForBusinessMetadata = alexaForBusinessMetadata;
    return this;
  }

  /**
   * Get alexaForBusinessMetadata
   * @return alexaForBusinessMetadata
   */
  @javax.annotation.Nullable
  public UpdateUserRequestItemAlexaForBusinessMetadata getAlexaForBusinessMetadata() {
    return alexaForBusinessMetadata;
  }

  public void setAlexaForBusinessMetadata(UpdateUserRequestItemAlexaForBusinessMetadata alexaForBusinessMetadata) {
    this.alexaForBusinessMetadata = alexaForBusinessMetadata;
  }


  public ResetPersonalPINResponseUser personalPIN(String personalPIN) {
    this.personalPIN = personalPIN;
    return this;
  }

  /**
   * Get personalPIN
   * @return personalPIN
   */
  @javax.annotation.Nullable
  public String getPersonalPIN() {
    return personalPIN;
  }

  public void setPersonalPIN(String personalPIN) {
    this.personalPIN = personalPIN;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResetPersonalPINResponseUser resetPersonalPINResponseUser = (ResetPersonalPINResponseUser) o;
    return Objects.equals(this.userId, resetPersonalPINResponseUser.userId) &&
        Objects.equals(this.accountId, resetPersonalPINResponseUser.accountId) &&
        Objects.equals(this.primaryEmail, resetPersonalPINResponseUser.primaryEmail) &&
        Objects.equals(this.primaryProvisionedNumber, resetPersonalPINResponseUser.primaryProvisionedNumber) &&
        Objects.equals(this.displayName, resetPersonalPINResponseUser.displayName) &&
        Objects.equals(this.licenseType, resetPersonalPINResponseUser.licenseType) &&
        Objects.equals(this.userType, resetPersonalPINResponseUser.userType) &&
        Objects.equals(this.userRegistrationStatus, resetPersonalPINResponseUser.userRegistrationStatus) &&
        Objects.equals(this.userInvitationStatus, resetPersonalPINResponseUser.userInvitationStatus) &&
        Objects.equals(this.registeredOn, resetPersonalPINResponseUser.registeredOn) &&
        Objects.equals(this.invitedOn, resetPersonalPINResponseUser.invitedOn) &&
        Objects.equals(this.alexaForBusinessMetadata, resetPersonalPINResponseUser.alexaForBusinessMetadata) &&
        Objects.equals(this.personalPIN, resetPersonalPINResponseUser.personalPIN);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, accountId, primaryEmail, primaryProvisionedNumber, displayName, licenseType, userType, userRegistrationStatus, userInvitationStatus, registeredOn, invitedOn, alexaForBusinessMetadata, personalPIN);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResetPersonalPINResponseUser {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    primaryEmail: ").append(toIndentedString(primaryEmail)).append("\n");
    sb.append("    primaryProvisionedNumber: ").append(toIndentedString(primaryProvisionedNumber)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    licenseType: ").append(toIndentedString(licenseType)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    userRegistrationStatus: ").append(toIndentedString(userRegistrationStatus)).append("\n");
    sb.append("    userInvitationStatus: ").append(toIndentedString(userInvitationStatus)).append("\n");
    sb.append("    registeredOn: ").append(toIndentedString(registeredOn)).append("\n");
    sb.append("    invitedOn: ").append(toIndentedString(invitedOn)).append("\n");
    sb.append("    alexaForBusinessMetadata: ").append(toIndentedString(alexaForBusinessMetadata)).append("\n");
    sb.append("    personalPIN: ").append(toIndentedString(personalPIN)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("UserId");
    openapiFields.add("AccountId");
    openapiFields.add("PrimaryEmail");
    openapiFields.add("PrimaryProvisionedNumber");
    openapiFields.add("DisplayName");
    openapiFields.add("LicenseType");
    openapiFields.add("UserType");
    openapiFields.add("UserRegistrationStatus");
    openapiFields.add("UserInvitationStatus");
    openapiFields.add("RegisteredOn");
    openapiFields.add("InvitedOn");
    openapiFields.add("AlexaForBusinessMetadata");
    openapiFields.add("PersonalPIN");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("UserId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ResetPersonalPINResponseUser
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ResetPersonalPINResponseUser.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResetPersonalPINResponseUser is not found in the empty JSON string", ResetPersonalPINResponseUser.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ResetPersonalPINResponseUser.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResetPersonalPINResponseUser` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ResetPersonalPINResponseUser.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `UserId`
      String.validateJsonElement(jsonObj.get("UserId"));
      // validate the optional field `AccountId`
      if (jsonObj.get("AccountId") != null && !jsonObj.get("AccountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AccountId"));
      }
      // validate the optional field `PrimaryEmail`
      if (jsonObj.get("PrimaryEmail") != null && !jsonObj.get("PrimaryEmail").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PrimaryEmail"));
      }
      // validate the optional field `PrimaryProvisionedNumber`
      if (jsonObj.get("PrimaryProvisionedNumber") != null && !jsonObj.get("PrimaryProvisionedNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PrimaryProvisionedNumber"));
      }
      // validate the optional field `DisplayName`
      if (jsonObj.get("DisplayName") != null && !jsonObj.get("DisplayName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DisplayName"));
      }
      // validate the optional field `LicenseType`
      if (jsonObj.get("LicenseType") != null && !jsonObj.get("LicenseType").isJsonNull()) {
        License.validateJsonElement(jsonObj.get("LicenseType"));
      }
      // validate the optional field `UserType`
      if (jsonObj.get("UserType") != null && !jsonObj.get("UserType").isJsonNull()) {
        UserType.validateJsonElement(jsonObj.get("UserType"));
      }
      // validate the optional field `UserRegistrationStatus`
      if (jsonObj.get("UserRegistrationStatus") != null && !jsonObj.get("UserRegistrationStatus").isJsonNull()) {
        RegistrationStatus.validateJsonElement(jsonObj.get("UserRegistrationStatus"));
      }
      // validate the optional field `UserInvitationStatus`
      if (jsonObj.get("UserInvitationStatus") != null && !jsonObj.get("UserInvitationStatus").isJsonNull()) {
        InviteStatus.validateJsonElement(jsonObj.get("UserInvitationStatus"));
      }
      // validate the optional field `RegisteredOn`
      if (jsonObj.get("RegisteredOn") != null && !jsonObj.get("RegisteredOn").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("RegisteredOn"));
      }
      // validate the optional field `InvitedOn`
      if (jsonObj.get("InvitedOn") != null && !jsonObj.get("InvitedOn").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("InvitedOn"));
      }
      // validate the optional field `AlexaForBusinessMetadata`
      if (jsonObj.get("AlexaForBusinessMetadata") != null && !jsonObj.get("AlexaForBusinessMetadata").isJsonNull()) {
        UpdateUserRequestItemAlexaForBusinessMetadata.validateJsonElement(jsonObj.get("AlexaForBusinessMetadata"));
      }
      // validate the optional field `PersonalPIN`
      if (jsonObj.get("PersonalPIN") != null && !jsonObj.get("PersonalPIN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PersonalPIN"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResetPersonalPINResponseUser.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResetPersonalPINResponseUser' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResetPersonalPINResponseUser> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResetPersonalPINResponseUser.class));

       return (TypeAdapter<T>) new TypeAdapter<ResetPersonalPINResponseUser>() {
           @Override
           public void write(JsonWriter out, ResetPersonalPINResponseUser value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResetPersonalPINResponseUser read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ResetPersonalPINResponseUser given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ResetPersonalPINResponseUser
   * @throws IOException if the JSON string is invalid with respect to ResetPersonalPINResponseUser
   */
  public static ResetPersonalPINResponseUser fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResetPersonalPINResponseUser.class);
  }

  /**
   * Convert an instance of ResetPersonalPINResponseUser to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

