# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TelephonySettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inbound_calling: bool=None, outbound_calling: bool=None, sms: bool=None):
        """TelephonySettings - a model defined in OpenAPI

        :param inbound_calling: The inbound_calling of this TelephonySettings.
        :param outbound_calling: The outbound_calling of this TelephonySettings.
        :param sms: The sms of this TelephonySettings.
        """
        self.openapi_types = {
            'inbound_calling': bool,
            'outbound_calling': bool,
            'sms': bool
        }

        self.attribute_map = {
            'inbound_calling': 'InboundCalling',
            'outbound_calling': 'OutboundCalling',
            'sms': 'SMS'
        }

        self._inbound_calling = inbound_calling
        self._outbound_calling = outbound_calling
        self._sms = sms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TelephonySettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TelephonySettings of this TelephonySettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inbound_calling(self):
        """Gets the inbound_calling of this TelephonySettings.


        :return: The inbound_calling of this TelephonySettings.
        :rtype: bool
        """
        return self._inbound_calling

    @inbound_calling.setter
    def inbound_calling(self, inbound_calling):
        """Sets the inbound_calling of this TelephonySettings.


        :param inbound_calling: The inbound_calling of this TelephonySettings.
        :type inbound_calling: bool
        """
        if inbound_calling is None:
            raise ValueError("Invalid value for `inbound_calling`, must not be `None`")

        self._inbound_calling = inbound_calling

    @property
    def outbound_calling(self):
        """Gets the outbound_calling of this TelephonySettings.


        :return: The outbound_calling of this TelephonySettings.
        :rtype: bool
        """
        return self._outbound_calling

    @outbound_calling.setter
    def outbound_calling(self, outbound_calling):
        """Sets the outbound_calling of this TelephonySettings.


        :param outbound_calling: The outbound_calling of this TelephonySettings.
        :type outbound_calling: bool
        """
        if outbound_calling is None:
            raise ValueError("Invalid value for `outbound_calling`, must not be `None`")

        self._outbound_calling = outbound_calling

    @property
    def sms(self):
        """Gets the sms of this TelephonySettings.


        :return: The sms of this TelephonySettings.
        :rtype: bool
        """
        return self._sms

    @sms.setter
    def sms(self, sms):
        """Sets the sms of this TelephonySettings.


        :param sms: The sms of this TelephonySettings.
        :type sms: bool
        """
        if sms is None:
            raise ValueError("Invalid value for `sms`, must not be `None`")

        self._sms = sms
