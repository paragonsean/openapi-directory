# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Attendee(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, external_user_id: str=None, attendee_id: str=None, join_token: str=None):
        """Attendee - a model defined in OpenAPI

        :param external_user_id: The external_user_id of this Attendee.
        :param attendee_id: The attendee_id of this Attendee.
        :param join_token: The join_token of this Attendee.
        """
        self.openapi_types = {
            'external_user_id': str,
            'attendee_id': str,
            'join_token': str
        }

        self.attribute_map = {
            'external_user_id': 'ExternalUserId',
            'attendee_id': 'AttendeeId',
            'join_token': 'JoinToken'
        }

        self._external_user_id = external_user_id
        self._attendee_id = attendee_id
        self._join_token = join_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Attendee':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Attendee of this Attendee.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_user_id(self):
        """Gets the external_user_id of this Attendee.


        :return: The external_user_id of this Attendee.
        :rtype: str
        """
        return self._external_user_id

    @external_user_id.setter
    def external_user_id(self, external_user_id):
        """Sets the external_user_id of this Attendee.


        :param external_user_id: The external_user_id of this Attendee.
        :type external_user_id: str
        """

        self._external_user_id = external_user_id

    @property
    def attendee_id(self):
        """Gets the attendee_id of this Attendee.


        :return: The attendee_id of this Attendee.
        :rtype: str
        """
        return self._attendee_id

    @attendee_id.setter
    def attendee_id(self, attendee_id):
        """Sets the attendee_id of this Attendee.


        :param attendee_id: The attendee_id of this Attendee.
        :type attendee_id: str
        """

        self._attendee_id = attendee_id

    @property
    def join_token(self):
        """Gets the join_token of this Attendee.


        :return: The join_token of this Attendee.
        :rtype: str
        """
        return self._join_token

    @join_token.setter
    def join_token(self, join_token):
        """Sets the join_token of this Attendee.


        :param join_token: The join_token of this Attendee.
        :type join_token: str
        """

        self._join_token = join_token
