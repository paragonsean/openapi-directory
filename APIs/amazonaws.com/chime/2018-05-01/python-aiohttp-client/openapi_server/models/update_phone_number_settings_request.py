# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class UpdatePhoneNumberSettingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, calling_name: str=None):
        """UpdatePhoneNumberSettingsRequest - a model defined in OpenAPI

        :param calling_name: The calling_name of this UpdatePhoneNumberSettingsRequest.
        """
        self.openapi_types = {
            'calling_name': str
        }

        self.attribute_map = {
            'calling_name': 'CallingName'
        }

        self._calling_name = calling_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdatePhoneNumberSettingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdatePhoneNumberSettings_request of this UpdatePhoneNumberSettingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def calling_name(self):
        """Gets the calling_name of this UpdatePhoneNumberSettingsRequest.

        The default outbound calling name for the account.

        :return: The calling_name of this UpdatePhoneNumberSettingsRequest.
        :rtype: str
        """
        return self._calling_name

    @calling_name.setter
    def calling_name(self, calling_name):
        """Sets the calling_name of this UpdatePhoneNumberSettingsRequest.

        The default outbound calling name for the account.

        :param calling_name: The calling_name of this UpdatePhoneNumberSettingsRequest.
        :type calling_name: str
        """
        if calling_name is None:
            raise ValueError("Invalid value for `calling_name`, must not be `None`")
        if calling_name is not None and not re.search(r'^$|^[a-zA-Z0-9 ]{2,15}$', calling_name):
            raise ValueError("Invalid value for `calling_name`, must be a follow pattern or equal to `/^$|^[a-zA-Z0-9 ]{2,15}$/`")

        self._calling_name = calling_name
