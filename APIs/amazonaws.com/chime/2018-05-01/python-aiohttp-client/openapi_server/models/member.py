# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.member_type import MemberType
from openapi_server import util


class Member(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, member_id: str=None, member_type: MemberType=None, email: str=None, full_name: str=None, account_id: str=None):
        """Member - a model defined in OpenAPI

        :param member_id: The member_id of this Member.
        :param member_type: The member_type of this Member.
        :param email: The email of this Member.
        :param full_name: The full_name of this Member.
        :param account_id: The account_id of this Member.
        """
        self.openapi_types = {
            'member_id': str,
            'member_type': MemberType,
            'email': str,
            'full_name': str,
            'account_id': str
        }

        self.attribute_map = {
            'member_id': 'MemberId',
            'member_type': 'MemberType',
            'email': 'Email',
            'full_name': 'FullName',
            'account_id': 'AccountId'
        }

        self._member_id = member_id
        self._member_type = member_type
        self._email = email
        self._full_name = full_name
        self._account_id = account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Member':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Member of this Member.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def member_id(self):
        """Gets the member_id of this Member.


        :return: The member_id of this Member.
        :rtype: str
        """
        return self._member_id

    @member_id.setter
    def member_id(self, member_id):
        """Sets the member_id of this Member.


        :param member_id: The member_id of this Member.
        :type member_id: str
        """

        self._member_id = member_id

    @property
    def member_type(self):
        """Gets the member_type of this Member.


        :return: The member_type of this Member.
        :rtype: MemberType
        """
        return self._member_type

    @member_type.setter
    def member_type(self, member_type):
        """Sets the member_type of this Member.


        :param member_type: The member_type of this Member.
        :type member_type: MemberType
        """

        self._member_type = member_type

    @property
    def email(self):
        """Gets the email of this Member.


        :return: The email of this Member.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Member.


        :param email: The email of this Member.
        :type email: str
        """

        self._email = email

    @property
    def full_name(self):
        """Gets the full_name of this Member.


        :return: The full_name of this Member.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this Member.


        :param full_name: The full_name of this Member.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def account_id(self):
        """Gets the account_id of this Member.


        :return: The account_id of this Member.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this Member.


        :param account_id: The account_id of this Member.
        :type account_id: str
        """

        self._account_id = account_id
