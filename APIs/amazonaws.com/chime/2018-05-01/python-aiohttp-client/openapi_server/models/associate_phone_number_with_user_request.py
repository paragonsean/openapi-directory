# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class AssociatePhoneNumberWithUserRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, e164_phone_number: str=None):
        """AssociatePhoneNumberWithUserRequest - a model defined in OpenAPI

        :param e164_phone_number: The e164_phone_number of this AssociatePhoneNumberWithUserRequest.
        """
        self.openapi_types = {
            'e164_phone_number': str
        }

        self.attribute_map = {
            'e164_phone_number': 'E164PhoneNumber'
        }

        self._e164_phone_number = e164_phone_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociatePhoneNumberWithUserRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociatePhoneNumberWithUser_request of this AssociatePhoneNumberWithUserRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def e164_phone_number(self):
        """Gets the e164_phone_number of this AssociatePhoneNumberWithUserRequest.

        The phone number, in E.164 format.

        :return: The e164_phone_number of this AssociatePhoneNumberWithUserRequest.
        :rtype: str
        """
        return self._e164_phone_number

    @e164_phone_number.setter
    def e164_phone_number(self, e164_phone_number):
        """Sets the e164_phone_number of this AssociatePhoneNumberWithUserRequest.

        The phone number, in E.164 format.

        :param e164_phone_number: The e164_phone_number of this AssociatePhoneNumberWithUserRequest.
        :type e164_phone_number: str
        """
        if e164_phone_number is None:
            raise ValueError("Invalid value for `e164_phone_number`, must not be `None`")
        if e164_phone_number is not None and not re.search(r'^\+?[1-9]\d{1,14}$', e164_phone_number):
            raise ValueError("Invalid value for `e164_phone_number`, must be a follow pattern or equal to `/^\+?[1-9]\d{1,14}$/`")

        self._e164_phone_number = e164_phone_number
