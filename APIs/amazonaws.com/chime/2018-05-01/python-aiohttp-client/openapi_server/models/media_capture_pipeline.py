# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_media_capture_pipeline_request_chime_sdk_meeting_configuration import CreateMediaCapturePipelineRequestChimeSdkMeetingConfiguration
from openapi_server.models.media_pipeline_sink_type import MediaPipelineSinkType
from openapi_server.models.media_pipeline_source_type import MediaPipelineSourceType
from openapi_server.models.media_pipeline_status import MediaPipelineStatus
from openapi_server import util


class MediaCapturePipeline(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, media_pipeline_id: str=None, source_type: MediaPipelineSourceType=None, source_arn: str=None, status: MediaPipelineStatus=None, sink_type: MediaPipelineSinkType=None, sink_arn: str=None, created_timestamp: datetime=None, updated_timestamp: datetime=None, chime_sdk_meeting_configuration: CreateMediaCapturePipelineRequestChimeSdkMeetingConfiguration=None):
        """MediaCapturePipeline - a model defined in OpenAPI

        :param media_pipeline_id: The media_pipeline_id of this MediaCapturePipeline.
        :param source_type: The source_type of this MediaCapturePipeline.
        :param source_arn: The source_arn of this MediaCapturePipeline.
        :param status: The status of this MediaCapturePipeline.
        :param sink_type: The sink_type of this MediaCapturePipeline.
        :param sink_arn: The sink_arn of this MediaCapturePipeline.
        :param created_timestamp: The created_timestamp of this MediaCapturePipeline.
        :param updated_timestamp: The updated_timestamp of this MediaCapturePipeline.
        :param chime_sdk_meeting_configuration: The chime_sdk_meeting_configuration of this MediaCapturePipeline.
        """
        self.openapi_types = {
            'media_pipeline_id': str,
            'source_type': MediaPipelineSourceType,
            'source_arn': str,
            'status': MediaPipelineStatus,
            'sink_type': MediaPipelineSinkType,
            'sink_arn': str,
            'created_timestamp': datetime,
            'updated_timestamp': datetime,
            'chime_sdk_meeting_configuration': CreateMediaCapturePipelineRequestChimeSdkMeetingConfiguration
        }

        self.attribute_map = {
            'media_pipeline_id': 'MediaPipelineId',
            'source_type': 'SourceType',
            'source_arn': 'SourceArn',
            'status': 'Status',
            'sink_type': 'SinkType',
            'sink_arn': 'SinkArn',
            'created_timestamp': 'CreatedTimestamp',
            'updated_timestamp': 'UpdatedTimestamp',
            'chime_sdk_meeting_configuration': 'ChimeSdkMeetingConfiguration'
        }

        self._media_pipeline_id = media_pipeline_id
        self._source_type = source_type
        self._source_arn = source_arn
        self._status = status
        self._sink_type = sink_type
        self._sink_arn = sink_arn
        self._created_timestamp = created_timestamp
        self._updated_timestamp = updated_timestamp
        self._chime_sdk_meeting_configuration = chime_sdk_meeting_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MediaCapturePipeline':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MediaCapturePipeline of this MediaCapturePipeline.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def media_pipeline_id(self):
        """Gets the media_pipeline_id of this MediaCapturePipeline.


        :return: The media_pipeline_id of this MediaCapturePipeline.
        :rtype: str
        """
        return self._media_pipeline_id

    @media_pipeline_id.setter
    def media_pipeline_id(self, media_pipeline_id):
        """Sets the media_pipeline_id of this MediaCapturePipeline.


        :param media_pipeline_id: The media_pipeline_id of this MediaCapturePipeline.
        :type media_pipeline_id: str
        """

        self._media_pipeline_id = media_pipeline_id

    @property
    def source_type(self):
        """Gets the source_type of this MediaCapturePipeline.


        :return: The source_type of this MediaCapturePipeline.
        :rtype: MediaPipelineSourceType
        """
        return self._source_type

    @source_type.setter
    def source_type(self, source_type):
        """Sets the source_type of this MediaCapturePipeline.


        :param source_type: The source_type of this MediaCapturePipeline.
        :type source_type: MediaPipelineSourceType
        """

        self._source_type = source_type

    @property
    def source_arn(self):
        """Gets the source_arn of this MediaCapturePipeline.


        :return: The source_arn of this MediaCapturePipeline.
        :rtype: str
        """
        return self._source_arn

    @source_arn.setter
    def source_arn(self, source_arn):
        """Sets the source_arn of this MediaCapturePipeline.


        :param source_arn: The source_arn of this MediaCapturePipeline.
        :type source_arn: str
        """

        self._source_arn = source_arn

    @property
    def status(self):
        """Gets the status of this MediaCapturePipeline.


        :return: The status of this MediaCapturePipeline.
        :rtype: MediaPipelineStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MediaCapturePipeline.


        :param status: The status of this MediaCapturePipeline.
        :type status: MediaPipelineStatus
        """

        self._status = status

    @property
    def sink_type(self):
        """Gets the sink_type of this MediaCapturePipeline.


        :return: The sink_type of this MediaCapturePipeline.
        :rtype: MediaPipelineSinkType
        """
        return self._sink_type

    @sink_type.setter
    def sink_type(self, sink_type):
        """Sets the sink_type of this MediaCapturePipeline.


        :param sink_type: The sink_type of this MediaCapturePipeline.
        :type sink_type: MediaPipelineSinkType
        """

        self._sink_type = sink_type

    @property
    def sink_arn(self):
        """Gets the sink_arn of this MediaCapturePipeline.


        :return: The sink_arn of this MediaCapturePipeline.
        :rtype: str
        """
        return self._sink_arn

    @sink_arn.setter
    def sink_arn(self, sink_arn):
        """Sets the sink_arn of this MediaCapturePipeline.


        :param sink_arn: The sink_arn of this MediaCapturePipeline.
        :type sink_arn: str
        """

        self._sink_arn = sink_arn

    @property
    def created_timestamp(self):
        """Gets the created_timestamp of this MediaCapturePipeline.


        :return: The created_timestamp of this MediaCapturePipeline.
        :rtype: datetime
        """
        return self._created_timestamp

    @created_timestamp.setter
    def created_timestamp(self, created_timestamp):
        """Sets the created_timestamp of this MediaCapturePipeline.


        :param created_timestamp: The created_timestamp of this MediaCapturePipeline.
        :type created_timestamp: datetime
        """

        self._created_timestamp = created_timestamp

    @property
    def updated_timestamp(self):
        """Gets the updated_timestamp of this MediaCapturePipeline.


        :return: The updated_timestamp of this MediaCapturePipeline.
        :rtype: datetime
        """
        return self._updated_timestamp

    @updated_timestamp.setter
    def updated_timestamp(self, updated_timestamp):
        """Sets the updated_timestamp of this MediaCapturePipeline.


        :param updated_timestamp: The updated_timestamp of this MediaCapturePipeline.
        :type updated_timestamp: datetime
        """

        self._updated_timestamp = updated_timestamp

    @property
    def chime_sdk_meeting_configuration(self):
        """Gets the chime_sdk_meeting_configuration of this MediaCapturePipeline.


        :return: The chime_sdk_meeting_configuration of this MediaCapturePipeline.
        :rtype: CreateMediaCapturePipelineRequestChimeSdkMeetingConfiguration
        """
        return self._chime_sdk_meeting_configuration

    @chime_sdk_meeting_configuration.setter
    def chime_sdk_meeting_configuration(self, chime_sdk_meeting_configuration):
        """Sets the chime_sdk_meeting_configuration of this MediaCapturePipeline.


        :param chime_sdk_meeting_configuration: The chime_sdk_meeting_configuration of this MediaCapturePipeline.
        :type chime_sdk_meeting_configuration: CreateMediaCapturePipelineRequestChimeSdkMeetingConfiguration
        """

        self._chime_sdk_meeting_configuration = chime_sdk_meeting_configuration
