# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_status import AccountStatus
from openapi_server.models.account_type import AccountType
from openapi_server.models.license import License
from openapi_server import util


class CreateAccountResponseAccount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aws_account_id: str=None, account_id: str=None, name: str=None, account_type: AccountType=None, created_timestamp: datetime=None, default_license: License=None, supported_licenses: List=None, account_status: AccountStatus=None, signin_delegate_groups: List=None):
        """CreateAccountResponseAccount - a model defined in OpenAPI

        :param aws_account_id: The aws_account_id of this CreateAccountResponseAccount.
        :param account_id: The account_id of this CreateAccountResponseAccount.
        :param name: The name of this CreateAccountResponseAccount.
        :param account_type: The account_type of this CreateAccountResponseAccount.
        :param created_timestamp: The created_timestamp of this CreateAccountResponseAccount.
        :param default_license: The default_license of this CreateAccountResponseAccount.
        :param supported_licenses: The supported_licenses of this CreateAccountResponseAccount.
        :param account_status: The account_status of this CreateAccountResponseAccount.
        :param signin_delegate_groups: The signin_delegate_groups of this CreateAccountResponseAccount.
        """
        self.openapi_types = {
            'aws_account_id': str,
            'account_id': str,
            'name': str,
            'account_type': AccountType,
            'created_timestamp': datetime,
            'default_license': License,
            'supported_licenses': List,
            'account_status': AccountStatus,
            'signin_delegate_groups': List
        }

        self.attribute_map = {
            'aws_account_id': 'AwsAccountId',
            'account_id': 'AccountId',
            'name': 'Name',
            'account_type': 'AccountType',
            'created_timestamp': 'CreatedTimestamp',
            'default_license': 'DefaultLicense',
            'supported_licenses': 'SupportedLicenses',
            'account_status': 'AccountStatus',
            'signin_delegate_groups': 'SigninDelegateGroups'
        }

        self._aws_account_id = aws_account_id
        self._account_id = account_id
        self._name = name
        self._account_type = account_type
        self._created_timestamp = created_timestamp
        self._default_license = default_license
        self._supported_licenses = supported_licenses
        self._account_status = account_status
        self._signin_delegate_groups = signin_delegate_groups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAccountResponseAccount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAccountResponse_Account of this CreateAccountResponseAccount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aws_account_id(self):
        """Gets the aws_account_id of this CreateAccountResponseAccount.


        :return: The aws_account_id of this CreateAccountResponseAccount.
        :rtype: str
        """
        return self._aws_account_id

    @aws_account_id.setter
    def aws_account_id(self, aws_account_id):
        """Sets the aws_account_id of this CreateAccountResponseAccount.


        :param aws_account_id: The aws_account_id of this CreateAccountResponseAccount.
        :type aws_account_id: str
        """
        if aws_account_id is None:
            raise ValueError("Invalid value for `aws_account_id`, must not be `None`")

        self._aws_account_id = aws_account_id

    @property
    def account_id(self):
        """Gets the account_id of this CreateAccountResponseAccount.


        :return: The account_id of this CreateAccountResponseAccount.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this CreateAccountResponseAccount.


        :param account_id: The account_id of this CreateAccountResponseAccount.
        :type account_id: str
        """
        if account_id is None:
            raise ValueError("Invalid value for `account_id`, must not be `None`")

        self._account_id = account_id

    @property
    def name(self):
        """Gets the name of this CreateAccountResponseAccount.


        :return: The name of this CreateAccountResponseAccount.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateAccountResponseAccount.


        :param name: The name of this CreateAccountResponseAccount.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def account_type(self):
        """Gets the account_type of this CreateAccountResponseAccount.


        :return: The account_type of this CreateAccountResponseAccount.
        :rtype: AccountType
        """
        return self._account_type

    @account_type.setter
    def account_type(self, account_type):
        """Sets the account_type of this CreateAccountResponseAccount.


        :param account_type: The account_type of this CreateAccountResponseAccount.
        :type account_type: AccountType
        """

        self._account_type = account_type

    @property
    def created_timestamp(self):
        """Gets the created_timestamp of this CreateAccountResponseAccount.


        :return: The created_timestamp of this CreateAccountResponseAccount.
        :rtype: datetime
        """
        return self._created_timestamp

    @created_timestamp.setter
    def created_timestamp(self, created_timestamp):
        """Sets the created_timestamp of this CreateAccountResponseAccount.


        :param created_timestamp: The created_timestamp of this CreateAccountResponseAccount.
        :type created_timestamp: datetime
        """

        self._created_timestamp = created_timestamp

    @property
    def default_license(self):
        """Gets the default_license of this CreateAccountResponseAccount.


        :return: The default_license of this CreateAccountResponseAccount.
        :rtype: License
        """
        return self._default_license

    @default_license.setter
    def default_license(self, default_license):
        """Sets the default_license of this CreateAccountResponseAccount.


        :param default_license: The default_license of this CreateAccountResponseAccount.
        :type default_license: License
        """

        self._default_license = default_license

    @property
    def supported_licenses(self):
        """Gets the supported_licenses of this CreateAccountResponseAccount.


        :return: The supported_licenses of this CreateAccountResponseAccount.
        :rtype: List
        """
        return self._supported_licenses

    @supported_licenses.setter
    def supported_licenses(self, supported_licenses):
        """Sets the supported_licenses of this CreateAccountResponseAccount.


        :param supported_licenses: The supported_licenses of this CreateAccountResponseAccount.
        :type supported_licenses: List
        """

        self._supported_licenses = supported_licenses

    @property
    def account_status(self):
        """Gets the account_status of this CreateAccountResponseAccount.


        :return: The account_status of this CreateAccountResponseAccount.
        :rtype: AccountStatus
        """
        return self._account_status

    @account_status.setter
    def account_status(self, account_status):
        """Sets the account_status of this CreateAccountResponseAccount.


        :param account_status: The account_status of this CreateAccountResponseAccount.
        :type account_status: AccountStatus
        """

        self._account_status = account_status

    @property
    def signin_delegate_groups(self):
        """Gets the signin_delegate_groups of this CreateAccountResponseAccount.


        :return: The signin_delegate_groups of this CreateAccountResponseAccount.
        :rtype: List
        """
        return self._signin_delegate_groups

    @signin_delegate_groups.setter
    def signin_delegate_groups(self, signin_delegate_groups):
        """Sets the signin_delegate_groups of this CreateAccountResponseAccount.


        :param signin_delegate_groups: The signin_delegate_groups of this CreateAccountResponseAccount.
        :type signin_delegate_groups: List
        """

        self._signin_delegate_groups = signin_delegate_groups
