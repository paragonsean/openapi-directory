# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_proxy_session_response_proxy_session import CreateProxySessionResponseProxySession
from openapi_server import util


class UpdateProxySessionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, proxy_session: CreateProxySessionResponseProxySession=None):
        """UpdateProxySessionResponse - a model defined in OpenAPI

        :param proxy_session: The proxy_session of this UpdateProxySessionResponse.
        """
        self.openapi_types = {
            'proxy_session': CreateProxySessionResponseProxySession
        }

        self.attribute_map = {
            'proxy_session': 'ProxySession'
        }

        self._proxy_session = proxy_session

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateProxySessionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateProxySessionResponse of this UpdateProxySessionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def proxy_session(self):
        """Gets the proxy_session of this UpdateProxySessionResponse.


        :return: The proxy_session of this UpdateProxySessionResponse.
        :rtype: CreateProxySessionResponseProxySession
        """
        return self._proxy_session

    @proxy_session.setter
    def proxy_session(self, proxy_session):
        """Sets the proxy_session of this UpdateProxySessionResponse.


        :param proxy_session: The proxy_session of this UpdateProxySessionResponse.
        :type proxy_session: CreateProxySessionResponseProxySession
        """

        self._proxy_session = proxy_session
