# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_proxy_session_request_geo_match_params import CreateProxySessionRequestGeoMatchParams
from openapi_server.models.geo_match_level import GeoMatchLevel
from openapi_server.models.number_selection_behavior import NumberSelectionBehavior
from openapi_server.models.proxy_session_status import ProxySessionStatus
from openapi_server import util


class ProxySession(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, voice_connector_id: str=None, proxy_session_id: str=None, name: str=None, status: ProxySessionStatus=None, expiry_minutes: int=None, capabilities: List=None, created_timestamp: datetime=None, updated_timestamp: datetime=None, ended_timestamp: datetime=None, participants: List=None, number_selection_behavior: NumberSelectionBehavior=None, geo_match_level: GeoMatchLevel=None, geo_match_params: CreateProxySessionRequestGeoMatchParams=None):
        """ProxySession - a model defined in OpenAPI

        :param voice_connector_id: The voice_connector_id of this ProxySession.
        :param proxy_session_id: The proxy_session_id of this ProxySession.
        :param name: The name of this ProxySession.
        :param status: The status of this ProxySession.
        :param expiry_minutes: The expiry_minutes of this ProxySession.
        :param capabilities: The capabilities of this ProxySession.
        :param created_timestamp: The created_timestamp of this ProxySession.
        :param updated_timestamp: The updated_timestamp of this ProxySession.
        :param ended_timestamp: The ended_timestamp of this ProxySession.
        :param participants: The participants of this ProxySession.
        :param number_selection_behavior: The number_selection_behavior of this ProxySession.
        :param geo_match_level: The geo_match_level of this ProxySession.
        :param geo_match_params: The geo_match_params of this ProxySession.
        """
        self.openapi_types = {
            'voice_connector_id': str,
            'proxy_session_id': str,
            'name': str,
            'status': ProxySessionStatus,
            'expiry_minutes': int,
            'capabilities': List,
            'created_timestamp': datetime,
            'updated_timestamp': datetime,
            'ended_timestamp': datetime,
            'participants': List,
            'number_selection_behavior': NumberSelectionBehavior,
            'geo_match_level': GeoMatchLevel,
            'geo_match_params': CreateProxySessionRequestGeoMatchParams
        }

        self.attribute_map = {
            'voice_connector_id': 'VoiceConnectorId',
            'proxy_session_id': 'ProxySessionId',
            'name': 'Name',
            'status': 'Status',
            'expiry_minutes': 'ExpiryMinutes',
            'capabilities': 'Capabilities',
            'created_timestamp': 'CreatedTimestamp',
            'updated_timestamp': 'UpdatedTimestamp',
            'ended_timestamp': 'EndedTimestamp',
            'participants': 'Participants',
            'number_selection_behavior': 'NumberSelectionBehavior',
            'geo_match_level': 'GeoMatchLevel',
            'geo_match_params': 'GeoMatchParams'
        }

        self._voice_connector_id = voice_connector_id
        self._proxy_session_id = proxy_session_id
        self._name = name
        self._status = status
        self._expiry_minutes = expiry_minutes
        self._capabilities = capabilities
        self._created_timestamp = created_timestamp
        self._updated_timestamp = updated_timestamp
        self._ended_timestamp = ended_timestamp
        self._participants = participants
        self._number_selection_behavior = number_selection_behavior
        self._geo_match_level = geo_match_level
        self._geo_match_params = geo_match_params

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProxySession':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProxySession of this ProxySession.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def voice_connector_id(self):
        """Gets the voice_connector_id of this ProxySession.


        :return: The voice_connector_id of this ProxySession.
        :rtype: str
        """
        return self._voice_connector_id

    @voice_connector_id.setter
    def voice_connector_id(self, voice_connector_id):
        """Sets the voice_connector_id of this ProxySession.


        :param voice_connector_id: The voice_connector_id of this ProxySession.
        :type voice_connector_id: str
        """

        self._voice_connector_id = voice_connector_id

    @property
    def proxy_session_id(self):
        """Gets the proxy_session_id of this ProxySession.


        :return: The proxy_session_id of this ProxySession.
        :rtype: str
        """
        return self._proxy_session_id

    @proxy_session_id.setter
    def proxy_session_id(self, proxy_session_id):
        """Sets the proxy_session_id of this ProxySession.


        :param proxy_session_id: The proxy_session_id of this ProxySession.
        :type proxy_session_id: str
        """

        self._proxy_session_id = proxy_session_id

    @property
    def name(self):
        """Gets the name of this ProxySession.


        :return: The name of this ProxySession.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProxySession.


        :param name: The name of this ProxySession.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this ProxySession.


        :return: The status of this ProxySession.
        :rtype: ProxySessionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ProxySession.


        :param status: The status of this ProxySession.
        :type status: ProxySessionStatus
        """

        self._status = status

    @property
    def expiry_minutes(self):
        """Gets the expiry_minutes of this ProxySession.


        :return: The expiry_minutes of this ProxySession.
        :rtype: int
        """
        return self._expiry_minutes

    @expiry_minutes.setter
    def expiry_minutes(self, expiry_minutes):
        """Sets the expiry_minutes of this ProxySession.


        :param expiry_minutes: The expiry_minutes of this ProxySession.
        :type expiry_minutes: int
        """

        self._expiry_minutes = expiry_minutes

    @property
    def capabilities(self):
        """Gets the capabilities of this ProxySession.


        :return: The capabilities of this ProxySession.
        :rtype: List
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities):
        """Sets the capabilities of this ProxySession.


        :param capabilities: The capabilities of this ProxySession.
        :type capabilities: List
        """

        self._capabilities = capabilities

    @property
    def created_timestamp(self):
        """Gets the created_timestamp of this ProxySession.


        :return: The created_timestamp of this ProxySession.
        :rtype: datetime
        """
        return self._created_timestamp

    @created_timestamp.setter
    def created_timestamp(self, created_timestamp):
        """Sets the created_timestamp of this ProxySession.


        :param created_timestamp: The created_timestamp of this ProxySession.
        :type created_timestamp: datetime
        """

        self._created_timestamp = created_timestamp

    @property
    def updated_timestamp(self):
        """Gets the updated_timestamp of this ProxySession.


        :return: The updated_timestamp of this ProxySession.
        :rtype: datetime
        """
        return self._updated_timestamp

    @updated_timestamp.setter
    def updated_timestamp(self, updated_timestamp):
        """Sets the updated_timestamp of this ProxySession.


        :param updated_timestamp: The updated_timestamp of this ProxySession.
        :type updated_timestamp: datetime
        """

        self._updated_timestamp = updated_timestamp

    @property
    def ended_timestamp(self):
        """Gets the ended_timestamp of this ProxySession.


        :return: The ended_timestamp of this ProxySession.
        :rtype: datetime
        """
        return self._ended_timestamp

    @ended_timestamp.setter
    def ended_timestamp(self, ended_timestamp):
        """Sets the ended_timestamp of this ProxySession.


        :param ended_timestamp: The ended_timestamp of this ProxySession.
        :type ended_timestamp: datetime
        """

        self._ended_timestamp = ended_timestamp

    @property
    def participants(self):
        """Gets the participants of this ProxySession.


        :return: The participants of this ProxySession.
        :rtype: List
        """
        return self._participants

    @participants.setter
    def participants(self, participants):
        """Sets the participants of this ProxySession.


        :param participants: The participants of this ProxySession.
        :type participants: List
        """

        self._participants = participants

    @property
    def number_selection_behavior(self):
        """Gets the number_selection_behavior of this ProxySession.


        :return: The number_selection_behavior of this ProxySession.
        :rtype: NumberSelectionBehavior
        """
        return self._number_selection_behavior

    @number_selection_behavior.setter
    def number_selection_behavior(self, number_selection_behavior):
        """Sets the number_selection_behavior of this ProxySession.


        :param number_selection_behavior: The number_selection_behavior of this ProxySession.
        :type number_selection_behavior: NumberSelectionBehavior
        """

        self._number_selection_behavior = number_selection_behavior

    @property
    def geo_match_level(self):
        """Gets the geo_match_level of this ProxySession.


        :return: The geo_match_level of this ProxySession.
        :rtype: GeoMatchLevel
        """
        return self._geo_match_level

    @geo_match_level.setter
    def geo_match_level(self, geo_match_level):
        """Sets the geo_match_level of this ProxySession.


        :param geo_match_level: The geo_match_level of this ProxySession.
        :type geo_match_level: GeoMatchLevel
        """

        self._geo_match_level = geo_match_level

    @property
    def geo_match_params(self):
        """Gets the geo_match_params of this ProxySession.


        :return: The geo_match_params of this ProxySession.
        :rtype: CreateProxySessionRequestGeoMatchParams
        """
        return self._geo_match_params

    @geo_match_params.setter
    def geo_match_params(self, geo_match_params):
        """Sets the geo_match_params of this ProxySession.


        :param geo_match_params: The geo_match_params of this ProxySession.
        :type geo_match_params: CreateProxySessionRequestGeoMatchParams
        """

        self._geo_match_params = geo_match_params
