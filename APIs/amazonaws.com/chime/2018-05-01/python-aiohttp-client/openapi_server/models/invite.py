# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.email_status import EmailStatus
from openapi_server.models.invite_status import InviteStatus
from openapi_server import util


class Invite(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invite_id: str=None, status: InviteStatus=None, email_address: str=None, email_status: EmailStatus=None):
        """Invite - a model defined in OpenAPI

        :param invite_id: The invite_id of this Invite.
        :param status: The status of this Invite.
        :param email_address: The email_address of this Invite.
        :param email_status: The email_status of this Invite.
        """
        self.openapi_types = {
            'invite_id': str,
            'status': InviteStatus,
            'email_address': str,
            'email_status': EmailStatus
        }

        self.attribute_map = {
            'invite_id': 'InviteId',
            'status': 'Status',
            'email_address': 'EmailAddress',
            'email_status': 'EmailStatus'
        }

        self._invite_id = invite_id
        self._status = status
        self._email_address = email_address
        self._email_status = email_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Invite':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Invite of this Invite.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invite_id(self):
        """Gets the invite_id of this Invite.


        :return: The invite_id of this Invite.
        :rtype: str
        """
        return self._invite_id

    @invite_id.setter
    def invite_id(self, invite_id):
        """Sets the invite_id of this Invite.


        :param invite_id: The invite_id of this Invite.
        :type invite_id: str
        """

        self._invite_id = invite_id

    @property
    def status(self):
        """Gets the status of this Invite.


        :return: The status of this Invite.
        :rtype: InviteStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Invite.


        :param status: The status of this Invite.
        :type status: InviteStatus
        """

        self._status = status

    @property
    def email_address(self):
        """Gets the email_address of this Invite.


        :return: The email_address of this Invite.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this Invite.


        :param email_address: The email_address of this Invite.
        :type email_address: str
        """

        self._email_address = email_address

    @property
    def email_status(self):
        """Gets the email_status of this Invite.


        :return: The email_status of this Invite.
        :rtype: EmailStatus
        """
        return self._email_status

    @email_status.setter
    def email_status(self, email_status):
        """Sets the email_status of this Invite.


        :param email_status: The email_status of this Invite.
        :type email_status: EmailStatus
        """

        self._email_status = email_status
