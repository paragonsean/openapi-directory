# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.license import License
from openapi_server.models.update_user_request_item_alexa_for_business_metadata import UpdateUserRequestItemAlexaForBusinessMetadata
from openapi_server.models.user_type import UserType
from openapi_server import util


class UpdateUserRequestItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_id: str=None, license_type: License=None, user_type: UserType=None, alexa_for_business_metadata: UpdateUserRequestItemAlexaForBusinessMetadata=None):
        """UpdateUserRequestItem - a model defined in OpenAPI

        :param user_id: The user_id of this UpdateUserRequestItem.
        :param license_type: The license_type of this UpdateUserRequestItem.
        :param user_type: The user_type of this UpdateUserRequestItem.
        :param alexa_for_business_metadata: The alexa_for_business_metadata of this UpdateUserRequestItem.
        """
        self.openapi_types = {
            'user_id': str,
            'license_type': License,
            'user_type': UserType,
            'alexa_for_business_metadata': UpdateUserRequestItemAlexaForBusinessMetadata
        }

        self.attribute_map = {
            'user_id': 'UserId',
            'license_type': 'LicenseType',
            'user_type': 'UserType',
            'alexa_for_business_metadata': 'AlexaForBusinessMetadata'
        }

        self._user_id = user_id
        self._license_type = license_type
        self._user_type = user_type
        self._alexa_for_business_metadata = alexa_for_business_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateUserRequestItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateUserRequestItem of this UpdateUserRequestItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_id(self):
        """Gets the user_id of this UpdateUserRequestItem.


        :return: The user_id of this UpdateUserRequestItem.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this UpdateUserRequestItem.


        :param user_id: The user_id of this UpdateUserRequestItem.
        :type user_id: str
        """
        if user_id is None:
            raise ValueError("Invalid value for `user_id`, must not be `None`")

        self._user_id = user_id

    @property
    def license_type(self):
        """Gets the license_type of this UpdateUserRequestItem.


        :return: The license_type of this UpdateUserRequestItem.
        :rtype: License
        """
        return self._license_type

    @license_type.setter
    def license_type(self, license_type):
        """Sets the license_type of this UpdateUserRequestItem.


        :param license_type: The license_type of this UpdateUserRequestItem.
        :type license_type: License
        """

        self._license_type = license_type

    @property
    def user_type(self):
        """Gets the user_type of this UpdateUserRequestItem.


        :return: The user_type of this UpdateUserRequestItem.
        :rtype: UserType
        """
        return self._user_type

    @user_type.setter
    def user_type(self, user_type):
        """Sets the user_type of this UpdateUserRequestItem.


        :param user_type: The user_type of this UpdateUserRequestItem.
        :type user_type: UserType
        """

        self._user_type = user_type

    @property
    def alexa_for_business_metadata(self):
        """Gets the alexa_for_business_metadata of this UpdateUserRequestItem.


        :return: The alexa_for_business_metadata of this UpdateUserRequestItem.
        :rtype: UpdateUserRequestItemAlexaForBusinessMetadata
        """
        return self._alexa_for_business_metadata

    @alexa_for_business_metadata.setter
    def alexa_for_business_metadata(self, alexa_for_business_metadata):
        """Sets the alexa_for_business_metadata of this UpdateUserRequestItem.


        :param alexa_for_business_metadata: The alexa_for_business_metadata of this UpdateUserRequestItem.
        :type alexa_for_business_metadata: UpdateUserRequestItemAlexaForBusinessMetadata
        """

        self._alexa_for_business_metadata = alexa_for_business_metadata
