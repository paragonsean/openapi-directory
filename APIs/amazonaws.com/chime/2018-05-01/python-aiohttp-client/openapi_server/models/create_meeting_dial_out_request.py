# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class CreateMeetingDialOutRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, from_phone_number: str=None, to_phone_number: str=None, join_token: str=None):
        """CreateMeetingDialOutRequest - a model defined in OpenAPI

        :param from_phone_number: The from_phone_number of this CreateMeetingDialOutRequest.
        :param to_phone_number: The to_phone_number of this CreateMeetingDialOutRequest.
        :param join_token: The join_token of this CreateMeetingDialOutRequest.
        """
        self.openapi_types = {
            'from_phone_number': str,
            'to_phone_number': str,
            'join_token': str
        }

        self.attribute_map = {
            'from_phone_number': 'FromPhoneNumber',
            'to_phone_number': 'ToPhoneNumber',
            'join_token': 'JoinToken'
        }

        self._from_phone_number = from_phone_number
        self._to_phone_number = to_phone_number
        self._join_token = join_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateMeetingDialOutRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateMeetingDialOut_request of this CreateMeetingDialOutRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def from_phone_number(self):
        """Gets the from_phone_number of this CreateMeetingDialOutRequest.

        Phone number used as the caller ID when the remote party receives a call.

        :return: The from_phone_number of this CreateMeetingDialOutRequest.
        :rtype: str
        """
        return self._from_phone_number

    @from_phone_number.setter
    def from_phone_number(self, from_phone_number):
        """Sets the from_phone_number of this CreateMeetingDialOutRequest.

        Phone number used as the caller ID when the remote party receives a call.

        :param from_phone_number: The from_phone_number of this CreateMeetingDialOutRequest.
        :type from_phone_number: str
        """
        if from_phone_number is None:
            raise ValueError("Invalid value for `from_phone_number`, must not be `None`")
        if from_phone_number is not None and not re.search(r'^\+?[1-9]\d{1,14}$', from_phone_number):
            raise ValueError("Invalid value for `from_phone_number`, must be a follow pattern or equal to `/^\+?[1-9]\d{1,14}$/`")

        self._from_phone_number = from_phone_number

    @property
    def to_phone_number(self):
        """Gets the to_phone_number of this CreateMeetingDialOutRequest.

        Phone number called when inviting someone to a meeting.

        :return: The to_phone_number of this CreateMeetingDialOutRequest.
        :rtype: str
        """
        return self._to_phone_number

    @to_phone_number.setter
    def to_phone_number(self, to_phone_number):
        """Sets the to_phone_number of this CreateMeetingDialOutRequest.

        Phone number called when inviting someone to a meeting.

        :param to_phone_number: The to_phone_number of this CreateMeetingDialOutRequest.
        :type to_phone_number: str
        """
        if to_phone_number is None:
            raise ValueError("Invalid value for `to_phone_number`, must not be `None`")
        if to_phone_number is not None and not re.search(r'^\+?[1-9]\d{1,14}$', to_phone_number):
            raise ValueError("Invalid value for `to_phone_number`, must be a follow pattern or equal to `/^\+?[1-9]\d{1,14}$/`")

        self._to_phone_number = to_phone_number

    @property
    def join_token(self):
        """Gets the join_token of this CreateMeetingDialOutRequest.

        Token used by the Amazon Chime SDK attendee. Call the <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_CreateAttendee.html\">CreateAttendee</a> action to get a join token.

        :return: The join_token of this CreateMeetingDialOutRequest.
        :rtype: str
        """
        return self._join_token

    @join_token.setter
    def join_token(self, join_token):
        """Sets the join_token of this CreateMeetingDialOutRequest.

        Token used by the Amazon Chime SDK attendee. Call the <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_CreateAttendee.html\">CreateAttendee</a> action to get a join token.

        :param join_token: The join_token of this CreateMeetingDialOutRequest.
        :type join_token: str
        """
        if join_token is None:
            raise ValueError("Invalid value for `join_token`, must not be `None`")
        if join_token is not None and len(join_token) > 2048:
            raise ValueError("Invalid value for `join_token`, length must be less than or equal to `2048`")
        if join_token is not None and len(join_token) < 2:
            raise ValueError("Invalid value for `join_token`, length must be greater than or equal to `2`")
        if join_token is not None and not re.search(r'^[a-zA-Z0-9+\/]+$', join_token):
            raise ValueError("Invalid value for `join_token`, must be a follow pattern or equal to `/^[a-zA-Z0-9+\/]+$/`")

        self._join_token = join_token
