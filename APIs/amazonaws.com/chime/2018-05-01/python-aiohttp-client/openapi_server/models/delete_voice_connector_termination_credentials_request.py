# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteVoiceConnectorTerminationCredentialsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, usernames: List[str]=None):
        """DeleteVoiceConnectorTerminationCredentialsRequest - a model defined in OpenAPI

        :param usernames: The usernames of this DeleteVoiceConnectorTerminationCredentialsRequest.
        """
        self.openapi_types = {
            'usernames': List[str]
        }

        self.attribute_map = {
            'usernames': 'Usernames'
        }

        self._usernames = usernames

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteVoiceConnectorTerminationCredentialsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteVoiceConnectorTerminationCredentials_request of this DeleteVoiceConnectorTerminationCredentialsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def usernames(self):
        """Gets the usernames of this DeleteVoiceConnectorTerminationCredentialsRequest.

        The RFC2617 compliant username associated with the SIP credentials, in US-ASCII format.

        :return: The usernames of this DeleteVoiceConnectorTerminationCredentialsRequest.
        :rtype: List[str]
        """
        return self._usernames

    @usernames.setter
    def usernames(self, usernames):
        """Sets the usernames of this DeleteVoiceConnectorTerminationCredentialsRequest.

        The RFC2617 compliant username associated with the SIP credentials, in US-ASCII format.

        :param usernames: The usernames of this DeleteVoiceConnectorTerminationCredentialsRequest.
        :type usernames: List[str]
        """
        if usernames is None:
            raise ValueError("Invalid value for `usernames`, must not be `None`")

        self._usernames = usernames
