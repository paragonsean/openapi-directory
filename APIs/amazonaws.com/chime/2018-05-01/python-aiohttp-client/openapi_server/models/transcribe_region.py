# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TranscribeRegion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    US_MINUS_EAST_MINUS_2 = 'us-east-2'
    US_MINUS_EAST_MINUS_1 = 'us-east-1'
    US_MINUS_WEST_MINUS_2 = 'us-west-2'
    AP_MINUS_NORTHEAST_MINUS_2 = 'ap-northeast-2'
    AP_MINUS_SOUTHEAST_MINUS_2 = 'ap-southeast-2'
    AP_MINUS_NORTHEAST_MINUS_1 = 'ap-northeast-1'
    CA_MINUS_CENTRAL_MINUS_1 = 'ca-central-1'
    EU_MINUS_CENTRAL_MINUS_1 = 'eu-central-1'
    EU_MINUS_WEST_MINUS_1 = 'eu-west-1'
    EU_MINUS_WEST_MINUS_2 = 'eu-west-2'
    SA_MINUS_EAST_MINUS_1 = 'sa-east-1'
    AUTO = 'auto'

    def __init__(self):
        """TranscribeRegion - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TranscribeRegion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TranscribeRegion of this TranscribeRegion.
        """
        return util.deserialize_model(dikt, cls)
