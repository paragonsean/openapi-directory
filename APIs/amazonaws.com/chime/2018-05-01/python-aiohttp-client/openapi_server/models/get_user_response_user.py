# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.invite_status import InviteStatus
from openapi_server.models.license import License
from openapi_server.models.registration_status import RegistrationStatus
from openapi_server.models.update_user_request_item_alexa_for_business_metadata import UpdateUserRequestItemAlexaForBusinessMetadata
from openapi_server.models.user_type import UserType
from openapi_server import util


class GetUserResponseUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_id: str=None, account_id: str=None, primary_email: str=None, primary_provisioned_number: str=None, display_name: str=None, license_type: License=None, user_type: UserType=None, user_registration_status: RegistrationStatus=None, user_invitation_status: InviteStatus=None, registered_on: datetime=None, invited_on: datetime=None, alexa_for_business_metadata: UpdateUserRequestItemAlexaForBusinessMetadata=None, personal_pin: str=None):
        """GetUserResponseUser - a model defined in OpenAPI

        :param user_id: The user_id of this GetUserResponseUser.
        :param account_id: The account_id of this GetUserResponseUser.
        :param primary_email: The primary_email of this GetUserResponseUser.
        :param primary_provisioned_number: The primary_provisioned_number of this GetUserResponseUser.
        :param display_name: The display_name of this GetUserResponseUser.
        :param license_type: The license_type of this GetUserResponseUser.
        :param user_type: The user_type of this GetUserResponseUser.
        :param user_registration_status: The user_registration_status of this GetUserResponseUser.
        :param user_invitation_status: The user_invitation_status of this GetUserResponseUser.
        :param registered_on: The registered_on of this GetUserResponseUser.
        :param invited_on: The invited_on of this GetUserResponseUser.
        :param alexa_for_business_metadata: The alexa_for_business_metadata of this GetUserResponseUser.
        :param personal_pin: The personal_pin of this GetUserResponseUser.
        """
        self.openapi_types = {
            'user_id': str,
            'account_id': str,
            'primary_email': str,
            'primary_provisioned_number': str,
            'display_name': str,
            'license_type': License,
            'user_type': UserType,
            'user_registration_status': RegistrationStatus,
            'user_invitation_status': InviteStatus,
            'registered_on': datetime,
            'invited_on': datetime,
            'alexa_for_business_metadata': UpdateUserRequestItemAlexaForBusinessMetadata,
            'personal_pin': str
        }

        self.attribute_map = {
            'user_id': 'UserId',
            'account_id': 'AccountId',
            'primary_email': 'PrimaryEmail',
            'primary_provisioned_number': 'PrimaryProvisionedNumber',
            'display_name': 'DisplayName',
            'license_type': 'LicenseType',
            'user_type': 'UserType',
            'user_registration_status': 'UserRegistrationStatus',
            'user_invitation_status': 'UserInvitationStatus',
            'registered_on': 'RegisteredOn',
            'invited_on': 'InvitedOn',
            'alexa_for_business_metadata': 'AlexaForBusinessMetadata',
            'personal_pin': 'PersonalPIN'
        }

        self._user_id = user_id
        self._account_id = account_id
        self._primary_email = primary_email
        self._primary_provisioned_number = primary_provisioned_number
        self._display_name = display_name
        self._license_type = license_type
        self._user_type = user_type
        self._user_registration_status = user_registration_status
        self._user_invitation_status = user_invitation_status
        self._registered_on = registered_on
        self._invited_on = invited_on
        self._alexa_for_business_metadata = alexa_for_business_metadata
        self._personal_pin = personal_pin

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetUserResponseUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetUserResponse_User of this GetUserResponseUser.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_id(self):
        """Gets the user_id of this GetUserResponseUser.


        :return: The user_id of this GetUserResponseUser.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this GetUserResponseUser.


        :param user_id: The user_id of this GetUserResponseUser.
        :type user_id: str
        """
        if user_id is None:
            raise ValueError("Invalid value for `user_id`, must not be `None`")

        self._user_id = user_id

    @property
    def account_id(self):
        """Gets the account_id of this GetUserResponseUser.


        :return: The account_id of this GetUserResponseUser.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this GetUserResponseUser.


        :param account_id: The account_id of this GetUserResponseUser.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def primary_email(self):
        """Gets the primary_email of this GetUserResponseUser.


        :return: The primary_email of this GetUserResponseUser.
        :rtype: str
        """
        return self._primary_email

    @primary_email.setter
    def primary_email(self, primary_email):
        """Sets the primary_email of this GetUserResponseUser.


        :param primary_email: The primary_email of this GetUserResponseUser.
        :type primary_email: str
        """

        self._primary_email = primary_email

    @property
    def primary_provisioned_number(self):
        """Gets the primary_provisioned_number of this GetUserResponseUser.


        :return: The primary_provisioned_number of this GetUserResponseUser.
        :rtype: str
        """
        return self._primary_provisioned_number

    @primary_provisioned_number.setter
    def primary_provisioned_number(self, primary_provisioned_number):
        """Sets the primary_provisioned_number of this GetUserResponseUser.


        :param primary_provisioned_number: The primary_provisioned_number of this GetUserResponseUser.
        :type primary_provisioned_number: str
        """

        self._primary_provisioned_number = primary_provisioned_number

    @property
    def display_name(self):
        """Gets the display_name of this GetUserResponseUser.


        :return: The display_name of this GetUserResponseUser.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GetUserResponseUser.


        :param display_name: The display_name of this GetUserResponseUser.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def license_type(self):
        """Gets the license_type of this GetUserResponseUser.


        :return: The license_type of this GetUserResponseUser.
        :rtype: License
        """
        return self._license_type

    @license_type.setter
    def license_type(self, license_type):
        """Sets the license_type of this GetUserResponseUser.


        :param license_type: The license_type of this GetUserResponseUser.
        :type license_type: License
        """

        self._license_type = license_type

    @property
    def user_type(self):
        """Gets the user_type of this GetUserResponseUser.


        :return: The user_type of this GetUserResponseUser.
        :rtype: UserType
        """
        return self._user_type

    @user_type.setter
    def user_type(self, user_type):
        """Sets the user_type of this GetUserResponseUser.


        :param user_type: The user_type of this GetUserResponseUser.
        :type user_type: UserType
        """

        self._user_type = user_type

    @property
    def user_registration_status(self):
        """Gets the user_registration_status of this GetUserResponseUser.


        :return: The user_registration_status of this GetUserResponseUser.
        :rtype: RegistrationStatus
        """
        return self._user_registration_status

    @user_registration_status.setter
    def user_registration_status(self, user_registration_status):
        """Sets the user_registration_status of this GetUserResponseUser.


        :param user_registration_status: The user_registration_status of this GetUserResponseUser.
        :type user_registration_status: RegistrationStatus
        """

        self._user_registration_status = user_registration_status

    @property
    def user_invitation_status(self):
        """Gets the user_invitation_status of this GetUserResponseUser.


        :return: The user_invitation_status of this GetUserResponseUser.
        :rtype: InviteStatus
        """
        return self._user_invitation_status

    @user_invitation_status.setter
    def user_invitation_status(self, user_invitation_status):
        """Sets the user_invitation_status of this GetUserResponseUser.


        :param user_invitation_status: The user_invitation_status of this GetUserResponseUser.
        :type user_invitation_status: InviteStatus
        """

        self._user_invitation_status = user_invitation_status

    @property
    def registered_on(self):
        """Gets the registered_on of this GetUserResponseUser.


        :return: The registered_on of this GetUserResponseUser.
        :rtype: datetime
        """
        return self._registered_on

    @registered_on.setter
    def registered_on(self, registered_on):
        """Sets the registered_on of this GetUserResponseUser.


        :param registered_on: The registered_on of this GetUserResponseUser.
        :type registered_on: datetime
        """

        self._registered_on = registered_on

    @property
    def invited_on(self):
        """Gets the invited_on of this GetUserResponseUser.


        :return: The invited_on of this GetUserResponseUser.
        :rtype: datetime
        """
        return self._invited_on

    @invited_on.setter
    def invited_on(self, invited_on):
        """Sets the invited_on of this GetUserResponseUser.


        :param invited_on: The invited_on of this GetUserResponseUser.
        :type invited_on: datetime
        """

        self._invited_on = invited_on

    @property
    def alexa_for_business_metadata(self):
        """Gets the alexa_for_business_metadata of this GetUserResponseUser.


        :return: The alexa_for_business_metadata of this GetUserResponseUser.
        :rtype: UpdateUserRequestItemAlexaForBusinessMetadata
        """
        return self._alexa_for_business_metadata

    @alexa_for_business_metadata.setter
    def alexa_for_business_metadata(self, alexa_for_business_metadata):
        """Sets the alexa_for_business_metadata of this GetUserResponseUser.


        :param alexa_for_business_metadata: The alexa_for_business_metadata of this GetUserResponseUser.
        :type alexa_for_business_metadata: UpdateUserRequestItemAlexaForBusinessMetadata
        """

        self._alexa_for_business_metadata = alexa_for_business_metadata

    @property
    def personal_pin(self):
        """Gets the personal_pin of this GetUserResponseUser.


        :return: The personal_pin of this GetUserResponseUser.
        :rtype: str
        """
        return self._personal_pin

    @personal_pin.setter
    def personal_pin(self, personal_pin):
        """Sets the personal_pin of this GetUserResponseUser.


        :param personal_pin: The personal_pin of this GetUserResponseUser.
        :type personal_pin: str
        """

        self._personal_pin = personal_pin
