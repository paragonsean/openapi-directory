# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_instance_streaming_configuration import AppInstanceStreamingConfiguration
from openapi_server import util


class PutAppInstanceStreamingConfigurationsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_instance_streaming_configurations: List[AppInstanceStreamingConfiguration]=None):
        """PutAppInstanceStreamingConfigurationsRequest - a model defined in OpenAPI

        :param app_instance_streaming_configurations: The app_instance_streaming_configurations of this PutAppInstanceStreamingConfigurationsRequest.
        """
        self.openapi_types = {
            'app_instance_streaming_configurations': List[AppInstanceStreamingConfiguration]
        }

        self.attribute_map = {
            'app_instance_streaming_configurations': 'AppInstanceStreamingConfigurations'
        }

        self._app_instance_streaming_configurations = app_instance_streaming_configurations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutAppInstanceStreamingConfigurationsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutAppInstanceStreamingConfigurations_request of this PutAppInstanceStreamingConfigurationsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_instance_streaming_configurations(self):
        """Gets the app_instance_streaming_configurations of this PutAppInstanceStreamingConfigurationsRequest.

        The streaming configurations set for an <code>AppInstance</code>.

        :return: The app_instance_streaming_configurations of this PutAppInstanceStreamingConfigurationsRequest.
        :rtype: List[AppInstanceStreamingConfiguration]
        """
        return self._app_instance_streaming_configurations

    @app_instance_streaming_configurations.setter
    def app_instance_streaming_configurations(self, app_instance_streaming_configurations):
        """Sets the app_instance_streaming_configurations of this PutAppInstanceStreamingConfigurationsRequest.

        The streaming configurations set for an <code>AppInstance</code>.

        :param app_instance_streaming_configurations: The app_instance_streaming_configurations of this PutAppInstanceStreamingConfigurationsRequest.
        :type app_instance_streaming_configurations: List[AppInstanceStreamingConfiguration]
        """
        if app_instance_streaming_configurations is None:
            raise ValueError("Invalid value for `app_instance_streaming_configurations`, must not be `None`")
        if app_instance_streaming_configurations is not None and len(app_instance_streaming_configurations) > 2:
            raise ValueError("Invalid value for `app_instance_streaming_configurations`, number of items must be less than or equal to `2`")
        if app_instance_streaming_configurations is not None and len(app_instance_streaming_configurations) < 1:
            raise ValueError("Invalid value for `app_instance_streaming_configurations`, number of items must be greater than or equal to `1`")

        self._app_instance_streaming_configurations = app_instance_streaming_configurations
