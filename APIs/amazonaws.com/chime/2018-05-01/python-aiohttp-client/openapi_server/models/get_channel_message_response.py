# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_channel_message_response_channel_message import GetChannelMessageResponseChannelMessage
from openapi_server import util


class GetChannelMessageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_message: GetChannelMessageResponseChannelMessage=None):
        """GetChannelMessageResponse - a model defined in OpenAPI

        :param channel_message: The channel_message of this GetChannelMessageResponse.
        """
        self.openapi_types = {
            'channel_message': GetChannelMessageResponseChannelMessage
        }

        self.attribute_map = {
            'channel_message': 'ChannelMessage'
        }

        self._channel_message = channel_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetChannelMessageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetChannelMessageResponse of this GetChannelMessageResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_message(self):
        """Gets the channel_message of this GetChannelMessageResponse.


        :return: The channel_message of this GetChannelMessageResponse.
        :rtype: GetChannelMessageResponseChannelMessage
        """
        return self._channel_message

    @channel_message.setter
    def channel_message(self, channel_message):
        """Sets the channel_message of this GetChannelMessageResponse.


        :param channel_message: The channel_message of this GetChannelMessageResponse.
        :type channel_message: GetChannelMessageResponseChannelMessage
        """

        self._channel_message = channel_message
