# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class CreateBotRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, domain: str=None):
        """CreateBotRequest - a model defined in OpenAPI

        :param display_name: The display_name of this CreateBotRequest.
        :param domain: The domain of this CreateBotRequest.
        """
        self.openapi_types = {
            'display_name': str,
            'domain': str
        }

        self.attribute_map = {
            'display_name': 'DisplayName',
            'domain': 'Domain'
        }

        self._display_name = display_name
        self._domain = domain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateBotRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateBot_request of this CreateBotRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this CreateBotRequest.

        The bot display name.

        :return: The display_name of this CreateBotRequest.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CreateBotRequest.

        The bot display name.

        :param display_name: The display_name of this CreateBotRequest.
        :type display_name: str
        """
        if display_name is None:
            raise ValueError("Invalid value for `display_name`, must not be `None`")

        self._display_name = display_name

    @property
    def domain(self):
        """Gets the domain of this CreateBotRequest.

        The domain of the Amazon Chime Enterprise account.

        :return: The domain of this CreateBotRequest.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this CreateBotRequest.

        The domain of the Amazon Chime Enterprise account.

        :param domain: The domain of this CreateBotRequest.
        :type domain: str
        """
        if domain is not None and not re.search(r'.*\S.*', domain):
            raise ValueError("Invalid value for `domain`, must be a follow pattern or equal to `/.*\S.*/`")

        self._domain = domain
