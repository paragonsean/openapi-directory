# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateUserRequestAlexaForBusinessMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_alexa_for_business_enabled: bool=None, alexa_for_business_room_arn: str=None):
        """UpdateUserRequestAlexaForBusinessMetadata - a model defined in OpenAPI

        :param is_alexa_for_business_enabled: The is_alexa_for_business_enabled of this UpdateUserRequestAlexaForBusinessMetadata.
        :param alexa_for_business_room_arn: The alexa_for_business_room_arn of this UpdateUserRequestAlexaForBusinessMetadata.
        """
        self.openapi_types = {
            'is_alexa_for_business_enabled': bool,
            'alexa_for_business_room_arn': str
        }

        self.attribute_map = {
            'is_alexa_for_business_enabled': 'IsAlexaForBusinessEnabled',
            'alexa_for_business_room_arn': 'AlexaForBusinessRoomArn'
        }

        self._is_alexa_for_business_enabled = is_alexa_for_business_enabled
        self._alexa_for_business_room_arn = alexa_for_business_room_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateUserRequestAlexaForBusinessMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateUser_request_AlexaForBusinessMetadata of this UpdateUserRequestAlexaForBusinessMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_alexa_for_business_enabled(self):
        """Gets the is_alexa_for_business_enabled of this UpdateUserRequestAlexaForBusinessMetadata.


        :return: The is_alexa_for_business_enabled of this UpdateUserRequestAlexaForBusinessMetadata.
        :rtype: bool
        """
        return self._is_alexa_for_business_enabled

    @is_alexa_for_business_enabled.setter
    def is_alexa_for_business_enabled(self, is_alexa_for_business_enabled):
        """Sets the is_alexa_for_business_enabled of this UpdateUserRequestAlexaForBusinessMetadata.


        :param is_alexa_for_business_enabled: The is_alexa_for_business_enabled of this UpdateUserRequestAlexaForBusinessMetadata.
        :type is_alexa_for_business_enabled: bool
        """

        self._is_alexa_for_business_enabled = is_alexa_for_business_enabled

    @property
    def alexa_for_business_room_arn(self):
        """Gets the alexa_for_business_room_arn of this UpdateUserRequestAlexaForBusinessMetadata.


        :return: The alexa_for_business_room_arn of this UpdateUserRequestAlexaForBusinessMetadata.
        :rtype: str
        """
        return self._alexa_for_business_room_arn

    @alexa_for_business_room_arn.setter
    def alexa_for_business_room_arn(self, alexa_for_business_room_arn):
        """Sets the alexa_for_business_room_arn of this UpdateUserRequestAlexaForBusinessMetadata.


        :param alexa_for_business_room_arn: The alexa_for_business_room_arn of this UpdateUserRequestAlexaForBusinessMetadata.
        :type alexa_for_business_room_arn: str
        """

        self._alexa_for_business_room_arn = alexa_for_business_room_arn
