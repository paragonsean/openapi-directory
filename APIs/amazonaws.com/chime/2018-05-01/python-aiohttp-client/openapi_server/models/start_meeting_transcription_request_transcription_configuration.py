# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.start_meeting_transcription_request_transcription_configuration_engine_transcribe_medical_settings import StartMeetingTranscriptionRequestTranscriptionConfigurationEngineTranscribeMedicalSettings
from openapi_server.models.start_meeting_transcription_request_transcription_configuration_engine_transcribe_settings import StartMeetingTranscriptionRequestTranscriptionConfigurationEngineTranscribeSettings
from openapi_server import util


class StartMeetingTranscriptionRequestTranscriptionConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, engine_transcribe_settings: StartMeetingTranscriptionRequestTranscriptionConfigurationEngineTranscribeSettings=None, engine_transcribe_medical_settings: StartMeetingTranscriptionRequestTranscriptionConfigurationEngineTranscribeMedicalSettings=None):
        """StartMeetingTranscriptionRequestTranscriptionConfiguration - a model defined in OpenAPI

        :param engine_transcribe_settings: The engine_transcribe_settings of this StartMeetingTranscriptionRequestTranscriptionConfiguration.
        :param engine_transcribe_medical_settings: The engine_transcribe_medical_settings of this StartMeetingTranscriptionRequestTranscriptionConfiguration.
        """
        self.openapi_types = {
            'engine_transcribe_settings': StartMeetingTranscriptionRequestTranscriptionConfigurationEngineTranscribeSettings,
            'engine_transcribe_medical_settings': StartMeetingTranscriptionRequestTranscriptionConfigurationEngineTranscribeMedicalSettings
        }

        self.attribute_map = {
            'engine_transcribe_settings': 'EngineTranscribeSettings',
            'engine_transcribe_medical_settings': 'EngineTranscribeMedicalSettings'
        }

        self._engine_transcribe_settings = engine_transcribe_settings
        self._engine_transcribe_medical_settings = engine_transcribe_medical_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartMeetingTranscriptionRequestTranscriptionConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartMeetingTranscriptionRequest_TranscriptionConfiguration of this StartMeetingTranscriptionRequestTranscriptionConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def engine_transcribe_settings(self):
        """Gets the engine_transcribe_settings of this StartMeetingTranscriptionRequestTranscriptionConfiguration.


        :return: The engine_transcribe_settings of this StartMeetingTranscriptionRequestTranscriptionConfiguration.
        :rtype: StartMeetingTranscriptionRequestTranscriptionConfigurationEngineTranscribeSettings
        """
        return self._engine_transcribe_settings

    @engine_transcribe_settings.setter
    def engine_transcribe_settings(self, engine_transcribe_settings):
        """Sets the engine_transcribe_settings of this StartMeetingTranscriptionRequestTranscriptionConfiguration.


        :param engine_transcribe_settings: The engine_transcribe_settings of this StartMeetingTranscriptionRequestTranscriptionConfiguration.
        :type engine_transcribe_settings: StartMeetingTranscriptionRequestTranscriptionConfigurationEngineTranscribeSettings
        """

        self._engine_transcribe_settings = engine_transcribe_settings

    @property
    def engine_transcribe_medical_settings(self):
        """Gets the engine_transcribe_medical_settings of this StartMeetingTranscriptionRequestTranscriptionConfiguration.


        :return: The engine_transcribe_medical_settings of this StartMeetingTranscriptionRequestTranscriptionConfiguration.
        :rtype: StartMeetingTranscriptionRequestTranscriptionConfigurationEngineTranscribeMedicalSettings
        """
        return self._engine_transcribe_medical_settings

    @engine_transcribe_medical_settings.setter
    def engine_transcribe_medical_settings(self, engine_transcribe_medical_settings):
        """Sets the engine_transcribe_medical_settings of this StartMeetingTranscriptionRequestTranscriptionConfiguration.


        :param engine_transcribe_medical_settings: The engine_transcribe_medical_settings of this StartMeetingTranscriptionRequestTranscriptionConfiguration.
        :type engine_transcribe_medical_settings: StartMeetingTranscriptionRequestTranscriptionConfigurationEngineTranscribeMedicalSettings
        """

        self._engine_transcribe_medical_settings = engine_transcribe_medical_settings
