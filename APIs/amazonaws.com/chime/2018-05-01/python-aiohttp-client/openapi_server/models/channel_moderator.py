# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel_moderator_created_by import ChannelModeratorCreatedBy
from openapi_server.models.channel_moderator_moderator import ChannelModeratorModerator
from openapi_server import util


class ChannelModerator(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, moderator: ChannelModeratorModerator=None, channel_arn: str=None, created_timestamp: datetime=None, created_by: ChannelModeratorCreatedBy=None):
        """ChannelModerator - a model defined in OpenAPI

        :param moderator: The moderator of this ChannelModerator.
        :param channel_arn: The channel_arn of this ChannelModerator.
        :param created_timestamp: The created_timestamp of this ChannelModerator.
        :param created_by: The created_by of this ChannelModerator.
        """
        self.openapi_types = {
            'moderator': ChannelModeratorModerator,
            'channel_arn': str,
            'created_timestamp': datetime,
            'created_by': ChannelModeratorCreatedBy
        }

        self.attribute_map = {
            'moderator': 'Moderator',
            'channel_arn': 'ChannelArn',
            'created_timestamp': 'CreatedTimestamp',
            'created_by': 'CreatedBy'
        }

        self._moderator = moderator
        self._channel_arn = channel_arn
        self._created_timestamp = created_timestamp
        self._created_by = created_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelModerator':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelModerator of this ChannelModerator.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def moderator(self):
        """Gets the moderator of this ChannelModerator.


        :return: The moderator of this ChannelModerator.
        :rtype: ChannelModeratorModerator
        """
        return self._moderator

    @moderator.setter
    def moderator(self, moderator):
        """Sets the moderator of this ChannelModerator.


        :param moderator: The moderator of this ChannelModerator.
        :type moderator: ChannelModeratorModerator
        """

        self._moderator = moderator

    @property
    def channel_arn(self):
        """Gets the channel_arn of this ChannelModerator.


        :return: The channel_arn of this ChannelModerator.
        :rtype: str
        """
        return self._channel_arn

    @channel_arn.setter
    def channel_arn(self, channel_arn):
        """Sets the channel_arn of this ChannelModerator.


        :param channel_arn: The channel_arn of this ChannelModerator.
        :type channel_arn: str
        """

        self._channel_arn = channel_arn

    @property
    def created_timestamp(self):
        """Gets the created_timestamp of this ChannelModerator.


        :return: The created_timestamp of this ChannelModerator.
        :rtype: datetime
        """
        return self._created_timestamp

    @created_timestamp.setter
    def created_timestamp(self, created_timestamp):
        """Sets the created_timestamp of this ChannelModerator.


        :param created_timestamp: The created_timestamp of this ChannelModerator.
        :type created_timestamp: datetime
        """

        self._created_timestamp = created_timestamp

    @property
    def created_by(self):
        """Gets the created_by of this ChannelModerator.


        :return: The created_by of this ChannelModerator.
        :rtype: ChannelModeratorCreatedBy
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this ChannelModerator.


        :param created_by: The created_by of this ChannelModerator.
        :type created_by: ChannelModeratorCreatedBy
        """

        self._created_by = created_by
