# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MediaPlacement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_host_url: str=None, audio_fallback_url: str=None, screen_data_url: str=None, screen_sharing_url: str=None, screen_viewing_url: str=None, signaling_url: str=None, turn_control_url: str=None, event_ingestion_url: str=None):
        """MediaPlacement - a model defined in OpenAPI

        :param audio_host_url: The audio_host_url of this MediaPlacement.
        :param audio_fallback_url: The audio_fallback_url of this MediaPlacement.
        :param screen_data_url: The screen_data_url of this MediaPlacement.
        :param screen_sharing_url: The screen_sharing_url of this MediaPlacement.
        :param screen_viewing_url: The screen_viewing_url of this MediaPlacement.
        :param signaling_url: The signaling_url of this MediaPlacement.
        :param turn_control_url: The turn_control_url of this MediaPlacement.
        :param event_ingestion_url: The event_ingestion_url of this MediaPlacement.
        """
        self.openapi_types = {
            'audio_host_url': str,
            'audio_fallback_url': str,
            'screen_data_url': str,
            'screen_sharing_url': str,
            'screen_viewing_url': str,
            'signaling_url': str,
            'turn_control_url': str,
            'event_ingestion_url': str
        }

        self.attribute_map = {
            'audio_host_url': 'AudioHostUrl',
            'audio_fallback_url': 'AudioFallbackUrl',
            'screen_data_url': 'ScreenDataUrl',
            'screen_sharing_url': 'ScreenSharingUrl',
            'screen_viewing_url': 'ScreenViewingUrl',
            'signaling_url': 'SignalingUrl',
            'turn_control_url': 'TurnControlUrl',
            'event_ingestion_url': 'EventIngestionUrl'
        }

        self._audio_host_url = audio_host_url
        self._audio_fallback_url = audio_fallback_url
        self._screen_data_url = screen_data_url
        self._screen_sharing_url = screen_sharing_url
        self._screen_viewing_url = screen_viewing_url
        self._signaling_url = signaling_url
        self._turn_control_url = turn_control_url
        self._event_ingestion_url = event_ingestion_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MediaPlacement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MediaPlacement of this MediaPlacement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_host_url(self):
        """Gets the audio_host_url of this MediaPlacement.


        :return: The audio_host_url of this MediaPlacement.
        :rtype: str
        """
        return self._audio_host_url

    @audio_host_url.setter
    def audio_host_url(self, audio_host_url):
        """Sets the audio_host_url of this MediaPlacement.


        :param audio_host_url: The audio_host_url of this MediaPlacement.
        :type audio_host_url: str
        """

        self._audio_host_url = audio_host_url

    @property
    def audio_fallback_url(self):
        """Gets the audio_fallback_url of this MediaPlacement.


        :return: The audio_fallback_url of this MediaPlacement.
        :rtype: str
        """
        return self._audio_fallback_url

    @audio_fallback_url.setter
    def audio_fallback_url(self, audio_fallback_url):
        """Sets the audio_fallback_url of this MediaPlacement.


        :param audio_fallback_url: The audio_fallback_url of this MediaPlacement.
        :type audio_fallback_url: str
        """

        self._audio_fallback_url = audio_fallback_url

    @property
    def screen_data_url(self):
        """Gets the screen_data_url of this MediaPlacement.


        :return: The screen_data_url of this MediaPlacement.
        :rtype: str
        """
        return self._screen_data_url

    @screen_data_url.setter
    def screen_data_url(self, screen_data_url):
        """Sets the screen_data_url of this MediaPlacement.


        :param screen_data_url: The screen_data_url of this MediaPlacement.
        :type screen_data_url: str
        """

        self._screen_data_url = screen_data_url

    @property
    def screen_sharing_url(self):
        """Gets the screen_sharing_url of this MediaPlacement.


        :return: The screen_sharing_url of this MediaPlacement.
        :rtype: str
        """
        return self._screen_sharing_url

    @screen_sharing_url.setter
    def screen_sharing_url(self, screen_sharing_url):
        """Sets the screen_sharing_url of this MediaPlacement.


        :param screen_sharing_url: The screen_sharing_url of this MediaPlacement.
        :type screen_sharing_url: str
        """

        self._screen_sharing_url = screen_sharing_url

    @property
    def screen_viewing_url(self):
        """Gets the screen_viewing_url of this MediaPlacement.


        :return: The screen_viewing_url of this MediaPlacement.
        :rtype: str
        """
        return self._screen_viewing_url

    @screen_viewing_url.setter
    def screen_viewing_url(self, screen_viewing_url):
        """Sets the screen_viewing_url of this MediaPlacement.


        :param screen_viewing_url: The screen_viewing_url of this MediaPlacement.
        :type screen_viewing_url: str
        """

        self._screen_viewing_url = screen_viewing_url

    @property
    def signaling_url(self):
        """Gets the signaling_url of this MediaPlacement.


        :return: The signaling_url of this MediaPlacement.
        :rtype: str
        """
        return self._signaling_url

    @signaling_url.setter
    def signaling_url(self, signaling_url):
        """Sets the signaling_url of this MediaPlacement.


        :param signaling_url: The signaling_url of this MediaPlacement.
        :type signaling_url: str
        """

        self._signaling_url = signaling_url

    @property
    def turn_control_url(self):
        """Gets the turn_control_url of this MediaPlacement.


        :return: The turn_control_url of this MediaPlacement.
        :rtype: str
        """
        return self._turn_control_url

    @turn_control_url.setter
    def turn_control_url(self, turn_control_url):
        """Sets the turn_control_url of this MediaPlacement.


        :param turn_control_url: The turn_control_url of this MediaPlacement.
        :type turn_control_url: str
        """

        self._turn_control_url = turn_control_url

    @property
    def event_ingestion_url(self):
        """Gets the event_ingestion_url of this MediaPlacement.


        :return: The event_ingestion_url of this MediaPlacement.
        :rtype: str
        """
        return self._event_ingestion_url

    @event_ingestion_url.setter
    def event_ingestion_url(self, event_ingestion_url):
        """Sets the event_ingestion_url of this MediaPlacement.


        :param event_ingestion_url: The event_ingestion_url of this MediaPlacement.
        :type event_ingestion_url: str
        """

        self._event_ingestion_url = event_ingestion_url
