# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.put_retention_settings_request_retention_settings import PutRetentionSettingsRequestRetentionSettings
from openapi_server import util


class PutRetentionSettingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, retention_settings: PutRetentionSettingsRequestRetentionSettings=None):
        """PutRetentionSettingsRequest - a model defined in OpenAPI

        :param retention_settings: The retention_settings of this PutRetentionSettingsRequest.
        """
        self.openapi_types = {
            'retention_settings': PutRetentionSettingsRequestRetentionSettings
        }

        self.attribute_map = {
            'retention_settings': 'RetentionSettings'
        }

        self._retention_settings = retention_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutRetentionSettingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutRetentionSettings_request of this PutRetentionSettingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def retention_settings(self):
        """Gets the retention_settings of this PutRetentionSettingsRequest.


        :return: The retention_settings of this PutRetentionSettingsRequest.
        :rtype: PutRetentionSettingsRequestRetentionSettings
        """
        return self._retention_settings

    @retention_settings.setter
    def retention_settings(self, retention_settings):
        """Sets the retention_settings of this PutRetentionSettingsRequest.


        :param retention_settings: The retention_settings of this PutRetentionSettingsRequest.
        :type retention_settings: PutRetentionSettingsRequestRetentionSettings
        """
        if retention_settings is None:
            raise ValueError("Invalid value for `retention_settings`, must not be `None`")

        self._retention_settings = retention_settings
