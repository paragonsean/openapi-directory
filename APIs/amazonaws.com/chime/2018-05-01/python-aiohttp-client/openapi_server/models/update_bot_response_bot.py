# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bot_type import BotType
from openapi_server import util


class UpdateBotResponseBot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bot_id: str=None, user_id: str=None, display_name: str=None, bot_type: BotType=None, disabled: bool=None, created_timestamp: datetime=None, updated_timestamp: datetime=None, bot_email: str=None, security_token: str=None):
        """UpdateBotResponseBot - a model defined in OpenAPI

        :param bot_id: The bot_id of this UpdateBotResponseBot.
        :param user_id: The user_id of this UpdateBotResponseBot.
        :param display_name: The display_name of this UpdateBotResponseBot.
        :param bot_type: The bot_type of this UpdateBotResponseBot.
        :param disabled: The disabled of this UpdateBotResponseBot.
        :param created_timestamp: The created_timestamp of this UpdateBotResponseBot.
        :param updated_timestamp: The updated_timestamp of this UpdateBotResponseBot.
        :param bot_email: The bot_email of this UpdateBotResponseBot.
        :param security_token: The security_token of this UpdateBotResponseBot.
        """
        self.openapi_types = {
            'bot_id': str,
            'user_id': str,
            'display_name': str,
            'bot_type': BotType,
            'disabled': bool,
            'created_timestamp': datetime,
            'updated_timestamp': datetime,
            'bot_email': str,
            'security_token': str
        }

        self.attribute_map = {
            'bot_id': 'BotId',
            'user_id': 'UserId',
            'display_name': 'DisplayName',
            'bot_type': 'BotType',
            'disabled': 'Disabled',
            'created_timestamp': 'CreatedTimestamp',
            'updated_timestamp': 'UpdatedTimestamp',
            'bot_email': 'BotEmail',
            'security_token': 'SecurityToken'
        }

        self._bot_id = bot_id
        self._user_id = user_id
        self._display_name = display_name
        self._bot_type = bot_type
        self._disabled = disabled
        self._created_timestamp = created_timestamp
        self._updated_timestamp = updated_timestamp
        self._bot_email = bot_email
        self._security_token = security_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateBotResponseBot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateBotResponse_Bot of this UpdateBotResponseBot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bot_id(self):
        """Gets the bot_id of this UpdateBotResponseBot.


        :return: The bot_id of this UpdateBotResponseBot.
        :rtype: str
        """
        return self._bot_id

    @bot_id.setter
    def bot_id(self, bot_id):
        """Sets the bot_id of this UpdateBotResponseBot.


        :param bot_id: The bot_id of this UpdateBotResponseBot.
        :type bot_id: str
        """

        self._bot_id = bot_id

    @property
    def user_id(self):
        """Gets the user_id of this UpdateBotResponseBot.


        :return: The user_id of this UpdateBotResponseBot.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this UpdateBotResponseBot.


        :param user_id: The user_id of this UpdateBotResponseBot.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def display_name(self):
        """Gets the display_name of this UpdateBotResponseBot.


        :return: The display_name of this UpdateBotResponseBot.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this UpdateBotResponseBot.


        :param display_name: The display_name of this UpdateBotResponseBot.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def bot_type(self):
        """Gets the bot_type of this UpdateBotResponseBot.


        :return: The bot_type of this UpdateBotResponseBot.
        :rtype: BotType
        """
        return self._bot_type

    @bot_type.setter
    def bot_type(self, bot_type):
        """Sets the bot_type of this UpdateBotResponseBot.


        :param bot_type: The bot_type of this UpdateBotResponseBot.
        :type bot_type: BotType
        """

        self._bot_type = bot_type

    @property
    def disabled(self):
        """Gets the disabled of this UpdateBotResponseBot.


        :return: The disabled of this UpdateBotResponseBot.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this UpdateBotResponseBot.


        :param disabled: The disabled of this UpdateBotResponseBot.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def created_timestamp(self):
        """Gets the created_timestamp of this UpdateBotResponseBot.


        :return: The created_timestamp of this UpdateBotResponseBot.
        :rtype: datetime
        """
        return self._created_timestamp

    @created_timestamp.setter
    def created_timestamp(self, created_timestamp):
        """Sets the created_timestamp of this UpdateBotResponseBot.


        :param created_timestamp: The created_timestamp of this UpdateBotResponseBot.
        :type created_timestamp: datetime
        """

        self._created_timestamp = created_timestamp

    @property
    def updated_timestamp(self):
        """Gets the updated_timestamp of this UpdateBotResponseBot.


        :return: The updated_timestamp of this UpdateBotResponseBot.
        :rtype: datetime
        """
        return self._updated_timestamp

    @updated_timestamp.setter
    def updated_timestamp(self, updated_timestamp):
        """Sets the updated_timestamp of this UpdateBotResponseBot.


        :param updated_timestamp: The updated_timestamp of this UpdateBotResponseBot.
        :type updated_timestamp: datetime
        """

        self._updated_timestamp = updated_timestamp

    @property
    def bot_email(self):
        """Gets the bot_email of this UpdateBotResponseBot.


        :return: The bot_email of this UpdateBotResponseBot.
        :rtype: str
        """
        return self._bot_email

    @bot_email.setter
    def bot_email(self, bot_email):
        """Sets the bot_email of this UpdateBotResponseBot.


        :param bot_email: The bot_email of this UpdateBotResponseBot.
        :type bot_email: str
        """

        self._bot_email = bot_email

    @property
    def security_token(self):
        """Gets the security_token of this UpdateBotResponseBot.


        :return: The security_token of this UpdateBotResponseBot.
        :rtype: str
        """
        return self._security_token

    @security_token.setter
    def security_token(self, security_token):
        """Sets the security_token of this UpdateBotResponseBot.


        :param security_token: The security_token of this UpdateBotResponseBot.
        :type security_token: str
        """

        self._security_token = security_token
