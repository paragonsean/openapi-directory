# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.calling_name_status import CallingNameStatus
from openapi_server.models.phone_number_capabilities import PhoneNumberCapabilities
from openapi_server.models.phone_number_product_type import PhoneNumberProductType
from openapi_server.models.phone_number_status import PhoneNumberStatus
from openapi_server.models.phone_number_type import PhoneNumberType
from openapi_server import util


class PhoneNumber(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, phone_number_id: str=None, e164_phone_number: str=None, country: str=None, type: PhoneNumberType=None, product_type: PhoneNumberProductType=None, status: PhoneNumberStatus=None, capabilities: PhoneNumberCapabilities=None, associations: List=None, calling_name: str=None, calling_name_status: CallingNameStatus=None, created_timestamp: datetime=None, updated_timestamp: datetime=None, deletion_timestamp: datetime=None):
        """PhoneNumber - a model defined in OpenAPI

        :param phone_number_id: The phone_number_id of this PhoneNumber.
        :param e164_phone_number: The e164_phone_number of this PhoneNumber.
        :param country: The country of this PhoneNumber.
        :param type: The type of this PhoneNumber.
        :param product_type: The product_type of this PhoneNumber.
        :param status: The status of this PhoneNumber.
        :param capabilities: The capabilities of this PhoneNumber.
        :param associations: The associations of this PhoneNumber.
        :param calling_name: The calling_name of this PhoneNumber.
        :param calling_name_status: The calling_name_status of this PhoneNumber.
        :param created_timestamp: The created_timestamp of this PhoneNumber.
        :param updated_timestamp: The updated_timestamp of this PhoneNumber.
        :param deletion_timestamp: The deletion_timestamp of this PhoneNumber.
        """
        self.openapi_types = {
            'phone_number_id': str,
            'e164_phone_number': str,
            'country': str,
            'type': PhoneNumberType,
            'product_type': PhoneNumberProductType,
            'status': PhoneNumberStatus,
            'capabilities': PhoneNumberCapabilities,
            'associations': List,
            'calling_name': str,
            'calling_name_status': CallingNameStatus,
            'created_timestamp': datetime,
            'updated_timestamp': datetime,
            'deletion_timestamp': datetime
        }

        self.attribute_map = {
            'phone_number_id': 'PhoneNumberId',
            'e164_phone_number': 'E164PhoneNumber',
            'country': 'Country',
            'type': 'Type',
            'product_type': 'ProductType',
            'status': 'Status',
            'capabilities': 'Capabilities',
            'associations': 'Associations',
            'calling_name': 'CallingName',
            'calling_name_status': 'CallingNameStatus',
            'created_timestamp': 'CreatedTimestamp',
            'updated_timestamp': 'UpdatedTimestamp',
            'deletion_timestamp': 'DeletionTimestamp'
        }

        self._phone_number_id = phone_number_id
        self._e164_phone_number = e164_phone_number
        self._country = country
        self._type = type
        self._product_type = product_type
        self._status = status
        self._capabilities = capabilities
        self._associations = associations
        self._calling_name = calling_name
        self._calling_name_status = calling_name_status
        self._created_timestamp = created_timestamp
        self._updated_timestamp = updated_timestamp
        self._deletion_timestamp = deletion_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhoneNumber':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PhoneNumber of this PhoneNumber.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phone_number_id(self):
        """Gets the phone_number_id of this PhoneNumber.


        :return: The phone_number_id of this PhoneNumber.
        :rtype: str
        """
        return self._phone_number_id

    @phone_number_id.setter
    def phone_number_id(self, phone_number_id):
        """Sets the phone_number_id of this PhoneNumber.


        :param phone_number_id: The phone_number_id of this PhoneNumber.
        :type phone_number_id: str
        """

        self._phone_number_id = phone_number_id

    @property
    def e164_phone_number(self):
        """Gets the e164_phone_number of this PhoneNumber.


        :return: The e164_phone_number of this PhoneNumber.
        :rtype: str
        """
        return self._e164_phone_number

    @e164_phone_number.setter
    def e164_phone_number(self, e164_phone_number):
        """Sets the e164_phone_number of this PhoneNumber.


        :param e164_phone_number: The e164_phone_number of this PhoneNumber.
        :type e164_phone_number: str
        """

        self._e164_phone_number = e164_phone_number

    @property
    def country(self):
        """Gets the country of this PhoneNumber.


        :return: The country of this PhoneNumber.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this PhoneNumber.


        :param country: The country of this PhoneNumber.
        :type country: str
        """

        self._country = country

    @property
    def type(self):
        """Gets the type of this PhoneNumber.


        :return: The type of this PhoneNumber.
        :rtype: PhoneNumberType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PhoneNumber.


        :param type: The type of this PhoneNumber.
        :type type: PhoneNumberType
        """

        self._type = type

    @property
    def product_type(self):
        """Gets the product_type of this PhoneNumber.


        :return: The product_type of this PhoneNumber.
        :rtype: PhoneNumberProductType
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this PhoneNumber.


        :param product_type: The product_type of this PhoneNumber.
        :type product_type: PhoneNumberProductType
        """

        self._product_type = product_type

    @property
    def status(self):
        """Gets the status of this PhoneNumber.


        :return: The status of this PhoneNumber.
        :rtype: PhoneNumberStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PhoneNumber.


        :param status: The status of this PhoneNumber.
        :type status: PhoneNumberStatus
        """

        self._status = status

    @property
    def capabilities(self):
        """Gets the capabilities of this PhoneNumber.


        :return: The capabilities of this PhoneNumber.
        :rtype: PhoneNumberCapabilities
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities):
        """Sets the capabilities of this PhoneNumber.


        :param capabilities: The capabilities of this PhoneNumber.
        :type capabilities: PhoneNumberCapabilities
        """

        self._capabilities = capabilities

    @property
    def associations(self):
        """Gets the associations of this PhoneNumber.


        :return: The associations of this PhoneNumber.
        :rtype: List
        """
        return self._associations

    @associations.setter
    def associations(self, associations):
        """Sets the associations of this PhoneNumber.


        :param associations: The associations of this PhoneNumber.
        :type associations: List
        """

        self._associations = associations

    @property
    def calling_name(self):
        """Gets the calling_name of this PhoneNumber.


        :return: The calling_name of this PhoneNumber.
        :rtype: str
        """
        return self._calling_name

    @calling_name.setter
    def calling_name(self, calling_name):
        """Sets the calling_name of this PhoneNumber.


        :param calling_name: The calling_name of this PhoneNumber.
        :type calling_name: str
        """

        self._calling_name = calling_name

    @property
    def calling_name_status(self):
        """Gets the calling_name_status of this PhoneNumber.


        :return: The calling_name_status of this PhoneNumber.
        :rtype: CallingNameStatus
        """
        return self._calling_name_status

    @calling_name_status.setter
    def calling_name_status(self, calling_name_status):
        """Sets the calling_name_status of this PhoneNumber.


        :param calling_name_status: The calling_name_status of this PhoneNumber.
        :type calling_name_status: CallingNameStatus
        """

        self._calling_name_status = calling_name_status

    @property
    def created_timestamp(self):
        """Gets the created_timestamp of this PhoneNumber.


        :return: The created_timestamp of this PhoneNumber.
        :rtype: datetime
        """
        return self._created_timestamp

    @created_timestamp.setter
    def created_timestamp(self, created_timestamp):
        """Sets the created_timestamp of this PhoneNumber.


        :param created_timestamp: The created_timestamp of this PhoneNumber.
        :type created_timestamp: datetime
        """

        self._created_timestamp = created_timestamp

    @property
    def updated_timestamp(self):
        """Gets the updated_timestamp of this PhoneNumber.


        :return: The updated_timestamp of this PhoneNumber.
        :rtype: datetime
        """
        return self._updated_timestamp

    @updated_timestamp.setter
    def updated_timestamp(self, updated_timestamp):
        """Sets the updated_timestamp of this PhoneNumber.


        :param updated_timestamp: The updated_timestamp of this PhoneNumber.
        :type updated_timestamp: datetime
        """

        self._updated_timestamp = updated_timestamp

    @property
    def deletion_timestamp(self):
        """Gets the deletion_timestamp of this PhoneNumber.


        :return: The deletion_timestamp of this PhoneNumber.
        :rtype: datetime
        """
        return self._deletion_timestamp

    @deletion_timestamp.setter
    def deletion_timestamp(self, deletion_timestamp):
        """Sets the deletion_timestamp of this PhoneNumber.


        :param deletion_timestamp: The deletion_timestamp of this PhoneNumber.
        :type deletion_timestamp: datetime
        """

        self._deletion_timestamp = deletion_timestamp
