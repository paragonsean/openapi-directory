# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SipRuleTargetApplication(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sip_media_application_id: str=None, priority: int=None, aws_region: str=None):
        """SipRuleTargetApplication - a model defined in OpenAPI

        :param sip_media_application_id: The sip_media_application_id of this SipRuleTargetApplication.
        :param priority: The priority of this SipRuleTargetApplication.
        :param aws_region: The aws_region of this SipRuleTargetApplication.
        """
        self.openapi_types = {
            'sip_media_application_id': str,
            'priority': int,
            'aws_region': str
        }

        self.attribute_map = {
            'sip_media_application_id': 'SipMediaApplicationId',
            'priority': 'Priority',
            'aws_region': 'AwsRegion'
        }

        self._sip_media_application_id = sip_media_application_id
        self._priority = priority
        self._aws_region = aws_region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SipRuleTargetApplication':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SipRuleTargetApplication of this SipRuleTargetApplication.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sip_media_application_id(self):
        """Gets the sip_media_application_id of this SipRuleTargetApplication.


        :return: The sip_media_application_id of this SipRuleTargetApplication.
        :rtype: str
        """
        return self._sip_media_application_id

    @sip_media_application_id.setter
    def sip_media_application_id(self, sip_media_application_id):
        """Sets the sip_media_application_id of this SipRuleTargetApplication.


        :param sip_media_application_id: The sip_media_application_id of this SipRuleTargetApplication.
        :type sip_media_application_id: str
        """

        self._sip_media_application_id = sip_media_application_id

    @property
    def priority(self):
        """Gets the priority of this SipRuleTargetApplication.


        :return: The priority of this SipRuleTargetApplication.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this SipRuleTargetApplication.


        :param priority: The priority of this SipRuleTargetApplication.
        :type priority: int
        """

        self._priority = priority

    @property
    def aws_region(self):
        """Gets the aws_region of this SipRuleTargetApplication.


        :return: The aws_region of this SipRuleTargetApplication.
        :rtype: str
        """
        return self._aws_region

    @aws_region.setter
    def aws_region(self, aws_region):
        """Sets the aws_region of this SipRuleTargetApplication.


        :param aws_region: The aws_region of this SipRuleTargetApplication.
        :type aws_region: str
        """

        self._aws_region = aws_region
