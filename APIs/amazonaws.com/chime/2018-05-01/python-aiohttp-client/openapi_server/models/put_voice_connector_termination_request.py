# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.put_voice_connector_termination_request_termination import PutVoiceConnectorTerminationRequestTermination
from openapi_server import util


class PutVoiceConnectorTerminationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, termination: PutVoiceConnectorTerminationRequestTermination=None):
        """PutVoiceConnectorTerminationRequest - a model defined in OpenAPI

        :param termination: The termination of this PutVoiceConnectorTerminationRequest.
        """
        self.openapi_types = {
            'termination': PutVoiceConnectorTerminationRequestTermination
        }

        self.attribute_map = {
            'termination': 'Termination'
        }

        self._termination = termination

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutVoiceConnectorTerminationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutVoiceConnectorTermination_request of this PutVoiceConnectorTerminationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def termination(self):
        """Gets the termination of this PutVoiceConnectorTerminationRequest.


        :return: The termination of this PutVoiceConnectorTerminationRequest.
        :rtype: PutVoiceConnectorTerminationRequestTermination
        """
        return self._termination

    @termination.setter
    def termination(self, termination):
        """Sets the termination of this PutVoiceConnectorTerminationRequest.


        :param termination: The termination of this PutVoiceConnectorTerminationRequest.
        :type termination: PutVoiceConnectorTerminationRequestTermination
        """
        if termination is None:
            raise ValueError("Invalid value for `termination`, must not be `None`")

        self._termination = termination
