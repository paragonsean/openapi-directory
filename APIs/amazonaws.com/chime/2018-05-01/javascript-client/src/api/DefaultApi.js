/**
 * Amazon Chime
 * <important> <p> <b>Most of these APIs are no longer supported and will not be updated.</b> We recommend using the latest versions in the <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/welcome.html\">Amazon Chime SDK API reference</a>, in the Amazon Chime SDK.</p> <p>Using the latest versions requires migrating to dedicated namespaces. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important> <p>The Amazon Chime application programming interface (API) is designed so administrators can perform key tasks, such as creating and managing Amazon Chime accounts, users, and Voice Connectors. This guide provides detailed information about the Amazon Chime API, including operations, types, inputs and outputs, and error codes.</p> <p>You can use an AWS SDK, the AWS Command Line Interface (AWS CLI), or the REST API to make API calls for Amazon Chime. We recommend using an AWS SDK or the AWS CLI. The page for each API action contains a <i>See Also</i> section that includes links to information about using the action with a language-specific AWS SDK or the AWS CLI.</p> <dl> <dt>Using an AWS SDK</dt> <dd> <p> You don't need to write code to calculate a signature for request authentication. The SDK clients authenticate your requests by using access keys that you provide. For more information about AWS SDKs, see the <a href=\"http://aws.amazon.com/developer/\">AWS Developer Center</a>. </p> </dd> <dt>Using the AWS CLI</dt> <dd> <p>Use your access keys with the AWS CLI to make API calls. For information about setting up the AWS CLI, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/installing.html\">Installing the AWS Command Line Interface</a> in the <i>AWS Command Line Interface User Guide</i>. For a list of available Amazon Chime commands, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/chime/index.html\">Amazon Chime commands</a> in the <i>AWS CLI Command Reference</i>. </p> </dd> <dt>Using REST APIs</dt> <dd> <p>If you use REST to make API calls, you must authenticate your request by providing a signature. Amazon Chime supports Signature Version 4. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>When making REST API calls, use the service name <code>chime</code> and REST endpoint <code>https://service.chime.aws.amazon.com</code>.</p> </dd> </dl> <p>Administrative permissions are controlled using AWS Identity and Access Management (IAM). For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/security-iam.html\">Identity and Access Management for Amazon Chime</a> in the <i>Amazon Chime Administration Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-05-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AssociatePhoneNumberWithUserRequest from '../model/AssociatePhoneNumberWithUserRequest';
import AssociatePhoneNumbersWithVoiceConnectorGroupRequest from '../model/AssociatePhoneNumbersWithVoiceConnectorGroupRequest';
import AssociatePhoneNumbersWithVoiceConnectorGroupResponse from '../model/AssociatePhoneNumbersWithVoiceConnectorGroupResponse';
import AssociatePhoneNumbersWithVoiceConnectorRequest from '../model/AssociatePhoneNumbersWithVoiceConnectorRequest';
import AssociatePhoneNumbersWithVoiceConnectorResponse from '../model/AssociatePhoneNumbersWithVoiceConnectorResponse';
import AssociateSigninDelegateGroupsWithAccountRequest from '../model/AssociateSigninDelegateGroupsWithAccountRequest';
import BatchCreateAttendeeRequest from '../model/BatchCreateAttendeeRequest';
import BatchCreateAttendeeResponse from '../model/BatchCreateAttendeeResponse';
import BatchCreateChannelMembershipRequest from '../model/BatchCreateChannelMembershipRequest';
import BatchCreateChannelMembershipResponse from '../model/BatchCreateChannelMembershipResponse';
import BatchCreateRoomMembershipRequest from '../model/BatchCreateRoomMembershipRequest';
import BatchCreateRoomMembershipResponse from '../model/BatchCreateRoomMembershipResponse';
import BatchDeletePhoneNumberRequest from '../model/BatchDeletePhoneNumberRequest';
import BatchDeletePhoneNumberResponse from '../model/BatchDeletePhoneNumberResponse';
import BatchSuspendUserRequest from '../model/BatchSuspendUserRequest';
import BatchSuspendUserResponse from '../model/BatchSuspendUserResponse';
import BatchUnsuspendUserRequest from '../model/BatchUnsuspendUserRequest';
import BatchUnsuspendUserResponse from '../model/BatchUnsuspendUserResponse';
import BatchUpdatePhoneNumberRequest from '../model/BatchUpdatePhoneNumberRequest';
import BatchUpdatePhoneNumberResponse from '../model/BatchUpdatePhoneNumberResponse';
import BatchUpdateUserRequest from '../model/BatchUpdateUserRequest';
import BatchUpdateUserResponse from '../model/BatchUpdateUserResponse';
import CreateAccountRequest from '../model/CreateAccountRequest';
import CreateAccountResponse from '../model/CreateAccountResponse';
import CreateAppInstanceAdminRequest from '../model/CreateAppInstanceAdminRequest';
import CreateAppInstanceAdminResponse from '../model/CreateAppInstanceAdminResponse';
import CreateAppInstanceRequest from '../model/CreateAppInstanceRequest';
import CreateAppInstanceResponse from '../model/CreateAppInstanceResponse';
import CreateAppInstanceUserRequest from '../model/CreateAppInstanceUserRequest';
import CreateAppInstanceUserResponse from '../model/CreateAppInstanceUserResponse';
import CreateAttendeeRequest from '../model/CreateAttendeeRequest';
import CreateAttendeeResponse from '../model/CreateAttendeeResponse';
import CreateBotRequest from '../model/CreateBotRequest';
import CreateBotResponse from '../model/CreateBotResponse';
import CreateChannelBanRequest from '../model/CreateChannelBanRequest';
import CreateChannelBanResponse from '../model/CreateChannelBanResponse';
import CreateChannelMembershipRequest from '../model/CreateChannelMembershipRequest';
import CreateChannelMembershipResponse from '../model/CreateChannelMembershipResponse';
import CreateChannelModeratorRequest from '../model/CreateChannelModeratorRequest';
import CreateChannelModeratorResponse from '../model/CreateChannelModeratorResponse';
import CreateChannelRequest from '../model/CreateChannelRequest';
import CreateChannelResponse from '../model/CreateChannelResponse';
import CreateMediaCapturePipelineRequest from '../model/CreateMediaCapturePipelineRequest';
import CreateMediaCapturePipelineResponse from '../model/CreateMediaCapturePipelineResponse';
import CreateMeetingDialOutRequest from '../model/CreateMeetingDialOutRequest';
import CreateMeetingDialOutResponse from '../model/CreateMeetingDialOutResponse';
import CreateMeetingRequest from '../model/CreateMeetingRequest';
import CreateMeetingResponse from '../model/CreateMeetingResponse';
import CreateMeetingWithAttendeesRequest from '../model/CreateMeetingWithAttendeesRequest';
import CreateMeetingWithAttendeesResponse from '../model/CreateMeetingWithAttendeesResponse';
import CreatePhoneNumberOrderRequest from '../model/CreatePhoneNumberOrderRequest';
import CreatePhoneNumberOrderResponse from '../model/CreatePhoneNumberOrderResponse';
import CreateProxySessionRequest from '../model/CreateProxySessionRequest';
import CreateProxySessionResponse from '../model/CreateProxySessionResponse';
import CreateRoomMembershipRequest from '../model/CreateRoomMembershipRequest';
import CreateRoomMembershipResponse from '../model/CreateRoomMembershipResponse';
import CreateRoomRequest from '../model/CreateRoomRequest';
import CreateRoomResponse from '../model/CreateRoomResponse';
import CreateSipMediaApplicationCallRequest from '../model/CreateSipMediaApplicationCallRequest';
import CreateSipMediaApplicationCallResponse from '../model/CreateSipMediaApplicationCallResponse';
import CreateSipMediaApplicationRequest from '../model/CreateSipMediaApplicationRequest';
import CreateSipMediaApplicationResponse from '../model/CreateSipMediaApplicationResponse';
import CreateSipRuleRequest from '../model/CreateSipRuleRequest';
import CreateSipRuleResponse from '../model/CreateSipRuleResponse';
import CreateUserRequest from '../model/CreateUserRequest';
import CreateUserResponse from '../model/CreateUserResponse';
import CreateVoiceConnectorGroupRequest from '../model/CreateVoiceConnectorGroupRequest';
import CreateVoiceConnectorGroupResponse from '../model/CreateVoiceConnectorGroupResponse';
import CreateVoiceConnectorRequest from '../model/CreateVoiceConnectorRequest';
import CreateVoiceConnectorResponse from '../model/CreateVoiceConnectorResponse';
import DeleteVoiceConnectorTerminationCredentialsRequest from '../model/DeleteVoiceConnectorTerminationCredentialsRequest';
import DescribeAppInstanceAdminResponse from '../model/DescribeAppInstanceAdminResponse';
import DescribeAppInstanceResponse from '../model/DescribeAppInstanceResponse';
import DescribeAppInstanceUserResponse from '../model/DescribeAppInstanceUserResponse';
import DescribeChannelBanResponse from '../model/DescribeChannelBanResponse';
import DescribeChannelMembershipForAppInstanceUserResponse from '../model/DescribeChannelMembershipForAppInstanceUserResponse';
import DescribeChannelMembershipResponse from '../model/DescribeChannelMembershipResponse';
import DescribeChannelModeratedByAppInstanceUserResponse from '../model/DescribeChannelModeratedByAppInstanceUserResponse';
import DescribeChannelModeratorResponse from '../model/DescribeChannelModeratorResponse';
import DescribeChannelResponse from '../model/DescribeChannelResponse';
import DisassociatePhoneNumbersFromVoiceConnectorGroupResponse from '../model/DisassociatePhoneNumbersFromVoiceConnectorGroupResponse';
import DisassociatePhoneNumbersFromVoiceConnectorRequest from '../model/DisassociatePhoneNumbersFromVoiceConnectorRequest';
import DisassociatePhoneNumbersFromVoiceConnectorResponse from '../model/DisassociatePhoneNumbersFromVoiceConnectorResponse';
import DisassociateSigninDelegateGroupsFromAccountRequest from '../model/DisassociateSigninDelegateGroupsFromAccountRequest';
import GetAccountResponse from '../model/GetAccountResponse';
import GetAccountSettingsResponse from '../model/GetAccountSettingsResponse';
import GetAppInstanceRetentionSettingsResponse from '../model/GetAppInstanceRetentionSettingsResponse';
import GetAppInstanceStreamingConfigurationsResponse from '../model/GetAppInstanceStreamingConfigurationsResponse';
import GetAttendeeResponse from '../model/GetAttendeeResponse';
import GetBotResponse from '../model/GetBotResponse';
import GetChannelMessageResponse from '../model/GetChannelMessageResponse';
import GetEventsConfigurationResponse from '../model/GetEventsConfigurationResponse';
import GetGlobalSettingsResponse from '../model/GetGlobalSettingsResponse';
import GetMediaCapturePipelineResponse from '../model/GetMediaCapturePipelineResponse';
import GetMeetingResponse from '../model/GetMeetingResponse';
import GetMessagingSessionEndpointResponse from '../model/GetMessagingSessionEndpointResponse';
import GetPhoneNumberOrderResponse from '../model/GetPhoneNumberOrderResponse';
import GetPhoneNumberResponse from '../model/GetPhoneNumberResponse';
import GetPhoneNumberSettingsResponse from '../model/GetPhoneNumberSettingsResponse';
import GetProxySessionResponse from '../model/GetProxySessionResponse';
import GetRetentionSettingsResponse from '../model/GetRetentionSettingsResponse';
import GetRoomResponse from '../model/GetRoomResponse';
import GetSipMediaApplicationLoggingConfigurationResponse from '../model/GetSipMediaApplicationLoggingConfigurationResponse';
import GetSipMediaApplicationResponse from '../model/GetSipMediaApplicationResponse';
import GetSipRuleResponse from '../model/GetSipRuleResponse';
import GetUserResponse from '../model/GetUserResponse';
import GetUserSettingsResponse from '../model/GetUserSettingsResponse';
import GetVoiceConnectorEmergencyCallingConfigurationResponse from '../model/GetVoiceConnectorEmergencyCallingConfigurationResponse';
import GetVoiceConnectorGroupResponse from '../model/GetVoiceConnectorGroupResponse';
import GetVoiceConnectorLoggingConfigurationResponse from '../model/GetVoiceConnectorLoggingConfigurationResponse';
import GetVoiceConnectorOriginationResponse from '../model/GetVoiceConnectorOriginationResponse';
import GetVoiceConnectorProxyResponse from '../model/GetVoiceConnectorProxyResponse';
import GetVoiceConnectorResponse from '../model/GetVoiceConnectorResponse';
import GetVoiceConnectorStreamingConfigurationResponse from '../model/GetVoiceConnectorStreamingConfigurationResponse';
import GetVoiceConnectorTerminationHealthResponse from '../model/GetVoiceConnectorTerminationHealthResponse';
import GetVoiceConnectorTerminationResponse from '../model/GetVoiceConnectorTerminationResponse';
import InviteUsersRequest from '../model/InviteUsersRequest';
import InviteUsersResponse from '../model/InviteUsersResponse';
import ListAccountsResponse from '../model/ListAccountsResponse';
import ListAppInstanceAdminsResponse from '../model/ListAppInstanceAdminsResponse';
import ListAppInstanceUsersResponse from '../model/ListAppInstanceUsersResponse';
import ListAppInstancesResponse from '../model/ListAppInstancesResponse';
import ListAttendeeTagsResponse from '../model/ListAttendeeTagsResponse';
import ListAttendeesResponse from '../model/ListAttendeesResponse';
import ListBotsResponse from '../model/ListBotsResponse';
import ListChannelBansResponse from '../model/ListChannelBansResponse';
import ListChannelMembershipsForAppInstanceUserResponse from '../model/ListChannelMembershipsForAppInstanceUserResponse';
import ListChannelMembershipsResponse from '../model/ListChannelMembershipsResponse';
import ListChannelMessagesResponse from '../model/ListChannelMessagesResponse';
import ListChannelModeratorsResponse from '../model/ListChannelModeratorsResponse';
import ListChannelsModeratedByAppInstanceUserResponse from '../model/ListChannelsModeratedByAppInstanceUserResponse';
import ListChannelsResponse from '../model/ListChannelsResponse';
import ListMediaCapturePipelinesResponse from '../model/ListMediaCapturePipelinesResponse';
import ListMeetingTagsResponse from '../model/ListMeetingTagsResponse';
import ListMeetingsResponse from '../model/ListMeetingsResponse';
import ListPhoneNumberOrdersResponse from '../model/ListPhoneNumberOrdersResponse';
import ListPhoneNumbersResponse from '../model/ListPhoneNumbersResponse';
import ListProxySessionsResponse from '../model/ListProxySessionsResponse';
import ListRoomMembershipsResponse from '../model/ListRoomMembershipsResponse';
import ListRoomsResponse from '../model/ListRoomsResponse';
import ListSipMediaApplicationsResponse from '../model/ListSipMediaApplicationsResponse';
import ListSipRulesResponse from '../model/ListSipRulesResponse';
import ListSupportedPhoneNumberCountriesResponse from '../model/ListSupportedPhoneNumberCountriesResponse';
import ListTagsForResourceResponse from '../model/ListTagsForResourceResponse';
import ListUsersResponse from '../model/ListUsersResponse';
import ListVoiceConnectorGroupsResponse from '../model/ListVoiceConnectorGroupsResponse';
import ListVoiceConnectorTerminationCredentialsResponse from '../model/ListVoiceConnectorTerminationCredentialsResponse';
import ListVoiceConnectorsResponse from '../model/ListVoiceConnectorsResponse';
import PutAppInstanceRetentionSettingsRequest from '../model/PutAppInstanceRetentionSettingsRequest';
import PutAppInstanceRetentionSettingsResponse from '../model/PutAppInstanceRetentionSettingsResponse';
import PutAppInstanceStreamingConfigurationsRequest from '../model/PutAppInstanceStreamingConfigurationsRequest';
import PutAppInstanceStreamingConfigurationsResponse from '../model/PutAppInstanceStreamingConfigurationsResponse';
import PutEventsConfigurationRequest from '../model/PutEventsConfigurationRequest';
import PutEventsConfigurationResponse from '../model/PutEventsConfigurationResponse';
import PutRetentionSettingsRequest from '../model/PutRetentionSettingsRequest';
import PutRetentionSettingsResponse from '../model/PutRetentionSettingsResponse';
import PutSipMediaApplicationLoggingConfigurationRequest from '../model/PutSipMediaApplicationLoggingConfigurationRequest';
import PutSipMediaApplicationLoggingConfigurationResponse from '../model/PutSipMediaApplicationLoggingConfigurationResponse';
import PutVoiceConnectorEmergencyCallingConfigurationRequest from '../model/PutVoiceConnectorEmergencyCallingConfigurationRequest';
import PutVoiceConnectorEmergencyCallingConfigurationResponse from '../model/PutVoiceConnectorEmergencyCallingConfigurationResponse';
import PutVoiceConnectorLoggingConfigurationRequest from '../model/PutVoiceConnectorLoggingConfigurationRequest';
import PutVoiceConnectorLoggingConfigurationResponse from '../model/PutVoiceConnectorLoggingConfigurationResponse';
import PutVoiceConnectorOriginationRequest from '../model/PutVoiceConnectorOriginationRequest';
import PutVoiceConnectorOriginationResponse from '../model/PutVoiceConnectorOriginationResponse';
import PutVoiceConnectorProxyRequest from '../model/PutVoiceConnectorProxyRequest';
import PutVoiceConnectorProxyResponse from '../model/PutVoiceConnectorProxyResponse';
import PutVoiceConnectorStreamingConfigurationRequest from '../model/PutVoiceConnectorStreamingConfigurationRequest';
import PutVoiceConnectorStreamingConfigurationResponse from '../model/PutVoiceConnectorStreamingConfigurationResponse';
import PutVoiceConnectorTerminationCredentialsRequest from '../model/PutVoiceConnectorTerminationCredentialsRequest';
import PutVoiceConnectorTerminationRequest from '../model/PutVoiceConnectorTerminationRequest';
import PutVoiceConnectorTerminationResponse from '../model/PutVoiceConnectorTerminationResponse';
import RedactChannelMessageResponse from '../model/RedactChannelMessageResponse';
import RegenerateSecurityTokenResponse from '../model/RegenerateSecurityTokenResponse';
import ResetPersonalPINResponse from '../model/ResetPersonalPINResponse';
import RestorePhoneNumberResponse from '../model/RestorePhoneNumberResponse';
import SearchAvailablePhoneNumbersResponse from '../model/SearchAvailablePhoneNumbersResponse';
import SendChannelMessageRequest from '../model/SendChannelMessageRequest';
import SendChannelMessageResponse from '../model/SendChannelMessageResponse';
import StartMeetingTranscriptionRequest from '../model/StartMeetingTranscriptionRequest';
import TagAttendeeRequest from '../model/TagAttendeeRequest';
import TagMeetingRequest from '../model/TagMeetingRequest';
import TagResourceRequest from '../model/TagResourceRequest';
import UntagAttendeeRequest from '../model/UntagAttendeeRequest';
import UntagMeetingRequest from '../model/UntagMeetingRequest';
import UntagResourceRequest from '../model/UntagResourceRequest';
import UpdateAccountRequest from '../model/UpdateAccountRequest';
import UpdateAccountResponse from '../model/UpdateAccountResponse';
import UpdateAccountSettingsRequest from '../model/UpdateAccountSettingsRequest';
import UpdateAppInstanceRequest from '../model/UpdateAppInstanceRequest';
import UpdateAppInstanceResponse from '../model/UpdateAppInstanceResponse';
import UpdateAppInstanceUserRequest from '../model/UpdateAppInstanceUserRequest';
import UpdateAppInstanceUserResponse from '../model/UpdateAppInstanceUserResponse';
import UpdateBotRequest from '../model/UpdateBotRequest';
import UpdateBotResponse from '../model/UpdateBotResponse';
import UpdateChannelMessageRequest from '../model/UpdateChannelMessageRequest';
import UpdateChannelMessageResponse from '../model/UpdateChannelMessageResponse';
import UpdateChannelReadMarkerResponse from '../model/UpdateChannelReadMarkerResponse';
import UpdateChannelRequest from '../model/UpdateChannelRequest';
import UpdateChannelResponse from '../model/UpdateChannelResponse';
import UpdateGlobalSettingsRequest from '../model/UpdateGlobalSettingsRequest';
import UpdatePhoneNumberRequest from '../model/UpdatePhoneNumberRequest';
import UpdatePhoneNumberResponse from '../model/UpdatePhoneNumberResponse';
import UpdatePhoneNumberSettingsRequest from '../model/UpdatePhoneNumberSettingsRequest';
import UpdateProxySessionRequest from '../model/UpdateProxySessionRequest';
import UpdateProxySessionResponse from '../model/UpdateProxySessionResponse';
import UpdateRoomMembershipRequest from '../model/UpdateRoomMembershipRequest';
import UpdateRoomMembershipResponse from '../model/UpdateRoomMembershipResponse';
import UpdateRoomRequest from '../model/UpdateRoomRequest';
import UpdateRoomResponse from '../model/UpdateRoomResponse';
import UpdateSipMediaApplicationCallRequest from '../model/UpdateSipMediaApplicationCallRequest';
import UpdateSipMediaApplicationCallResponse from '../model/UpdateSipMediaApplicationCallResponse';
import UpdateSipMediaApplicationRequest from '../model/UpdateSipMediaApplicationRequest';
import UpdateSipMediaApplicationResponse from '../model/UpdateSipMediaApplicationResponse';
import UpdateSipRuleRequest from '../model/UpdateSipRuleRequest';
import UpdateSipRuleResponse from '../model/UpdateSipRuleResponse';
import UpdateUserRequest from '../model/UpdateUserRequest';
import UpdateUserResponse from '../model/UpdateUserResponse';
import UpdateUserSettingsRequest from '../model/UpdateUserSettingsRequest';
import UpdateVoiceConnectorGroupRequest from '../model/UpdateVoiceConnectorGroupRequest';
import UpdateVoiceConnectorGroupResponse from '../model/UpdateVoiceConnectorGroupResponse';
import UpdateVoiceConnectorRequest from '../model/UpdateVoiceConnectorRequest';
import UpdateVoiceConnectorResponse from '../model/UpdateVoiceConnectorResponse';
import ValidateE911AddressRequest from '../model/ValidateE911AddressRequest';
import ValidateE911AddressResponse from '../model/ValidateE911AddressResponse';

/**
* Default service.
* @module api/DefaultApi
* @version 2018-05-01
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the associatePhoneNumberWithUser operation.
     * @callback module:api/DefaultApi~associatePhoneNumberWithUserCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Associates a phone number with the specified Amazon Chime user.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} userId The user ID.
     * @param {module:model/String} operation 
     * @param {module:model/AssociatePhoneNumberWithUserRequest} associatePhoneNumberWithUserRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~associatePhoneNumberWithUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    associatePhoneNumberWithUser(accountId, userId, operation, associatePhoneNumberWithUserRequest, opts, callback) {
      opts = opts || {};
      let postBody = associatePhoneNumberWithUserRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling associatePhoneNumberWithUser");
      }
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling associatePhoneNumberWithUser");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling associatePhoneNumberWithUser");
      }
      // verify the required parameter 'associatePhoneNumberWithUserRequest' is set
      if (associatePhoneNumberWithUserRequest === undefined || associatePhoneNumberWithUserRequest === null) {
        throw new Error("Missing the required parameter 'associatePhoneNumberWithUserRequest' when calling associatePhoneNumberWithUser");
      }

      let pathParams = {
        'accountId': accountId,
        'userId': userId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/accounts/{accountId}/users/{userId}#operation=associate-phone-number', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the associatePhoneNumbersWithVoiceConnector operation.
     * @callback module:api/DefaultApi~associatePhoneNumbersWithVoiceConnectorCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AssociatePhoneNumbersWithVoiceConnectorResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Associates phone numbers with the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_AssociatePhoneNumbersWithVoiceConnector.html\">AssociatePhoneNumbersWithVoiceConnector</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {module:model/String} operation 
     * @param {module:model/AssociatePhoneNumbersWithVoiceConnectorRequest} associatePhoneNumbersWithVoiceConnectorRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~associatePhoneNumbersWithVoiceConnectorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AssociatePhoneNumbersWithVoiceConnectorResponse}
     */
    associatePhoneNumbersWithVoiceConnector(voiceConnectorId, operation, associatePhoneNumbersWithVoiceConnectorRequest, opts, callback) {
      opts = opts || {};
      let postBody = associatePhoneNumbersWithVoiceConnectorRequest;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling associatePhoneNumbersWithVoiceConnector");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling associatePhoneNumbersWithVoiceConnector");
      }
      // verify the required parameter 'associatePhoneNumbersWithVoiceConnectorRequest' is set
      if (associatePhoneNumbersWithVoiceConnectorRequest === undefined || associatePhoneNumbersWithVoiceConnectorRequest === null) {
        throw new Error("Missing the required parameter 'associatePhoneNumbersWithVoiceConnectorRequest' when calling associatePhoneNumbersWithVoiceConnector");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AssociatePhoneNumbersWithVoiceConnectorResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}#operation=associate-phone-numbers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the associatePhoneNumbersWithVoiceConnectorGroup operation.
     * @callback module:api/DefaultApi~associatePhoneNumbersWithVoiceConnectorGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AssociatePhoneNumbersWithVoiceConnectorGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Associates phone numbers with the specified Amazon Chime Voice Connector group.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_AssociatePhoneNumbersWithVoiceConnectorGroup.html\">AssociatePhoneNumbersWithVoiceConnectorGroup</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorGroupId The Amazon Chime Voice Connector group ID.
     * @param {module:model/String} operation 
     * @param {module:model/AssociatePhoneNumbersWithVoiceConnectorGroupRequest} associatePhoneNumbersWithVoiceConnectorGroupRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~associatePhoneNumbersWithVoiceConnectorGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AssociatePhoneNumbersWithVoiceConnectorGroupResponse}
     */
    associatePhoneNumbersWithVoiceConnectorGroup(voiceConnectorGroupId, operation, associatePhoneNumbersWithVoiceConnectorGroupRequest, opts, callback) {
      opts = opts || {};
      let postBody = associatePhoneNumbersWithVoiceConnectorGroupRequest;
      // verify the required parameter 'voiceConnectorGroupId' is set
      if (voiceConnectorGroupId === undefined || voiceConnectorGroupId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorGroupId' when calling associatePhoneNumbersWithVoiceConnectorGroup");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling associatePhoneNumbersWithVoiceConnectorGroup");
      }
      // verify the required parameter 'associatePhoneNumbersWithVoiceConnectorGroupRequest' is set
      if (associatePhoneNumbersWithVoiceConnectorGroupRequest === undefined || associatePhoneNumbersWithVoiceConnectorGroupRequest === null) {
        throw new Error("Missing the required parameter 'associatePhoneNumbersWithVoiceConnectorGroupRequest' when calling associatePhoneNumbersWithVoiceConnectorGroup");
      }

      let pathParams = {
        'voiceConnectorGroupId': voiceConnectorGroupId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AssociatePhoneNumbersWithVoiceConnectorGroupResponse;
      return this.apiClient.callApi(
        '/voice-connector-groups/{voiceConnectorGroupId}#operation=associate-phone-numbers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the associateSigninDelegateGroupsWithAccount operation.
     * @callback module:api/DefaultApi~associateSigninDelegateGroupsWithAccountCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Associates the specified sign-in delegate groups with the specified Amazon Chime account.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {module:model/String} operation 
     * @param {module:model/AssociateSigninDelegateGroupsWithAccountRequest} associateSigninDelegateGroupsWithAccountRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~associateSigninDelegateGroupsWithAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    associateSigninDelegateGroupsWithAccount(accountId, operation, associateSigninDelegateGroupsWithAccountRequest, opts, callback) {
      opts = opts || {};
      let postBody = associateSigninDelegateGroupsWithAccountRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling associateSigninDelegateGroupsWithAccount");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling associateSigninDelegateGroupsWithAccount");
      }
      // verify the required parameter 'associateSigninDelegateGroupsWithAccountRequest' is set
      if (associateSigninDelegateGroupsWithAccountRequest === undefined || associateSigninDelegateGroupsWithAccountRequest === null) {
        throw new Error("Missing the required parameter 'associateSigninDelegateGroupsWithAccountRequest' when calling associateSigninDelegateGroupsWithAccount");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/accounts/{accountId}#operation=associate-signin-delegate-groups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchCreateAttendee operation.
     * @callback module:api/DefaultApi~batchCreateAttendeeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchCreateAttendeeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates up to 100 new attendees for an active Amazon Chime SDK meeting.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_BatchCreateAttendee.html\">BatchCreateAttendee</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important> <p>For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime SDK Developer Guide</i>. </p>
     * @param {String} meetingId The Amazon Chime SDK meeting ID.
     * @param {module:model/String} operation 
     * @param {module:model/BatchCreateAttendeeRequest} batchCreateAttendeeRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~batchCreateAttendeeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchCreateAttendeeResponse}
     */
    batchCreateAttendee(meetingId, operation, batchCreateAttendeeRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchCreateAttendeeRequest;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling batchCreateAttendee");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling batchCreateAttendee");
      }
      // verify the required parameter 'batchCreateAttendeeRequest' is set
      if (batchCreateAttendeeRequest === undefined || batchCreateAttendeeRequest === null) {
        throw new Error("Missing the required parameter 'batchCreateAttendeeRequest' when calling batchCreateAttendee");
      }

      let pathParams = {
        'meetingId': meetingId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchCreateAttendeeResponse;
      return this.apiClient.callApi(
        '/meetings/{meetingId}/attendees#operation=batch-create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchCreateChannelMembership operation.
     * @callback module:api/DefaultApi~batchCreateChannelMembershipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchCreateChannelMembershipResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds a specified number of users to a channel.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_BatchCreateChannelMembership.html\">BatchCreateChannelMembership</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel to which you're adding users.
     * @param {module:model/String} operation 
     * @param {module:model/BatchCreateChannelMembershipRequest} batchCreateChannelMembershipRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~batchCreateChannelMembershipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchCreateChannelMembershipResponse}
     */
    batchCreateChannelMembership(channelArn, operation, batchCreateChannelMembershipRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchCreateChannelMembershipRequest;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling batchCreateChannelMembership");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling batchCreateChannelMembership");
      }
      // verify the required parameter 'batchCreateChannelMembershipRequest' is set
      if (batchCreateChannelMembershipRequest === undefined || batchCreateChannelMembershipRequest === null) {
        throw new Error("Missing the required parameter 'batchCreateChannelMembershipRequest' when calling batchCreateChannelMembership");
      }

      let pathParams = {
        'channelArn': channelArn
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchCreateChannelMembershipResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/memberships#operation=batch-create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchCreateRoomMembership operation.
     * @callback module:api/DefaultApi~batchCreateRoomMembershipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchCreateRoomMembershipResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds up to 50 members to a chat room in an Amazon Chime Enterprise account. Members can be users or bots. The member role designates whether the member is a chat room administrator or a general chat room member.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} roomId The room ID.
     * @param {module:model/String} operation 
     * @param {module:model/BatchCreateRoomMembershipRequest} batchCreateRoomMembershipRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~batchCreateRoomMembershipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchCreateRoomMembershipResponse}
     */
    batchCreateRoomMembership(accountId, roomId, operation, batchCreateRoomMembershipRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchCreateRoomMembershipRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling batchCreateRoomMembership");
      }
      // verify the required parameter 'roomId' is set
      if (roomId === undefined || roomId === null) {
        throw new Error("Missing the required parameter 'roomId' when calling batchCreateRoomMembership");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling batchCreateRoomMembership");
      }
      // verify the required parameter 'batchCreateRoomMembershipRequest' is set
      if (batchCreateRoomMembershipRequest === undefined || batchCreateRoomMembershipRequest === null) {
        throw new Error("Missing the required parameter 'batchCreateRoomMembershipRequest' when calling batchCreateRoomMembership");
      }

      let pathParams = {
        'accountId': accountId,
        'roomId': roomId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchCreateRoomMembershipResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/rooms/{roomId}/memberships#operation=batch-create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchDeletePhoneNumber operation.
     * @callback module:api/DefaultApi~batchDeletePhoneNumberCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchDeletePhoneNumberResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p> Moves phone numbers into the <b>Deletion queue</b>. Phone numbers must be disassociated from any users or Amazon Chime Voice Connectors before they can be deleted. </p> <p> Phone numbers remain in the <b>Deletion queue</b> for 7 days before they are deleted permanently. </p>
     * @param {module:model/String} operation 
     * @param {module:model/BatchDeletePhoneNumberRequest} batchDeletePhoneNumberRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~batchDeletePhoneNumberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchDeletePhoneNumberResponse}
     */
    batchDeletePhoneNumber(operation, batchDeletePhoneNumberRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchDeletePhoneNumberRequest;
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling batchDeletePhoneNumber");
      }
      // verify the required parameter 'batchDeletePhoneNumberRequest' is set
      if (batchDeletePhoneNumberRequest === undefined || batchDeletePhoneNumberRequest === null) {
        throw new Error("Missing the required parameter 'batchDeletePhoneNumberRequest' when calling batchDeletePhoneNumber");
      }

      let pathParams = {
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchDeletePhoneNumberResponse;
      return this.apiClient.callApi(
        '/phone-numbers#operation=batch-delete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchSuspendUser operation.
     * @callback module:api/DefaultApi~batchSuspendUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchSuspendUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Suspends up to 50 users from a <code>Team</code> or <code>EnterpriseLWA</code> Amazon Chime account. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.</p> <p>Users suspended from a <code>Team</code> account are disassociated from the account,but they can continue to use Amazon Chime as free users. To remove the suspension from suspended <code>Team</code> account users, invite them to the <code>Team</code> account again. You can use the <a>InviteUsers</a> action to do so.</p> <p>Users suspended from an <code>EnterpriseLWA</code> account are immediately signed out of Amazon Chime and can no longer sign in. To remove the suspension from suspended <code>EnterpriseLWA</code> account users, use the <a>BatchUnsuspendUser</a> action.</p> <p> To sign out users without suspending them, use the <a>LogoutUser</a> action.</p>
     * @param {String} accountId The Amazon Chime account ID.
     * @param {module:model/String} operation 
     * @param {module:model/BatchSuspendUserRequest} batchSuspendUserRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~batchSuspendUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchSuspendUserResponse}
     */
    batchSuspendUser(accountId, operation, batchSuspendUserRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchSuspendUserRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling batchSuspendUser");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling batchSuspendUser");
      }
      // verify the required parameter 'batchSuspendUserRequest' is set
      if (batchSuspendUserRequest === undefined || batchSuspendUserRequest === null) {
        throw new Error("Missing the required parameter 'batchSuspendUserRequest' when calling batchSuspendUser");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchSuspendUserResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/users#operation=suspend', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchUnsuspendUser operation.
     * @callback module:api/DefaultApi~batchUnsuspendUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchUnsuspendUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Removes the suspension from up to 50 previously suspended users for the specified Amazon Chime <code>EnterpriseLWA</code> account. Only users on <code>EnterpriseLWA</code> accounts can be unsuspended using this action. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\"> Managing Your Amazon Chime Accounts </a> in the account types, in the <i>Amazon Chime Administration Guide</i>. </p> <p>Previously suspended users who are unsuspended using this action are returned to <code>Registered</code> status. Users who are not previously suspended are ignored.</p>
     * @param {String} accountId The Amazon Chime account ID.
     * @param {module:model/String} operation 
     * @param {module:model/BatchUnsuspendUserRequest} batchUnsuspendUserRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~batchUnsuspendUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchUnsuspendUserResponse}
     */
    batchUnsuspendUser(accountId, operation, batchUnsuspendUserRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchUnsuspendUserRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling batchUnsuspendUser");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling batchUnsuspendUser");
      }
      // verify the required parameter 'batchUnsuspendUserRequest' is set
      if (batchUnsuspendUserRequest === undefined || batchUnsuspendUserRequest === null) {
        throw new Error("Missing the required parameter 'batchUnsuspendUserRequest' when calling batchUnsuspendUser");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchUnsuspendUserResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/users#operation=unsuspend', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchUpdatePhoneNumber operation.
     * @callback module:api/DefaultApi~batchUpdatePhoneNumberCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchUpdatePhoneNumberResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates phone number product types or calling names. You can update one attribute at a time for each <code>UpdatePhoneNumberRequestItem</code>. For example, you can update the product type or the calling name.</p> <p>For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.</p> <p>Updates to outbound calling names can take up to 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.</p>
     * @param {module:model/String} operation 
     * @param {module:model/BatchUpdatePhoneNumberRequest} batchUpdatePhoneNumberRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~batchUpdatePhoneNumberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchUpdatePhoneNumberResponse}
     */
    batchUpdatePhoneNumber(operation, batchUpdatePhoneNumberRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchUpdatePhoneNumberRequest;
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling batchUpdatePhoneNumber");
      }
      // verify the required parameter 'batchUpdatePhoneNumberRequest' is set
      if (batchUpdatePhoneNumberRequest === undefined || batchUpdatePhoneNumberRequest === null) {
        throw new Error("Missing the required parameter 'batchUpdatePhoneNumberRequest' when calling batchUpdatePhoneNumber");
      }

      let pathParams = {
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchUpdatePhoneNumberResponse;
      return this.apiClient.callApi(
        '/phone-numbers#operation=batch-update', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchUpdateUser operation.
     * @callback module:api/DefaultApi~batchUpdateUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchUpdateUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates user details within the <a>UpdateUserRequestItem</a> object for up to 20 users for the specified Amazon Chime account. Currently, only <code>LicenseType</code> updates are supported for this action.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {module:model/BatchUpdateUserRequest} batchUpdateUserRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~batchUpdateUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchUpdateUserResponse}
     */
    batchUpdateUser(accountId, batchUpdateUserRequest, opts, callback) {
      opts = opts || {};
      let postBody = batchUpdateUserRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling batchUpdateUser");
      }
      // verify the required parameter 'batchUpdateUserRequest' is set
      if (batchUpdateUserRequest === undefined || batchUpdateUserRequest === null) {
        throw new Error("Missing the required parameter 'batchUpdateUserRequest' when calling batchUpdateUser");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchUpdateUserResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/users', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createAccount operation.
     * @callback module:api/DefaultApi~createAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an Amazon Chime account under the administrator's AWS account. Only <code>Team</code> account types are currently supported for this action. For more information about different account types, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html\">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.
     * @param {module:model/CreateAccountRequest} createAccountRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAccountResponse}
     */
    createAccount(createAccountRequest, opts, callback) {
      opts = opts || {};
      let postBody = createAccountRequest;
      // verify the required parameter 'createAccountRequest' is set
      if (createAccountRequest === undefined || createAccountRequest === null) {
        throw new Error("Missing the required parameter 'createAccountRequest' when calling createAccount");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAccountResponse;
      return this.apiClient.callApi(
        '/accounts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createAppInstance operation.
     * @callback module:api/DefaultApi~createAppInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAppInstanceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates an Amazon Chime SDK messaging <code>AppInstance</code> under an AWS account. Only SDK messaging customers use this API. <code>CreateAppInstance</code> supports idempotency behavior as described in the AWS API Standard.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_CreateAppInstance.html\">CreateAppInstance</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {module:model/CreateAppInstanceRequest} createAppInstanceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createAppInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAppInstanceResponse}
     */
    createAppInstance(createAppInstanceRequest, opts, callback) {
      opts = opts || {};
      let postBody = createAppInstanceRequest;
      // verify the required parameter 'createAppInstanceRequest' is set
      if (createAppInstanceRequest === undefined || createAppInstanceRequest === null) {
        throw new Error("Missing the required parameter 'createAppInstanceRequest' when calling createAppInstance");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAppInstanceResponse;
      return this.apiClient.callApi(
        '/app-instances', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createAppInstanceAdmin operation.
     * @callback module:api/DefaultApi~createAppInstanceAdminCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAppInstanceAdminResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Promotes an <code>AppInstanceUser</code> to an <code>AppInstanceAdmin</code>. The promoted user can perform the following actions. </p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_CreateAppInstanceAdmin.html\">CreateAppInstanceAdmin</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important> <ul> <li> <p> <code>ChannelModerator</code> actions across all channels in the <code>AppInstance</code>.</p> </li> <li> <p> <code>DeleteChannelMessage</code> actions.</p> </li> </ul> <p>Only an <code>AppInstanceUser</code> can be promoted to an <code>AppInstanceAdmin</code> role.</p>
     * @param {String} appInstanceArn The ARN of the <code>AppInstance</code>.
     * @param {module:model/CreateAppInstanceAdminRequest} createAppInstanceAdminRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createAppInstanceAdminCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAppInstanceAdminResponse}
     */
    createAppInstanceAdmin(appInstanceArn, createAppInstanceAdminRequest, opts, callback) {
      opts = opts || {};
      let postBody = createAppInstanceAdminRequest;
      // verify the required parameter 'appInstanceArn' is set
      if (appInstanceArn === undefined || appInstanceArn === null) {
        throw new Error("Missing the required parameter 'appInstanceArn' when calling createAppInstanceAdmin");
      }
      // verify the required parameter 'createAppInstanceAdminRequest' is set
      if (createAppInstanceAdminRequest === undefined || createAppInstanceAdminRequest === null) {
        throw new Error("Missing the required parameter 'createAppInstanceAdminRequest' when calling createAppInstanceAdmin");
      }

      let pathParams = {
        'appInstanceArn': appInstanceArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAppInstanceAdminResponse;
      return this.apiClient.callApi(
        '/app-instances/{appInstanceArn}/admins', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createAppInstanceUser operation.
     * @callback module:api/DefaultApi~createAppInstanceUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAppInstanceUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a user under an Amazon Chime <code>AppInstance</code>. The request consists of a unique <code>appInstanceUserId</code> and <code>Name</code> for that user.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_CreateAppInstanceUser.html\">CreateAppInstanceUser</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {module:model/CreateAppInstanceUserRequest} createAppInstanceUserRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createAppInstanceUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAppInstanceUserResponse}
     */
    createAppInstanceUser(createAppInstanceUserRequest, opts, callback) {
      opts = opts || {};
      let postBody = createAppInstanceUserRequest;
      // verify the required parameter 'createAppInstanceUserRequest' is set
      if (createAppInstanceUserRequest === undefined || createAppInstanceUserRequest === null) {
        throw new Error("Missing the required parameter 'createAppInstanceUserRequest' when calling createAppInstanceUser");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAppInstanceUserResponse;
      return this.apiClient.callApi(
        '/app-instance-users', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createAttendee operation.
     * @callback module:api/DefaultApi~createAttendeeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAttendeeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p> Creates a new attendee for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime SDK Developer Guide</i>. </p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_CreateAttendee.html\">CreateAttendee</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} meetingId The Amazon Chime SDK meeting ID.
     * @param {module:model/CreateAttendeeRequest} createAttendeeRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createAttendeeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAttendeeResponse}
     */
    createAttendee(meetingId, createAttendeeRequest, opts, callback) {
      opts = opts || {};
      let postBody = createAttendeeRequest;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling createAttendee");
      }
      // verify the required parameter 'createAttendeeRequest' is set
      if (createAttendeeRequest === undefined || createAttendeeRequest === null) {
        throw new Error("Missing the required parameter 'createAttendeeRequest' when calling createAttendee");
      }

      let pathParams = {
        'meetingId': meetingId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateAttendeeResponse;
      return this.apiClient.callApi(
        '/meetings/{meetingId}/attendees', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createBot operation.
     * @callback module:api/DefaultApi~createBotCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateBotResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a bot for an Amazon Chime Enterprise account.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {module:model/CreateBotRequest} createBotRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createBotCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateBotResponse}
     */
    createBot(accountId, createBotRequest, opts, callback) {
      opts = opts || {};
      let postBody = createBotRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling createBot");
      }
      // verify the required parameter 'createBotRequest' is set
      if (createBotRequest === undefined || createBotRequest === null) {
        throw new Error("Missing the required parameter 'createBotRequest' when calling createBot");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateBotResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/bots', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createChannel operation.
     * @callback module:api/DefaultApi~createChannelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateChannelResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a channel to which you can add users and send messages.</p> <p> <b>Restriction</b>: You can't change a channel's privacy.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_CreateChannel.html\">CreateChannel</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {module:model/CreateChannelRequest} createChannelRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~createChannelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateChannelResponse}
     */
    createChannel(createChannelRequest, opts, callback) {
      opts = opts || {};
      let postBody = createChannelRequest;
      // verify the required parameter 'createChannelRequest' is set
      if (createChannelRequest === undefined || createChannelRequest === null) {
        throw new Error("Missing the required parameter 'createChannelRequest' when calling createChannel");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateChannelResponse;
      return this.apiClient.callApi(
        '/channels', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createChannelBan operation.
     * @callback module:api/DefaultApi~createChannelBanCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateChannelBanResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Permanently bans a member from a channel. Moderators can't add banned members to a channel. To undo a ban, you first have to <code>DeleteChannelBan</code>, and then <code>CreateChannelMembership</code>. Bans are cleaned up when you delete users or channels.</p> <p>If you ban a user who is already part of a channel, that user is automatically kicked from the channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_CreateChannelBan.html\">CreateChannelBan</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the ban request.
     * @param {module:model/CreateChannelBanRequest} createChannelBanRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~createChannelBanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateChannelBanResponse}
     */
    createChannelBan(channelArn, createChannelBanRequest, opts, callback) {
      opts = opts || {};
      let postBody = createChannelBanRequest;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling createChannelBan");
      }
      // verify the required parameter 'createChannelBanRequest' is set
      if (createChannelBanRequest === undefined || createChannelBanRequest === null) {
        throw new Error("Missing the required parameter 'createChannelBanRequest' when calling createChannelBan");
      }

      let pathParams = {
        'channelArn': channelArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateChannelBanResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/bans', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createChannelMembership operation.
     * @callback module:api/DefaultApi~createChannelMembershipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateChannelMembershipResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds a user to a channel. The <code>InvitedBy</code> response field is derived from the request header. A channel member can:</p> <ul> <li> <p>List messages</p> </li> <li> <p>Send messages</p> </li> <li> <p>Receive messages</p> </li> <li> <p>Edit their own messages</p> </li> <li> <p>Leave the channel</p> </li> </ul> <p>Privacy settings impact this action as follows:</p> <ul> <li> <p>Public Channels: You do not need to be a member to list messages, but you must be a member to send messages.</p> </li> <li> <p>Private Channels: You must be a member to list or send messages.</p> </li> </ul> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_CreateChannelMembership.html\">CreateChannelMembership</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel to which you're adding users.
     * @param {module:model/CreateChannelMembershipRequest} createChannelMembershipRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~createChannelMembershipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateChannelMembershipResponse}
     */
    createChannelMembership(channelArn, createChannelMembershipRequest, opts, callback) {
      opts = opts || {};
      let postBody = createChannelMembershipRequest;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling createChannelMembership");
      }
      // verify the required parameter 'createChannelMembershipRequest' is set
      if (createChannelMembershipRequest === undefined || createChannelMembershipRequest === null) {
        throw new Error("Missing the required parameter 'createChannelMembershipRequest' when calling createChannelMembership");
      }

      let pathParams = {
        'channelArn': channelArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateChannelMembershipResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/memberships', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createChannelModerator operation.
     * @callback module:api/DefaultApi~createChannelModeratorCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateChannelModeratorResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a new <code>ChannelModerator</code>. A channel moderator can:</p> <ul> <li> <p>Add and remove other members of the channel.</p> </li> <li> <p>Add and remove other moderators of the channel.</p> </li> <li> <p>Add and remove user bans for the channel.</p> </li> <li> <p>Redact messages in the channel.</p> </li> <li> <p>List messages in the channel.</p> </li> </ul> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_CreateChannelModerator.html\">CreateChannelModerator</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel.
     * @param {module:model/CreateChannelModeratorRequest} createChannelModeratorRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~createChannelModeratorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateChannelModeratorResponse}
     */
    createChannelModerator(channelArn, createChannelModeratorRequest, opts, callback) {
      opts = opts || {};
      let postBody = createChannelModeratorRequest;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling createChannelModerator");
      }
      // verify the required parameter 'createChannelModeratorRequest' is set
      if (createChannelModeratorRequest === undefined || createChannelModeratorRequest === null) {
        throw new Error("Missing the required parameter 'createChannelModeratorRequest' when calling createChannelModerator");
      }

      let pathParams = {
        'channelArn': channelArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateChannelModeratorResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/moderators', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createMediaCapturePipeline operation.
     * @callback module:api/DefaultApi~createMediaCapturePipelineCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateMediaCapturePipelineResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a media capture pipeline.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_media-pipelines-chime_CreateMediaCapturePipeline\">CreateMediaCapturePipeline</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {module:model/CreateMediaCapturePipelineRequest} createMediaCapturePipelineRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createMediaCapturePipelineCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateMediaCapturePipelineResponse}
     */
    createMediaCapturePipeline(createMediaCapturePipelineRequest, opts, callback) {
      opts = opts || {};
      let postBody = createMediaCapturePipelineRequest;
      // verify the required parameter 'createMediaCapturePipelineRequest' is set
      if (createMediaCapturePipelineRequest === undefined || createMediaCapturePipelineRequest === null) {
        throw new Error("Missing the required parameter 'createMediaCapturePipelineRequest' when calling createMediaCapturePipeline");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateMediaCapturePipelineResponse;
      return this.apiClient.callApi(
        '/media-capture-pipelines', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createMeeting operation.
     * @callback module:api/DefaultApi~createMeetingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateMeetingResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a new Amazon Chime SDK meeting in the specified media Region with no initial attendees. For more information about specifying media Regions, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/chime-sdk-meetings-regions.html\">Amazon Chime SDK Media Regions</a> in the <i>Amazon Chime SDK Developer Guide</i> . For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_CreateMeeting.html\">CreateMeeting</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {module:model/CreateMeetingRequest} createMeetingRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createMeetingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateMeetingResponse}
     */
    createMeeting(createMeetingRequest, opts, callback) {
      opts = opts || {};
      let postBody = createMeetingRequest;
      // verify the required parameter 'createMeetingRequest' is set
      if (createMeetingRequest === undefined || createMeetingRequest === null) {
        throw new Error("Missing the required parameter 'createMeetingRequest' when calling createMeeting");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateMeetingResponse;
      return this.apiClient.callApi(
        '/meetings', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createMeetingDialOut operation.
     * @callback module:api/DefaultApi~createMeetingDialOutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateMeetingDialOutResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Uses the join token and call metadata in a meeting request (From number, To number, and so forth) to initiate an outbound call to a public switched telephone network (PSTN) and join them into a Chime meeting. Also ensures that the From number belongs to the customer.</p> <p>To play welcome audio or implement an interactive voice response (IVR), use the <code>CreateSipMediaApplicationCall</code> action with the corresponding SIP media application ID.</p> <important> <p> <b>This API is is not available in a dedicated namespace.</b> </p> </important>
     * @param {String} meetingId The Amazon Chime SDK meeting ID.
     * @param {module:model/CreateMeetingDialOutRequest} createMeetingDialOutRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createMeetingDialOutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateMeetingDialOutResponse}
     */
    createMeetingDialOut(meetingId, createMeetingDialOutRequest, opts, callback) {
      opts = opts || {};
      let postBody = createMeetingDialOutRequest;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling createMeetingDialOut");
      }
      // verify the required parameter 'createMeetingDialOutRequest' is set
      if (createMeetingDialOutRequest === undefined || createMeetingDialOutRequest === null) {
        throw new Error("Missing the required parameter 'createMeetingDialOutRequest' when calling createMeetingDialOut");
      }

      let pathParams = {
        'meetingId': meetingId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateMeetingDialOutResponse;
      return this.apiClient.callApi(
        '/meetings/{meetingId}/dial-outs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createMeetingWithAttendees operation.
     * @callback module:api/DefaultApi~createMeetingWithAttendeesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateMeetingWithAttendeesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p> Creates a new Amazon Chime SDK meeting in the specified media Region, with attendees. For more information about specifying media Regions, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/chime-sdk-meetings-regions.html\">Amazon Chime SDK Media Regions</a> in the <i>Amazon Chime SDK Developer Guide</i> . For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime SDK Developer Guide</i> . </p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_CreateMeetingWithAttendees.html\">CreateMeetingWithAttendees</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {module:model/String} operation 
     * @param {module:model/CreateMeetingWithAttendeesRequest} createMeetingWithAttendeesRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createMeetingWithAttendeesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateMeetingWithAttendeesResponse}
     */
    createMeetingWithAttendees(operation, createMeetingWithAttendeesRequest, opts, callback) {
      opts = opts || {};
      let postBody = createMeetingWithAttendeesRequest;
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling createMeetingWithAttendees");
      }
      // verify the required parameter 'createMeetingWithAttendeesRequest' is set
      if (createMeetingWithAttendeesRequest === undefined || createMeetingWithAttendeesRequest === null) {
        throw new Error("Missing the required parameter 'createMeetingWithAttendeesRequest' when calling createMeetingWithAttendees");
      }

      let pathParams = {
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateMeetingWithAttendeesResponse;
      return this.apiClient.callApi(
        '/meetings#operation=create-attendees', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createPhoneNumberOrder operation.
     * @callback module:api/DefaultApi~createPhoneNumberOrderCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreatePhoneNumberOrderResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an order for phone numbers to be provisioned. For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.
     * @param {module:model/CreatePhoneNumberOrderRequest} createPhoneNumberOrderRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createPhoneNumberOrderCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreatePhoneNumberOrderResponse}
     */
    createPhoneNumberOrder(createPhoneNumberOrderRequest, opts, callback) {
      opts = opts || {};
      let postBody = createPhoneNumberOrderRequest;
      // verify the required parameter 'createPhoneNumberOrderRequest' is set
      if (createPhoneNumberOrderRequest === undefined || createPhoneNumberOrderRequest === null) {
        throw new Error("Missing the required parameter 'createPhoneNumberOrderRequest' when calling createPhoneNumberOrder");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreatePhoneNumberOrderResponse;
      return this.apiClient.callApi(
        '/phone-number-orders', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createProxySession operation.
     * @callback module:api/DefaultApi~createProxySessionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateProxySessionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a proxy session on the specified Amazon Chime Voice Connector for the specified participant phone numbers.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_CreateProxySession.html\">CreateProxySession</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime voice connector ID.
     * @param {module:model/CreateProxySessionRequest} createProxySessionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createProxySessionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateProxySessionResponse}
     */
    createProxySession(voiceConnectorId, createProxySessionRequest, opts, callback) {
      opts = opts || {};
      let postBody = createProxySessionRequest;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling createProxySession");
      }
      // verify the required parameter 'createProxySessionRequest' is set
      if (createProxySessionRequest === undefined || createProxySessionRequest === null) {
        throw new Error("Missing the required parameter 'createProxySessionRequest' when calling createProxySession");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateProxySessionResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/proxy-sessions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createRoom operation.
     * @callback module:api/DefaultApi~createRoomCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateRoomResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a chat room for the specified Amazon Chime Enterprise account.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {module:model/CreateRoomRequest} createRoomRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createRoomCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateRoomResponse}
     */
    createRoom(accountId, createRoomRequest, opts, callback) {
      opts = opts || {};
      let postBody = createRoomRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling createRoom");
      }
      // verify the required parameter 'createRoomRequest' is set
      if (createRoomRequest === undefined || createRoomRequest === null) {
        throw new Error("Missing the required parameter 'createRoomRequest' when calling createRoom");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateRoomResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/rooms', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createRoomMembership operation.
     * @callback module:api/DefaultApi~createRoomMembershipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateRoomMembershipResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds a member to a chat room in an Amazon Chime Enterprise account. A member can be either a user or a bot. The member role designates whether the member is a chat room administrator or a general chat room member.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} roomId The room ID.
     * @param {module:model/CreateRoomMembershipRequest} createRoomMembershipRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createRoomMembershipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateRoomMembershipResponse}
     */
    createRoomMembership(accountId, roomId, createRoomMembershipRequest, opts, callback) {
      opts = opts || {};
      let postBody = createRoomMembershipRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling createRoomMembership");
      }
      // verify the required parameter 'roomId' is set
      if (roomId === undefined || roomId === null) {
        throw new Error("Missing the required parameter 'roomId' when calling createRoomMembership");
      }
      // verify the required parameter 'createRoomMembershipRequest' is set
      if (createRoomMembershipRequest === undefined || createRoomMembershipRequest === null) {
        throw new Error("Missing the required parameter 'createRoomMembershipRequest' when calling createRoomMembership");
      }

      let pathParams = {
        'accountId': accountId,
        'roomId': roomId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateRoomMembershipResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/rooms/{roomId}/memberships', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createSipMediaApplication operation.
     * @callback module:api/DefaultApi~createSipMediaApplicationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateSipMediaApplicationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a SIP media application.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_CreateSipMediaApplication.html\">CreateSipMediaApplication</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {module:model/CreateSipMediaApplicationRequest} createSipMediaApplicationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createSipMediaApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateSipMediaApplicationResponse}
     */
    createSipMediaApplication(createSipMediaApplicationRequest, opts, callback) {
      opts = opts || {};
      let postBody = createSipMediaApplicationRequest;
      // verify the required parameter 'createSipMediaApplicationRequest' is set
      if (createSipMediaApplicationRequest === undefined || createSipMediaApplicationRequest === null) {
        throw new Error("Missing the required parameter 'createSipMediaApplicationRequest' when calling createSipMediaApplication");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateSipMediaApplicationResponse;
      return this.apiClient.callApi(
        '/sip-media-applications', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createSipMediaApplicationCall operation.
     * @callback module:api/DefaultApi~createSipMediaApplicationCallCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateSipMediaApplicationCallResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates an outbound call to a phone number from the phone number specified in the request, and it invokes the endpoint of the specified <code>sipMediaApplicationId</code>.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_CreateSipMediaApplicationCall.html\">CreateSipMediaApplicationCall</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} sipMediaApplicationId The ID of the SIP media application.
     * @param {module:model/CreateSipMediaApplicationCallRequest} createSipMediaApplicationCallRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createSipMediaApplicationCallCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateSipMediaApplicationCallResponse}
     */
    createSipMediaApplicationCall(sipMediaApplicationId, createSipMediaApplicationCallRequest, opts, callback) {
      opts = opts || {};
      let postBody = createSipMediaApplicationCallRequest;
      // verify the required parameter 'sipMediaApplicationId' is set
      if (sipMediaApplicationId === undefined || sipMediaApplicationId === null) {
        throw new Error("Missing the required parameter 'sipMediaApplicationId' when calling createSipMediaApplicationCall");
      }
      // verify the required parameter 'createSipMediaApplicationCallRequest' is set
      if (createSipMediaApplicationCallRequest === undefined || createSipMediaApplicationCallRequest === null) {
        throw new Error("Missing the required parameter 'createSipMediaApplicationCallRequest' when calling createSipMediaApplicationCall");
      }

      let pathParams = {
        'sipMediaApplicationId': sipMediaApplicationId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateSipMediaApplicationCallResponse;
      return this.apiClient.callApi(
        '/sip-media-applications/{sipMediaApplicationId}/calls', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createSipRule operation.
     * @callback module:api/DefaultApi~createSipRuleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateSipRuleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates a SIP rule which can be used to run a SIP media application as a target for a specific trigger type.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_CreateSipRule.html\">CreateSipRule</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {module:model/CreateSipRuleRequest} createSipRuleRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createSipRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateSipRuleResponse}
     */
    createSipRule(createSipRuleRequest, opts, callback) {
      opts = opts || {};
      let postBody = createSipRuleRequest;
      // verify the required parameter 'createSipRuleRequest' is set
      if (createSipRuleRequest === undefined || createSipRuleRequest === null) {
        throw new Error("Missing the required parameter 'createSipRuleRequest' when calling createSipRule");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateSipRuleResponse;
      return this.apiClient.callApi(
        '/sip-rules', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createUser operation.
     * @callback module:api/DefaultApi~createUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a user under the specified Amazon Chime account.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {module:model/String} operation 
     * @param {module:model/CreateUserRequest} createUserRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateUserResponse}
     */
    createUser(accountId, operation, createUserRequest, opts, callback) {
      opts = opts || {};
      let postBody = createUserRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling createUser");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling createUser");
      }
      // verify the required parameter 'createUserRequest' is set
      if (createUserRequest === undefined || createUserRequest === null) {
        throw new Error("Missing the required parameter 'createUserRequest' when calling createUser");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateUserResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/users#operation=create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createVoiceConnector operation.
     * @callback module:api/DefaultApi~createVoiceConnectorCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateVoiceConnectorResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates an Amazon Chime Voice Connector under the administrator's AWS account. You can choose to create an Amazon Chime Voice Connector in a specific AWS Region.</p> <p>Enabling <a>CreateVoiceConnectorRequest$RequireEncryption</a> configures your Amazon Chime Voice Connector to use TLS transport for SIP signaling and Secure RTP (SRTP) for media. Inbound calls use TLS transport, and unencrypted outbound calls are blocked. </p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_CreateVoiceConnector.html\">CreateVoiceConnector</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {module:model/CreateVoiceConnectorRequest} createVoiceConnectorRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createVoiceConnectorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateVoiceConnectorResponse}
     */
    createVoiceConnector(createVoiceConnectorRequest, opts, callback) {
      opts = opts || {};
      let postBody = createVoiceConnectorRequest;
      // verify the required parameter 'createVoiceConnectorRequest' is set
      if (createVoiceConnectorRequest === undefined || createVoiceConnectorRequest === null) {
        throw new Error("Missing the required parameter 'createVoiceConnectorRequest' when calling createVoiceConnector");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateVoiceConnectorResponse;
      return this.apiClient.callApi(
        '/voice-connectors', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createVoiceConnectorGroup operation.
     * @callback module:api/DefaultApi~createVoiceConnectorGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateVoiceConnectorGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Creates an Amazon Chime Voice Connector group under the administrator's AWS account. You can associate Amazon Chime Voice Connectors with the Amazon Chime Voice Connector group by including <code>VoiceConnectorItems</code> in the request.</p> <p>You can include Amazon Chime Voice Connectors from different AWS Regions in your group. This creates a fault tolerant mechanism for fallback in case of availability events.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_CreateVoiceConnectorGroup.html\">CreateVoiceConnectorGroup</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {module:model/CreateVoiceConnectorGroupRequest} createVoiceConnectorGroupRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~createVoiceConnectorGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateVoiceConnectorGroupResponse}
     */
    createVoiceConnectorGroup(createVoiceConnectorGroupRequest, opts, callback) {
      opts = opts || {};
      let postBody = createVoiceConnectorGroupRequest;
      // verify the required parameter 'createVoiceConnectorGroupRequest' is set
      if (createVoiceConnectorGroupRequest === undefined || createVoiceConnectorGroupRequest === null) {
        throw new Error("Missing the required parameter 'createVoiceConnectorGroupRequest' when calling createVoiceConnectorGroup");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateVoiceConnectorGroupResponse;
      return this.apiClient.callApi(
        '/voice-connector-groups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAccount operation.
     * @callback module:api/DefaultApi~deleteAccountCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified Amazon Chime account. You must suspend all users before deleting <code>Team</code> account. You can use the <a>BatchSuspendUser</a> action to dodo.</p> <p>For <code>EnterpriseLWA</code> and <code>EnterpriseAD</code> accounts, you must release the claimed domains for your Amazon Chime account before deletion. As soon as you release the domain, all users under that account are suspended.</p> <p>Deleted accounts appear in your <code>Disabled</code> accounts list for 90 days. To restore deleted account from your <code>Disabled</code> accounts list, you must contact AWS Support.</p> <p>After 90 days, deleted accounts are permanently removed from your <code>Disabled</code> accounts list.</p>
     * @param {String} accountId The Amazon Chime account ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteAccount(accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling deleteAccount");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/accounts/{accountId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAppInstance operation.
     * @callback module:api/DefaultApi~deleteAppInstanceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes an <code>AppInstance</code> and all associated data asynchronously.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_DeleteAppInstance.html\">DeleteAppInstance</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceArn The ARN of the <code>AppInstance</code>.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteAppInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteAppInstance(appInstanceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'appInstanceArn' is set
      if (appInstanceArn === undefined || appInstanceArn === null) {
        throw new Error("Missing the required parameter 'appInstanceArn' when calling deleteAppInstance");
      }

      let pathParams = {
        'appInstanceArn': appInstanceArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/app-instances/{appInstanceArn}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAppInstanceAdmin operation.
     * @callback module:api/DefaultApi~deleteAppInstanceAdminCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Demotes an <code>AppInstanceAdmin</code> to an <code>AppInstanceUser</code>. This action does not delete the user.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_DeleteAppInstanceAdmin.html\">DeleteAppInstanceAdmin</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceAdminArn The ARN of the <code>AppInstance</code>'s administrator.
     * @param {String} appInstanceArn The ARN of the <code>AppInstance</code>.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteAppInstanceAdminCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteAppInstanceAdmin(appInstanceAdminArn, appInstanceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'appInstanceAdminArn' is set
      if (appInstanceAdminArn === undefined || appInstanceAdminArn === null) {
        throw new Error("Missing the required parameter 'appInstanceAdminArn' when calling deleteAppInstanceAdmin");
      }
      // verify the required parameter 'appInstanceArn' is set
      if (appInstanceArn === undefined || appInstanceArn === null) {
        throw new Error("Missing the required parameter 'appInstanceArn' when calling deleteAppInstanceAdmin");
      }

      let pathParams = {
        'appInstanceAdminArn': appInstanceAdminArn,
        'appInstanceArn': appInstanceArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/app-instances/{appInstanceArn}/admins/{appInstanceAdminArn}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAppInstanceStreamingConfigurations operation.
     * @callback module:api/DefaultApi~deleteAppInstanceStreamingConfigurationsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the streaming configurations of an <code>AppInstance</code>.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_DeleteAppInstanceStreamingConfigurations.html\">DeleteAppInstanceStreamingConfigurations</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceArn The ARN of the streaming configurations being deleted.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteAppInstanceStreamingConfigurationsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteAppInstanceStreamingConfigurations(appInstanceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'appInstanceArn' is set
      if (appInstanceArn === undefined || appInstanceArn === null) {
        throw new Error("Missing the required parameter 'appInstanceArn' when calling deleteAppInstanceStreamingConfigurations");
      }

      let pathParams = {
        'appInstanceArn': appInstanceArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/app-instances/{appInstanceArn}/streaming-configurations', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAppInstanceUser operation.
     * @callback module:api/DefaultApi~deleteAppInstanceUserCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes an <code>AppInstanceUser</code>.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_DeleteAppInstanceUser.html\">DeleteAppInstanceUser</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceUserArn The ARN of the user request being deleted.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteAppInstanceUserCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteAppInstanceUser(appInstanceUserArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'appInstanceUserArn' is set
      if (appInstanceUserArn === undefined || appInstanceUserArn === null) {
        throw new Error("Missing the required parameter 'appInstanceUserArn' when calling deleteAppInstanceUser");
      }

      let pathParams = {
        'appInstanceUserArn': appInstanceUserArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/app-instance-users/{appInstanceUserArn}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAttendee operation.
     * @callback module:api/DefaultApi~deleteAttendeeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes an attendee from the specified Amazon Chime SDK meeting and deletes their <code>JoinToken</code>. Attendees are automatically deleted when a Amazon Chime SDK meeting is deleted. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_DeleteAttendee.html\">DeleteAttendee</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} meetingId The Amazon Chime SDK meeting ID.
     * @param {String} attendeeId The Amazon Chime SDK attendee ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteAttendeeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteAttendee(meetingId, attendeeId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling deleteAttendee");
      }
      // verify the required parameter 'attendeeId' is set
      if (attendeeId === undefined || attendeeId === null) {
        throw new Error("Missing the required parameter 'attendeeId' when calling deleteAttendee");
      }

      let pathParams = {
        'meetingId': meetingId,
        'attendeeId': attendeeId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/meetings/{meetingId}/attendees/{attendeeId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteChannel operation.
     * @callback module:api/DefaultApi~deleteChannelCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Immediately makes a channel and its memberships inaccessible and marks them for deletion. This is an irreversible process.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_DeleteChannel.html\">DeleteChannel</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel being deleted.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~deleteChannelCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteChannel(channelArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling deleteChannel");
      }

      let pathParams = {
        'channelArn': channelArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/channels/{channelArn}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteChannelBan operation.
     * @callback module:api/DefaultApi~deleteChannelBanCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Removes a user from a channel's ban list.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_DeleteChannelBan.html\">DeleteChannelBan</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel from which the <code>AppInstanceUser</code> was banned.
     * @param {String} memberArn The ARN of the <code>AppInstanceUser</code> that you want to reinstate.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~deleteChannelBanCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteChannelBan(channelArn, memberArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling deleteChannelBan");
      }
      // verify the required parameter 'memberArn' is set
      if (memberArn === undefined || memberArn === null) {
        throw new Error("Missing the required parameter 'memberArn' when calling deleteChannelBan");
      }

      let pathParams = {
        'channelArn': channelArn,
        'memberArn': memberArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/channels/{channelArn}/bans/{memberArn}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteChannelMembership operation.
     * @callback module:api/DefaultApi~deleteChannelMembershipCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Removes a member from a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_DeleteChannelMembership.html\">DeleteChannelMembership</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel from which you want to remove the user.
     * @param {String} memberArn The ARN of the member that you're removing from the channel.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~deleteChannelMembershipCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteChannelMembership(channelArn, memberArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling deleteChannelMembership");
      }
      // verify the required parameter 'memberArn' is set
      if (memberArn === undefined || memberArn === null) {
        throw new Error("Missing the required parameter 'memberArn' when calling deleteChannelMembership");
      }

      let pathParams = {
        'channelArn': channelArn,
        'memberArn': memberArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/channels/{channelArn}/memberships/{memberArn}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteChannelMessage operation.
     * @callback module:api/DefaultApi~deleteChannelMessageCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes a channel message. Only admins can perform this action. Deletion makes messages inaccessible immediately. A background process deletes any revisions created by <code>UpdateChannelMessage</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_DeleteChannelMessage.html\">DeleteChannelMessage</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel.
     * @param {String} messageId The ID of the message being deleted.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~deleteChannelMessageCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteChannelMessage(channelArn, messageId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling deleteChannelMessage");
      }
      // verify the required parameter 'messageId' is set
      if (messageId === undefined || messageId === null) {
        throw new Error("Missing the required parameter 'messageId' when calling deleteChannelMessage");
      }

      let pathParams = {
        'channelArn': channelArn,
        'messageId': messageId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/channels/{channelArn}/messages/{messageId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteChannelModerator operation.
     * @callback module:api/DefaultApi~deleteChannelModeratorCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes a channel moderator.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_DeleteChannelModerator.html\">DeleteChannelModerator</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel.
     * @param {String} channelModeratorArn The ARN of the moderator being deleted.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~deleteChannelModeratorCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteChannelModerator(channelArn, channelModeratorArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling deleteChannelModerator");
      }
      // verify the required parameter 'channelModeratorArn' is set
      if (channelModeratorArn === undefined || channelModeratorArn === null) {
        throw new Error("Missing the required parameter 'channelModeratorArn' when calling deleteChannelModerator");
      }

      let pathParams = {
        'channelArn': channelArn,
        'channelModeratorArn': channelModeratorArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/channels/{channelArn}/moderators/{channelModeratorArn}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteEventsConfiguration operation.
     * @callback module:api/DefaultApi~deleteEventsConfigurationCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes the events configuration that allows a bot to receive outgoing events.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} botId The bot ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteEventsConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteEventsConfiguration(accountId, botId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling deleteEventsConfiguration");
      }
      // verify the required parameter 'botId' is set
      if (botId === undefined || botId === null) {
        throw new Error("Missing the required parameter 'botId' when calling deleteEventsConfiguration");
      }

      let pathParams = {
        'accountId': accountId,
        'botId': botId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/accounts/{accountId}/bots/{botId}/events-configuration', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteMediaCapturePipeline operation.
     * @callback module:api/DefaultApi~deleteMediaCapturePipelineCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the media capture pipeline.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_media-pipelines-chime_DeleteMediaCapturePipeline.html\">DeleteMediaCapturePipeline</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} mediaPipelineId The ID of the media capture pipeline being deleted. 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteMediaCapturePipelineCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteMediaCapturePipeline(mediaPipelineId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'mediaPipelineId' is set
      if (mediaPipelineId === undefined || mediaPipelineId === null) {
        throw new Error("Missing the required parameter 'mediaPipelineId' when calling deleteMediaCapturePipeline");
      }

      let pathParams = {
        'mediaPipelineId': mediaPipelineId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/media-capture-pipelines/{mediaPipelineId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteMeeting operation.
     * @callback module:api/DefaultApi~deleteMeetingCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified Amazon Chime SDK meeting. The operation deletes all attendees, disconnects all clients, and prevents new clients from joining the meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_DeleteMeeting.html\">DeleteMeeting</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} meetingId The Amazon Chime SDK meeting ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteMeetingCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteMeeting(meetingId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling deleteMeeting");
      }

      let pathParams = {
        'meetingId': meetingId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/meetings/{meetingId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deletePhoneNumber operation.
     * @callback module:api/DefaultApi~deletePhoneNumberCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Moves the specified phone number into the <b>Deletion queue</b>. A phone number must be disassociated from any users or Amazon Chime Voice Connectors before it can be deleted.</p> <p>Deleted phone numbers remain in the <b>Deletion queue</b> for 7 days before they are deleted permanently.</p>
     * @param {String} phoneNumberId The phone number ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deletePhoneNumberCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deletePhoneNumber(phoneNumberId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'phoneNumberId' is set
      if (phoneNumberId === undefined || phoneNumberId === null) {
        throw new Error("Missing the required parameter 'phoneNumberId' when calling deletePhoneNumber");
      }

      let pathParams = {
        'phoneNumberId': phoneNumberId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/phone-numbers/{phoneNumberId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteProxySession operation.
     * @callback module:api/DefaultApi~deleteProxySessionCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified proxy session from the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_DeleteProxySession.html\">DeleteProxySession</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime voice connector ID.
     * @param {String} proxySessionId The proxy session ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteProxySessionCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteProxySession(voiceConnectorId, proxySessionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling deleteProxySession");
      }
      // verify the required parameter 'proxySessionId' is set
      if (proxySessionId === undefined || proxySessionId === null) {
        throw new Error("Missing the required parameter 'proxySessionId' when calling deleteProxySession");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId,
        'proxySessionId': proxySessionId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/proxy-sessions/{proxySessionId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteRoom operation.
     * @callback module:api/DefaultApi~deleteRoomCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a chat room in an Amazon Chime Enterprise account.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} roomId The chat room ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteRoomCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteRoom(accountId, roomId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling deleteRoom");
      }
      // verify the required parameter 'roomId' is set
      if (roomId === undefined || roomId === null) {
        throw new Error("Missing the required parameter 'roomId' when calling deleteRoom");
      }

      let pathParams = {
        'accountId': accountId,
        'roomId': roomId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/accounts/{accountId}/rooms/{roomId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteRoomMembership operation.
     * @callback module:api/DefaultApi~deleteRoomMembershipCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removes a member from a chat room in an Amazon Chime Enterprise account.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} roomId The room ID.
     * @param {String} memberId The member ID (user ID or bot ID).
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteRoomMembershipCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteRoomMembership(accountId, roomId, memberId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling deleteRoomMembership");
      }
      // verify the required parameter 'roomId' is set
      if (roomId === undefined || roomId === null) {
        throw new Error("Missing the required parameter 'roomId' when calling deleteRoomMembership");
      }
      // verify the required parameter 'memberId' is set
      if (memberId === undefined || memberId === null) {
        throw new Error("Missing the required parameter 'memberId' when calling deleteRoomMembership");
      }

      let pathParams = {
        'accountId': accountId,
        'roomId': roomId,
        'memberId': memberId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/accounts/{accountId}/rooms/{roomId}/memberships/{memberId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteSipMediaApplication operation.
     * @callback module:api/DefaultApi~deleteSipMediaApplicationCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes a SIP media application.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_DeleteSipMediaApplication.html\">DeleteSipMediaApplication</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} sipMediaApplicationId The SIP media application ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteSipMediaApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteSipMediaApplication(sipMediaApplicationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sipMediaApplicationId' is set
      if (sipMediaApplicationId === undefined || sipMediaApplicationId === null) {
        throw new Error("Missing the required parameter 'sipMediaApplicationId' when calling deleteSipMediaApplication");
      }

      let pathParams = {
        'sipMediaApplicationId': sipMediaApplicationId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/sip-media-applications/{sipMediaApplicationId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteSipRule operation.
     * @callback module:api/DefaultApi~deleteSipRuleCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes a SIP rule. You must disable a SIP rule before you can delete it.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_DeleteSipRule.html\">DeleteSipRule</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} sipRuleId The SIP rule ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteSipRuleCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteSipRule(sipRuleId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sipRuleId' is set
      if (sipRuleId === undefined || sipRuleId === null) {
        throw new Error("Missing the required parameter 'sipRuleId' when calling deleteSipRule");
      }

      let pathParams = {
        'sipRuleId': sipRuleId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/sip-rules/{sipRuleId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVoiceConnector operation.
     * @callback module:api/DefaultApi~deleteVoiceConnectorCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified Amazon Chime Voice Connector. Any phone numbers associated with the Amazon Chime Voice Connector must be disassociated from it before it can be deleted.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_DeleteVoiceConnector.html\">DeleteVoiceConnector</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteVoiceConnectorCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteVoiceConnector(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling deleteVoiceConnector");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVoiceConnectorEmergencyCallingConfiguration operation.
     * @callback module:api/DefaultApi~deleteVoiceConnectorEmergencyCallingConfigurationCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the emergency calling configuration details from the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_DeleteVoiceConnectorEmergencyCallingConfiguration.html\">DeleteVoiceConnectorEmergencyCallingConfiguration</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteVoiceConnectorEmergencyCallingConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteVoiceConnectorEmergencyCallingConfiguration(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling deleteVoiceConnectorEmergencyCallingConfiguration");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/emergency-calling-configuration', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVoiceConnectorGroup operation.
     * @callback module:api/DefaultApi~deleteVoiceConnectorGroupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified Amazon Chime Voice Connector group. Any <code>VoiceConnectorItems</code> and phone numbers associated with the group must be removed before it can be deleted.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_DeleteVoiceConnectorGroup.html\">DeleteVoiceConnectorGroup</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorGroupId The Amazon Chime Voice Connector group ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteVoiceConnectorGroupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteVoiceConnectorGroup(voiceConnectorGroupId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorGroupId' is set
      if (voiceConnectorGroupId === undefined || voiceConnectorGroupId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorGroupId' when calling deleteVoiceConnectorGroup");
      }

      let pathParams = {
        'voiceConnectorGroupId': voiceConnectorGroupId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/voice-connector-groups/{voiceConnectorGroupId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVoiceConnectorOrigination operation.
     * @callback module:api/DefaultApi~deleteVoiceConnectorOriginationCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the origination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the origination settings.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_DeleteVoiceConnectorOrigination.html\">DeleteVoiceConnectorOrigination</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteVoiceConnectorOriginationCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteVoiceConnectorOrigination(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling deleteVoiceConnectorOrigination");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/origination', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVoiceConnectorProxy operation.
     * @callback module:api/DefaultApi~deleteVoiceConnectorProxyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the proxy configuration from the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_DeleteVoiceConnectorProxy.html\">DeleteVoiceProxy</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteVoiceConnectorProxyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteVoiceConnectorProxy(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling deleteVoiceConnectorProxy");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/programmable-numbers/proxy', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVoiceConnectorStreamingConfiguration operation.
     * @callback module:api/DefaultApi~deleteVoiceConnectorStreamingConfigurationCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the streaming configuration for the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_DeleteVoiceConnectorStreamingConfiguration.html\">DeleteVoiceConnectorStreamingConfiguration</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteVoiceConnectorStreamingConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteVoiceConnectorStreamingConfiguration(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling deleteVoiceConnectorStreamingConfiguration");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/streaming-configuration', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVoiceConnectorTermination operation.
     * @callback module:api/DefaultApi~deleteVoiceConnectorTerminationCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the termination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to deleting the termination settings.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_DeleteVoiceConnectorTermination.html\">DeleteVoiceConnectorTermination</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteVoiceConnectorTerminationCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteVoiceConnectorTermination(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling deleteVoiceConnectorTermination");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/termination', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVoiceConnectorTerminationCredentials operation.
     * @callback module:api/DefaultApi~deleteVoiceConnectorTerminationCredentialsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Deletes the specified SIP credentials used by your equipment to authenticate during call termination.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_DeleteVoiceConnectorTerminationCredentials.html\">DeleteVoiceConnectorTerminationCredentials</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {module:model/String} operation 
     * @param {module:model/DeleteVoiceConnectorTerminationCredentialsRequest} deleteVoiceConnectorTerminationCredentialsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~deleteVoiceConnectorTerminationCredentialsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteVoiceConnectorTerminationCredentials(voiceConnectorId, operation, deleteVoiceConnectorTerminationCredentialsRequest, opts, callback) {
      opts = opts || {};
      let postBody = deleteVoiceConnectorTerminationCredentialsRequest;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling deleteVoiceConnectorTerminationCredentials");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling deleteVoiceConnectorTerminationCredentials");
      }
      // verify the required parameter 'deleteVoiceConnectorTerminationCredentialsRequest' is set
      if (deleteVoiceConnectorTerminationCredentialsRequest === undefined || deleteVoiceConnectorTerminationCredentialsRequest === null) {
        throw new Error("Missing the required parameter 'deleteVoiceConnectorTerminationCredentialsRequest' when calling deleteVoiceConnectorTerminationCredentials");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/termination/credentials#operation=delete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeAppInstance operation.
     * @callback module:api/DefaultApi~describeAppInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeAppInstanceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the full details of an <code>AppInstance</code>.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_DescribeAppInstance.html\">DescribeAppInstance</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceArn The ARN of the <code>AppInstance</code>.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeAppInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeAppInstanceResponse}
     */
    describeAppInstance(appInstanceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'appInstanceArn' is set
      if (appInstanceArn === undefined || appInstanceArn === null) {
        throw new Error("Missing the required parameter 'appInstanceArn' when calling describeAppInstance");
      }

      let pathParams = {
        'appInstanceArn': appInstanceArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeAppInstanceResponse;
      return this.apiClient.callApi(
        '/app-instances/{appInstanceArn}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeAppInstanceAdmin operation.
     * @callback module:api/DefaultApi~describeAppInstanceAdminCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeAppInstanceAdminResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the full details of an <code>AppInstanceAdmin</code>.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_DescribeAppInstanceAdmin.html\">DescribeAppInstanceAdmin</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceAdminArn The ARN of the <code>AppInstanceAdmin</code>.
     * @param {String} appInstanceArn The ARN of the <code>AppInstance</code>.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeAppInstanceAdminCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeAppInstanceAdminResponse}
     */
    describeAppInstanceAdmin(appInstanceAdminArn, appInstanceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'appInstanceAdminArn' is set
      if (appInstanceAdminArn === undefined || appInstanceAdminArn === null) {
        throw new Error("Missing the required parameter 'appInstanceAdminArn' when calling describeAppInstanceAdmin");
      }
      // verify the required parameter 'appInstanceArn' is set
      if (appInstanceArn === undefined || appInstanceArn === null) {
        throw new Error("Missing the required parameter 'appInstanceArn' when calling describeAppInstanceAdmin");
      }

      let pathParams = {
        'appInstanceAdminArn': appInstanceAdminArn,
        'appInstanceArn': appInstanceArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeAppInstanceAdminResponse;
      return this.apiClient.callApi(
        '/app-instances/{appInstanceArn}/admins/{appInstanceAdminArn}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeAppInstanceUser operation.
     * @callback module:api/DefaultApi~describeAppInstanceUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeAppInstanceUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the full details of an <code>AppInstanceUser</code>.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_DescribeAppInstanceUser.html\">DescribeAppInstanceUser</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceUserArn The ARN of the <code>AppInstanceUser</code>.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~describeAppInstanceUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeAppInstanceUserResponse}
     */
    describeAppInstanceUser(appInstanceUserArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'appInstanceUserArn' is set
      if (appInstanceUserArn === undefined || appInstanceUserArn === null) {
        throw new Error("Missing the required parameter 'appInstanceUserArn' when calling describeAppInstanceUser");
      }

      let pathParams = {
        'appInstanceUserArn': appInstanceUserArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeAppInstanceUserResponse;
      return this.apiClient.callApi(
        '/app-instance-users/{appInstanceUserArn}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeChannel operation.
     * @callback module:api/DefaultApi~describeChannelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeChannelResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the full details of a channel in an Amazon Chime <code>AppInstance</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_DescribeChannel.html\">DescribeChannel</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~describeChannelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeChannelResponse}
     */
    describeChannel(channelArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling describeChannel");
      }

      let pathParams = {
        'channelArn': channelArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeChannelResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeChannelBan operation.
     * @callback module:api/DefaultApi~describeChannelBanCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeChannelBanResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the full details of a channel ban.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_DescribeChannelBan.html\">DescribeChannelBan</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel from which the user is banned.
     * @param {String} memberArn The ARN of the member being banned.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~describeChannelBanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeChannelBanResponse}
     */
    describeChannelBan(channelArn, memberArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling describeChannelBan");
      }
      // verify the required parameter 'memberArn' is set
      if (memberArn === undefined || memberArn === null) {
        throw new Error("Missing the required parameter 'memberArn' when calling describeChannelBan");
      }

      let pathParams = {
        'channelArn': channelArn,
        'memberArn': memberArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeChannelBanResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/bans/{memberArn}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeChannelMembership operation.
     * @callback module:api/DefaultApi~describeChannelMembershipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeChannelMembershipResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the full details of a user's channel membership.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_DescribeChannelMembership.html\">DescribeChannelMembership</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel.
     * @param {String} memberArn The ARN of the member.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~describeChannelMembershipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeChannelMembershipResponse}
     */
    describeChannelMembership(channelArn, memberArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling describeChannelMembership");
      }
      // verify the required parameter 'memberArn' is set
      if (memberArn === undefined || memberArn === null) {
        throw new Error("Missing the required parameter 'memberArn' when calling describeChannelMembership");
      }

      let pathParams = {
        'channelArn': channelArn,
        'memberArn': memberArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeChannelMembershipResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/memberships/{memberArn}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeChannelMembershipForAppInstanceUser operation.
     * @callback module:api/DefaultApi~describeChannelMembershipForAppInstanceUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeChannelMembershipForAppInstanceUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p> Returns the details of a channel based on the membership of the specified <code>AppInstanceUser</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_DescribeChannelMembershipForAppInstanceUser.html\">DescribeChannelMembershipForAppInstanceUser</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel to which the user belongs.
     * @param {String} appInstanceUserArn The ARN of the user in a channel.
     * @param {module:model/String} scope 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~describeChannelMembershipForAppInstanceUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeChannelMembershipForAppInstanceUserResponse}
     */
    describeChannelMembershipForAppInstanceUser(channelArn, appInstanceUserArn, scope, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling describeChannelMembershipForAppInstanceUser");
      }
      // verify the required parameter 'appInstanceUserArn' is set
      if (appInstanceUserArn === undefined || appInstanceUserArn === null) {
        throw new Error("Missing the required parameter 'appInstanceUserArn' when calling describeChannelMembershipForAppInstanceUser");
      }
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling describeChannelMembershipForAppInstanceUser");
      }

      let pathParams = {
        'channelArn': channelArn
      };
      let queryParams = {
        'app-instance-user-arn': appInstanceUserArn,
        'scope': scope
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeChannelMembershipForAppInstanceUserResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}#scope=app-instance-user-membership&app-instance-user-arn', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeChannelModeratedByAppInstanceUser operation.
     * @callback module:api/DefaultApi~describeChannelModeratedByAppInstanceUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeChannelModeratedByAppInstanceUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the full details of a channel moderated by the specified <code>AppInstanceUser</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_DescribeChannelModeratedByAppInstanceUser.html\">DescribeChannelModeratedByAppInstanceUser</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the moderated channel.
     * @param {String} appInstanceUserArn The ARN of the <code>AppInstanceUser</code> in the moderated channel.
     * @param {module:model/String} scope 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~describeChannelModeratedByAppInstanceUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeChannelModeratedByAppInstanceUserResponse}
     */
    describeChannelModeratedByAppInstanceUser(channelArn, appInstanceUserArn, scope, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling describeChannelModeratedByAppInstanceUser");
      }
      // verify the required parameter 'appInstanceUserArn' is set
      if (appInstanceUserArn === undefined || appInstanceUserArn === null) {
        throw new Error("Missing the required parameter 'appInstanceUserArn' when calling describeChannelModeratedByAppInstanceUser");
      }
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling describeChannelModeratedByAppInstanceUser");
      }

      let pathParams = {
        'channelArn': channelArn
      };
      let queryParams = {
        'app-instance-user-arn': appInstanceUserArn,
        'scope': scope
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeChannelModeratedByAppInstanceUserResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}#scope=app-instance-user-moderated-channel&app-instance-user-arn', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the describeChannelModerator operation.
     * @callback module:api/DefaultApi~describeChannelModeratorCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DescribeChannelModeratorResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the full details of a single ChannelModerator.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_DescribeChannelModerator.html\">DescribeChannelModerator</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel.
     * @param {String} channelModeratorArn The ARN of the channel moderator.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~describeChannelModeratorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DescribeChannelModeratorResponse}
     */
    describeChannelModerator(channelArn, channelModeratorArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling describeChannelModerator");
      }
      // verify the required parameter 'channelModeratorArn' is set
      if (channelModeratorArn === undefined || channelModeratorArn === null) {
        throw new Error("Missing the required parameter 'channelModeratorArn' when calling describeChannelModerator");
      }

      let pathParams = {
        'channelArn': channelArn,
        'channelModeratorArn': channelModeratorArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DescribeChannelModeratorResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/moderators/{channelModeratorArn}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disassociatePhoneNumberFromUser operation.
     * @callback module:api/DefaultApi~disassociatePhoneNumberFromUserCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disassociates the primary provisioned phone number from the specified Amazon Chime user.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} userId The user ID.
     * @param {module:model/String} operation 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disassociatePhoneNumberFromUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    disassociatePhoneNumberFromUser(accountId, userId, operation, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling disassociatePhoneNumberFromUser");
      }
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling disassociatePhoneNumberFromUser");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling disassociatePhoneNumberFromUser");
      }

      let pathParams = {
        'accountId': accountId,
        'userId': userId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/accounts/{accountId}/users/{userId}#operation=disassociate-phone-number', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disassociatePhoneNumbersFromVoiceConnector operation.
     * @callback module:api/DefaultApi~disassociatePhoneNumbersFromVoiceConnectorCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DisassociatePhoneNumbersFromVoiceConnectorResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_DisassociatePhoneNumbersFromVoiceConnector.html\">DisassociatePhoneNumbersFromVoiceConnector</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {module:model/String} operation 
     * @param {module:model/DisassociatePhoneNumbersFromVoiceConnectorRequest} disassociatePhoneNumbersFromVoiceConnectorRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disassociatePhoneNumbersFromVoiceConnectorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DisassociatePhoneNumbersFromVoiceConnectorResponse}
     */
    disassociatePhoneNumbersFromVoiceConnector(voiceConnectorId, operation, disassociatePhoneNumbersFromVoiceConnectorRequest, opts, callback) {
      opts = opts || {};
      let postBody = disassociatePhoneNumbersFromVoiceConnectorRequest;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling disassociatePhoneNumbersFromVoiceConnector");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling disassociatePhoneNumbersFromVoiceConnector");
      }
      // verify the required parameter 'disassociatePhoneNumbersFromVoiceConnectorRequest' is set
      if (disassociatePhoneNumbersFromVoiceConnectorRequest === undefined || disassociatePhoneNumbersFromVoiceConnectorRequest === null) {
        throw new Error("Missing the required parameter 'disassociatePhoneNumbersFromVoiceConnectorRequest' when calling disassociatePhoneNumbersFromVoiceConnector");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DisassociatePhoneNumbersFromVoiceConnectorResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}#operation=disassociate-phone-numbers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disassociatePhoneNumbersFromVoiceConnectorGroup operation.
     * @callback module:api/DefaultApi~disassociatePhoneNumbersFromVoiceConnectorGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DisassociatePhoneNumbersFromVoiceConnectorGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector group.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_DisassociatePhoneNumbersFromVoiceConnectorGroup.html\">DisassociatePhoneNumbersFromVoiceConnectorGroup</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorGroupId The Amazon Chime Voice Connector group ID.
     * @param {module:model/String} operation 
     * @param {module:model/DisassociatePhoneNumbersFromVoiceConnectorRequest} disassociatePhoneNumbersFromVoiceConnectorRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disassociatePhoneNumbersFromVoiceConnectorGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DisassociatePhoneNumbersFromVoiceConnectorGroupResponse}
     */
    disassociatePhoneNumbersFromVoiceConnectorGroup(voiceConnectorGroupId, operation, disassociatePhoneNumbersFromVoiceConnectorRequest, opts, callback) {
      opts = opts || {};
      let postBody = disassociatePhoneNumbersFromVoiceConnectorRequest;
      // verify the required parameter 'voiceConnectorGroupId' is set
      if (voiceConnectorGroupId === undefined || voiceConnectorGroupId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorGroupId' when calling disassociatePhoneNumbersFromVoiceConnectorGroup");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling disassociatePhoneNumbersFromVoiceConnectorGroup");
      }
      // verify the required parameter 'disassociatePhoneNumbersFromVoiceConnectorRequest' is set
      if (disassociatePhoneNumbersFromVoiceConnectorRequest === undefined || disassociatePhoneNumbersFromVoiceConnectorRequest === null) {
        throw new Error("Missing the required parameter 'disassociatePhoneNumbersFromVoiceConnectorRequest' when calling disassociatePhoneNumbersFromVoiceConnectorGroup");
      }

      let pathParams = {
        'voiceConnectorGroupId': voiceConnectorGroupId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DisassociatePhoneNumbersFromVoiceConnectorGroupResponse;
      return this.apiClient.callApi(
        '/voice-connector-groups/{voiceConnectorGroupId}#operation=disassociate-phone-numbers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disassociateSigninDelegateGroupsFromAccount operation.
     * @callback module:api/DefaultApi~disassociateSigninDelegateGroupsFromAccountCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disassociates the specified sign-in delegate groups from the specified Amazon Chime account.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {module:model/String} operation 
     * @param {module:model/DisassociateSigninDelegateGroupsFromAccountRequest} disassociateSigninDelegateGroupsFromAccountRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~disassociateSigninDelegateGroupsFromAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    disassociateSigninDelegateGroupsFromAccount(accountId, operation, disassociateSigninDelegateGroupsFromAccountRequest, opts, callback) {
      opts = opts || {};
      let postBody = disassociateSigninDelegateGroupsFromAccountRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling disassociateSigninDelegateGroupsFromAccount");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling disassociateSigninDelegateGroupsFromAccount");
      }
      // verify the required parameter 'disassociateSigninDelegateGroupsFromAccountRequest' is set
      if (disassociateSigninDelegateGroupsFromAccountRequest === undefined || disassociateSigninDelegateGroupsFromAccountRequest === null) {
        throw new Error("Missing the required parameter 'disassociateSigninDelegateGroupsFromAccountRequest' when calling disassociateSigninDelegateGroupsFromAccount");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/accounts/{accountId}#operation=disassociate-signin-delegate-groups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAccount operation.
     * @callback module:api/DefaultApi~getAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves details for the specified Amazon Chime account, such as account type and supported licenses.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAccountResponse}
     */
    getAccount(accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getAccount");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAccountResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAccountSettings operation.
     * @callback module:api/DefaultApi~getAccountSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAccountSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves account settings for the specified Amazon Chime account ID, such as remote control and dialout settings. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>. 
     * @param {String} accountId The Amazon Chime account ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getAccountSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAccountSettingsResponse}
     */
    getAccountSettings(accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getAccountSettings");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAccountSettingsResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/settings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAppInstanceRetentionSettings operation.
     * @callback module:api/DefaultApi~getAppInstanceRetentionSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAppInstanceRetentionSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Gets the retention settings for an <code>AppInstance</code>.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_GetAppInstanceRetentionSettings.html\">GetMessagingRetentionSettings</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceArn The ARN of the <code>AppInstance</code>.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getAppInstanceRetentionSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAppInstanceRetentionSettingsResponse}
     */
    getAppInstanceRetentionSettings(appInstanceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'appInstanceArn' is set
      if (appInstanceArn === undefined || appInstanceArn === null) {
        throw new Error("Missing the required parameter 'appInstanceArn' when calling getAppInstanceRetentionSettings");
      }

      let pathParams = {
        'appInstanceArn': appInstanceArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAppInstanceRetentionSettingsResponse;
      return this.apiClient.callApi(
        '/app-instances/{appInstanceArn}/retention-settings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAppInstanceStreamingConfigurations operation.
     * @callback module:api/DefaultApi~getAppInstanceStreamingConfigurationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAppInstanceStreamingConfigurationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Gets the streaming settings for an <code>AppInstance</code>.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_GetMessagingStreamingConfigurations.html\">GetMessagingStreamingConfigurations</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceArn The ARN of the <code>AppInstance</code>.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getAppInstanceStreamingConfigurationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAppInstanceStreamingConfigurationsResponse}
     */
    getAppInstanceStreamingConfigurations(appInstanceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'appInstanceArn' is set
      if (appInstanceArn === undefined || appInstanceArn === null) {
        throw new Error("Missing the required parameter 'appInstanceArn' when calling getAppInstanceStreamingConfigurations");
      }

      let pathParams = {
        'appInstanceArn': appInstanceArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAppInstanceStreamingConfigurationsResponse;
      return this.apiClient.callApi(
        '/app-instances/{appInstanceArn}/streaming-configurations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAttendee operation.
     * @callback module:api/DefaultApi~getAttendeeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAttendeeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p> Gets the Amazon Chime SDK attendee details for a specified meeting ID and attendee ID. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime SDK Developer Guide</i>. </p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_GetAttendee.html\">GetAttendee</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} meetingId The Amazon Chime SDK meeting ID.
     * @param {String} attendeeId The Amazon Chime SDK attendee ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getAttendeeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAttendeeResponse}
     */
    getAttendee(meetingId, attendeeId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling getAttendee");
      }
      // verify the required parameter 'attendeeId' is set
      if (attendeeId === undefined || attendeeId === null) {
        throw new Error("Missing the required parameter 'attendeeId' when calling getAttendee");
      }

      let pathParams = {
        'meetingId': meetingId,
        'attendeeId': attendeeId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAttendeeResponse;
      return this.apiClient.callApi(
        '/meetings/{meetingId}/attendees/{attendeeId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBot operation.
     * @callback module:api/DefaultApi~getBotCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetBotResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves details for the specified bot, such as bot email address, bot type, status, and display name.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} botId The bot ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getBotCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetBotResponse}
     */
    getBot(accountId, botId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getBot");
      }
      // verify the required parameter 'botId' is set
      if (botId === undefined || botId === null) {
        throw new Error("Missing the required parameter 'botId' when calling getBot");
      }

      let pathParams = {
        'accountId': accountId,
        'botId': botId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetBotResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/bots/{botId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getChannelMessage operation.
     * @callback module:api/DefaultApi~getChannelMessageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetChannelMessageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Gets the full details of a channel message.</p> <note> <p>The x-amz-chime-bearer request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_GetChannelMessage.html\">GetChannelMessage</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel.
     * @param {String} messageId The ID of the message.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~getChannelMessageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetChannelMessageResponse}
     */
    getChannelMessage(channelArn, messageId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling getChannelMessage");
      }
      // verify the required parameter 'messageId' is set
      if (messageId === undefined || messageId === null) {
        throw new Error("Missing the required parameter 'messageId' when calling getChannelMessage");
      }

      let pathParams = {
        'channelArn': channelArn,
        'messageId': messageId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetChannelMessageResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/messages/{messageId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getEventsConfiguration operation.
     * @callback module:api/DefaultApi~getEventsConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetEventsConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets details for an events configuration that allows a bot to receive outgoing events, such as an HTTPS endpoint or Lambda function ARN.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} botId The bot ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getEventsConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetEventsConfigurationResponse}
     */
    getEventsConfiguration(accountId, botId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getEventsConfiguration");
      }
      // verify the required parameter 'botId' is set
      if (botId === undefined || botId === null) {
        throw new Error("Missing the required parameter 'botId' when calling getEventsConfiguration");
      }

      let pathParams = {
        'accountId': accountId,
        'botId': botId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetEventsConfigurationResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/bots/{botId}/events-configuration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getGlobalSettings operation.
     * @callback module:api/DefaultApi~getGlobalSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetGlobalSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves global settings for the administrator's AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getGlobalSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetGlobalSettingsResponse}
     */
    getGlobalSettings(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetGlobalSettingsResponse;
      return this.apiClient.callApi(
        '/settings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMediaCapturePipeline operation.
     * @callback module:api/DefaultApi~getMediaCapturePipelineCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetMediaCapturePipelineResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Gets an existing media capture pipeline.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_media-pipelines-chime_GetMediaCapturePipeline.html\">GetMediaCapturePipeline</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} mediaPipelineId The ID of the pipeline that you want to get.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getMediaCapturePipelineCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetMediaCapturePipelineResponse}
     */
    getMediaCapturePipeline(mediaPipelineId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'mediaPipelineId' is set
      if (mediaPipelineId === undefined || mediaPipelineId === null) {
        throw new Error("Missing the required parameter 'mediaPipelineId' when calling getMediaCapturePipeline");
      }

      let pathParams = {
        'mediaPipelineId': mediaPipelineId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetMediaCapturePipelineResponse;
      return this.apiClient.callApi(
        '/media-capture-pipelines/{mediaPipelineId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMeeting operation.
     * @callback module:api/DefaultApi~getMeetingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetMeetingResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_GetMeeting.html\">GetMeeting</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important> <p> Gets the Amazon Chime SDK meeting details for the specified meeting ID. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime SDK Developer Guide</i> . </p>
     * @param {String} meetingId The Amazon Chime SDK meeting ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getMeetingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetMeetingResponse}
     */
    getMeeting(meetingId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling getMeeting");
      }

      let pathParams = {
        'meetingId': meetingId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetMeetingResponse;
      return this.apiClient.callApi(
        '/meetings/{meetingId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMessagingSessionEndpoint operation.
     * @callback module:api/DefaultApi~getMessagingSessionEndpointCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetMessagingSessionEndpointResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>The details of the endpoint for the messaging session.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_GetMessagingSessionEndpoint.html\">GetMessagingSessionEndpoint</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getMessagingSessionEndpointCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetMessagingSessionEndpointResponse}
     */
    getMessagingSessionEndpoint(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetMessagingSessionEndpointResponse;
      return this.apiClient.callApi(
        '/endpoints/messaging-session', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPhoneNumber operation.
     * @callback module:api/DefaultApi~getPhoneNumberCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetPhoneNumberResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves details for the specified phone number ID, such as associations, capabilities, and product type.
     * @param {String} phoneNumberId The phone number ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getPhoneNumberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetPhoneNumberResponse}
     */
    getPhoneNumber(phoneNumberId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'phoneNumberId' is set
      if (phoneNumberId === undefined || phoneNumberId === null) {
        throw new Error("Missing the required parameter 'phoneNumberId' when calling getPhoneNumber");
      }

      let pathParams = {
        'phoneNumberId': phoneNumberId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetPhoneNumberResponse;
      return this.apiClient.callApi(
        '/phone-numbers/{phoneNumberId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPhoneNumberOrder operation.
     * @callback module:api/DefaultApi~getPhoneNumberOrderCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetPhoneNumberOrderResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves details for the specified phone number order, such as the order creation timestamp, phone numbers in E.164 format, product type, and order status.
     * @param {String} phoneNumberOrderId The ID for the phone number order.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getPhoneNumberOrderCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetPhoneNumberOrderResponse}
     */
    getPhoneNumberOrder(phoneNumberOrderId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'phoneNumberOrderId' is set
      if (phoneNumberOrderId === undefined || phoneNumberOrderId === null) {
        throw new Error("Missing the required parameter 'phoneNumberOrderId' when calling getPhoneNumberOrder");
      }

      let pathParams = {
        'phoneNumberOrderId': phoneNumberOrderId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetPhoneNumberOrderResponse;
      return this.apiClient.callApi(
        '/phone-number-orders/{phoneNumberOrderId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPhoneNumberSettings operation.
     * @callback module:api/DefaultApi~getPhoneNumberSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetPhoneNumberSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves the phone number settings for the administrator's AWS account, such as the default outbound calling name.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getPhoneNumberSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetPhoneNumberSettingsResponse}
     */
    getPhoneNumberSettings(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetPhoneNumberSettingsResponse;
      return this.apiClient.callApi(
        '/settings/phone-number', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getProxySession operation.
     * @callback module:api/DefaultApi~getProxySessionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetProxySessionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Gets the specified proxy session details for the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_GetProxySession.html\">GetProxySession</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime voice connector ID.
     * @param {String} proxySessionId The proxy session ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getProxySessionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetProxySessionResponse}
     */
    getProxySession(voiceConnectorId, proxySessionId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling getProxySession");
      }
      // verify the required parameter 'proxySessionId' is set
      if (proxySessionId === undefined || proxySessionId === null) {
        throw new Error("Missing the required parameter 'proxySessionId' when calling getProxySession");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId,
        'proxySessionId': proxySessionId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetProxySessionResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/proxy-sessions/{proxySessionId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRetentionSettings operation.
     * @callback module:api/DefaultApi~getRetentionSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetRetentionSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     *  Gets the retention settings for the specified Amazon Chime Enterprise account. For more information about retention settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html\">Managing Chat Retention Policies</a> in the <i>Amazon Chime Administration Guide</i>. 
     * @param {String} accountId The Amazon Chime account ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getRetentionSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetRetentionSettingsResponse}
     */
    getRetentionSettings(accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getRetentionSettings");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetRetentionSettingsResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/retention-settings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRoom operation.
     * @callback module:api/DefaultApi~getRoomCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetRoomResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves room details, such as the room name, for a room in an Amazon Chime Enterprise account.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} roomId The room ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getRoomCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetRoomResponse}
     */
    getRoom(accountId, roomId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getRoom");
      }
      // verify the required parameter 'roomId' is set
      if (roomId === undefined || roomId === null) {
        throw new Error("Missing the required parameter 'roomId' when calling getRoom");
      }

      let pathParams = {
        'accountId': accountId,
        'roomId': roomId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetRoomResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/rooms/{roomId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSipMediaApplication operation.
     * @callback module:api/DefaultApi~getSipMediaApplicationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSipMediaApplicationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves the information for a SIP media application, including name, AWS Region, and endpoints.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_GetSipMediaApplication.html\">GetSipMediaApplication</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} sipMediaApplicationId The SIP media application ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getSipMediaApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSipMediaApplicationResponse}
     */
    getSipMediaApplication(sipMediaApplicationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sipMediaApplicationId' is set
      if (sipMediaApplicationId === undefined || sipMediaApplicationId === null) {
        throw new Error("Missing the required parameter 'sipMediaApplicationId' when calling getSipMediaApplication");
      }

      let pathParams = {
        'sipMediaApplicationId': sipMediaApplicationId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetSipMediaApplicationResponse;
      return this.apiClient.callApi(
        '/sip-media-applications/{sipMediaApplicationId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSipMediaApplicationLoggingConfiguration operation.
     * @callback module:api/DefaultApi~getSipMediaApplicationLoggingConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSipMediaApplicationLoggingConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns the logging configuration for the specified SIP media application.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_GetSipMediaApplicationLoggingConfiguration.html\">GetSipMediaApplicationLoggingConfiguration</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} sipMediaApplicationId The SIP media application ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getSipMediaApplicationLoggingConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSipMediaApplicationLoggingConfigurationResponse}
     */
    getSipMediaApplicationLoggingConfiguration(sipMediaApplicationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sipMediaApplicationId' is set
      if (sipMediaApplicationId === undefined || sipMediaApplicationId === null) {
        throw new Error("Missing the required parameter 'sipMediaApplicationId' when calling getSipMediaApplicationLoggingConfiguration");
      }

      let pathParams = {
        'sipMediaApplicationId': sipMediaApplicationId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetSipMediaApplicationLoggingConfigurationResponse;
      return this.apiClient.callApi(
        '/sip-media-applications/{sipMediaApplicationId}/logging-configuration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSipRule operation.
     * @callback module:api/DefaultApi~getSipRuleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSipRuleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves the details of a SIP rule, such as the rule ID, name, triggers, and target endpoints.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_GetSipRule.html\">GetSipRule</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} sipRuleId The SIP rule ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getSipRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSipRuleResponse}
     */
    getSipRule(sipRuleId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sipRuleId' is set
      if (sipRuleId === undefined || sipRuleId === null) {
        throw new Error("Missing the required parameter 'sipRuleId' when calling getSipRule");
      }

      let pathParams = {
        'sipRuleId': sipRuleId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetSipRuleResponse;
      return this.apiClient.callApi(
        '/sip-rules/{sipRuleId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getUser operation.
     * @callback module:api/DefaultApi~getUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves details for the specified user ID, such as primary email address, license type,and personal meeting PIN.</p> <p> To retrieve user details with an email address instead of a user ID, use the <a>ListUsers</a> action, and then filter by email address. </p>
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} userId The user ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetUserResponse}
     */
    getUser(accountId, userId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getUser");
      }
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling getUser");
      }

      let pathParams = {
        'accountId': accountId,
        'userId': userId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetUserResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/users/{userId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getUserSettings operation.
     * @callback module:api/DefaultApi~getUserSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetUserSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves settings for the specified user ID, such as any associated phone number settings.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} userId The user ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getUserSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetUserSettingsResponse}
     */
    getUserSettings(accountId, userId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling getUserSettings");
      }
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling getUserSettings");
      }

      let pathParams = {
        'accountId': accountId,
        'userId': userId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetUserSettingsResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/users/{userId}/settings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoiceConnector operation.
     * @callback module:api/DefaultApi~getVoiceConnectorCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetVoiceConnectorResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves details for the specified Amazon Chime Voice Connector, such as timestamps,name, outbound host, and encryption requirements.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_GetVoiceConnector.html\">GetVoiceConnector</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getVoiceConnectorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetVoiceConnectorResponse}
     */
    getVoiceConnector(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling getVoiceConnector");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetVoiceConnectorResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoiceConnectorEmergencyCallingConfiguration operation.
     * @callback module:api/DefaultApi~getVoiceConnectorEmergencyCallingConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetVoiceConnectorEmergencyCallingConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Gets the emergency calling configuration details for the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_GetVoiceConnectorEmergencyCallingConfiguration.html\">GetVoiceConnectorEmergencyCallingConfiguration</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getVoiceConnectorEmergencyCallingConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetVoiceConnectorEmergencyCallingConfigurationResponse}
     */
    getVoiceConnectorEmergencyCallingConfiguration(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling getVoiceConnectorEmergencyCallingConfiguration");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetVoiceConnectorEmergencyCallingConfigurationResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/emergency-calling-configuration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoiceConnectorGroup operation.
     * @callback module:api/DefaultApi~getVoiceConnectorGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetVoiceConnectorGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p> Retrieves details for the specified Amazon Chime Voice Connector group, such as timestamps,name, and associated <code>VoiceConnectorItems</code>.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_GetVoiceConnectorGroup.html\">GetVoiceConnectorGroup</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorGroupId The Amazon Chime Voice Connector group ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getVoiceConnectorGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetVoiceConnectorGroupResponse}
     */
    getVoiceConnectorGroup(voiceConnectorGroupId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorGroupId' is set
      if (voiceConnectorGroupId === undefined || voiceConnectorGroupId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorGroupId' when calling getVoiceConnectorGroup");
      }

      let pathParams = {
        'voiceConnectorGroupId': voiceConnectorGroupId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetVoiceConnectorGroupResponse;
      return this.apiClient.callApi(
        '/voice-connector-groups/{voiceConnectorGroupId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoiceConnectorLoggingConfiguration operation.
     * @callback module:api/DefaultApi~getVoiceConnectorLoggingConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetVoiceConnectorLoggingConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves the logging configuration details for the specified Amazon Chime Voice Connector. Shows whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_GetVoiceConnectorLoggingConfiguration.html\">GetVoiceConnectorLoggingConfiguration</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getVoiceConnectorLoggingConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetVoiceConnectorLoggingConfigurationResponse}
     */
    getVoiceConnectorLoggingConfiguration(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling getVoiceConnectorLoggingConfiguration");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetVoiceConnectorLoggingConfigurationResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/logging-configuration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoiceConnectorOrigination operation.
     * @callback module:api/DefaultApi~getVoiceConnectorOriginationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetVoiceConnectorOriginationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves origination setting details for the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_GetVoiceConnectorOrigination.html\">GetVoiceConnectorOrigination</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getVoiceConnectorOriginationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetVoiceConnectorOriginationResponse}
     */
    getVoiceConnectorOrigination(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling getVoiceConnectorOrigination");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetVoiceConnectorOriginationResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/origination', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoiceConnectorProxy operation.
     * @callback module:api/DefaultApi~getVoiceConnectorProxyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetVoiceConnectorProxyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Gets the proxy configuration details for the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_GetVoiceConnectorProxy.html\">GetVoiceConnectorProxy</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime voice connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getVoiceConnectorProxyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetVoiceConnectorProxyResponse}
     */
    getVoiceConnectorProxy(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling getVoiceConnectorProxy");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetVoiceConnectorProxyResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/programmable-numbers/proxy', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoiceConnectorStreamingConfiguration operation.
     * @callback module:api/DefaultApi~getVoiceConnectorStreamingConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetVoiceConnectorStreamingConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves the streaming configuration details for the specified Amazon Chime Voice Connector. Shows whether media streaming is enabled for sending to Amazon Kinesis. It also shows the retention period, in hours, for the Amazon Kinesis data.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_GetVoiceConnectorStreamingConfiguration.html\">GetVoiceConnectorStreamingConfiguration</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getVoiceConnectorStreamingConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetVoiceConnectorStreamingConfigurationResponse}
     */
    getVoiceConnectorStreamingConfiguration(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling getVoiceConnectorStreamingConfiguration");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetVoiceConnectorStreamingConfigurationResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/streaming-configuration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoiceConnectorTermination operation.
     * @callback module:api/DefaultApi~getVoiceConnectorTerminationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetVoiceConnectorTerminationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Retrieves termination setting details for the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_GetVoiceConnectorTermination.html\">GetVoiceConnectorTermination</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getVoiceConnectorTerminationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetVoiceConnectorTerminationResponse}
     */
    getVoiceConnectorTermination(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling getVoiceConnectorTermination");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetVoiceConnectorTerminationResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/termination', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoiceConnectorTerminationHealth operation.
     * @callback module:api/DefaultApi~getVoiceConnectorTerminationHealthCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetVoiceConnectorTerminationHealthResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_GetVoiceConnectorTerminationHealth.html\">GetVoiceConnectorTerminationHealth</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important> <p>Retrieves information about the last time a SIP <code>OPTIONS</code> ping was received from your SIP infrastructure for the specified Amazon Chime Voice Connector.</p>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~getVoiceConnectorTerminationHealthCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetVoiceConnectorTerminationHealthResponse}
     */
    getVoiceConnectorTerminationHealth(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling getVoiceConnectorTerminationHealth");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetVoiceConnectorTerminationHealthResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/termination/health', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inviteUsers operation.
     * @callback module:api/DefaultApi~inviteUsersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InviteUsersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sends email to a maximum of 50 users, inviting them to the specified Amazon Chime <code>Team</code> account. Only <code>Team</code> account types are currently supported for this action.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {module:model/String} operation 
     * @param {module:model/InviteUsersRequest} inviteUsersRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~inviteUsersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InviteUsersResponse}
     */
    inviteUsers(accountId, operation, inviteUsersRequest, opts, callback) {
      opts = opts || {};
      let postBody = inviteUsersRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling inviteUsers");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling inviteUsers");
      }
      // verify the required parameter 'inviteUsersRequest' is set
      if (inviteUsersRequest === undefined || inviteUsersRequest === null) {
        throw new Error("Missing the required parameter 'inviteUsersRequest' when calling inviteUsers");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InviteUsersResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/users#operation=add', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAccounts operation.
     * @callback module:api/DefaultApi~listAccountsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAccountsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the Amazon Chime accounts under the administrator's AWS account. You can filter accounts by account name prefix. To find out which Amazon Chime account a user belongs to, you can filter by the user's email address, which returns one account result.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [name] Amazon Chime account name prefix with which to filter results.
     * @param {String} [userEmail] User email address with which to filter results.
     * @param {String} [nextToken] The token to use to retrieve the next page of results.
     * @param {Number} [maxResults] The maximum number of results to return in a single call. Defaults to 100.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listAccountsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAccountsResponse}
     */
    listAccounts(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'name': opts['name'],
        'user-email': opts['userEmail'],
        'next-token': opts['nextToken'],
        'max-results': opts['maxResults'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAccountsResponse;
      return this.apiClient.callApi(
        '/accounts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAppInstanceAdmins operation.
     * @callback module:api/DefaultApi~listAppInstanceAdminsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAppInstanceAdminsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns a list of the administrators in the <code>AppInstance</code>.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_ListAppInstanceAdmins.html\">ListAppInstanceAdmins</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceArn The ARN of the <code>AppInstance</code>.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of administrators that you want to return.
     * @param {String} [nextToken] The token returned from previous API requests until the number of administrators is reached.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listAppInstanceAdminsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAppInstanceAdminsResponse}
     */
    listAppInstanceAdmins(appInstanceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'appInstanceArn' is set
      if (appInstanceArn === undefined || appInstanceArn === null) {
        throw new Error("Missing the required parameter 'appInstanceArn' when calling listAppInstanceAdmins");
      }

      let pathParams = {
        'appInstanceArn': appInstanceArn
      };
      let queryParams = {
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAppInstanceAdminsResponse;
      return this.apiClient.callApi(
        '/app-instances/{appInstanceArn}/admins', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAppInstanceUsers operation.
     * @callback module:api/DefaultApi~listAppInstanceUsersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAppInstanceUsersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>List all <code>AppInstanceUsers</code> created under a single <code>AppInstance</code>. </p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_ListAppInstanceUsers.html\">ListAppInstanceUsers</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceArn The ARN of the <code>AppInstance</code>.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of requests that you want returned.
     * @param {String} [nextToken] The token passed by previous API calls until all requested users are returned.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listAppInstanceUsersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAppInstanceUsersResponse}
     */
    listAppInstanceUsers(appInstanceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'appInstanceArn' is set
      if (appInstanceArn === undefined || appInstanceArn === null) {
        throw new Error("Missing the required parameter 'appInstanceArn' when calling listAppInstanceUsers");
      }

      let pathParams = {
      };
      let queryParams = {
        'app-instance-arn': appInstanceArn,
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAppInstanceUsersResponse;
      return this.apiClient.callApi(
        '/app-instance-users#app-instance-arn', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAppInstances operation.
     * @callback module:api/DefaultApi~listAppInstancesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAppInstancesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists all Amazon Chime <code>AppInstance</code>s created under a single AWS account.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_ListAppInstances.html\">ListAppInstances</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of <code>AppInstance</code>s that you want to return.
     * @param {String} [nextToken] The token passed by previous API requests until you reach the maximum number of <code>AppInstance</code>s.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listAppInstancesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAppInstancesResponse}
     */
    listAppInstances(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAppInstancesResponse;
      return this.apiClient.callApi(
        '/app-instances', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAttendeeTags operation.
     * @callback module:api/DefaultApi~listAttendeeTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAttendeeTagsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the tags applied to an Amazon Chime SDK attendee resource.</p> <important> <p>ListAttendeeTags is not supported in the Amazon Chime SDK Meetings Namespace. Update your application to remove calls to this API.</p> </important>
     * @param {String} meetingId The Amazon Chime SDK meeting ID.
     * @param {String} attendeeId The Amazon Chime SDK attendee ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listAttendeeTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAttendeeTagsResponse}
     */
    listAttendeeTags(meetingId, attendeeId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling listAttendeeTags");
      }
      // verify the required parameter 'attendeeId' is set
      if (attendeeId === undefined || attendeeId === null) {
        throw new Error("Missing the required parameter 'attendeeId' when calling listAttendeeTags");
      }

      let pathParams = {
        'meetingId': meetingId,
        'attendeeId': attendeeId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAttendeeTagsResponse;
      return this.apiClient.callApi(
        '/meetings/{meetingId}/attendees/{attendeeId}/tags', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAttendees operation.
     * @callback module:api/DefaultApi~listAttendeesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAttendeesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p> Lists the attendees for the specified Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime SDK Developer Guide</i>. </p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_ListAttendees.html\">ListAttendees</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} meetingId The Amazon Chime SDK meeting ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to use to retrieve the next page of results.
     * @param {Number} [maxResults] The maximum number of results to return in a single call.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listAttendeesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAttendeesResponse}
     */
    listAttendees(meetingId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling listAttendees");
      }

      let pathParams = {
        'meetingId': meetingId
      };
      let queryParams = {
        'next-token': opts['nextToken'],
        'max-results': opts['maxResults'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAttendeesResponse;
      return this.apiClient.callApi(
        '/meetings/{meetingId}/attendees', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listBots operation.
     * @callback module:api/DefaultApi~listBotsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListBotsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the bots associated with the administrator's Amazon Chime Enterprise account ID.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of results to return in a single call. The default is 10.
     * @param {String} [nextToken] The token to use to retrieve the next page of results.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listBotsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListBotsResponse}
     */
    listBots(accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling listBots");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListBotsResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/bots', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listChannelBans operation.
     * @callback module:api/DefaultApi~listChannelBansCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListChannelBansResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists all the users banned from a particular channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_ListChannelBans.html\">ListChannelBans</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of bans that you want returned.
     * @param {String} [nextToken] The token passed by previous API calls until all requested bans are returned.
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listChannelBansCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListChannelBansResponse}
     */
    listChannelBans(channelArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling listChannelBans");
      }

      let pathParams = {
        'channelArn': channelArn
      };
      let queryParams = {
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListChannelBansResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/bans', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listChannelMemberships operation.
     * @callback module:api/DefaultApi~listChannelMembershipsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListChannelMembershipsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists all channel memberships in a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_ListChannelMemberships.html\">ListChannelMemberships</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The maximum number of channel memberships that you want returned.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [type] The membership type of a user, <code>DEFAULT</code> or <code>HIDDEN</code>. Default members are always returned as part of <code>ListChannelMemberships</code>. Hidden members are only returned if the type filter in <code>ListChannelMemberships</code> equals <code>HIDDEN</code>. Otherwise hidden members are not returned.
     * @param {Number} [maxResults] The maximum number of channel memberships that you want returned.
     * @param {String} [nextToken] The token passed by previous API calls until all requested channel memberships are returned.
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listChannelMembershipsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListChannelMembershipsResponse}
     */
    listChannelMemberships(channelArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling listChannelMemberships");
      }

      let pathParams = {
        'channelArn': channelArn
      };
      let queryParams = {
        'type': opts['type'],
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListChannelMembershipsResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/memberships', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listChannelMembershipsForAppInstanceUser operation.
     * @callback module:api/DefaultApi~listChannelMembershipsForAppInstanceUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListChannelMembershipsForAppInstanceUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p> Lists all channels that a particular <code>AppInstanceUser</code> is a part of. Only an <code>AppInstanceAdmin</code> can call the API with a user ARN that is not their own. </p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_ListChannelMembershipsForAppInstanceUser.html\">ListChannelMembershipsForAppInstanceUser</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {module:model/String} scope 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [appInstanceUserArn] The ARN of the <code>AppInstanceUser</code>s
     * @param {Number} [maxResults] The maximum number of users that you want returned.
     * @param {String} [nextToken] The token returned from previous API requests until the number of channel memberships is reached.
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listChannelMembershipsForAppInstanceUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListChannelMembershipsForAppInstanceUserResponse}
     */
    listChannelMembershipsForAppInstanceUser(scope, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling listChannelMembershipsForAppInstanceUser");
      }

      let pathParams = {
      };
      let queryParams = {
        'app-instance-user-arn': opts['appInstanceUserArn'],
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2'],
        'scope': scope
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListChannelMembershipsForAppInstanceUserResponse;
      return this.apiClient.callApi(
        '/channels#scope=app-instance-user-memberships', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listChannelMessages operation.
     * @callback module:api/DefaultApi~listChannelMessagesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListChannelMessagesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>List all the messages in a channel. Returns a paginated list of <code>ChannelMessages</code>. By default, sorted by creation timestamp in descending order.</p> <note> <p>Redacted messages appear in the results as empty, since they are only redacted, not deleted. Deleted messages do not appear in the results. This action always returns the latest version of an edited message.</p> <p>Also, the x-amz-chime-bearer request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_ListChannelMessages.html\">ListChannelMessages</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [sortOrder] The order in which you want messages sorted. Default is Descending, based on time created.
     * @param {Date} [notBefore] The initial or starting time stamp for your requested messages.
     * @param {Date} [notAfter] The final or ending time stamp for your requested messages.
     * @param {Number} [maxResults] The maximum number of messages that you want returned.
     * @param {String} [nextToken] The token passed by previous API calls until all requested messages are returned.
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listChannelMessagesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListChannelMessagesResponse}
     */
    listChannelMessages(channelArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling listChannelMessages");
      }

      let pathParams = {
        'channelArn': channelArn
      };
      let queryParams = {
        'sort-order': opts['sortOrder'],
        'not-before': opts['notBefore'],
        'not-after': opts['notAfter'],
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListChannelMessagesResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/messages', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listChannelModerators operation.
     * @callback module:api/DefaultApi~listChannelModeratorsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListChannelModeratorsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists all the moderators for a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_ListChannelModerators.html\">ListChannelModerators</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of moderators that you want returned.
     * @param {String} [nextToken] The token passed by previous API calls until all requested moderators are returned.
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listChannelModeratorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListChannelModeratorsResponse}
     */
    listChannelModerators(channelArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling listChannelModerators");
      }

      let pathParams = {
        'channelArn': channelArn
      };
      let queryParams = {
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListChannelModeratorsResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/moderators', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listChannels operation.
     * @callback module:api/DefaultApi~listChannelsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListChannelsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists all Channels created under a single Chime App as a paginated list. You can specify filters to narrow results.</p> <p class=\"title\"> <b>Functionality &amp; restrictions</b> </p> <ul> <li> <p>Use privacy = <code>PUBLIC</code> to retrieve all public channels in the account.</p> </li> <li> <p>Only an <code>AppInstanceAdmin</code> can set privacy = <code>PRIVATE</code> to list the private channels in an account.</p> </li> </ul> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_ListChannels.html\">ListChannels</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceArn The ARN of the <code>AppInstance</code>.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [privacy] The privacy setting. <code>PUBLIC</code> retrieves all the public channels. <code>PRIVATE</code> retrieves private channels. Only an <code>AppInstanceAdmin</code> can retrieve private channels. 
     * @param {Number} [maxResults] The maximum number of channels that you want to return.
     * @param {String} [nextToken] The token passed by previous API calls until all requested channels are returned.
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listChannelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListChannelsResponse}
     */
    listChannels(appInstanceArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'appInstanceArn' is set
      if (appInstanceArn === undefined || appInstanceArn === null) {
        throw new Error("Missing the required parameter 'appInstanceArn' when calling listChannels");
      }

      let pathParams = {
      };
      let queryParams = {
        'app-instance-arn': appInstanceArn,
        'privacy': opts['privacy'],
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListChannelsResponse;
      return this.apiClient.callApi(
        '/channels#app-instance-arn', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listChannelsModeratedByAppInstanceUser operation.
     * @callback module:api/DefaultApi~listChannelsModeratedByAppInstanceUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListChannelsModeratedByAppInstanceUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>A list of the channels moderated by an <code>AppInstanceUser</code>.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_ListChannelsModeratedByAppInstanceUser.html\">ListChannelsModeratedByAppInstanceUser</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {module:model/String} scope 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [appInstanceUserArn] The ARN of the user in the moderated channel.
     * @param {Number} [maxResults] The maximum number of channels in the request.
     * @param {String} [nextToken] The token returned from previous API requests until the number of channels moderated by the user is reached.
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listChannelsModeratedByAppInstanceUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListChannelsModeratedByAppInstanceUserResponse}
     */
    listChannelsModeratedByAppInstanceUser(scope, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'scope' is set
      if (scope === undefined || scope === null) {
        throw new Error("Missing the required parameter 'scope' when calling listChannelsModeratedByAppInstanceUser");
      }

      let pathParams = {
      };
      let queryParams = {
        'app-instance-user-arn': opts['appInstanceUserArn'],
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2'],
        'scope': scope
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListChannelsModeratedByAppInstanceUserResponse;
      return this.apiClient.callApi(
        '/channels#scope=app-instance-user-moderated-channels', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listMediaCapturePipelines operation.
     * @callback module:api/DefaultApi~listMediaCapturePipelinesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListMediaCapturePipelinesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Returns a list of media capture pipelines.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_media-pipelines-chime_ListMediaCapturePipelines.html\">ListMediaCapturePipelines</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token used to retrieve the next page of results.
     * @param {Number} [maxResults] The maximum number of results to return in a single call. Valid Range: 1 - 99.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listMediaCapturePipelinesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListMediaCapturePipelinesResponse}
     */
    listMediaCapturePipelines(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'next-token': opts['nextToken'],
        'max-results': opts['maxResults'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListMediaCapturePipelinesResponse;
      return this.apiClient.callApi(
        '/media-capture-pipelines', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listMeetingTags operation.
     * @callback module:api/DefaultApi~listMeetingTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListMeetingTagsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the tags applied to an Amazon Chime SDK meeting resource.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_ListTagsForResource.html\">ListTagsForResource</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} meetingId The Amazon Chime SDK meeting ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listMeetingTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListMeetingTagsResponse}
     */
    listMeetingTags(meetingId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling listMeetingTags");
      }

      let pathParams = {
        'meetingId': meetingId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListMeetingTagsResponse;
      return this.apiClient.callApi(
        '/meetings/{meetingId}/tags', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listMeetings operation.
     * @callback module:api/DefaultApi~listMeetingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListMeetingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists up to 100 active Amazon Chime SDK meetings.</p> <important> <p>ListMeetings is not supported in the Amazon Chime SDK Meetings Namespace. Update your application to remove calls to this API.</p> </important> <p>For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to use to retrieve the next page of results.
     * @param {Number} [maxResults] The maximum number of results to return in a single call.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listMeetingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListMeetingsResponse}
     */
    listMeetings(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'next-token': opts['nextToken'],
        'max-results': opts['maxResults'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListMeetingsResponse;
      return this.apiClient.callApi(
        '/meetings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPhoneNumberOrders operation.
     * @callback module:api/DefaultApi~listPhoneNumberOrdersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListPhoneNumberOrdersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the phone number orders for the administrator's Amazon Chime account.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to use to retrieve the next page of results.
     * @param {Number} [maxResults] The maximum number of results to return in a single call.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listPhoneNumberOrdersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListPhoneNumberOrdersResponse}
     */
    listPhoneNumberOrders(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'next-token': opts['nextToken'],
        'max-results': opts['maxResults'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListPhoneNumberOrdersResponse;
      return this.apiClient.callApi(
        '/phone-number-orders', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPhoneNumbers operation.
     * @callback module:api/DefaultApi~listPhoneNumbersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListPhoneNumbersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the phone numbers for the specified Amazon Chime account, Amazon Chime user, Amazon Chime Voice Connector, or Amazon Chime Voice Connector group.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [status] The phone number status.
     * @param {module:model/String} [productType] The phone number product type.
     * @param {module:model/String} [filterName] The filter to use to limit the number of results.
     * @param {String} [filterValue] The value to use for the filter.
     * @param {Number} [maxResults] The maximum number of results to return in a single call.
     * @param {String} [nextToken] The token to use to retrieve the next page of results.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listPhoneNumbersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListPhoneNumbersResponse}
     */
    listPhoneNumbers(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'status': opts['status'],
        'product-type': opts['productType'],
        'filter-name': opts['filterName'],
        'filter-value': opts['filterValue'],
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListPhoneNumbersResponse;
      return this.apiClient.callApi(
        '/phone-numbers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listProxySessions operation.
     * @callback module:api/DefaultApi~listProxySessionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListProxySessionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the proxy sessions for the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_ListProxySessions.html\">ListProxySessions</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime voice connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:model/String} [status] The proxy session status.
     * @param {String} [nextToken] The token to use to retrieve the next page of results.
     * @param {Number} [maxResults] The maximum number of results to return in a single call.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listProxySessionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListProxySessionsResponse}
     */
    listProxySessions(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling listProxySessions");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
        'status': opts['status'],
        'next-token': opts['nextToken'],
        'max-results': opts['maxResults'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListProxySessionsResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/proxy-sessions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listRoomMemberships operation.
     * @callback module:api/DefaultApi~listRoomMembershipsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListRoomMembershipsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the membership details for the specified room in an Amazon Chime Enterprise account, such as the members' IDs, email addresses, and names.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} roomId The room ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of results to return in a single call.
     * @param {String} [nextToken] The token to use to retrieve the next page of results.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listRoomMembershipsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListRoomMembershipsResponse}
     */
    listRoomMemberships(accountId, roomId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling listRoomMemberships");
      }
      // verify the required parameter 'roomId' is set
      if (roomId === undefined || roomId === null) {
        throw new Error("Missing the required parameter 'roomId' when calling listRoomMemberships");
      }

      let pathParams = {
        'accountId': accountId,
        'roomId': roomId
      };
      let queryParams = {
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListRoomMembershipsResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/rooms/{roomId}/memberships', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listRooms operation.
     * @callback module:api/DefaultApi~listRoomsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListRoomsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the room details for the specified Amazon Chime Enterprise account. Optionally, filter the results by a member ID (user ID or bot ID) to see a list of rooms that the member belongs to.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [memberId] The member ID (user ID or bot ID).
     * @param {Number} [maxResults] The maximum number of results to return in a single call.
     * @param {String} [nextToken] The token to use to retrieve the next page of results.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listRoomsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListRoomsResponse}
     */
    listRooms(accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling listRooms");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
        'member-id': opts['memberId'],
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListRoomsResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/rooms', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listSipMediaApplications operation.
     * @callback module:api/DefaultApi~listSipMediaApplicationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListSipMediaApplicationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the SIP media applications under the administrator's AWS account.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_ListSipMediaApplications.html\">ListSipMediaApplications</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {Number} [maxResults] The maximum number of results to return in a single call. Defaults to 100.
     * @param {String} [nextToken] The token to use to retrieve the next page of results.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listSipMediaApplicationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListSipMediaApplicationsResponse}
     */
    listSipMediaApplications(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListSipMediaApplicationsResponse;
      return this.apiClient.callApi(
        '/sip-media-applications', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listSipRules operation.
     * @callback module:api/DefaultApi~listSipRulesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListSipRulesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the SIP rules under the administrator's AWS account.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_ListSipRules.html\">ListSipRules</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [sipMediaApplication] The SIP media application ID.
     * @param {Number} [maxResults] The maximum number of results to return in a single call. Defaults to 100.
     * @param {String} [nextToken] The token to use to retrieve the next page of results.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listSipRulesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListSipRulesResponse}
     */
    listSipRules(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'sip-media-application': opts['sipMediaApplication'],
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListSipRulesResponse;
      return this.apiClient.callApi(
        '/sip-rules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listSupportedPhoneNumberCountries operation.
     * @callback module:api/DefaultApi~listSupportedPhoneNumberCountriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListSupportedPhoneNumberCountriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists supported phone number countries.
     * @param {module:model/String} productType The phone number product type.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listSupportedPhoneNumberCountriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListSupportedPhoneNumberCountriesResponse}
     */
    listSupportedPhoneNumberCountries(productType, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'productType' is set
      if (productType === undefined || productType === null) {
        throw new Error("Missing the required parameter 'productType' when calling listSupportedPhoneNumberCountries");
      }

      let pathParams = {
      };
      let queryParams = {
        'product-type': productType
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListSupportedPhoneNumberCountriesResponse;
      return this.apiClient.callApi(
        '/phone-number-countries#product-type', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTagsForResource operation.
     * @callback module:api/DefaultApi~listTagsForResourceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListTagsForResourceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the tags applied to an Amazon Chime SDK meeting and messaging resources.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the applicable latest version in the Amazon Chime SDK.</p> <ul> <li> <p>For meetings: <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_ListTagsForResource.html\">ListTagsForResource</a>.</p> </li> <li> <p>For messaging: <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_ListTagsForResource.html\">ListTagsForResource</a>.</p> </li> </ul> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} arn The resource ARN.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listTagsForResourceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListTagsForResourceResponse}
     */
    listTagsForResource(arn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'arn' is set
      if (arn === undefined || arn === null) {
        throw new Error("Missing the required parameter 'arn' when calling listTagsForResource");
      }

      let pathParams = {
      };
      let queryParams = {
        'arn': arn
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListTagsForResourceResponse;
      return this.apiClient.callApi(
        '/tags#arn', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listUsers operation.
     * @callback module:api/DefaultApi~listUsersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListUsersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the users that belong to the specified Amazon Chime account. You can specify an email address to list only the user that the email address belongs to.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [userEmail] Optional. The user email address used to filter results. Maximum 1.
     * @param {module:model/String} [userType] The user type.
     * @param {Number} [maxResults] The maximum number of results to return in a single call. Defaults to 100.
     * @param {String} [nextToken] The token to use to retrieve the next page of results.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listUsersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListUsersResponse}
     */
    listUsers(accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling listUsers");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
        'user-email': opts['userEmail'],
        'user-type': opts['userType'],
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListUsersResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/users', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listVoiceConnectorGroups operation.
     * @callback module:api/DefaultApi~listVoiceConnectorGroupsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListVoiceConnectorGroupsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the Amazon Chime Voice Connector groups for the administrator's AWS account.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_ListVoiceConnectorGroups.html\">ListVoiceConnectorGroups</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to use to retrieve the next page of results.
     * @param {Number} [maxResults] The maximum number of results to return in a single call.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listVoiceConnectorGroupsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListVoiceConnectorGroupsResponse}
     */
    listVoiceConnectorGroups(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'next-token': opts['nextToken'],
        'max-results': opts['maxResults'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListVoiceConnectorGroupsResponse;
      return this.apiClient.callApi(
        '/voice-connector-groups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listVoiceConnectorTerminationCredentials operation.
     * @callback module:api/DefaultApi~listVoiceConnectorTerminationCredentialsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListVoiceConnectorTerminationCredentialsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the SIP credentials for the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_ListVoiceConnectorTerminationCredentials.html\">ListVoiceConnectorTerminationCredentials</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~listVoiceConnectorTerminationCredentialsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListVoiceConnectorTerminationCredentialsResponse}
     */
    listVoiceConnectorTerminationCredentials(voiceConnectorId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling listVoiceConnectorTerminationCredentials");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListVoiceConnectorTerminationCredentialsResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/termination/credentials', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listVoiceConnectors operation.
     * @callback module:api/DefaultApi~listVoiceConnectorsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListVoiceConnectorsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Lists the Amazon Chime Voice Connectors for the administrator's AWS account.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_ListVoiceConnectors.html\">ListVoiceConnectors</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [nextToken] The token to use to retrieve the next page of results.
     * @param {Number} [maxResults] The maximum number of results to return in a single call.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~listVoiceConnectorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListVoiceConnectorsResponse}
     */
    listVoiceConnectors(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'next-token': opts['nextToken'],
        'max-results': opts['maxResults'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2']
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListVoiceConnectorsResponse;
      return this.apiClient.callApi(
        '/voice-connectors', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the logoutUser operation.
     * @callback module:api/DefaultApi~logoutUserCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Logs out the specified user from all of the devices they are currently logged into.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} userId The user ID.
     * @param {module:model/String} operation 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~logoutUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    logoutUser(accountId, userId, operation, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling logoutUser");
      }
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling logoutUser");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling logoutUser");
      }

      let pathParams = {
        'accountId': accountId,
        'userId': userId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/accounts/{accountId}/users/{userId}#operation=logout', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putAppInstanceRetentionSettings operation.
     * @callback module:api/DefaultApi~putAppInstanceRetentionSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutAppInstanceRetentionSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Sets the amount of time in days that a given <code>AppInstance</code> retains data.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_PutAppInstanceRetentionSettings.html\">PutAppInstanceRetentionSettings</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceArn The ARN of the <code>AppInstance</code>.
     * @param {module:model/PutAppInstanceRetentionSettingsRequest} putAppInstanceRetentionSettingsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putAppInstanceRetentionSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutAppInstanceRetentionSettingsResponse}
     */
    putAppInstanceRetentionSettings(appInstanceArn, putAppInstanceRetentionSettingsRequest, opts, callback) {
      opts = opts || {};
      let postBody = putAppInstanceRetentionSettingsRequest;
      // verify the required parameter 'appInstanceArn' is set
      if (appInstanceArn === undefined || appInstanceArn === null) {
        throw new Error("Missing the required parameter 'appInstanceArn' when calling putAppInstanceRetentionSettings");
      }
      // verify the required parameter 'putAppInstanceRetentionSettingsRequest' is set
      if (putAppInstanceRetentionSettingsRequest === undefined || putAppInstanceRetentionSettingsRequest === null) {
        throw new Error("Missing the required parameter 'putAppInstanceRetentionSettingsRequest' when calling putAppInstanceRetentionSettings");
      }

      let pathParams = {
        'appInstanceArn': appInstanceArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutAppInstanceRetentionSettingsResponse;
      return this.apiClient.callApi(
        '/app-instances/{appInstanceArn}/retention-settings', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putAppInstanceStreamingConfigurations operation.
     * @callback module:api/DefaultApi~putAppInstanceStreamingConfigurationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutAppInstanceStreamingConfigurationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>The data streaming configurations of an <code>AppInstance</code>.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_PutMessagingStreamingConfigurations.html\">PutMessagingStreamingConfigurations</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceArn The ARN of the <code>AppInstance</code>.
     * @param {module:model/PutAppInstanceStreamingConfigurationsRequest} putAppInstanceStreamingConfigurationsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putAppInstanceStreamingConfigurationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutAppInstanceStreamingConfigurationsResponse}
     */
    putAppInstanceStreamingConfigurations(appInstanceArn, putAppInstanceStreamingConfigurationsRequest, opts, callback) {
      opts = opts || {};
      let postBody = putAppInstanceStreamingConfigurationsRequest;
      // verify the required parameter 'appInstanceArn' is set
      if (appInstanceArn === undefined || appInstanceArn === null) {
        throw new Error("Missing the required parameter 'appInstanceArn' when calling putAppInstanceStreamingConfigurations");
      }
      // verify the required parameter 'putAppInstanceStreamingConfigurationsRequest' is set
      if (putAppInstanceStreamingConfigurationsRequest === undefined || putAppInstanceStreamingConfigurationsRequest === null) {
        throw new Error("Missing the required parameter 'putAppInstanceStreamingConfigurationsRequest' when calling putAppInstanceStreamingConfigurations");
      }

      let pathParams = {
        'appInstanceArn': appInstanceArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutAppInstanceStreamingConfigurationsResponse;
      return this.apiClient.callApi(
        '/app-instances/{appInstanceArn}/streaming-configurations', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putEventsConfiguration operation.
     * @callback module:api/DefaultApi~putEventsConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutEventsConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an events configuration that allows a bot to receive outgoing events sent by Amazon Chime. Choose either an HTTPS endpoint or a Lambda function ARN. For more information, see <a>Bot</a>.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} botId The bot ID.
     * @param {module:model/PutEventsConfigurationRequest} putEventsConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putEventsConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutEventsConfigurationResponse}
     */
    putEventsConfiguration(accountId, botId, putEventsConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = putEventsConfigurationRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling putEventsConfiguration");
      }
      // verify the required parameter 'botId' is set
      if (botId === undefined || botId === null) {
        throw new Error("Missing the required parameter 'botId' when calling putEventsConfiguration");
      }
      // verify the required parameter 'putEventsConfigurationRequest' is set
      if (putEventsConfigurationRequest === undefined || putEventsConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'putEventsConfigurationRequest' when calling putEventsConfiguration");
      }

      let pathParams = {
        'accountId': accountId,
        'botId': botId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutEventsConfigurationResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/bots/{botId}/events-configuration', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putRetentionSettings operation.
     * @callback module:api/DefaultApi~putRetentionSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutRetentionSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p> Puts retention settings for the specified Amazon Chime Enterprise account. We recommend using AWS CloudTrail to monitor usage of this API for your account. For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/cloudtrail.html\">Logging Amazon Chime API Calls with AWS CloudTrail</a> in the <i>Amazon Chime Administration Guide</i>.</p> <p> To turn off existing retention settings, remove the number of days from the corresponding <b>RetentionDays</b> field in the <b>RetentionSettings</b> object. For more information about retention settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/chat-retention.html\">Managing Chat Retention Policies</a> in the <i>Amazon Chime Administration Guide</i>.</p>
     * @param {String} accountId The Amazon Chime account ID.
     * @param {module:model/PutRetentionSettingsRequest} putRetentionSettingsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putRetentionSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutRetentionSettingsResponse}
     */
    putRetentionSettings(accountId, putRetentionSettingsRequest, opts, callback) {
      opts = opts || {};
      let postBody = putRetentionSettingsRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling putRetentionSettings");
      }
      // verify the required parameter 'putRetentionSettingsRequest' is set
      if (putRetentionSettingsRequest === undefined || putRetentionSettingsRequest === null) {
        throw new Error("Missing the required parameter 'putRetentionSettingsRequest' when calling putRetentionSettings");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutRetentionSettingsResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/retention-settings', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putSipMediaApplicationLoggingConfiguration operation.
     * @callback module:api/DefaultApi~putSipMediaApplicationLoggingConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutSipMediaApplicationLoggingConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates the logging configuration for the specified SIP media application.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_PutSipMediaApplicationLoggingConfiguration.html\">PutSipMediaApplicationLoggingConfiguration</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} sipMediaApplicationId The SIP media application ID.
     * @param {module:model/PutSipMediaApplicationLoggingConfigurationRequest} putSipMediaApplicationLoggingConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putSipMediaApplicationLoggingConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutSipMediaApplicationLoggingConfigurationResponse}
     */
    putSipMediaApplicationLoggingConfiguration(sipMediaApplicationId, putSipMediaApplicationLoggingConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = putSipMediaApplicationLoggingConfigurationRequest;
      // verify the required parameter 'sipMediaApplicationId' is set
      if (sipMediaApplicationId === undefined || sipMediaApplicationId === null) {
        throw new Error("Missing the required parameter 'sipMediaApplicationId' when calling putSipMediaApplicationLoggingConfiguration");
      }
      // verify the required parameter 'putSipMediaApplicationLoggingConfigurationRequest' is set
      if (putSipMediaApplicationLoggingConfigurationRequest === undefined || putSipMediaApplicationLoggingConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'putSipMediaApplicationLoggingConfigurationRequest' when calling putSipMediaApplicationLoggingConfiguration");
      }

      let pathParams = {
        'sipMediaApplicationId': sipMediaApplicationId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutSipMediaApplicationLoggingConfigurationResponse;
      return this.apiClient.callApi(
        '/sip-media-applications/{sipMediaApplicationId}/logging-configuration', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putVoiceConnectorEmergencyCallingConfiguration operation.
     * @callback module:api/DefaultApi~putVoiceConnectorEmergencyCallingConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutVoiceConnectorEmergencyCallingConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Puts emergency calling configuration details to the specified Amazon Chime Voice Connector, such as emergency phone numbers and calling countries. Origination and termination settings must be enabled for the Amazon Chime Voice Connector before emergency calling can be configured.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_PutVoiceConnectorEmergencyCallingConfiguration.html\">PutVoiceConnectorEmergencyCallingConfiguration</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {module:model/PutVoiceConnectorEmergencyCallingConfigurationRequest} putVoiceConnectorEmergencyCallingConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putVoiceConnectorEmergencyCallingConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutVoiceConnectorEmergencyCallingConfigurationResponse}
     */
    putVoiceConnectorEmergencyCallingConfiguration(voiceConnectorId, putVoiceConnectorEmergencyCallingConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = putVoiceConnectorEmergencyCallingConfigurationRequest;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling putVoiceConnectorEmergencyCallingConfiguration");
      }
      // verify the required parameter 'putVoiceConnectorEmergencyCallingConfigurationRequest' is set
      if (putVoiceConnectorEmergencyCallingConfigurationRequest === undefined || putVoiceConnectorEmergencyCallingConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'putVoiceConnectorEmergencyCallingConfigurationRequest' when calling putVoiceConnectorEmergencyCallingConfiguration");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutVoiceConnectorEmergencyCallingConfigurationResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/emergency-calling-configuration', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putVoiceConnectorLoggingConfiguration operation.
     * @callback module:api/DefaultApi~putVoiceConnectorLoggingConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutVoiceConnectorLoggingConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds a logging configuration for the specified Amazon Chime Voice Connector. The logging configuration specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_PutVoiceConnectorLoggingConfiguration.html\">PutVoiceConnectorLoggingConfiguration</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {module:model/PutVoiceConnectorLoggingConfigurationRequest} putVoiceConnectorLoggingConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putVoiceConnectorLoggingConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutVoiceConnectorLoggingConfigurationResponse}
     */
    putVoiceConnectorLoggingConfiguration(voiceConnectorId, putVoiceConnectorLoggingConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = putVoiceConnectorLoggingConfigurationRequest;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling putVoiceConnectorLoggingConfiguration");
      }
      // verify the required parameter 'putVoiceConnectorLoggingConfigurationRequest' is set
      if (putVoiceConnectorLoggingConfigurationRequest === undefined || putVoiceConnectorLoggingConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'putVoiceConnectorLoggingConfigurationRequest' when calling putVoiceConnectorLoggingConfiguration");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutVoiceConnectorLoggingConfigurationResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/logging-configuration', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putVoiceConnectorOrigination operation.
     * @callback module:api/DefaultApi~putVoiceConnectorOriginationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutVoiceConnectorOriginationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds origination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off origination settings.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_PutVoiceConnectorOrigination.html\">PutVoiceConnectorOrigination</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {module:model/PutVoiceConnectorOriginationRequest} putVoiceConnectorOriginationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putVoiceConnectorOriginationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutVoiceConnectorOriginationResponse}
     */
    putVoiceConnectorOrigination(voiceConnectorId, putVoiceConnectorOriginationRequest, opts, callback) {
      opts = opts || {};
      let postBody = putVoiceConnectorOriginationRequest;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling putVoiceConnectorOrigination");
      }
      // verify the required parameter 'putVoiceConnectorOriginationRequest' is set
      if (putVoiceConnectorOriginationRequest === undefined || putVoiceConnectorOriginationRequest === null) {
        throw new Error("Missing the required parameter 'putVoiceConnectorOriginationRequest' when calling putVoiceConnectorOrigination");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutVoiceConnectorOriginationResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/origination', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putVoiceConnectorProxy operation.
     * @callback module:api/DefaultApi~putVoiceConnectorProxyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutVoiceConnectorProxyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Puts the specified proxy configuration to the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_PutVoiceConnectorProxy.html\">PutVoiceConnectorProxy</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime voice connector ID.
     * @param {module:model/PutVoiceConnectorProxyRequest} putVoiceConnectorProxyRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putVoiceConnectorProxyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutVoiceConnectorProxyResponse}
     */
    putVoiceConnectorProxy(voiceConnectorId, putVoiceConnectorProxyRequest, opts, callback) {
      opts = opts || {};
      let postBody = putVoiceConnectorProxyRequest;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling putVoiceConnectorProxy");
      }
      // verify the required parameter 'putVoiceConnectorProxyRequest' is set
      if (putVoiceConnectorProxyRequest === undefined || putVoiceConnectorProxyRequest === null) {
        throw new Error("Missing the required parameter 'putVoiceConnectorProxyRequest' when calling putVoiceConnectorProxy");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutVoiceConnectorProxyResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/programmable-numbers/proxy', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putVoiceConnectorStreamingConfiguration operation.
     * @callback module:api/DefaultApi~putVoiceConnectorStreamingConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutVoiceConnectorStreamingConfigurationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds a streaming configuration for the specified Amazon Chime Voice Connector. The streaming configuration specifies whether media streaming is enabled for sending to Kinesis. It also sets the retention period, in hours, for the Amazon Kinesis data.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_PutVoiceConnectorStreamingConfiguration.html\">PutVoiceConnectorStreamingConfiguration</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {module:model/PutVoiceConnectorStreamingConfigurationRequest} putVoiceConnectorStreamingConfigurationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putVoiceConnectorStreamingConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutVoiceConnectorStreamingConfigurationResponse}
     */
    putVoiceConnectorStreamingConfiguration(voiceConnectorId, putVoiceConnectorStreamingConfigurationRequest, opts, callback) {
      opts = opts || {};
      let postBody = putVoiceConnectorStreamingConfigurationRequest;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling putVoiceConnectorStreamingConfiguration");
      }
      // verify the required parameter 'putVoiceConnectorStreamingConfigurationRequest' is set
      if (putVoiceConnectorStreamingConfigurationRequest === undefined || putVoiceConnectorStreamingConfigurationRequest === null) {
        throw new Error("Missing the required parameter 'putVoiceConnectorStreamingConfigurationRequest' when calling putVoiceConnectorStreamingConfiguration");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutVoiceConnectorStreamingConfigurationResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/streaming-configuration', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putVoiceConnectorTermination operation.
     * @callback module:api/DefaultApi~putVoiceConnectorTerminationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PutVoiceConnectorTerminationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds termination settings for the specified Amazon Chime Voice Connector.</p> <note> <p>If emergency calling is configured for the Amazon Chime Voice Connector, it must be deleted prior to turning off termination settings.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_PutVoiceConnectorTermination.html\">PutVoiceConnectorTermination</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {module:model/PutVoiceConnectorTerminationRequest} putVoiceConnectorTerminationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putVoiceConnectorTerminationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PutVoiceConnectorTerminationResponse}
     */
    putVoiceConnectorTermination(voiceConnectorId, putVoiceConnectorTerminationRequest, opts, callback) {
      opts = opts || {};
      let postBody = putVoiceConnectorTerminationRequest;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling putVoiceConnectorTermination");
      }
      // verify the required parameter 'putVoiceConnectorTerminationRequest' is set
      if (putVoiceConnectorTerminationRequest === undefined || putVoiceConnectorTerminationRequest === null) {
        throw new Error("Missing the required parameter 'putVoiceConnectorTerminationRequest' when calling putVoiceConnectorTermination");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PutVoiceConnectorTerminationResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/termination', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the putVoiceConnectorTerminationCredentials operation.
     * @callback module:api/DefaultApi~putVoiceConnectorTerminationCredentialsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Adds termination SIP credentials for the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_PutVoiceConnectorTerminationCredentials.html\">PutVoiceConnectorTerminationCredentials</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {module:model/String} operation 
     * @param {module:model/PutVoiceConnectorTerminationCredentialsRequest} putVoiceConnectorTerminationCredentialsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~putVoiceConnectorTerminationCredentialsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    putVoiceConnectorTerminationCredentials(voiceConnectorId, operation, putVoiceConnectorTerminationCredentialsRequest, opts, callback) {
      opts = opts || {};
      let postBody = putVoiceConnectorTerminationCredentialsRequest;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling putVoiceConnectorTerminationCredentials");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling putVoiceConnectorTerminationCredentials");
      }
      // verify the required parameter 'putVoiceConnectorTerminationCredentialsRequest' is set
      if (putVoiceConnectorTerminationCredentialsRequest === undefined || putVoiceConnectorTerminationCredentialsRequest === null) {
        throw new Error("Missing the required parameter 'putVoiceConnectorTerminationCredentialsRequest' when calling putVoiceConnectorTerminationCredentials");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/termination/credentials#operation=put', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the redactChannelMessage operation.
     * @callback module:api/DefaultApi~redactChannelMessageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RedactChannelMessageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Redacts message content, but not metadata. The message exists in the back end, but the action returns null content, and the state shows as redacted.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_RedactChannelMessage.html\">RedactChannelMessage</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel containing the messages that you want to redact.
     * @param {String} messageId The ID of the message being redacted.
     * @param {module:model/String} operation 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~redactChannelMessageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RedactChannelMessageResponse}
     */
    redactChannelMessage(channelArn, messageId, operation, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling redactChannelMessage");
      }
      // verify the required parameter 'messageId' is set
      if (messageId === undefined || messageId === null) {
        throw new Error("Missing the required parameter 'messageId' when calling redactChannelMessage");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling redactChannelMessage");
      }

      let pathParams = {
        'channelArn': channelArn,
        'messageId': messageId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RedactChannelMessageResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/messages/{messageId}#operation=redact', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the redactConversationMessage operation.
     * @callback module:api/DefaultApi~redactConversationMessageCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Redacts the specified message from the specified Amazon Chime conversation.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} conversationId The conversation ID.
     * @param {String} messageId The message ID.
     * @param {module:model/String} operation 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~redactConversationMessageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    redactConversationMessage(accountId, conversationId, messageId, operation, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling redactConversationMessage");
      }
      // verify the required parameter 'conversationId' is set
      if (conversationId === undefined || conversationId === null) {
        throw new Error("Missing the required parameter 'conversationId' when calling redactConversationMessage");
      }
      // verify the required parameter 'messageId' is set
      if (messageId === undefined || messageId === null) {
        throw new Error("Missing the required parameter 'messageId' when calling redactConversationMessage");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling redactConversationMessage");
      }

      let pathParams = {
        'accountId': accountId,
        'conversationId': conversationId,
        'messageId': messageId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/accounts/{accountId}/conversations/{conversationId}/messages/{messageId}#operation=redact', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the redactRoomMessage operation.
     * @callback module:api/DefaultApi~redactRoomMessageCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Redacts the specified message from the specified Amazon Chime channel.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} roomId The room ID.
     * @param {String} messageId The message ID.
     * @param {module:model/String} operation 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~redactRoomMessageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    redactRoomMessage(accountId, roomId, messageId, operation, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling redactRoomMessage");
      }
      // verify the required parameter 'roomId' is set
      if (roomId === undefined || roomId === null) {
        throw new Error("Missing the required parameter 'roomId' when calling redactRoomMessage");
      }
      // verify the required parameter 'messageId' is set
      if (messageId === undefined || messageId === null) {
        throw new Error("Missing the required parameter 'messageId' when calling redactRoomMessage");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling redactRoomMessage");
      }

      let pathParams = {
        'accountId': accountId,
        'roomId': roomId,
        'messageId': messageId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/accounts/{accountId}/rooms/{roomId}/messages/{messageId}#operation=redact', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the regenerateSecurityToken operation.
     * @callback module:api/DefaultApi~regenerateSecurityTokenCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegenerateSecurityTokenResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Regenerates the security token for a bot.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} botId The bot ID.
     * @param {module:model/String} operation 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~regenerateSecurityTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegenerateSecurityTokenResponse}
     */
    regenerateSecurityToken(accountId, botId, operation, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling regenerateSecurityToken");
      }
      // verify the required parameter 'botId' is set
      if (botId === undefined || botId === null) {
        throw new Error("Missing the required parameter 'botId' when calling regenerateSecurityToken");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling regenerateSecurityToken");
      }

      let pathParams = {
        'accountId': accountId,
        'botId': botId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RegenerateSecurityTokenResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/bots/{botId}#operation=regenerate-security-token', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resetPersonalPIN operation.
     * @callback module:api/DefaultApi~resetPersonalPINCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResetPersonalPINResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resets the personal meeting PIN for the specified user on an Amazon Chime account. Returns the <a>User</a> object with the updated personal meeting PIN.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} userId The user ID.
     * @param {module:model/String} operation 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~resetPersonalPINCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResetPersonalPINResponse}
     */
    resetPersonalPIN(accountId, userId, operation, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling resetPersonalPIN");
      }
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling resetPersonalPIN");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling resetPersonalPIN");
      }

      let pathParams = {
        'accountId': accountId,
        'userId': userId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResetPersonalPINResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/users/{userId}#operation=reset-personal-pin', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the restorePhoneNumber operation.
     * @callback module:api/DefaultApi~restorePhoneNumberCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RestorePhoneNumberResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Moves a phone number from the <b>Deletion queue</b> back into the phone number <b>Inventory</b>.
     * @param {String} phoneNumberId The phone number.
     * @param {module:model/String} operation 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~restorePhoneNumberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RestorePhoneNumberResponse}
     */
    restorePhoneNumber(phoneNumberId, operation, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'phoneNumberId' is set
      if (phoneNumberId === undefined || phoneNumberId === null) {
        throw new Error("Missing the required parameter 'phoneNumberId' when calling restorePhoneNumber");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling restorePhoneNumber");
      }

      let pathParams = {
        'phoneNumberId': phoneNumberId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RestorePhoneNumberResponse;
      return this.apiClient.callApi(
        '/phone-numbers/{phoneNumberId}#operation=restore', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the searchAvailablePhoneNumbers operation.
     * @callback module:api/DefaultApi~searchAvailablePhoneNumbersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SearchAvailablePhoneNumbersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Searches for phone numbers that can be ordered. For US numbers, provide at least one of the following search filters: <code>AreaCode</code>, <code>City</code>, <code>State</code>, or <code>TollFreePrefix</code>. If you provide <code>City</code>, you must also provide <code>State</code>. Numbers outside the US only support the <code>PhoneNumberType</code> filter, which you must use.
     * @param {module:model/String} type 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [areaCode] The area code used to filter results. Only applies to the US.
     * @param {String} [city] The city used to filter results. Only applies to the US.
     * @param {String} [country] The country used to filter results. Defaults to the US Format: ISO 3166-1 alpha-2.
     * @param {String} [state] The state used to filter results. Required only if you provide <code>City</code>. Only applies to the US.
     * @param {String} [tollFreePrefix] The toll-free prefix that you use to filter results. Only applies to the US.
     * @param {module:model/String} [phoneNumberType] The phone number type used to filter results. Required for non-US numbers.
     * @param {Number} [maxResults] The maximum number of results to return in a single call.
     * @param {String} [nextToken] The token used to retrieve the next page of results.
     * @param {String} [maxResults2] Pagination limit
     * @param {String} [nextToken2] Pagination token
     * @param {module:api/DefaultApi~searchAvailablePhoneNumbersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SearchAvailablePhoneNumbersResponse}
     */
    searchAvailablePhoneNumbers(type, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'type' is set
      if (type === undefined || type === null) {
        throw new Error("Missing the required parameter 'type' when calling searchAvailablePhoneNumbers");
      }

      let pathParams = {
      };
      let queryParams = {
        'area-code': opts['areaCode'],
        'city': opts['city'],
        'country': opts['country'],
        'state': opts['state'],
        'toll-free-prefix': opts['tollFreePrefix'],
        'phone-number-type': opts['phoneNumberType'],
        'max-results': opts['maxResults'],
        'next-token': opts['nextToken'],
        'MaxResults': opts['maxResults2'],
        'NextToken': opts['nextToken2'],
        'type': type
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SearchAvailablePhoneNumbersResponse;
      return this.apiClient.callApi(
        '/search#type=phone-numbers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sendChannelMessage operation.
     * @callback module:api/DefaultApi~sendChannelMessageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SendChannelMessageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Sends a message to a particular channel that the member is a part of.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> <p>Also, <code>STANDARD</code> messages can contain 4KB of data and the 1KB of metadata. <code>CONTROL</code> messages can contain 30 bytes of data and no metadata.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_SendChannelMessage.html\">SendChannelMessage</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel.
     * @param {module:model/SendChannelMessageRequest} sendChannelMessageRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~sendChannelMessageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SendChannelMessageResponse}
     */
    sendChannelMessage(channelArn, sendChannelMessageRequest, opts, callback) {
      opts = opts || {};
      let postBody = sendChannelMessageRequest;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling sendChannelMessage");
      }
      // verify the required parameter 'sendChannelMessageRequest' is set
      if (sendChannelMessageRequest === undefined || sendChannelMessageRequest === null) {
        throw new Error("Missing the required parameter 'sendChannelMessageRequest' when calling sendChannelMessage");
      }

      let pathParams = {
        'channelArn': channelArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SendChannelMessageResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/messages', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the startMeetingTranscription operation.
     * @callback module:api/DefaultApi~startMeetingTranscriptionCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Starts transcription for the specified <code>meetingId</code>. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/meeting-transcription.html\"> Using Amazon Chime SDK live transcription </a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> <p>If you specify an invalid configuration, a <code>TranscriptFailed</code> event will be sent with the contents of the <code>BadRequestException</code> generated by Amazon Transcribe. For more information on each parameter and which combinations are valid, refer to the <a href=\"https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html\">StartStreamTranscription</a> API in the <i>Amazon Transcribe Developer Guide</i>.</p> <note> <p>Amazon Chime SDK live transcription is powered by Amazon Transcribe. Use of Amazon Transcribe is subject to the <a href=\"https://aws.amazon.com/service-terms/\">AWS Service Terms</a>, including the terms specific to the AWS Machine Learning and Artificial Intelligence Services.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_StartMeetingTranscription.html\">StartMeetingTranscription</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} meetingId The unique ID of the meeting being transcribed.
     * @param {module:model/String} operation 
     * @param {module:model/StartMeetingTranscriptionRequest} startMeetingTranscriptionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~startMeetingTranscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    startMeetingTranscription(meetingId, operation, startMeetingTranscriptionRequest, opts, callback) {
      opts = opts || {};
      let postBody = startMeetingTranscriptionRequest;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling startMeetingTranscription");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling startMeetingTranscription");
      }
      // verify the required parameter 'startMeetingTranscriptionRequest' is set
      if (startMeetingTranscriptionRequest === undefined || startMeetingTranscriptionRequest === null) {
        throw new Error("Missing the required parameter 'startMeetingTranscriptionRequest' when calling startMeetingTranscription");
      }

      let pathParams = {
        'meetingId': meetingId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/meetings/{meetingId}/transcription#operation=start', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the stopMeetingTranscription operation.
     * @callback module:api/DefaultApi~stopMeetingTranscriptionCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Stops transcription for the specified <code>meetingId</code>.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_StopMeetingTranscription.html\">StopMeetingTranscription</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} meetingId The unique ID of the meeting for which you stop transcription.
     * @param {module:model/String} operation 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~stopMeetingTranscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    stopMeetingTranscription(meetingId, operation, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling stopMeetingTranscription");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling stopMeetingTranscription");
      }

      let pathParams = {
        'meetingId': meetingId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/meetings/{meetingId}/transcription#operation=stop', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tagAttendee operation.
     * @callback module:api/DefaultApi~tagAttendeeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Applies the specified tags to the specified Amazon Chime attendee.</p> <important> <p>TagAttendee is not supported in the Amazon Chime SDK Meetings Namespace. Update your application to remove calls to this API.</p> </important>
     * @param {String} meetingId The Amazon Chime SDK meeting ID.
     * @param {String} attendeeId The Amazon Chime SDK attendee ID.
     * @param {module:model/String} operation 
     * @param {module:model/TagAttendeeRequest} tagAttendeeRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~tagAttendeeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    tagAttendee(meetingId, attendeeId, operation, tagAttendeeRequest, opts, callback) {
      opts = opts || {};
      let postBody = tagAttendeeRequest;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling tagAttendee");
      }
      // verify the required parameter 'attendeeId' is set
      if (attendeeId === undefined || attendeeId === null) {
        throw new Error("Missing the required parameter 'attendeeId' when calling tagAttendee");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling tagAttendee");
      }
      // verify the required parameter 'tagAttendeeRequest' is set
      if (tagAttendeeRequest === undefined || tagAttendeeRequest === null) {
        throw new Error("Missing the required parameter 'tagAttendeeRequest' when calling tagAttendee");
      }

      let pathParams = {
        'meetingId': meetingId,
        'attendeeId': attendeeId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/meetings/{meetingId}/attendees/{attendeeId}/tags#operation=add', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tagMeeting operation.
     * @callback module:api/DefaultApi~tagMeetingCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Applies the specified tags to the specified Amazon Chime SDK meeting.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_TagResource.html\">TagResource</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} meetingId The Amazon Chime SDK meeting ID.
     * @param {module:model/String} operation 
     * @param {module:model/TagMeetingRequest} tagMeetingRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~tagMeetingCallback} callback The callback function, accepting three arguments: error, data, response
     */
    tagMeeting(meetingId, operation, tagMeetingRequest, opts, callback) {
      opts = opts || {};
      let postBody = tagMeetingRequest;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling tagMeeting");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling tagMeeting");
      }
      // verify the required parameter 'tagMeetingRequest' is set
      if (tagMeetingRequest === undefined || tagMeetingRequest === null) {
        throw new Error("Missing the required parameter 'tagMeetingRequest' when calling tagMeeting");
      }

      let pathParams = {
        'meetingId': meetingId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/meetings/{meetingId}/tags#operation=add', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tagResource operation.
     * @callback module:api/DefaultApi~tagResourceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Applies the specified tags to the specified Amazon Chime SDK meeting resource.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_TagResource.html\">TagResource</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {module:model/String} operation 
     * @param {module:model/TagResourceRequest} tagResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~tagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    tagResource(operation, tagResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = tagResourceRequest;
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling tagResource");
      }
      // verify the required parameter 'tagResourceRequest' is set
      if (tagResourceRequest === undefined || tagResourceRequest === null) {
        throw new Error("Missing the required parameter 'tagResourceRequest' when calling tagResource");
      }

      let pathParams = {
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/tags#operation=tag-resource', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the untagAttendee operation.
     * @callback module:api/DefaultApi~untagAttendeeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Untags the specified tags from the specified Amazon Chime SDK attendee.</p> <important> <p>UntagAttendee is not supported in the Amazon Chime SDK Meetings Namespace. Update your application to remove calls to this API.</p> </important>
     * @param {String} meetingId The Amazon Chime SDK meeting ID.
     * @param {String} attendeeId The Amazon Chime SDK attendee ID.
     * @param {module:model/String} operation 
     * @param {module:model/UntagAttendeeRequest} untagAttendeeRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~untagAttendeeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    untagAttendee(meetingId, attendeeId, operation, untagAttendeeRequest, opts, callback) {
      opts = opts || {};
      let postBody = untagAttendeeRequest;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling untagAttendee");
      }
      // verify the required parameter 'attendeeId' is set
      if (attendeeId === undefined || attendeeId === null) {
        throw new Error("Missing the required parameter 'attendeeId' when calling untagAttendee");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling untagAttendee");
      }
      // verify the required parameter 'untagAttendeeRequest' is set
      if (untagAttendeeRequest === undefined || untagAttendeeRequest === null) {
        throw new Error("Missing the required parameter 'untagAttendeeRequest' when calling untagAttendee");
      }

      let pathParams = {
        'meetingId': meetingId,
        'attendeeId': attendeeId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/meetings/{meetingId}/attendees/{attendeeId}/tags#operation=delete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the untagMeeting operation.
     * @callback module:api/DefaultApi~untagMeetingCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Untags the specified tags from the specified Amazon Chime SDK meeting.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_UntagResource.html\">UntagResource</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} meetingId The Amazon Chime SDK meeting ID.
     * @param {module:model/String} operation 
     * @param {module:model/UntagMeetingRequest} untagMeetingRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~untagMeetingCallback} callback The callback function, accepting three arguments: error, data, response
     */
    untagMeeting(meetingId, operation, untagMeetingRequest, opts, callback) {
      opts = opts || {};
      let postBody = untagMeetingRequest;
      // verify the required parameter 'meetingId' is set
      if (meetingId === undefined || meetingId === null) {
        throw new Error("Missing the required parameter 'meetingId' when calling untagMeeting");
      }
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling untagMeeting");
      }
      // verify the required parameter 'untagMeetingRequest' is set
      if (untagMeetingRequest === undefined || untagMeetingRequest === null) {
        throw new Error("Missing the required parameter 'untagMeetingRequest' when calling untagMeeting");
      }

      let pathParams = {
        'meetingId': meetingId
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/meetings/{meetingId}/tags#operation=delete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the untagResource operation.
     * @callback module:api/DefaultApi~untagResourceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Untags the specified tags from the specified Amazon Chime SDK meeting resource.</p> <p>Applies the specified tags to the specified Amazon Chime SDK meeting resource.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_UntagResource.html\">UntagResource</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {module:model/String} operation 
     * @param {module:model/UntagResourceRequest} untagResourceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~untagResourceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    untagResource(operation, untagResourceRequest, opts, callback) {
      opts = opts || {};
      let postBody = untagResourceRequest;
      // verify the required parameter 'operation' is set
      if (operation === undefined || operation === null) {
        throw new Error("Missing the required parameter 'operation' when calling untagResource");
      }
      // verify the required parameter 'untagResourceRequest' is set
      if (untagResourceRequest === undefined || untagResourceRequest === null) {
        throw new Error("Missing the required parameter 'untagResourceRequest' when calling untagResource");
      }

      let pathParams = {
      };
      let queryParams = {
        'operation': operation
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/tags#operation=untag-resource', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAccount operation.
     * @callback module:api/DefaultApi~updateAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates account details for the specified Amazon Chime account. Currently, only account name and default license updates are supported for this action.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {module:model/UpdateAccountRequest} updateAccountRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateAccountResponse}
     */
    updateAccount(accountId, updateAccountRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateAccountRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling updateAccount");
      }
      // verify the required parameter 'updateAccountRequest' is set
      if (updateAccountRequest === undefined || updateAccountRequest === null) {
        throw new Error("Missing the required parameter 'updateAccountRequest' when calling updateAccount");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateAccountResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAccountSettings operation.
     * @callback module:api/DefaultApi~updateAccountSettingsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the settings for the specified Amazon Chime account. You can update settings for remote control of shared screens, or for the dial-out option. For more information about these settings, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/policies.html\">Use the Policies Page</a> in the <i>Amazon Chime Administration Guide</i>.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {module:model/UpdateAccountSettingsRequest} updateAccountSettingsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateAccountSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateAccountSettings(accountId, updateAccountSettingsRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateAccountSettingsRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling updateAccountSettings");
      }
      // verify the required parameter 'updateAccountSettingsRequest' is set
      if (updateAccountSettingsRequest === undefined || updateAccountSettingsRequest === null) {
        throw new Error("Missing the required parameter 'updateAccountSettingsRequest' when calling updateAccountSettings");
      }

      let pathParams = {
        'accountId': accountId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/accounts/{accountId}/settings', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAppInstance operation.
     * @callback module:api/DefaultApi~updateAppInstanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateAppInstanceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates <code>AppInstance</code> metadata.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_UpdateAppInstance.html\">UpdateAppInstance</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceArn The ARN of the <code>AppInstance</code>.
     * @param {module:model/UpdateAppInstanceRequest} updateAppInstanceRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateAppInstanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateAppInstanceResponse}
     */
    updateAppInstance(appInstanceArn, updateAppInstanceRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateAppInstanceRequest;
      // verify the required parameter 'appInstanceArn' is set
      if (appInstanceArn === undefined || appInstanceArn === null) {
        throw new Error("Missing the required parameter 'appInstanceArn' when calling updateAppInstance");
      }
      // verify the required parameter 'updateAppInstanceRequest' is set
      if (updateAppInstanceRequest === undefined || updateAppInstanceRequest === null) {
        throw new Error("Missing the required parameter 'updateAppInstanceRequest' when calling updateAppInstance");
      }

      let pathParams = {
        'appInstanceArn': appInstanceArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateAppInstanceResponse;
      return this.apiClient.callApi(
        '/app-instances/{appInstanceArn}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAppInstanceUser operation.
     * @callback module:api/DefaultApi~updateAppInstanceUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateAppInstanceUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates the details of an <code>AppInstanceUser</code>. You can update names and metadata.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_identity-chime_UpdateAppInstanceUser.html\">UpdateAppInstanceUser</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} appInstanceUserArn The ARN of the <code>AppInstanceUser</code>.
     * @param {module:model/UpdateAppInstanceUserRequest} updateAppInstanceUserRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateAppInstanceUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateAppInstanceUserResponse}
     */
    updateAppInstanceUser(appInstanceUserArn, updateAppInstanceUserRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateAppInstanceUserRequest;
      // verify the required parameter 'appInstanceUserArn' is set
      if (appInstanceUserArn === undefined || appInstanceUserArn === null) {
        throw new Error("Missing the required parameter 'appInstanceUserArn' when calling updateAppInstanceUser");
      }
      // verify the required parameter 'updateAppInstanceUserRequest' is set
      if (updateAppInstanceUserRequest === undefined || updateAppInstanceUserRequest === null) {
        throw new Error("Missing the required parameter 'updateAppInstanceUserRequest' when calling updateAppInstanceUser");
      }

      let pathParams = {
        'appInstanceUserArn': appInstanceUserArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateAppInstanceUserResponse;
      return this.apiClient.callApi(
        '/app-instance-users/{appInstanceUserArn}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateBot operation.
     * @callback module:api/DefaultApi~updateBotCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateBotResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the status of the specified bot, such as starting or stopping the bot from running in your Amazon Chime Enterprise account.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} botId The bot ID.
     * @param {module:model/UpdateBotRequest} updateBotRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateBotCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateBotResponse}
     */
    updateBot(accountId, botId, updateBotRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateBotRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling updateBot");
      }
      // verify the required parameter 'botId' is set
      if (botId === undefined || botId === null) {
        throw new Error("Missing the required parameter 'botId' when calling updateBot");
      }
      // verify the required parameter 'updateBotRequest' is set
      if (updateBotRequest === undefined || updateBotRequest === null) {
        throw new Error("Missing the required parameter 'updateBotRequest' when calling updateBot");
      }

      let pathParams = {
        'accountId': accountId,
        'botId': botId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateBotResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/bots/{botId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateChannel operation.
     * @callback module:api/DefaultApi~updateChannelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateChannelResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Update a channel's attributes.</p> <p> <b>Restriction</b>: You can't change a channel's privacy. </p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_UpdateChannel.html\">UpdateChannel</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel.
     * @param {module:model/UpdateChannelRequest} updateChannelRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~updateChannelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateChannelResponse}
     */
    updateChannel(channelArn, updateChannelRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateChannelRequest;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling updateChannel");
      }
      // verify the required parameter 'updateChannelRequest' is set
      if (updateChannelRequest === undefined || updateChannelRequest === null) {
        throw new Error("Missing the required parameter 'updateChannelRequest' when calling updateChannel");
      }

      let pathParams = {
        'channelArn': channelArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateChannelResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateChannelMessage operation.
     * @callback module:api/DefaultApi~updateChannelMessageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateChannelMessageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates the content of a message.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_UpdateChannelMessage.html\">UpdateChannelMessage</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel.
     * @param {String} messageId The ID string of the message being updated.
     * @param {module:model/UpdateChannelMessageRequest} updateChannelMessageRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~updateChannelMessageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateChannelMessageResponse}
     */
    updateChannelMessage(channelArn, messageId, updateChannelMessageRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateChannelMessageRequest;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling updateChannelMessage");
      }
      // verify the required parameter 'messageId' is set
      if (messageId === undefined || messageId === null) {
        throw new Error("Missing the required parameter 'messageId' when calling updateChannelMessage");
      }
      // verify the required parameter 'updateChannelMessageRequest' is set
      if (updateChannelMessageRequest === undefined || updateChannelMessageRequest === null) {
        throw new Error("Missing the required parameter 'updateChannelMessageRequest' when calling updateChannelMessage");
      }

      let pathParams = {
        'channelArn': channelArn,
        'messageId': messageId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateChannelMessageResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/messages/{messageId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateChannelReadMarker operation.
     * @callback module:api/DefaultApi~updateChannelReadMarkerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateChannelReadMarkerResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>The details of the time when a user last read messages in a channel.</p> <note> <p>The <code>x-amz-chime-bearer</code> request header is mandatory. Use the <code>AppInstanceUserArn</code> of the user that makes the API call as the value in the header.</p> </note> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_messaging-chime_UpdateChannelReadMarker.html\">UpdateChannelReadMarker</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} channelArn The ARN of the channel.
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {String} [xAmzChimeBearer] The <code>AppInstanceUserArn</code> of the user that makes the API call.
     * @param {module:api/DefaultApi~updateChannelReadMarkerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateChannelReadMarkerResponse}
     */
    updateChannelReadMarker(channelArn, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelArn' is set
      if (channelArn === undefined || channelArn === null) {
        throw new Error("Missing the required parameter 'channelArn' when calling updateChannelReadMarker");
      }

      let pathParams = {
        'channelArn': channelArn
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders'],
        'x-amz-chime-bearer': opts['xAmzChimeBearer']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UpdateChannelReadMarkerResponse;
      return this.apiClient.callApi(
        '/channels/{channelArn}/readMarker', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateGlobalSettings operation.
     * @callback module:api/DefaultApi~updateGlobalSettingsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates global settings for the administrator's AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings.
     * @param {module:model/UpdateGlobalSettingsRequest} updateGlobalSettingsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateGlobalSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateGlobalSettings(updateGlobalSettingsRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateGlobalSettingsRequest;
      // verify the required parameter 'updateGlobalSettingsRequest' is set
      if (updateGlobalSettingsRequest === undefined || updateGlobalSettingsRequest === null) {
        throw new Error("Missing the required parameter 'updateGlobalSettingsRequest' when calling updateGlobalSettings");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/settings', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePhoneNumber operation.
     * @callback module:api/DefaultApi~updatePhoneNumberCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdatePhoneNumberResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates phone number details, such as product type or calling name, for the specified phone number ID. You can update one phone number detail at a time. For example, you can update either the product type or the calling name in one action.</p> <p>For toll-free numbers, you cannot use the Amazon Chime Business Calling product type. For numbers outside the U.S., you must use the Amazon Chime SIP Media Application Dial-In product type.</p> <p>Updates to outbound calling names can take 72 hours to complete. Pending updates to outbound calling names must be complete before you can request another update.</p>
     * @param {String} phoneNumberId The phone number ID.
     * @param {module:model/UpdatePhoneNumberRequest} updatePhoneNumberRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updatePhoneNumberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdatePhoneNumberResponse}
     */
    updatePhoneNumber(phoneNumberId, updatePhoneNumberRequest, opts, callback) {
      opts = opts || {};
      let postBody = updatePhoneNumberRequest;
      // verify the required parameter 'phoneNumberId' is set
      if (phoneNumberId === undefined || phoneNumberId === null) {
        throw new Error("Missing the required parameter 'phoneNumberId' when calling updatePhoneNumber");
      }
      // verify the required parameter 'updatePhoneNumberRequest' is set
      if (updatePhoneNumberRequest === undefined || updatePhoneNumberRequest === null) {
        throw new Error("Missing the required parameter 'updatePhoneNumberRequest' when calling updatePhoneNumber");
      }

      let pathParams = {
        'phoneNumberId': phoneNumberId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdatePhoneNumberResponse;
      return this.apiClient.callApi(
        '/phone-numbers/{phoneNumberId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePhoneNumberSettings operation.
     * @callback module:api/DefaultApi~updatePhoneNumberSettingsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the phone number settings for the administrator's AWS account, such as the default outbound calling name. You can update the default outbound calling name once every seven days. Outbound calling names can take up to 72 hours to update.
     * @param {module:model/UpdatePhoneNumberSettingsRequest} updatePhoneNumberSettingsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updatePhoneNumberSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updatePhoneNumberSettings(updatePhoneNumberSettingsRequest, opts, callback) {
      opts = opts || {};
      let postBody = updatePhoneNumberSettingsRequest;
      // verify the required parameter 'updatePhoneNumberSettingsRequest' is set
      if (updatePhoneNumberSettingsRequest === undefined || updatePhoneNumberSettingsRequest === null) {
        throw new Error("Missing the required parameter 'updatePhoneNumberSettingsRequest' when calling updatePhoneNumberSettings");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/settings/phone-number', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateProxySession operation.
     * @callback module:api/DefaultApi~updateProxySessionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateProxySessionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates the specified proxy session details, such as voice or SMS capabilities.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_UpdateProxySession.html\">UpdateProxySession</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime voice connector ID.
     * @param {String} proxySessionId The proxy session ID.
     * @param {module:model/UpdateProxySessionRequest} updateProxySessionRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateProxySessionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateProxySessionResponse}
     */
    updateProxySession(voiceConnectorId, proxySessionId, updateProxySessionRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateProxySessionRequest;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling updateProxySession");
      }
      // verify the required parameter 'proxySessionId' is set
      if (proxySessionId === undefined || proxySessionId === null) {
        throw new Error("Missing the required parameter 'proxySessionId' when calling updateProxySession");
      }
      // verify the required parameter 'updateProxySessionRequest' is set
      if (updateProxySessionRequest === undefined || updateProxySessionRequest === null) {
        throw new Error("Missing the required parameter 'updateProxySessionRequest' when calling updateProxySession");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId,
        'proxySessionId': proxySessionId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateProxySessionResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}/proxy-sessions/{proxySessionId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateRoom operation.
     * @callback module:api/DefaultApi~updateRoomCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateRoomResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates room details, such as the room name, for a room in an Amazon Chime Enterprise account.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} roomId The room ID.
     * @param {module:model/UpdateRoomRequest} updateRoomRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateRoomCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateRoomResponse}
     */
    updateRoom(accountId, roomId, updateRoomRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateRoomRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling updateRoom");
      }
      // verify the required parameter 'roomId' is set
      if (roomId === undefined || roomId === null) {
        throw new Error("Missing the required parameter 'roomId' when calling updateRoom");
      }
      // verify the required parameter 'updateRoomRequest' is set
      if (updateRoomRequest === undefined || updateRoomRequest === null) {
        throw new Error("Missing the required parameter 'updateRoomRequest' when calling updateRoom");
      }

      let pathParams = {
        'accountId': accountId,
        'roomId': roomId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateRoomResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/rooms/{roomId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateRoomMembership operation.
     * @callback module:api/DefaultApi~updateRoomMembershipCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateRoomMembershipResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates room membership details, such as the member role, for a room in an Amazon Chime Enterprise account. The member role designates whether the member is a chat room administrator or a general chat room member. The member role can be updated only for user IDs.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} roomId The room ID.
     * @param {String} memberId The member ID.
     * @param {module:model/UpdateRoomMembershipRequest} updateRoomMembershipRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateRoomMembershipCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateRoomMembershipResponse}
     */
    updateRoomMembership(accountId, roomId, memberId, updateRoomMembershipRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateRoomMembershipRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling updateRoomMembership");
      }
      // verify the required parameter 'roomId' is set
      if (roomId === undefined || roomId === null) {
        throw new Error("Missing the required parameter 'roomId' when calling updateRoomMembership");
      }
      // verify the required parameter 'memberId' is set
      if (memberId === undefined || memberId === null) {
        throw new Error("Missing the required parameter 'memberId' when calling updateRoomMembership");
      }
      // verify the required parameter 'updateRoomMembershipRequest' is set
      if (updateRoomMembershipRequest === undefined || updateRoomMembershipRequest === null) {
        throw new Error("Missing the required parameter 'updateRoomMembershipRequest' when calling updateRoomMembership");
      }

      let pathParams = {
        'accountId': accountId,
        'roomId': roomId,
        'memberId': memberId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateRoomMembershipResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/rooms/{roomId}/memberships/{memberId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSipMediaApplication operation.
     * @callback module:api/DefaultApi~updateSipMediaApplicationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateSipMediaApplicationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates the details of the specified SIP media application.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_UpdateSipMediaApplication.html\">UpdateSipMediaApplication</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} sipMediaApplicationId The SIP media application ID.
     * @param {module:model/UpdateSipMediaApplicationRequest} updateSipMediaApplicationRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateSipMediaApplicationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateSipMediaApplicationResponse}
     */
    updateSipMediaApplication(sipMediaApplicationId, updateSipMediaApplicationRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateSipMediaApplicationRequest;
      // verify the required parameter 'sipMediaApplicationId' is set
      if (sipMediaApplicationId === undefined || sipMediaApplicationId === null) {
        throw new Error("Missing the required parameter 'sipMediaApplicationId' when calling updateSipMediaApplication");
      }
      // verify the required parameter 'updateSipMediaApplicationRequest' is set
      if (updateSipMediaApplicationRequest === undefined || updateSipMediaApplicationRequest === null) {
        throw new Error("Missing the required parameter 'updateSipMediaApplicationRequest' when calling updateSipMediaApplication");
      }

      let pathParams = {
        'sipMediaApplicationId': sipMediaApplicationId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateSipMediaApplicationResponse;
      return this.apiClient.callApi(
        '/sip-media-applications/{sipMediaApplicationId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSipMediaApplicationCall operation.
     * @callback module:api/DefaultApi~updateSipMediaApplicationCallCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateSipMediaApplicationCallResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Invokes the AWS Lambda function associated with the SIP media application and transaction ID in an update request. The Lambda function can then return a new set of actions.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_UpdateSipMediaApplicationCall.html\">UpdateSipMediaApplicationCall</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} sipMediaApplicationId The ID of the SIP media application handling the call.
     * @param {String} transactionId The ID of the call transaction.
     * @param {module:model/UpdateSipMediaApplicationCallRequest} updateSipMediaApplicationCallRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateSipMediaApplicationCallCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateSipMediaApplicationCallResponse}
     */
    updateSipMediaApplicationCall(sipMediaApplicationId, transactionId, updateSipMediaApplicationCallRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateSipMediaApplicationCallRequest;
      // verify the required parameter 'sipMediaApplicationId' is set
      if (sipMediaApplicationId === undefined || sipMediaApplicationId === null) {
        throw new Error("Missing the required parameter 'sipMediaApplicationId' when calling updateSipMediaApplicationCall");
      }
      // verify the required parameter 'transactionId' is set
      if (transactionId === undefined || transactionId === null) {
        throw new Error("Missing the required parameter 'transactionId' when calling updateSipMediaApplicationCall");
      }
      // verify the required parameter 'updateSipMediaApplicationCallRequest' is set
      if (updateSipMediaApplicationCallRequest === undefined || updateSipMediaApplicationCallRequest === null) {
        throw new Error("Missing the required parameter 'updateSipMediaApplicationCallRequest' when calling updateSipMediaApplicationCall");
      }

      let pathParams = {
        'sipMediaApplicationId': sipMediaApplicationId,
        'transactionId': transactionId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateSipMediaApplicationCallResponse;
      return this.apiClient.callApi(
        '/sip-media-applications/{sipMediaApplicationId}/calls/{transactionId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSipRule operation.
     * @callback module:api/DefaultApi~updateSipRuleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateSipRuleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates the details of the specified SIP rule.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_UpdateSipRule.html\">UpdateSipRule</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} sipRuleId The SIP rule ID.
     * @param {module:model/UpdateSipRuleRequest} updateSipRuleRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateSipRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateSipRuleResponse}
     */
    updateSipRule(sipRuleId, updateSipRuleRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateSipRuleRequest;
      // verify the required parameter 'sipRuleId' is set
      if (sipRuleId === undefined || sipRuleId === null) {
        throw new Error("Missing the required parameter 'sipRuleId' when calling updateSipRule");
      }
      // verify the required parameter 'updateSipRuleRequest' is set
      if (updateSipRuleRequest === undefined || updateSipRuleRequest === null) {
        throw new Error("Missing the required parameter 'updateSipRuleRequest' when calling updateSipRule");
      }

      let pathParams = {
        'sipRuleId': sipRuleId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateSipRuleResponse;
      return this.apiClient.callApi(
        '/sip-rules/{sipRuleId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateUser operation.
     * @callback module:api/DefaultApi~updateUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateUserResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates user details for a specified user ID. Currently, only <code>LicenseType</code> updates are supported for this action.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} userId The user ID.
     * @param {module:model/UpdateUserRequest} updateUserRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateUserResponse}
     */
    updateUser(accountId, userId, updateUserRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateUserRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling updateUser");
      }
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling updateUser");
      }
      // verify the required parameter 'updateUserRequest' is set
      if (updateUserRequest === undefined || updateUserRequest === null) {
        throw new Error("Missing the required parameter 'updateUserRequest' when calling updateUser");
      }

      let pathParams = {
        'accountId': accountId,
        'userId': userId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateUserResponse;
      return this.apiClient.callApi(
        '/accounts/{accountId}/users/{userId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateUserSettings operation.
     * @callback module:api/DefaultApi~updateUserSettingsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the settings for the specified user, such as phone number settings.
     * @param {String} accountId The Amazon Chime account ID.
     * @param {String} userId The user ID.
     * @param {module:model/UpdateUserSettingsRequest} updateUserSettingsRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateUserSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateUserSettings(accountId, userId, updateUserSettingsRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateUserSettingsRequest;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling updateUserSettings");
      }
      // verify the required parameter 'userId' is set
      if (userId === undefined || userId === null) {
        throw new Error("Missing the required parameter 'userId' when calling updateUserSettings");
      }
      // verify the required parameter 'updateUserSettingsRequest' is set
      if (updateUserSettingsRequest === undefined || updateUserSettingsRequest === null) {
        throw new Error("Missing the required parameter 'updateUserSettingsRequest' when calling updateUserSettings");
      }

      let pathParams = {
        'accountId': accountId,
        'userId': userId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/accounts/{accountId}/users/{userId}/settings', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateVoiceConnector operation.
     * @callback module:api/DefaultApi~updateVoiceConnectorCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateVoiceConnectorResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates details for the specified Amazon Chime Voice Connector.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_UpdateVoiceConnector.html\">UpdateVoiceConnector</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorId The Amazon Chime Voice Connector ID.
     * @param {module:model/UpdateVoiceConnectorRequest} updateVoiceConnectorRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateVoiceConnectorCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateVoiceConnectorResponse}
     */
    updateVoiceConnector(voiceConnectorId, updateVoiceConnectorRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateVoiceConnectorRequest;
      // verify the required parameter 'voiceConnectorId' is set
      if (voiceConnectorId === undefined || voiceConnectorId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorId' when calling updateVoiceConnector");
      }
      // verify the required parameter 'updateVoiceConnectorRequest' is set
      if (updateVoiceConnectorRequest === undefined || updateVoiceConnectorRequest === null) {
        throw new Error("Missing the required parameter 'updateVoiceConnectorRequest' when calling updateVoiceConnector");
      }

      let pathParams = {
        'voiceConnectorId': voiceConnectorId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateVoiceConnectorResponse;
      return this.apiClient.callApi(
        '/voice-connectors/{voiceConnectorId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateVoiceConnectorGroup operation.
     * @callback module:api/DefaultApi~updateVoiceConnectorGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateVoiceConnectorGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Updates details of the specified Amazon Chime Voice Connector group, such as the name and Amazon Chime Voice Connector priority ranking.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_UpdateVoiceConnectorGroup.html\">UpdateVoiceConnectorGroup</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {String} voiceConnectorGroupId The Amazon Chime Voice Connector group ID.
     * @param {module:model/UpdateVoiceConnectorGroupRequest} updateVoiceConnectorGroupRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~updateVoiceConnectorGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateVoiceConnectorGroupResponse}
     */
    updateVoiceConnectorGroup(voiceConnectorGroupId, updateVoiceConnectorGroupRequest, opts, callback) {
      opts = opts || {};
      let postBody = updateVoiceConnectorGroupRequest;
      // verify the required parameter 'voiceConnectorGroupId' is set
      if (voiceConnectorGroupId === undefined || voiceConnectorGroupId === null) {
        throw new Error("Missing the required parameter 'voiceConnectorGroupId' when calling updateVoiceConnectorGroup");
      }
      // verify the required parameter 'updateVoiceConnectorGroupRequest' is set
      if (updateVoiceConnectorGroupRequest === undefined || updateVoiceConnectorGroupRequest === null) {
        throw new Error("Missing the required parameter 'updateVoiceConnectorGroupRequest' when calling updateVoiceConnectorGroup");
      }

      let pathParams = {
        'voiceConnectorGroupId': voiceConnectorGroupId
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateVoiceConnectorGroupResponse;
      return this.apiClient.callApi(
        '/voice-connector-groups/{voiceConnectorGroupId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the validateE911Address operation.
     * @callback module:api/DefaultApi~validateE911AddressCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ValidateE911AddressResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * <p>Validates an address to be used for 911 calls made with Amazon Chime Voice Connectors. You can use validated addresses in a Presence Information Data Format Location Object file that you include in SIP requests. That helps ensure that addresses are routed to the appropriate Public Safety Answering Point.</p> <important> <p> <b>This API is is no longer supported and will not be updated.</b> We recommend using the latest version, <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_voice-chime_ValidateE911Address.html\">ValidateE911Address</a>, in the Amazon Chime SDK.</p> <p>Using the latest version requires migrating to a dedicated namespace. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important>
     * @param {module:model/ValidateE911AddressRequest} validateE911AddressRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [xAmzContentSha256] 
     * @param {String} [xAmzDate] 
     * @param {String} [xAmzAlgorithm] 
     * @param {String} [xAmzCredential] 
     * @param {String} [xAmzSecurityToken] 
     * @param {String} [xAmzSignature] 
     * @param {String} [xAmzSignedHeaders] 
     * @param {module:api/DefaultApi~validateE911AddressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ValidateE911AddressResponse}
     */
    validateE911Address(validateE911AddressRequest, opts, callback) {
      opts = opts || {};
      let postBody = validateE911AddressRequest;
      // verify the required parameter 'validateE911AddressRequest' is set
      if (validateE911AddressRequest === undefined || validateE911AddressRequest === null) {
        throw new Error("Missing the required parameter 'validateE911AddressRequest' when calling validateE911Address");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Amz-Content-Sha256': opts['xAmzContentSha256'],
        'X-Amz-Date': opts['xAmzDate'],
        'X-Amz-Algorithm': opts['xAmzAlgorithm'],
        'X-Amz-Credential': opts['xAmzCredential'],
        'X-Amz-Security-Token': opts['xAmzSecurityToken'],
        'X-Amz-Signature': opts['xAmzSignature'],
        'X-Amz-SignedHeaders': opts['xAmzSignedHeaders']
      };
      let formParams = {
      };

      let authNames = ['hmac'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ValidateE911AddressResponse;
      return this.apiClient.callApi(
        '/emergency-calling/address', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
