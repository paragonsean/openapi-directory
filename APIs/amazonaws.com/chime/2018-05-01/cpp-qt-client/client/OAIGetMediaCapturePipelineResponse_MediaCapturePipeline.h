/**
 * Amazon Chime
 * <important> <p> <b>Most of these APIs are no longer supported and will not be updated.</b> We recommend using the latest versions in the <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/welcome.html\">Amazon Chime SDK API reference</a>, in the Amazon Chime SDK.</p> <p>Using the latest versions requires migrating to dedicated namespaces. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important> <p>The Amazon Chime application programming interface (API) is designed so administrators can perform key tasks, such as creating and managing Amazon Chime accounts, users, and Voice Connectors. This guide provides detailed information about the Amazon Chime API, including operations, types, inputs and outputs, and error codes.</p> <p>You can use an AWS SDK, the AWS Command Line Interface (AWS CLI), or the REST API to make API calls for Amazon Chime. We recommend using an AWS SDK or the AWS CLI. The page for each API action contains a <i>See Also</i> section that includes links to information about using the action with a language-specific AWS SDK or the AWS CLI.</p> <dl> <dt>Using an AWS SDK</dt> <dd> <p> You don't need to write code to calculate a signature for request authentication. The SDK clients authenticate your requests by using access keys that you provide. For more information about AWS SDKs, see the <a href=\"http://aws.amazon.com/developer/\">AWS Developer Center</a>. </p> </dd> <dt>Using the AWS CLI</dt> <dd> <p>Use your access keys with the AWS CLI to make API calls. For information about setting up the AWS CLI, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/installing.html\">Installing the AWS Command Line Interface</a> in the <i>AWS Command Line Interface User Guide</i>. For a list of available Amazon Chime commands, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/chime/index.html\">Amazon Chime commands</a> in the <i>AWS CLI Command Reference</i>. </p> </dd> <dt>Using REST APIs</dt> <dd> <p>If you use REST to make API calls, you must authenticate your request by providing a signature. Amazon Chime supports Signature Version 4. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>When making REST API calls, use the service name <code>chime</code> and REST endpoint <code>https://service.chime.aws.amazon.com</code>.</p> </dd> </dl> <p>Administrative permissions are controlled using AWS Identity and Access Management (IAM). For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/security-iam.html\">Identity and Access Management for Amazon Chime</a> in the <i>Amazon Chime Administration Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-05-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetMediaCapturePipelineResponse_MediaCapturePipeline.h
 *
 * 
 */

#ifndef OAIGetMediaCapturePipelineResponse_MediaCapturePipeline_H
#define OAIGetMediaCapturePipelineResponse_MediaCapturePipeline_H

#include <QJsonObject>

#include "OAICreateMediaCapturePipelineRequest_ChimeSdkMeetingConfiguration.h"
#include "OAIMediaPipelineSinkType.h"
#include "OAIMediaPipelineSourceType.h"
#include "OAIMediaPipelineStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateMediaCapturePipelineRequest_ChimeSdkMeetingConfiguration;

class OAIGetMediaCapturePipelineResponse_MediaCapturePipeline : public OAIObject {
public:
    OAIGetMediaCapturePipelineResponse_MediaCapturePipeline();
    OAIGetMediaCapturePipelineResponse_MediaCapturePipeline(QString json);
    ~OAIGetMediaCapturePipelineResponse_MediaCapturePipeline() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMediaPipelineId() const;
    void setMediaPipelineId(const QString &media_pipeline_id);
    bool is_media_pipeline_id_Set() const;
    bool is_media_pipeline_id_Valid() const;

    OAIMediaPipelineSourceType getSourceType() const;
    void setSourceType(const OAIMediaPipelineSourceType &source_type);
    bool is_source_type_Set() const;
    bool is_source_type_Valid() const;

    QString getSourceArn() const;
    void setSourceArn(const QString &source_arn);
    bool is_source_arn_Set() const;
    bool is_source_arn_Valid() const;

    OAIMediaPipelineStatus getStatus() const;
    void setStatus(const OAIMediaPipelineStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIMediaPipelineSinkType getSinkType() const;
    void setSinkType(const OAIMediaPipelineSinkType &sink_type);
    bool is_sink_type_Set() const;
    bool is_sink_type_Valid() const;

    QString getSinkArn() const;
    void setSinkArn(const QString &sink_arn);
    bool is_sink_arn_Set() const;
    bool is_sink_arn_Valid() const;

    QDateTime getCreatedTimestamp() const;
    void setCreatedTimestamp(const QDateTime &created_timestamp);
    bool is_created_timestamp_Set() const;
    bool is_created_timestamp_Valid() const;

    QDateTime getUpdatedTimestamp() const;
    void setUpdatedTimestamp(const QDateTime &updated_timestamp);
    bool is_updated_timestamp_Set() const;
    bool is_updated_timestamp_Valid() const;

    OAICreateMediaCapturePipelineRequest_ChimeSdkMeetingConfiguration getChimeSdkMeetingConfiguration() const;
    void setChimeSdkMeetingConfiguration(const OAICreateMediaCapturePipelineRequest_ChimeSdkMeetingConfiguration &chime_sdk_meeting_configuration);
    bool is_chime_sdk_meeting_configuration_Set() const;
    bool is_chime_sdk_meeting_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_media_pipeline_id;
    bool m_media_pipeline_id_isSet;
    bool m_media_pipeline_id_isValid;

    OAIMediaPipelineSourceType m_source_type;
    bool m_source_type_isSet;
    bool m_source_type_isValid;

    QString m_source_arn;
    bool m_source_arn_isSet;
    bool m_source_arn_isValid;

    OAIMediaPipelineStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIMediaPipelineSinkType m_sink_type;
    bool m_sink_type_isSet;
    bool m_sink_type_isValid;

    QString m_sink_arn;
    bool m_sink_arn_isSet;
    bool m_sink_arn_isValid;

    QDateTime m_created_timestamp;
    bool m_created_timestamp_isSet;
    bool m_created_timestamp_isValid;

    QDateTime m_updated_timestamp;
    bool m_updated_timestamp_isSet;
    bool m_updated_timestamp_isValid;

    OAICreateMediaCapturePipelineRequest_ChimeSdkMeetingConfiguration m_chime_sdk_meeting_configuration;
    bool m_chime_sdk_meeting_configuration_isSet;
    bool m_chime_sdk_meeting_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetMediaCapturePipelineResponse_MediaCapturePipeline)

#endif // OAIGetMediaCapturePipelineResponse_MediaCapturePipeline_H
