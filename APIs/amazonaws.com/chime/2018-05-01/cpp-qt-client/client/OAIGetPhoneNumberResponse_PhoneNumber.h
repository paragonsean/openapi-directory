/**
 * Amazon Chime
 * <important> <p> <b>Most of these APIs are no longer supported and will not be updated.</b> We recommend using the latest versions in the <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/welcome.html\">Amazon Chime SDK API reference</a>, in the Amazon Chime SDK.</p> <p>Using the latest versions requires migrating to dedicated namespaces. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important> <p>The Amazon Chime application programming interface (API) is designed so administrators can perform key tasks, such as creating and managing Amazon Chime accounts, users, and Voice Connectors. This guide provides detailed information about the Amazon Chime API, including operations, types, inputs and outputs, and error codes.</p> <p>You can use an AWS SDK, the AWS Command Line Interface (AWS CLI), or the REST API to make API calls for Amazon Chime. We recommend using an AWS SDK or the AWS CLI. The page for each API action contains a <i>See Also</i> section that includes links to information about using the action with a language-specific AWS SDK or the AWS CLI.</p> <dl> <dt>Using an AWS SDK</dt> <dd> <p> You don't need to write code to calculate a signature for request authentication. The SDK clients authenticate your requests by using access keys that you provide. For more information about AWS SDKs, see the <a href=\"http://aws.amazon.com/developer/\">AWS Developer Center</a>. </p> </dd> <dt>Using the AWS CLI</dt> <dd> <p>Use your access keys with the AWS CLI to make API calls. For information about setting up the AWS CLI, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/installing.html\">Installing the AWS Command Line Interface</a> in the <i>AWS Command Line Interface User Guide</i>. For a list of available Amazon Chime commands, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/chime/index.html\">Amazon Chime commands</a> in the <i>AWS CLI Command Reference</i>. </p> </dd> <dt>Using REST APIs</dt> <dd> <p>If you use REST to make API calls, you must authenticate your request by providing a signature. Amazon Chime supports Signature Version 4. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>When making REST API calls, use the service name <code>chime</code> and REST endpoint <code>https://service.chime.aws.amazon.com</code>.</p> </dd> </dl> <p>Administrative permissions are controlled using AWS Identity and Access Management (IAM). For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/security-iam.html\">Identity and Access Management for Amazon Chime</a> in the <i>Amazon Chime Administration Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-05-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetPhoneNumberResponse_PhoneNumber.h
 *
 * 
 */

#ifndef OAIGetPhoneNumberResponse_PhoneNumber_H
#define OAIGetPhoneNumberResponse_PhoneNumber_H

#include <QJsonObject>

#include "OAICallingNameStatus.h"
#include "OAIPhoneNumberProductType.h"
#include "OAIPhoneNumberStatus.h"
#include "OAIPhoneNumberType.h"
#include "OAIPhoneNumber_Capabilities.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPhoneNumber_Capabilities;

class OAIGetPhoneNumberResponse_PhoneNumber : public OAIObject {
public:
    OAIGetPhoneNumberResponse_PhoneNumber();
    OAIGetPhoneNumberResponse_PhoneNumber(QString json);
    ~OAIGetPhoneNumberResponse_PhoneNumber() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPhoneNumberId() const;
    void setPhoneNumberId(const QString &phone_number_id);
    bool is_phone_number_id_Set() const;
    bool is_phone_number_id_Valid() const;

    QString getE164PhoneNumber() const;
    void setE164PhoneNumber(const QString &e164_phone_number);
    bool is_e164_phone_number_Set() const;
    bool is_e164_phone_number_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    OAIPhoneNumberType getType() const;
    void setType(const OAIPhoneNumberType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIPhoneNumberProductType getProductType() const;
    void setProductType(const OAIPhoneNumberProductType &product_type);
    bool is_product_type_Set() const;
    bool is_product_type_Valid() const;

    OAIPhoneNumberStatus getStatus() const;
    void setStatus(const OAIPhoneNumberStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIPhoneNumber_Capabilities getCapabilities() const;
    void setCapabilities(const OAIPhoneNumber_Capabilities &capabilities);
    bool is_capabilities_Set() const;
    bool is_capabilities_Valid() const;

    QList getAssociations() const;
    void setAssociations(const QList &associations);
    bool is_associations_Set() const;
    bool is_associations_Valid() const;

    QString getCallingName() const;
    void setCallingName(const QString &calling_name);
    bool is_calling_name_Set() const;
    bool is_calling_name_Valid() const;

    OAICallingNameStatus getCallingNameStatus() const;
    void setCallingNameStatus(const OAICallingNameStatus &calling_name_status);
    bool is_calling_name_status_Set() const;
    bool is_calling_name_status_Valid() const;

    QDateTime getCreatedTimestamp() const;
    void setCreatedTimestamp(const QDateTime &created_timestamp);
    bool is_created_timestamp_Set() const;
    bool is_created_timestamp_Valid() const;

    QDateTime getUpdatedTimestamp() const;
    void setUpdatedTimestamp(const QDateTime &updated_timestamp);
    bool is_updated_timestamp_Set() const;
    bool is_updated_timestamp_Valid() const;

    QDateTime getDeletionTimestamp() const;
    void setDeletionTimestamp(const QDateTime &deletion_timestamp);
    bool is_deletion_timestamp_Set() const;
    bool is_deletion_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_phone_number_id;
    bool m_phone_number_id_isSet;
    bool m_phone_number_id_isValid;

    QString m_e164_phone_number;
    bool m_e164_phone_number_isSet;
    bool m_e164_phone_number_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    OAIPhoneNumberType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIPhoneNumberProductType m_product_type;
    bool m_product_type_isSet;
    bool m_product_type_isValid;

    OAIPhoneNumberStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIPhoneNumber_Capabilities m_capabilities;
    bool m_capabilities_isSet;
    bool m_capabilities_isValid;

    QList m_associations;
    bool m_associations_isSet;
    bool m_associations_isValid;

    QString m_calling_name;
    bool m_calling_name_isSet;
    bool m_calling_name_isValid;

    OAICallingNameStatus m_calling_name_status;
    bool m_calling_name_status_isSet;
    bool m_calling_name_status_isValid;

    QDateTime m_created_timestamp;
    bool m_created_timestamp_isSet;
    bool m_created_timestamp_isValid;

    QDateTime m_updated_timestamp;
    bool m_updated_timestamp_isSet;
    bool m_updated_timestamp_isValid;

    QDateTime m_deletion_timestamp;
    bool m_deletion_timestamp_isSet;
    bool m_deletion_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetPhoneNumberResponse_PhoneNumber)

#endif // OAIGetPhoneNumberResponse_PhoneNumber_H
