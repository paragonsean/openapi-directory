/**
 * Amazon Chime
 * <important> <p> <b>Most of these APIs are no longer supported and will not be updated.</b> We recommend using the latest versions in the <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/welcome.html\">Amazon Chime SDK API reference</a>, in the Amazon Chime SDK.</p> <p>Using the latest versions requires migrating to dedicated namespaces. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important> <p>The Amazon Chime application programming interface (API) is designed so administrators can perform key tasks, such as creating and managing Amazon Chime accounts, users, and Voice Connectors. This guide provides detailed information about the Amazon Chime API, including operations, types, inputs and outputs, and error codes.</p> <p>You can use an AWS SDK, the AWS Command Line Interface (AWS CLI), or the REST API to make API calls for Amazon Chime. We recommend using an AWS SDK or the AWS CLI. The page for each API action contains a <i>See Also</i> section that includes links to information about using the action with a language-specific AWS SDK or the AWS CLI.</p> <dl> <dt>Using an AWS SDK</dt> <dd> <p> You don't need to write code to calculate a signature for request authentication. The SDK clients authenticate your requests by using access keys that you provide. For more information about AWS SDKs, see the <a href=\"http://aws.amazon.com/developer/\">AWS Developer Center</a>. </p> </dd> <dt>Using the AWS CLI</dt> <dd> <p>Use your access keys with the AWS CLI to make API calls. For information about setting up the AWS CLI, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/installing.html\">Installing the AWS Command Line Interface</a> in the <i>AWS Command Line Interface User Guide</i>. For a list of available Amazon Chime commands, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/chime/index.html\">Amazon Chime commands</a> in the <i>AWS CLI Command Reference</i>. </p> </dd> <dt>Using REST APIs</dt> <dd> <p>If you use REST to make API calls, you must authenticate your request by providing a signature. Amazon Chime supports Signature Version 4. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>When making REST API calls, use the service name <code>chime</code> and REST endpoint <code>https://service.chime.aws.amazon.com</code>.</p> </dd> </dl> <p>Administrative permissions are controlled using AWS Identity and Access Management (IAM). For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/security-iam.html\">Identity and Access Management for Amazon Chime</a> in the <i>Amazon Chime Administration Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-05-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdatePhoneNumberResponse_PhoneNumber.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdatePhoneNumberResponse_PhoneNumber::OAIUpdatePhoneNumberResponse_PhoneNumber(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdatePhoneNumberResponse_PhoneNumber::OAIUpdatePhoneNumberResponse_PhoneNumber() {
    this->initializeModel();
}

OAIUpdatePhoneNumberResponse_PhoneNumber::~OAIUpdatePhoneNumberResponse_PhoneNumber() {}

void OAIUpdatePhoneNumberResponse_PhoneNumber::initializeModel() {

    m_phone_number_id_isSet = false;
    m_phone_number_id_isValid = false;

    m_e164_phone_number_isSet = false;
    m_e164_phone_number_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_product_type_isSet = false;
    m_product_type_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_capabilities_isSet = false;
    m_capabilities_isValid = false;

    m_associations_isSet = false;
    m_associations_isValid = false;

    m_calling_name_isSet = false;
    m_calling_name_isValid = false;

    m_calling_name_status_isSet = false;
    m_calling_name_status_isValid = false;

    m_created_timestamp_isSet = false;
    m_created_timestamp_isValid = false;

    m_updated_timestamp_isSet = false;
    m_updated_timestamp_isValid = false;

    m_deletion_timestamp_isSet = false;
    m_deletion_timestamp_isValid = false;
}

void OAIUpdatePhoneNumberResponse_PhoneNumber::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdatePhoneNumberResponse_PhoneNumber::fromJsonObject(QJsonObject json) {

    m_phone_number_id_isValid = ::OpenAPI::fromJsonValue(m_phone_number_id, json[QString("PhoneNumberId")]);
    m_phone_number_id_isSet = !json[QString("PhoneNumberId")].isNull() && m_phone_number_id_isValid;

    m_e164_phone_number_isValid = ::OpenAPI::fromJsonValue(m_e164_phone_number, json[QString("E164PhoneNumber")]);
    m_e164_phone_number_isSet = !json[QString("E164PhoneNumber")].isNull() && m_e164_phone_number_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("Country")]);
    m_country_isSet = !json[QString("Country")].isNull() && m_country_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_product_type_isValid = ::OpenAPI::fromJsonValue(m_product_type, json[QString("ProductType")]);
    m_product_type_isSet = !json[QString("ProductType")].isNull() && m_product_type_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_capabilities_isValid = ::OpenAPI::fromJsonValue(m_capabilities, json[QString("Capabilities")]);
    m_capabilities_isSet = !json[QString("Capabilities")].isNull() && m_capabilities_isValid;

    m_associations_isValid = ::OpenAPI::fromJsonValue(m_associations, json[QString("Associations")]);
    m_associations_isSet = !json[QString("Associations")].isNull() && m_associations_isValid;

    m_calling_name_isValid = ::OpenAPI::fromJsonValue(m_calling_name, json[QString("CallingName")]);
    m_calling_name_isSet = !json[QString("CallingName")].isNull() && m_calling_name_isValid;

    m_calling_name_status_isValid = ::OpenAPI::fromJsonValue(m_calling_name_status, json[QString("CallingNameStatus")]);
    m_calling_name_status_isSet = !json[QString("CallingNameStatus")].isNull() && m_calling_name_status_isValid;

    m_created_timestamp_isValid = ::OpenAPI::fromJsonValue(m_created_timestamp, json[QString("CreatedTimestamp")]);
    m_created_timestamp_isSet = !json[QString("CreatedTimestamp")].isNull() && m_created_timestamp_isValid;

    m_updated_timestamp_isValid = ::OpenAPI::fromJsonValue(m_updated_timestamp, json[QString("UpdatedTimestamp")]);
    m_updated_timestamp_isSet = !json[QString("UpdatedTimestamp")].isNull() && m_updated_timestamp_isValid;

    m_deletion_timestamp_isValid = ::OpenAPI::fromJsonValue(m_deletion_timestamp, json[QString("DeletionTimestamp")]);
    m_deletion_timestamp_isSet = !json[QString("DeletionTimestamp")].isNull() && m_deletion_timestamp_isValid;
}

QString OAIUpdatePhoneNumberResponse_PhoneNumber::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdatePhoneNumberResponse_PhoneNumber::asJsonObject() const {
    QJsonObject obj;
    if (m_phone_number_id_isSet) {
        obj.insert(QString("PhoneNumberId"), ::OpenAPI::toJsonValue(m_phone_number_id));
    }
    if (m_e164_phone_number_isSet) {
        obj.insert(QString("E164PhoneNumber"), ::OpenAPI::toJsonValue(m_e164_phone_number));
    }
    if (m_country_isSet) {
        obj.insert(QString("Country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_product_type.isSet()) {
        obj.insert(QString("ProductType"), ::OpenAPI::toJsonValue(m_product_type));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_capabilities.isSet()) {
        obj.insert(QString("Capabilities"), ::OpenAPI::toJsonValue(m_capabilities));
    }
    if (m_associations.isSet()) {
        obj.insert(QString("Associations"), ::OpenAPI::toJsonValue(m_associations));
    }
    if (m_calling_name_isSet) {
        obj.insert(QString("CallingName"), ::OpenAPI::toJsonValue(m_calling_name));
    }
    if (m_calling_name_status.isSet()) {
        obj.insert(QString("CallingNameStatus"), ::OpenAPI::toJsonValue(m_calling_name_status));
    }
    if (m_created_timestamp_isSet) {
        obj.insert(QString("CreatedTimestamp"), ::OpenAPI::toJsonValue(m_created_timestamp));
    }
    if (m_updated_timestamp_isSet) {
        obj.insert(QString("UpdatedTimestamp"), ::OpenAPI::toJsonValue(m_updated_timestamp));
    }
    if (m_deletion_timestamp_isSet) {
        obj.insert(QString("DeletionTimestamp"), ::OpenAPI::toJsonValue(m_deletion_timestamp));
    }
    return obj;
}

QString OAIUpdatePhoneNumberResponse_PhoneNumber::getPhoneNumberId() const {
    return m_phone_number_id;
}
void OAIUpdatePhoneNumberResponse_PhoneNumber::setPhoneNumberId(const QString &phone_number_id) {
    m_phone_number_id = phone_number_id;
    m_phone_number_id_isSet = true;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_phone_number_id_Set() const{
    return m_phone_number_id_isSet;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_phone_number_id_Valid() const{
    return m_phone_number_id_isValid;
}

QString OAIUpdatePhoneNumberResponse_PhoneNumber::getE164PhoneNumber() const {
    return m_e164_phone_number;
}
void OAIUpdatePhoneNumberResponse_PhoneNumber::setE164PhoneNumber(const QString &e164_phone_number) {
    m_e164_phone_number = e164_phone_number;
    m_e164_phone_number_isSet = true;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_e164_phone_number_Set() const{
    return m_e164_phone_number_isSet;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_e164_phone_number_Valid() const{
    return m_e164_phone_number_isValid;
}

QString OAIUpdatePhoneNumberResponse_PhoneNumber::getCountry() const {
    return m_country;
}
void OAIUpdatePhoneNumberResponse_PhoneNumber::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_country_Set() const{
    return m_country_isSet;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_country_Valid() const{
    return m_country_isValid;
}

OAIPhoneNumberType OAIUpdatePhoneNumberResponse_PhoneNumber::getType() const {
    return m_type;
}
void OAIUpdatePhoneNumberResponse_PhoneNumber::setType(const OAIPhoneNumberType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_type_Set() const{
    return m_type_isSet;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_type_Valid() const{
    return m_type_isValid;
}

OAIPhoneNumberProductType OAIUpdatePhoneNumberResponse_PhoneNumber::getProductType() const {
    return m_product_type;
}
void OAIUpdatePhoneNumberResponse_PhoneNumber::setProductType(const OAIPhoneNumberProductType &product_type) {
    m_product_type = product_type;
    m_product_type_isSet = true;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_product_type_Set() const{
    return m_product_type_isSet;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_product_type_Valid() const{
    return m_product_type_isValid;
}

OAIPhoneNumberStatus OAIUpdatePhoneNumberResponse_PhoneNumber::getStatus() const {
    return m_status;
}
void OAIUpdatePhoneNumberResponse_PhoneNumber::setStatus(const OAIPhoneNumberStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_status_Set() const{
    return m_status_isSet;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_status_Valid() const{
    return m_status_isValid;
}

OAIPhoneNumber_Capabilities OAIUpdatePhoneNumberResponse_PhoneNumber::getCapabilities() const {
    return m_capabilities;
}
void OAIUpdatePhoneNumberResponse_PhoneNumber::setCapabilities(const OAIPhoneNumber_Capabilities &capabilities) {
    m_capabilities = capabilities;
    m_capabilities_isSet = true;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_capabilities_Set() const{
    return m_capabilities_isSet;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_capabilities_Valid() const{
    return m_capabilities_isValid;
}

QList OAIUpdatePhoneNumberResponse_PhoneNumber::getAssociations() const {
    return m_associations;
}
void OAIUpdatePhoneNumberResponse_PhoneNumber::setAssociations(const QList &associations) {
    m_associations = associations;
    m_associations_isSet = true;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_associations_Set() const{
    return m_associations_isSet;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_associations_Valid() const{
    return m_associations_isValid;
}

QString OAIUpdatePhoneNumberResponse_PhoneNumber::getCallingName() const {
    return m_calling_name;
}
void OAIUpdatePhoneNumberResponse_PhoneNumber::setCallingName(const QString &calling_name) {
    m_calling_name = calling_name;
    m_calling_name_isSet = true;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_calling_name_Set() const{
    return m_calling_name_isSet;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_calling_name_Valid() const{
    return m_calling_name_isValid;
}

OAICallingNameStatus OAIUpdatePhoneNumberResponse_PhoneNumber::getCallingNameStatus() const {
    return m_calling_name_status;
}
void OAIUpdatePhoneNumberResponse_PhoneNumber::setCallingNameStatus(const OAICallingNameStatus &calling_name_status) {
    m_calling_name_status = calling_name_status;
    m_calling_name_status_isSet = true;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_calling_name_status_Set() const{
    return m_calling_name_status_isSet;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_calling_name_status_Valid() const{
    return m_calling_name_status_isValid;
}

QDateTime OAIUpdatePhoneNumberResponse_PhoneNumber::getCreatedTimestamp() const {
    return m_created_timestamp;
}
void OAIUpdatePhoneNumberResponse_PhoneNumber::setCreatedTimestamp(const QDateTime &created_timestamp) {
    m_created_timestamp = created_timestamp;
    m_created_timestamp_isSet = true;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_created_timestamp_Set() const{
    return m_created_timestamp_isSet;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_created_timestamp_Valid() const{
    return m_created_timestamp_isValid;
}

QDateTime OAIUpdatePhoneNumberResponse_PhoneNumber::getUpdatedTimestamp() const {
    return m_updated_timestamp;
}
void OAIUpdatePhoneNumberResponse_PhoneNumber::setUpdatedTimestamp(const QDateTime &updated_timestamp) {
    m_updated_timestamp = updated_timestamp;
    m_updated_timestamp_isSet = true;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_updated_timestamp_Set() const{
    return m_updated_timestamp_isSet;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_updated_timestamp_Valid() const{
    return m_updated_timestamp_isValid;
}

QDateTime OAIUpdatePhoneNumberResponse_PhoneNumber::getDeletionTimestamp() const {
    return m_deletion_timestamp;
}
void OAIUpdatePhoneNumberResponse_PhoneNumber::setDeletionTimestamp(const QDateTime &deletion_timestamp) {
    m_deletion_timestamp = deletion_timestamp;
    m_deletion_timestamp_isSet = true;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_deletion_timestamp_Set() const{
    return m_deletion_timestamp_isSet;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::is_deletion_timestamp_Valid() const{
    return m_deletion_timestamp_isValid;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_phone_number_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e164_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_capabilities.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_associations.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_calling_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_calling_name_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deletion_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdatePhoneNumberResponse_PhoneNumber::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
