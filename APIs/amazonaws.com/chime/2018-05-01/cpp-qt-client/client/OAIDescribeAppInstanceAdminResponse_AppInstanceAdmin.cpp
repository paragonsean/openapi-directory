/**
 * Amazon Chime
 * <important> <p> <b>Most of these APIs are no longer supported and will not be updated.</b> We recommend using the latest versions in the <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/APIReference/welcome.html\">Amazon Chime SDK API reference</a>, in the Amazon Chime SDK.</p> <p>Using the latest versions requires migrating to dedicated namespaces. For more information, refer to <a href=\"https://docs.aws.amazon.com/chime-sdk/latest/dg/migrate-from-chm-namespace.html\">Migrating from the Amazon Chime namespace</a> in the <i>Amazon Chime SDK Developer Guide</i>.</p> </important> <p>The Amazon Chime application programming interface (API) is designed so administrators can perform key tasks, such as creating and managing Amazon Chime accounts, users, and Voice Connectors. This guide provides detailed information about the Amazon Chime API, including operations, types, inputs and outputs, and error codes.</p> <p>You can use an AWS SDK, the AWS Command Line Interface (AWS CLI), or the REST API to make API calls for Amazon Chime. We recommend using an AWS SDK or the AWS CLI. The page for each API action contains a <i>See Also</i> section that includes links to information about using the action with a language-specific AWS SDK or the AWS CLI.</p> <dl> <dt>Using an AWS SDK</dt> <dd> <p> You don't need to write code to calculate a signature for request authentication. The SDK clients authenticate your requests by using access keys that you provide. For more information about AWS SDKs, see the <a href=\"http://aws.amazon.com/developer/\">AWS Developer Center</a>. </p> </dd> <dt>Using the AWS CLI</dt> <dd> <p>Use your access keys with the AWS CLI to make API calls. For information about setting up the AWS CLI, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/installing.html\">Installing the AWS Command Line Interface</a> in the <i>AWS Command Line Interface User Guide</i>. For a list of available Amazon Chime commands, see the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/chime/index.html\">Amazon Chime commands</a> in the <i>AWS CLI Command Reference</i>. </p> </dd> <dt>Using REST APIs</dt> <dd> <p>If you use REST to make API calls, you must authenticate your request by providing a signature. Amazon Chime supports Signature Version 4. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>When making REST API calls, use the service name <code>chime</code> and REST endpoint <code>https://service.chime.aws.amazon.com</code>.</p> </dd> </dl> <p>Administrative permissions are controlled using AWS Identity and Access Management (IAM). For more information, see <a href=\"https://docs.aws.amazon.com/chime/latest/ag/security-iam.html\">Identity and Access Management for Amazon Chime</a> in the <i>Amazon Chime Administration Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2018-05-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin() {
    this->initializeModel();
}

OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::~OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin() {}

void OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::initializeModel() {

    m_admin_isSet = false;
    m_admin_isValid = false;

    m_app_instance_arn_isSet = false;
    m_app_instance_arn_isValid = false;

    m_created_timestamp_isSet = false;
    m_created_timestamp_isValid = false;
}

void OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::fromJsonObject(QJsonObject json) {

    m_admin_isValid = ::OpenAPI::fromJsonValue(m_admin, json[QString("Admin")]);
    m_admin_isSet = !json[QString("Admin")].isNull() && m_admin_isValid;

    m_app_instance_arn_isValid = ::OpenAPI::fromJsonValue(m_app_instance_arn, json[QString("AppInstanceArn")]);
    m_app_instance_arn_isSet = !json[QString("AppInstanceArn")].isNull() && m_app_instance_arn_isValid;

    m_created_timestamp_isValid = ::OpenAPI::fromJsonValue(m_created_timestamp, json[QString("CreatedTimestamp")]);
    m_created_timestamp_isSet = !json[QString("CreatedTimestamp")].isNull() && m_created_timestamp_isValid;
}

QString OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::asJsonObject() const {
    QJsonObject obj;
    if (m_admin.isSet()) {
        obj.insert(QString("Admin"), ::OpenAPI::toJsonValue(m_admin));
    }
    if (m_app_instance_arn_isSet) {
        obj.insert(QString("AppInstanceArn"), ::OpenAPI::toJsonValue(m_app_instance_arn));
    }
    if (m_created_timestamp_isSet) {
        obj.insert(QString("CreatedTimestamp"), ::OpenAPI::toJsonValue(m_created_timestamp));
    }
    return obj;
}

OAIAppInstanceAdmin_Admin OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::getAdmin() const {
    return m_admin;
}
void OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::setAdmin(const OAIAppInstanceAdmin_Admin &admin) {
    m_admin = admin;
    m_admin_isSet = true;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::is_admin_Set() const{
    return m_admin_isSet;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::is_admin_Valid() const{
    return m_admin_isValid;
}

QString OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::getAppInstanceArn() const {
    return m_app_instance_arn;
}
void OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::setAppInstanceArn(const QString &app_instance_arn) {
    m_app_instance_arn = app_instance_arn;
    m_app_instance_arn_isSet = true;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::is_app_instance_arn_Set() const{
    return m_app_instance_arn_isSet;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::is_app_instance_arn_Valid() const{
    return m_app_instance_arn_isValid;
}

QDateTime OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::getCreatedTimestamp() const {
    return m_created_timestamp;
}
void OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::setCreatedTimestamp(const QDateTime &created_timestamp) {
    m_created_timestamp = created_timestamp;
    m_created_timestamp_isSet = true;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::is_created_timestamp_Set() const{
    return m_created_timestamp_isSet;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::is_created_timestamp_Valid() const{
    return m_created_timestamp_isValid;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_instance_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAppInstanceAdminResponse_AppInstanceAdmin::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
