# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResourceError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, logical_resource_id: str=None, physical_resource_id: str=None, reason: str=None):
        """ResourceError - a model defined in OpenAPI

        :param logical_resource_id: The logical_resource_id of this ResourceError.
        :param physical_resource_id: The physical_resource_id of this ResourceError.
        :param reason: The reason of this ResourceError.
        """
        self.openapi_types = {
            'logical_resource_id': str,
            'physical_resource_id': str,
            'reason': str
        }

        self.attribute_map = {
            'logical_resource_id': 'logicalResourceId',
            'physical_resource_id': 'physicalResourceId',
            'reason': 'reason'
        }

        self._logical_resource_id = logical_resource_id
        self._physical_resource_id = physical_resource_id
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceError of this ResourceError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def logical_resource_id(self):
        """Gets the logical_resource_id of this ResourceError.


        :return: The logical_resource_id of this ResourceError.
        :rtype: str
        """
        return self._logical_resource_id

    @logical_resource_id.setter
    def logical_resource_id(self, logical_resource_id):
        """Sets the logical_resource_id of this ResourceError.


        :param logical_resource_id: The logical_resource_id of this ResourceError.
        :type logical_resource_id: str
        """

        self._logical_resource_id = logical_resource_id

    @property
    def physical_resource_id(self):
        """Gets the physical_resource_id of this ResourceError.


        :return: The physical_resource_id of this ResourceError.
        :rtype: str
        """
        return self._physical_resource_id

    @physical_resource_id.setter
    def physical_resource_id(self, physical_resource_id):
        """Sets the physical_resource_id of this ResourceError.


        :param physical_resource_id: The physical_resource_id of this ResourceError.
        :type physical_resource_id: str
        """

        self._physical_resource_id = physical_resource_id

    @property
    def reason(self):
        """Gets the reason of this ResourceError.


        :return: The reason of this ResourceError.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this ResourceError.


        :param reason: The reason of this ResourceError.
        :type reason: str
        """

        self._reason = reason
