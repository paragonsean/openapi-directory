# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.eks_source import EksSource
from openapi_server.models.terraform_source import TerraformSource
import re
from openapi_server import util


class ImportResourcesToDraftAppVersionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_arn: str=None, eks_sources: List[EksSource]=None, import_strategy: str=None, source_arns: List[str]=None, terraform_sources: List[TerraformSource]=None):
        """ImportResourcesToDraftAppVersionRequest - a model defined in OpenAPI

        :param app_arn: The app_arn of this ImportResourcesToDraftAppVersionRequest.
        :param eks_sources: The eks_sources of this ImportResourcesToDraftAppVersionRequest.
        :param import_strategy: The import_strategy of this ImportResourcesToDraftAppVersionRequest.
        :param source_arns: The source_arns of this ImportResourcesToDraftAppVersionRequest.
        :param terraform_sources: The terraform_sources of this ImportResourcesToDraftAppVersionRequest.
        """
        self.openapi_types = {
            'app_arn': str,
            'eks_sources': List[EksSource],
            'import_strategy': str,
            'source_arns': List[str],
            'terraform_sources': List[TerraformSource]
        }

        self.attribute_map = {
            'app_arn': 'appArn',
            'eks_sources': 'eksSources',
            'import_strategy': 'importStrategy',
            'source_arns': 'sourceArns',
            'terraform_sources': 'terraformSources'
        }

        self._app_arn = app_arn
        self._eks_sources = eks_sources
        self._import_strategy = import_strategy
        self._source_arns = source_arns
        self._terraform_sources = terraform_sources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportResourcesToDraftAppVersionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportResourcesToDraftAppVersion_request of this ImportResourcesToDraftAppVersionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_arn(self):
        """Gets the app_arn of this ImportResourcesToDraftAppVersionRequest.

        Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.

        :return: The app_arn of this ImportResourcesToDraftAppVersionRequest.
        :rtype: str
        """
        return self._app_arn

    @app_arn.setter
    def app_arn(self, app_arn):
        """Sets the app_arn of this ImportResourcesToDraftAppVersionRequest.

        Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.

        :param app_arn: The app_arn of this ImportResourcesToDraftAppVersionRequest.
        :type app_arn: str
        """
        if app_arn is None:
            raise ValueError("Invalid value for `app_arn`, must not be `None`")
        if app_arn is not None and not re.search(r'^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_\/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9\/][A-Za-z0-9:_\/+.-]{0,1023}$', app_arn):
            raise ValueError("Invalid value for `app_arn`, must be a follow pattern or equal to `/^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_\/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9\/][A-Za-z0-9:_\/+.-]{0,1023}$/`")

        self._app_arn = app_arn

    @property
    def eks_sources(self):
        """Gets the eks_sources of this ImportResourcesToDraftAppVersionRequest.

        The input sources of the Amazon Elastic Kubernetes Service resources you need to import.

        :return: The eks_sources of this ImportResourcesToDraftAppVersionRequest.
        :rtype: List[EksSource]
        """
        return self._eks_sources

    @eks_sources.setter
    def eks_sources(self, eks_sources):
        """Sets the eks_sources of this ImportResourcesToDraftAppVersionRequest.

        The input sources of the Amazon Elastic Kubernetes Service resources you need to import.

        :param eks_sources: The eks_sources of this ImportResourcesToDraftAppVersionRequest.
        :type eks_sources: List[EksSource]
        """

        self._eks_sources = eks_sources

    @property
    def import_strategy(self):
        """Gets the import_strategy of this ImportResourcesToDraftAppVersionRequest.

        The import strategy you would like to set to import resources into Resilience Hub application.

        :return: The import_strategy of this ImportResourcesToDraftAppVersionRequest.
        :rtype: str
        """
        return self._import_strategy

    @import_strategy.setter
    def import_strategy(self, import_strategy):
        """Sets the import_strategy of this ImportResourcesToDraftAppVersionRequest.

        The import strategy you would like to set to import resources into Resilience Hub application.

        :param import_strategy: The import_strategy of this ImportResourcesToDraftAppVersionRequest.
        :type import_strategy: str
        """
        allowed_values = ["AddOnly", "ReplaceAll"]  # noqa: E501
        if import_strategy not in allowed_values:
            raise ValueError(
                "Invalid value for `import_strategy` ({0}), must be one of {1}"
                .format(import_strategy, allowed_values)
            )

        self._import_strategy = import_strategy

    @property
    def source_arns(self):
        """Gets the source_arns of this ImportResourcesToDraftAppVersionRequest.

        The Amazon Resource Names (ARNs) for the resources.

        :return: The source_arns of this ImportResourcesToDraftAppVersionRequest.
        :rtype: List[str]
        """
        return self._source_arns

    @source_arns.setter
    def source_arns(self, source_arns):
        """Sets the source_arns of this ImportResourcesToDraftAppVersionRequest.

        The Amazon Resource Names (ARNs) for the resources.

        :param source_arns: The source_arns of this ImportResourcesToDraftAppVersionRequest.
        :type source_arns: List[str]
        """

        self._source_arns = source_arns

    @property
    def terraform_sources(self):
        """Gets the terraform_sources of this ImportResourcesToDraftAppVersionRequest.

         A list of terraform file s3 URLs you need to import. 

        :return: The terraform_sources of this ImportResourcesToDraftAppVersionRequest.
        :rtype: List[TerraformSource]
        """
        return self._terraform_sources

    @terraform_sources.setter
    def terraform_sources(self, terraform_sources):
        """Sets the terraform_sources of this ImportResourcesToDraftAppVersionRequest.

         A list of terraform file s3 URLs you need to import. 

        :param terraform_sources: The terraform_sources of this ImportResourcesToDraftAppVersionRequest.
        :type terraform_sources: List[TerraformSource]
        """

        self._terraform_sources = terraform_sources
