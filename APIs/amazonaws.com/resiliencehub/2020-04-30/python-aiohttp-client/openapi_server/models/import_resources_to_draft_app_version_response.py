# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_import_status_type import ResourceImportStatusType
from openapi_server import util


class ImportResourcesToDraftAppVersionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_arn: str=None, app_version: str=None, eks_sources: List=None, source_arns: List=None, status: ResourceImportStatusType=None, terraform_sources: List=None):
        """ImportResourcesToDraftAppVersionResponse - a model defined in OpenAPI

        :param app_arn: The app_arn of this ImportResourcesToDraftAppVersionResponse.
        :param app_version: The app_version of this ImportResourcesToDraftAppVersionResponse.
        :param eks_sources: The eks_sources of this ImportResourcesToDraftAppVersionResponse.
        :param source_arns: The source_arns of this ImportResourcesToDraftAppVersionResponse.
        :param status: The status of this ImportResourcesToDraftAppVersionResponse.
        :param terraform_sources: The terraform_sources of this ImportResourcesToDraftAppVersionResponse.
        """
        self.openapi_types = {
            'app_arn': str,
            'app_version': str,
            'eks_sources': List,
            'source_arns': List,
            'status': ResourceImportStatusType,
            'terraform_sources': List
        }

        self.attribute_map = {
            'app_arn': 'appArn',
            'app_version': 'appVersion',
            'eks_sources': 'eksSources',
            'source_arns': 'sourceArns',
            'status': 'status',
            'terraform_sources': 'terraformSources'
        }

        self._app_arn = app_arn
        self._app_version = app_version
        self._eks_sources = eks_sources
        self._source_arns = source_arns
        self._status = status
        self._terraform_sources = terraform_sources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportResourcesToDraftAppVersionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportResourcesToDraftAppVersionResponse of this ImportResourcesToDraftAppVersionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_arn(self):
        """Gets the app_arn of this ImportResourcesToDraftAppVersionResponse.


        :return: The app_arn of this ImportResourcesToDraftAppVersionResponse.
        :rtype: str
        """
        return self._app_arn

    @app_arn.setter
    def app_arn(self, app_arn):
        """Sets the app_arn of this ImportResourcesToDraftAppVersionResponse.


        :param app_arn: The app_arn of this ImportResourcesToDraftAppVersionResponse.
        :type app_arn: str
        """
        if app_arn is None:
            raise ValueError("Invalid value for `app_arn`, must not be `None`")

        self._app_arn = app_arn

    @property
    def app_version(self):
        """Gets the app_version of this ImportResourcesToDraftAppVersionResponse.


        :return: The app_version of this ImportResourcesToDraftAppVersionResponse.
        :rtype: str
        """
        return self._app_version

    @app_version.setter
    def app_version(self, app_version):
        """Sets the app_version of this ImportResourcesToDraftAppVersionResponse.


        :param app_version: The app_version of this ImportResourcesToDraftAppVersionResponse.
        :type app_version: str
        """
        if app_version is None:
            raise ValueError("Invalid value for `app_version`, must not be `None`")

        self._app_version = app_version

    @property
    def eks_sources(self):
        """Gets the eks_sources of this ImportResourcesToDraftAppVersionResponse.


        :return: The eks_sources of this ImportResourcesToDraftAppVersionResponse.
        :rtype: List
        """
        return self._eks_sources

    @eks_sources.setter
    def eks_sources(self, eks_sources):
        """Sets the eks_sources of this ImportResourcesToDraftAppVersionResponse.


        :param eks_sources: The eks_sources of this ImportResourcesToDraftAppVersionResponse.
        :type eks_sources: List
        """

        self._eks_sources = eks_sources

    @property
    def source_arns(self):
        """Gets the source_arns of this ImportResourcesToDraftAppVersionResponse.


        :return: The source_arns of this ImportResourcesToDraftAppVersionResponse.
        :rtype: List
        """
        return self._source_arns

    @source_arns.setter
    def source_arns(self, source_arns):
        """Sets the source_arns of this ImportResourcesToDraftAppVersionResponse.


        :param source_arns: The source_arns of this ImportResourcesToDraftAppVersionResponse.
        :type source_arns: List
        """

        self._source_arns = source_arns

    @property
    def status(self):
        """Gets the status of this ImportResourcesToDraftAppVersionResponse.


        :return: The status of this ImportResourcesToDraftAppVersionResponse.
        :rtype: ResourceImportStatusType
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ImportResourcesToDraftAppVersionResponse.


        :param status: The status of this ImportResourcesToDraftAppVersionResponse.
        :type status: ResourceImportStatusType
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def terraform_sources(self):
        """Gets the terraform_sources of this ImportResourcesToDraftAppVersionResponse.


        :return: The terraform_sources of this ImportResourcesToDraftAppVersionResponse.
        :rtype: List
        """
        return self._terraform_sources

    @terraform_sources.setter
    def terraform_sources(self, terraform_sources):
        """Sets the terraform_sources of this ImportResourcesToDraftAppVersionResponse.


        :param terraform_sources: The terraform_sources of this ImportResourcesToDraftAppVersionResponse.
        :type terraform_sources: List
        """

        self._terraform_sources = terraform_sources
