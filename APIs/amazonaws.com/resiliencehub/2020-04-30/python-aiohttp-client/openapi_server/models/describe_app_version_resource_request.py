# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_app_version_resource_request_logical_resource_id import CreateAppVersionResourceRequestLogicalResourceId
import re
from openapi_server import util


class DescribeAppVersionResourceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_arn: str=None, app_version: str=None, aws_account_id: str=None, aws_region: str=None, logical_resource_id: CreateAppVersionResourceRequestLogicalResourceId=None, physical_resource_id: str=None, resource_name: str=None):
        """DescribeAppVersionResourceRequest - a model defined in OpenAPI

        :param app_arn: The app_arn of this DescribeAppVersionResourceRequest.
        :param app_version: The app_version of this DescribeAppVersionResourceRequest.
        :param aws_account_id: The aws_account_id of this DescribeAppVersionResourceRequest.
        :param aws_region: The aws_region of this DescribeAppVersionResourceRequest.
        :param logical_resource_id: The logical_resource_id of this DescribeAppVersionResourceRequest.
        :param physical_resource_id: The physical_resource_id of this DescribeAppVersionResourceRequest.
        :param resource_name: The resource_name of this DescribeAppVersionResourceRequest.
        """
        self.openapi_types = {
            'app_arn': str,
            'app_version': str,
            'aws_account_id': str,
            'aws_region': str,
            'logical_resource_id': CreateAppVersionResourceRequestLogicalResourceId,
            'physical_resource_id': str,
            'resource_name': str
        }

        self.attribute_map = {
            'app_arn': 'appArn',
            'app_version': 'appVersion',
            'aws_account_id': 'awsAccountId',
            'aws_region': 'awsRegion',
            'logical_resource_id': 'logicalResourceId',
            'physical_resource_id': 'physicalResourceId',
            'resource_name': 'resourceName'
        }

        self._app_arn = app_arn
        self._app_version = app_version
        self._aws_account_id = aws_account_id
        self._aws_region = aws_region
        self._logical_resource_id = logical_resource_id
        self._physical_resource_id = physical_resource_id
        self._resource_name = resource_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeAppVersionResourceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeAppVersionResource_request of this DescribeAppVersionResourceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_arn(self):
        """Gets the app_arn of this DescribeAppVersionResourceRequest.

        Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.

        :return: The app_arn of this DescribeAppVersionResourceRequest.
        :rtype: str
        """
        return self._app_arn

    @app_arn.setter
    def app_arn(self, app_arn):
        """Sets the app_arn of this DescribeAppVersionResourceRequest.

        Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.

        :param app_arn: The app_arn of this DescribeAppVersionResourceRequest.
        :type app_arn: str
        """
        if app_arn is None:
            raise ValueError("Invalid value for `app_arn`, must not be `None`")
        if app_arn is not None and not re.search(r'^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_\/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9\/][A-Za-z0-9:_\/+.-]{0,1023}$', app_arn):
            raise ValueError("Invalid value for `app_arn`, must be a follow pattern or equal to `/^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_\/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9\/][A-Za-z0-9:_\/+.-]{0,1023}$/`")

        self._app_arn = app_arn

    @property
    def app_version(self):
        """Gets the app_version of this DescribeAppVersionResourceRequest.

        Resilience Hub application version.

        :return: The app_version of this DescribeAppVersionResourceRequest.
        :rtype: str
        """
        return self._app_version

    @app_version.setter
    def app_version(self, app_version):
        """Sets the app_version of this DescribeAppVersionResourceRequest.

        Resilience Hub application version.

        :param app_version: The app_version of this DescribeAppVersionResourceRequest.
        :type app_version: str
        """
        if app_version is None:
            raise ValueError("Invalid value for `app_version`, must not be `None`")
        if app_version is not None and not re.search(r'^\S{1,50}$', app_version):
            raise ValueError("Invalid value for `app_version`, must be a follow pattern or equal to `/^\S{1,50}$/`")

        self._app_version = app_version

    @property
    def aws_account_id(self):
        """Gets the aws_account_id of this DescribeAppVersionResourceRequest.

        Amazon Web Services account that owns the physical resource.

        :return: The aws_account_id of this DescribeAppVersionResourceRequest.
        :rtype: str
        """
        return self._aws_account_id

    @aws_account_id.setter
    def aws_account_id(self, aws_account_id):
        """Sets the aws_account_id of this DescribeAppVersionResourceRequest.

        Amazon Web Services account that owns the physical resource.

        :param aws_account_id: The aws_account_id of this DescribeAppVersionResourceRequest.
        :type aws_account_id: str
        """
        if aws_account_id is not None and not re.search(r'^[0-9]{12}$', aws_account_id):
            raise ValueError("Invalid value for `aws_account_id`, must be a follow pattern or equal to `/^[0-9]{12}$/`")

        self._aws_account_id = aws_account_id

    @property
    def aws_region(self):
        """Gets the aws_region of this DescribeAppVersionResourceRequest.

        Amazon Web Services region that owns the physical resource.

        :return: The aws_region of this DescribeAppVersionResourceRequest.
        :rtype: str
        """
        return self._aws_region

    @aws_region.setter
    def aws_region(self, aws_region):
        """Sets the aws_region of this DescribeAppVersionResourceRequest.

        Amazon Web Services region that owns the physical resource.

        :param aws_region: The aws_region of this DescribeAppVersionResourceRequest.
        :type aws_region: str
        """
        if aws_region is not None and not re.search(r'^[a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]$', aws_region):
            raise ValueError("Invalid value for `aws_region`, must be a follow pattern or equal to `/^[a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]$/`")

        self._aws_region = aws_region

    @property
    def logical_resource_id(self):
        """Gets the logical_resource_id of this DescribeAppVersionResourceRequest.


        :return: The logical_resource_id of this DescribeAppVersionResourceRequest.
        :rtype: CreateAppVersionResourceRequestLogicalResourceId
        """
        return self._logical_resource_id

    @logical_resource_id.setter
    def logical_resource_id(self, logical_resource_id):
        """Sets the logical_resource_id of this DescribeAppVersionResourceRequest.


        :param logical_resource_id: The logical_resource_id of this DescribeAppVersionResourceRequest.
        :type logical_resource_id: CreateAppVersionResourceRequestLogicalResourceId
        """

        self._logical_resource_id = logical_resource_id

    @property
    def physical_resource_id(self):
        """Gets the physical_resource_id of this DescribeAppVersionResourceRequest.

        Physical identifier of the resource.

        :return: The physical_resource_id of this DescribeAppVersionResourceRequest.
        :rtype: str
        """
        return self._physical_resource_id

    @physical_resource_id.setter
    def physical_resource_id(self, physical_resource_id):
        """Sets the physical_resource_id of this DescribeAppVersionResourceRequest.

        Physical identifier of the resource.

        :param physical_resource_id: The physical_resource_id of this DescribeAppVersionResourceRequest.
        :type physical_resource_id: str
        """
        if physical_resource_id is not None and len(physical_resource_id) > 2048:
            raise ValueError("Invalid value for `physical_resource_id`, length must be less than or equal to `2048`")
        if physical_resource_id is not None and len(physical_resource_id) < 1:
            raise ValueError("Invalid value for `physical_resource_id`, length must be greater than or equal to `1`")

        self._physical_resource_id = physical_resource_id

    @property
    def resource_name(self):
        """Gets the resource_name of this DescribeAppVersionResourceRequest.

        Name of the resource.

        :return: The resource_name of this DescribeAppVersionResourceRequest.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this DescribeAppVersionResourceRequest.

        Name of the resource.

        :param resource_name: The resource_name of this DescribeAppVersionResourceRequest.
        :type resource_name: str
        """
        if resource_name is not None and not re.search(r'^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$', resource_name):
            raise ValueError("Invalid value for `resource_name`, must be a follow pattern or equal to `/^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$/`")

        self._resource_name = resource_name
