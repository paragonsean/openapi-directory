# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListAppsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_summaries: List=None, next_token: str=None):
        """ListAppsResponse - a model defined in OpenAPI

        :param app_summaries: The app_summaries of this ListAppsResponse.
        :param next_token: The next_token of this ListAppsResponse.
        """
        self.openapi_types = {
            'app_summaries': List,
            'next_token': str
        }

        self.attribute_map = {
            'app_summaries': 'appSummaries',
            'next_token': 'nextToken'
        }

        self._app_summaries = app_summaries
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListAppsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListAppsResponse of this ListAppsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_summaries(self):
        """Gets the app_summaries of this ListAppsResponse.


        :return: The app_summaries of this ListAppsResponse.
        :rtype: List
        """
        return self._app_summaries

    @app_summaries.setter
    def app_summaries(self, app_summaries):
        """Sets the app_summaries of this ListAppsResponse.


        :param app_summaries: The app_summaries of this ListAppsResponse.
        :type app_summaries: List
        """
        if app_summaries is None:
            raise ValueError("Invalid value for `app_summaries`, must not be `None`")

        self._app_summaries = app_summaries

    @property
    def next_token(self):
        """Gets the next_token of this ListAppsResponse.


        :return: The next_token of this ListAppsResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListAppsResponse.


        :param next_token: The next_token of this ListAppsResponse.
        :type next_token: str
        """

        self._next_token = next_token
