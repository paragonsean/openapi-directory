# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class DeleteAppAssessmentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assessment_arn: str=None, client_token: str=None):
        """DeleteAppAssessmentRequest - a model defined in OpenAPI

        :param assessment_arn: The assessment_arn of this DeleteAppAssessmentRequest.
        :param client_token: The client_token of this DeleteAppAssessmentRequest.
        """
        self.openapi_types = {
            'assessment_arn': str,
            'client_token': str
        }

        self.attribute_map = {
            'assessment_arn': 'assessmentArn',
            'client_token': 'clientToken'
        }

        self._assessment_arn = assessment_arn
        self._client_token = client_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteAppAssessmentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteAppAssessment_request of this DeleteAppAssessmentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assessment_arn(self):
        """Gets the assessment_arn of this DeleteAppAssessmentRequest.

        Amazon Resource Name (ARN) of the assessment. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.

        :return: The assessment_arn of this DeleteAppAssessmentRequest.
        :rtype: str
        """
        return self._assessment_arn

    @assessment_arn.setter
    def assessment_arn(self, assessment_arn):
        """Sets the assessment_arn of this DeleteAppAssessmentRequest.

        Amazon Resource Name (ARN) of the assessment. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app-assessment/<code>app-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.

        :param assessment_arn: The assessment_arn of this DeleteAppAssessmentRequest.
        :type assessment_arn: str
        """
        if assessment_arn is None:
            raise ValueError("Invalid value for `assessment_arn`, must not be `None`")
        if assessment_arn is not None and not re.search(r'^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_\/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9\/][A-Za-z0-9:_\/+.-]{0,1023}$', assessment_arn):
            raise ValueError("Invalid value for `assessment_arn`, must be a follow pattern or equal to `/^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_\/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9\/][A-Za-z0-9:_\/+.-]{0,1023}$/`")

        self._assessment_arn = assessment_arn

    @property
    def client_token(self):
        """Gets the client_token of this DeleteAppAssessmentRequest.

        Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. You should not reuse the same client token for other API requests.

        :return: The client_token of this DeleteAppAssessmentRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this DeleteAppAssessmentRequest.

        Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. You should not reuse the same client token for other API requests.

        :param client_token: The client_token of this DeleteAppAssessmentRequest.
        :type client_token: str
        """
        if client_token is not None and len(client_token) > 63:
            raise ValueError("Invalid value for `client_token`, length must be less than or equal to `63`")
        if client_token is not None and len(client_token) < 1:
            raise ValueError("Invalid value for `client_token`, length must be greater than or equal to `1`")
        if client_token is not None and not re.search(r'^[A-za-z0-9_.-]{0,63}$', client_token):
            raise ValueError("Invalid value for `client_token`, must be a follow pattern or equal to `/^[A-za-z0-9_.-]{0,63}$/`")

        self._client_token = client_token
