# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.exclude_recommendation_reason import ExcludeRecommendationReason
from openapi_server import util


class RecommendationItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, already_implemented: bool=None, exclude_reason: ExcludeRecommendationReason=None, excluded: bool=None, resource_id: str=None, target_account_id: str=None, target_region: str=None):
        """RecommendationItem - a model defined in OpenAPI

        :param already_implemented: The already_implemented of this RecommendationItem.
        :param exclude_reason: The exclude_reason of this RecommendationItem.
        :param excluded: The excluded of this RecommendationItem.
        :param resource_id: The resource_id of this RecommendationItem.
        :param target_account_id: The target_account_id of this RecommendationItem.
        :param target_region: The target_region of this RecommendationItem.
        """
        self.openapi_types = {
            'already_implemented': bool,
            'exclude_reason': ExcludeRecommendationReason,
            'excluded': bool,
            'resource_id': str,
            'target_account_id': str,
            'target_region': str
        }

        self.attribute_map = {
            'already_implemented': 'alreadyImplemented',
            'exclude_reason': 'excludeReason',
            'excluded': 'excluded',
            'resource_id': 'resourceId',
            'target_account_id': 'targetAccountId',
            'target_region': 'targetRegion'
        }

        self._already_implemented = already_implemented
        self._exclude_reason = exclude_reason
        self._excluded = excluded
        self._resource_id = resource_id
        self._target_account_id = target_account_id
        self._target_region = target_region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendationItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommendationItem of this RecommendationItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def already_implemented(self):
        """Gets the already_implemented of this RecommendationItem.


        :return: The already_implemented of this RecommendationItem.
        :rtype: bool
        """
        return self._already_implemented

    @already_implemented.setter
    def already_implemented(self, already_implemented):
        """Sets the already_implemented of this RecommendationItem.


        :param already_implemented: The already_implemented of this RecommendationItem.
        :type already_implemented: bool
        """

        self._already_implemented = already_implemented

    @property
    def exclude_reason(self):
        """Gets the exclude_reason of this RecommendationItem.


        :return: The exclude_reason of this RecommendationItem.
        :rtype: ExcludeRecommendationReason
        """
        return self._exclude_reason

    @exclude_reason.setter
    def exclude_reason(self, exclude_reason):
        """Sets the exclude_reason of this RecommendationItem.


        :param exclude_reason: The exclude_reason of this RecommendationItem.
        :type exclude_reason: ExcludeRecommendationReason
        """

        self._exclude_reason = exclude_reason

    @property
    def excluded(self):
        """Gets the excluded of this RecommendationItem.


        :return: The excluded of this RecommendationItem.
        :rtype: bool
        """
        return self._excluded

    @excluded.setter
    def excluded(self, excluded):
        """Sets the excluded of this RecommendationItem.


        :param excluded: The excluded of this RecommendationItem.
        :type excluded: bool
        """

        self._excluded = excluded

    @property
    def resource_id(self):
        """Gets the resource_id of this RecommendationItem.


        :return: The resource_id of this RecommendationItem.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this RecommendationItem.


        :param resource_id: The resource_id of this RecommendationItem.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def target_account_id(self):
        """Gets the target_account_id of this RecommendationItem.


        :return: The target_account_id of this RecommendationItem.
        :rtype: str
        """
        return self._target_account_id

    @target_account_id.setter
    def target_account_id(self, target_account_id):
        """Sets the target_account_id of this RecommendationItem.


        :param target_account_id: The target_account_id of this RecommendationItem.
        :type target_account_id: str
        """

        self._target_account_id = target_account_id

    @property
    def target_region(self):
        """Gets the target_region of this RecommendationItem.


        :return: The target_region of this RecommendationItem.
        :rtype: str
        """
        return self._target_region

    @target_region.setter
    def target_region(self, target_region):
        """Sets the target_region of this RecommendationItem.


        :param target_region: The target_region of this RecommendationItem.
        :type target_region: str
        """

        self._target_region = target_region
