# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class RemoveDraftAppVersionResourceMappingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_arn: str=None, app_registry_app_names: List[str]=None, eks_source_names: List[str]=None, logical_stack_names: List[str]=None, resource_group_names: List[str]=None, resource_names: List[str]=None, terraform_source_names: List[str]=None):
        """RemoveDraftAppVersionResourceMappingsRequest - a model defined in OpenAPI

        :param app_arn: The app_arn of this RemoveDraftAppVersionResourceMappingsRequest.
        :param app_registry_app_names: The app_registry_app_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :param eks_source_names: The eks_source_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :param logical_stack_names: The logical_stack_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :param resource_group_names: The resource_group_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :param resource_names: The resource_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :param terraform_source_names: The terraform_source_names of this RemoveDraftAppVersionResourceMappingsRequest.
        """
        self.openapi_types = {
            'app_arn': str,
            'app_registry_app_names': List[str],
            'eks_source_names': List[str],
            'logical_stack_names': List[str],
            'resource_group_names': List[str],
            'resource_names': List[str],
            'terraform_source_names': List[str]
        }

        self.attribute_map = {
            'app_arn': 'appArn',
            'app_registry_app_names': 'appRegistryAppNames',
            'eks_source_names': 'eksSourceNames',
            'logical_stack_names': 'logicalStackNames',
            'resource_group_names': 'resourceGroupNames',
            'resource_names': 'resourceNames',
            'terraform_source_names': 'terraformSourceNames'
        }

        self._app_arn = app_arn
        self._app_registry_app_names = app_registry_app_names
        self._eks_source_names = eks_source_names
        self._logical_stack_names = logical_stack_names
        self._resource_group_names = resource_group_names
        self._resource_names = resource_names
        self._terraform_source_names = terraform_source_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoveDraftAppVersionResourceMappingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoveDraftAppVersionResourceMappings_request of this RemoveDraftAppVersionResourceMappingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_arn(self):
        """Gets the app_arn of this RemoveDraftAppVersionResourceMappingsRequest.

        Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.

        :return: The app_arn of this RemoveDraftAppVersionResourceMappingsRequest.
        :rtype: str
        """
        return self._app_arn

    @app_arn.setter
    def app_arn(self, app_arn):
        """Sets the app_arn of this RemoveDraftAppVersionResourceMappingsRequest.

        Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.

        :param app_arn: The app_arn of this RemoveDraftAppVersionResourceMappingsRequest.
        :type app_arn: str
        """
        if app_arn is None:
            raise ValueError("Invalid value for `app_arn`, must not be `None`")
        if app_arn is not None and not re.search(r'^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_\/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9\/][A-Za-z0-9:_\/+.-]{0,1023}$', app_arn):
            raise ValueError("Invalid value for `app_arn`, must be a follow pattern or equal to `/^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_\/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9\/][A-Za-z0-9:_\/+.-]{0,1023}$/`")

        self._app_arn = app_arn

    @property
    def app_registry_app_names(self):
        """Gets the app_registry_app_names of this RemoveDraftAppVersionResourceMappingsRequest.

        The names of the registered applications you want to remove from the resource mappings.

        :return: The app_registry_app_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :rtype: List[str]
        """
        return self._app_registry_app_names

    @app_registry_app_names.setter
    def app_registry_app_names(self, app_registry_app_names):
        """Sets the app_registry_app_names of this RemoveDraftAppVersionResourceMappingsRequest.

        The names of the registered applications you want to remove from the resource mappings.

        :param app_registry_app_names: The app_registry_app_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :type app_registry_app_names: List[str]
        """

        self._app_registry_app_names = app_registry_app_names

    @property
    def eks_source_names(self):
        """Gets the eks_source_names of this RemoveDraftAppVersionResourceMappingsRequest.

        <p>The names of the Amazon Elastic Kubernetes Service clusters and namespaces you want to remove from the resource mappings.</p> <note> <p>This parameter accepts values in \"eks-cluster/namespace\" format.</p> </note>

        :return: The eks_source_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :rtype: List[str]
        """
        return self._eks_source_names

    @eks_source_names.setter
    def eks_source_names(self, eks_source_names):
        """Sets the eks_source_names of this RemoveDraftAppVersionResourceMappingsRequest.

        <p>The names of the Amazon Elastic Kubernetes Service clusters and namespaces you want to remove from the resource mappings.</p> <note> <p>This parameter accepts values in \"eks-cluster/namespace\" format.</p> </note>

        :param eks_source_names: The eks_source_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :type eks_source_names: List[str]
        """

        self._eks_source_names = eks_source_names

    @property
    def logical_stack_names(self):
        """Gets the logical_stack_names of this RemoveDraftAppVersionResourceMappingsRequest.

        The names of the CloudFormation stacks you want to remove from the resource mappings.

        :return: The logical_stack_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :rtype: List[str]
        """
        return self._logical_stack_names

    @logical_stack_names.setter
    def logical_stack_names(self, logical_stack_names):
        """Sets the logical_stack_names of this RemoveDraftAppVersionResourceMappingsRequest.

        The names of the CloudFormation stacks you want to remove from the resource mappings.

        :param logical_stack_names: The logical_stack_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :type logical_stack_names: List[str]
        """

        self._logical_stack_names = logical_stack_names

    @property
    def resource_group_names(self):
        """Gets the resource_group_names of this RemoveDraftAppVersionResourceMappingsRequest.

        The names of the resource groups you want to remove from the resource mappings.

        :return: The resource_group_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :rtype: List[str]
        """
        return self._resource_group_names

    @resource_group_names.setter
    def resource_group_names(self, resource_group_names):
        """Sets the resource_group_names of this RemoveDraftAppVersionResourceMappingsRequest.

        The names of the resource groups you want to remove from the resource mappings.

        :param resource_group_names: The resource_group_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :type resource_group_names: List[str]
        """

        self._resource_group_names = resource_group_names

    @property
    def resource_names(self):
        """Gets the resource_names of this RemoveDraftAppVersionResourceMappingsRequest.

        The names of the resources you want to remove from the resource mappings.

        :return: The resource_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :rtype: List[str]
        """
        return self._resource_names

    @resource_names.setter
    def resource_names(self, resource_names):
        """Sets the resource_names of this RemoveDraftAppVersionResourceMappingsRequest.

        The names of the resources you want to remove from the resource mappings.

        :param resource_names: The resource_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :type resource_names: List[str]
        """

        self._resource_names = resource_names

    @property
    def terraform_source_names(self):
        """Gets the terraform_source_names of this RemoveDraftAppVersionResourceMappingsRequest.

        The names of the Terraform sources you want to remove from the resource mappings.

        :return: The terraform_source_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :rtype: List[str]
        """
        return self._terraform_source_names

    @terraform_source_names.setter
    def terraform_source_names(self, terraform_source_names):
        """Sets the terraform_source_names of this RemoveDraftAppVersionResourceMappingsRequest.

        The names of the Terraform sources you want to remove from the resource mappings.

        :param terraform_source_names: The terraform_source_names of this RemoveDraftAppVersionResourceMappingsRequest.
        :type terraform_source_names: List[str]
        """

        self._terraform_source_names = terraform_source_names
