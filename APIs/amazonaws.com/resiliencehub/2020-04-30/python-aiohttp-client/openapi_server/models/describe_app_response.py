# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_app_response_app import DescribeAppResponseApp
from openapi_server import util


class DescribeAppResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app: DescribeAppResponseApp=None):
        """DescribeAppResponse - a model defined in OpenAPI

        :param app: The app of this DescribeAppResponse.
        """
        self.openapi_types = {
            'app': DescribeAppResponseApp
        }

        self.attribute_map = {
            'app': 'app'
        }

        self._app = app

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeAppResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeAppResponse of this DescribeAppResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app(self):
        """Gets the app of this DescribeAppResponse.


        :return: The app of this DescribeAppResponse.
        :rtype: DescribeAppResponseApp
        """
        return self._app

    @app.setter
    def app(self, app):
        """Sets the app of this DescribeAppResponse.


        :param app: The app of this DescribeAppResponse.
        :type app: DescribeAppResponseApp
        """
        if app is None:
            raise ValueError("Invalid value for `app`, must not be `None`")

        self._app = app
