# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_app_request_permission_model import CreateAppRequestPermissionModel
from openapi_server.models.event_subscription import EventSubscription
import re
from openapi_server import util


class UpdateAppRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_arn: str=None, assessment_schedule: str=None, clear_resiliency_policy_arn: bool=None, description: str=None, event_subscriptions: List[EventSubscription]=None, permission_model: CreateAppRequestPermissionModel=None, policy_arn: str=None):
        """UpdateAppRequest - a model defined in OpenAPI

        :param app_arn: The app_arn of this UpdateAppRequest.
        :param assessment_schedule: The assessment_schedule of this UpdateAppRequest.
        :param clear_resiliency_policy_arn: The clear_resiliency_policy_arn of this UpdateAppRequest.
        :param description: The description of this UpdateAppRequest.
        :param event_subscriptions: The event_subscriptions of this UpdateAppRequest.
        :param permission_model: The permission_model of this UpdateAppRequest.
        :param policy_arn: The policy_arn of this UpdateAppRequest.
        """
        self.openapi_types = {
            'app_arn': str,
            'assessment_schedule': str,
            'clear_resiliency_policy_arn': bool,
            'description': str,
            'event_subscriptions': List[EventSubscription],
            'permission_model': CreateAppRequestPermissionModel,
            'policy_arn': str
        }

        self.attribute_map = {
            'app_arn': 'appArn',
            'assessment_schedule': 'assessmentSchedule',
            'clear_resiliency_policy_arn': 'clearResiliencyPolicyArn',
            'description': 'description',
            'event_subscriptions': 'eventSubscriptions',
            'permission_model': 'permissionModel',
            'policy_arn': 'policyArn'
        }

        self._app_arn = app_arn
        self._assessment_schedule = assessment_schedule
        self._clear_resiliency_policy_arn = clear_resiliency_policy_arn
        self._description = description
        self._event_subscriptions = event_subscriptions
        self._permission_model = permission_model
        self._policy_arn = policy_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateAppRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateApp_request of this UpdateAppRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_arn(self):
        """Gets the app_arn of this UpdateAppRequest.

        Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.

        :return: The app_arn of this UpdateAppRequest.
        :rtype: str
        """
        return self._app_arn

    @app_arn.setter
    def app_arn(self, app_arn):
        """Sets the app_arn of this UpdateAppRequest.

        Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.

        :param app_arn: The app_arn of this UpdateAppRequest.
        :type app_arn: str
        """
        if app_arn is None:
            raise ValueError("Invalid value for `app_arn`, must not be `None`")
        if app_arn is not None and not re.search(r'^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_\/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9\/][A-Za-z0-9:_\/+.-]{0,1023}$', app_arn):
            raise ValueError("Invalid value for `app_arn`, must be a follow pattern or equal to `/^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_\/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9\/][A-Za-z0-9:_\/+.-]{0,1023}$/`")

        self._app_arn = app_arn

    @property
    def assessment_schedule(self):
        """Gets the assessment_schedule of this UpdateAppRequest.

         Assessment execution schedule with 'Daily' or 'Disabled' values. 

        :return: The assessment_schedule of this UpdateAppRequest.
        :rtype: str
        """
        return self._assessment_schedule

    @assessment_schedule.setter
    def assessment_schedule(self, assessment_schedule):
        """Sets the assessment_schedule of this UpdateAppRequest.

         Assessment execution schedule with 'Daily' or 'Disabled' values. 

        :param assessment_schedule: The assessment_schedule of this UpdateAppRequest.
        :type assessment_schedule: str
        """
        allowed_values = ["Disabled", "Daily"]  # noqa: E501
        if assessment_schedule not in allowed_values:
            raise ValueError(
                "Invalid value for `assessment_schedule` ({0}), must be one of {1}"
                .format(assessment_schedule, allowed_values)
            )

        self._assessment_schedule = assessment_schedule

    @property
    def clear_resiliency_policy_arn(self):
        """Gets the clear_resiliency_policy_arn of this UpdateAppRequest.

        Specifies if the resiliency policy ARN should be cleared.

        :return: The clear_resiliency_policy_arn of this UpdateAppRequest.
        :rtype: bool
        """
        return self._clear_resiliency_policy_arn

    @clear_resiliency_policy_arn.setter
    def clear_resiliency_policy_arn(self, clear_resiliency_policy_arn):
        """Sets the clear_resiliency_policy_arn of this UpdateAppRequest.

        Specifies if the resiliency policy ARN should be cleared.

        :param clear_resiliency_policy_arn: The clear_resiliency_policy_arn of this UpdateAppRequest.
        :type clear_resiliency_policy_arn: bool
        """

        self._clear_resiliency_policy_arn = clear_resiliency_policy_arn

    @property
    def description(self):
        """Gets the description of this UpdateAppRequest.

        The optional description for an app.

        :return: The description of this UpdateAppRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateAppRequest.

        The optional description for an app.

        :param description: The description of this UpdateAppRequest.
        :type description: str
        """
        if description is not None and len(description) > 500:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `500`")
        if description is not None and len(description) < 0:
            raise ValueError("Invalid value for `description`, length must be greater than or equal to `0`")

        self._description = description

    @property
    def event_subscriptions(self):
        """Gets the event_subscriptions of this UpdateAppRequest.

        The list of events you would like to subscribe and get notification for. Currently, Resilience Hub supports notifications only for <b>Drift detected</b> and <b>Scheduled assessment failure</b> events.

        :return: The event_subscriptions of this UpdateAppRequest.
        :rtype: List[EventSubscription]
        """
        return self._event_subscriptions

    @event_subscriptions.setter
    def event_subscriptions(self, event_subscriptions):
        """Sets the event_subscriptions of this UpdateAppRequest.

        The list of events you would like to subscribe and get notification for. Currently, Resilience Hub supports notifications only for <b>Drift detected</b> and <b>Scheduled assessment failure</b> events.

        :param event_subscriptions: The event_subscriptions of this UpdateAppRequest.
        :type event_subscriptions: List[EventSubscription]
        """
        if event_subscriptions is not None and len(event_subscriptions) > 10:
            raise ValueError("Invalid value for `event_subscriptions`, number of items must be less than or equal to `10`")
        if event_subscriptions is not None and len(event_subscriptions) < 0:
            raise ValueError("Invalid value for `event_subscriptions`, number of items must be greater than or equal to `0`")

        self._event_subscriptions = event_subscriptions

    @property
    def permission_model(self):
        """Gets the permission_model of this UpdateAppRequest.


        :return: The permission_model of this UpdateAppRequest.
        :rtype: CreateAppRequestPermissionModel
        """
        return self._permission_model

    @permission_model.setter
    def permission_model(self, permission_model):
        """Sets the permission_model of this UpdateAppRequest.


        :param permission_model: The permission_model of this UpdateAppRequest.
        :type permission_model: CreateAppRequestPermissionModel
        """

        self._permission_model = permission_model

    @property
    def policy_arn(self):
        """Gets the policy_arn of this UpdateAppRequest.

        Amazon Resource Name (ARN) of the resiliency policy. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:resiliency-policy/<code>policy-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.

        :return: The policy_arn of this UpdateAppRequest.
        :rtype: str
        """
        return self._policy_arn

    @policy_arn.setter
    def policy_arn(self, policy_arn):
        """Sets the policy_arn of this UpdateAppRequest.

        Amazon Resource Name (ARN) of the resiliency policy. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:resiliency-policy/<code>policy-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.

        :param policy_arn: The policy_arn of this UpdateAppRequest.
        :type policy_arn: str
        """
        if policy_arn is not None and not re.search(r'^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_\/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9\/][A-Za-z0-9:_\/+.-]{0,1023}$', policy_arn):
            raise ValueError("Invalid value for `policy_arn`, must be a follow pattern or equal to `/^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_\/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9\/][A-Za-z0-9:_\/+.-]{0,1023}$/`")

        self._policy_arn = policy_arn
