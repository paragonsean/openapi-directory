# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_app_assessment_response_assessment import DescribeAppAssessmentResponseAssessment
from openapi_server import util


class DescribeAppAssessmentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assessment: DescribeAppAssessmentResponseAssessment=None):
        """DescribeAppAssessmentResponse - a model defined in OpenAPI

        :param assessment: The assessment of this DescribeAppAssessmentResponse.
        """
        self.openapi_types = {
            'assessment': DescribeAppAssessmentResponseAssessment
        }

        self.attribute_map = {
            'assessment': 'assessment'
        }

        self._assessment = assessment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeAppAssessmentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeAppAssessmentResponse of this DescribeAppAssessmentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assessment(self):
        """Gets the assessment of this DescribeAppAssessmentResponse.


        :return: The assessment of this DescribeAppAssessmentResponse.
        :rtype: DescribeAppAssessmentResponseAssessment
        """
        return self._assessment

    @assessment.setter
    def assessment(self, assessment):
        """Sets the assessment of this DescribeAppAssessmentResponse.


        :param assessment: The assessment of this DescribeAppAssessmentResponse.
        :type assessment: DescribeAppAssessmentResponseAssessment
        """
        if assessment is None:
            raise ValueError("Invalid value for `assessment`, must not be `None`")

        self._assessment = assessment
