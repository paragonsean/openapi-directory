# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_import_status_type import ResourceImportStatusType
from openapi_server import util


class DescribeDraftAppVersionResourcesImportStatusResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_arn: str=None, app_version: str=None, error_message: str=None, status: ResourceImportStatusType=None, status_change_time: datetime=None):
        """DescribeDraftAppVersionResourcesImportStatusResponse - a model defined in OpenAPI

        :param app_arn: The app_arn of this DescribeDraftAppVersionResourcesImportStatusResponse.
        :param app_version: The app_version of this DescribeDraftAppVersionResourcesImportStatusResponse.
        :param error_message: The error_message of this DescribeDraftAppVersionResourcesImportStatusResponse.
        :param status: The status of this DescribeDraftAppVersionResourcesImportStatusResponse.
        :param status_change_time: The status_change_time of this DescribeDraftAppVersionResourcesImportStatusResponse.
        """
        self.openapi_types = {
            'app_arn': str,
            'app_version': str,
            'error_message': str,
            'status': ResourceImportStatusType,
            'status_change_time': datetime
        }

        self.attribute_map = {
            'app_arn': 'appArn',
            'app_version': 'appVersion',
            'error_message': 'errorMessage',
            'status': 'status',
            'status_change_time': 'statusChangeTime'
        }

        self._app_arn = app_arn
        self._app_version = app_version
        self._error_message = error_message
        self._status = status
        self._status_change_time = status_change_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeDraftAppVersionResourcesImportStatusResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeDraftAppVersionResourcesImportStatusResponse of this DescribeDraftAppVersionResourcesImportStatusResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_arn(self):
        """Gets the app_arn of this DescribeDraftAppVersionResourcesImportStatusResponse.


        :return: The app_arn of this DescribeDraftAppVersionResourcesImportStatusResponse.
        :rtype: str
        """
        return self._app_arn

    @app_arn.setter
    def app_arn(self, app_arn):
        """Sets the app_arn of this DescribeDraftAppVersionResourcesImportStatusResponse.


        :param app_arn: The app_arn of this DescribeDraftAppVersionResourcesImportStatusResponse.
        :type app_arn: str
        """
        if app_arn is None:
            raise ValueError("Invalid value for `app_arn`, must not be `None`")

        self._app_arn = app_arn

    @property
    def app_version(self):
        """Gets the app_version of this DescribeDraftAppVersionResourcesImportStatusResponse.


        :return: The app_version of this DescribeDraftAppVersionResourcesImportStatusResponse.
        :rtype: str
        """
        return self._app_version

    @app_version.setter
    def app_version(self, app_version):
        """Sets the app_version of this DescribeDraftAppVersionResourcesImportStatusResponse.


        :param app_version: The app_version of this DescribeDraftAppVersionResourcesImportStatusResponse.
        :type app_version: str
        """
        if app_version is None:
            raise ValueError("Invalid value for `app_version`, must not be `None`")

        self._app_version = app_version

    @property
    def error_message(self):
        """Gets the error_message of this DescribeDraftAppVersionResourcesImportStatusResponse.


        :return: The error_message of this DescribeDraftAppVersionResourcesImportStatusResponse.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this DescribeDraftAppVersionResourcesImportStatusResponse.


        :param error_message: The error_message of this DescribeDraftAppVersionResourcesImportStatusResponse.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def status(self):
        """Gets the status of this DescribeDraftAppVersionResourcesImportStatusResponse.


        :return: The status of this DescribeDraftAppVersionResourcesImportStatusResponse.
        :rtype: ResourceImportStatusType
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeDraftAppVersionResourcesImportStatusResponse.


        :param status: The status of this DescribeDraftAppVersionResourcesImportStatusResponse.
        :type status: ResourceImportStatusType
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def status_change_time(self):
        """Gets the status_change_time of this DescribeDraftAppVersionResourcesImportStatusResponse.


        :return: The status_change_time of this DescribeDraftAppVersionResourcesImportStatusResponse.
        :rtype: datetime
        """
        return self._status_change_time

    @status_change_time.setter
    def status_change_time(self, status_change_time):
        """Sets the status_change_time of this DescribeDraftAppVersionResourcesImportStatusResponse.


        :param status_change_time: The status_change_time of this DescribeDraftAppVersionResourcesImportStatusResponse.
        :type status_change_time: datetime
        """
        if status_change_time is None:
            raise ValueError("Invalid value for `status_change_time`, must not be `None`")

        self._status_change_time = status_change_time
