# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class UpdateAppVersionAppComponentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_info: Dict[str, List[str]]=None, app_arn: str=None, id: str=None, name: str=None, type: str=None):
        """UpdateAppVersionAppComponentRequest - a model defined in OpenAPI

        :param additional_info: The additional_info of this UpdateAppVersionAppComponentRequest.
        :param app_arn: The app_arn of this UpdateAppVersionAppComponentRequest.
        :param id: The id of this UpdateAppVersionAppComponentRequest.
        :param name: The name of this UpdateAppVersionAppComponentRequest.
        :param type: The type of this UpdateAppVersionAppComponentRequest.
        """
        self.openapi_types = {
            'additional_info': Dict[str, List[str]],
            'app_arn': str,
            'id': str,
            'name': str,
            'type': str
        }

        self.attribute_map = {
            'additional_info': 'additionalInfo',
            'app_arn': 'appArn',
            'id': 'id',
            'name': 'name',
            'type': 'type'
        }

        self._additional_info = additional_info
        self._app_arn = app_arn
        self._id = id
        self._name = name
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateAppVersionAppComponentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateAppVersionAppComponent_request of this UpdateAppVersionAppComponentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_info(self):
        """Gets the additional_info of this UpdateAppVersionAppComponentRequest.

        Currently, there is no supported additional information for Application Components.

        :return: The additional_info of this UpdateAppVersionAppComponentRequest.
        :rtype: Dict[str, List[str]]
        """
        return self._additional_info

    @additional_info.setter
    def additional_info(self, additional_info):
        """Sets the additional_info of this UpdateAppVersionAppComponentRequest.

        Currently, there is no supported additional information for Application Components.

        :param additional_info: The additional_info of this UpdateAppVersionAppComponentRequest.
        :type additional_info: Dict[str, List[str]]
        """

        self._additional_info = additional_info

    @property
    def app_arn(self):
        """Gets the app_arn of this UpdateAppVersionAppComponentRequest.

        Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.

        :return: The app_arn of this UpdateAppVersionAppComponentRequest.
        :rtype: str
        """
        return self._app_arn

    @app_arn.setter
    def app_arn(self, app_arn):
        """Sets the app_arn of this UpdateAppVersionAppComponentRequest.

        Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.

        :param app_arn: The app_arn of this UpdateAppVersionAppComponentRequest.
        :type app_arn: str
        """
        if app_arn is None:
            raise ValueError("Invalid value for `app_arn`, must not be `None`")
        if app_arn is not None and not re.search(r'^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_\/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9\/][A-Za-z0-9:_\/+.-]{0,1023}$', app_arn):
            raise ValueError("Invalid value for `app_arn`, must be a follow pattern or equal to `/^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_\/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9\/][A-Za-z0-9:_\/+.-]{0,1023}$/`")

        self._app_arn = app_arn

    @property
    def id(self):
        """Gets the id of this UpdateAppVersionAppComponentRequest.

        Identifier of the Application Component.

        :return: The id of this UpdateAppVersionAppComponentRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateAppVersionAppComponentRequest.

        Identifier of the Application Component.

        :param id: The id of this UpdateAppVersionAppComponentRequest.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")
        if id is not None and len(id) > 255:
            raise ValueError("Invalid value for `id`, length must be less than or equal to `255`")
        if id is not None and len(id) < 1:
            raise ValueError("Invalid value for `id`, length must be greater than or equal to `1`")

        self._id = id

    @property
    def name(self):
        """Gets the name of this UpdateAppVersionAppComponentRequest.

        Name of the Application Component.

        :return: The name of this UpdateAppVersionAppComponentRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateAppVersionAppComponentRequest.

        Name of the Application Component.

        :param name: The name of this UpdateAppVersionAppComponentRequest.
        :type name: str
        """
        if name is not None and len(name) > 255:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `255`")
        if name is not None and len(name) < 1:
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `1`")

        self._name = name

    @property
    def type(self):
        """Gets the type of this UpdateAppVersionAppComponentRequest.

        Type of Application Component. For more information about the types of Application Component, see <a href=\"https://docs.aws.amazon.com/resilience-hub/latest/userguide/AppComponent.grouping.html\">Grouping resources in an AppComponent</a>.

        :return: The type of this UpdateAppVersionAppComponentRequest.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UpdateAppVersionAppComponentRequest.

        Type of Application Component. For more information about the types of Application Component, see <a href=\"https://docs.aws.amazon.com/resilience-hub/latest/userguide/AppComponent.grouping.html\">Grouping resources in an AppComponent</a>.

        :param type: The type of this UpdateAppVersionAppComponentRequest.
        :type type: str
        """
        if type is not None and len(type) > 255:
            raise ValueError("Invalid value for `type`, length must be less than or equal to `255`")
        if type is not None and len(type) < 1:
            raise ValueError("Invalid value for `type`, length must be greater than or equal to `1`")

        self._type = type
