# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FailurePolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rpo_in_secs: int=None, rto_in_secs: int=None):
        """FailurePolicy - a model defined in OpenAPI

        :param rpo_in_secs: The rpo_in_secs of this FailurePolicy.
        :param rto_in_secs: The rto_in_secs of this FailurePolicy.
        """
        self.openapi_types = {
            'rpo_in_secs': int,
            'rto_in_secs': int
        }

        self.attribute_map = {
            'rpo_in_secs': 'rpoInSecs',
            'rto_in_secs': 'rtoInSecs'
        }

        self._rpo_in_secs = rpo_in_secs
        self._rto_in_secs = rto_in_secs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FailurePolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FailurePolicy of this FailurePolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rpo_in_secs(self):
        """Gets the rpo_in_secs of this FailurePolicy.


        :return: The rpo_in_secs of this FailurePolicy.
        :rtype: int
        """
        return self._rpo_in_secs

    @rpo_in_secs.setter
    def rpo_in_secs(self, rpo_in_secs):
        """Sets the rpo_in_secs of this FailurePolicy.


        :param rpo_in_secs: The rpo_in_secs of this FailurePolicy.
        :type rpo_in_secs: int
        """
        if rpo_in_secs is None:
            raise ValueError("Invalid value for `rpo_in_secs`, must not be `None`")

        self._rpo_in_secs = rpo_in_secs

    @property
    def rto_in_secs(self):
        """Gets the rto_in_secs of this FailurePolicy.


        :return: The rto_in_secs of this FailurePolicy.
        :rtype: int
        """
        return self._rto_in_secs

    @rto_in_secs.setter
    def rto_in_secs(self, rto_in_secs):
        """Sets the rto_in_secs of this FailurePolicy.


        :param rto_in_secs: The rto_in_secs of this FailurePolicy.
        :type rto_in_secs: int
        """
        if rto_in_secs is None:
            raise ValueError("Invalid value for `rto_in_secs`, must not be `None`")

        self._rto_in_secs = rto_in_secs
