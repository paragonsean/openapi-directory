/*
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddDraftAppVersionResourceMappingsRequest;
import org.openapitools.client.model.AddDraftAppVersionResourceMappingsResponse;
import org.openapitools.client.model.AssessmentStatus;
import org.openapitools.client.model.BatchUpdateRecommendationStatusRequest;
import org.openapitools.client.model.BatchUpdateRecommendationStatusResponse;
import org.openapitools.client.model.CreateAppRequest;
import org.openapitools.client.model.CreateAppResponse;
import org.openapitools.client.model.CreateAppVersionAppComponentRequest;
import org.openapitools.client.model.CreateAppVersionAppComponentResponse;
import org.openapitools.client.model.CreateAppVersionResourceRequest;
import org.openapitools.client.model.CreateAppVersionResourceResponse;
import org.openapitools.client.model.CreateRecommendationTemplateRequest;
import org.openapitools.client.model.CreateRecommendationTemplateResponse;
import org.openapitools.client.model.CreateResiliencyPolicyRequest;
import org.openapitools.client.model.CreateResiliencyPolicyResponse;
import org.openapitools.client.model.DeleteAppAssessmentRequest;
import org.openapitools.client.model.DeleteAppAssessmentResponse;
import org.openapitools.client.model.DeleteAppInputSourceRequest;
import org.openapitools.client.model.DeleteAppInputSourceResponse;
import org.openapitools.client.model.DeleteAppRequest;
import org.openapitools.client.model.DeleteAppResponse;
import org.openapitools.client.model.DeleteAppVersionAppComponentRequest;
import org.openapitools.client.model.DeleteAppVersionAppComponentResponse;
import org.openapitools.client.model.DeleteAppVersionResourceRequest;
import org.openapitools.client.model.DeleteAppVersionResourceResponse;
import org.openapitools.client.model.DeleteRecommendationTemplateRequest;
import org.openapitools.client.model.DeleteRecommendationTemplateResponse;
import org.openapitools.client.model.DeleteResiliencyPolicyRequest;
import org.openapitools.client.model.DeleteResiliencyPolicyResponse;
import org.openapitools.client.model.DescribeAppAssessmentRequest;
import org.openapitools.client.model.DescribeAppAssessmentResponse;
import org.openapitools.client.model.DescribeAppRequest;
import org.openapitools.client.model.DescribeAppResponse;
import org.openapitools.client.model.DescribeAppVersionAppComponentRequest;
import org.openapitools.client.model.DescribeAppVersionAppComponentResponse;
import org.openapitools.client.model.DescribeAppVersionRequest;
import org.openapitools.client.model.DescribeAppVersionResourceRequest;
import org.openapitools.client.model.DescribeAppVersionResourceResponse;
import org.openapitools.client.model.DescribeAppVersionResourcesResolutionStatusRequest;
import org.openapitools.client.model.DescribeAppVersionResourcesResolutionStatusResponse;
import org.openapitools.client.model.DescribeAppVersionResponse;
import org.openapitools.client.model.DescribeAppVersionTemplateRequest;
import org.openapitools.client.model.DescribeAppVersionTemplateResponse;
import org.openapitools.client.model.DescribeDraftAppVersionResourcesImportStatusResponse;
import org.openapitools.client.model.DescribeResiliencyPolicyRequest;
import org.openapitools.client.model.DescribeResiliencyPolicyResponse;
import org.openapitools.client.model.ImportResourcesToDraftAppVersionRequest;
import org.openapitools.client.model.ImportResourcesToDraftAppVersionResponse;
import org.openapitools.client.model.ListAlarmRecommendationsRequest;
import org.openapitools.client.model.ListAlarmRecommendationsResponse;
import org.openapitools.client.model.ListAppAssessmentComplianceDriftsRequest;
import org.openapitools.client.model.ListAppAssessmentComplianceDriftsResponse;
import org.openapitools.client.model.ListAppAssessmentsResponse;
import org.openapitools.client.model.ListAppComponentCompliancesResponse;
import org.openapitools.client.model.ListAppComponentRecommendationsResponse;
import org.openapitools.client.model.ListAppInputSourcesRequest;
import org.openapitools.client.model.ListAppInputSourcesResponse;
import org.openapitools.client.model.ListAppVersionAppComponentsRequest;
import org.openapitools.client.model.ListAppVersionAppComponentsResponse;
import org.openapitools.client.model.ListAppVersionResourceMappingsRequest;
import org.openapitools.client.model.ListAppVersionResourceMappingsResponse;
import org.openapitools.client.model.ListAppVersionResourcesRequest;
import org.openapitools.client.model.ListAppVersionResourcesResponse;
import org.openapitools.client.model.ListAppVersionsRequest;
import org.openapitools.client.model.ListAppVersionsResponse;
import org.openapitools.client.model.ListAppsResponse;
import org.openapitools.client.model.ListRecommendationTemplatesResponse;
import org.openapitools.client.model.ListResiliencyPoliciesResponse;
import org.openapitools.client.model.ListSopRecommendationsResponse;
import org.openapitools.client.model.ListSuggestedResiliencyPoliciesResponse;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.ListTestRecommendationsResponse;
import org.openapitools.client.model.ListUnsupportedAppVersionResourcesResponse;
import org.openapitools.client.model.PublishAppVersionRequest;
import org.openapitools.client.model.PublishAppVersionResponse;
import org.openapitools.client.model.PutDraftAppVersionTemplateRequest;
import org.openapitools.client.model.PutDraftAppVersionTemplateResponse;
import org.openapitools.client.model.RecommendationTemplateStatus;
import org.openapitools.client.model.RemoveDraftAppVersionResourceMappingsRequest;
import org.openapitools.client.model.RemoveDraftAppVersionResourceMappingsResponse;
import org.openapitools.client.model.ResolveAppVersionResourcesResponse;
import org.openapitools.client.model.StartAppAssessmentRequest;
import org.openapitools.client.model.StartAppAssessmentResponse;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UpdateAppRequest;
import org.openapitools.client.model.UpdateAppResponse;
import org.openapitools.client.model.UpdateAppVersionAppComponentRequest;
import org.openapitools.client.model.UpdateAppVersionAppComponentResponse;
import org.openapitools.client.model.UpdateAppVersionRequest;
import org.openapitools.client.model.UpdateAppVersionResourceRequest;
import org.openapitools.client.model.UpdateAppVersionResourceResponse;
import org.openapitools.client.model.UpdateAppVersionResponse;
import org.openapitools.client.model.UpdateResiliencyPolicyRequest;
import org.openapitools.client.model.UpdateResiliencyPolicyResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Adds the resource mapping for the draft application version. You can also update an existing resource mapping to a new physical resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addDraftAppVersionResourceMappingsTest() throws ApiException {
        AddDraftAppVersionResourceMappingsRequest addDraftAppVersionResourceMappingsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        AddDraftAppVersionResourceMappingsResponse response = api.addDraftAppVersionResourceMappings(addDraftAppVersionResourceMappingsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Enables you to include or exclude one or more operational recommendations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchUpdateRecommendationStatusTest() throws ApiException {
        BatchUpdateRecommendationStatusRequest batchUpdateRecommendationStatusRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        BatchUpdateRecommendationStatusResponse response = api.batchUpdateRecommendationStatus(batchUpdateRecommendationStatusRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates an Resilience Hub application. An Resilience Hub application is a collection of Amazon Web Services resources structured to prevent and recover Amazon Web Services application disruptions. To describe a Resilience Hub application, you provide an application name, resources from one or more CloudFormation stacks, Resource Groups, Terraform state files, AppRegistry applications, and an appropriate resiliency policy. In addition, you can also add resources that are located on Amazon Elastic Kubernetes Service (Amazon EKS) clusters as optional resources. For more information about the number of resources supported per application, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/resiliencehub.html#limits_resiliencehub\&quot;&gt;Service quotas&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;After you create an Resilience Hub application, you publish it so that you can run a resiliency assessment on it. You can then use recommendations from the assessment to improve resiliency by running another assessment, comparing results, and then iterating the process until you achieve your goals for recovery time objective (RTO) and recovery point objective (RPO).&lt;/p&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAppTest() throws ApiException {
        CreateAppRequest createAppRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateAppResponse response = api.createApp(createAppRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Creates a new Application Component in the Resilience Hub application.&lt;/p&gt; &lt;note&gt; &lt;p&gt;This API updates the Resilience Hub application draft version. To use this Application Component for running assessments, you must publish the Resilience Hub application using the &lt;code&gt;PublishAppVersion&lt;/code&gt; API.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAppVersionAppComponentTest() throws ApiException {
        CreateAppVersionAppComponentRequest createAppVersionAppComponentRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateAppVersionAppComponentResponse response = api.createAppVersionAppComponent(createAppVersionAppComponentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Adds a resource to the Resilience Hub application and assigns it to the specified Application Components. If you specify a new Application Component, Resilience Hub will automatically create the Application Component.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;This action has no effect outside Resilience Hub.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;This API updates the Resilience Hub application draft version. To use this resource for running resiliency assessments, you must publish the Resilience Hub application using the &lt;code&gt;PublishAppVersion&lt;/code&gt; API.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;To update application version with new &lt;code&gt;physicalResourceID&lt;/code&gt;, you must call &lt;code&gt;ResolveAppVersionResources&lt;/code&gt; API.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAppVersionResourceTest() throws ApiException {
        CreateAppVersionResourceRequest createAppVersionResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateAppVersionResourceResponse response = api.createAppVersionResource(createAppVersionResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a new recommendation template for the Resilience Hub application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRecommendationTemplateTest() throws ApiException {
        CreateRecommendationTemplateRequest createRecommendationTemplateRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateRecommendationTemplateResponse response = api.createRecommendationTemplate(createRecommendationTemplateRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a resiliency policy for an application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createResiliencyPolicyTest() throws ApiException {
        CreateResiliencyPolicyRequest createResiliencyPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateResiliencyPolicyResponse response = api.createResiliencyPolicy(createResiliencyPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an Resilience Hub application. This is a destructive action that can&#39;t be undone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAppTest() throws ApiException {
        DeleteAppRequest deleteAppRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteAppResponse response = api.deleteApp(deleteAppRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an Resilience Hub application assessment. This is a destructive action that can&#39;t be undone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAppAssessmentTest() throws ApiException {
        DeleteAppAssessmentRequest deleteAppAssessmentRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteAppAssessmentResponse response = api.deleteAppAssessment(deleteAppAssessmentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes the input source and all of its imported resources from the Resilience Hub application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAppInputSourceTest() throws ApiException {
        DeleteAppInputSourceRequest deleteAppInputSourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteAppInputSourceResponse response = api.deleteAppInputSource(deleteAppInputSourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes an Application Component from the Resilience Hub application.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;This API updates the Resilience Hub application draft version. To use this Application Component for running assessments, you must publish the Resilience Hub application using the &lt;code&gt;PublishAppVersion&lt;/code&gt; API.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;You will not be able to delete an Application Component if it has resources associated with it.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAppVersionAppComponentTest() throws ApiException {
        DeleteAppVersionAppComponentRequest deleteAppVersionAppComponentRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteAppVersionAppComponentResponse response = api.deleteAppVersionAppComponent(deleteAppVersionAppComponentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Deletes a resource from the Resilience Hub application.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You can only delete a manually added resource. To exclude non-manually added resources, use the &lt;code&gt;UpdateAppVersionResource&lt;/code&gt; API.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;This action has no effect outside Resilience Hub.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;This API updates the Resilience Hub application draft version. To use this resource for running resiliency assessments, you must publish the Resilience Hub application using the &lt;code&gt;PublishAppVersion&lt;/code&gt; API.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAppVersionResourceTest() throws ApiException {
        DeleteAppVersionResourceRequest deleteAppVersionResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteAppVersionResourceResponse response = api.deleteAppVersionResource(deleteAppVersionResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a recommendation template. This is a destructive action that can&#39;t be undone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRecommendationTemplateTest() throws ApiException {
        DeleteRecommendationTemplateRequest deleteRecommendationTemplateRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteRecommendationTemplateResponse response = api.deleteRecommendationTemplate(deleteRecommendationTemplateRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a resiliency policy. This is a destructive action that can&#39;t be undone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteResiliencyPolicyTest() throws ApiException {
        DeleteResiliencyPolicyRequest deleteResiliencyPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteResiliencyPolicyResponse response = api.deleteResiliencyPolicy(deleteResiliencyPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes an Resilience Hub application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAppTest() throws ApiException {
        DescribeAppRequest describeAppRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAppResponse response = api.describeApp(describeAppRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes an assessment for an Resilience Hub application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAppAssessmentTest() throws ApiException {
        DescribeAppAssessmentRequest describeAppAssessmentRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAppAssessmentResponse response = api.describeAppAssessment(describeAppAssessmentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes the Resilience Hub application version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAppVersionTest() throws ApiException {
        DescribeAppVersionRequest describeAppVersionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAppVersionResponse response = api.describeAppVersion(describeAppVersionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes an Application Component in the Resilience Hub application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAppVersionAppComponentTest() throws ApiException {
        DescribeAppVersionAppComponentRequest describeAppVersionAppComponentRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAppVersionAppComponentResponse response = api.describeAppVersionAppComponent(describeAppVersionAppComponentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Describes a resource of the Resilience Hub application.&lt;/p&gt; &lt;note&gt; &lt;p&gt;This API accepts only one of the following parameters to descibe the resource:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;resourceName&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;logicalResourceId&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;physicalResourceId&lt;/code&gt; (Along with &lt;code&gt;physicalResourceId&lt;/code&gt;, you can also provide &lt;code&gt;awsAccountId&lt;/code&gt;, and &lt;code&gt;awsRegion&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAppVersionResourceTest() throws ApiException {
        DescribeAppVersionResourceRequest describeAppVersionResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAppVersionResourceResponse response = api.describeAppVersionResource(describeAppVersionResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns the resolution status for the specified resolution identifier for an application version. If &lt;code&gt;resolutionId&lt;/code&gt; is not specified, the current resolution status is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAppVersionResourcesResolutionStatusTest() throws ApiException {
        DescribeAppVersionResourcesResolutionStatusRequest describeAppVersionResourcesResolutionStatusRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAppVersionResourcesResolutionStatusResponse response = api.describeAppVersionResourcesResolutionStatus(describeAppVersionResourcesResolutionStatusRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes details about an Resilience Hub application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeAppVersionTemplateTest() throws ApiException {
        DescribeAppVersionTemplateRequest describeAppVersionTemplateRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeAppVersionTemplateResponse response = api.describeAppVersionTemplate(describeAppVersionTemplateRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Describes the status of importing resources to an application version.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If you get a 404 error with &lt;code&gt;ResourceImportStatusNotFoundAppMetadataException&lt;/code&gt;, you must call &lt;code&gt;importResourcesToDraftAppVersion&lt;/code&gt; after creating the application and before calling &lt;code&gt;describeDraftAppVersionResourcesImportStatus&lt;/code&gt; to obtain the status.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDraftAppVersionResourcesImportStatusTest() throws ApiException {
        DescribeAppRequest describeAppRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDraftAppVersionResourcesImportStatusResponse response = api.describeDraftAppVersionResourcesImportStatus(describeAppRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes a specified resiliency policy for an Resilience Hub application. The returned policy object includes creation time, data location constraints, the Amazon Resource Name (ARN) for the policy, tags, tier, and more.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeResiliencyPolicyTest() throws ApiException {
        DescribeResiliencyPolicyRequest describeResiliencyPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeResiliencyPolicyResponse response = api.describeResiliencyPolicy(describeResiliencyPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Imports resources to Resilience Hub application draft version from different input sources. For more information about the input sources supported by Resilience Hub, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/resilience-hub/latest/userguide/discover-structure.html\&quot;&gt;Discover the structure and describe your Resilience Hub application&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void importResourcesToDraftAppVersionTest() throws ApiException {
        ImportResourcesToDraftAppVersionRequest importResourcesToDraftAppVersionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ImportResourcesToDraftAppVersionResponse response = api.importResourcesToDraftAppVersion(importResourcesToDraftAppVersionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists the alarm recommendations for an Resilience Hub application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAlarmRecommendationsTest() throws ApiException {
        ListAlarmRecommendationsRequest listAlarmRecommendationsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListAlarmRecommendationsResponse response = api.listAlarmRecommendations(listAlarmRecommendationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * List of compliance drifts that were detected while running an assessment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppAssessmentComplianceDriftsTest() throws ApiException {
        ListAppAssessmentComplianceDriftsRequest listAppAssessmentComplianceDriftsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListAppAssessmentComplianceDriftsResponse response = api.listAppAssessmentComplianceDrifts(listAppAssessmentComplianceDriftsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists the assessments for an Resilience Hub application. You can use request parameters to refine the results for the response object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppAssessmentsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String appArn = null;
        String assessmentName = null;
        List<AssessmentStatus> assessmentStatus = null;
        String complianceStatus = null;
        String invoker = null;
        Integer maxResults = null;
        String nextToken = null;
        Boolean reverseOrder = null;
        ListAppAssessmentsResponse response = api.listAppAssessments(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, appArn, assessmentName, assessmentStatus, complianceStatus, invoker, maxResults, nextToken, reverseOrder);
        // TODO: test validations
    }

    /**
     * Lists the compliances for an Resilience Hub Application Component.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppComponentCompliancesTest() throws ApiException {
        ListAlarmRecommendationsRequest listAlarmRecommendationsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListAppComponentCompliancesResponse response = api.listAppComponentCompliances(listAlarmRecommendationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists the recommendations for an Resilience Hub Application Component.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppComponentRecommendationsTest() throws ApiException {
        ListAlarmRecommendationsRequest listAlarmRecommendationsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListAppComponentRecommendationsResponse response = api.listAppComponentRecommendations(listAlarmRecommendationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists all the input sources of the Resilience Hub application. For more information about the input sources supported by Resilience Hub, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/resilience-hub/latest/userguide/discover-structure.html\&quot;&gt;Discover the structure and describe your Resilience Hub application&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppInputSourcesTest() throws ApiException {
        ListAppInputSourcesRequest listAppInputSourcesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListAppInputSourcesResponse response = api.listAppInputSources(listAppInputSourcesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists all the Application Components in the Resilience Hub application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppVersionAppComponentsTest() throws ApiException {
        ListAppVersionAppComponentsRequest listAppVersionAppComponentsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListAppVersionAppComponentsResponse response = api.listAppVersionAppComponents(listAppVersionAppComponentsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists how the resources in an application version are mapped/sourced from. Mappings can be physical resource identifiers, CloudFormation stacks, resource-groups, or an application registry app.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppVersionResourceMappingsTest() throws ApiException {
        ListAppVersionResourceMappingsRequest listAppVersionResourceMappingsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListAppVersionResourceMappingsResponse response = api.listAppVersionResourceMappings(listAppVersionResourceMappingsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists all the resources in an Resilience Hub application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppVersionResourcesTest() throws ApiException {
        ListAppVersionResourcesRequest listAppVersionResourcesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListAppVersionResourcesResponse response = api.listAppVersionResources(listAppVersionResourcesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists the different versions for the Resilience Hub applications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppVersionsTest() throws ApiException {
        ListAppVersionsRequest listAppVersionsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListAppVersionsResponse response = api.listAppVersions(listAppVersionsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Lists your Resilience Hub applications.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You can filter applications using only one filter at a time or without using any filter. If you try to filter applications using multiple filters, you will get the following error:&lt;/p&gt; &lt;p&gt; &lt;code&gt;An error occurred (ValidationException) when calling the ListApps operation: Only one filter is supported for this operation.&lt;/code&gt; &lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String appArn = null;
        Integer maxResults = null;
        String name = null;
        String nextToken = null;
        ListAppsResponse response = api.listApps(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, appArn, maxResults, name, nextToken);
        // TODO: test validations
    }

    /**
     * Lists the recommendation templates for the Resilience Hub applications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRecommendationTemplatesTest() throws ApiException {
        String assessmentArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String name = null;
        String nextToken = null;
        String recommendationTemplateArn = null;
        Boolean reverseOrder = null;
        List<RecommendationTemplateStatus> status = null;
        ListRecommendationTemplatesResponse response = api.listRecommendationTemplates(assessmentArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, name, nextToken, recommendationTemplateArn, reverseOrder, status);
        // TODO: test validations
    }

    /**
     * Lists the resiliency policies for the Resilience Hub applications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listResiliencyPoliciesTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String policyName = null;
        ListResiliencyPoliciesResponse response = api.listResiliencyPolicies(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, policyName);
        // TODO: test validations
    }

    /**
     * Lists the standard operating procedure (SOP) recommendations for the Resilience Hub applications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSopRecommendationsTest() throws ApiException {
        ListAlarmRecommendationsRequest listAlarmRecommendationsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListSopRecommendationsResponse response = api.listSopRecommendations(listAlarmRecommendationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists the suggested resiliency policies for the Resilience Hub applications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSuggestedResiliencyPoliciesTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        ListSuggestedResiliencyPoliciesResponse response = api.listSuggestedResiliencyPolicies(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists the tags for your resources in your Resilience Hub applications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        String resourceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(resourceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists the test recommendations for the Resilience Hub application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTestRecommendationsTest() throws ApiException {
        ListAlarmRecommendationsRequest listAlarmRecommendationsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListTestRecommendationsResponse response = api.listTestRecommendations(listAlarmRecommendationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Lists the resources that are not currently supported in Resilience Hub. An unsupported resource is a resource that exists in the object that was used to create an app, but is not supported by Resilience Hub.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listUnsupportedAppVersionResourcesTest() throws ApiException {
        ListAppVersionResourcesRequest listAppVersionResourcesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListUnsupportedAppVersionResourcesResponse response = api.listUnsupportedAppVersionResources(listAppVersionResourcesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Publishes a new version of a specific Resilience Hub application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publishAppVersionTest() throws ApiException {
        PublishAppVersionRequest publishAppVersionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        PublishAppVersionResponse response = api.publishAppVersion(publishAppVersionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Adds or updates the app template for an Resilience Hub application draft version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putDraftAppVersionTemplateTest() throws ApiException {
        PutDraftAppVersionTemplateRequest putDraftAppVersionTemplateRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        PutDraftAppVersionTemplateResponse response = api.putDraftAppVersionTemplate(putDraftAppVersionTemplateRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes resource mappings from a draft application version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeDraftAppVersionResourceMappingsTest() throws ApiException {
        RemoveDraftAppVersionResourceMappingsRequest removeDraftAppVersionResourceMappingsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        RemoveDraftAppVersionResourceMappingsResponse response = api.removeDraftAppVersionResourceMappings(removeDraftAppVersionResourceMappingsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Resolves the resources for an application version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resolveAppVersionResourcesTest() throws ApiException {
        DescribeAppVersionTemplateRequest describeAppVersionTemplateRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ResolveAppVersionResourcesResponse response = api.resolveAppVersionResources(describeAppVersionTemplateRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a new application assessment for an application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startAppAssessmentTest() throws ApiException {
        StartAppAssessmentRequest startAppAssessmentRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StartAppAssessmentResponse response = api.startAppAssessment(startAppAssessmentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Applies one or more tags to a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String resourceArn = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.tagResource(resourceArn, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes one or more tags from a resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String resourceArn = null;
        List<String> tagKeys = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.untagResource(resourceArn, tagKeys, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates an application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAppTest() throws ApiException {
        UpdateAppRequest updateAppRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateAppResponse response = api.updateApp(updateAppRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the Resilience Hub application version.&lt;/p&gt; &lt;note&gt; &lt;p&gt;This API updates the Resilience Hub application draft version. To use this information for running resiliency assessments, you must publish the Resilience Hub application using the &lt;code&gt;PublishAppVersion&lt;/code&gt; API.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAppVersionTest() throws ApiException {
        UpdateAppVersionRequest updateAppVersionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateAppVersionResponse response = api.updateAppVersion(updateAppVersionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates an existing Application Component in the Resilience Hub application.&lt;/p&gt; &lt;note&gt; &lt;p&gt;This API updates the Resilience Hub application draft version. To use this Application Component for running assessments, you must publish the Resilience Hub application using the &lt;code&gt;PublishAppVersion&lt;/code&gt; API.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAppVersionAppComponentTest() throws ApiException {
        UpdateAppVersionAppComponentRequest updateAppVersionAppComponentRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateAppVersionAppComponentResponse response = api.updateAppVersionAppComponent(updateAppVersionAppComponentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Updates the resource details in the Resilience Hub application.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;This action has no effect outside Resilience Hub.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;This API updates the Resilience Hub application draft version. To use this resource for running resiliency assessments, you must publish the Resilience Hub application using the &lt;code&gt;PublishAppVersion&lt;/code&gt; API.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;To update application version with new &lt;code&gt;physicalResourceID&lt;/code&gt;, you must call &lt;code&gt;ResolveAppVersionResources&lt;/code&gt; API.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAppVersionResourceTest() throws ApiException {
        UpdateAppVersionResourceRequest updateAppVersionResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateAppVersionResourceResponse response = api.updateAppVersionResource(updateAppVersionResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a resiliency policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateResiliencyPolicyTest() throws ApiException {
        UpdateResiliencyPolicyRequest updateResiliencyPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateResiliencyPolicyResponse response = api.updateResiliencyPolicy(updateResiliencyPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
