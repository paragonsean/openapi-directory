/*
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.AppAssessmentSummaryCost;
import org.openapitools.client.model.AssessmentInvoker;
import org.openapitools.client.model.AssessmentStatus;
import org.openapitools.client.model.ComplianceStatus;
import org.openapitools.client.model.DriftStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Defines an application assessment summary.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:12.783351-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppAssessmentSummary {
  public static final String SERIALIZED_NAME_APP_ARN = "appArn";
  @SerializedName(SERIALIZED_NAME_APP_ARN)
  private String appArn;

  public static final String SERIALIZED_NAME_APP_VERSION = "appVersion";
  @SerializedName(SERIALIZED_NAME_APP_VERSION)
  private String appVersion;

  public static final String SERIALIZED_NAME_ASSESSMENT_ARN = "assessmentArn";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_ARN)
  private String assessmentArn;

  public static final String SERIALIZED_NAME_ASSESSMENT_NAME = "assessmentName";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_NAME)
  private String assessmentName;

  public static final String SERIALIZED_NAME_ASSESSMENT_STATUS = "assessmentStatus";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_STATUS)
  private AssessmentStatus assessmentStatus;

  public static final String SERIALIZED_NAME_COMPLIANCE_STATUS = "complianceStatus";
  @SerializedName(SERIALIZED_NAME_COMPLIANCE_STATUS)
  private ComplianceStatus complianceStatus;

  public static final String SERIALIZED_NAME_COST = "cost";
  @SerializedName(SERIALIZED_NAME_COST)
  private AppAssessmentSummaryCost cost;

  public static final String SERIALIZED_NAME_DRIFT_STATUS = "driftStatus";
  @SerializedName(SERIALIZED_NAME_DRIFT_STATUS)
  private DriftStatus driftStatus;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_INVOKER = "invoker";
  @SerializedName(SERIALIZED_NAME_INVOKER)
  private AssessmentInvoker invoker;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_RESILIENCY_SCORE = "resiliencyScore";
  @SerializedName(SERIALIZED_NAME_RESILIENCY_SCORE)
  private Double resiliencyScore;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_VERSION_NAME = "versionName";
  @SerializedName(SERIALIZED_NAME_VERSION_NAME)
  private String versionName;

  public AppAssessmentSummary() {
  }

  public AppAssessmentSummary appArn(String appArn) {
    this.appArn = appArn;
    return this;
  }

  /**
   * Get appArn
   * @return appArn
   */
  @javax.annotation.Nullable
  public String getAppArn() {
    return appArn;
  }

  public void setAppArn(String appArn) {
    this.appArn = appArn;
  }


  public AppAssessmentSummary appVersion(String appVersion) {
    this.appVersion = appVersion;
    return this;
  }

  /**
   * Get appVersion
   * @return appVersion
   */
  @javax.annotation.Nullable
  public String getAppVersion() {
    return appVersion;
  }

  public void setAppVersion(String appVersion) {
    this.appVersion = appVersion;
  }


  public AppAssessmentSummary assessmentArn(String assessmentArn) {
    this.assessmentArn = assessmentArn;
    return this;
  }

  /**
   * Get assessmentArn
   * @return assessmentArn
   */
  @javax.annotation.Nonnull
  public String getAssessmentArn() {
    return assessmentArn;
  }

  public void setAssessmentArn(String assessmentArn) {
    this.assessmentArn = assessmentArn;
  }


  public AppAssessmentSummary assessmentName(String assessmentName) {
    this.assessmentName = assessmentName;
    return this;
  }

  /**
   * Get assessmentName
   * @return assessmentName
   */
  @javax.annotation.Nullable
  public String getAssessmentName() {
    return assessmentName;
  }

  public void setAssessmentName(String assessmentName) {
    this.assessmentName = assessmentName;
  }


  public AppAssessmentSummary assessmentStatus(AssessmentStatus assessmentStatus) {
    this.assessmentStatus = assessmentStatus;
    return this;
  }

  /**
   * Get assessmentStatus
   * @return assessmentStatus
   */
  @javax.annotation.Nonnull
  public AssessmentStatus getAssessmentStatus() {
    return assessmentStatus;
  }

  public void setAssessmentStatus(AssessmentStatus assessmentStatus) {
    this.assessmentStatus = assessmentStatus;
  }


  public AppAssessmentSummary complianceStatus(ComplianceStatus complianceStatus) {
    this.complianceStatus = complianceStatus;
    return this;
  }

  /**
   * Get complianceStatus
   * @return complianceStatus
   */
  @javax.annotation.Nullable
  public ComplianceStatus getComplianceStatus() {
    return complianceStatus;
  }

  public void setComplianceStatus(ComplianceStatus complianceStatus) {
    this.complianceStatus = complianceStatus;
  }


  public AppAssessmentSummary cost(AppAssessmentSummaryCost cost) {
    this.cost = cost;
    return this;
  }

  /**
   * Get cost
   * @return cost
   */
  @javax.annotation.Nullable
  public AppAssessmentSummaryCost getCost() {
    return cost;
  }

  public void setCost(AppAssessmentSummaryCost cost) {
    this.cost = cost;
  }


  public AppAssessmentSummary driftStatus(DriftStatus driftStatus) {
    this.driftStatus = driftStatus;
    return this;
  }

  /**
   * Get driftStatus
   * @return driftStatus
   */
  @javax.annotation.Nullable
  public DriftStatus getDriftStatus() {
    return driftStatus;
  }

  public void setDriftStatus(DriftStatus driftStatus) {
    this.driftStatus = driftStatus;
  }


  public AppAssessmentSummary endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public AppAssessmentSummary invoker(AssessmentInvoker invoker) {
    this.invoker = invoker;
    return this;
  }

  /**
   * Get invoker
   * @return invoker
   */
  @javax.annotation.Nullable
  public AssessmentInvoker getInvoker() {
    return invoker;
  }

  public void setInvoker(AssessmentInvoker invoker) {
    this.invoker = invoker;
  }


  public AppAssessmentSummary message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public AppAssessmentSummary resiliencyScore(Double resiliencyScore) {
    this.resiliencyScore = resiliencyScore;
    return this;
  }

  /**
   * Get resiliencyScore
   * @return resiliencyScore
   */
  @javax.annotation.Nullable
  public Double getResiliencyScore() {
    return resiliencyScore;
  }

  public void setResiliencyScore(Double resiliencyScore) {
    this.resiliencyScore = resiliencyScore;
  }


  public AppAssessmentSummary startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public AppAssessmentSummary versionName(String versionName) {
    this.versionName = versionName;
    return this;
  }

  /**
   * Get versionName
   * @return versionName
   */
  @javax.annotation.Nullable
  public String getVersionName() {
    return versionName;
  }

  public void setVersionName(String versionName) {
    this.versionName = versionName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppAssessmentSummary appAssessmentSummary = (AppAssessmentSummary) o;
    return Objects.equals(this.appArn, appAssessmentSummary.appArn) &&
        Objects.equals(this.appVersion, appAssessmentSummary.appVersion) &&
        Objects.equals(this.assessmentArn, appAssessmentSummary.assessmentArn) &&
        Objects.equals(this.assessmentName, appAssessmentSummary.assessmentName) &&
        Objects.equals(this.assessmentStatus, appAssessmentSummary.assessmentStatus) &&
        Objects.equals(this.complianceStatus, appAssessmentSummary.complianceStatus) &&
        Objects.equals(this.cost, appAssessmentSummary.cost) &&
        Objects.equals(this.driftStatus, appAssessmentSummary.driftStatus) &&
        Objects.equals(this.endTime, appAssessmentSummary.endTime) &&
        Objects.equals(this.invoker, appAssessmentSummary.invoker) &&
        Objects.equals(this.message, appAssessmentSummary.message) &&
        Objects.equals(this.resiliencyScore, appAssessmentSummary.resiliencyScore) &&
        Objects.equals(this.startTime, appAssessmentSummary.startTime) &&
        Objects.equals(this.versionName, appAssessmentSummary.versionName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appArn, appVersion, assessmentArn, assessmentName, assessmentStatus, complianceStatus, cost, driftStatus, endTime, invoker, message, resiliencyScore, startTime, versionName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppAssessmentSummary {\n");
    sb.append("    appArn: ").append(toIndentedString(appArn)).append("\n");
    sb.append("    appVersion: ").append(toIndentedString(appVersion)).append("\n");
    sb.append("    assessmentArn: ").append(toIndentedString(assessmentArn)).append("\n");
    sb.append("    assessmentName: ").append(toIndentedString(assessmentName)).append("\n");
    sb.append("    assessmentStatus: ").append(toIndentedString(assessmentStatus)).append("\n");
    sb.append("    complianceStatus: ").append(toIndentedString(complianceStatus)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    driftStatus: ").append(toIndentedString(driftStatus)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    invoker: ").append(toIndentedString(invoker)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    resiliencyScore: ").append(toIndentedString(resiliencyScore)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    versionName: ").append(toIndentedString(versionName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appArn");
    openapiFields.add("appVersion");
    openapiFields.add("assessmentArn");
    openapiFields.add("assessmentName");
    openapiFields.add("assessmentStatus");
    openapiFields.add("complianceStatus");
    openapiFields.add("cost");
    openapiFields.add("driftStatus");
    openapiFields.add("endTime");
    openapiFields.add("invoker");
    openapiFields.add("message");
    openapiFields.add("resiliencyScore");
    openapiFields.add("startTime");
    openapiFields.add("versionName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("assessmentArn");
    openapiRequiredFields.add("assessmentStatus");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppAssessmentSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppAssessmentSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppAssessmentSummary is not found in the empty JSON string", AppAssessmentSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppAssessmentSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppAssessmentSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AppAssessmentSummary.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `appArn`
      if (jsonObj.get("appArn") != null && !jsonObj.get("appArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("appArn"));
      }
      // validate the optional field `appVersion`
      if (jsonObj.get("appVersion") != null && !jsonObj.get("appVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("appVersion"));
      }
      // validate the required field `assessmentArn`
      String.validateJsonElement(jsonObj.get("assessmentArn"));
      // validate the optional field `assessmentName`
      if (jsonObj.get("assessmentName") != null && !jsonObj.get("assessmentName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("assessmentName"));
      }
      // validate the required field `assessmentStatus`
      AssessmentStatus.validateJsonElement(jsonObj.get("assessmentStatus"));
      // validate the optional field `complianceStatus`
      if (jsonObj.get("complianceStatus") != null && !jsonObj.get("complianceStatus").isJsonNull()) {
        ComplianceStatus.validateJsonElement(jsonObj.get("complianceStatus"));
      }
      // validate the optional field `cost`
      if (jsonObj.get("cost") != null && !jsonObj.get("cost").isJsonNull()) {
        AppAssessmentSummaryCost.validateJsonElement(jsonObj.get("cost"));
      }
      // validate the optional field `driftStatus`
      if (jsonObj.get("driftStatus") != null && !jsonObj.get("driftStatus").isJsonNull()) {
        DriftStatus.validateJsonElement(jsonObj.get("driftStatus"));
      }
      // validate the optional field `endTime`
      if (jsonObj.get("endTime") != null && !jsonObj.get("endTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("endTime"));
      }
      // validate the optional field `invoker`
      if (jsonObj.get("invoker") != null && !jsonObj.get("invoker").isJsonNull()) {
        AssessmentInvoker.validateJsonElement(jsonObj.get("invoker"));
      }
      // validate the optional field `message`
      if (jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("message"));
      }
      // validate the optional field `resiliencyScore`
      if (jsonObj.get("resiliencyScore") != null && !jsonObj.get("resiliencyScore").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("resiliencyScore"));
      }
      // validate the optional field `startTime`
      if (jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("startTime"));
      }
      // validate the optional field `versionName`
      if (jsonObj.get("versionName") != null && !jsonObj.get("versionName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("versionName"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppAssessmentSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppAssessmentSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppAssessmentSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppAssessmentSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<AppAssessmentSummary>() {
           @Override
           public void write(JsonWriter out, AppAssessmentSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppAssessmentSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppAssessmentSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppAssessmentSummary
   * @throws IOException if the JSON string is invalid with respect to AppAssessmentSummary
   */
  public static AppAssessmentSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppAssessmentSummary.class);
  }

  /**
   * Convert an instance of AppAssessmentSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

