/*
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateAppVersionAppComponentResponseAppComponent;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DeleteAppVersionAppComponentResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:12.783351-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DeleteAppVersionAppComponentResponse {
  public static final String SERIALIZED_NAME_APP_ARN = "appArn";
  @SerializedName(SERIALIZED_NAME_APP_ARN)
  private String appArn;

  public static final String SERIALIZED_NAME_APP_COMPONENT = "appComponent";
  @SerializedName(SERIALIZED_NAME_APP_COMPONENT)
  private CreateAppVersionAppComponentResponseAppComponent appComponent;

  public static final String SERIALIZED_NAME_APP_VERSION = "appVersion";
  @SerializedName(SERIALIZED_NAME_APP_VERSION)
  private String appVersion;

  public DeleteAppVersionAppComponentResponse() {
  }

  public DeleteAppVersionAppComponentResponse appArn(String appArn) {
    this.appArn = appArn;
    return this;
  }

  /**
   * Get appArn
   * @return appArn
   */
  @javax.annotation.Nonnull
  public String getAppArn() {
    return appArn;
  }

  public void setAppArn(String appArn) {
    this.appArn = appArn;
  }


  public DeleteAppVersionAppComponentResponse appComponent(CreateAppVersionAppComponentResponseAppComponent appComponent) {
    this.appComponent = appComponent;
    return this;
  }

  /**
   * Get appComponent
   * @return appComponent
   */
  @javax.annotation.Nullable
  public CreateAppVersionAppComponentResponseAppComponent getAppComponent() {
    return appComponent;
  }

  public void setAppComponent(CreateAppVersionAppComponentResponseAppComponent appComponent) {
    this.appComponent = appComponent;
  }


  public DeleteAppVersionAppComponentResponse appVersion(String appVersion) {
    this.appVersion = appVersion;
    return this;
  }

  /**
   * Get appVersion
   * @return appVersion
   */
  @javax.annotation.Nonnull
  public String getAppVersion() {
    return appVersion;
  }

  public void setAppVersion(String appVersion) {
    this.appVersion = appVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteAppVersionAppComponentResponse deleteAppVersionAppComponentResponse = (DeleteAppVersionAppComponentResponse) o;
    return Objects.equals(this.appArn, deleteAppVersionAppComponentResponse.appArn) &&
        Objects.equals(this.appComponent, deleteAppVersionAppComponentResponse.appComponent) &&
        Objects.equals(this.appVersion, deleteAppVersionAppComponentResponse.appVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appArn, appComponent, appVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteAppVersionAppComponentResponse {\n");
    sb.append("    appArn: ").append(toIndentedString(appArn)).append("\n");
    sb.append("    appComponent: ").append(toIndentedString(appComponent)).append("\n");
    sb.append("    appVersion: ").append(toIndentedString(appVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appArn");
    openapiFields.add("appComponent");
    openapiFields.add("appVersion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("appArn");
    openapiRequiredFields.add("appVersion");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeleteAppVersionAppComponentResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeleteAppVersionAppComponentResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeleteAppVersionAppComponentResponse is not found in the empty JSON string", DeleteAppVersionAppComponentResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeleteAppVersionAppComponentResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeleteAppVersionAppComponentResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DeleteAppVersionAppComponentResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `appArn`
      String.validateJsonElement(jsonObj.get("appArn"));
      // validate the optional field `appComponent`
      if (jsonObj.get("appComponent") != null && !jsonObj.get("appComponent").isJsonNull()) {
        CreateAppVersionAppComponentResponseAppComponent.validateJsonElement(jsonObj.get("appComponent"));
      }
      // validate the required field `appVersion`
      String.validateJsonElement(jsonObj.get("appVersion"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeleteAppVersionAppComponentResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeleteAppVersionAppComponentResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeleteAppVersionAppComponentResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeleteAppVersionAppComponentResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DeleteAppVersionAppComponentResponse>() {
           @Override
           public void write(JsonWriter out, DeleteAppVersionAppComponentResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeleteAppVersionAppComponentResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeleteAppVersionAppComponentResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeleteAppVersionAppComponentResponse
   * @throws IOException if the JSON string is invalid with respect to DeleteAppVersionAppComponentResponse
   */
  public static DeleteAppVersionAppComponentResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeleteAppVersionAppComponentResponse.class);
  }

  /**
   * Convert an instance of DeleteAppVersionAppComponentResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

