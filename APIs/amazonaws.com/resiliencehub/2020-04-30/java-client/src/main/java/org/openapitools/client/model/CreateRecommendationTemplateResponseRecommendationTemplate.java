/*
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.RecommendationTemplateStatus;
import org.openapitools.client.model.RecommendationTemplateTemplatesLocation;
import org.openapitools.client.model.TemplateFormat;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateRecommendationTemplateResponseRecommendationTemplate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:12.783351-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateRecommendationTemplateResponseRecommendationTemplate {
  public static final String SERIALIZED_NAME_APP_ARN = "appArn";
  @SerializedName(SERIALIZED_NAME_APP_ARN)
  private String appArn;

  public static final String SERIALIZED_NAME_ASSESSMENT_ARN = "assessmentArn";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_ARN)
  private String assessmentArn;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private TemplateFormat format;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NEEDS_REPLACEMENTS = "needsReplacements";
  @SerializedName(SERIALIZED_NAME_NEEDS_REPLACEMENTS)
  private Boolean needsReplacements;

  public static final String SERIALIZED_NAME_RECOMMENDATION_IDS = "recommendationIds";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATION_IDS)
  private List recommendationIds;

  public static final String SERIALIZED_NAME_RECOMMENDATION_TEMPLATE_ARN = "recommendationTemplateArn";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATION_TEMPLATE_ARN)
  private String recommendationTemplateArn;

  public static final String SERIALIZED_NAME_RECOMMENDATION_TYPES = "recommendationTypes";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATION_TYPES)
  private List recommendationTypes;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private RecommendationTemplateStatus status;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_TEMPLATES_LOCATION = "templatesLocation";
  @SerializedName(SERIALIZED_NAME_TEMPLATES_LOCATION)
  private RecommendationTemplateTemplatesLocation templatesLocation;

  public CreateRecommendationTemplateResponseRecommendationTemplate() {
  }

  public CreateRecommendationTemplateResponseRecommendationTemplate appArn(String appArn) {
    this.appArn = appArn;
    return this;
  }

  /**
   * Get appArn
   * @return appArn
   */
  @javax.annotation.Nullable
  public String getAppArn() {
    return appArn;
  }

  public void setAppArn(String appArn) {
    this.appArn = appArn;
  }


  public CreateRecommendationTemplateResponseRecommendationTemplate assessmentArn(String assessmentArn) {
    this.assessmentArn = assessmentArn;
    return this;
  }

  /**
   * Get assessmentArn
   * @return assessmentArn
   */
  @javax.annotation.Nonnull
  public String getAssessmentArn() {
    return assessmentArn;
  }

  public void setAssessmentArn(String assessmentArn) {
    this.assessmentArn = assessmentArn;
  }


  public CreateRecommendationTemplateResponseRecommendationTemplate endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public CreateRecommendationTemplateResponseRecommendationTemplate format(TemplateFormat format) {
    this.format = format;
    return this;
  }

  /**
   * Get format
   * @return format
   */
  @javax.annotation.Nonnull
  public TemplateFormat getFormat() {
    return format;
  }

  public void setFormat(TemplateFormat format) {
    this.format = format;
  }


  public CreateRecommendationTemplateResponseRecommendationTemplate message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public CreateRecommendationTemplateResponseRecommendationTemplate name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateRecommendationTemplateResponseRecommendationTemplate needsReplacements(Boolean needsReplacements) {
    this.needsReplacements = needsReplacements;
    return this;
  }

  /**
   * Get needsReplacements
   * @return needsReplacements
   */
  @javax.annotation.Nullable
  public Boolean getNeedsReplacements() {
    return needsReplacements;
  }

  public void setNeedsReplacements(Boolean needsReplacements) {
    this.needsReplacements = needsReplacements;
  }


  public CreateRecommendationTemplateResponseRecommendationTemplate recommendationIds(List recommendationIds) {
    this.recommendationIds = recommendationIds;
    return this;
  }

  /**
   * Get recommendationIds
   * @return recommendationIds
   */
  @javax.annotation.Nullable
  public List getRecommendationIds() {
    return recommendationIds;
  }

  public void setRecommendationIds(List recommendationIds) {
    this.recommendationIds = recommendationIds;
  }


  public CreateRecommendationTemplateResponseRecommendationTemplate recommendationTemplateArn(String recommendationTemplateArn) {
    this.recommendationTemplateArn = recommendationTemplateArn;
    return this;
  }

  /**
   * Get recommendationTemplateArn
   * @return recommendationTemplateArn
   */
  @javax.annotation.Nonnull
  public String getRecommendationTemplateArn() {
    return recommendationTemplateArn;
  }

  public void setRecommendationTemplateArn(String recommendationTemplateArn) {
    this.recommendationTemplateArn = recommendationTemplateArn;
  }


  public CreateRecommendationTemplateResponseRecommendationTemplate recommendationTypes(List recommendationTypes) {
    this.recommendationTypes = recommendationTypes;
    return this;
  }

  /**
   * Get recommendationTypes
   * @return recommendationTypes
   */
  @javax.annotation.Nonnull
  public List getRecommendationTypes() {
    return recommendationTypes;
  }

  public void setRecommendationTypes(List recommendationTypes) {
    this.recommendationTypes = recommendationTypes;
  }


  public CreateRecommendationTemplateResponseRecommendationTemplate startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public CreateRecommendationTemplateResponseRecommendationTemplate status(RecommendationTemplateStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public RecommendationTemplateStatus getStatus() {
    return status;
  }

  public void setStatus(RecommendationTemplateStatus status) {
    this.status = status;
  }


  public CreateRecommendationTemplateResponseRecommendationTemplate tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public CreateRecommendationTemplateResponseRecommendationTemplate templatesLocation(RecommendationTemplateTemplatesLocation templatesLocation) {
    this.templatesLocation = templatesLocation;
    return this;
  }

  /**
   * Get templatesLocation
   * @return templatesLocation
   */
  @javax.annotation.Nullable
  public RecommendationTemplateTemplatesLocation getTemplatesLocation() {
    return templatesLocation;
  }

  public void setTemplatesLocation(RecommendationTemplateTemplatesLocation templatesLocation) {
    this.templatesLocation = templatesLocation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateRecommendationTemplateResponseRecommendationTemplate createRecommendationTemplateResponseRecommendationTemplate = (CreateRecommendationTemplateResponseRecommendationTemplate) o;
    return Objects.equals(this.appArn, createRecommendationTemplateResponseRecommendationTemplate.appArn) &&
        Objects.equals(this.assessmentArn, createRecommendationTemplateResponseRecommendationTemplate.assessmentArn) &&
        Objects.equals(this.endTime, createRecommendationTemplateResponseRecommendationTemplate.endTime) &&
        Objects.equals(this.format, createRecommendationTemplateResponseRecommendationTemplate.format) &&
        Objects.equals(this.message, createRecommendationTemplateResponseRecommendationTemplate.message) &&
        Objects.equals(this.name, createRecommendationTemplateResponseRecommendationTemplate.name) &&
        Objects.equals(this.needsReplacements, createRecommendationTemplateResponseRecommendationTemplate.needsReplacements) &&
        Objects.equals(this.recommendationIds, createRecommendationTemplateResponseRecommendationTemplate.recommendationIds) &&
        Objects.equals(this.recommendationTemplateArn, createRecommendationTemplateResponseRecommendationTemplate.recommendationTemplateArn) &&
        Objects.equals(this.recommendationTypes, createRecommendationTemplateResponseRecommendationTemplate.recommendationTypes) &&
        Objects.equals(this.startTime, createRecommendationTemplateResponseRecommendationTemplate.startTime) &&
        Objects.equals(this.status, createRecommendationTemplateResponseRecommendationTemplate.status) &&
        Objects.equals(this.tags, createRecommendationTemplateResponseRecommendationTemplate.tags) &&
        Objects.equals(this.templatesLocation, createRecommendationTemplateResponseRecommendationTemplate.templatesLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appArn, assessmentArn, endTime, format, message, name, needsReplacements, recommendationIds, recommendationTemplateArn, recommendationTypes, startTime, status, tags, templatesLocation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateRecommendationTemplateResponseRecommendationTemplate {\n");
    sb.append("    appArn: ").append(toIndentedString(appArn)).append("\n");
    sb.append("    assessmentArn: ").append(toIndentedString(assessmentArn)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    needsReplacements: ").append(toIndentedString(needsReplacements)).append("\n");
    sb.append("    recommendationIds: ").append(toIndentedString(recommendationIds)).append("\n");
    sb.append("    recommendationTemplateArn: ").append(toIndentedString(recommendationTemplateArn)).append("\n");
    sb.append("    recommendationTypes: ").append(toIndentedString(recommendationTypes)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    templatesLocation: ").append(toIndentedString(templatesLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appArn");
    openapiFields.add("assessmentArn");
    openapiFields.add("endTime");
    openapiFields.add("format");
    openapiFields.add("message");
    openapiFields.add("name");
    openapiFields.add("needsReplacements");
    openapiFields.add("recommendationIds");
    openapiFields.add("recommendationTemplateArn");
    openapiFields.add("recommendationTypes");
    openapiFields.add("startTime");
    openapiFields.add("status");
    openapiFields.add("tags");
    openapiFields.add("templatesLocation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("assessmentArn");
    openapiRequiredFields.add("format");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("recommendationTemplateArn");
    openapiRequiredFields.add("recommendationTypes");
    openapiRequiredFields.add("status");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateRecommendationTemplateResponseRecommendationTemplate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateRecommendationTemplateResponseRecommendationTemplate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateRecommendationTemplateResponseRecommendationTemplate is not found in the empty JSON string", CreateRecommendationTemplateResponseRecommendationTemplate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateRecommendationTemplateResponseRecommendationTemplate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateRecommendationTemplateResponseRecommendationTemplate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateRecommendationTemplateResponseRecommendationTemplate.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `appArn`
      if (jsonObj.get("appArn") != null && !jsonObj.get("appArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("appArn"));
      }
      // validate the required field `assessmentArn`
      String.validateJsonElement(jsonObj.get("assessmentArn"));
      // validate the optional field `endTime`
      if (jsonObj.get("endTime") != null && !jsonObj.get("endTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("endTime"));
      }
      // validate the required field `format`
      TemplateFormat.validateJsonElement(jsonObj.get("format"));
      // validate the optional field `message`
      if (jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("message"));
      }
      // validate the required field `name`
      String.validateJsonElement(jsonObj.get("name"));
      // validate the optional field `needsReplacements`
      if (jsonObj.get("needsReplacements") != null && !jsonObj.get("needsReplacements").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("needsReplacements"));
      }
      // validate the optional field `recommendationIds`
      if (jsonObj.get("recommendationIds") != null && !jsonObj.get("recommendationIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("recommendationIds"));
      }
      // validate the required field `recommendationTemplateArn`
      String.validateJsonElement(jsonObj.get("recommendationTemplateArn"));
      // validate the required field `recommendationTypes`
      List.validateJsonElement(jsonObj.get("recommendationTypes"));
      // validate the optional field `startTime`
      if (jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("startTime"));
      }
      // validate the required field `status`
      RecommendationTemplateStatus.validateJsonElement(jsonObj.get("status"));
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `templatesLocation`
      if (jsonObj.get("templatesLocation") != null && !jsonObj.get("templatesLocation").isJsonNull()) {
        RecommendationTemplateTemplatesLocation.validateJsonElement(jsonObj.get("templatesLocation"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateRecommendationTemplateResponseRecommendationTemplate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateRecommendationTemplateResponseRecommendationTemplate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateRecommendationTemplateResponseRecommendationTemplate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateRecommendationTemplateResponseRecommendationTemplate.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateRecommendationTemplateResponseRecommendationTemplate>() {
           @Override
           public void write(JsonWriter out, CreateRecommendationTemplateResponseRecommendationTemplate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateRecommendationTemplateResponseRecommendationTemplate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateRecommendationTemplateResponseRecommendationTemplate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateRecommendationTemplateResponseRecommendationTemplate
   * @throws IOException if the JSON string is invalid with respect to CreateRecommendationTemplateResponseRecommendationTemplate
   */
  public static CreateRecommendationTemplateResponseRecommendationTemplate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateRecommendationTemplateResponseRecommendationTemplate.class);
  }

  /**
   * Convert an instance of CreateRecommendationTemplateResponseRecommendationTemplate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

