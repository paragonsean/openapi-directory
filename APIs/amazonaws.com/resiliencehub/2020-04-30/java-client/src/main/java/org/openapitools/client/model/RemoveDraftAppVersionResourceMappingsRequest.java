/*
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RemoveDraftAppVersionResourceMappingsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:12.783351-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RemoveDraftAppVersionResourceMappingsRequest {
  public static final String SERIALIZED_NAME_APP_ARN = "appArn";
  @SerializedName(SERIALIZED_NAME_APP_ARN)
  private String appArn;

  public static final String SERIALIZED_NAME_APP_REGISTRY_APP_NAMES = "appRegistryAppNames";
  @SerializedName(SERIALIZED_NAME_APP_REGISTRY_APP_NAMES)
  private List<String> appRegistryAppNames = new ArrayList<>();

  public static final String SERIALIZED_NAME_EKS_SOURCE_NAMES = "eksSourceNames";
  @SerializedName(SERIALIZED_NAME_EKS_SOURCE_NAMES)
  private List<String> eksSourceNames = new ArrayList<>();

  public static final String SERIALIZED_NAME_LOGICAL_STACK_NAMES = "logicalStackNames";
  @SerializedName(SERIALIZED_NAME_LOGICAL_STACK_NAMES)
  private List<String> logicalStackNames = new ArrayList<>();

  public static final String SERIALIZED_NAME_RESOURCE_GROUP_NAMES = "resourceGroupNames";
  @SerializedName(SERIALIZED_NAME_RESOURCE_GROUP_NAMES)
  private List<String> resourceGroupNames = new ArrayList<>();

  public static final String SERIALIZED_NAME_RESOURCE_NAMES = "resourceNames";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAMES)
  private List<String> resourceNames = new ArrayList<>();

  public static final String SERIALIZED_NAME_TERRAFORM_SOURCE_NAMES = "terraformSourceNames";
  @SerializedName(SERIALIZED_NAME_TERRAFORM_SOURCE_NAMES)
  private List<String> terraformSourceNames = new ArrayList<>();

  public RemoveDraftAppVersionResourceMappingsRequest() {
  }

  public RemoveDraftAppVersionResourceMappingsRequest appArn(String appArn) {
    this.appArn = appArn;
    return this;
  }

  /**
   * Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:&lt;code&gt;partition&lt;/code&gt;:resiliencehub:&lt;code&gt;region&lt;/code&gt;:&lt;code&gt;account&lt;/code&gt;:app/&lt;code&gt;app-id&lt;/code&gt;. For more information about ARNs, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt; Amazon Resource Names (ARNs)&lt;/a&gt; in the &lt;i&gt;AWS General Reference&lt;/i&gt; guide.
   * @return appArn
   */
  @javax.annotation.Nonnull
  public String getAppArn() {
    return appArn;
  }

  public void setAppArn(String appArn) {
    this.appArn = appArn;
  }


  public RemoveDraftAppVersionResourceMappingsRequest appRegistryAppNames(List<String> appRegistryAppNames) {
    this.appRegistryAppNames = appRegistryAppNames;
    return this;
  }

  public RemoveDraftAppVersionResourceMappingsRequest addAppRegistryAppNamesItem(String appRegistryAppNamesItem) {
    if (this.appRegistryAppNames == null) {
      this.appRegistryAppNames = new ArrayList<>();
    }
    this.appRegistryAppNames.add(appRegistryAppNamesItem);
    return this;
  }

  /**
   * The names of the registered applications you want to remove from the resource mappings.
   * @return appRegistryAppNames
   */
  @javax.annotation.Nullable
  public List<String> getAppRegistryAppNames() {
    return appRegistryAppNames;
  }

  public void setAppRegistryAppNames(List<String> appRegistryAppNames) {
    this.appRegistryAppNames = appRegistryAppNames;
  }


  public RemoveDraftAppVersionResourceMappingsRequest eksSourceNames(List<String> eksSourceNames) {
    this.eksSourceNames = eksSourceNames;
    return this;
  }

  public RemoveDraftAppVersionResourceMappingsRequest addEksSourceNamesItem(String eksSourceNamesItem) {
    if (this.eksSourceNames == null) {
      this.eksSourceNames = new ArrayList<>();
    }
    this.eksSourceNames.add(eksSourceNamesItem);
    return this;
  }

  /**
   * &lt;p&gt;The names of the Amazon Elastic Kubernetes Service clusters and namespaces you want to remove from the resource mappings.&lt;/p&gt; &lt;note&gt; &lt;p&gt;This parameter accepts values in \&quot;eks-cluster/namespace\&quot; format.&lt;/p&gt; &lt;/note&gt;
   * @return eksSourceNames
   */
  @javax.annotation.Nullable
  public List<String> getEksSourceNames() {
    return eksSourceNames;
  }

  public void setEksSourceNames(List<String> eksSourceNames) {
    this.eksSourceNames = eksSourceNames;
  }


  public RemoveDraftAppVersionResourceMappingsRequest logicalStackNames(List<String> logicalStackNames) {
    this.logicalStackNames = logicalStackNames;
    return this;
  }

  public RemoveDraftAppVersionResourceMappingsRequest addLogicalStackNamesItem(String logicalStackNamesItem) {
    if (this.logicalStackNames == null) {
      this.logicalStackNames = new ArrayList<>();
    }
    this.logicalStackNames.add(logicalStackNamesItem);
    return this;
  }

  /**
   * The names of the CloudFormation stacks you want to remove from the resource mappings.
   * @return logicalStackNames
   */
  @javax.annotation.Nullable
  public List<String> getLogicalStackNames() {
    return logicalStackNames;
  }

  public void setLogicalStackNames(List<String> logicalStackNames) {
    this.logicalStackNames = logicalStackNames;
  }


  public RemoveDraftAppVersionResourceMappingsRequest resourceGroupNames(List<String> resourceGroupNames) {
    this.resourceGroupNames = resourceGroupNames;
    return this;
  }

  public RemoveDraftAppVersionResourceMappingsRequest addResourceGroupNamesItem(String resourceGroupNamesItem) {
    if (this.resourceGroupNames == null) {
      this.resourceGroupNames = new ArrayList<>();
    }
    this.resourceGroupNames.add(resourceGroupNamesItem);
    return this;
  }

  /**
   * The names of the resource groups you want to remove from the resource mappings.
   * @return resourceGroupNames
   */
  @javax.annotation.Nullable
  public List<String> getResourceGroupNames() {
    return resourceGroupNames;
  }

  public void setResourceGroupNames(List<String> resourceGroupNames) {
    this.resourceGroupNames = resourceGroupNames;
  }


  public RemoveDraftAppVersionResourceMappingsRequest resourceNames(List<String> resourceNames) {
    this.resourceNames = resourceNames;
    return this;
  }

  public RemoveDraftAppVersionResourceMappingsRequest addResourceNamesItem(String resourceNamesItem) {
    if (this.resourceNames == null) {
      this.resourceNames = new ArrayList<>();
    }
    this.resourceNames.add(resourceNamesItem);
    return this;
  }

  /**
   * The names of the resources you want to remove from the resource mappings.
   * @return resourceNames
   */
  @javax.annotation.Nullable
  public List<String> getResourceNames() {
    return resourceNames;
  }

  public void setResourceNames(List<String> resourceNames) {
    this.resourceNames = resourceNames;
  }


  public RemoveDraftAppVersionResourceMappingsRequest terraformSourceNames(List<String> terraformSourceNames) {
    this.terraformSourceNames = terraformSourceNames;
    return this;
  }

  public RemoveDraftAppVersionResourceMappingsRequest addTerraformSourceNamesItem(String terraformSourceNamesItem) {
    if (this.terraformSourceNames == null) {
      this.terraformSourceNames = new ArrayList<>();
    }
    this.terraformSourceNames.add(terraformSourceNamesItem);
    return this;
  }

  /**
   * The names of the Terraform sources you want to remove from the resource mappings.
   * @return terraformSourceNames
   */
  @javax.annotation.Nullable
  public List<String> getTerraformSourceNames() {
    return terraformSourceNames;
  }

  public void setTerraformSourceNames(List<String> terraformSourceNames) {
    this.terraformSourceNames = terraformSourceNames;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoveDraftAppVersionResourceMappingsRequest removeDraftAppVersionResourceMappingsRequest = (RemoveDraftAppVersionResourceMappingsRequest) o;
    return Objects.equals(this.appArn, removeDraftAppVersionResourceMappingsRequest.appArn) &&
        Objects.equals(this.appRegistryAppNames, removeDraftAppVersionResourceMappingsRequest.appRegistryAppNames) &&
        Objects.equals(this.eksSourceNames, removeDraftAppVersionResourceMappingsRequest.eksSourceNames) &&
        Objects.equals(this.logicalStackNames, removeDraftAppVersionResourceMappingsRequest.logicalStackNames) &&
        Objects.equals(this.resourceGroupNames, removeDraftAppVersionResourceMappingsRequest.resourceGroupNames) &&
        Objects.equals(this.resourceNames, removeDraftAppVersionResourceMappingsRequest.resourceNames) &&
        Objects.equals(this.terraformSourceNames, removeDraftAppVersionResourceMappingsRequest.terraformSourceNames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appArn, appRegistryAppNames, eksSourceNames, logicalStackNames, resourceGroupNames, resourceNames, terraformSourceNames);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoveDraftAppVersionResourceMappingsRequest {\n");
    sb.append("    appArn: ").append(toIndentedString(appArn)).append("\n");
    sb.append("    appRegistryAppNames: ").append(toIndentedString(appRegistryAppNames)).append("\n");
    sb.append("    eksSourceNames: ").append(toIndentedString(eksSourceNames)).append("\n");
    sb.append("    logicalStackNames: ").append(toIndentedString(logicalStackNames)).append("\n");
    sb.append("    resourceGroupNames: ").append(toIndentedString(resourceGroupNames)).append("\n");
    sb.append("    resourceNames: ").append(toIndentedString(resourceNames)).append("\n");
    sb.append("    terraformSourceNames: ").append(toIndentedString(terraformSourceNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appArn");
    openapiFields.add("appRegistryAppNames");
    openapiFields.add("eksSourceNames");
    openapiFields.add("logicalStackNames");
    openapiFields.add("resourceGroupNames");
    openapiFields.add("resourceNames");
    openapiFields.add("terraformSourceNames");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("appArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RemoveDraftAppVersionResourceMappingsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RemoveDraftAppVersionResourceMappingsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RemoveDraftAppVersionResourceMappingsRequest is not found in the empty JSON string", RemoveDraftAppVersionResourceMappingsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RemoveDraftAppVersionResourceMappingsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RemoveDraftAppVersionResourceMappingsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RemoveDraftAppVersionResourceMappingsRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("appArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appArn").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("appRegistryAppNames") != null && !jsonObj.get("appRegistryAppNames").isJsonNull() && !jsonObj.get("appRegistryAppNames").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `appRegistryAppNames` to be an array in the JSON string but got `%s`", jsonObj.get("appRegistryAppNames").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("eksSourceNames") != null && !jsonObj.get("eksSourceNames").isJsonNull() && !jsonObj.get("eksSourceNames").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `eksSourceNames` to be an array in the JSON string but got `%s`", jsonObj.get("eksSourceNames").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("logicalStackNames") != null && !jsonObj.get("logicalStackNames").isJsonNull() && !jsonObj.get("logicalStackNames").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `logicalStackNames` to be an array in the JSON string but got `%s`", jsonObj.get("logicalStackNames").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("resourceGroupNames") != null && !jsonObj.get("resourceGroupNames").isJsonNull() && !jsonObj.get("resourceGroupNames").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceGroupNames` to be an array in the JSON string but got `%s`", jsonObj.get("resourceGroupNames").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("resourceNames") != null && !jsonObj.get("resourceNames").isJsonNull() && !jsonObj.get("resourceNames").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceNames` to be an array in the JSON string but got `%s`", jsonObj.get("resourceNames").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("terraformSourceNames") != null && !jsonObj.get("terraformSourceNames").isJsonNull() && !jsonObj.get("terraformSourceNames").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `terraformSourceNames` to be an array in the JSON string but got `%s`", jsonObj.get("terraformSourceNames").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RemoveDraftAppVersionResourceMappingsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RemoveDraftAppVersionResourceMappingsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RemoveDraftAppVersionResourceMappingsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RemoveDraftAppVersionResourceMappingsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<RemoveDraftAppVersionResourceMappingsRequest>() {
           @Override
           public void write(JsonWriter out, RemoveDraftAppVersionResourceMappingsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RemoveDraftAppVersionResourceMappingsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RemoveDraftAppVersionResourceMappingsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RemoveDraftAppVersionResourceMappingsRequest
   * @throws IOException if the JSON string is invalid with respect to RemoveDraftAppVersionResourceMappingsRequest
   */
  public static RemoveDraftAppVersionResourceMappingsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RemoveDraftAppVersionResourceMappingsRequest.class);
  }

  /**
   * Convert an instance of RemoveDraftAppVersionResourceMappingsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

