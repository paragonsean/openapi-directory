/*
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ComplianceStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Defines a disruption compliance recommendation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:12.783351-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RecommendationDisruptionCompliance {
  public static final String SERIALIZED_NAME_EXPECTED_COMPLIANCE_STATUS = "expectedComplianceStatus";
  @SerializedName(SERIALIZED_NAME_EXPECTED_COMPLIANCE_STATUS)
  private ComplianceStatus expectedComplianceStatus;

  public static final String SERIALIZED_NAME_EXPECTED_RPO_DESCRIPTION = "expectedRpoDescription";
  @SerializedName(SERIALIZED_NAME_EXPECTED_RPO_DESCRIPTION)
  private String expectedRpoDescription;

  public static final String SERIALIZED_NAME_EXPECTED_RPO_IN_SECS = "expectedRpoInSecs";
  @SerializedName(SERIALIZED_NAME_EXPECTED_RPO_IN_SECS)
  private Integer expectedRpoInSecs;

  public static final String SERIALIZED_NAME_EXPECTED_RTO_DESCRIPTION = "expectedRtoDescription";
  @SerializedName(SERIALIZED_NAME_EXPECTED_RTO_DESCRIPTION)
  private String expectedRtoDescription;

  public static final String SERIALIZED_NAME_EXPECTED_RTO_IN_SECS = "expectedRtoInSecs";
  @SerializedName(SERIALIZED_NAME_EXPECTED_RTO_IN_SECS)
  private Integer expectedRtoInSecs;

  public RecommendationDisruptionCompliance() {
  }

  public RecommendationDisruptionCompliance expectedComplianceStatus(ComplianceStatus expectedComplianceStatus) {
    this.expectedComplianceStatus = expectedComplianceStatus;
    return this;
  }

  /**
   * Get expectedComplianceStatus
   * @return expectedComplianceStatus
   */
  @javax.annotation.Nonnull
  public ComplianceStatus getExpectedComplianceStatus() {
    return expectedComplianceStatus;
  }

  public void setExpectedComplianceStatus(ComplianceStatus expectedComplianceStatus) {
    this.expectedComplianceStatus = expectedComplianceStatus;
  }


  public RecommendationDisruptionCompliance expectedRpoDescription(String expectedRpoDescription) {
    this.expectedRpoDescription = expectedRpoDescription;
    return this;
  }

  /**
   * Get expectedRpoDescription
   * @return expectedRpoDescription
   */
  @javax.annotation.Nullable
  public String getExpectedRpoDescription() {
    return expectedRpoDescription;
  }

  public void setExpectedRpoDescription(String expectedRpoDescription) {
    this.expectedRpoDescription = expectedRpoDescription;
  }


  public RecommendationDisruptionCompliance expectedRpoInSecs(Integer expectedRpoInSecs) {
    this.expectedRpoInSecs = expectedRpoInSecs;
    return this;
  }

  /**
   * Get expectedRpoInSecs
   * @return expectedRpoInSecs
   */
  @javax.annotation.Nullable
  public Integer getExpectedRpoInSecs() {
    return expectedRpoInSecs;
  }

  public void setExpectedRpoInSecs(Integer expectedRpoInSecs) {
    this.expectedRpoInSecs = expectedRpoInSecs;
  }


  public RecommendationDisruptionCompliance expectedRtoDescription(String expectedRtoDescription) {
    this.expectedRtoDescription = expectedRtoDescription;
    return this;
  }

  /**
   * Get expectedRtoDescription
   * @return expectedRtoDescription
   */
  @javax.annotation.Nullable
  public String getExpectedRtoDescription() {
    return expectedRtoDescription;
  }

  public void setExpectedRtoDescription(String expectedRtoDescription) {
    this.expectedRtoDescription = expectedRtoDescription;
  }


  public RecommendationDisruptionCompliance expectedRtoInSecs(Integer expectedRtoInSecs) {
    this.expectedRtoInSecs = expectedRtoInSecs;
    return this;
  }

  /**
   * Get expectedRtoInSecs
   * @return expectedRtoInSecs
   */
  @javax.annotation.Nullable
  public Integer getExpectedRtoInSecs() {
    return expectedRtoInSecs;
  }

  public void setExpectedRtoInSecs(Integer expectedRtoInSecs) {
    this.expectedRtoInSecs = expectedRtoInSecs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecommendationDisruptionCompliance recommendationDisruptionCompliance = (RecommendationDisruptionCompliance) o;
    return Objects.equals(this.expectedComplianceStatus, recommendationDisruptionCompliance.expectedComplianceStatus) &&
        Objects.equals(this.expectedRpoDescription, recommendationDisruptionCompliance.expectedRpoDescription) &&
        Objects.equals(this.expectedRpoInSecs, recommendationDisruptionCompliance.expectedRpoInSecs) &&
        Objects.equals(this.expectedRtoDescription, recommendationDisruptionCompliance.expectedRtoDescription) &&
        Objects.equals(this.expectedRtoInSecs, recommendationDisruptionCompliance.expectedRtoInSecs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expectedComplianceStatus, expectedRpoDescription, expectedRpoInSecs, expectedRtoDescription, expectedRtoInSecs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecommendationDisruptionCompliance {\n");
    sb.append("    expectedComplianceStatus: ").append(toIndentedString(expectedComplianceStatus)).append("\n");
    sb.append("    expectedRpoDescription: ").append(toIndentedString(expectedRpoDescription)).append("\n");
    sb.append("    expectedRpoInSecs: ").append(toIndentedString(expectedRpoInSecs)).append("\n");
    sb.append("    expectedRtoDescription: ").append(toIndentedString(expectedRtoDescription)).append("\n");
    sb.append("    expectedRtoInSecs: ").append(toIndentedString(expectedRtoInSecs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("expectedComplianceStatus");
    openapiFields.add("expectedRpoDescription");
    openapiFields.add("expectedRpoInSecs");
    openapiFields.add("expectedRtoDescription");
    openapiFields.add("expectedRtoInSecs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("expectedComplianceStatus");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RecommendationDisruptionCompliance
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RecommendationDisruptionCompliance.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RecommendationDisruptionCompliance is not found in the empty JSON string", RecommendationDisruptionCompliance.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RecommendationDisruptionCompliance.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RecommendationDisruptionCompliance` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RecommendationDisruptionCompliance.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `expectedComplianceStatus`
      ComplianceStatus.validateJsonElement(jsonObj.get("expectedComplianceStatus"));
      // validate the optional field `expectedRpoDescription`
      if (jsonObj.get("expectedRpoDescription") != null && !jsonObj.get("expectedRpoDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("expectedRpoDescription"));
      }
      // validate the optional field `expectedRpoInSecs`
      if (jsonObj.get("expectedRpoInSecs") != null && !jsonObj.get("expectedRpoInSecs").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("expectedRpoInSecs"));
      }
      // validate the optional field `expectedRtoDescription`
      if (jsonObj.get("expectedRtoDescription") != null && !jsonObj.get("expectedRtoDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("expectedRtoDescription"));
      }
      // validate the optional field `expectedRtoInSecs`
      if (jsonObj.get("expectedRtoInSecs") != null && !jsonObj.get("expectedRtoInSecs").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("expectedRtoInSecs"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RecommendationDisruptionCompliance.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RecommendationDisruptionCompliance' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RecommendationDisruptionCompliance> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RecommendationDisruptionCompliance.class));

       return (TypeAdapter<T>) new TypeAdapter<RecommendationDisruptionCompliance>() {
           @Override
           public void write(JsonWriter out, RecommendationDisruptionCompliance value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RecommendationDisruptionCompliance read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RecommendationDisruptionCompliance given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RecommendationDisruptionCompliance
   * @throws IOException if the JSON string is invalid with respect to RecommendationDisruptionCompliance
   */
  public static RecommendationDisruptionCompliance fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RecommendationDisruptionCompliance.class);
  }

  /**
   * Convert an instance of RecommendationDisruptionCompliance to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

