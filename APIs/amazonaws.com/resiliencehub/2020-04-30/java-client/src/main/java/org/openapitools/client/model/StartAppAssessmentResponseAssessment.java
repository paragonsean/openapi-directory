/*
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.AppAssessmentCost;
import org.openapitools.client.model.AppAssessmentPolicy;
import org.openapitools.client.model.AppAssessmentResiliencyScore;
import org.openapitools.client.model.AppAssessmentResourceErrorsDetails;
import org.openapitools.client.model.AssessmentInvoker;
import org.openapitools.client.model.AssessmentStatus;
import org.openapitools.client.model.ComplianceStatus;
import org.openapitools.client.model.DriftStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StartAppAssessmentResponseAssessment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:12.783351-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StartAppAssessmentResponseAssessment {
  public static final String SERIALIZED_NAME_APP_ARN = "appArn";
  @SerializedName(SERIALIZED_NAME_APP_ARN)
  private String appArn;

  public static final String SERIALIZED_NAME_APP_VERSION = "appVersion";
  @SerializedName(SERIALIZED_NAME_APP_VERSION)
  private String appVersion;

  public static final String SERIALIZED_NAME_ASSESSMENT_ARN = "assessmentArn";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_ARN)
  private String assessmentArn;

  public static final String SERIALIZED_NAME_ASSESSMENT_NAME = "assessmentName";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_NAME)
  private String assessmentName;

  public static final String SERIALIZED_NAME_ASSESSMENT_STATUS = "assessmentStatus";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_STATUS)
  private AssessmentStatus assessmentStatus;

  public static final String SERIALIZED_NAME_COMPLIANCE = "compliance";
  @SerializedName(SERIALIZED_NAME_COMPLIANCE)
  private Map compliance;

  public static final String SERIALIZED_NAME_COMPLIANCE_STATUS = "complianceStatus";
  @SerializedName(SERIALIZED_NAME_COMPLIANCE_STATUS)
  private ComplianceStatus complianceStatus;

  public static final String SERIALIZED_NAME_COST = "cost";
  @SerializedName(SERIALIZED_NAME_COST)
  private AppAssessmentCost cost;

  public static final String SERIALIZED_NAME_DRIFT_STATUS = "driftStatus";
  @SerializedName(SERIALIZED_NAME_DRIFT_STATUS)
  private DriftStatus driftStatus;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_INVOKER = "invoker";
  @SerializedName(SERIALIZED_NAME_INVOKER)
  private AssessmentInvoker invoker;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_POLICY = "policy";
  @SerializedName(SERIALIZED_NAME_POLICY)
  private AppAssessmentPolicy policy;

  public static final String SERIALIZED_NAME_RESILIENCY_SCORE = "resiliencyScore";
  @SerializedName(SERIALIZED_NAME_RESILIENCY_SCORE)
  private AppAssessmentResiliencyScore resiliencyScore;

  public static final String SERIALIZED_NAME_RESOURCE_ERRORS_DETAILS = "resourceErrorsDetails";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ERRORS_DETAILS)
  private AppAssessmentResourceErrorsDetails resourceErrorsDetails;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_VERSION_NAME = "versionName";
  @SerializedName(SERIALIZED_NAME_VERSION_NAME)
  private String versionName;

  public StartAppAssessmentResponseAssessment() {
  }

  public StartAppAssessmentResponseAssessment appArn(String appArn) {
    this.appArn = appArn;
    return this;
  }

  /**
   * Get appArn
   * @return appArn
   */
  @javax.annotation.Nullable
  public String getAppArn() {
    return appArn;
  }

  public void setAppArn(String appArn) {
    this.appArn = appArn;
  }


  public StartAppAssessmentResponseAssessment appVersion(String appVersion) {
    this.appVersion = appVersion;
    return this;
  }

  /**
   * Get appVersion
   * @return appVersion
   */
  @javax.annotation.Nullable
  public String getAppVersion() {
    return appVersion;
  }

  public void setAppVersion(String appVersion) {
    this.appVersion = appVersion;
  }


  public StartAppAssessmentResponseAssessment assessmentArn(String assessmentArn) {
    this.assessmentArn = assessmentArn;
    return this;
  }

  /**
   * Get assessmentArn
   * @return assessmentArn
   */
  @javax.annotation.Nonnull
  public String getAssessmentArn() {
    return assessmentArn;
  }

  public void setAssessmentArn(String assessmentArn) {
    this.assessmentArn = assessmentArn;
  }


  public StartAppAssessmentResponseAssessment assessmentName(String assessmentName) {
    this.assessmentName = assessmentName;
    return this;
  }

  /**
   * Get assessmentName
   * @return assessmentName
   */
  @javax.annotation.Nullable
  public String getAssessmentName() {
    return assessmentName;
  }

  public void setAssessmentName(String assessmentName) {
    this.assessmentName = assessmentName;
  }


  public StartAppAssessmentResponseAssessment assessmentStatus(AssessmentStatus assessmentStatus) {
    this.assessmentStatus = assessmentStatus;
    return this;
  }

  /**
   * Get assessmentStatus
   * @return assessmentStatus
   */
  @javax.annotation.Nonnull
  public AssessmentStatus getAssessmentStatus() {
    return assessmentStatus;
  }

  public void setAssessmentStatus(AssessmentStatus assessmentStatus) {
    this.assessmentStatus = assessmentStatus;
  }


  public StartAppAssessmentResponseAssessment compliance(Map compliance) {
    this.compliance = compliance;
    return this;
  }

  /**
   * Get compliance
   * @return compliance
   */
  @javax.annotation.Nullable
  public Map getCompliance() {
    return compliance;
  }

  public void setCompliance(Map compliance) {
    this.compliance = compliance;
  }


  public StartAppAssessmentResponseAssessment complianceStatus(ComplianceStatus complianceStatus) {
    this.complianceStatus = complianceStatus;
    return this;
  }

  /**
   * Get complianceStatus
   * @return complianceStatus
   */
  @javax.annotation.Nullable
  public ComplianceStatus getComplianceStatus() {
    return complianceStatus;
  }

  public void setComplianceStatus(ComplianceStatus complianceStatus) {
    this.complianceStatus = complianceStatus;
  }


  public StartAppAssessmentResponseAssessment cost(AppAssessmentCost cost) {
    this.cost = cost;
    return this;
  }

  /**
   * Get cost
   * @return cost
   */
  @javax.annotation.Nullable
  public AppAssessmentCost getCost() {
    return cost;
  }

  public void setCost(AppAssessmentCost cost) {
    this.cost = cost;
  }


  public StartAppAssessmentResponseAssessment driftStatus(DriftStatus driftStatus) {
    this.driftStatus = driftStatus;
    return this;
  }

  /**
   * Get driftStatus
   * @return driftStatus
   */
  @javax.annotation.Nullable
  public DriftStatus getDriftStatus() {
    return driftStatus;
  }

  public void setDriftStatus(DriftStatus driftStatus) {
    this.driftStatus = driftStatus;
  }


  public StartAppAssessmentResponseAssessment endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public StartAppAssessmentResponseAssessment invoker(AssessmentInvoker invoker) {
    this.invoker = invoker;
    return this;
  }

  /**
   * Get invoker
   * @return invoker
   */
  @javax.annotation.Nonnull
  public AssessmentInvoker getInvoker() {
    return invoker;
  }

  public void setInvoker(AssessmentInvoker invoker) {
    this.invoker = invoker;
  }


  public StartAppAssessmentResponseAssessment message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public StartAppAssessmentResponseAssessment policy(AppAssessmentPolicy policy) {
    this.policy = policy;
    return this;
  }

  /**
   * Get policy
   * @return policy
   */
  @javax.annotation.Nullable
  public AppAssessmentPolicy getPolicy() {
    return policy;
  }

  public void setPolicy(AppAssessmentPolicy policy) {
    this.policy = policy;
  }


  public StartAppAssessmentResponseAssessment resiliencyScore(AppAssessmentResiliencyScore resiliencyScore) {
    this.resiliencyScore = resiliencyScore;
    return this;
  }

  /**
   * Get resiliencyScore
   * @return resiliencyScore
   */
  @javax.annotation.Nullable
  public AppAssessmentResiliencyScore getResiliencyScore() {
    return resiliencyScore;
  }

  public void setResiliencyScore(AppAssessmentResiliencyScore resiliencyScore) {
    this.resiliencyScore = resiliencyScore;
  }


  public StartAppAssessmentResponseAssessment resourceErrorsDetails(AppAssessmentResourceErrorsDetails resourceErrorsDetails) {
    this.resourceErrorsDetails = resourceErrorsDetails;
    return this;
  }

  /**
   * Get resourceErrorsDetails
   * @return resourceErrorsDetails
   */
  @javax.annotation.Nullable
  public AppAssessmentResourceErrorsDetails getResourceErrorsDetails() {
    return resourceErrorsDetails;
  }

  public void setResourceErrorsDetails(AppAssessmentResourceErrorsDetails resourceErrorsDetails) {
    this.resourceErrorsDetails = resourceErrorsDetails;
  }


  public StartAppAssessmentResponseAssessment startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public StartAppAssessmentResponseAssessment tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public StartAppAssessmentResponseAssessment versionName(String versionName) {
    this.versionName = versionName;
    return this;
  }

  /**
   * Get versionName
   * @return versionName
   */
  @javax.annotation.Nullable
  public String getVersionName() {
    return versionName;
  }

  public void setVersionName(String versionName) {
    this.versionName = versionName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartAppAssessmentResponseAssessment startAppAssessmentResponseAssessment = (StartAppAssessmentResponseAssessment) o;
    return Objects.equals(this.appArn, startAppAssessmentResponseAssessment.appArn) &&
        Objects.equals(this.appVersion, startAppAssessmentResponseAssessment.appVersion) &&
        Objects.equals(this.assessmentArn, startAppAssessmentResponseAssessment.assessmentArn) &&
        Objects.equals(this.assessmentName, startAppAssessmentResponseAssessment.assessmentName) &&
        Objects.equals(this.assessmentStatus, startAppAssessmentResponseAssessment.assessmentStatus) &&
        Objects.equals(this.compliance, startAppAssessmentResponseAssessment.compliance) &&
        Objects.equals(this.complianceStatus, startAppAssessmentResponseAssessment.complianceStatus) &&
        Objects.equals(this.cost, startAppAssessmentResponseAssessment.cost) &&
        Objects.equals(this.driftStatus, startAppAssessmentResponseAssessment.driftStatus) &&
        Objects.equals(this.endTime, startAppAssessmentResponseAssessment.endTime) &&
        Objects.equals(this.invoker, startAppAssessmentResponseAssessment.invoker) &&
        Objects.equals(this.message, startAppAssessmentResponseAssessment.message) &&
        Objects.equals(this.policy, startAppAssessmentResponseAssessment.policy) &&
        Objects.equals(this.resiliencyScore, startAppAssessmentResponseAssessment.resiliencyScore) &&
        Objects.equals(this.resourceErrorsDetails, startAppAssessmentResponseAssessment.resourceErrorsDetails) &&
        Objects.equals(this.startTime, startAppAssessmentResponseAssessment.startTime) &&
        Objects.equals(this.tags, startAppAssessmentResponseAssessment.tags) &&
        Objects.equals(this.versionName, startAppAssessmentResponseAssessment.versionName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appArn, appVersion, assessmentArn, assessmentName, assessmentStatus, compliance, complianceStatus, cost, driftStatus, endTime, invoker, message, policy, resiliencyScore, resourceErrorsDetails, startTime, tags, versionName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartAppAssessmentResponseAssessment {\n");
    sb.append("    appArn: ").append(toIndentedString(appArn)).append("\n");
    sb.append("    appVersion: ").append(toIndentedString(appVersion)).append("\n");
    sb.append("    assessmentArn: ").append(toIndentedString(assessmentArn)).append("\n");
    sb.append("    assessmentName: ").append(toIndentedString(assessmentName)).append("\n");
    sb.append("    assessmentStatus: ").append(toIndentedString(assessmentStatus)).append("\n");
    sb.append("    compliance: ").append(toIndentedString(compliance)).append("\n");
    sb.append("    complianceStatus: ").append(toIndentedString(complianceStatus)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    driftStatus: ").append(toIndentedString(driftStatus)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    invoker: ").append(toIndentedString(invoker)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("    resiliencyScore: ").append(toIndentedString(resiliencyScore)).append("\n");
    sb.append("    resourceErrorsDetails: ").append(toIndentedString(resourceErrorsDetails)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    versionName: ").append(toIndentedString(versionName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appArn");
    openapiFields.add("appVersion");
    openapiFields.add("assessmentArn");
    openapiFields.add("assessmentName");
    openapiFields.add("assessmentStatus");
    openapiFields.add("compliance");
    openapiFields.add("complianceStatus");
    openapiFields.add("cost");
    openapiFields.add("driftStatus");
    openapiFields.add("endTime");
    openapiFields.add("invoker");
    openapiFields.add("message");
    openapiFields.add("policy");
    openapiFields.add("resiliencyScore");
    openapiFields.add("resourceErrorsDetails");
    openapiFields.add("startTime");
    openapiFields.add("tags");
    openapiFields.add("versionName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("assessmentArn");
    openapiRequiredFields.add("assessmentStatus");
    openapiRequiredFields.add("invoker");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartAppAssessmentResponseAssessment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartAppAssessmentResponseAssessment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartAppAssessmentResponseAssessment is not found in the empty JSON string", StartAppAssessmentResponseAssessment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartAppAssessmentResponseAssessment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartAppAssessmentResponseAssessment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StartAppAssessmentResponseAssessment.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `appArn`
      if (jsonObj.get("appArn") != null && !jsonObj.get("appArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("appArn"));
      }
      // validate the optional field `appVersion`
      if (jsonObj.get("appVersion") != null && !jsonObj.get("appVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("appVersion"));
      }
      // validate the required field `assessmentArn`
      String.validateJsonElement(jsonObj.get("assessmentArn"));
      // validate the optional field `assessmentName`
      if (jsonObj.get("assessmentName") != null && !jsonObj.get("assessmentName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("assessmentName"));
      }
      // validate the required field `assessmentStatus`
      AssessmentStatus.validateJsonElement(jsonObj.get("assessmentStatus"));
      // validate the optional field `compliance`
      if (jsonObj.get("compliance") != null && !jsonObj.get("compliance").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("compliance"));
      }
      // validate the optional field `complianceStatus`
      if (jsonObj.get("complianceStatus") != null && !jsonObj.get("complianceStatus").isJsonNull()) {
        ComplianceStatus.validateJsonElement(jsonObj.get("complianceStatus"));
      }
      // validate the optional field `cost`
      if (jsonObj.get("cost") != null && !jsonObj.get("cost").isJsonNull()) {
        AppAssessmentCost.validateJsonElement(jsonObj.get("cost"));
      }
      // validate the optional field `driftStatus`
      if (jsonObj.get("driftStatus") != null && !jsonObj.get("driftStatus").isJsonNull()) {
        DriftStatus.validateJsonElement(jsonObj.get("driftStatus"));
      }
      // validate the optional field `endTime`
      if (jsonObj.get("endTime") != null && !jsonObj.get("endTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("endTime"));
      }
      // validate the required field `invoker`
      AssessmentInvoker.validateJsonElement(jsonObj.get("invoker"));
      // validate the optional field `message`
      if (jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("message"));
      }
      // validate the optional field `policy`
      if (jsonObj.get("policy") != null && !jsonObj.get("policy").isJsonNull()) {
        AppAssessmentPolicy.validateJsonElement(jsonObj.get("policy"));
      }
      // validate the optional field `resiliencyScore`
      if (jsonObj.get("resiliencyScore") != null && !jsonObj.get("resiliencyScore").isJsonNull()) {
        AppAssessmentResiliencyScore.validateJsonElement(jsonObj.get("resiliencyScore"));
      }
      // validate the optional field `resourceErrorsDetails`
      if (jsonObj.get("resourceErrorsDetails") != null && !jsonObj.get("resourceErrorsDetails").isJsonNull()) {
        AppAssessmentResourceErrorsDetails.validateJsonElement(jsonObj.get("resourceErrorsDetails"));
      }
      // validate the optional field `startTime`
      if (jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("startTime"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `versionName`
      if (jsonObj.get("versionName") != null && !jsonObj.get("versionName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("versionName"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartAppAssessmentResponseAssessment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartAppAssessmentResponseAssessment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartAppAssessmentResponseAssessment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartAppAssessmentResponseAssessment.class));

       return (TypeAdapter<T>) new TypeAdapter<StartAppAssessmentResponseAssessment>() {
           @Override
           public void write(JsonWriter out, StartAppAssessmentResponseAssessment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartAppAssessmentResponseAssessment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartAppAssessmentResponseAssessment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartAppAssessmentResponseAssessment
   * @throws IOException if the JSON string is invalid with respect to StartAppAssessmentResponseAssessment
   */
  public static StartAppAssessmentResponseAssessment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartAppAssessmentResponseAssessment.class);
  }

  /**
   * Convert an instance of StartAppAssessmentResponseAssessment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

