/*
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AppAssessmentScheduleType;
import org.openapitools.client.model.AppComplianceStatusType;
import org.openapitools.client.model.AppDriftStatusType;
import org.openapitools.client.model.AppPermissionModel;
import org.openapitools.client.model.AppStatusType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeAppResponseApp
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:12.783351-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeAppResponseApp {
  public static final String SERIALIZED_NAME_APP_ARN = "appArn";
  @SerializedName(SERIALIZED_NAME_APP_ARN)
  private String appArn;

  public static final String SERIALIZED_NAME_ASSESSMENT_SCHEDULE = "assessmentSchedule";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_SCHEDULE)
  private AppAssessmentScheduleType assessmentSchedule;

  public static final String SERIALIZED_NAME_COMPLIANCE_STATUS = "complianceStatus";
  @SerializedName(SERIALIZED_NAME_COMPLIANCE_STATUS)
  private AppComplianceStatusType complianceStatus;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DRIFT_STATUS = "driftStatus";
  @SerializedName(SERIALIZED_NAME_DRIFT_STATUS)
  private AppDriftStatusType driftStatus;

  public static final String SERIALIZED_NAME_EVENT_SUBSCRIPTIONS = "eventSubscriptions";
  @SerializedName(SERIALIZED_NAME_EVENT_SUBSCRIPTIONS)
  private List eventSubscriptions;

  public static final String SERIALIZED_NAME_LAST_APP_COMPLIANCE_EVALUATION_TIME = "lastAppComplianceEvaluationTime";
  @SerializedName(SERIALIZED_NAME_LAST_APP_COMPLIANCE_EVALUATION_TIME)
  private OffsetDateTime lastAppComplianceEvaluationTime;

  public static final String SERIALIZED_NAME_LAST_DRIFT_EVALUATION_TIME = "lastDriftEvaluationTime";
  @SerializedName(SERIALIZED_NAME_LAST_DRIFT_EVALUATION_TIME)
  private OffsetDateTime lastDriftEvaluationTime;

  public static final String SERIALIZED_NAME_LAST_RESILIENCY_SCORE_EVALUATION_TIME = "lastResiliencyScoreEvaluationTime";
  @SerializedName(SERIALIZED_NAME_LAST_RESILIENCY_SCORE_EVALUATION_TIME)
  private OffsetDateTime lastResiliencyScoreEvaluationTime;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PERMISSION_MODEL = "permissionModel";
  @SerializedName(SERIALIZED_NAME_PERMISSION_MODEL)
  private AppPermissionModel permissionModel;

  public static final String SERIALIZED_NAME_POLICY_ARN = "policyArn";
  @SerializedName(SERIALIZED_NAME_POLICY_ARN)
  private String policyArn;

  public static final String SERIALIZED_NAME_RESILIENCY_SCORE = "resiliencyScore";
  @SerializedName(SERIALIZED_NAME_RESILIENCY_SCORE)
  private Double resiliencyScore;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private AppStatusType status;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public DescribeAppResponseApp() {
  }

  public DescribeAppResponseApp appArn(String appArn) {
    this.appArn = appArn;
    return this;
  }

  /**
   * Get appArn
   * @return appArn
   */
  @javax.annotation.Nonnull
  public String getAppArn() {
    return appArn;
  }

  public void setAppArn(String appArn) {
    this.appArn = appArn;
  }


  public DescribeAppResponseApp assessmentSchedule(AppAssessmentScheduleType assessmentSchedule) {
    this.assessmentSchedule = assessmentSchedule;
    return this;
  }

  /**
   * Get assessmentSchedule
   * @return assessmentSchedule
   */
  @javax.annotation.Nullable
  public AppAssessmentScheduleType getAssessmentSchedule() {
    return assessmentSchedule;
  }

  public void setAssessmentSchedule(AppAssessmentScheduleType assessmentSchedule) {
    this.assessmentSchedule = assessmentSchedule;
  }


  public DescribeAppResponseApp complianceStatus(AppComplianceStatusType complianceStatus) {
    this.complianceStatus = complianceStatus;
    return this;
  }

  /**
   * Get complianceStatus
   * @return complianceStatus
   */
  @javax.annotation.Nullable
  public AppComplianceStatusType getComplianceStatus() {
    return complianceStatus;
  }

  public void setComplianceStatus(AppComplianceStatusType complianceStatus) {
    this.complianceStatus = complianceStatus;
  }


  public DescribeAppResponseApp creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeAppResponseApp description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public DescribeAppResponseApp driftStatus(AppDriftStatusType driftStatus) {
    this.driftStatus = driftStatus;
    return this;
  }

  /**
   * Get driftStatus
   * @return driftStatus
   */
  @javax.annotation.Nullable
  public AppDriftStatusType getDriftStatus() {
    return driftStatus;
  }

  public void setDriftStatus(AppDriftStatusType driftStatus) {
    this.driftStatus = driftStatus;
  }


  public DescribeAppResponseApp eventSubscriptions(List eventSubscriptions) {
    this.eventSubscriptions = eventSubscriptions;
    return this;
  }

  /**
   * Get eventSubscriptions
   * @return eventSubscriptions
   */
  @javax.annotation.Nullable
  public List getEventSubscriptions() {
    return eventSubscriptions;
  }

  public void setEventSubscriptions(List eventSubscriptions) {
    this.eventSubscriptions = eventSubscriptions;
  }


  public DescribeAppResponseApp lastAppComplianceEvaluationTime(OffsetDateTime lastAppComplianceEvaluationTime) {
    this.lastAppComplianceEvaluationTime = lastAppComplianceEvaluationTime;
    return this;
  }

  /**
   * Get lastAppComplianceEvaluationTime
   * @return lastAppComplianceEvaluationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastAppComplianceEvaluationTime() {
    return lastAppComplianceEvaluationTime;
  }

  public void setLastAppComplianceEvaluationTime(OffsetDateTime lastAppComplianceEvaluationTime) {
    this.lastAppComplianceEvaluationTime = lastAppComplianceEvaluationTime;
  }


  public DescribeAppResponseApp lastDriftEvaluationTime(OffsetDateTime lastDriftEvaluationTime) {
    this.lastDriftEvaluationTime = lastDriftEvaluationTime;
    return this;
  }

  /**
   * Get lastDriftEvaluationTime
   * @return lastDriftEvaluationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastDriftEvaluationTime() {
    return lastDriftEvaluationTime;
  }

  public void setLastDriftEvaluationTime(OffsetDateTime lastDriftEvaluationTime) {
    this.lastDriftEvaluationTime = lastDriftEvaluationTime;
  }


  public DescribeAppResponseApp lastResiliencyScoreEvaluationTime(OffsetDateTime lastResiliencyScoreEvaluationTime) {
    this.lastResiliencyScoreEvaluationTime = lastResiliencyScoreEvaluationTime;
    return this;
  }

  /**
   * Get lastResiliencyScoreEvaluationTime
   * @return lastResiliencyScoreEvaluationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastResiliencyScoreEvaluationTime() {
    return lastResiliencyScoreEvaluationTime;
  }

  public void setLastResiliencyScoreEvaluationTime(OffsetDateTime lastResiliencyScoreEvaluationTime) {
    this.lastResiliencyScoreEvaluationTime = lastResiliencyScoreEvaluationTime;
  }


  public DescribeAppResponseApp name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public DescribeAppResponseApp permissionModel(AppPermissionModel permissionModel) {
    this.permissionModel = permissionModel;
    return this;
  }

  /**
   * Get permissionModel
   * @return permissionModel
   */
  @javax.annotation.Nullable
  public AppPermissionModel getPermissionModel() {
    return permissionModel;
  }

  public void setPermissionModel(AppPermissionModel permissionModel) {
    this.permissionModel = permissionModel;
  }


  public DescribeAppResponseApp policyArn(String policyArn) {
    this.policyArn = policyArn;
    return this;
  }

  /**
   * Get policyArn
   * @return policyArn
   */
  @javax.annotation.Nullable
  public String getPolicyArn() {
    return policyArn;
  }

  public void setPolicyArn(String policyArn) {
    this.policyArn = policyArn;
  }


  public DescribeAppResponseApp resiliencyScore(Double resiliencyScore) {
    this.resiliencyScore = resiliencyScore;
    return this;
  }

  /**
   * Get resiliencyScore
   * @return resiliencyScore
   */
  @javax.annotation.Nullable
  public Double getResiliencyScore() {
    return resiliencyScore;
  }

  public void setResiliencyScore(Double resiliencyScore) {
    this.resiliencyScore = resiliencyScore;
  }


  public DescribeAppResponseApp status(AppStatusType status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public AppStatusType getStatus() {
    return status;
  }

  public void setStatus(AppStatusType status) {
    this.status = status;
  }


  public DescribeAppResponseApp tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeAppResponseApp describeAppResponseApp = (DescribeAppResponseApp) o;
    return Objects.equals(this.appArn, describeAppResponseApp.appArn) &&
        Objects.equals(this.assessmentSchedule, describeAppResponseApp.assessmentSchedule) &&
        Objects.equals(this.complianceStatus, describeAppResponseApp.complianceStatus) &&
        Objects.equals(this.creationTime, describeAppResponseApp.creationTime) &&
        Objects.equals(this.description, describeAppResponseApp.description) &&
        Objects.equals(this.driftStatus, describeAppResponseApp.driftStatus) &&
        Objects.equals(this.eventSubscriptions, describeAppResponseApp.eventSubscriptions) &&
        Objects.equals(this.lastAppComplianceEvaluationTime, describeAppResponseApp.lastAppComplianceEvaluationTime) &&
        Objects.equals(this.lastDriftEvaluationTime, describeAppResponseApp.lastDriftEvaluationTime) &&
        Objects.equals(this.lastResiliencyScoreEvaluationTime, describeAppResponseApp.lastResiliencyScoreEvaluationTime) &&
        Objects.equals(this.name, describeAppResponseApp.name) &&
        Objects.equals(this.permissionModel, describeAppResponseApp.permissionModel) &&
        Objects.equals(this.policyArn, describeAppResponseApp.policyArn) &&
        Objects.equals(this.resiliencyScore, describeAppResponseApp.resiliencyScore) &&
        Objects.equals(this.status, describeAppResponseApp.status) &&
        Objects.equals(this.tags, describeAppResponseApp.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appArn, assessmentSchedule, complianceStatus, creationTime, description, driftStatus, eventSubscriptions, lastAppComplianceEvaluationTime, lastDriftEvaluationTime, lastResiliencyScoreEvaluationTime, name, permissionModel, policyArn, resiliencyScore, status, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeAppResponseApp {\n");
    sb.append("    appArn: ").append(toIndentedString(appArn)).append("\n");
    sb.append("    assessmentSchedule: ").append(toIndentedString(assessmentSchedule)).append("\n");
    sb.append("    complianceStatus: ").append(toIndentedString(complianceStatus)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    driftStatus: ").append(toIndentedString(driftStatus)).append("\n");
    sb.append("    eventSubscriptions: ").append(toIndentedString(eventSubscriptions)).append("\n");
    sb.append("    lastAppComplianceEvaluationTime: ").append(toIndentedString(lastAppComplianceEvaluationTime)).append("\n");
    sb.append("    lastDriftEvaluationTime: ").append(toIndentedString(lastDriftEvaluationTime)).append("\n");
    sb.append("    lastResiliencyScoreEvaluationTime: ").append(toIndentedString(lastResiliencyScoreEvaluationTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    permissionModel: ").append(toIndentedString(permissionModel)).append("\n");
    sb.append("    policyArn: ").append(toIndentedString(policyArn)).append("\n");
    sb.append("    resiliencyScore: ").append(toIndentedString(resiliencyScore)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appArn");
    openapiFields.add("assessmentSchedule");
    openapiFields.add("complianceStatus");
    openapiFields.add("creationTime");
    openapiFields.add("description");
    openapiFields.add("driftStatus");
    openapiFields.add("eventSubscriptions");
    openapiFields.add("lastAppComplianceEvaluationTime");
    openapiFields.add("lastDriftEvaluationTime");
    openapiFields.add("lastResiliencyScoreEvaluationTime");
    openapiFields.add("name");
    openapiFields.add("permissionModel");
    openapiFields.add("policyArn");
    openapiFields.add("resiliencyScore");
    openapiFields.add("status");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("appArn");
    openapiRequiredFields.add("creationTime");
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeAppResponseApp
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeAppResponseApp.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeAppResponseApp is not found in the empty JSON string", DescribeAppResponseApp.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeAppResponseApp.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeAppResponseApp` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeAppResponseApp.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `appArn`
      String.validateJsonElement(jsonObj.get("appArn"));
      // validate the optional field `assessmentSchedule`
      if (jsonObj.get("assessmentSchedule") != null && !jsonObj.get("assessmentSchedule").isJsonNull()) {
        AppAssessmentScheduleType.validateJsonElement(jsonObj.get("assessmentSchedule"));
      }
      // validate the optional field `complianceStatus`
      if (jsonObj.get("complianceStatus") != null && !jsonObj.get("complianceStatus").isJsonNull()) {
        AppComplianceStatusType.validateJsonElement(jsonObj.get("complianceStatus"));
      }
      // validate the required field `creationTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("creationTime"));
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `driftStatus`
      if (jsonObj.get("driftStatus") != null && !jsonObj.get("driftStatus").isJsonNull()) {
        AppDriftStatusType.validateJsonElement(jsonObj.get("driftStatus"));
      }
      // validate the optional field `eventSubscriptions`
      if (jsonObj.get("eventSubscriptions") != null && !jsonObj.get("eventSubscriptions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("eventSubscriptions"));
      }
      // validate the optional field `lastAppComplianceEvaluationTime`
      if (jsonObj.get("lastAppComplianceEvaluationTime") != null && !jsonObj.get("lastAppComplianceEvaluationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastAppComplianceEvaluationTime"));
      }
      // validate the optional field `lastDriftEvaluationTime`
      if (jsonObj.get("lastDriftEvaluationTime") != null && !jsonObj.get("lastDriftEvaluationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastDriftEvaluationTime"));
      }
      // validate the optional field `lastResiliencyScoreEvaluationTime`
      if (jsonObj.get("lastResiliencyScoreEvaluationTime") != null && !jsonObj.get("lastResiliencyScoreEvaluationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastResiliencyScoreEvaluationTime"));
      }
      // validate the required field `name`
      String.validateJsonElement(jsonObj.get("name"));
      // validate the optional field `permissionModel`
      if (jsonObj.get("permissionModel") != null && !jsonObj.get("permissionModel").isJsonNull()) {
        AppPermissionModel.validateJsonElement(jsonObj.get("permissionModel"));
      }
      // validate the optional field `policyArn`
      if (jsonObj.get("policyArn") != null && !jsonObj.get("policyArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("policyArn"));
      }
      // validate the optional field `resiliencyScore`
      if (jsonObj.get("resiliencyScore") != null && !jsonObj.get("resiliencyScore").isJsonNull()) {
        Double.validateJsonElement(jsonObj.get("resiliencyScore"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        AppStatusType.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeAppResponseApp.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeAppResponseApp' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeAppResponseApp> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeAppResponseApp.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeAppResponseApp>() {
           @Override
           public void write(JsonWriter out, DescribeAppResponseApp value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeAppResponseApp read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeAppResponseApp given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeAppResponseApp
   * @throws IOException if the JSON string is invalid with respect to DescribeAppResponseApp
   */
  public static DescribeAppResponseApp fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeAppResponseApp.class);
  }

  /**
   * Convert an instance of DescribeAppResponseApp to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

