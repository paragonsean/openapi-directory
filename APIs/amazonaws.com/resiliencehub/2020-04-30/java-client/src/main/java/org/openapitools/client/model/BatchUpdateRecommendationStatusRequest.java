/*
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.UpdateRecommendationStatusRequestEntry;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BatchUpdateRecommendationStatusRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:12.783351-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BatchUpdateRecommendationStatusRequest {
  public static final String SERIALIZED_NAME_APP_ARN = "appArn";
  @SerializedName(SERIALIZED_NAME_APP_ARN)
  private String appArn;

  public static final String SERIALIZED_NAME_REQUEST_ENTRIES = "requestEntries";
  @SerializedName(SERIALIZED_NAME_REQUEST_ENTRIES)
  private List<UpdateRecommendationStatusRequestEntry> requestEntries = new ArrayList<>();

  public BatchUpdateRecommendationStatusRequest() {
  }

  public BatchUpdateRecommendationStatusRequest appArn(String appArn) {
    this.appArn = appArn;
    return this;
  }

  /**
   * Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:&lt;code&gt;partition&lt;/code&gt;:resiliencehub:&lt;code&gt;region&lt;/code&gt;:&lt;code&gt;account&lt;/code&gt;:app/&lt;code&gt;app-id&lt;/code&gt;. For more information about ARNs, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt; Amazon Resource Names (ARNs)&lt;/a&gt; in the &lt;i&gt;AWS General Reference&lt;/i&gt; guide.
   * @return appArn
   */
  @javax.annotation.Nonnull
  public String getAppArn() {
    return appArn;
  }

  public void setAppArn(String appArn) {
    this.appArn = appArn;
  }


  public BatchUpdateRecommendationStatusRequest requestEntries(List<UpdateRecommendationStatusRequestEntry> requestEntries) {
    this.requestEntries = requestEntries;
    return this;
  }

  public BatchUpdateRecommendationStatusRequest addRequestEntriesItem(UpdateRecommendationStatusRequestEntry requestEntriesItem) {
    if (this.requestEntries == null) {
      this.requestEntries = new ArrayList<>();
    }
    this.requestEntries.add(requestEntriesItem);
    return this;
  }

  /**
   * Defines the list of operational recommendations that need to be included or excluded.
   * @return requestEntries
   */
  @javax.annotation.Nonnull
  public List<UpdateRecommendationStatusRequestEntry> getRequestEntries() {
    return requestEntries;
  }

  public void setRequestEntries(List<UpdateRecommendationStatusRequestEntry> requestEntries) {
    this.requestEntries = requestEntries;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchUpdateRecommendationStatusRequest batchUpdateRecommendationStatusRequest = (BatchUpdateRecommendationStatusRequest) o;
    return Objects.equals(this.appArn, batchUpdateRecommendationStatusRequest.appArn) &&
        Objects.equals(this.requestEntries, batchUpdateRecommendationStatusRequest.requestEntries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appArn, requestEntries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchUpdateRecommendationStatusRequest {\n");
    sb.append("    appArn: ").append(toIndentedString(appArn)).append("\n");
    sb.append("    requestEntries: ").append(toIndentedString(requestEntries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appArn");
    openapiFields.add("requestEntries");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("appArn");
    openapiRequiredFields.add("requestEntries");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BatchUpdateRecommendationStatusRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BatchUpdateRecommendationStatusRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BatchUpdateRecommendationStatusRequest is not found in the empty JSON string", BatchUpdateRecommendationStatusRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BatchUpdateRecommendationStatusRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BatchUpdateRecommendationStatusRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BatchUpdateRecommendationStatusRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("appArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appArn").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("requestEntries").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestEntries` to be an array in the JSON string but got `%s`", jsonObj.get("requestEntries").toString()));
      }

      JsonArray jsonArrayrequestEntries = jsonObj.getAsJsonArray("requestEntries");
      // validate the required field `requestEntries` (array)
      for (int i = 0; i < jsonArrayrequestEntries.size(); i++) {
        UpdateRecommendationStatusRequestEntry.validateJsonElement(jsonArrayrequestEntries.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BatchUpdateRecommendationStatusRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BatchUpdateRecommendationStatusRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BatchUpdateRecommendationStatusRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BatchUpdateRecommendationStatusRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<BatchUpdateRecommendationStatusRequest>() {
           @Override
           public void write(JsonWriter out, BatchUpdateRecommendationStatusRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BatchUpdateRecommendationStatusRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BatchUpdateRecommendationStatusRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BatchUpdateRecommendationStatusRequest
   * @throws IOException if the JSON string is invalid with respect to BatchUpdateRecommendationStatusRequest
   */
  public static BatchUpdateRecommendationStatusRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BatchUpdateRecommendationStatusRequest.class);
  }

  /**
   * Convert an instance of BatchUpdateRecommendationStatusRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

