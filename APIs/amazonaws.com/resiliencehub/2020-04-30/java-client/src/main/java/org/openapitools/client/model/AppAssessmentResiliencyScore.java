/*
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AppAssessmentResiliencyScore
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:12.783351-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AppAssessmentResiliencyScore {
  public static final String SERIALIZED_NAME_DISRUPTION_SCORE = "disruptionScore";
  @SerializedName(SERIALIZED_NAME_DISRUPTION_SCORE)
  private Map disruptionScore;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Double score;

  public AppAssessmentResiliencyScore() {
  }

  public AppAssessmentResiliencyScore disruptionScore(Map disruptionScore) {
    this.disruptionScore = disruptionScore;
    return this;
  }

  /**
   * Get disruptionScore
   * @return disruptionScore
   */
  @javax.annotation.Nonnull
  public Map getDisruptionScore() {
    return disruptionScore;
  }

  public void setDisruptionScore(Map disruptionScore) {
    this.disruptionScore = disruptionScore;
  }


  public AppAssessmentResiliencyScore score(Double score) {
    this.score = score;
    return this;
  }

  /**
   * Get score
   * @return score
   */
  @javax.annotation.Nonnull
  public Double getScore() {
    return score;
  }

  public void setScore(Double score) {
    this.score = score;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppAssessmentResiliencyScore appAssessmentResiliencyScore = (AppAssessmentResiliencyScore) o;
    return Objects.equals(this.disruptionScore, appAssessmentResiliencyScore.disruptionScore) &&
        Objects.equals(this.score, appAssessmentResiliencyScore.score);
  }

  @Override
  public int hashCode() {
    return Objects.hash(disruptionScore, score);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppAssessmentResiliencyScore {\n");
    sb.append("    disruptionScore: ").append(toIndentedString(disruptionScore)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("disruptionScore");
    openapiFields.add("score");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("disruptionScore");
    openapiRequiredFields.add("score");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AppAssessmentResiliencyScore
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppAssessmentResiliencyScore.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppAssessmentResiliencyScore is not found in the empty JSON string", AppAssessmentResiliencyScore.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AppAssessmentResiliencyScore.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppAssessmentResiliencyScore` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AppAssessmentResiliencyScore.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `disruptionScore`
      Map.validateJsonElement(jsonObj.get("disruptionScore"));
      // validate the required field `score`
      Double.validateJsonElement(jsonObj.get("score"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppAssessmentResiliencyScore.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppAssessmentResiliencyScore' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppAssessmentResiliencyScore> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppAssessmentResiliencyScore.class));

       return (TypeAdapter<T>) new TypeAdapter<AppAssessmentResiliencyScore>() {
           @Override
           public void write(JsonWriter out, AppAssessmentResiliencyScore value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppAssessmentResiliencyScore read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AppAssessmentResiliencyScore given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AppAssessmentResiliencyScore
   * @throws IOException if the JSON string is invalid with respect to AppAssessmentResiliencyScore
   */
  public static AppAssessmentResiliencyScore fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppAssessmentResiliencyScore.class);
  }

  /**
   * Convert an instance of AppAssessmentResiliencyScore to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

