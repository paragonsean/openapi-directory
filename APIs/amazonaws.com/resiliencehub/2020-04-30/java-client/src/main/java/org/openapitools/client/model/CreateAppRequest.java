/*
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CreateAppRequestPermissionModel;
import org.openapitools.client.model.EventSubscription;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateAppRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:12.783351-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateAppRequest {
  /**
   *  Assessment execution schedule with &#39;Daily&#39; or &#39;Disabled&#39; values. 
   */
  @JsonAdapter(AssessmentScheduleEnum.Adapter.class)
  public enum AssessmentScheduleEnum {
    DISABLED("Disabled"),
    
    DAILY("Daily");

    private String value;

    AssessmentScheduleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AssessmentScheduleEnum fromValue(String value) {
      for (AssessmentScheduleEnum b : AssessmentScheduleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AssessmentScheduleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AssessmentScheduleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AssessmentScheduleEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AssessmentScheduleEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AssessmentScheduleEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ASSESSMENT_SCHEDULE = "assessmentSchedule";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_SCHEDULE)
  private AssessmentScheduleEnum assessmentSchedule;

  public static final String SERIALIZED_NAME_CLIENT_TOKEN = "clientToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOKEN)
  private String clientToken;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EVENT_SUBSCRIPTIONS = "eventSubscriptions";
  @SerializedName(SERIALIZED_NAME_EVENT_SUBSCRIPTIONS)
  private List<EventSubscription> eventSubscriptions = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PERMISSION_MODEL = "permissionModel";
  @SerializedName(SERIALIZED_NAME_PERMISSION_MODEL)
  private CreateAppRequestPermissionModel permissionModel;

  public static final String SERIALIZED_NAME_POLICY_ARN = "policyArn";
  @SerializedName(SERIALIZED_NAME_POLICY_ARN)
  private String policyArn;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = new HashMap<>();

  public CreateAppRequest() {
  }

  public CreateAppRequest assessmentSchedule(AssessmentScheduleEnum assessmentSchedule) {
    this.assessmentSchedule = assessmentSchedule;
    return this;
  }

  /**
   *  Assessment execution schedule with &#39;Daily&#39; or &#39;Disabled&#39; values. 
   * @return assessmentSchedule
   */
  @javax.annotation.Nullable
  public AssessmentScheduleEnum getAssessmentSchedule() {
    return assessmentSchedule;
  }

  public void setAssessmentSchedule(AssessmentScheduleEnum assessmentSchedule) {
    this.assessmentSchedule = assessmentSchedule;
  }


  public CreateAppRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

  /**
   * Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. You should not reuse the same client token for other API requests.
   * @return clientToken
   */
  @javax.annotation.Nullable
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }


  public CreateAppRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The optional description for an app.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateAppRequest eventSubscriptions(List<EventSubscription> eventSubscriptions) {
    this.eventSubscriptions = eventSubscriptions;
    return this;
  }

  public CreateAppRequest addEventSubscriptionsItem(EventSubscription eventSubscriptionsItem) {
    if (this.eventSubscriptions == null) {
      this.eventSubscriptions = new ArrayList<>();
    }
    this.eventSubscriptions.add(eventSubscriptionsItem);
    return this;
  }

  /**
   * The list of events you would like to subscribe and get notification for. Currently, Resilience Hub supports only &lt;b&gt;Drift detected&lt;/b&gt; and &lt;b&gt;Scheduled assessment failure&lt;/b&gt; events notification.
   * @return eventSubscriptions
   */
  @javax.annotation.Nullable
  public List<EventSubscription> getEventSubscriptions() {
    return eventSubscriptions;
  }

  public void setEventSubscriptions(List<EventSubscription> eventSubscriptions) {
    this.eventSubscriptions = eventSubscriptions;
  }


  public CreateAppRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the application.
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateAppRequest permissionModel(CreateAppRequestPermissionModel permissionModel) {
    this.permissionModel = permissionModel;
    return this;
  }

  /**
   * Get permissionModel
   * @return permissionModel
   */
  @javax.annotation.Nullable
  public CreateAppRequestPermissionModel getPermissionModel() {
    return permissionModel;
  }

  public void setPermissionModel(CreateAppRequestPermissionModel permissionModel) {
    this.permissionModel = permissionModel;
  }


  public CreateAppRequest policyArn(String policyArn) {
    this.policyArn = policyArn;
    return this;
  }

  /**
   * Amazon Resource Name (ARN) of the resiliency policy. The format for this ARN is: arn:&lt;code&gt;partition&lt;/code&gt;:resiliencehub:&lt;code&gt;region&lt;/code&gt;:&lt;code&gt;account&lt;/code&gt;:resiliency-policy/&lt;code&gt;policy-id&lt;/code&gt;. For more information about ARNs, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt; Amazon Resource Names (ARNs)&lt;/a&gt; in the &lt;i&gt;AWS General Reference&lt;/i&gt; guide.
   * @return policyArn
   */
  @javax.annotation.Nullable
  public String getPolicyArn() {
    return policyArn;
  }

  public void setPolicyArn(String policyArn) {
    this.policyArn = policyArn;
  }


  public CreateAppRequest tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public CreateAppRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   * Tags assigned to the resource. A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key/value pair.
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAppRequest createAppRequest = (CreateAppRequest) o;
    return Objects.equals(this.assessmentSchedule, createAppRequest.assessmentSchedule) &&
        Objects.equals(this.clientToken, createAppRequest.clientToken) &&
        Objects.equals(this.description, createAppRequest.description) &&
        Objects.equals(this.eventSubscriptions, createAppRequest.eventSubscriptions) &&
        Objects.equals(this.name, createAppRequest.name) &&
        Objects.equals(this.permissionModel, createAppRequest.permissionModel) &&
        Objects.equals(this.policyArn, createAppRequest.policyArn) &&
        Objects.equals(this.tags, createAppRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assessmentSchedule, clientToken, description, eventSubscriptions, name, permissionModel, policyArn, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAppRequest {\n");
    sb.append("    assessmentSchedule: ").append(toIndentedString(assessmentSchedule)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    eventSubscriptions: ").append(toIndentedString(eventSubscriptions)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    permissionModel: ").append(toIndentedString(permissionModel)).append("\n");
    sb.append("    policyArn: ").append(toIndentedString(policyArn)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assessmentSchedule");
    openapiFields.add("clientToken");
    openapiFields.add("description");
    openapiFields.add("eventSubscriptions");
    openapiFields.add("name");
    openapiFields.add("permissionModel");
    openapiFields.add("policyArn");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateAppRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateAppRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateAppRequest is not found in the empty JSON string", CreateAppRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateAppRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateAppRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateAppRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("assessmentSchedule") != null && !jsonObj.get("assessmentSchedule").isJsonNull()) && !jsonObj.get("assessmentSchedule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assessmentSchedule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assessmentSchedule").toString()));
      }
      // validate the optional field `assessmentSchedule`
      if (jsonObj.get("assessmentSchedule") != null && !jsonObj.get("assessmentSchedule").isJsonNull()) {
        AssessmentScheduleEnum.validateJsonElement(jsonObj.get("assessmentSchedule"));
      }
      if ((jsonObj.get("clientToken") != null && !jsonObj.get("clientToken").isJsonNull()) && !jsonObj.get("clientToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientToken").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (jsonObj.get("eventSubscriptions") != null && !jsonObj.get("eventSubscriptions").isJsonNull()) {
        JsonArray jsonArrayeventSubscriptions = jsonObj.getAsJsonArray("eventSubscriptions");
        if (jsonArrayeventSubscriptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("eventSubscriptions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `eventSubscriptions` to be an array in the JSON string but got `%s`", jsonObj.get("eventSubscriptions").toString()));
          }

          // validate the optional field `eventSubscriptions` (array)
          for (int i = 0; i < jsonArrayeventSubscriptions.size(); i++) {
            EventSubscription.validateJsonElement(jsonArrayeventSubscriptions.get(i));
          };
        }
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `permissionModel`
      if (jsonObj.get("permissionModel") != null && !jsonObj.get("permissionModel").isJsonNull()) {
        CreateAppRequestPermissionModel.validateJsonElement(jsonObj.get("permissionModel"));
      }
      if ((jsonObj.get("policyArn") != null && !jsonObj.get("policyArn").isJsonNull()) && !jsonObj.get("policyArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policyArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policyArn").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateAppRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateAppRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateAppRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateAppRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateAppRequest>() {
           @Override
           public void write(JsonWriter out, CreateAppRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateAppRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateAppRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateAppRequest
   * @throws IOException if the JSON string is invalid with respect to CreateAppRequest
   */
  public static CreateAppRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateAppRequest.class);
  }

  /**
   * Convert an instance of CreateAppRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

