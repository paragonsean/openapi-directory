/*
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CreateAppVersionResourceRequestLogicalResourceId;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateAppVersionResourceRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:12.783351-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateAppVersionResourceRequest {
  public static final String SERIALIZED_NAME_ADDITIONAL_INFO = "additionalInfo";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_INFO)
  private Map<String, List<String>> additionalInfo = new HashMap<>();

  public static final String SERIALIZED_NAME_APP_ARN = "appArn";
  @SerializedName(SERIALIZED_NAME_APP_ARN)
  private String appArn;

  public static final String SERIALIZED_NAME_APP_COMPONENTS = "appComponents";
  @SerializedName(SERIALIZED_NAME_APP_COMPONENTS)
  private List<String> appComponents = new ArrayList<>();

  public static final String SERIALIZED_NAME_AWS_ACCOUNT_ID = "awsAccountId";
  @SerializedName(SERIALIZED_NAME_AWS_ACCOUNT_ID)
  private String awsAccountId;

  public static final String SERIALIZED_NAME_AWS_REGION = "awsRegion";
  @SerializedName(SERIALIZED_NAME_AWS_REGION)
  private String awsRegion;

  public static final String SERIALIZED_NAME_EXCLUDED = "excluded";
  @SerializedName(SERIALIZED_NAME_EXCLUDED)
  private Boolean excluded;

  public static final String SERIALIZED_NAME_LOGICAL_RESOURCE_ID = "logicalResourceId";
  @SerializedName(SERIALIZED_NAME_LOGICAL_RESOURCE_ID)
  private CreateAppVersionResourceRequestLogicalResourceId logicalResourceId;

  public static final String SERIALIZED_NAME_PHYSICAL_RESOURCE_ID = "physicalResourceId";
  @SerializedName(SERIALIZED_NAME_PHYSICAL_RESOURCE_ID)
  private String physicalResourceId;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "resourceType";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private String resourceType;

  public UpdateAppVersionResourceRequest() {
  }

  public UpdateAppVersionResourceRequest additionalInfo(Map<String, List<String>> additionalInfo) {
    this.additionalInfo = additionalInfo;
    return this;
  }

  public UpdateAppVersionResourceRequest putAdditionalInfoItem(String key, List<String> additionalInfoItem) {
    if (this.additionalInfo == null) {
      this.additionalInfo = new HashMap<>();
    }
    this.additionalInfo.put(key, additionalInfoItem);
    return this;
  }

  /**
   * Currently, there is no supported additional information for resources.
   * @return additionalInfo
   */
  @javax.annotation.Nullable
  public Map<String, List<String>> getAdditionalInfo() {
    return additionalInfo;
  }

  public void setAdditionalInfo(Map<String, List<String>> additionalInfo) {
    this.additionalInfo = additionalInfo;
  }


  public UpdateAppVersionResourceRequest appArn(String appArn) {
    this.appArn = appArn;
    return this;
  }

  /**
   * Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:&lt;code&gt;partition&lt;/code&gt;:resiliencehub:&lt;code&gt;region&lt;/code&gt;:&lt;code&gt;account&lt;/code&gt;:app/&lt;code&gt;app-id&lt;/code&gt;. For more information about ARNs, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt; Amazon Resource Names (ARNs)&lt;/a&gt; in the &lt;i&gt;AWS General Reference&lt;/i&gt; guide.
   * @return appArn
   */
  @javax.annotation.Nonnull
  public String getAppArn() {
    return appArn;
  }

  public void setAppArn(String appArn) {
    this.appArn = appArn;
  }


  public UpdateAppVersionResourceRequest appComponents(List<String> appComponents) {
    this.appComponents = appComponents;
    return this;
  }

  public UpdateAppVersionResourceRequest addAppComponentsItem(String appComponentsItem) {
    if (this.appComponents == null) {
      this.appComponents = new ArrayList<>();
    }
    this.appComponents.add(appComponentsItem);
    return this;
  }

  /**
   * List of Application Components that this resource belongs to. If an Application Component is not part of the Resilience Hub application, it will be added.
   * @return appComponents
   */
  @javax.annotation.Nullable
  public List<String> getAppComponents() {
    return appComponents;
  }

  public void setAppComponents(List<String> appComponents) {
    this.appComponents = appComponents;
  }


  public UpdateAppVersionResourceRequest awsAccountId(String awsAccountId) {
    this.awsAccountId = awsAccountId;
    return this;
  }

  /**
   * Amazon Web Services account that owns the physical resource.
   * @return awsAccountId
   */
  @javax.annotation.Nullable
  public String getAwsAccountId() {
    return awsAccountId;
  }

  public void setAwsAccountId(String awsAccountId) {
    this.awsAccountId = awsAccountId;
  }


  public UpdateAppVersionResourceRequest awsRegion(String awsRegion) {
    this.awsRegion = awsRegion;
    return this;
  }

  /**
   * Amazon Web Services region that owns the physical resource.
   * @return awsRegion
   */
  @javax.annotation.Nullable
  public String getAwsRegion() {
    return awsRegion;
  }

  public void setAwsRegion(String awsRegion) {
    this.awsRegion = awsRegion;
  }


  public UpdateAppVersionResourceRequest excluded(Boolean excluded) {
    this.excluded = excluded;
    return this;
  }

  /**
   * &lt;p&gt;Indicates if a resource is excluded from an Resilience Hub application.&lt;/p&gt; &lt;note&gt; &lt;p&gt;You can exclude only imported resources from an Resilience Hub application.&lt;/p&gt; &lt;/note&gt;
   * @return excluded
   */
  @javax.annotation.Nullable
  public Boolean getExcluded() {
    return excluded;
  }

  public void setExcluded(Boolean excluded) {
    this.excluded = excluded;
  }


  public UpdateAppVersionResourceRequest logicalResourceId(CreateAppVersionResourceRequestLogicalResourceId logicalResourceId) {
    this.logicalResourceId = logicalResourceId;
    return this;
  }

  /**
   * Get logicalResourceId
   * @return logicalResourceId
   */
  @javax.annotation.Nullable
  public CreateAppVersionResourceRequestLogicalResourceId getLogicalResourceId() {
    return logicalResourceId;
  }

  public void setLogicalResourceId(CreateAppVersionResourceRequestLogicalResourceId logicalResourceId) {
    this.logicalResourceId = logicalResourceId;
  }


  public UpdateAppVersionResourceRequest physicalResourceId(String physicalResourceId) {
    this.physicalResourceId = physicalResourceId;
    return this;
  }

  /**
   * Physical identifier of the resource.
   * @return physicalResourceId
   */
  @javax.annotation.Nullable
  public String getPhysicalResourceId() {
    return physicalResourceId;
  }

  public void setPhysicalResourceId(String physicalResourceId) {
    this.physicalResourceId = physicalResourceId;
  }


  public UpdateAppVersionResourceRequest resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Name of the resource.
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }


  public UpdateAppVersionResourceRequest resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Type of resource.
   * @return resourceType
   */
  @javax.annotation.Nullable
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAppVersionResourceRequest updateAppVersionResourceRequest = (UpdateAppVersionResourceRequest) o;
    return Objects.equals(this.additionalInfo, updateAppVersionResourceRequest.additionalInfo) &&
        Objects.equals(this.appArn, updateAppVersionResourceRequest.appArn) &&
        Objects.equals(this.appComponents, updateAppVersionResourceRequest.appComponents) &&
        Objects.equals(this.awsAccountId, updateAppVersionResourceRequest.awsAccountId) &&
        Objects.equals(this.awsRegion, updateAppVersionResourceRequest.awsRegion) &&
        Objects.equals(this.excluded, updateAppVersionResourceRequest.excluded) &&
        Objects.equals(this.logicalResourceId, updateAppVersionResourceRequest.logicalResourceId) &&
        Objects.equals(this.physicalResourceId, updateAppVersionResourceRequest.physicalResourceId) &&
        Objects.equals(this.resourceName, updateAppVersionResourceRequest.resourceName) &&
        Objects.equals(this.resourceType, updateAppVersionResourceRequest.resourceType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalInfo, appArn, appComponents, awsAccountId, awsRegion, excluded, logicalResourceId, physicalResourceId, resourceName, resourceType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAppVersionResourceRequest {\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("    appArn: ").append(toIndentedString(appArn)).append("\n");
    sb.append("    appComponents: ").append(toIndentedString(appComponents)).append("\n");
    sb.append("    awsAccountId: ").append(toIndentedString(awsAccountId)).append("\n");
    sb.append("    awsRegion: ").append(toIndentedString(awsRegion)).append("\n");
    sb.append("    excluded: ").append(toIndentedString(excluded)).append("\n");
    sb.append("    logicalResourceId: ").append(toIndentedString(logicalResourceId)).append("\n");
    sb.append("    physicalResourceId: ").append(toIndentedString(physicalResourceId)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additionalInfo");
    openapiFields.add("appArn");
    openapiFields.add("appComponents");
    openapiFields.add("awsAccountId");
    openapiFields.add("awsRegion");
    openapiFields.add("excluded");
    openapiFields.add("logicalResourceId");
    openapiFields.add("physicalResourceId");
    openapiFields.add("resourceName");
    openapiFields.add("resourceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("appArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateAppVersionResourceRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateAppVersionResourceRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateAppVersionResourceRequest is not found in the empty JSON string", UpdateAppVersionResourceRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateAppVersionResourceRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateAppVersionResourceRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateAppVersionResourceRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("appArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appArn").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("appComponents") != null && !jsonObj.get("appComponents").isJsonNull() && !jsonObj.get("appComponents").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `appComponents` to be an array in the JSON string but got `%s`", jsonObj.get("appComponents").toString()));
      }
      if ((jsonObj.get("awsAccountId") != null && !jsonObj.get("awsAccountId").isJsonNull()) && !jsonObj.get("awsAccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `awsAccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("awsAccountId").toString()));
      }
      if ((jsonObj.get("awsRegion") != null && !jsonObj.get("awsRegion").isJsonNull()) && !jsonObj.get("awsRegion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `awsRegion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("awsRegion").toString()));
      }
      // validate the optional field `logicalResourceId`
      if (jsonObj.get("logicalResourceId") != null && !jsonObj.get("logicalResourceId").isJsonNull()) {
        CreateAppVersionResourceRequestLogicalResourceId.validateJsonElement(jsonObj.get("logicalResourceId"));
      }
      if ((jsonObj.get("physicalResourceId") != null && !jsonObj.get("physicalResourceId").isJsonNull()) && !jsonObj.get("physicalResourceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `physicalResourceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("physicalResourceId").toString()));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
      if ((jsonObj.get("resourceType") != null && !jsonObj.get("resourceType").isJsonNull()) && !jsonObj.get("resourceType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateAppVersionResourceRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateAppVersionResourceRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateAppVersionResourceRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateAppVersionResourceRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateAppVersionResourceRequest>() {
           @Override
           public void write(JsonWriter out, UpdateAppVersionResourceRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateAppVersionResourceRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateAppVersionResourceRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateAppVersionResourceRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateAppVersionResourceRequest
   */
  public static UpdateAppVersionResourceRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateAppVersionResourceRequest.class);
  }

  /**
   * Convert an instance of UpdateAppVersionResourceRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

