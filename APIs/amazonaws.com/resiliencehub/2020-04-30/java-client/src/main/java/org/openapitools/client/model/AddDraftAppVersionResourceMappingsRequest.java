/*
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ResourceMapping;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AddDraftAppVersionResourceMappingsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:12.783351-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AddDraftAppVersionResourceMappingsRequest {
  public static final String SERIALIZED_NAME_APP_ARN = "appArn";
  @SerializedName(SERIALIZED_NAME_APP_ARN)
  private String appArn;

  public static final String SERIALIZED_NAME_RESOURCE_MAPPINGS = "resourceMappings";
  @SerializedName(SERIALIZED_NAME_RESOURCE_MAPPINGS)
  private List<ResourceMapping> resourceMappings = new ArrayList<>();

  public AddDraftAppVersionResourceMappingsRequest() {
  }

  public AddDraftAppVersionResourceMappingsRequest appArn(String appArn) {
    this.appArn = appArn;
    return this;
  }

  /**
   * Amazon Resource Name (ARN) of the Resilience Hub application. The format for this ARN is: arn:&lt;code&gt;partition&lt;/code&gt;:resiliencehub:&lt;code&gt;region&lt;/code&gt;:&lt;code&gt;account&lt;/code&gt;:app/&lt;code&gt;app-id&lt;/code&gt;. For more information about ARNs, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\&quot;&gt; Amazon Resource Names (ARNs)&lt;/a&gt; in the &lt;i&gt;AWS General Reference&lt;/i&gt; guide.
   * @return appArn
   */
  @javax.annotation.Nonnull
  public String getAppArn() {
    return appArn;
  }

  public void setAppArn(String appArn) {
    this.appArn = appArn;
  }


  public AddDraftAppVersionResourceMappingsRequest resourceMappings(List<ResourceMapping> resourceMappings) {
    this.resourceMappings = resourceMappings;
    return this;
  }

  public AddDraftAppVersionResourceMappingsRequest addResourceMappingsItem(ResourceMapping resourceMappingsItem) {
    if (this.resourceMappings == null) {
      this.resourceMappings = new ArrayList<>();
    }
    this.resourceMappings.add(resourceMappingsItem);
    return this;
  }

  /**
   * Mappings used to map logical resources from the template to physical resources. You can use the mapping type &lt;code&gt;CFN_STACK&lt;/code&gt; if the application template uses a logical stack name. Or you can map individual resources by using the mapping type &lt;code&gt;RESOURCE&lt;/code&gt;. We recommend using the mapping type &lt;code&gt;CFN_STACK&lt;/code&gt; if the application is backed by a CloudFormation stack.
   * @return resourceMappings
   */
  @javax.annotation.Nonnull
  public List<ResourceMapping> getResourceMappings() {
    return resourceMappings;
  }

  public void setResourceMappings(List<ResourceMapping> resourceMappings) {
    this.resourceMappings = resourceMappings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddDraftAppVersionResourceMappingsRequest addDraftAppVersionResourceMappingsRequest = (AddDraftAppVersionResourceMappingsRequest) o;
    return Objects.equals(this.appArn, addDraftAppVersionResourceMappingsRequest.appArn) &&
        Objects.equals(this.resourceMappings, addDraftAppVersionResourceMappingsRequest.resourceMappings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appArn, resourceMappings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddDraftAppVersionResourceMappingsRequest {\n");
    sb.append("    appArn: ").append(toIndentedString(appArn)).append("\n");
    sb.append("    resourceMappings: ").append(toIndentedString(resourceMappings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appArn");
    openapiFields.add("resourceMappings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("appArn");
    openapiRequiredFields.add("resourceMappings");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AddDraftAppVersionResourceMappingsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AddDraftAppVersionResourceMappingsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddDraftAppVersionResourceMappingsRequest is not found in the empty JSON string", AddDraftAppVersionResourceMappingsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AddDraftAppVersionResourceMappingsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AddDraftAppVersionResourceMappingsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AddDraftAppVersionResourceMappingsRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("appArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appArn").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("resourceMappings").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceMappings` to be an array in the JSON string but got `%s`", jsonObj.get("resourceMappings").toString()));
      }

      JsonArray jsonArrayresourceMappings = jsonObj.getAsJsonArray("resourceMappings");
      // validate the required field `resourceMappings` (array)
      for (int i = 0; i < jsonArrayresourceMappings.size(); i++) {
        ResourceMapping.validateJsonElement(jsonArrayresourceMappings.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddDraftAppVersionResourceMappingsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddDraftAppVersionResourceMappingsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddDraftAppVersionResourceMappingsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddDraftAppVersionResourceMappingsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AddDraftAppVersionResourceMappingsRequest>() {
           @Override
           public void write(JsonWriter out, AddDraftAppVersionResourceMappingsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AddDraftAppVersionResourceMappingsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AddDraftAppVersionResourceMappingsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AddDraftAppVersionResourceMappingsRequest
   * @throws IOException if the JSON string is invalid with respect to AddDraftAppVersionResourceMappingsRequest
   */
  public static AddDraftAppVersionResourceMappingsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddDraftAppVersionResourceMappingsRequest.class);
  }

  /**
   * Convert an instance of AddDraftAppVersionResourceMappingsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

