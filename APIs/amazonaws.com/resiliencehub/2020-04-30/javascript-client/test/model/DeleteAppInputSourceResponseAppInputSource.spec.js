/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsResilienceHub);
  }
}(this, function(expect, AwsResilienceHub) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsResilienceHub.DeleteAppInputSourceResponseAppInputSource();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DeleteAppInputSourceResponseAppInputSource', function() {
    it('should create an instance of DeleteAppInputSourceResponseAppInputSource', function() {
      // uncomment below and update the code to test DeleteAppInputSourceResponseAppInputSource
      //var instance = new AwsResilienceHub.DeleteAppInputSourceResponseAppInputSource();
      //expect(instance).to.be.a(AwsResilienceHub.DeleteAppInputSourceResponseAppInputSource);
    });

    it('should have the property eksSourceClusterNamespace (base name: "eksSourceClusterNamespace")', function() {
      // uncomment below and update the code to test the property eksSourceClusterNamespace
      //var instance = new AwsResilienceHub.DeleteAppInputSourceResponseAppInputSource();
      //expect(instance).to.be();
    });

    it('should have the property importType (base name: "importType")', function() {
      // uncomment below and update the code to test the property importType
      //var instance = new AwsResilienceHub.DeleteAppInputSourceResponseAppInputSource();
      //expect(instance).to.be();
    });

    it('should have the property resourceCount (base name: "resourceCount")', function() {
      // uncomment below and update the code to test the property resourceCount
      //var instance = new AwsResilienceHub.DeleteAppInputSourceResponseAppInputSource();
      //expect(instance).to.be();
    });

    it('should have the property sourceArn (base name: "sourceArn")', function() {
      // uncomment below and update the code to test the property sourceArn
      //var instance = new AwsResilienceHub.DeleteAppInputSourceResponseAppInputSource();
      //expect(instance).to.be();
    });

    it('should have the property sourceName (base name: "sourceName")', function() {
      // uncomment below and update the code to test the property sourceName
      //var instance = new AwsResilienceHub.DeleteAppInputSourceResponseAppInputSource();
      //expect(instance).to.be();
    });

    it('should have the property terraformSource (base name: "terraformSource")', function() {
      // uncomment below and update the code to test the property terraformSource
      //var instance = new AwsResilienceHub.DeleteAppInputSourceResponseAppInputSource();
      //expect(instance).to.be();
    });

  });

}));
