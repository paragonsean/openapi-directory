/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsResilienceHub);
  }
}(this, function(expect, AwsResilienceHub) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsResilienceHub.ConfigRecommendation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConfigRecommendation', function() {
    it('should create an instance of ConfigRecommendation', function() {
      // uncomment below and update the code to test ConfigRecommendation
      //var instance = new AwsResilienceHub.ConfigRecommendation();
      //expect(instance).to.be.a(AwsResilienceHub.ConfigRecommendation);
    });

    it('should have the property appComponentName (base name: "appComponentName")', function() {
      // uncomment below and update the code to test the property appComponentName
      //var instance = new AwsResilienceHub.ConfigRecommendation();
      //expect(instance).to.be();
    });

    it('should have the property compliance (base name: "compliance")', function() {
      // uncomment below and update the code to test the property compliance
      //var instance = new AwsResilienceHub.ConfigRecommendation();
      //expect(instance).to.be();
    });

    it('should have the property cost (base name: "cost")', function() {
      // uncomment below and update the code to test the property cost
      //var instance = new AwsResilienceHub.ConfigRecommendation();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AwsResilienceHub.ConfigRecommendation();
      //expect(instance).to.be();
    });

    it('should have the property haArchitecture (base name: "haArchitecture")', function() {
      // uncomment below and update the code to test the property haArchitecture
      //var instance = new AwsResilienceHub.ConfigRecommendation();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AwsResilienceHub.ConfigRecommendation();
      //expect(instance).to.be();
    });

    it('should have the property optimizationType (base name: "optimizationType")', function() {
      // uncomment below and update the code to test the property optimizationType
      //var instance = new AwsResilienceHub.ConfigRecommendation();
      //expect(instance).to.be();
    });

    it('should have the property recommendationCompliance (base name: "recommendationCompliance")', function() {
      // uncomment below and update the code to test the property recommendationCompliance
      //var instance = new AwsResilienceHub.ConfigRecommendation();
      //expect(instance).to.be();
    });

    it('should have the property referenceId (base name: "referenceId")', function() {
      // uncomment below and update the code to test the property referenceId
      //var instance = new AwsResilienceHub.ConfigRecommendation();
      //expect(instance).to.be();
    });

    it('should have the property suggestedChanges (base name: "suggestedChanges")', function() {
      // uncomment below and update the code to test the property suggestedChanges
      //var instance = new AwsResilienceHub.ConfigRecommendation();
      //expect(instance).to.be();
    });

  });

}));
