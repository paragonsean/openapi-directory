/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAppInputSourcesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAppInputSourcesResponse::OAIListAppInputSourcesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAppInputSourcesResponse::OAIListAppInputSourcesResponse() {
    this->initializeModel();
}

OAIListAppInputSourcesResponse::~OAIListAppInputSourcesResponse() {}

void OAIListAppInputSourcesResponse::initializeModel() {

    m_app_input_sources_isSet = false;
    m_app_input_sources_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListAppInputSourcesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAppInputSourcesResponse::fromJsonObject(QJsonObject json) {

    m_app_input_sources_isValid = ::OpenAPI::fromJsonValue(m_app_input_sources, json[QString("appInputSources")]);
    m_app_input_sources_isSet = !json[QString("appInputSources")].isNull() && m_app_input_sources_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListAppInputSourcesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAppInputSourcesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_app_input_sources.isSet()) {
        obj.insert(QString("appInputSources"), ::OpenAPI::toJsonValue(m_app_input_sources));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListAppInputSourcesResponse::getAppInputSources() const {
    return m_app_input_sources;
}
void OAIListAppInputSourcesResponse::setAppInputSources(const QList &app_input_sources) {
    m_app_input_sources = app_input_sources;
    m_app_input_sources_isSet = true;
}

bool OAIListAppInputSourcesResponse::is_app_input_sources_Set() const{
    return m_app_input_sources_isSet;
}

bool OAIListAppInputSourcesResponse::is_app_input_sources_Valid() const{
    return m_app_input_sources_isValid;
}

QString OAIListAppInputSourcesResponse::getNextToken() const {
    return m_next_token;
}
void OAIListAppInputSourcesResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListAppInputSourcesResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListAppInputSourcesResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListAppInputSourcesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_input_sources.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAppInputSourcesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_input_sources_isValid && true;
}

} // namespace OpenAPI
