/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppVersionSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppVersionSummary::OAIAppVersionSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppVersionSummary::OAIAppVersionSummary() {
    this->initializeModel();
}

OAIAppVersionSummary::~OAIAppVersionSummary() {}

void OAIAppVersionSummary::initializeModel() {

    m_app_version_isSet = false;
    m_app_version_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_identifier_isSet = false;
    m_identifier_isValid = false;

    m_version_name_isSet = false;
    m_version_name_isValid = false;
}

void OAIAppVersionSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppVersionSummary::fromJsonObject(QJsonObject json) {

    m_app_version_isValid = ::OpenAPI::fromJsonValue(m_app_version, json[QString("appVersion")]);
    m_app_version_isSet = !json[QString("appVersion")].isNull() && m_app_version_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_identifier_isValid = ::OpenAPI::fromJsonValue(m_identifier, json[QString("identifier")]);
    m_identifier_isSet = !json[QString("identifier")].isNull() && m_identifier_isValid;

    m_version_name_isValid = ::OpenAPI::fromJsonValue(m_version_name, json[QString("versionName")]);
    m_version_name_isSet = !json[QString("versionName")].isNull() && m_version_name_isValid;
}

QString OAIAppVersionSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppVersionSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_app_version_isSet) {
        obj.insert(QString("appVersion"), ::OpenAPI::toJsonValue(m_app_version));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_identifier_isSet) {
        obj.insert(QString("identifier"), ::OpenAPI::toJsonValue(m_identifier));
    }
    if (m_version_name_isSet) {
        obj.insert(QString("versionName"), ::OpenAPI::toJsonValue(m_version_name));
    }
    return obj;
}

QString OAIAppVersionSummary::getAppVersion() const {
    return m_app_version;
}
void OAIAppVersionSummary::setAppVersion(const QString &app_version) {
    m_app_version = app_version;
    m_app_version_isSet = true;
}

bool OAIAppVersionSummary::is_app_version_Set() const{
    return m_app_version_isSet;
}

bool OAIAppVersionSummary::is_app_version_Valid() const{
    return m_app_version_isValid;
}

QDateTime OAIAppVersionSummary::getCreationTime() const {
    return m_creation_time;
}
void OAIAppVersionSummary::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIAppVersionSummary::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIAppVersionSummary::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

qint32 OAIAppVersionSummary::getIdentifier() const {
    return m_identifier;
}
void OAIAppVersionSummary::setIdentifier(const qint32 &identifier) {
    m_identifier = identifier;
    m_identifier_isSet = true;
}

bool OAIAppVersionSummary::is_identifier_Set() const{
    return m_identifier_isSet;
}

bool OAIAppVersionSummary::is_identifier_Valid() const{
    return m_identifier_isValid;
}

QString OAIAppVersionSummary::getVersionName() const {
    return m_version_name;
}
void OAIAppVersionSummary::setVersionName(const QString &version_name) {
    m_version_name = version_name;
    m_version_name_isSet = true;
}

bool OAIAppVersionSummary::is_version_name_Set() const{
    return m_version_name_isSet;
}

bool OAIAppVersionSummary::is_version_name_Valid() const{
    return m_version_name_isValid;
}

bool OAIAppVersionSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppVersionSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_version_isValid && true;
}

} // namespace OpenAPI
