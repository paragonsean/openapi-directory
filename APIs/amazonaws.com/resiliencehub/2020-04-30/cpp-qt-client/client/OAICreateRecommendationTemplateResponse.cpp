/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateRecommendationTemplateResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateRecommendationTemplateResponse::OAICreateRecommendationTemplateResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateRecommendationTemplateResponse::OAICreateRecommendationTemplateResponse() {
    this->initializeModel();
}

OAICreateRecommendationTemplateResponse::~OAICreateRecommendationTemplateResponse() {}

void OAICreateRecommendationTemplateResponse::initializeModel() {

    m_recommendation_template_isSet = false;
    m_recommendation_template_isValid = false;
}

void OAICreateRecommendationTemplateResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateRecommendationTemplateResponse::fromJsonObject(QJsonObject json) {

    m_recommendation_template_isValid = ::OpenAPI::fromJsonValue(m_recommendation_template, json[QString("recommendationTemplate")]);
    m_recommendation_template_isSet = !json[QString("recommendationTemplate")].isNull() && m_recommendation_template_isValid;
}

QString OAICreateRecommendationTemplateResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateRecommendationTemplateResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_recommendation_template.isSet()) {
        obj.insert(QString("recommendationTemplate"), ::OpenAPI::toJsonValue(m_recommendation_template));
    }
    return obj;
}

OAICreateRecommendationTemplateResponse_recommendationTemplate OAICreateRecommendationTemplateResponse::getRecommendationTemplate() const {
    return m_recommendation_template;
}
void OAICreateRecommendationTemplateResponse::setRecommendationTemplate(const OAICreateRecommendationTemplateResponse_recommendationTemplate &recommendation_template) {
    m_recommendation_template = recommendation_template;
    m_recommendation_template_isSet = true;
}

bool OAICreateRecommendationTemplateResponse::is_recommendation_template_Set() const{
    return m_recommendation_template_isSet;
}

bool OAICreateRecommendationTemplateResponse::is_recommendation_template_Valid() const{
    return m_recommendation_template_isValid;
}

bool OAICreateRecommendationTemplateResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_recommendation_template.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateRecommendationTemplateResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
