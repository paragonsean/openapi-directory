/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAppAssessmentsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAppAssessmentsResponse::OAIListAppAssessmentsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAppAssessmentsResponse::OAIListAppAssessmentsResponse() {
    this->initializeModel();
}

OAIListAppAssessmentsResponse::~OAIListAppAssessmentsResponse() {}

void OAIListAppAssessmentsResponse::initializeModel() {

    m_assessment_summaries_isSet = false;
    m_assessment_summaries_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListAppAssessmentsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAppAssessmentsResponse::fromJsonObject(QJsonObject json) {

    m_assessment_summaries_isValid = ::OpenAPI::fromJsonValue(m_assessment_summaries, json[QString("assessmentSummaries")]);
    m_assessment_summaries_isSet = !json[QString("assessmentSummaries")].isNull() && m_assessment_summaries_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListAppAssessmentsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAppAssessmentsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_assessment_summaries.isSet()) {
        obj.insert(QString("assessmentSummaries"), ::OpenAPI::toJsonValue(m_assessment_summaries));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListAppAssessmentsResponse::getAssessmentSummaries() const {
    return m_assessment_summaries;
}
void OAIListAppAssessmentsResponse::setAssessmentSummaries(const QList &assessment_summaries) {
    m_assessment_summaries = assessment_summaries;
    m_assessment_summaries_isSet = true;
}

bool OAIListAppAssessmentsResponse::is_assessment_summaries_Set() const{
    return m_assessment_summaries_isSet;
}

bool OAIListAppAssessmentsResponse::is_assessment_summaries_Valid() const{
    return m_assessment_summaries_isValid;
}

QString OAIListAppAssessmentsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListAppAssessmentsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListAppAssessmentsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListAppAssessmentsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListAppAssessmentsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assessment_summaries.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAppAssessmentsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_assessment_summaries_isValid && true;
}

} // namespace OpenAPI
