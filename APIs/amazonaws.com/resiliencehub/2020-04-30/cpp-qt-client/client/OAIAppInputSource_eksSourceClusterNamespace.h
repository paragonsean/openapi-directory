/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAppInputSource_eksSourceClusterNamespace.h
 *
 * 
 */

#ifndef OAIAppInputSource_eksSourceClusterNamespace_H
#define OAIAppInputSource_eksSourceClusterNamespace_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAppInputSource_eksSourceClusterNamespace : public OAIObject {
public:
    OAIAppInputSource_eksSourceClusterNamespace();
    OAIAppInputSource_eksSourceClusterNamespace(QString json);
    ~OAIAppInputSource_eksSourceClusterNamespace() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEksClusterArn() const;
    void setEksClusterArn(const QString &eks_cluster_arn);
    bool is_eks_cluster_arn_Set() const;
    bool is_eks_cluster_arn_Valid() const;

    QString getRNamespace() const;
    void setRNamespace(const QString &r_namespace);
    bool is_r_namespace_Set() const;
    bool is_r_namespace_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_eks_cluster_arn;
    bool m_eks_cluster_arn_isSet;
    bool m_eks_cluster_arn_isValid;

    QString m_r_namespace;
    bool m_r_namespace_isSet;
    bool m_r_namespace_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAppInputSource_eksSourceClusterNamespace)

#endif // OAIAppInputSource_eksSourceClusterNamespace_H
