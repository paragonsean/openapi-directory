/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImportResourcesToDraftAppVersion_request.h
 *
 * 
 */

#ifndef OAIImportResourcesToDraftAppVersion_request_H
#define OAIImportResourcesToDraftAppVersion_request_H

#include <QJsonObject>

#include "OAIEksSource.h"
#include "OAITerraformSource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEksSource;
class OAITerraformSource;

class OAIImportResourcesToDraftAppVersion_request : public OAIObject {
public:
    OAIImportResourcesToDraftAppVersion_request();
    OAIImportResourcesToDraftAppVersion_request(QString json);
    ~OAIImportResourcesToDraftAppVersion_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppArn() const;
    void setAppArn(const QString &app_arn);
    bool is_app_arn_Set() const;
    bool is_app_arn_Valid() const;

    QList<OAIEksSource> getEksSources() const;
    void setEksSources(const QList<OAIEksSource> &eks_sources);
    bool is_eks_sources_Set() const;
    bool is_eks_sources_Valid() const;

    QString getImportStrategy() const;
    void setImportStrategy(const QString &import_strategy);
    bool is_import_strategy_Set() const;
    bool is_import_strategy_Valid() const;

    QList<QString> getSourceArns() const;
    void setSourceArns(const QList<QString> &source_arns);
    bool is_source_arns_Set() const;
    bool is_source_arns_Valid() const;

    QList<OAITerraformSource> getTerraformSources() const;
    void setTerraformSources(const QList<OAITerraformSource> &terraform_sources);
    bool is_terraform_sources_Set() const;
    bool is_terraform_sources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_arn;
    bool m_app_arn_isSet;
    bool m_app_arn_isValid;

    QList<OAIEksSource> m_eks_sources;
    bool m_eks_sources_isSet;
    bool m_eks_sources_isValid;

    QString m_import_strategy;
    bool m_import_strategy_isSet;
    bool m_import_strategy_isValid;

    QList<QString> m_source_arns;
    bool m_source_arns_isSet;
    bool m_source_arns_isValid;

    QList<OAITerraformSource> m_terraform_sources;
    bool m_terraform_sources_isSet;
    bool m_terraform_sources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImportResourcesToDraftAppVersion_request)

#endif // OAIImportResourcesToDraftAppVersion_request_H
