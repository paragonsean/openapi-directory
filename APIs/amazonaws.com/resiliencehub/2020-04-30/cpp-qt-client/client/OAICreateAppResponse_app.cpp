/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAppResponse_app.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAppResponse_app::OAICreateAppResponse_app(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAppResponse_app::OAICreateAppResponse_app() {
    this->initializeModel();
}

OAICreateAppResponse_app::~OAICreateAppResponse_app() {}

void OAICreateAppResponse_app::initializeModel() {

    m_app_arn_isSet = false;
    m_app_arn_isValid = false;

    m_assessment_schedule_isSet = false;
    m_assessment_schedule_isValid = false;

    m_compliance_status_isSet = false;
    m_compliance_status_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_drift_status_isSet = false;
    m_drift_status_isValid = false;

    m_event_subscriptions_isSet = false;
    m_event_subscriptions_isValid = false;

    m_last_app_compliance_evaluation_time_isSet = false;
    m_last_app_compliance_evaluation_time_isValid = false;

    m_last_drift_evaluation_time_isSet = false;
    m_last_drift_evaluation_time_isValid = false;

    m_last_resiliency_score_evaluation_time_isSet = false;
    m_last_resiliency_score_evaluation_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_permission_model_isSet = false;
    m_permission_model_isValid = false;

    m_policy_arn_isSet = false;
    m_policy_arn_isValid = false;

    m_resiliency_score_isSet = false;
    m_resiliency_score_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateAppResponse_app::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAppResponse_app::fromJsonObject(QJsonObject json) {

    m_app_arn_isValid = ::OpenAPI::fromJsonValue(m_app_arn, json[QString("appArn")]);
    m_app_arn_isSet = !json[QString("appArn")].isNull() && m_app_arn_isValid;

    m_assessment_schedule_isValid = ::OpenAPI::fromJsonValue(m_assessment_schedule, json[QString("assessmentSchedule")]);
    m_assessment_schedule_isSet = !json[QString("assessmentSchedule")].isNull() && m_assessment_schedule_isValid;

    m_compliance_status_isValid = ::OpenAPI::fromJsonValue(m_compliance_status, json[QString("complianceStatus")]);
    m_compliance_status_isSet = !json[QString("complianceStatus")].isNull() && m_compliance_status_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_drift_status_isValid = ::OpenAPI::fromJsonValue(m_drift_status, json[QString("driftStatus")]);
    m_drift_status_isSet = !json[QString("driftStatus")].isNull() && m_drift_status_isValid;

    m_event_subscriptions_isValid = ::OpenAPI::fromJsonValue(m_event_subscriptions, json[QString("eventSubscriptions")]);
    m_event_subscriptions_isSet = !json[QString("eventSubscriptions")].isNull() && m_event_subscriptions_isValid;

    m_last_app_compliance_evaluation_time_isValid = ::OpenAPI::fromJsonValue(m_last_app_compliance_evaluation_time, json[QString("lastAppComplianceEvaluationTime")]);
    m_last_app_compliance_evaluation_time_isSet = !json[QString("lastAppComplianceEvaluationTime")].isNull() && m_last_app_compliance_evaluation_time_isValid;

    m_last_drift_evaluation_time_isValid = ::OpenAPI::fromJsonValue(m_last_drift_evaluation_time, json[QString("lastDriftEvaluationTime")]);
    m_last_drift_evaluation_time_isSet = !json[QString("lastDriftEvaluationTime")].isNull() && m_last_drift_evaluation_time_isValid;

    m_last_resiliency_score_evaluation_time_isValid = ::OpenAPI::fromJsonValue(m_last_resiliency_score_evaluation_time, json[QString("lastResiliencyScoreEvaluationTime")]);
    m_last_resiliency_score_evaluation_time_isSet = !json[QString("lastResiliencyScoreEvaluationTime")].isNull() && m_last_resiliency_score_evaluation_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_permission_model_isValid = ::OpenAPI::fromJsonValue(m_permission_model, json[QString("permissionModel")]);
    m_permission_model_isSet = !json[QString("permissionModel")].isNull() && m_permission_model_isValid;

    m_policy_arn_isValid = ::OpenAPI::fromJsonValue(m_policy_arn, json[QString("policyArn")]);
    m_policy_arn_isSet = !json[QString("policyArn")].isNull() && m_policy_arn_isValid;

    m_resiliency_score_isValid = ::OpenAPI::fromJsonValue(m_resiliency_score, json[QString("resiliencyScore")]);
    m_resiliency_score_isSet = !json[QString("resiliencyScore")].isNull() && m_resiliency_score_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAICreateAppResponse_app::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAppResponse_app::asJsonObject() const {
    QJsonObject obj;
    if (m_app_arn_isSet) {
        obj.insert(QString("appArn"), ::OpenAPI::toJsonValue(m_app_arn));
    }
    if (m_assessment_schedule.isSet()) {
        obj.insert(QString("assessmentSchedule"), ::OpenAPI::toJsonValue(m_assessment_schedule));
    }
    if (m_compliance_status.isSet()) {
        obj.insert(QString("complianceStatus"), ::OpenAPI::toJsonValue(m_compliance_status));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_drift_status.isSet()) {
        obj.insert(QString("driftStatus"), ::OpenAPI::toJsonValue(m_drift_status));
    }
    if (m_event_subscriptions.isSet()) {
        obj.insert(QString("eventSubscriptions"), ::OpenAPI::toJsonValue(m_event_subscriptions));
    }
    if (m_last_app_compliance_evaluation_time_isSet) {
        obj.insert(QString("lastAppComplianceEvaluationTime"), ::OpenAPI::toJsonValue(m_last_app_compliance_evaluation_time));
    }
    if (m_last_drift_evaluation_time_isSet) {
        obj.insert(QString("lastDriftEvaluationTime"), ::OpenAPI::toJsonValue(m_last_drift_evaluation_time));
    }
    if (m_last_resiliency_score_evaluation_time_isSet) {
        obj.insert(QString("lastResiliencyScoreEvaluationTime"), ::OpenAPI::toJsonValue(m_last_resiliency_score_evaluation_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_permission_model.isSet()) {
        obj.insert(QString("permissionModel"), ::OpenAPI::toJsonValue(m_permission_model));
    }
    if (m_policy_arn_isSet) {
        obj.insert(QString("policyArn"), ::OpenAPI::toJsonValue(m_policy_arn));
    }
    if (m_resiliency_score_isSet) {
        obj.insert(QString("resiliencyScore"), ::OpenAPI::toJsonValue(m_resiliency_score));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateAppResponse_app::getAppArn() const {
    return m_app_arn;
}
void OAICreateAppResponse_app::setAppArn(const QString &app_arn) {
    m_app_arn = app_arn;
    m_app_arn_isSet = true;
}

bool OAICreateAppResponse_app::is_app_arn_Set() const{
    return m_app_arn_isSet;
}

bool OAICreateAppResponse_app::is_app_arn_Valid() const{
    return m_app_arn_isValid;
}

OAIAppAssessmentScheduleType OAICreateAppResponse_app::getAssessmentSchedule() const {
    return m_assessment_schedule;
}
void OAICreateAppResponse_app::setAssessmentSchedule(const OAIAppAssessmentScheduleType &assessment_schedule) {
    m_assessment_schedule = assessment_schedule;
    m_assessment_schedule_isSet = true;
}

bool OAICreateAppResponse_app::is_assessment_schedule_Set() const{
    return m_assessment_schedule_isSet;
}

bool OAICreateAppResponse_app::is_assessment_schedule_Valid() const{
    return m_assessment_schedule_isValid;
}

OAIAppComplianceStatusType OAICreateAppResponse_app::getComplianceStatus() const {
    return m_compliance_status;
}
void OAICreateAppResponse_app::setComplianceStatus(const OAIAppComplianceStatusType &compliance_status) {
    m_compliance_status = compliance_status;
    m_compliance_status_isSet = true;
}

bool OAICreateAppResponse_app::is_compliance_status_Set() const{
    return m_compliance_status_isSet;
}

bool OAICreateAppResponse_app::is_compliance_status_Valid() const{
    return m_compliance_status_isValid;
}

QDateTime OAICreateAppResponse_app::getCreationTime() const {
    return m_creation_time;
}
void OAICreateAppResponse_app::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAICreateAppResponse_app::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAICreateAppResponse_app::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAICreateAppResponse_app::getDescription() const {
    return m_description;
}
void OAICreateAppResponse_app::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateAppResponse_app::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateAppResponse_app::is_description_Valid() const{
    return m_description_isValid;
}

OAIAppDriftStatusType OAICreateAppResponse_app::getDriftStatus() const {
    return m_drift_status;
}
void OAICreateAppResponse_app::setDriftStatus(const OAIAppDriftStatusType &drift_status) {
    m_drift_status = drift_status;
    m_drift_status_isSet = true;
}

bool OAICreateAppResponse_app::is_drift_status_Set() const{
    return m_drift_status_isSet;
}

bool OAICreateAppResponse_app::is_drift_status_Valid() const{
    return m_drift_status_isValid;
}

QList OAICreateAppResponse_app::getEventSubscriptions() const {
    return m_event_subscriptions;
}
void OAICreateAppResponse_app::setEventSubscriptions(const QList &event_subscriptions) {
    m_event_subscriptions = event_subscriptions;
    m_event_subscriptions_isSet = true;
}

bool OAICreateAppResponse_app::is_event_subscriptions_Set() const{
    return m_event_subscriptions_isSet;
}

bool OAICreateAppResponse_app::is_event_subscriptions_Valid() const{
    return m_event_subscriptions_isValid;
}

QDateTime OAICreateAppResponse_app::getLastAppComplianceEvaluationTime() const {
    return m_last_app_compliance_evaluation_time;
}
void OAICreateAppResponse_app::setLastAppComplianceEvaluationTime(const QDateTime &last_app_compliance_evaluation_time) {
    m_last_app_compliance_evaluation_time = last_app_compliance_evaluation_time;
    m_last_app_compliance_evaluation_time_isSet = true;
}

bool OAICreateAppResponse_app::is_last_app_compliance_evaluation_time_Set() const{
    return m_last_app_compliance_evaluation_time_isSet;
}

bool OAICreateAppResponse_app::is_last_app_compliance_evaluation_time_Valid() const{
    return m_last_app_compliance_evaluation_time_isValid;
}

QDateTime OAICreateAppResponse_app::getLastDriftEvaluationTime() const {
    return m_last_drift_evaluation_time;
}
void OAICreateAppResponse_app::setLastDriftEvaluationTime(const QDateTime &last_drift_evaluation_time) {
    m_last_drift_evaluation_time = last_drift_evaluation_time;
    m_last_drift_evaluation_time_isSet = true;
}

bool OAICreateAppResponse_app::is_last_drift_evaluation_time_Set() const{
    return m_last_drift_evaluation_time_isSet;
}

bool OAICreateAppResponse_app::is_last_drift_evaluation_time_Valid() const{
    return m_last_drift_evaluation_time_isValid;
}

QDateTime OAICreateAppResponse_app::getLastResiliencyScoreEvaluationTime() const {
    return m_last_resiliency_score_evaluation_time;
}
void OAICreateAppResponse_app::setLastResiliencyScoreEvaluationTime(const QDateTime &last_resiliency_score_evaluation_time) {
    m_last_resiliency_score_evaluation_time = last_resiliency_score_evaluation_time;
    m_last_resiliency_score_evaluation_time_isSet = true;
}

bool OAICreateAppResponse_app::is_last_resiliency_score_evaluation_time_Set() const{
    return m_last_resiliency_score_evaluation_time_isSet;
}

bool OAICreateAppResponse_app::is_last_resiliency_score_evaluation_time_Valid() const{
    return m_last_resiliency_score_evaluation_time_isValid;
}

QString OAICreateAppResponse_app::getName() const {
    return m_name;
}
void OAICreateAppResponse_app::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateAppResponse_app::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateAppResponse_app::is_name_Valid() const{
    return m_name_isValid;
}

OAIApp_permissionModel OAICreateAppResponse_app::getPermissionModel() const {
    return m_permission_model;
}
void OAICreateAppResponse_app::setPermissionModel(const OAIApp_permissionModel &permission_model) {
    m_permission_model = permission_model;
    m_permission_model_isSet = true;
}

bool OAICreateAppResponse_app::is_permission_model_Set() const{
    return m_permission_model_isSet;
}

bool OAICreateAppResponse_app::is_permission_model_Valid() const{
    return m_permission_model_isValid;
}

QString OAICreateAppResponse_app::getPolicyArn() const {
    return m_policy_arn;
}
void OAICreateAppResponse_app::setPolicyArn(const QString &policy_arn) {
    m_policy_arn = policy_arn;
    m_policy_arn_isSet = true;
}

bool OAICreateAppResponse_app::is_policy_arn_Set() const{
    return m_policy_arn_isSet;
}

bool OAICreateAppResponse_app::is_policy_arn_Valid() const{
    return m_policy_arn_isValid;
}

double OAICreateAppResponse_app::getResiliencyScore() const {
    return m_resiliency_score;
}
void OAICreateAppResponse_app::setResiliencyScore(const double &resiliency_score) {
    m_resiliency_score = resiliency_score;
    m_resiliency_score_isSet = true;
}

bool OAICreateAppResponse_app::is_resiliency_score_Set() const{
    return m_resiliency_score_isSet;
}

bool OAICreateAppResponse_app::is_resiliency_score_Valid() const{
    return m_resiliency_score_isValid;
}

OAIAppStatusType OAICreateAppResponse_app::getStatus() const {
    return m_status;
}
void OAICreateAppResponse_app::setStatus(const OAIAppStatusType &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateAppResponse_app::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateAppResponse_app::is_status_Valid() const{
    return m_status_isValid;
}

QMap OAICreateAppResponse_app::getTags() const {
    return m_tags;
}
void OAICreateAppResponse_app::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateAppResponse_app::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateAppResponse_app::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateAppResponse_app::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assessment_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_compliance_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_drift_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_subscriptions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_app_compliance_evaluation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_drift_evaluation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_resiliency_score_evaluation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_permission_model.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resiliency_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAppResponse_app::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_arn_isValid && m_creation_time_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
