/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAppVersionsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAppVersionsResponse::OAIListAppVersionsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAppVersionsResponse::OAIListAppVersionsResponse() {
    this->initializeModel();
}

OAIListAppVersionsResponse::~OAIListAppVersionsResponse() {}

void OAIListAppVersionsResponse::initializeModel() {

    m_app_versions_isSet = false;
    m_app_versions_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListAppVersionsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAppVersionsResponse::fromJsonObject(QJsonObject json) {

    m_app_versions_isValid = ::OpenAPI::fromJsonValue(m_app_versions, json[QString("appVersions")]);
    m_app_versions_isSet = !json[QString("appVersions")].isNull() && m_app_versions_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListAppVersionsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAppVersionsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_app_versions.isSet()) {
        obj.insert(QString("appVersions"), ::OpenAPI::toJsonValue(m_app_versions));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListAppVersionsResponse::getAppVersions() const {
    return m_app_versions;
}
void OAIListAppVersionsResponse::setAppVersions(const QList &app_versions) {
    m_app_versions = app_versions;
    m_app_versions_isSet = true;
}

bool OAIListAppVersionsResponse::is_app_versions_Set() const{
    return m_app_versions_isSet;
}

bool OAIListAppVersionsResponse::is_app_versions_Valid() const{
    return m_app_versions_isValid;
}

QString OAIListAppVersionsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListAppVersionsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListAppVersionsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListAppVersionsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListAppVersionsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_versions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAppVersionsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_versions_isValid && true;
}

} // namespace OpenAPI
