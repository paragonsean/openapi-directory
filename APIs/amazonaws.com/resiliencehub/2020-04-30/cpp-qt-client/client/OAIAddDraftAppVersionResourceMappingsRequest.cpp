/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddDraftAppVersionResourceMappingsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddDraftAppVersionResourceMappingsRequest::OAIAddDraftAppVersionResourceMappingsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddDraftAppVersionResourceMappingsRequest::OAIAddDraftAppVersionResourceMappingsRequest() {
    this->initializeModel();
}

OAIAddDraftAppVersionResourceMappingsRequest::~OAIAddDraftAppVersionResourceMappingsRequest() {}

void OAIAddDraftAppVersionResourceMappingsRequest::initializeModel() {

    m_app_arn_isSet = false;
    m_app_arn_isValid = false;

    m_resource_mappings_isSet = false;
    m_resource_mappings_isValid = false;
}

void OAIAddDraftAppVersionResourceMappingsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddDraftAppVersionResourceMappingsRequest::fromJsonObject(QJsonObject json) {

    m_app_arn_isValid = ::OpenAPI::fromJsonValue(m_app_arn, json[QString("appArn")]);
    m_app_arn_isSet = !json[QString("appArn")].isNull() && m_app_arn_isValid;

    m_resource_mappings_isValid = ::OpenAPI::fromJsonValue(m_resource_mappings, json[QString("resourceMappings")]);
    m_resource_mappings_isSet = !json[QString("resourceMappings")].isNull() && m_resource_mappings_isValid;
}

QString OAIAddDraftAppVersionResourceMappingsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddDraftAppVersionResourceMappingsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_app_arn_isSet) {
        obj.insert(QString("appArn"), ::OpenAPI::toJsonValue(m_app_arn));
    }
    if (m_resource_mappings.isSet()) {
        obj.insert(QString("resourceMappings"), ::OpenAPI::toJsonValue(m_resource_mappings));
    }
    return obj;
}

QString OAIAddDraftAppVersionResourceMappingsRequest::getAppArn() const {
    return m_app_arn;
}
void OAIAddDraftAppVersionResourceMappingsRequest::setAppArn(const QString &app_arn) {
    m_app_arn = app_arn;
    m_app_arn_isSet = true;
}

bool OAIAddDraftAppVersionResourceMappingsRequest::is_app_arn_Set() const{
    return m_app_arn_isSet;
}

bool OAIAddDraftAppVersionResourceMappingsRequest::is_app_arn_Valid() const{
    return m_app_arn_isValid;
}

QList OAIAddDraftAppVersionResourceMappingsRequest::getResourceMappings() const {
    return m_resource_mappings;
}
void OAIAddDraftAppVersionResourceMappingsRequest::setResourceMappings(const QList &resource_mappings) {
    m_resource_mappings = resource_mappings;
    m_resource_mappings_isSet = true;
}

bool OAIAddDraftAppVersionResourceMappingsRequest::is_resource_mappings_Set() const{
    return m_resource_mappings_isSet;
}

bool OAIAddDraftAppVersionResourceMappingsRequest::is_resource_mappings_Valid() const{
    return m_resource_mappings_isValid;
}

bool OAIAddDraftAppVersionResourceMappingsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_mappings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddDraftAppVersionResourceMappingsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_arn_isValid && m_resource_mappings_isValid && true;
}

} // namespace OpenAPI
