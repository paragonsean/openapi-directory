/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAppsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAppsResponse::OAIListAppsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAppsResponse::OAIListAppsResponse() {
    this->initializeModel();
}

OAIListAppsResponse::~OAIListAppsResponse() {}

void OAIListAppsResponse::initializeModel() {

    m_app_summaries_isSet = false;
    m_app_summaries_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListAppsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAppsResponse::fromJsonObject(QJsonObject json) {

    m_app_summaries_isValid = ::OpenAPI::fromJsonValue(m_app_summaries, json[QString("appSummaries")]);
    m_app_summaries_isSet = !json[QString("appSummaries")].isNull() && m_app_summaries_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListAppsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAppsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_app_summaries.isSet()) {
        obj.insert(QString("appSummaries"), ::OpenAPI::toJsonValue(m_app_summaries));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListAppsResponse::getAppSummaries() const {
    return m_app_summaries;
}
void OAIListAppsResponse::setAppSummaries(const QList &app_summaries) {
    m_app_summaries = app_summaries;
    m_app_summaries_isSet = true;
}

bool OAIListAppsResponse::is_app_summaries_Set() const{
    return m_app_summaries_isSet;
}

bool OAIListAppsResponse::is_app_summaries_Valid() const{
    return m_app_summaries_isValid;
}

QString OAIListAppsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListAppsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListAppsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListAppsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListAppsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_summaries.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAppsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_summaries_isValid && true;
}

} // namespace OpenAPI
