/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateAppVersionResourceRequest_logicalResourceId.h
 *
 * 
 */

#ifndef OAICreateAppVersionResourceRequest_logicalResourceId_H
#define OAICreateAppVersionResourceRequest_logicalResourceId_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateAppVersionResourceRequest_logicalResourceId : public OAIObject {
public:
    OAICreateAppVersionResourceRequest_logicalResourceId();
    OAICreateAppVersionResourceRequest_logicalResourceId(QString json);
    ~OAICreateAppVersionResourceRequest_logicalResourceId() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEksSourceName() const;
    void setEksSourceName(const QString &eks_source_name);
    bool is_eks_source_name_Set() const;
    bool is_eks_source_name_Valid() const;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    QString getLogicalStackName() const;
    void setLogicalStackName(const QString &logical_stack_name);
    bool is_logical_stack_name_Set() const;
    bool is_logical_stack_name_Valid() const;

    QString getResourceGroupName() const;
    void setResourceGroupName(const QString &resource_group_name);
    bool is_resource_group_name_Set() const;
    bool is_resource_group_name_Valid() const;

    QString getTerraformSourceName() const;
    void setTerraformSourceName(const QString &terraform_source_name);
    bool is_terraform_source_name_Set() const;
    bool is_terraform_source_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_eks_source_name;
    bool m_eks_source_name_isSet;
    bool m_eks_source_name_isValid;

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    QString m_logical_stack_name;
    bool m_logical_stack_name_isSet;
    bool m_logical_stack_name_isValid;

    QString m_resource_group_name;
    bool m_resource_group_name_isSet;
    bool m_resource_group_name_isValid;

    QString m_terraform_source_name;
    bool m_terraform_source_name_isSet;
    bool m_terraform_source_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateAppVersionResourceRequest_logicalResourceId)

#endif // OAICreateAppVersionResourceRequest_logicalResourceId_H
