/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListAppVersionResourcesResponse.h
 *
 * 
 */

#ifndef OAIListAppVersionResourcesResponse_H
#define OAIListAppVersionResourcesResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIListAppVersionResourcesResponse : public OAIObject {
public:
    OAIListAppVersionResourcesResponse();
    OAIListAppVersionResourcesResponse(QString json);
    ~OAIListAppVersionResourcesResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    QList getPhysicalResources() const;
    void setPhysicalResources(const QList &physical_resources);
    bool is_physical_resources_Set() const;
    bool is_physical_resources_Valid() const;

    QString getResolutionId() const;
    void setResolutionId(const QString &resolution_id);
    bool is_resolution_id_Set() const;
    bool is_resolution_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    QList m_physical_resources;
    bool m_physical_resources_isSet;
    bool m_physical_resources_isValid;

    QString m_resolution_id;
    bool m_resolution_id_isSet;
    bool m_resolution_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListAppVersionResourcesResponse)

#endif // OAIListAppVersionResourcesResponse_H
