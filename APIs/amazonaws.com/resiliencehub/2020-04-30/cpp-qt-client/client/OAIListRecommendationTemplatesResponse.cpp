/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListRecommendationTemplatesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListRecommendationTemplatesResponse::OAIListRecommendationTemplatesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListRecommendationTemplatesResponse::OAIListRecommendationTemplatesResponse() {
    this->initializeModel();
}

OAIListRecommendationTemplatesResponse::~OAIListRecommendationTemplatesResponse() {}

void OAIListRecommendationTemplatesResponse::initializeModel() {

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_recommendation_templates_isSet = false;
    m_recommendation_templates_isValid = false;
}

void OAIListRecommendationTemplatesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListRecommendationTemplatesResponse::fromJsonObject(QJsonObject json) {

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;

    m_recommendation_templates_isValid = ::OpenAPI::fromJsonValue(m_recommendation_templates, json[QString("recommendationTemplates")]);
    m_recommendation_templates_isSet = !json[QString("recommendationTemplates")].isNull() && m_recommendation_templates_isValid;
}

QString OAIListRecommendationTemplatesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListRecommendationTemplatesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_recommendation_templates.isSet()) {
        obj.insert(QString("recommendationTemplates"), ::OpenAPI::toJsonValue(m_recommendation_templates));
    }
    return obj;
}

QString OAIListRecommendationTemplatesResponse::getNextToken() const {
    return m_next_token;
}
void OAIListRecommendationTemplatesResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListRecommendationTemplatesResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListRecommendationTemplatesResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

QList OAIListRecommendationTemplatesResponse::getRecommendationTemplates() const {
    return m_recommendation_templates;
}
void OAIListRecommendationTemplatesResponse::setRecommendationTemplates(const QList &recommendation_templates) {
    m_recommendation_templates = recommendation_templates;
    m_recommendation_templates_isSet = true;
}

bool OAIListRecommendationTemplatesResponse::is_recommendation_templates_Set() const{
    return m_recommendation_templates_isSet;
}

bool OAIListRecommendationTemplatesResponse::is_recommendation_templates_Valid() const{
    return m_recommendation_templates_isValid;
}

bool OAIListRecommendationTemplatesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_templates.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListRecommendationTemplatesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
