/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecommendationTemplate_templatesLocation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecommendationTemplate_templatesLocation::OAIRecommendationTemplate_templatesLocation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecommendationTemplate_templatesLocation::OAIRecommendationTemplate_templatesLocation() {
    this->initializeModel();
}

OAIRecommendationTemplate_templatesLocation::~OAIRecommendationTemplate_templatesLocation() {}

void OAIRecommendationTemplate_templatesLocation::initializeModel() {

    m_bucket_isSet = false;
    m_bucket_isValid = false;

    m_prefix_isSet = false;
    m_prefix_isValid = false;
}

void OAIRecommendationTemplate_templatesLocation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecommendationTemplate_templatesLocation::fromJsonObject(QJsonObject json) {

    m_bucket_isValid = ::OpenAPI::fromJsonValue(m_bucket, json[QString("bucket")]);
    m_bucket_isSet = !json[QString("bucket")].isNull() && m_bucket_isValid;

    m_prefix_isValid = ::OpenAPI::fromJsonValue(m_prefix, json[QString("prefix")]);
    m_prefix_isSet = !json[QString("prefix")].isNull() && m_prefix_isValid;
}

QString OAIRecommendationTemplate_templatesLocation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecommendationTemplate_templatesLocation::asJsonObject() const {
    QJsonObject obj;
    if (m_bucket_isSet) {
        obj.insert(QString("bucket"), ::OpenAPI::toJsonValue(m_bucket));
    }
    if (m_prefix_isSet) {
        obj.insert(QString("prefix"), ::OpenAPI::toJsonValue(m_prefix));
    }
    return obj;
}

QString OAIRecommendationTemplate_templatesLocation::getBucket() const {
    return m_bucket;
}
void OAIRecommendationTemplate_templatesLocation::setBucket(const QString &bucket) {
    m_bucket = bucket;
    m_bucket_isSet = true;
}

bool OAIRecommendationTemplate_templatesLocation::is_bucket_Set() const{
    return m_bucket_isSet;
}

bool OAIRecommendationTemplate_templatesLocation::is_bucket_Valid() const{
    return m_bucket_isValid;
}

QString OAIRecommendationTemplate_templatesLocation::getPrefix() const {
    return m_prefix;
}
void OAIRecommendationTemplate_templatesLocation::setPrefix(const QString &prefix) {
    m_prefix = prefix;
    m_prefix_isSet = true;
}

bool OAIRecommendationTemplate_templatesLocation::is_prefix_Set() const{
    return m_prefix_isSet;
}

bool OAIRecommendationTemplate_templatesLocation::is_prefix_Valid() const{
    return m_prefix_isValid;
}

bool OAIRecommendationTemplate_templatesLocation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bucket_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecommendationTemplate_templatesLocation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
