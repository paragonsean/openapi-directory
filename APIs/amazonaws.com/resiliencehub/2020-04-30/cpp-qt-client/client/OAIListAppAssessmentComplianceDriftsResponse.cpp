/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAppAssessmentComplianceDriftsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAppAssessmentComplianceDriftsResponse::OAIListAppAssessmentComplianceDriftsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAppAssessmentComplianceDriftsResponse::OAIListAppAssessmentComplianceDriftsResponse() {
    this->initializeModel();
}

OAIListAppAssessmentComplianceDriftsResponse::~OAIListAppAssessmentComplianceDriftsResponse() {}

void OAIListAppAssessmentComplianceDriftsResponse::initializeModel() {

    m_compliance_drifts_isSet = false;
    m_compliance_drifts_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListAppAssessmentComplianceDriftsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAppAssessmentComplianceDriftsResponse::fromJsonObject(QJsonObject json) {

    m_compliance_drifts_isValid = ::OpenAPI::fromJsonValue(m_compliance_drifts, json[QString("complianceDrifts")]);
    m_compliance_drifts_isSet = !json[QString("complianceDrifts")].isNull() && m_compliance_drifts_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListAppAssessmentComplianceDriftsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAppAssessmentComplianceDriftsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_compliance_drifts.isSet()) {
        obj.insert(QString("complianceDrifts"), ::OpenAPI::toJsonValue(m_compliance_drifts));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListAppAssessmentComplianceDriftsResponse::getComplianceDrifts() const {
    return m_compliance_drifts;
}
void OAIListAppAssessmentComplianceDriftsResponse::setComplianceDrifts(const QList &compliance_drifts) {
    m_compliance_drifts = compliance_drifts;
    m_compliance_drifts_isSet = true;
}

bool OAIListAppAssessmentComplianceDriftsResponse::is_compliance_drifts_Set() const{
    return m_compliance_drifts_isSet;
}

bool OAIListAppAssessmentComplianceDriftsResponse::is_compliance_drifts_Valid() const{
    return m_compliance_drifts_isValid;
}

QString OAIListAppAssessmentComplianceDriftsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListAppAssessmentComplianceDriftsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListAppAssessmentComplianceDriftsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListAppAssessmentComplianceDriftsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListAppAssessmentComplianceDriftsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_compliance_drifts.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAppAssessmentComplianceDriftsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_compliance_drifts_isValid && true;
}

} // namespace OpenAPI
