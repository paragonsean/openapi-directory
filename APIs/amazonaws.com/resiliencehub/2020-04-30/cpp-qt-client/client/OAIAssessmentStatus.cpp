/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssessmentStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssessmentStatus::OAIAssessmentStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssessmentStatus::OAIAssessmentStatus() {
    this->initializeModel();
}

OAIAssessmentStatus::~OAIAssessmentStatus() {}

void OAIAssessmentStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAssessmentStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAssessmentStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Pending", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssessmentStatus::PENDING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("InProgress", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssessmentStatus::INPROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Failed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssessmentStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Success", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssessmentStatus::SUCCESS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAssessmentStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAssessmentStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAssessmentStatus::PENDING:
            val = "Pending";
            break;
        case eOAIAssessmentStatus::INPROGRESS:
            val = "InProgress";
            break;
        case eOAIAssessmentStatus::FAILED:
            val = "Failed";
            break;
        case eOAIAssessmentStatus::SUCCESS:
            val = "Success";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAssessmentStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAssessmentStatus::eOAIAssessmentStatus OAIAssessmentStatus::getValue() const {
    return m_value;
}

void OAIAssessmentStatus::setValue(const OAIAssessmentStatus::eOAIAssessmentStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAssessmentStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIAssessmentStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
