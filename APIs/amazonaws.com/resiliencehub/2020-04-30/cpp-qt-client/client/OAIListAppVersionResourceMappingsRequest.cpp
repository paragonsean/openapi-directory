/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAppVersionResourceMappingsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAppVersionResourceMappingsRequest::OAIListAppVersionResourceMappingsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAppVersionResourceMappingsRequest::OAIListAppVersionResourceMappingsRequest() {
    this->initializeModel();
}

OAIListAppVersionResourceMappingsRequest::~OAIListAppVersionResourceMappingsRequest() {}

void OAIListAppVersionResourceMappingsRequest::initializeModel() {

    m_app_arn_isSet = false;
    m_app_arn_isValid = false;

    m_app_version_isSet = false;
    m_app_version_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListAppVersionResourceMappingsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAppVersionResourceMappingsRequest::fromJsonObject(QJsonObject json) {

    m_app_arn_isValid = ::OpenAPI::fromJsonValue(m_app_arn, json[QString("appArn")]);
    m_app_arn_isSet = !json[QString("appArn")].isNull() && m_app_arn_isValid;

    m_app_version_isValid = ::OpenAPI::fromJsonValue(m_app_version, json[QString("appVersion")]);
    m_app_version_isSet = !json[QString("appVersion")].isNull() && m_app_version_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("maxResults")]);
    m_max_results_isSet = !json[QString("maxResults")].isNull() && m_max_results_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListAppVersionResourceMappingsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAppVersionResourceMappingsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_app_arn_isSet) {
        obj.insert(QString("appArn"), ::OpenAPI::toJsonValue(m_app_arn));
    }
    if (m_app_version_isSet) {
        obj.insert(QString("appVersion"), ::OpenAPI::toJsonValue(m_app_version));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("maxResults"), ::OpenAPI::toJsonValue(m_max_results));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QString OAIListAppVersionResourceMappingsRequest::getAppArn() const {
    return m_app_arn;
}
void OAIListAppVersionResourceMappingsRequest::setAppArn(const QString &app_arn) {
    m_app_arn = app_arn;
    m_app_arn_isSet = true;
}

bool OAIListAppVersionResourceMappingsRequest::is_app_arn_Set() const{
    return m_app_arn_isSet;
}

bool OAIListAppVersionResourceMappingsRequest::is_app_arn_Valid() const{
    return m_app_arn_isValid;
}

QString OAIListAppVersionResourceMappingsRequest::getAppVersion() const {
    return m_app_version;
}
void OAIListAppVersionResourceMappingsRequest::setAppVersion(const QString &app_version) {
    m_app_version = app_version;
    m_app_version_isSet = true;
}

bool OAIListAppVersionResourceMappingsRequest::is_app_version_Set() const{
    return m_app_version_isSet;
}

bool OAIListAppVersionResourceMappingsRequest::is_app_version_Valid() const{
    return m_app_version_isValid;
}

qint32 OAIListAppVersionResourceMappingsRequest::getMaxResults() const {
    return m_max_results;
}
void OAIListAppVersionResourceMappingsRequest::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAIListAppVersionResourceMappingsRequest::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIListAppVersionResourceMappingsRequest::is_max_results_Valid() const{
    return m_max_results_isValid;
}

QString OAIListAppVersionResourceMappingsRequest::getNextToken() const {
    return m_next_token;
}
void OAIListAppVersionResourceMappingsRequest::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListAppVersionResourceMappingsRequest::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListAppVersionResourceMappingsRequest::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListAppVersionResourceMappingsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAppVersionResourceMappingsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_arn_isValid && m_app_version_isValid && true;
}

} // namespace OpenAPI
