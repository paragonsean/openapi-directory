/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppComponentCompliance_resiliencyScore.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppComponentCompliance_resiliencyScore::OAIAppComponentCompliance_resiliencyScore(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppComponentCompliance_resiliencyScore::OAIAppComponentCompliance_resiliencyScore() {
    this->initializeModel();
}

OAIAppComponentCompliance_resiliencyScore::~OAIAppComponentCompliance_resiliencyScore() {}

void OAIAppComponentCompliance_resiliencyScore::initializeModel() {

    m_disruption_score_isSet = false;
    m_disruption_score_isValid = false;

    m_score_isSet = false;
    m_score_isValid = false;
}

void OAIAppComponentCompliance_resiliencyScore::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppComponentCompliance_resiliencyScore::fromJsonObject(QJsonObject json) {

    m_disruption_score_isValid = ::OpenAPI::fromJsonValue(m_disruption_score, json[QString("disruptionScore")]);
    m_disruption_score_isSet = !json[QString("disruptionScore")].isNull() && m_disruption_score_isValid;

    m_score_isValid = ::OpenAPI::fromJsonValue(m_score, json[QString("score")]);
    m_score_isSet = !json[QString("score")].isNull() && m_score_isValid;
}

QString OAIAppComponentCompliance_resiliencyScore::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppComponentCompliance_resiliencyScore::asJsonObject() const {
    QJsonObject obj;
    if (m_disruption_score.isSet()) {
        obj.insert(QString("disruptionScore"), ::OpenAPI::toJsonValue(m_disruption_score));
    }
    if (m_score_isSet) {
        obj.insert(QString("score"), ::OpenAPI::toJsonValue(m_score));
    }
    return obj;
}

QMap OAIAppComponentCompliance_resiliencyScore::getDisruptionScore() const {
    return m_disruption_score;
}
void OAIAppComponentCompliance_resiliencyScore::setDisruptionScore(const QMap &disruption_score) {
    m_disruption_score = disruption_score;
    m_disruption_score_isSet = true;
}

bool OAIAppComponentCompliance_resiliencyScore::is_disruption_score_Set() const{
    return m_disruption_score_isSet;
}

bool OAIAppComponentCompliance_resiliencyScore::is_disruption_score_Valid() const{
    return m_disruption_score_isValid;
}

double OAIAppComponentCompliance_resiliencyScore::getScore() const {
    return m_score;
}
void OAIAppComponentCompliance_resiliencyScore::setScore(const double &score) {
    m_score = score;
    m_score_isSet = true;
}

bool OAIAppComponentCompliance_resiliencyScore::is_score_Set() const{
    return m_score_isSet;
}

bool OAIAppComponentCompliance_resiliencyScore::is_score_Valid() const{
    return m_score_isValid;
}

bool OAIAppComponentCompliance_resiliencyScore::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disruption_score.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppComponentCompliance_resiliencyScore::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_disruption_score_isValid && m_score_isValid && true;
}

} // namespace OpenAPI
