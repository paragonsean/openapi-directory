/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConfigRecommendation.h
 *
 * Defines a recommendation configuration.
 */

#ifndef OAIConfigRecommendation_H
#define OAIConfigRecommendation_H

#include <QJsonObject>

#include "OAIAppComponentCompliance_cost.h"
#include "OAIConfigRecommendationOptimizationType.h"
#include "OAIHaArchitecture.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAppComponentCompliance_cost;

class OAIConfigRecommendation : public OAIObject {
public:
    OAIConfigRecommendation();
    OAIConfigRecommendation(QString json);
    ~OAIConfigRecommendation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppComponentName() const;
    void setAppComponentName(const QString &app_component_name);
    bool is_app_component_name_Set() const;
    bool is_app_component_name_Valid() const;

    QMap getCompliance() const;
    void setCompliance(const QMap &compliance);
    bool is_compliance_Set() const;
    bool is_compliance_Valid() const;

    OAIAppComponentCompliance_cost getCost() const;
    void setCost(const OAIAppComponentCompliance_cost &cost);
    bool is_cost_Set() const;
    bool is_cost_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIHaArchitecture getHaArchitecture() const;
    void setHaArchitecture(const OAIHaArchitecture &ha_architecture);
    bool is_ha_architecture_Set() const;
    bool is_ha_architecture_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIConfigRecommendationOptimizationType getOptimizationType() const;
    void setOptimizationType(const OAIConfigRecommendationOptimizationType &optimization_type);
    bool is_optimization_type_Set() const;
    bool is_optimization_type_Valid() const;

    QMap getRecommendationCompliance() const;
    void setRecommendationCompliance(const QMap &recommendation_compliance);
    bool is_recommendation_compliance_Set() const;
    bool is_recommendation_compliance_Valid() const;

    QString getReferenceId() const;
    void setReferenceId(const QString &reference_id);
    bool is_reference_id_Set() const;
    bool is_reference_id_Valid() const;

    QList getSuggestedChanges() const;
    void setSuggestedChanges(const QList &suggested_changes);
    bool is_suggested_changes_Set() const;
    bool is_suggested_changes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_component_name;
    bool m_app_component_name_isSet;
    bool m_app_component_name_isValid;

    QMap m_compliance;
    bool m_compliance_isSet;
    bool m_compliance_isValid;

    OAIAppComponentCompliance_cost m_cost;
    bool m_cost_isSet;
    bool m_cost_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIHaArchitecture m_ha_architecture;
    bool m_ha_architecture_isSet;
    bool m_ha_architecture_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIConfigRecommendationOptimizationType m_optimization_type;
    bool m_optimization_type_isSet;
    bool m_optimization_type_isValid;

    QMap m_recommendation_compliance;
    bool m_recommendation_compliance_isSet;
    bool m_recommendation_compliance_isValid;

    QString m_reference_id;
    bool m_reference_id_isSet;
    bool m_reference_id_isValid;

    QList m_suggested_changes;
    bool m_suggested_changes_isSet;
    bool m_suggested_changes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConfigRecommendation)

#endif // OAIConfigRecommendation_H
