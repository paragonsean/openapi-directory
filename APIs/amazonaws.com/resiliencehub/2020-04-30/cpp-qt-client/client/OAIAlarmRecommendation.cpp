/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlarmRecommendation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlarmRecommendation::OAIAlarmRecommendation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlarmRecommendation::OAIAlarmRecommendation() {
    this->initializeModel();
}

OAIAlarmRecommendation::~OAIAlarmRecommendation() {}

void OAIAlarmRecommendation::initializeModel() {

    m_app_component_name_isSet = false;
    m_app_component_name_isValid = false;

    m_app_component_names_isSet = false;
    m_app_component_names_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_prerequisite_isSet = false;
    m_prerequisite_isValid = false;

    m_recommendation_id_isSet = false;
    m_recommendation_id_isValid = false;

    m_reference_id_isSet = false;
    m_reference_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIAlarmRecommendation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlarmRecommendation::fromJsonObject(QJsonObject json) {

    m_app_component_name_isValid = ::OpenAPI::fromJsonValue(m_app_component_name, json[QString("appComponentName")]);
    m_app_component_name_isSet = !json[QString("appComponentName")].isNull() && m_app_component_name_isValid;

    m_app_component_names_isValid = ::OpenAPI::fromJsonValue(m_app_component_names, json[QString("appComponentNames")]);
    m_app_component_names_isSet = !json[QString("appComponentNames")].isNull() && m_app_component_names_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_prerequisite_isValid = ::OpenAPI::fromJsonValue(m_prerequisite, json[QString("prerequisite")]);
    m_prerequisite_isSet = !json[QString("prerequisite")].isNull() && m_prerequisite_isValid;

    m_recommendation_id_isValid = ::OpenAPI::fromJsonValue(m_recommendation_id, json[QString("recommendationId")]);
    m_recommendation_id_isSet = !json[QString("recommendationId")].isNull() && m_recommendation_id_isValid;

    m_reference_id_isValid = ::OpenAPI::fromJsonValue(m_reference_id, json[QString("referenceId")]);
    m_reference_id_isSet = !json[QString("referenceId")].isNull() && m_reference_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIAlarmRecommendation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlarmRecommendation::asJsonObject() const {
    QJsonObject obj;
    if (m_app_component_name_isSet) {
        obj.insert(QString("appComponentName"), ::OpenAPI::toJsonValue(m_app_component_name));
    }
    if (m_app_component_names.isSet()) {
        obj.insert(QString("appComponentNames"), ::OpenAPI::toJsonValue(m_app_component_names));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_items.isSet()) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_prerequisite_isSet) {
        obj.insert(QString("prerequisite"), ::OpenAPI::toJsonValue(m_prerequisite));
    }
    if (m_recommendation_id_isSet) {
        obj.insert(QString("recommendationId"), ::OpenAPI::toJsonValue(m_recommendation_id));
    }
    if (m_reference_id_isSet) {
        obj.insert(QString("referenceId"), ::OpenAPI::toJsonValue(m_reference_id));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIAlarmRecommendation::getAppComponentName() const {
    return m_app_component_name;
}
void OAIAlarmRecommendation::setAppComponentName(const QString &app_component_name) {
    m_app_component_name = app_component_name;
    m_app_component_name_isSet = true;
}

bool OAIAlarmRecommendation::is_app_component_name_Set() const{
    return m_app_component_name_isSet;
}

bool OAIAlarmRecommendation::is_app_component_name_Valid() const{
    return m_app_component_name_isValid;
}

QList OAIAlarmRecommendation::getAppComponentNames() const {
    return m_app_component_names;
}
void OAIAlarmRecommendation::setAppComponentNames(const QList &app_component_names) {
    m_app_component_names = app_component_names;
    m_app_component_names_isSet = true;
}

bool OAIAlarmRecommendation::is_app_component_names_Set() const{
    return m_app_component_names_isSet;
}

bool OAIAlarmRecommendation::is_app_component_names_Valid() const{
    return m_app_component_names_isValid;
}

QString OAIAlarmRecommendation::getDescription() const {
    return m_description;
}
void OAIAlarmRecommendation::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAlarmRecommendation::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAlarmRecommendation::is_description_Valid() const{
    return m_description_isValid;
}

QList OAIAlarmRecommendation::getItems() const {
    return m_items;
}
void OAIAlarmRecommendation::setItems(const QList &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIAlarmRecommendation::is_items_Set() const{
    return m_items_isSet;
}

bool OAIAlarmRecommendation::is_items_Valid() const{
    return m_items_isValid;
}

QString OAIAlarmRecommendation::getName() const {
    return m_name;
}
void OAIAlarmRecommendation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAlarmRecommendation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAlarmRecommendation::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAlarmRecommendation::getPrerequisite() const {
    return m_prerequisite;
}
void OAIAlarmRecommendation::setPrerequisite(const QString &prerequisite) {
    m_prerequisite = prerequisite;
    m_prerequisite_isSet = true;
}

bool OAIAlarmRecommendation::is_prerequisite_Set() const{
    return m_prerequisite_isSet;
}

bool OAIAlarmRecommendation::is_prerequisite_Valid() const{
    return m_prerequisite_isValid;
}

QString OAIAlarmRecommendation::getRecommendationId() const {
    return m_recommendation_id;
}
void OAIAlarmRecommendation::setRecommendationId(const QString &recommendation_id) {
    m_recommendation_id = recommendation_id;
    m_recommendation_id_isSet = true;
}

bool OAIAlarmRecommendation::is_recommendation_id_Set() const{
    return m_recommendation_id_isSet;
}

bool OAIAlarmRecommendation::is_recommendation_id_Valid() const{
    return m_recommendation_id_isValid;
}

QString OAIAlarmRecommendation::getReferenceId() const {
    return m_reference_id;
}
void OAIAlarmRecommendation::setReferenceId(const QString &reference_id) {
    m_reference_id = reference_id;
    m_reference_id_isSet = true;
}

bool OAIAlarmRecommendation::is_reference_id_Set() const{
    return m_reference_id_isSet;
}

bool OAIAlarmRecommendation::is_reference_id_Valid() const{
    return m_reference_id_isValid;
}

OAIAlarmType OAIAlarmRecommendation::getType() const {
    return m_type;
}
void OAIAlarmRecommendation::setType(const OAIAlarmType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIAlarmRecommendation::is_type_Set() const{
    return m_type_isSet;
}

bool OAIAlarmRecommendation::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIAlarmRecommendation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_component_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_component_names.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prerequisite_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlarmRecommendation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_recommendation_id_isValid && m_reference_id_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
