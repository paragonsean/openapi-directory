/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssessmentInvoker.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssessmentInvoker::OAIAssessmentInvoker(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssessmentInvoker::OAIAssessmentInvoker() {
    this->initializeModel();
}

OAIAssessmentInvoker::~OAIAssessmentInvoker() {}

void OAIAssessmentInvoker::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAssessmentInvoker::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAssessmentInvoker::fromJson(QString jsonString) {
    
    if ( jsonString.compare("User", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssessmentInvoker::USER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("System", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssessmentInvoker::SYSTEM;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAssessmentInvoker::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAssessmentInvoker::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAssessmentInvoker::USER:
            val = "User";
            break;
        case eOAIAssessmentInvoker::SYSTEM:
            val = "System";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAssessmentInvoker::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAssessmentInvoker::eOAIAssessmentInvoker OAIAssessmentInvoker::getValue() const {
    return m_value;
}

void OAIAssessmentInvoker::setValue(const OAIAssessmentInvoker::eOAIAssessmentInvoker& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAssessmentInvoker::isSet() const {
    
    return m_value_isSet;
}

bool OAIAssessmentInvoker::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
