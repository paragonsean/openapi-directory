/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchUpdateRecommendationStatus_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchUpdateRecommendationStatus_request::OAIBatchUpdateRecommendationStatus_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchUpdateRecommendationStatus_request::OAIBatchUpdateRecommendationStatus_request() {
    this->initializeModel();
}

OAIBatchUpdateRecommendationStatus_request::~OAIBatchUpdateRecommendationStatus_request() {}

void OAIBatchUpdateRecommendationStatus_request::initializeModel() {

    m_app_arn_isSet = false;
    m_app_arn_isValid = false;

    m_request_entries_isSet = false;
    m_request_entries_isValid = false;
}

void OAIBatchUpdateRecommendationStatus_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchUpdateRecommendationStatus_request::fromJsonObject(QJsonObject json) {

    m_app_arn_isValid = ::OpenAPI::fromJsonValue(m_app_arn, json[QString("appArn")]);
    m_app_arn_isSet = !json[QString("appArn")].isNull() && m_app_arn_isValid;

    m_request_entries_isValid = ::OpenAPI::fromJsonValue(m_request_entries, json[QString("requestEntries")]);
    m_request_entries_isSet = !json[QString("requestEntries")].isNull() && m_request_entries_isValid;
}

QString OAIBatchUpdateRecommendationStatus_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchUpdateRecommendationStatus_request::asJsonObject() const {
    QJsonObject obj;
    if (m_app_arn_isSet) {
        obj.insert(QString("appArn"), ::OpenAPI::toJsonValue(m_app_arn));
    }
    if (m_request_entries.size() > 0) {
        obj.insert(QString("requestEntries"), ::OpenAPI::toJsonValue(m_request_entries));
    }
    return obj;
}

QString OAIBatchUpdateRecommendationStatus_request::getAppArn() const {
    return m_app_arn;
}
void OAIBatchUpdateRecommendationStatus_request::setAppArn(const QString &app_arn) {
    m_app_arn = app_arn;
    m_app_arn_isSet = true;
}

bool OAIBatchUpdateRecommendationStatus_request::is_app_arn_Set() const{
    return m_app_arn_isSet;
}

bool OAIBatchUpdateRecommendationStatus_request::is_app_arn_Valid() const{
    return m_app_arn_isValid;
}

QList<OAIUpdateRecommendationStatusRequestEntry> OAIBatchUpdateRecommendationStatus_request::getRequestEntries() const {
    return m_request_entries;
}
void OAIBatchUpdateRecommendationStatus_request::setRequestEntries(const QList<OAIUpdateRecommendationStatusRequestEntry> &request_entries) {
    m_request_entries = request_entries;
    m_request_entries_isSet = true;
}

bool OAIBatchUpdateRecommendationStatus_request::is_request_entries_Set() const{
    return m_request_entries_isSet;
}

bool OAIBatchUpdateRecommendationStatus_request::is_request_entries_Valid() const{
    return m_request_entries_isValid;
}

bool OAIBatchUpdateRecommendationStatus_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_entries.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchUpdateRecommendationStatus_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_arn_isValid && m_request_entries_isValid && true;
}

} // namespace OpenAPI
