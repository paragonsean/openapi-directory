/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAppComponentCompliancesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAppComponentCompliancesResponse::OAIListAppComponentCompliancesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAppComponentCompliancesResponse::OAIListAppComponentCompliancesResponse() {
    this->initializeModel();
}

OAIListAppComponentCompliancesResponse::~OAIListAppComponentCompliancesResponse() {}

void OAIListAppComponentCompliancesResponse::initializeModel() {

    m_component_compliances_isSet = false;
    m_component_compliances_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListAppComponentCompliancesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAppComponentCompliancesResponse::fromJsonObject(QJsonObject json) {

    m_component_compliances_isValid = ::OpenAPI::fromJsonValue(m_component_compliances, json[QString("componentCompliances")]);
    m_component_compliances_isSet = !json[QString("componentCompliances")].isNull() && m_component_compliances_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListAppComponentCompliancesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAppComponentCompliancesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_component_compliances.isSet()) {
        obj.insert(QString("componentCompliances"), ::OpenAPI::toJsonValue(m_component_compliances));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListAppComponentCompliancesResponse::getComponentCompliances() const {
    return m_component_compliances;
}
void OAIListAppComponentCompliancesResponse::setComponentCompliances(const QList &component_compliances) {
    m_component_compliances = component_compliances;
    m_component_compliances_isSet = true;
}

bool OAIListAppComponentCompliancesResponse::is_component_compliances_Set() const{
    return m_component_compliances_isSet;
}

bool OAIListAppComponentCompliancesResponse::is_component_compliances_Valid() const{
    return m_component_compliances_isValid;
}

QString OAIListAppComponentCompliancesResponse::getNextToken() const {
    return m_next_token;
}
void OAIListAppComponentCompliancesResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListAppComponentCompliancesResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListAppComponentCompliancesResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListAppComponentCompliancesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_component_compliances.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAppComponentCompliancesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_component_compliances_isValid && true;
}

} // namespace OpenAPI
