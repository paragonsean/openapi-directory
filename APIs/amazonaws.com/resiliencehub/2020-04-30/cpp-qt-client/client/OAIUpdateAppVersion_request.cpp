/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateAppVersion_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateAppVersion_request::OAIUpdateAppVersion_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateAppVersion_request::OAIUpdateAppVersion_request() {
    this->initializeModel();
}

OAIUpdateAppVersion_request::~OAIUpdateAppVersion_request() {}

void OAIUpdateAppVersion_request::initializeModel() {

    m_additional_info_isSet = false;
    m_additional_info_isValid = false;

    m_app_arn_isSet = false;
    m_app_arn_isValid = false;
}

void OAIUpdateAppVersion_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateAppVersion_request::fromJsonObject(QJsonObject json) {

    if(json["additionalInfo"].isObject()){
        auto varmap = json["additionalInfo"].toObject().toVariantMap();
        m_additional_info_isValid = true;
        if(varmap.count() > 0){
            for(auto val : varmap.keys()){
                QList<QString> item;
                auto jval = QJsonValue::fromVariant(varmap.value(val));
                m_additional_info_isValid &= ::OpenAPI::fromJsonValue(item, jval);
                m_additional_info_isSet &= !jval.isNull() && m_additional_info_isValid;
                m_additional_info.insert(m_additional_info.end(), val, item);
            }
        }
    }

    m_app_arn_isValid = ::OpenAPI::fromJsonValue(m_app_arn, json[QString("appArn")]);
    m_app_arn_isSet = !json[QString("appArn")].isNull() && m_app_arn_isValid;
}

QString OAIUpdateAppVersion_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateAppVersion_request::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_info.size() > 0) {
        
        obj.insert(QString("additionalInfo"), toJsonValue(m_additional_info));
    }
    if (m_app_arn_isSet) {
        obj.insert(QString("appArn"), ::OpenAPI::toJsonValue(m_app_arn));
    }
    return obj;
}

QMap<QString, QList> OAIUpdateAppVersion_request::getAdditionalInfo() const {
    return m_additional_info;
}
void OAIUpdateAppVersion_request::setAdditionalInfo(const QMap<QString, QList> &additional_info) {
    m_additional_info = additional_info;
    m_additional_info_isSet = true;
}

bool OAIUpdateAppVersion_request::is_additional_info_Set() const{
    return m_additional_info_isSet;
}

bool OAIUpdateAppVersion_request::is_additional_info_Valid() const{
    return m_additional_info_isValid;
}

QString OAIUpdateAppVersion_request::getAppArn() const {
    return m_app_arn;
}
void OAIUpdateAppVersion_request::setAppArn(const QString &app_arn) {
    m_app_arn = app_arn;
    m_app_arn_isSet = true;
}

bool OAIUpdateAppVersion_request::is_app_arn_Set() const{
    return m_app_arn_isSet;
}

bool OAIUpdateAppVersion_request::is_app_arn_Valid() const{
    return m_app_arn_isValid;
}

bool OAIUpdateAppVersion_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_info.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateAppVersion_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_arn_isValid && true;
}

} // namespace OpenAPI
