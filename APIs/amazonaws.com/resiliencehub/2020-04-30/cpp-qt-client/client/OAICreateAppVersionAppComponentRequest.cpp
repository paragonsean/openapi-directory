/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAppVersionAppComponentRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAppVersionAppComponentRequest::OAICreateAppVersionAppComponentRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAppVersionAppComponentRequest::OAICreateAppVersionAppComponentRequest() {
    this->initializeModel();
}

OAICreateAppVersionAppComponentRequest::~OAICreateAppVersionAppComponentRequest() {}

void OAICreateAppVersionAppComponentRequest::initializeModel() {

    m_additional_info_isSet = false;
    m_additional_info_isValid = false;

    m_app_arn_isSet = false;
    m_app_arn_isValid = false;

    m_client_token_isSet = false;
    m_client_token_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAICreateAppVersionAppComponentRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAppVersionAppComponentRequest::fromJsonObject(QJsonObject json) {

    m_additional_info_isValid = ::OpenAPI::fromJsonValue(m_additional_info, json[QString("additionalInfo")]);
    m_additional_info_isSet = !json[QString("additionalInfo")].isNull() && m_additional_info_isValid;

    m_app_arn_isValid = ::OpenAPI::fromJsonValue(m_app_arn, json[QString("appArn")]);
    m_app_arn_isSet = !json[QString("appArn")].isNull() && m_app_arn_isValid;

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("clientToken")]);
    m_client_token_isSet = !json[QString("clientToken")].isNull() && m_client_token_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAICreateAppVersionAppComponentRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAppVersionAppComponentRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_info.isSet()) {
        obj.insert(QString("additionalInfo"), ::OpenAPI::toJsonValue(m_additional_info));
    }
    if (m_app_arn_isSet) {
        obj.insert(QString("appArn"), ::OpenAPI::toJsonValue(m_app_arn));
    }
    if (m_client_token_isSet) {
        obj.insert(QString("clientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QMap OAICreateAppVersionAppComponentRequest::getAdditionalInfo() const {
    return m_additional_info;
}
void OAICreateAppVersionAppComponentRequest::setAdditionalInfo(const QMap &additional_info) {
    m_additional_info = additional_info;
    m_additional_info_isSet = true;
}

bool OAICreateAppVersionAppComponentRequest::is_additional_info_Set() const{
    return m_additional_info_isSet;
}

bool OAICreateAppVersionAppComponentRequest::is_additional_info_Valid() const{
    return m_additional_info_isValid;
}

QString OAICreateAppVersionAppComponentRequest::getAppArn() const {
    return m_app_arn;
}
void OAICreateAppVersionAppComponentRequest::setAppArn(const QString &app_arn) {
    m_app_arn = app_arn;
    m_app_arn_isSet = true;
}

bool OAICreateAppVersionAppComponentRequest::is_app_arn_Set() const{
    return m_app_arn_isSet;
}

bool OAICreateAppVersionAppComponentRequest::is_app_arn_Valid() const{
    return m_app_arn_isValid;
}

QString OAICreateAppVersionAppComponentRequest::getClientToken() const {
    return m_client_token;
}
void OAICreateAppVersionAppComponentRequest::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAICreateAppVersionAppComponentRequest::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAICreateAppVersionAppComponentRequest::is_client_token_Valid() const{
    return m_client_token_isValid;
}

QString OAICreateAppVersionAppComponentRequest::getId() const {
    return m_id;
}
void OAICreateAppVersionAppComponentRequest::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreateAppVersionAppComponentRequest::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreateAppVersionAppComponentRequest::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICreateAppVersionAppComponentRequest::getName() const {
    return m_name;
}
void OAICreateAppVersionAppComponentRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateAppVersionAppComponentRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateAppVersionAppComponentRequest::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateAppVersionAppComponentRequest::getType() const {
    return m_type;
}
void OAICreateAppVersionAppComponentRequest::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICreateAppVersionAppComponentRequest::is_type_Set() const{
    return m_type_isSet;
}

bool OAICreateAppVersionAppComponentRequest::is_type_Valid() const{
    return m_type_isValid;
}

bool OAICreateAppVersionAppComponentRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAppVersionAppComponentRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_arn_isValid && m_name_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
