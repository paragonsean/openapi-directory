/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateRecommendationTemplate_request.h
 *
 * 
 */

#ifndef OAICreateRecommendationTemplate_request_H
#define OAICreateRecommendationTemplate_request_H

#include <QJsonObject>

#include "OAIRenderRecommendationType.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateRecommendationTemplate_request : public OAIObject {
public:
    OAICreateRecommendationTemplate_request();
    OAICreateRecommendationTemplate_request(QString json);
    ~OAICreateRecommendationTemplate_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssessmentArn() const;
    void setAssessmentArn(const QString &assessment_arn);
    bool is_assessment_arn_Set() const;
    bool is_assessment_arn_Valid() const;

    QString getBucketName() const;
    void setBucketName(const QString &bucket_name);
    bool is_bucket_name_Set() const;
    bool is_bucket_name_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getRecommendationIds() const;
    void setRecommendationIds(const QList<QString> &recommendation_ids);
    bool is_recommendation_ids_Set() const;
    bool is_recommendation_ids_Valid() const;

    QList<OAIRenderRecommendationType> getRecommendationTypes() const;
    void setRecommendationTypes(const QList<OAIRenderRecommendationType> &recommendation_types);
    bool is_recommendation_types_Set() const;
    bool is_recommendation_types_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_assessment_arn;
    bool m_assessment_arn_isSet;
    bool m_assessment_arn_isValid;

    QString m_bucket_name;
    bool m_bucket_name_isSet;
    bool m_bucket_name_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_recommendation_ids;
    bool m_recommendation_ids_isSet;
    bool m_recommendation_ids_isValid;

    QList<OAIRenderRecommendationType> m_recommendation_types;
    bool m_recommendation_types_isSet;
    bool m_recommendation_types_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateRecommendationTemplate_request)

#endif // OAICreateRecommendationTemplate_request_H
