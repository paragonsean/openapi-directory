/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeResiliencyPolicyResponse_policy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeResiliencyPolicyResponse_policy::OAIDescribeResiliencyPolicyResponse_policy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeResiliencyPolicyResponse_policy::OAIDescribeResiliencyPolicyResponse_policy() {
    this->initializeModel();
}

OAIDescribeResiliencyPolicyResponse_policy::~OAIDescribeResiliencyPolicyResponse_policy() {}

void OAIDescribeResiliencyPolicyResponse_policy::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_data_location_constraint_isSet = false;
    m_data_location_constraint_isValid = false;

    m_estimated_cost_tier_isSet = false;
    m_estimated_cost_tier_isValid = false;

    m_policy_isSet = false;
    m_policy_isValid = false;

    m_policy_arn_isSet = false;
    m_policy_arn_isValid = false;

    m_policy_description_isSet = false;
    m_policy_description_isValid = false;

    m_policy_name_isSet = false;
    m_policy_name_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_tier_isSet = false;
    m_tier_isValid = false;
}

void OAIDescribeResiliencyPolicyResponse_policy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeResiliencyPolicyResponse_policy::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_data_location_constraint_isValid = ::OpenAPI::fromJsonValue(m_data_location_constraint, json[QString("dataLocationConstraint")]);
    m_data_location_constraint_isSet = !json[QString("dataLocationConstraint")].isNull() && m_data_location_constraint_isValid;

    m_estimated_cost_tier_isValid = ::OpenAPI::fromJsonValue(m_estimated_cost_tier, json[QString("estimatedCostTier")]);
    m_estimated_cost_tier_isSet = !json[QString("estimatedCostTier")].isNull() && m_estimated_cost_tier_isValid;

    m_policy_isValid = ::OpenAPI::fromJsonValue(m_policy, json[QString("policy")]);
    m_policy_isSet = !json[QString("policy")].isNull() && m_policy_isValid;

    m_policy_arn_isValid = ::OpenAPI::fromJsonValue(m_policy_arn, json[QString("policyArn")]);
    m_policy_arn_isSet = !json[QString("policyArn")].isNull() && m_policy_arn_isValid;

    m_policy_description_isValid = ::OpenAPI::fromJsonValue(m_policy_description, json[QString("policyDescription")]);
    m_policy_description_isSet = !json[QString("policyDescription")].isNull() && m_policy_description_isValid;

    m_policy_name_isValid = ::OpenAPI::fromJsonValue(m_policy_name, json[QString("policyName")]);
    m_policy_name_isSet = !json[QString("policyName")].isNull() && m_policy_name_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_tier_isValid = ::OpenAPI::fromJsonValue(m_tier, json[QString("tier")]);
    m_tier_isSet = !json[QString("tier")].isNull() && m_tier_isValid;
}

QString OAIDescribeResiliencyPolicyResponse_policy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeResiliencyPolicyResponse_policy::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_data_location_constraint.isSet()) {
        obj.insert(QString("dataLocationConstraint"), ::OpenAPI::toJsonValue(m_data_location_constraint));
    }
    if (m_estimated_cost_tier.isSet()) {
        obj.insert(QString("estimatedCostTier"), ::OpenAPI::toJsonValue(m_estimated_cost_tier));
    }
    if (m_policy.isSet()) {
        obj.insert(QString("policy"), ::OpenAPI::toJsonValue(m_policy));
    }
    if (m_policy_arn_isSet) {
        obj.insert(QString("policyArn"), ::OpenAPI::toJsonValue(m_policy_arn));
    }
    if (m_policy_description_isSet) {
        obj.insert(QString("policyDescription"), ::OpenAPI::toJsonValue(m_policy_description));
    }
    if (m_policy_name_isSet) {
        obj.insert(QString("policyName"), ::OpenAPI::toJsonValue(m_policy_name));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_tier.isSet()) {
        obj.insert(QString("tier"), ::OpenAPI::toJsonValue(m_tier));
    }
    return obj;
}

QDateTime OAIDescribeResiliencyPolicyResponse_policy::getCreationTime() const {
    return m_creation_time;
}
void OAIDescribeResiliencyPolicyResponse_policy::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

OAIDataLocationConstraint OAIDescribeResiliencyPolicyResponse_policy::getDataLocationConstraint() const {
    return m_data_location_constraint;
}
void OAIDescribeResiliencyPolicyResponse_policy::setDataLocationConstraint(const OAIDataLocationConstraint &data_location_constraint) {
    m_data_location_constraint = data_location_constraint;
    m_data_location_constraint_isSet = true;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_data_location_constraint_Set() const{
    return m_data_location_constraint_isSet;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_data_location_constraint_Valid() const{
    return m_data_location_constraint_isValid;
}

OAIEstimatedCostTier OAIDescribeResiliencyPolicyResponse_policy::getEstimatedCostTier() const {
    return m_estimated_cost_tier;
}
void OAIDescribeResiliencyPolicyResponse_policy::setEstimatedCostTier(const OAIEstimatedCostTier &estimated_cost_tier) {
    m_estimated_cost_tier = estimated_cost_tier;
    m_estimated_cost_tier_isSet = true;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_estimated_cost_tier_Set() const{
    return m_estimated_cost_tier_isSet;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_estimated_cost_tier_Valid() const{
    return m_estimated_cost_tier_isValid;
}

QMap OAIDescribeResiliencyPolicyResponse_policy::getPolicy() const {
    return m_policy;
}
void OAIDescribeResiliencyPolicyResponse_policy::setPolicy(const QMap &policy) {
    m_policy = policy;
    m_policy_isSet = true;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_policy_Set() const{
    return m_policy_isSet;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_policy_Valid() const{
    return m_policy_isValid;
}

QString OAIDescribeResiliencyPolicyResponse_policy::getPolicyArn() const {
    return m_policy_arn;
}
void OAIDescribeResiliencyPolicyResponse_policy::setPolicyArn(const QString &policy_arn) {
    m_policy_arn = policy_arn;
    m_policy_arn_isSet = true;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_policy_arn_Set() const{
    return m_policy_arn_isSet;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_policy_arn_Valid() const{
    return m_policy_arn_isValid;
}

QString OAIDescribeResiliencyPolicyResponse_policy::getPolicyDescription() const {
    return m_policy_description;
}
void OAIDescribeResiliencyPolicyResponse_policy::setPolicyDescription(const QString &policy_description) {
    m_policy_description = policy_description;
    m_policy_description_isSet = true;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_policy_description_Set() const{
    return m_policy_description_isSet;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_policy_description_Valid() const{
    return m_policy_description_isValid;
}

QString OAIDescribeResiliencyPolicyResponse_policy::getPolicyName() const {
    return m_policy_name;
}
void OAIDescribeResiliencyPolicyResponse_policy::setPolicyName(const QString &policy_name) {
    m_policy_name = policy_name;
    m_policy_name_isSet = true;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_policy_name_Set() const{
    return m_policy_name_isSet;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_policy_name_Valid() const{
    return m_policy_name_isValid;
}

QMap OAIDescribeResiliencyPolicyResponse_policy::getTags() const {
    return m_tags;
}
void OAIDescribeResiliencyPolicyResponse_policy::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_tags_Valid() const{
    return m_tags_isValid;
}

OAIResiliencyPolicyTier OAIDescribeResiliencyPolicyResponse_policy::getTier() const {
    return m_tier;
}
void OAIDescribeResiliencyPolicyResponse_policy::setTier(const OAIResiliencyPolicyTier &tier) {
    m_tier = tier;
    m_tier_isSet = true;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_tier_Set() const{
    return m_tier_isSet;
}

bool OAIDescribeResiliencyPolicyResponse_policy::is_tier_Valid() const{
    return m_tier_isValid;
}

bool OAIDescribeResiliencyPolicyResponse_policy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_location_constraint.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_estimated_cost_tier.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tier.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeResiliencyPolicyResponse_policy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
