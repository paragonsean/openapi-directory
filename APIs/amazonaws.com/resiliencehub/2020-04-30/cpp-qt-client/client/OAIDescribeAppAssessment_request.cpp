/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAppAssessment_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAppAssessment_request::OAIDescribeAppAssessment_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAppAssessment_request::OAIDescribeAppAssessment_request() {
    this->initializeModel();
}

OAIDescribeAppAssessment_request::~OAIDescribeAppAssessment_request() {}

void OAIDescribeAppAssessment_request::initializeModel() {

    m_assessment_arn_isSet = false;
    m_assessment_arn_isValid = false;
}

void OAIDescribeAppAssessment_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAppAssessment_request::fromJsonObject(QJsonObject json) {

    m_assessment_arn_isValid = ::OpenAPI::fromJsonValue(m_assessment_arn, json[QString("assessmentArn")]);
    m_assessment_arn_isSet = !json[QString("assessmentArn")].isNull() && m_assessment_arn_isValid;
}

QString OAIDescribeAppAssessment_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAppAssessment_request::asJsonObject() const {
    QJsonObject obj;
    if (m_assessment_arn_isSet) {
        obj.insert(QString("assessmentArn"), ::OpenAPI::toJsonValue(m_assessment_arn));
    }
    return obj;
}

QString OAIDescribeAppAssessment_request::getAssessmentArn() const {
    return m_assessment_arn;
}
void OAIDescribeAppAssessment_request::setAssessmentArn(const QString &assessment_arn) {
    m_assessment_arn = assessment_arn;
    m_assessment_arn_isSet = true;
}

bool OAIDescribeAppAssessment_request::is_assessment_arn_Set() const{
    return m_assessment_arn_isSet;
}

bool OAIDescribeAppAssessment_request::is_assessment_arn_Valid() const{
    return m_assessment_arn_isValid;
}

bool OAIDescribeAppAssessment_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assessment_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAppAssessment_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_assessment_arn_isValid && true;
}

} // namespace OpenAPI
