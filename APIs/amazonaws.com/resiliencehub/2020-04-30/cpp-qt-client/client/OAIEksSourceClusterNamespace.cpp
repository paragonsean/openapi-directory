/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEksSourceClusterNamespace.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEksSourceClusterNamespace::OAIEksSourceClusterNamespace(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEksSourceClusterNamespace::OAIEksSourceClusterNamespace() {
    this->initializeModel();
}

OAIEksSourceClusterNamespace::~OAIEksSourceClusterNamespace() {}

void OAIEksSourceClusterNamespace::initializeModel() {

    m_eks_cluster_arn_isSet = false;
    m_eks_cluster_arn_isValid = false;

    m_r_namespace_isSet = false;
    m_r_namespace_isValid = false;
}

void OAIEksSourceClusterNamespace::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEksSourceClusterNamespace::fromJsonObject(QJsonObject json) {

    m_eks_cluster_arn_isValid = ::OpenAPI::fromJsonValue(m_eks_cluster_arn, json[QString("eksClusterArn")]);
    m_eks_cluster_arn_isSet = !json[QString("eksClusterArn")].isNull() && m_eks_cluster_arn_isValid;

    m_r_namespace_isValid = ::OpenAPI::fromJsonValue(m_r_namespace, json[QString("namespace")]);
    m_r_namespace_isSet = !json[QString("namespace")].isNull() && m_r_namespace_isValid;
}

QString OAIEksSourceClusterNamespace::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEksSourceClusterNamespace::asJsonObject() const {
    QJsonObject obj;
    if (m_eks_cluster_arn_isSet) {
        obj.insert(QString("eksClusterArn"), ::OpenAPI::toJsonValue(m_eks_cluster_arn));
    }
    if (m_r_namespace_isSet) {
        obj.insert(QString("namespace"), ::OpenAPI::toJsonValue(m_r_namespace));
    }
    return obj;
}

QString OAIEksSourceClusterNamespace::getEksClusterArn() const {
    return m_eks_cluster_arn;
}
void OAIEksSourceClusterNamespace::setEksClusterArn(const QString &eks_cluster_arn) {
    m_eks_cluster_arn = eks_cluster_arn;
    m_eks_cluster_arn_isSet = true;
}

bool OAIEksSourceClusterNamespace::is_eks_cluster_arn_Set() const{
    return m_eks_cluster_arn_isSet;
}

bool OAIEksSourceClusterNamespace::is_eks_cluster_arn_Valid() const{
    return m_eks_cluster_arn_isValid;
}

QString OAIEksSourceClusterNamespace::getRNamespace() const {
    return m_r_namespace;
}
void OAIEksSourceClusterNamespace::setRNamespace(const QString &r_namespace) {
    m_r_namespace = r_namespace;
    m_r_namespace_isSet = true;
}

bool OAIEksSourceClusterNamespace::is_r_namespace_Set() const{
    return m_r_namespace_isSet;
}

bool OAIEksSourceClusterNamespace::is_r_namespace_Valid() const{
    return m_r_namespace_isValid;
}

bool OAIEksSourceClusterNamespace::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_eks_cluster_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_namespace_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEksSourceClusterNamespace::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_eks_cluster_arn_isValid && m_r_namespace_isValid && true;
}

} // namespace OpenAPI
