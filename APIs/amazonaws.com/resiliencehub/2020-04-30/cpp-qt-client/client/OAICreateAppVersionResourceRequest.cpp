/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAppVersionResourceRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAppVersionResourceRequest::OAICreateAppVersionResourceRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAppVersionResourceRequest::OAICreateAppVersionResourceRequest() {
    this->initializeModel();
}

OAICreateAppVersionResourceRequest::~OAICreateAppVersionResourceRequest() {}

void OAICreateAppVersionResourceRequest::initializeModel() {

    m_additional_info_isSet = false;
    m_additional_info_isValid = false;

    m_app_arn_isSet = false;
    m_app_arn_isValid = false;

    m_app_components_isSet = false;
    m_app_components_isValid = false;

    m_aws_account_id_isSet = false;
    m_aws_account_id_isValid = false;

    m_aws_region_isSet = false;
    m_aws_region_isValid = false;

    m_client_token_isSet = false;
    m_client_token_isValid = false;

    m_logical_resource_id_isSet = false;
    m_logical_resource_id_isValid = false;

    m_physical_resource_id_isSet = false;
    m_physical_resource_id_isValid = false;

    m_resource_name_isSet = false;
    m_resource_name_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;
}

void OAICreateAppVersionResourceRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAppVersionResourceRequest::fromJsonObject(QJsonObject json) {

    m_additional_info_isValid = ::OpenAPI::fromJsonValue(m_additional_info, json[QString("additionalInfo")]);
    m_additional_info_isSet = !json[QString("additionalInfo")].isNull() && m_additional_info_isValid;

    m_app_arn_isValid = ::OpenAPI::fromJsonValue(m_app_arn, json[QString("appArn")]);
    m_app_arn_isSet = !json[QString("appArn")].isNull() && m_app_arn_isValid;

    m_app_components_isValid = ::OpenAPI::fromJsonValue(m_app_components, json[QString("appComponents")]);
    m_app_components_isSet = !json[QString("appComponents")].isNull() && m_app_components_isValid;

    m_aws_account_id_isValid = ::OpenAPI::fromJsonValue(m_aws_account_id, json[QString("awsAccountId")]);
    m_aws_account_id_isSet = !json[QString("awsAccountId")].isNull() && m_aws_account_id_isValid;

    m_aws_region_isValid = ::OpenAPI::fromJsonValue(m_aws_region, json[QString("awsRegion")]);
    m_aws_region_isSet = !json[QString("awsRegion")].isNull() && m_aws_region_isValid;

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("clientToken")]);
    m_client_token_isSet = !json[QString("clientToken")].isNull() && m_client_token_isValid;

    m_logical_resource_id_isValid = ::OpenAPI::fromJsonValue(m_logical_resource_id, json[QString("logicalResourceId")]);
    m_logical_resource_id_isSet = !json[QString("logicalResourceId")].isNull() && m_logical_resource_id_isValid;

    m_physical_resource_id_isValid = ::OpenAPI::fromJsonValue(m_physical_resource_id, json[QString("physicalResourceId")]);
    m_physical_resource_id_isSet = !json[QString("physicalResourceId")].isNull() && m_physical_resource_id_isValid;

    m_resource_name_isValid = ::OpenAPI::fromJsonValue(m_resource_name, json[QString("resourceName")]);
    m_resource_name_isSet = !json[QString("resourceName")].isNull() && m_resource_name_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("resourceType")]);
    m_resource_type_isSet = !json[QString("resourceType")].isNull() && m_resource_type_isValid;
}

QString OAICreateAppVersionResourceRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAppVersionResourceRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_info.isSet()) {
        obj.insert(QString("additionalInfo"), ::OpenAPI::toJsonValue(m_additional_info));
    }
    if (m_app_arn_isSet) {
        obj.insert(QString("appArn"), ::OpenAPI::toJsonValue(m_app_arn));
    }
    if (m_app_components.isSet()) {
        obj.insert(QString("appComponents"), ::OpenAPI::toJsonValue(m_app_components));
    }
    if (m_aws_account_id_isSet) {
        obj.insert(QString("awsAccountId"), ::OpenAPI::toJsonValue(m_aws_account_id));
    }
    if (m_aws_region_isSet) {
        obj.insert(QString("awsRegion"), ::OpenAPI::toJsonValue(m_aws_region));
    }
    if (m_client_token_isSet) {
        obj.insert(QString("clientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    if (m_logical_resource_id.isSet()) {
        obj.insert(QString("logicalResourceId"), ::OpenAPI::toJsonValue(m_logical_resource_id));
    }
    if (m_physical_resource_id_isSet) {
        obj.insert(QString("physicalResourceId"), ::OpenAPI::toJsonValue(m_physical_resource_id));
    }
    if (m_resource_name_isSet) {
        obj.insert(QString("resourceName"), ::OpenAPI::toJsonValue(m_resource_name));
    }
    if (m_resource_type_isSet) {
        obj.insert(QString("resourceType"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    return obj;
}

QMap OAICreateAppVersionResourceRequest::getAdditionalInfo() const {
    return m_additional_info;
}
void OAICreateAppVersionResourceRequest::setAdditionalInfo(const QMap &additional_info) {
    m_additional_info = additional_info;
    m_additional_info_isSet = true;
}

bool OAICreateAppVersionResourceRequest::is_additional_info_Set() const{
    return m_additional_info_isSet;
}

bool OAICreateAppVersionResourceRequest::is_additional_info_Valid() const{
    return m_additional_info_isValid;
}

QString OAICreateAppVersionResourceRequest::getAppArn() const {
    return m_app_arn;
}
void OAICreateAppVersionResourceRequest::setAppArn(const QString &app_arn) {
    m_app_arn = app_arn;
    m_app_arn_isSet = true;
}

bool OAICreateAppVersionResourceRequest::is_app_arn_Set() const{
    return m_app_arn_isSet;
}

bool OAICreateAppVersionResourceRequest::is_app_arn_Valid() const{
    return m_app_arn_isValid;
}

QList OAICreateAppVersionResourceRequest::getAppComponents() const {
    return m_app_components;
}
void OAICreateAppVersionResourceRequest::setAppComponents(const QList &app_components) {
    m_app_components = app_components;
    m_app_components_isSet = true;
}

bool OAICreateAppVersionResourceRequest::is_app_components_Set() const{
    return m_app_components_isSet;
}

bool OAICreateAppVersionResourceRequest::is_app_components_Valid() const{
    return m_app_components_isValid;
}

QString OAICreateAppVersionResourceRequest::getAwsAccountId() const {
    return m_aws_account_id;
}
void OAICreateAppVersionResourceRequest::setAwsAccountId(const QString &aws_account_id) {
    m_aws_account_id = aws_account_id;
    m_aws_account_id_isSet = true;
}

bool OAICreateAppVersionResourceRequest::is_aws_account_id_Set() const{
    return m_aws_account_id_isSet;
}

bool OAICreateAppVersionResourceRequest::is_aws_account_id_Valid() const{
    return m_aws_account_id_isValid;
}

QString OAICreateAppVersionResourceRequest::getAwsRegion() const {
    return m_aws_region;
}
void OAICreateAppVersionResourceRequest::setAwsRegion(const QString &aws_region) {
    m_aws_region = aws_region;
    m_aws_region_isSet = true;
}

bool OAICreateAppVersionResourceRequest::is_aws_region_Set() const{
    return m_aws_region_isSet;
}

bool OAICreateAppVersionResourceRequest::is_aws_region_Valid() const{
    return m_aws_region_isValid;
}

QString OAICreateAppVersionResourceRequest::getClientToken() const {
    return m_client_token;
}
void OAICreateAppVersionResourceRequest::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAICreateAppVersionResourceRequest::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAICreateAppVersionResourceRequest::is_client_token_Valid() const{
    return m_client_token_isValid;
}

OAICreateAppVersionResourceRequest_logicalResourceId OAICreateAppVersionResourceRequest::getLogicalResourceId() const {
    return m_logical_resource_id;
}
void OAICreateAppVersionResourceRequest::setLogicalResourceId(const OAICreateAppVersionResourceRequest_logicalResourceId &logical_resource_id) {
    m_logical_resource_id = logical_resource_id;
    m_logical_resource_id_isSet = true;
}

bool OAICreateAppVersionResourceRequest::is_logical_resource_id_Set() const{
    return m_logical_resource_id_isSet;
}

bool OAICreateAppVersionResourceRequest::is_logical_resource_id_Valid() const{
    return m_logical_resource_id_isValid;
}

QString OAICreateAppVersionResourceRequest::getPhysicalResourceId() const {
    return m_physical_resource_id;
}
void OAICreateAppVersionResourceRequest::setPhysicalResourceId(const QString &physical_resource_id) {
    m_physical_resource_id = physical_resource_id;
    m_physical_resource_id_isSet = true;
}

bool OAICreateAppVersionResourceRequest::is_physical_resource_id_Set() const{
    return m_physical_resource_id_isSet;
}

bool OAICreateAppVersionResourceRequest::is_physical_resource_id_Valid() const{
    return m_physical_resource_id_isValid;
}

QString OAICreateAppVersionResourceRequest::getResourceName() const {
    return m_resource_name;
}
void OAICreateAppVersionResourceRequest::setResourceName(const QString &resource_name) {
    m_resource_name = resource_name;
    m_resource_name_isSet = true;
}

bool OAICreateAppVersionResourceRequest::is_resource_name_Set() const{
    return m_resource_name_isSet;
}

bool OAICreateAppVersionResourceRequest::is_resource_name_Valid() const{
    return m_resource_name_isValid;
}

QString OAICreateAppVersionResourceRequest::getResourceType() const {
    return m_resource_type;
}
void OAICreateAppVersionResourceRequest::setResourceType(const QString &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAICreateAppVersionResourceRequest::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAICreateAppVersionResourceRequest::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

bool OAICreateAppVersionResourceRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_components.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_aws_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aws_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logical_resource_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_physical_resource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAppVersionResourceRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_arn_isValid && m_app_components_isValid && m_logical_resource_id_isValid && m_physical_resource_id_isValid && m_resource_type_isValid && true;
}

} // namespace OpenAPI
