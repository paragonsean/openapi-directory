/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRemoveDraftAppVersionResourceMappings_request.h
 *
 * 
 */

#ifndef OAIRemoveDraftAppVersionResourceMappings_request_H
#define OAIRemoveDraftAppVersionResourceMappings_request_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRemoveDraftAppVersionResourceMappings_request : public OAIObject {
public:
    OAIRemoveDraftAppVersionResourceMappings_request();
    OAIRemoveDraftAppVersionResourceMappings_request(QString json);
    ~OAIRemoveDraftAppVersionResourceMappings_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppArn() const;
    void setAppArn(const QString &app_arn);
    bool is_app_arn_Set() const;
    bool is_app_arn_Valid() const;

    QList<QString> getAppRegistryAppNames() const;
    void setAppRegistryAppNames(const QList<QString> &app_registry_app_names);
    bool is_app_registry_app_names_Set() const;
    bool is_app_registry_app_names_Valid() const;

    QList<QString> getEksSourceNames() const;
    void setEksSourceNames(const QList<QString> &eks_source_names);
    bool is_eks_source_names_Set() const;
    bool is_eks_source_names_Valid() const;

    QList<QString> getLogicalStackNames() const;
    void setLogicalStackNames(const QList<QString> &logical_stack_names);
    bool is_logical_stack_names_Set() const;
    bool is_logical_stack_names_Valid() const;

    QList<QString> getResourceGroupNames() const;
    void setResourceGroupNames(const QList<QString> &resource_group_names);
    bool is_resource_group_names_Set() const;
    bool is_resource_group_names_Valid() const;

    QList<QString> getResourceNames() const;
    void setResourceNames(const QList<QString> &resource_names);
    bool is_resource_names_Set() const;
    bool is_resource_names_Valid() const;

    QList<QString> getTerraformSourceNames() const;
    void setTerraformSourceNames(const QList<QString> &terraform_source_names);
    bool is_terraform_source_names_Set() const;
    bool is_terraform_source_names_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_arn;
    bool m_app_arn_isSet;
    bool m_app_arn_isValid;

    QList<QString> m_app_registry_app_names;
    bool m_app_registry_app_names_isSet;
    bool m_app_registry_app_names_isValid;

    QList<QString> m_eks_source_names;
    bool m_eks_source_names_isSet;
    bool m_eks_source_names_isValid;

    QList<QString> m_logical_stack_names;
    bool m_logical_stack_names_isSet;
    bool m_logical_stack_names_isValid;

    QList<QString> m_resource_group_names;
    bool m_resource_group_names_isSet;
    bool m_resource_group_names_isValid;

    QList<QString> m_resource_names;
    bool m_resource_names_isSet;
    bool m_resource_names_isValid;

    QList<QString> m_terraform_source_names;
    bool m_terraform_source_names_isSet;
    bool m_terraform_source_names_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRemoveDraftAppVersionResourceMappings_request)

#endif // OAIRemoveDraftAppVersionResourceMappings_request_H
