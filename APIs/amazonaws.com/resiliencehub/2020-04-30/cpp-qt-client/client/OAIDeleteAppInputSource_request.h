/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteAppInputSource_request.h
 *
 * 
 */

#ifndef OAIDeleteAppInputSource_request_H
#define OAIDeleteAppInputSource_request_H

#include <QJsonObject>

#include "OAIDeleteAppInputSource_request_eksSourceClusterNamespace.h"
#include "OAIDeleteAppInputSource_request_terraformSource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeleteAppInputSource_request_eksSourceClusterNamespace;
class OAIDeleteAppInputSource_request_terraformSource;

class OAIDeleteAppInputSource_request : public OAIObject {
public:
    OAIDeleteAppInputSource_request();
    OAIDeleteAppInputSource_request(QString json);
    ~OAIDeleteAppInputSource_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppArn() const;
    void setAppArn(const QString &app_arn);
    bool is_app_arn_Set() const;
    bool is_app_arn_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    OAIDeleteAppInputSource_request_eksSourceClusterNamespace getEksSourceClusterNamespace() const;
    void setEksSourceClusterNamespace(const OAIDeleteAppInputSource_request_eksSourceClusterNamespace &eks_source_cluster_namespace);
    bool is_eks_source_cluster_namespace_Set() const;
    bool is_eks_source_cluster_namespace_Valid() const;

    QString getSourceArn() const;
    void setSourceArn(const QString &source_arn);
    bool is_source_arn_Set() const;
    bool is_source_arn_Valid() const;

    OAIDeleteAppInputSource_request_terraformSource getTerraformSource() const;
    void setTerraformSource(const OAIDeleteAppInputSource_request_terraformSource &terraform_source);
    bool is_terraform_source_Set() const;
    bool is_terraform_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_arn;
    bool m_app_arn_isSet;
    bool m_app_arn_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    OAIDeleteAppInputSource_request_eksSourceClusterNamespace m_eks_source_cluster_namespace;
    bool m_eks_source_cluster_namespace_isSet;
    bool m_eks_source_cluster_namespace_isValid;

    QString m_source_arn;
    bool m_source_arn_isSet;
    bool m_source_arn_isValid;

    OAIDeleteAppInputSource_request_terraformSource m_terraform_source;
    bool m_terraform_source_isSet;
    bool m_terraform_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteAppInputSource_request)

#endif // OAIDeleteAppInputSource_request_H
