/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateResiliencyPolicyResponse.h
 *
 * 
 */

#ifndef OAICreateResiliencyPolicyResponse_H
#define OAICreateResiliencyPolicyResponse_H

#include <QJsonObject>

#include "OAICreateResiliencyPolicyResponse_policy.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateResiliencyPolicyResponse_policy;

class OAICreateResiliencyPolicyResponse : public OAIObject {
public:
    OAICreateResiliencyPolicyResponse();
    OAICreateResiliencyPolicyResponse(QString json);
    ~OAICreateResiliencyPolicyResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateResiliencyPolicyResponse_policy getPolicy() const;
    void setPolicy(const OAICreateResiliencyPolicyResponse_policy &policy);
    bool is_policy_Set() const;
    bool is_policy_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateResiliencyPolicyResponse_policy m_policy;
    bool m_policy_isSet;
    bool m_policy_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateResiliencyPolicyResponse)

#endif // OAICreateResiliencyPolicyResponse_H
