/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecommendationComplianceStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecommendationComplianceStatus::OAIRecommendationComplianceStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecommendationComplianceStatus::OAIRecommendationComplianceStatus() {
    this->initializeModel();
}

OAIRecommendationComplianceStatus::~OAIRecommendationComplianceStatus() {}

void OAIRecommendationComplianceStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRecommendationComplianceStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRecommendationComplianceStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("BreachedUnattainable", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationComplianceStatus::BREACHEDUNATTAINABLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BreachedCanMeet", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationComplianceStatus::BREACHEDCANMEET;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MetCanImprove", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationComplianceStatus::METCANIMPROVE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRecommendationComplianceStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRecommendationComplianceStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRecommendationComplianceStatus::BREACHEDUNATTAINABLE:
            val = "BreachedUnattainable";
            break;
        case eOAIRecommendationComplianceStatus::BREACHEDCANMEET:
            val = "BreachedCanMeet";
            break;
        case eOAIRecommendationComplianceStatus::METCANIMPROVE:
            val = "MetCanImprove";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRecommendationComplianceStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRecommendationComplianceStatus::eOAIRecommendationComplianceStatus OAIRecommendationComplianceStatus::getValue() const {
    return m_value;
}

void OAIRecommendationComplianceStatus::setValue(const OAIRecommendationComplianceStatus::eOAIRecommendationComplianceStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRecommendationComplianceStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIRecommendationComplianceStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
