/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDisruptionCompliance.h
 *
 * Defines the compliance against the resiliency policy for a disruption.
 */

#ifndef OAIDisruptionCompliance_H
#define OAIDisruptionCompliance_H

#include <QJsonObject>

#include "OAIComplianceStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDisruptionCompliance : public OAIObject {
public:
    OAIDisruptionCompliance();
    OAIDisruptionCompliance(QString json);
    ~OAIDisruptionCompliance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAchievableRpoInSecs() const;
    void setAchievableRpoInSecs(const qint32 &achievable_rpo_in_secs);
    bool is_achievable_rpo_in_secs_Set() const;
    bool is_achievable_rpo_in_secs_Valid() const;

    qint32 getAchievableRtoInSecs() const;
    void setAchievableRtoInSecs(const qint32 &achievable_rto_in_secs);
    bool is_achievable_rto_in_secs_Set() const;
    bool is_achievable_rto_in_secs_Valid() const;

    OAIComplianceStatus getComplianceStatus() const;
    void setComplianceStatus(const OAIComplianceStatus &compliance_status);
    bool is_compliance_status_Set() const;
    bool is_compliance_status_Valid() const;

    qint32 getCurrentRpoInSecs() const;
    void setCurrentRpoInSecs(const qint32 &current_rpo_in_secs);
    bool is_current_rpo_in_secs_Set() const;
    bool is_current_rpo_in_secs_Valid() const;

    qint32 getCurrentRtoInSecs() const;
    void setCurrentRtoInSecs(const qint32 &current_rto_in_secs);
    bool is_current_rto_in_secs_Set() const;
    bool is_current_rto_in_secs_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getRpoDescription() const;
    void setRpoDescription(const QString &rpo_description);
    bool is_rpo_description_Set() const;
    bool is_rpo_description_Valid() const;

    QString getRpoReferenceId() const;
    void setRpoReferenceId(const QString &rpo_reference_id);
    bool is_rpo_reference_id_Set() const;
    bool is_rpo_reference_id_Valid() const;

    QString getRtoDescription() const;
    void setRtoDescription(const QString &rto_description);
    bool is_rto_description_Set() const;
    bool is_rto_description_Valid() const;

    QString getRtoReferenceId() const;
    void setRtoReferenceId(const QString &rto_reference_id);
    bool is_rto_reference_id_Set() const;
    bool is_rto_reference_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_achievable_rpo_in_secs;
    bool m_achievable_rpo_in_secs_isSet;
    bool m_achievable_rpo_in_secs_isValid;

    qint32 m_achievable_rto_in_secs;
    bool m_achievable_rto_in_secs_isSet;
    bool m_achievable_rto_in_secs_isValid;

    OAIComplianceStatus m_compliance_status;
    bool m_compliance_status_isSet;
    bool m_compliance_status_isValid;

    qint32 m_current_rpo_in_secs;
    bool m_current_rpo_in_secs_isSet;
    bool m_current_rpo_in_secs_isValid;

    qint32 m_current_rto_in_secs;
    bool m_current_rto_in_secs_isSet;
    bool m_current_rto_in_secs_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_rpo_description;
    bool m_rpo_description_isSet;
    bool m_rpo_description_isValid;

    QString m_rpo_reference_id;
    bool m_rpo_reference_id_isSet;
    bool m_rpo_reference_id_isValid;

    QString m_rto_description;
    bool m_rto_description_isSet;
    bool m_rto_description_isValid;

    QString m_rto_reference_id;
    bool m_rto_reference_id_isSet;
    bool m_rto_reference_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDisruptionCompliance)

#endif // OAIDisruptionCompliance_H
