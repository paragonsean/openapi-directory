/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAppVersionAppComponentResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAppVersionAppComponentResponse::OAICreateAppVersionAppComponentResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAppVersionAppComponentResponse::OAICreateAppVersionAppComponentResponse() {
    this->initializeModel();
}

OAICreateAppVersionAppComponentResponse::~OAICreateAppVersionAppComponentResponse() {}

void OAICreateAppVersionAppComponentResponse::initializeModel() {

    m_app_arn_isSet = false;
    m_app_arn_isValid = false;

    m_app_component_isSet = false;
    m_app_component_isValid = false;

    m_app_version_isSet = false;
    m_app_version_isValid = false;
}

void OAICreateAppVersionAppComponentResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAppVersionAppComponentResponse::fromJsonObject(QJsonObject json) {

    m_app_arn_isValid = ::OpenAPI::fromJsonValue(m_app_arn, json[QString("appArn")]);
    m_app_arn_isSet = !json[QString("appArn")].isNull() && m_app_arn_isValid;

    m_app_component_isValid = ::OpenAPI::fromJsonValue(m_app_component, json[QString("appComponent")]);
    m_app_component_isSet = !json[QString("appComponent")].isNull() && m_app_component_isValid;

    m_app_version_isValid = ::OpenAPI::fromJsonValue(m_app_version, json[QString("appVersion")]);
    m_app_version_isSet = !json[QString("appVersion")].isNull() && m_app_version_isValid;
}

QString OAICreateAppVersionAppComponentResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAppVersionAppComponentResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_app_arn_isSet) {
        obj.insert(QString("appArn"), ::OpenAPI::toJsonValue(m_app_arn));
    }
    if (m_app_component.isSet()) {
        obj.insert(QString("appComponent"), ::OpenAPI::toJsonValue(m_app_component));
    }
    if (m_app_version_isSet) {
        obj.insert(QString("appVersion"), ::OpenAPI::toJsonValue(m_app_version));
    }
    return obj;
}

QString OAICreateAppVersionAppComponentResponse::getAppArn() const {
    return m_app_arn;
}
void OAICreateAppVersionAppComponentResponse::setAppArn(const QString &app_arn) {
    m_app_arn = app_arn;
    m_app_arn_isSet = true;
}

bool OAICreateAppVersionAppComponentResponse::is_app_arn_Set() const{
    return m_app_arn_isSet;
}

bool OAICreateAppVersionAppComponentResponse::is_app_arn_Valid() const{
    return m_app_arn_isValid;
}

OAICreateAppVersionAppComponentResponse_appComponent OAICreateAppVersionAppComponentResponse::getAppComponent() const {
    return m_app_component;
}
void OAICreateAppVersionAppComponentResponse::setAppComponent(const OAICreateAppVersionAppComponentResponse_appComponent &app_component) {
    m_app_component = app_component;
    m_app_component_isSet = true;
}

bool OAICreateAppVersionAppComponentResponse::is_app_component_Set() const{
    return m_app_component_isSet;
}

bool OAICreateAppVersionAppComponentResponse::is_app_component_Valid() const{
    return m_app_component_isValid;
}

QString OAICreateAppVersionAppComponentResponse::getAppVersion() const {
    return m_app_version;
}
void OAICreateAppVersionAppComponentResponse::setAppVersion(const QString &app_version) {
    m_app_version = app_version;
    m_app_version_isSet = true;
}

bool OAICreateAppVersionAppComponentResponse::is_app_version_Set() const{
    return m_app_version_isSet;
}

bool OAICreateAppVersionAppComponentResponse::is_app_version_Valid() const{
    return m_app_version_isValid;
}

bool OAICreateAppVersionAppComponentResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_component.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAppVersionAppComponentResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_arn_isValid && m_app_version_isValid && true;
}

} // namespace OpenAPI
