/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListSopRecommendationsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListSopRecommendationsResponse::OAIListSopRecommendationsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListSopRecommendationsResponse::OAIListSopRecommendationsResponse() {
    this->initializeModel();
}

OAIListSopRecommendationsResponse::~OAIListSopRecommendationsResponse() {}

void OAIListSopRecommendationsResponse::initializeModel() {

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_sop_recommendations_isSet = false;
    m_sop_recommendations_isValid = false;
}

void OAIListSopRecommendationsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListSopRecommendationsResponse::fromJsonObject(QJsonObject json) {

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;

    m_sop_recommendations_isValid = ::OpenAPI::fromJsonValue(m_sop_recommendations, json[QString("sopRecommendations")]);
    m_sop_recommendations_isSet = !json[QString("sopRecommendations")].isNull() && m_sop_recommendations_isValid;
}

QString OAIListSopRecommendationsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListSopRecommendationsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_sop_recommendations.isSet()) {
        obj.insert(QString("sopRecommendations"), ::OpenAPI::toJsonValue(m_sop_recommendations));
    }
    return obj;
}

QString OAIListSopRecommendationsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListSopRecommendationsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListSopRecommendationsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListSopRecommendationsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

QList OAIListSopRecommendationsResponse::getSopRecommendations() const {
    return m_sop_recommendations;
}
void OAIListSopRecommendationsResponse::setSopRecommendations(const QList &sop_recommendations) {
    m_sop_recommendations = sop_recommendations;
    m_sop_recommendations_isSet = true;
}

bool OAIListSopRecommendationsResponse::is_sop_recommendations_Set() const{
    return m_sop_recommendations_isSet;
}

bool OAIListSopRecommendationsResponse::is_sop_recommendations_Valid() const{
    return m_sop_recommendations_isValid;
}

bool OAIListSopRecommendationsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sop_recommendations.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListSopRecommendationsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_sop_recommendations_isValid && true;
}

} // namespace OpenAPI
