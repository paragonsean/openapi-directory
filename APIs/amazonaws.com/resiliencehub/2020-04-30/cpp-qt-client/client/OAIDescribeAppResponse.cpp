/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAppResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAppResponse::OAIDescribeAppResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAppResponse::OAIDescribeAppResponse() {
    this->initializeModel();
}

OAIDescribeAppResponse::~OAIDescribeAppResponse() {}

void OAIDescribeAppResponse::initializeModel() {

    m_app_isSet = false;
    m_app_isValid = false;
}

void OAIDescribeAppResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAppResponse::fromJsonObject(QJsonObject json) {

    m_app_isValid = ::OpenAPI::fromJsonValue(m_app, json[QString("app")]);
    m_app_isSet = !json[QString("app")].isNull() && m_app_isValid;
}

QString OAIDescribeAppResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAppResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_app.isSet()) {
        obj.insert(QString("app"), ::OpenAPI::toJsonValue(m_app));
    }
    return obj;
}

OAIDescribeAppResponse_app OAIDescribeAppResponse::getApp() const {
    return m_app;
}
void OAIDescribeAppResponse::setApp(const OAIDescribeAppResponse_app &app) {
    m_app = app;
    m_app_isSet = true;
}

bool OAIDescribeAppResponse::is_app_Set() const{
    return m_app_isSet;
}

bool OAIDescribeAppResponse::is_app_Valid() const{
    return m_app_isValid;
}

bool OAIDescribeAppResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAppResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_isValid && true;
}

} // namespace OpenAPI
