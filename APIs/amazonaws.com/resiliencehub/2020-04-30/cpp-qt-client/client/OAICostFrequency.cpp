/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICostFrequency.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICostFrequency::OAICostFrequency(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICostFrequency::OAICostFrequency() {
    this->initializeModel();
}

OAICostFrequency::~OAICostFrequency() {}

void OAICostFrequency::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICostFrequency::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICostFrequency::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Hourly", Qt::CaseInsensitive) == 0) {
        m_value = eOAICostFrequency::HOURLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Daily", Qt::CaseInsensitive) == 0) {
        m_value = eOAICostFrequency::DAILY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Monthly", Qt::CaseInsensitive) == 0) {
        m_value = eOAICostFrequency::MONTHLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Yearly", Qt::CaseInsensitive) == 0) {
        m_value = eOAICostFrequency::YEARLY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICostFrequency::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICostFrequency::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICostFrequency::HOURLY:
            val = "Hourly";
            break;
        case eOAICostFrequency::DAILY:
            val = "Daily";
            break;
        case eOAICostFrequency::MONTHLY:
            val = "Monthly";
            break;
        case eOAICostFrequency::YEARLY:
            val = "Yearly";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICostFrequency::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICostFrequency::eOAICostFrequency OAICostFrequency::getValue() const {
    return m_value;
}

void OAICostFrequency::setValue(const OAICostFrequency::eOAICostFrequency& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICostFrequency::isSet() const {
    
    return m_value_isSet;
}

bool OAICostFrequency::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
