/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppSummary::OAIAppSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppSummary::OAIAppSummary() {
    this->initializeModel();
}

OAIAppSummary::~OAIAppSummary() {}

void OAIAppSummary::initializeModel() {

    m_app_arn_isSet = false;
    m_app_arn_isValid = false;

    m_assessment_schedule_isSet = false;
    m_assessment_schedule_isValid = false;

    m_compliance_status_isSet = false;
    m_compliance_status_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_drift_status_isSet = false;
    m_drift_status_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_resiliency_score_isSet = false;
    m_resiliency_score_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIAppSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppSummary::fromJsonObject(QJsonObject json) {

    m_app_arn_isValid = ::OpenAPI::fromJsonValue(m_app_arn, json[QString("appArn")]);
    m_app_arn_isSet = !json[QString("appArn")].isNull() && m_app_arn_isValid;

    m_assessment_schedule_isValid = ::OpenAPI::fromJsonValue(m_assessment_schedule, json[QString("assessmentSchedule")]);
    m_assessment_schedule_isSet = !json[QString("assessmentSchedule")].isNull() && m_assessment_schedule_isValid;

    m_compliance_status_isValid = ::OpenAPI::fromJsonValue(m_compliance_status, json[QString("complianceStatus")]);
    m_compliance_status_isSet = !json[QString("complianceStatus")].isNull() && m_compliance_status_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_drift_status_isValid = ::OpenAPI::fromJsonValue(m_drift_status, json[QString("driftStatus")]);
    m_drift_status_isSet = !json[QString("driftStatus")].isNull() && m_drift_status_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_resiliency_score_isValid = ::OpenAPI::fromJsonValue(m_resiliency_score, json[QString("resiliencyScore")]);
    m_resiliency_score_isSet = !json[QString("resiliencyScore")].isNull() && m_resiliency_score_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIAppSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_app_arn_isSet) {
        obj.insert(QString("appArn"), ::OpenAPI::toJsonValue(m_app_arn));
    }
    if (m_assessment_schedule.isSet()) {
        obj.insert(QString("assessmentSchedule"), ::OpenAPI::toJsonValue(m_assessment_schedule));
    }
    if (m_compliance_status.isSet()) {
        obj.insert(QString("complianceStatus"), ::OpenAPI::toJsonValue(m_compliance_status));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_drift_status.isSet()) {
        obj.insert(QString("driftStatus"), ::OpenAPI::toJsonValue(m_drift_status));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_resiliency_score_isSet) {
        obj.insert(QString("resiliencyScore"), ::OpenAPI::toJsonValue(m_resiliency_score));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIAppSummary::getAppArn() const {
    return m_app_arn;
}
void OAIAppSummary::setAppArn(const QString &app_arn) {
    m_app_arn = app_arn;
    m_app_arn_isSet = true;
}

bool OAIAppSummary::is_app_arn_Set() const{
    return m_app_arn_isSet;
}

bool OAIAppSummary::is_app_arn_Valid() const{
    return m_app_arn_isValid;
}

OAIAppAssessmentScheduleType OAIAppSummary::getAssessmentSchedule() const {
    return m_assessment_schedule;
}
void OAIAppSummary::setAssessmentSchedule(const OAIAppAssessmentScheduleType &assessment_schedule) {
    m_assessment_schedule = assessment_schedule;
    m_assessment_schedule_isSet = true;
}

bool OAIAppSummary::is_assessment_schedule_Set() const{
    return m_assessment_schedule_isSet;
}

bool OAIAppSummary::is_assessment_schedule_Valid() const{
    return m_assessment_schedule_isValid;
}

OAIAppComplianceStatusType OAIAppSummary::getComplianceStatus() const {
    return m_compliance_status;
}
void OAIAppSummary::setComplianceStatus(const OAIAppComplianceStatusType &compliance_status) {
    m_compliance_status = compliance_status;
    m_compliance_status_isSet = true;
}

bool OAIAppSummary::is_compliance_status_Set() const{
    return m_compliance_status_isSet;
}

bool OAIAppSummary::is_compliance_status_Valid() const{
    return m_compliance_status_isValid;
}

QDateTime OAIAppSummary::getCreationTime() const {
    return m_creation_time;
}
void OAIAppSummary::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIAppSummary::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIAppSummary::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAIAppSummary::getDescription() const {
    return m_description;
}
void OAIAppSummary::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAppSummary::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAppSummary::is_description_Valid() const{
    return m_description_isValid;
}

OAIAppDriftStatusType OAIAppSummary::getDriftStatus() const {
    return m_drift_status;
}
void OAIAppSummary::setDriftStatus(const OAIAppDriftStatusType &drift_status) {
    m_drift_status = drift_status;
    m_drift_status_isSet = true;
}

bool OAIAppSummary::is_drift_status_Set() const{
    return m_drift_status_isSet;
}

bool OAIAppSummary::is_drift_status_Valid() const{
    return m_drift_status_isValid;
}

QString OAIAppSummary::getName() const {
    return m_name;
}
void OAIAppSummary::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAppSummary::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAppSummary::is_name_Valid() const{
    return m_name_isValid;
}

double OAIAppSummary::getResiliencyScore() const {
    return m_resiliency_score;
}
void OAIAppSummary::setResiliencyScore(const double &resiliency_score) {
    m_resiliency_score = resiliency_score;
    m_resiliency_score_isSet = true;
}

bool OAIAppSummary::is_resiliency_score_Set() const{
    return m_resiliency_score_isSet;
}

bool OAIAppSummary::is_resiliency_score_Valid() const{
    return m_resiliency_score_isValid;
}

OAIAppStatusType OAIAppSummary::getStatus() const {
    return m_status;
}
void OAIAppSummary::setStatus(const OAIAppStatusType &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAppSummary::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAppSummary::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIAppSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assessment_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_compliance_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_drift_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resiliency_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_arn_isValid && m_creation_time_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
