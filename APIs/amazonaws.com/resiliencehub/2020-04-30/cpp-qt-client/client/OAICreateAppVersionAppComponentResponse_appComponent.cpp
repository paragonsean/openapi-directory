/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAppVersionAppComponentResponse_appComponent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAppVersionAppComponentResponse_appComponent::OAICreateAppVersionAppComponentResponse_appComponent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAppVersionAppComponentResponse_appComponent::OAICreateAppVersionAppComponentResponse_appComponent() {
    this->initializeModel();
}

OAICreateAppVersionAppComponentResponse_appComponent::~OAICreateAppVersionAppComponentResponse_appComponent() {}

void OAICreateAppVersionAppComponentResponse_appComponent::initializeModel() {

    m_additional_info_isSet = false;
    m_additional_info_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAICreateAppVersionAppComponentResponse_appComponent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAppVersionAppComponentResponse_appComponent::fromJsonObject(QJsonObject json) {

    m_additional_info_isValid = ::OpenAPI::fromJsonValue(m_additional_info, json[QString("additionalInfo")]);
    m_additional_info_isSet = !json[QString("additionalInfo")].isNull() && m_additional_info_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAICreateAppVersionAppComponentResponse_appComponent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAppVersionAppComponentResponse_appComponent::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_info.isSet()) {
        obj.insert(QString("additionalInfo"), ::OpenAPI::toJsonValue(m_additional_info));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QMap OAICreateAppVersionAppComponentResponse_appComponent::getAdditionalInfo() const {
    return m_additional_info;
}
void OAICreateAppVersionAppComponentResponse_appComponent::setAdditionalInfo(const QMap &additional_info) {
    m_additional_info = additional_info;
    m_additional_info_isSet = true;
}

bool OAICreateAppVersionAppComponentResponse_appComponent::is_additional_info_Set() const{
    return m_additional_info_isSet;
}

bool OAICreateAppVersionAppComponentResponse_appComponent::is_additional_info_Valid() const{
    return m_additional_info_isValid;
}

QString OAICreateAppVersionAppComponentResponse_appComponent::getId() const {
    return m_id;
}
void OAICreateAppVersionAppComponentResponse_appComponent::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreateAppVersionAppComponentResponse_appComponent::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreateAppVersionAppComponentResponse_appComponent::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICreateAppVersionAppComponentResponse_appComponent::getName() const {
    return m_name;
}
void OAICreateAppVersionAppComponentResponse_appComponent::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateAppVersionAppComponentResponse_appComponent::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateAppVersionAppComponentResponse_appComponent::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateAppVersionAppComponentResponse_appComponent::getType() const {
    return m_type;
}
void OAICreateAppVersionAppComponentResponse_appComponent::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICreateAppVersionAppComponentResponse_appComponent::is_type_Set() const{
    return m_type_isSet;
}

bool OAICreateAppVersionAppComponentResponse_appComponent::is_type_Valid() const{
    return m_type_isValid;
}

bool OAICreateAppVersionAppComponentResponse_appComponent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAppVersionAppComponentResponse_appComponent::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
