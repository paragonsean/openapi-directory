/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateRecommendationStatusRequestEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateRecommendationStatusRequestEntry::OAIUpdateRecommendationStatusRequestEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateRecommendationStatusRequestEntry::OAIUpdateRecommendationStatusRequestEntry() {
    this->initializeModel();
}

OAIUpdateRecommendationStatusRequestEntry::~OAIUpdateRecommendationStatusRequestEntry() {}

void OAIUpdateRecommendationStatusRequestEntry::initializeModel() {

    m_entry_id_isSet = false;
    m_entry_id_isValid = false;

    m_exclude_reason_isSet = false;
    m_exclude_reason_isValid = false;

    m_excluded_isSet = false;
    m_excluded_isValid = false;

    m_item_isSet = false;
    m_item_isValid = false;

    m_reference_id_isSet = false;
    m_reference_id_isValid = false;
}

void OAIUpdateRecommendationStatusRequestEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateRecommendationStatusRequestEntry::fromJsonObject(QJsonObject json) {

    m_entry_id_isValid = ::OpenAPI::fromJsonValue(m_entry_id, json[QString("entryId")]);
    m_entry_id_isSet = !json[QString("entryId")].isNull() && m_entry_id_isValid;

    m_exclude_reason_isValid = ::OpenAPI::fromJsonValue(m_exclude_reason, json[QString("excludeReason")]);
    m_exclude_reason_isSet = !json[QString("excludeReason")].isNull() && m_exclude_reason_isValid;

    m_excluded_isValid = ::OpenAPI::fromJsonValue(m_excluded, json[QString("excluded")]);
    m_excluded_isSet = !json[QString("excluded")].isNull() && m_excluded_isValid;

    m_item_isValid = ::OpenAPI::fromJsonValue(m_item, json[QString("item")]);
    m_item_isSet = !json[QString("item")].isNull() && m_item_isValid;

    m_reference_id_isValid = ::OpenAPI::fromJsonValue(m_reference_id, json[QString("referenceId")]);
    m_reference_id_isSet = !json[QString("referenceId")].isNull() && m_reference_id_isValid;
}

QString OAIUpdateRecommendationStatusRequestEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateRecommendationStatusRequestEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_entry_id_isSet) {
        obj.insert(QString("entryId"), ::OpenAPI::toJsonValue(m_entry_id));
    }
    if (m_exclude_reason.isSet()) {
        obj.insert(QString("excludeReason"), ::OpenAPI::toJsonValue(m_exclude_reason));
    }
    if (m_excluded_isSet) {
        obj.insert(QString("excluded"), ::OpenAPI::toJsonValue(m_excluded));
    }
    if (m_item.isSet()) {
        obj.insert(QString("item"), ::OpenAPI::toJsonValue(m_item));
    }
    if (m_reference_id_isSet) {
        obj.insert(QString("referenceId"), ::OpenAPI::toJsonValue(m_reference_id));
    }
    return obj;
}

QString OAIUpdateRecommendationStatusRequestEntry::getEntryId() const {
    return m_entry_id;
}
void OAIUpdateRecommendationStatusRequestEntry::setEntryId(const QString &entry_id) {
    m_entry_id = entry_id;
    m_entry_id_isSet = true;
}

bool OAIUpdateRecommendationStatusRequestEntry::is_entry_id_Set() const{
    return m_entry_id_isSet;
}

bool OAIUpdateRecommendationStatusRequestEntry::is_entry_id_Valid() const{
    return m_entry_id_isValid;
}

OAIExcludeRecommendationReason OAIUpdateRecommendationStatusRequestEntry::getExcludeReason() const {
    return m_exclude_reason;
}
void OAIUpdateRecommendationStatusRequestEntry::setExcludeReason(const OAIExcludeRecommendationReason &exclude_reason) {
    m_exclude_reason = exclude_reason;
    m_exclude_reason_isSet = true;
}

bool OAIUpdateRecommendationStatusRequestEntry::is_exclude_reason_Set() const{
    return m_exclude_reason_isSet;
}

bool OAIUpdateRecommendationStatusRequestEntry::is_exclude_reason_Valid() const{
    return m_exclude_reason_isValid;
}

bool OAIUpdateRecommendationStatusRequestEntry::getExcluded() const {
    return m_excluded;
}
void OAIUpdateRecommendationStatusRequestEntry::setExcluded(const bool &excluded) {
    m_excluded = excluded;
    m_excluded_isSet = true;
}

bool OAIUpdateRecommendationStatusRequestEntry::is_excluded_Set() const{
    return m_excluded_isSet;
}

bool OAIUpdateRecommendationStatusRequestEntry::is_excluded_Valid() const{
    return m_excluded_isValid;
}

OAIUpdateRecommendationStatusRequestEntry_item OAIUpdateRecommendationStatusRequestEntry::getItem() const {
    return m_item;
}
void OAIUpdateRecommendationStatusRequestEntry::setItem(const OAIUpdateRecommendationStatusRequestEntry_item &item) {
    m_item = item;
    m_item_isSet = true;
}

bool OAIUpdateRecommendationStatusRequestEntry::is_item_Set() const{
    return m_item_isSet;
}

bool OAIUpdateRecommendationStatusRequestEntry::is_item_Valid() const{
    return m_item_isValid;
}

QString OAIUpdateRecommendationStatusRequestEntry::getReferenceId() const {
    return m_reference_id;
}
void OAIUpdateRecommendationStatusRequestEntry::setReferenceId(const QString &reference_id) {
    m_reference_id = reference_id;
    m_reference_id_isSet = true;
}

bool OAIUpdateRecommendationStatusRequestEntry::is_reference_id_Set() const{
    return m_reference_id_isSet;
}

bool OAIUpdateRecommendationStatusRequestEntry::is_reference_id_Valid() const{
    return m_reference_id_isValid;
}

bool OAIUpdateRecommendationStatusRequestEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entry_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exclude_reason.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_excluded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateRecommendationStatusRequestEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_entry_id_isValid && m_excluded_isValid && m_item_isValid && m_reference_id_isValid && true;
}

} // namespace OpenAPI
