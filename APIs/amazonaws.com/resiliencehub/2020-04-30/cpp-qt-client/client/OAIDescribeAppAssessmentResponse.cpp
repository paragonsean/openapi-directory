/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAppAssessmentResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAppAssessmentResponse::OAIDescribeAppAssessmentResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAppAssessmentResponse::OAIDescribeAppAssessmentResponse() {
    this->initializeModel();
}

OAIDescribeAppAssessmentResponse::~OAIDescribeAppAssessmentResponse() {}

void OAIDescribeAppAssessmentResponse::initializeModel() {

    m_assessment_isSet = false;
    m_assessment_isValid = false;
}

void OAIDescribeAppAssessmentResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAppAssessmentResponse::fromJsonObject(QJsonObject json) {

    m_assessment_isValid = ::OpenAPI::fromJsonValue(m_assessment, json[QString("assessment")]);
    m_assessment_isSet = !json[QString("assessment")].isNull() && m_assessment_isValid;
}

QString OAIDescribeAppAssessmentResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAppAssessmentResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_assessment.isSet()) {
        obj.insert(QString("assessment"), ::OpenAPI::toJsonValue(m_assessment));
    }
    return obj;
}

OAIDescribeAppAssessmentResponse_assessment OAIDescribeAppAssessmentResponse::getAssessment() const {
    return m_assessment;
}
void OAIDescribeAppAssessmentResponse::setAssessment(const OAIDescribeAppAssessmentResponse_assessment &assessment) {
    m_assessment = assessment;
    m_assessment_isSet = true;
}

bool OAIDescribeAppAssessmentResponse::is_assessment_Set() const{
    return m_assessment_isSet;
}

bool OAIDescribeAppAssessmentResponse::is_assessment_Valid() const{
    return m_assessment_isValid;
}

bool OAIDescribeAppAssessmentResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assessment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAppAssessmentResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_assessment_isValid && true;
}

} // namespace OpenAPI
