/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddDraftAppVersionResourceMappings_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddDraftAppVersionResourceMappings_request::OAIAddDraftAppVersionResourceMappings_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddDraftAppVersionResourceMappings_request::OAIAddDraftAppVersionResourceMappings_request() {
    this->initializeModel();
}

OAIAddDraftAppVersionResourceMappings_request::~OAIAddDraftAppVersionResourceMappings_request() {}

void OAIAddDraftAppVersionResourceMappings_request::initializeModel() {

    m_app_arn_isSet = false;
    m_app_arn_isValid = false;

    m_resource_mappings_isSet = false;
    m_resource_mappings_isValid = false;
}

void OAIAddDraftAppVersionResourceMappings_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddDraftAppVersionResourceMappings_request::fromJsonObject(QJsonObject json) {

    m_app_arn_isValid = ::OpenAPI::fromJsonValue(m_app_arn, json[QString("appArn")]);
    m_app_arn_isSet = !json[QString("appArn")].isNull() && m_app_arn_isValid;

    m_resource_mappings_isValid = ::OpenAPI::fromJsonValue(m_resource_mappings, json[QString("resourceMappings")]);
    m_resource_mappings_isSet = !json[QString("resourceMappings")].isNull() && m_resource_mappings_isValid;
}

QString OAIAddDraftAppVersionResourceMappings_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddDraftAppVersionResourceMappings_request::asJsonObject() const {
    QJsonObject obj;
    if (m_app_arn_isSet) {
        obj.insert(QString("appArn"), ::OpenAPI::toJsonValue(m_app_arn));
    }
    if (m_resource_mappings.size() > 0) {
        obj.insert(QString("resourceMappings"), ::OpenAPI::toJsonValue(m_resource_mappings));
    }
    return obj;
}

QString OAIAddDraftAppVersionResourceMappings_request::getAppArn() const {
    return m_app_arn;
}
void OAIAddDraftAppVersionResourceMappings_request::setAppArn(const QString &app_arn) {
    m_app_arn = app_arn;
    m_app_arn_isSet = true;
}

bool OAIAddDraftAppVersionResourceMappings_request::is_app_arn_Set() const{
    return m_app_arn_isSet;
}

bool OAIAddDraftAppVersionResourceMappings_request::is_app_arn_Valid() const{
    return m_app_arn_isValid;
}

QList<OAIResourceMapping> OAIAddDraftAppVersionResourceMappings_request::getResourceMappings() const {
    return m_resource_mappings;
}
void OAIAddDraftAppVersionResourceMappings_request::setResourceMappings(const QList<OAIResourceMapping> &resource_mappings) {
    m_resource_mappings = resource_mappings;
    m_resource_mappings_isSet = true;
}

bool OAIAddDraftAppVersionResourceMappings_request::is_resource_mappings_Set() const{
    return m_resource_mappings_isSet;
}

bool OAIAddDraftAppVersionResourceMappings_request::is_resource_mappings_Valid() const{
    return m_resource_mappings_isValid;
}

bool OAIAddDraftAppVersionResourceMappings_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_mappings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddDraftAppVersionResourceMappings_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_arn_isValid && m_resource_mappings_isValid && true;
}

} // namespace OpenAPI
