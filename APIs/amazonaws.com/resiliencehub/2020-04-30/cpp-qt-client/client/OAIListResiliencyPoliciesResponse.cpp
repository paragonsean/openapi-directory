/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListResiliencyPoliciesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListResiliencyPoliciesResponse::OAIListResiliencyPoliciesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListResiliencyPoliciesResponse::OAIListResiliencyPoliciesResponse() {
    this->initializeModel();
}

OAIListResiliencyPoliciesResponse::~OAIListResiliencyPoliciesResponse() {}

void OAIListResiliencyPoliciesResponse::initializeModel() {

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_resiliency_policies_isSet = false;
    m_resiliency_policies_isValid = false;
}

void OAIListResiliencyPoliciesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListResiliencyPoliciesResponse::fromJsonObject(QJsonObject json) {

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;

    m_resiliency_policies_isValid = ::OpenAPI::fromJsonValue(m_resiliency_policies, json[QString("resiliencyPolicies")]);
    m_resiliency_policies_isSet = !json[QString("resiliencyPolicies")].isNull() && m_resiliency_policies_isValid;
}

QString OAIListResiliencyPoliciesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListResiliencyPoliciesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_resiliency_policies.isSet()) {
        obj.insert(QString("resiliencyPolicies"), ::OpenAPI::toJsonValue(m_resiliency_policies));
    }
    return obj;
}

QString OAIListResiliencyPoliciesResponse::getNextToken() const {
    return m_next_token;
}
void OAIListResiliencyPoliciesResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListResiliencyPoliciesResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListResiliencyPoliciesResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

QList OAIListResiliencyPoliciesResponse::getResiliencyPolicies() const {
    return m_resiliency_policies;
}
void OAIListResiliencyPoliciesResponse::setResiliencyPolicies(const QList &resiliency_policies) {
    m_resiliency_policies = resiliency_policies;
    m_resiliency_policies_isSet = true;
}

bool OAIListResiliencyPoliciesResponse::is_resiliency_policies_Set() const{
    return m_resiliency_policies_isSet;
}

bool OAIListResiliencyPoliciesResponse::is_resiliency_policies_Valid() const{
    return m_resiliency_policies_isValid;
}

bool OAIListResiliencyPoliciesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resiliency_policies.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListResiliencyPoliciesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_resiliency_policies_isValid && true;
}

} // namespace OpenAPI
