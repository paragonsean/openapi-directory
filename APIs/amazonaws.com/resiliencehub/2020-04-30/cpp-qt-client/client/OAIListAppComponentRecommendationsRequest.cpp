/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAppComponentRecommendationsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAppComponentRecommendationsRequest::OAIListAppComponentRecommendationsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAppComponentRecommendationsRequest::OAIListAppComponentRecommendationsRequest() {
    this->initializeModel();
}

OAIListAppComponentRecommendationsRequest::~OAIListAppComponentRecommendationsRequest() {}

void OAIListAppComponentRecommendationsRequest::initializeModel() {

    m_assessment_arn_isSet = false;
    m_assessment_arn_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListAppComponentRecommendationsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAppComponentRecommendationsRequest::fromJsonObject(QJsonObject json) {

    m_assessment_arn_isValid = ::OpenAPI::fromJsonValue(m_assessment_arn, json[QString("assessmentArn")]);
    m_assessment_arn_isSet = !json[QString("assessmentArn")].isNull() && m_assessment_arn_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("maxResults")]);
    m_max_results_isSet = !json[QString("maxResults")].isNull() && m_max_results_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListAppComponentRecommendationsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAppComponentRecommendationsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_assessment_arn_isSet) {
        obj.insert(QString("assessmentArn"), ::OpenAPI::toJsonValue(m_assessment_arn));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("maxResults"), ::OpenAPI::toJsonValue(m_max_results));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QString OAIListAppComponentRecommendationsRequest::getAssessmentArn() const {
    return m_assessment_arn;
}
void OAIListAppComponentRecommendationsRequest::setAssessmentArn(const QString &assessment_arn) {
    m_assessment_arn = assessment_arn;
    m_assessment_arn_isSet = true;
}

bool OAIListAppComponentRecommendationsRequest::is_assessment_arn_Set() const{
    return m_assessment_arn_isSet;
}

bool OAIListAppComponentRecommendationsRequest::is_assessment_arn_Valid() const{
    return m_assessment_arn_isValid;
}

qint32 OAIListAppComponentRecommendationsRequest::getMaxResults() const {
    return m_max_results;
}
void OAIListAppComponentRecommendationsRequest::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAIListAppComponentRecommendationsRequest::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIListAppComponentRecommendationsRequest::is_max_results_Valid() const{
    return m_max_results_isValid;
}

QString OAIListAppComponentRecommendationsRequest::getNextToken() const {
    return m_next_token;
}
void OAIListAppComponentRecommendationsRequest::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListAppComponentRecommendationsRequest::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListAppComponentRecommendationsRequest::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListAppComponentRecommendationsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assessment_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAppComponentRecommendationsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_assessment_arn_isValid && true;
}

} // namespace OpenAPI
