/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIComponentRecommendation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIComponentRecommendation::OAIComponentRecommendation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIComponentRecommendation::OAIComponentRecommendation() {
    this->initializeModel();
}

OAIComponentRecommendation::~OAIComponentRecommendation() {}

void OAIComponentRecommendation::initializeModel() {

    m_app_component_name_isSet = false;
    m_app_component_name_isValid = false;

    m_config_recommendations_isSet = false;
    m_config_recommendations_isValid = false;

    m_recommendation_status_isSet = false;
    m_recommendation_status_isValid = false;
}

void OAIComponentRecommendation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIComponentRecommendation::fromJsonObject(QJsonObject json) {

    m_app_component_name_isValid = ::OpenAPI::fromJsonValue(m_app_component_name, json[QString("appComponentName")]);
    m_app_component_name_isSet = !json[QString("appComponentName")].isNull() && m_app_component_name_isValid;

    m_config_recommendations_isValid = ::OpenAPI::fromJsonValue(m_config_recommendations, json[QString("configRecommendations")]);
    m_config_recommendations_isSet = !json[QString("configRecommendations")].isNull() && m_config_recommendations_isValid;

    m_recommendation_status_isValid = ::OpenAPI::fromJsonValue(m_recommendation_status, json[QString("recommendationStatus")]);
    m_recommendation_status_isSet = !json[QString("recommendationStatus")].isNull() && m_recommendation_status_isValid;
}

QString OAIComponentRecommendation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIComponentRecommendation::asJsonObject() const {
    QJsonObject obj;
    if (m_app_component_name_isSet) {
        obj.insert(QString("appComponentName"), ::OpenAPI::toJsonValue(m_app_component_name));
    }
    if (m_config_recommendations.isSet()) {
        obj.insert(QString("configRecommendations"), ::OpenAPI::toJsonValue(m_config_recommendations));
    }
    if (m_recommendation_status.isSet()) {
        obj.insert(QString("recommendationStatus"), ::OpenAPI::toJsonValue(m_recommendation_status));
    }
    return obj;
}

QString OAIComponentRecommendation::getAppComponentName() const {
    return m_app_component_name;
}
void OAIComponentRecommendation::setAppComponentName(const QString &app_component_name) {
    m_app_component_name = app_component_name;
    m_app_component_name_isSet = true;
}

bool OAIComponentRecommendation::is_app_component_name_Set() const{
    return m_app_component_name_isSet;
}

bool OAIComponentRecommendation::is_app_component_name_Valid() const{
    return m_app_component_name_isValid;
}

QList OAIComponentRecommendation::getConfigRecommendations() const {
    return m_config_recommendations;
}
void OAIComponentRecommendation::setConfigRecommendations(const QList &config_recommendations) {
    m_config_recommendations = config_recommendations;
    m_config_recommendations_isSet = true;
}

bool OAIComponentRecommendation::is_config_recommendations_Set() const{
    return m_config_recommendations_isSet;
}

bool OAIComponentRecommendation::is_config_recommendations_Valid() const{
    return m_config_recommendations_isValid;
}

OAIRecommendationComplianceStatus OAIComponentRecommendation::getRecommendationStatus() const {
    return m_recommendation_status;
}
void OAIComponentRecommendation::setRecommendationStatus(const OAIRecommendationComplianceStatus &recommendation_status) {
    m_recommendation_status = recommendation_status;
    m_recommendation_status_isSet = true;
}

bool OAIComponentRecommendation::is_recommendation_status_Set() const{
    return m_recommendation_status_isSet;
}

bool OAIComponentRecommendation::is_recommendation_status_Valid() const{
    return m_recommendation_status_isValid;
}

bool OAIComponentRecommendation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_component_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_config_recommendations.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIComponentRecommendation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_component_name_isValid && m_config_recommendations_isValid && m_recommendation_status_isValid && true;
}

} // namespace OpenAPI
