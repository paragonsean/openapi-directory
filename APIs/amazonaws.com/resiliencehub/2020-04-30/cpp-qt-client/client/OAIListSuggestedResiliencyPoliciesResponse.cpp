/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListSuggestedResiliencyPoliciesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListSuggestedResiliencyPoliciesResponse::OAIListSuggestedResiliencyPoliciesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListSuggestedResiliencyPoliciesResponse::OAIListSuggestedResiliencyPoliciesResponse() {
    this->initializeModel();
}

OAIListSuggestedResiliencyPoliciesResponse::~OAIListSuggestedResiliencyPoliciesResponse() {}

void OAIListSuggestedResiliencyPoliciesResponse::initializeModel() {

    m_next_token_isSet = false;
    m_next_token_isValid = false;

    m_resiliency_policies_isSet = false;
    m_resiliency_policies_isValid = false;
}

void OAIListSuggestedResiliencyPoliciesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListSuggestedResiliencyPoliciesResponse::fromJsonObject(QJsonObject json) {

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;

    m_resiliency_policies_isValid = ::OpenAPI::fromJsonValue(m_resiliency_policies, json[QString("resiliencyPolicies")]);
    m_resiliency_policies_isSet = !json[QString("resiliencyPolicies")].isNull() && m_resiliency_policies_isValid;
}

QString OAIListSuggestedResiliencyPoliciesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListSuggestedResiliencyPoliciesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    if (m_resiliency_policies.isSet()) {
        obj.insert(QString("resiliencyPolicies"), ::OpenAPI::toJsonValue(m_resiliency_policies));
    }
    return obj;
}

QString OAIListSuggestedResiliencyPoliciesResponse::getNextToken() const {
    return m_next_token;
}
void OAIListSuggestedResiliencyPoliciesResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListSuggestedResiliencyPoliciesResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListSuggestedResiliencyPoliciesResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

QList OAIListSuggestedResiliencyPoliciesResponse::getResiliencyPolicies() const {
    return m_resiliency_policies;
}
void OAIListSuggestedResiliencyPoliciesResponse::setResiliencyPolicies(const QList &resiliency_policies) {
    m_resiliency_policies = resiliency_policies;
    m_resiliency_policies_isSet = true;
}

bool OAIListSuggestedResiliencyPoliciesResponse::is_resiliency_policies_Set() const{
    return m_resiliency_policies_isSet;
}

bool OAIListSuggestedResiliencyPoliciesResponse::is_resiliency_policies_Valid() const{
    return m_resiliency_policies_isValid;
}

bool OAIListSuggestedResiliencyPoliciesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resiliency_policies.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListSuggestedResiliencyPoliciesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_resiliency_policies_isValid && true;
}

} // namespace OpenAPI
