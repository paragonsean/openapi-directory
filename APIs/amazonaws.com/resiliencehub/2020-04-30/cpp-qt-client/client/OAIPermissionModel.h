/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPermissionModel.h
 *
 * Defines the roles and credentials that Resilience Hub would use while creating the application, importing its resources, and running an assessment.
 */

#ifndef OAIPermissionModel_H
#define OAIPermissionModel_H

#include <QJsonObject>

#include "OAIPermissionModelType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPermissionModel : public OAIObject {
public:
    OAIPermissionModel();
    OAIPermissionModel(QString json);
    ~OAIPermissionModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getCrossAccountRoleArns() const;
    void setCrossAccountRoleArns(const QList &cross_account_role_arns);
    bool is_cross_account_role_arns_Set() const;
    bool is_cross_account_role_arns_Valid() const;

    QString getInvokerRoleName() const;
    void setInvokerRoleName(const QString &invoker_role_name);
    bool is_invoker_role_name_Set() const;
    bool is_invoker_role_name_Valid() const;

    OAIPermissionModelType getType() const;
    void setType(const OAIPermissionModelType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_cross_account_role_arns;
    bool m_cross_account_role_arns_isSet;
    bool m_cross_account_role_arns_isValid;

    QString m_invoker_role_name;
    bool m_invoker_role_name_isSet;
    bool m_invoker_role_name_isValid;

    OAIPermissionModelType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPermissionModel)

#endif // OAIPermissionModel_H
