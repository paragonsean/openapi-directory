/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteRecommendationTemplateRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteRecommendationTemplateRequest::OAIDeleteRecommendationTemplateRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteRecommendationTemplateRequest::OAIDeleteRecommendationTemplateRequest() {
    this->initializeModel();
}

OAIDeleteRecommendationTemplateRequest::~OAIDeleteRecommendationTemplateRequest() {}

void OAIDeleteRecommendationTemplateRequest::initializeModel() {

    m_client_token_isSet = false;
    m_client_token_isValid = false;

    m_recommendation_template_arn_isSet = false;
    m_recommendation_template_arn_isValid = false;
}

void OAIDeleteRecommendationTemplateRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteRecommendationTemplateRequest::fromJsonObject(QJsonObject json) {

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("clientToken")]);
    m_client_token_isSet = !json[QString("clientToken")].isNull() && m_client_token_isValid;

    m_recommendation_template_arn_isValid = ::OpenAPI::fromJsonValue(m_recommendation_template_arn, json[QString("recommendationTemplateArn")]);
    m_recommendation_template_arn_isSet = !json[QString("recommendationTemplateArn")].isNull() && m_recommendation_template_arn_isValid;
}

QString OAIDeleteRecommendationTemplateRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteRecommendationTemplateRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_client_token_isSet) {
        obj.insert(QString("clientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    if (m_recommendation_template_arn_isSet) {
        obj.insert(QString("recommendationTemplateArn"), ::OpenAPI::toJsonValue(m_recommendation_template_arn));
    }
    return obj;
}

QString OAIDeleteRecommendationTemplateRequest::getClientToken() const {
    return m_client_token;
}
void OAIDeleteRecommendationTemplateRequest::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAIDeleteRecommendationTemplateRequest::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAIDeleteRecommendationTemplateRequest::is_client_token_Valid() const{
    return m_client_token_isValid;
}

QString OAIDeleteRecommendationTemplateRequest::getRecommendationTemplateArn() const {
    return m_recommendation_template_arn;
}
void OAIDeleteRecommendationTemplateRequest::setRecommendationTemplateArn(const QString &recommendation_template_arn) {
    m_recommendation_template_arn = recommendation_template_arn;
    m_recommendation_template_arn_isSet = true;
}

bool OAIDeleteRecommendationTemplateRequest::is_recommendation_template_arn_Set() const{
    return m_recommendation_template_arn_isSet;
}

bool OAIDeleteRecommendationTemplateRequest::is_recommendation_template_arn_Valid() const{
    return m_recommendation_template_arn_isValid;
}

bool OAIDeleteRecommendationTemplateRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_template_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteRecommendationTemplateRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_recommendation_template_arn_isValid && true;
}

} // namespace OpenAPI
