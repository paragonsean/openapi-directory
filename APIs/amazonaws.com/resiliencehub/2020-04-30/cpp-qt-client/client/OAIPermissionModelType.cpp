/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPermissionModelType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPermissionModelType::OAIPermissionModelType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPermissionModelType::OAIPermissionModelType() {
    this->initializeModel();
}

OAIPermissionModelType::~OAIPermissionModelType() {}

void OAIPermissionModelType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPermissionModelType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPermissionModelType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("LegacyIAMUser", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPermissionModelType::LEGACYIAMUSER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RoleBased", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPermissionModelType::ROLEBASED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPermissionModelType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPermissionModelType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPermissionModelType::LEGACYIAMUSER:
            val = "LegacyIAMUser";
            break;
        case eOAIPermissionModelType::ROLEBASED:
            val = "RoleBased";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPermissionModelType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPermissionModelType::eOAIPermissionModelType OAIPermissionModelType::getValue() const {
    return m_value;
}

void OAIPermissionModelType::setValue(const OAIPermissionModelType::eOAIPermissionModelType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPermissionModelType::isSet() const {
    
    return m_value_isSet;
}

bool OAIPermissionModelType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
