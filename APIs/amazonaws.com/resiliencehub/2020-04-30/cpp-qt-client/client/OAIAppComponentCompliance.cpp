/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppComponentCompliance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppComponentCompliance::OAIAppComponentCompliance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppComponentCompliance::OAIAppComponentCompliance() {
    this->initializeModel();
}

OAIAppComponentCompliance::~OAIAppComponentCompliance() {}

void OAIAppComponentCompliance::initializeModel() {

    m_app_component_name_isSet = false;
    m_app_component_name_isValid = false;

    m_compliance_isSet = false;
    m_compliance_isValid = false;

    m_cost_isSet = false;
    m_cost_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_resiliency_score_isSet = false;
    m_resiliency_score_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIAppComponentCompliance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppComponentCompliance::fromJsonObject(QJsonObject json) {

    m_app_component_name_isValid = ::OpenAPI::fromJsonValue(m_app_component_name, json[QString("appComponentName")]);
    m_app_component_name_isSet = !json[QString("appComponentName")].isNull() && m_app_component_name_isValid;

    m_compliance_isValid = ::OpenAPI::fromJsonValue(m_compliance, json[QString("compliance")]);
    m_compliance_isSet = !json[QString("compliance")].isNull() && m_compliance_isValid;

    m_cost_isValid = ::OpenAPI::fromJsonValue(m_cost, json[QString("cost")]);
    m_cost_isSet = !json[QString("cost")].isNull() && m_cost_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_resiliency_score_isValid = ::OpenAPI::fromJsonValue(m_resiliency_score, json[QString("resiliencyScore")]);
    m_resiliency_score_isSet = !json[QString("resiliencyScore")].isNull() && m_resiliency_score_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIAppComponentCompliance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppComponentCompliance::asJsonObject() const {
    QJsonObject obj;
    if (m_app_component_name_isSet) {
        obj.insert(QString("appComponentName"), ::OpenAPI::toJsonValue(m_app_component_name));
    }
    if (m_compliance.isSet()) {
        obj.insert(QString("compliance"), ::OpenAPI::toJsonValue(m_compliance));
    }
    if (m_cost.isSet()) {
        obj.insert(QString("cost"), ::OpenAPI::toJsonValue(m_cost));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_resiliency_score.isSet()) {
        obj.insert(QString("resiliencyScore"), ::OpenAPI::toJsonValue(m_resiliency_score));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIAppComponentCompliance::getAppComponentName() const {
    return m_app_component_name;
}
void OAIAppComponentCompliance::setAppComponentName(const QString &app_component_name) {
    m_app_component_name = app_component_name;
    m_app_component_name_isSet = true;
}

bool OAIAppComponentCompliance::is_app_component_name_Set() const{
    return m_app_component_name_isSet;
}

bool OAIAppComponentCompliance::is_app_component_name_Valid() const{
    return m_app_component_name_isValid;
}

QMap OAIAppComponentCompliance::getCompliance() const {
    return m_compliance;
}
void OAIAppComponentCompliance::setCompliance(const QMap &compliance) {
    m_compliance = compliance;
    m_compliance_isSet = true;
}

bool OAIAppComponentCompliance::is_compliance_Set() const{
    return m_compliance_isSet;
}

bool OAIAppComponentCompliance::is_compliance_Valid() const{
    return m_compliance_isValid;
}

OAIAppComponentCompliance_cost OAIAppComponentCompliance::getCost() const {
    return m_cost;
}
void OAIAppComponentCompliance::setCost(const OAIAppComponentCompliance_cost &cost) {
    m_cost = cost;
    m_cost_isSet = true;
}

bool OAIAppComponentCompliance::is_cost_Set() const{
    return m_cost_isSet;
}

bool OAIAppComponentCompliance::is_cost_Valid() const{
    return m_cost_isValid;
}

QString OAIAppComponentCompliance::getMessage() const {
    return m_message;
}
void OAIAppComponentCompliance::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIAppComponentCompliance::is_message_Set() const{
    return m_message_isSet;
}

bool OAIAppComponentCompliance::is_message_Valid() const{
    return m_message_isValid;
}

OAIAppComponentCompliance_resiliencyScore OAIAppComponentCompliance::getResiliencyScore() const {
    return m_resiliency_score;
}
void OAIAppComponentCompliance::setResiliencyScore(const OAIAppComponentCompliance_resiliencyScore &resiliency_score) {
    m_resiliency_score = resiliency_score;
    m_resiliency_score_isSet = true;
}

bool OAIAppComponentCompliance::is_resiliency_score_Set() const{
    return m_resiliency_score_isSet;
}

bool OAIAppComponentCompliance::is_resiliency_score_Valid() const{
    return m_resiliency_score_isValid;
}

OAIComplianceStatus OAIAppComponentCompliance::getStatus() const {
    return m_status;
}
void OAIAppComponentCompliance::setStatus(const OAIComplianceStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAppComponentCompliance::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAppComponentCompliance::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIAppComponentCompliance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_component_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_compliance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cost.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resiliency_score.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppComponentCompliance::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
