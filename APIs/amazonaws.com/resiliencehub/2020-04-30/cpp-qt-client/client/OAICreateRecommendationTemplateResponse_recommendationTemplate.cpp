/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateRecommendationTemplateResponse_recommendationTemplate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateRecommendationTemplateResponse_recommendationTemplate::OAICreateRecommendationTemplateResponse_recommendationTemplate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateRecommendationTemplateResponse_recommendationTemplate::OAICreateRecommendationTemplateResponse_recommendationTemplate() {
    this->initializeModel();
}

OAICreateRecommendationTemplateResponse_recommendationTemplate::~OAICreateRecommendationTemplateResponse_recommendationTemplate() {}

void OAICreateRecommendationTemplateResponse_recommendationTemplate::initializeModel() {

    m_app_arn_isSet = false;
    m_app_arn_isValid = false;

    m_assessment_arn_isSet = false;
    m_assessment_arn_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_format_isSet = false;
    m_format_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_needs_replacements_isSet = false;
    m_needs_replacements_isValid = false;

    m_recommendation_ids_isSet = false;
    m_recommendation_ids_isValid = false;

    m_recommendation_template_arn_isSet = false;
    m_recommendation_template_arn_isValid = false;

    m_recommendation_types_isSet = false;
    m_recommendation_types_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_templates_location_isSet = false;
    m_templates_location_isValid = false;
}

void OAICreateRecommendationTemplateResponse_recommendationTemplate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateRecommendationTemplateResponse_recommendationTemplate::fromJsonObject(QJsonObject json) {

    m_app_arn_isValid = ::OpenAPI::fromJsonValue(m_app_arn, json[QString("appArn")]);
    m_app_arn_isSet = !json[QString("appArn")].isNull() && m_app_arn_isValid;

    m_assessment_arn_isValid = ::OpenAPI::fromJsonValue(m_assessment_arn, json[QString("assessmentArn")]);
    m_assessment_arn_isSet = !json[QString("assessmentArn")].isNull() && m_assessment_arn_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_format_isValid = ::OpenAPI::fromJsonValue(m_format, json[QString("format")]);
    m_format_isSet = !json[QString("format")].isNull() && m_format_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_needs_replacements_isValid = ::OpenAPI::fromJsonValue(m_needs_replacements, json[QString("needsReplacements")]);
    m_needs_replacements_isSet = !json[QString("needsReplacements")].isNull() && m_needs_replacements_isValid;

    m_recommendation_ids_isValid = ::OpenAPI::fromJsonValue(m_recommendation_ids, json[QString("recommendationIds")]);
    m_recommendation_ids_isSet = !json[QString("recommendationIds")].isNull() && m_recommendation_ids_isValid;

    m_recommendation_template_arn_isValid = ::OpenAPI::fromJsonValue(m_recommendation_template_arn, json[QString("recommendationTemplateArn")]);
    m_recommendation_template_arn_isSet = !json[QString("recommendationTemplateArn")].isNull() && m_recommendation_template_arn_isValid;

    m_recommendation_types_isValid = ::OpenAPI::fromJsonValue(m_recommendation_types, json[QString("recommendationTypes")]);
    m_recommendation_types_isSet = !json[QString("recommendationTypes")].isNull() && m_recommendation_types_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_templates_location_isValid = ::OpenAPI::fromJsonValue(m_templates_location, json[QString("templatesLocation")]);
    m_templates_location_isSet = !json[QString("templatesLocation")].isNull() && m_templates_location_isValid;
}

QString OAICreateRecommendationTemplateResponse_recommendationTemplate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateRecommendationTemplateResponse_recommendationTemplate::asJsonObject() const {
    QJsonObject obj;
    if (m_app_arn_isSet) {
        obj.insert(QString("appArn"), ::OpenAPI::toJsonValue(m_app_arn));
    }
    if (m_assessment_arn_isSet) {
        obj.insert(QString("assessmentArn"), ::OpenAPI::toJsonValue(m_assessment_arn));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_format.isSet()) {
        obj.insert(QString("format"), ::OpenAPI::toJsonValue(m_format));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_needs_replacements_isSet) {
        obj.insert(QString("needsReplacements"), ::OpenAPI::toJsonValue(m_needs_replacements));
    }
    if (m_recommendation_ids.isSet()) {
        obj.insert(QString("recommendationIds"), ::OpenAPI::toJsonValue(m_recommendation_ids));
    }
    if (m_recommendation_template_arn_isSet) {
        obj.insert(QString("recommendationTemplateArn"), ::OpenAPI::toJsonValue(m_recommendation_template_arn));
    }
    if (m_recommendation_types.isSet()) {
        obj.insert(QString("recommendationTypes"), ::OpenAPI::toJsonValue(m_recommendation_types));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_templates_location.isSet()) {
        obj.insert(QString("templatesLocation"), ::OpenAPI::toJsonValue(m_templates_location));
    }
    return obj;
}

QString OAICreateRecommendationTemplateResponse_recommendationTemplate::getAppArn() const {
    return m_app_arn;
}
void OAICreateRecommendationTemplateResponse_recommendationTemplate::setAppArn(const QString &app_arn) {
    m_app_arn = app_arn;
    m_app_arn_isSet = true;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_app_arn_Set() const{
    return m_app_arn_isSet;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_app_arn_Valid() const{
    return m_app_arn_isValid;
}

QString OAICreateRecommendationTemplateResponse_recommendationTemplate::getAssessmentArn() const {
    return m_assessment_arn;
}
void OAICreateRecommendationTemplateResponse_recommendationTemplate::setAssessmentArn(const QString &assessment_arn) {
    m_assessment_arn = assessment_arn;
    m_assessment_arn_isSet = true;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_assessment_arn_Set() const{
    return m_assessment_arn_isSet;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_assessment_arn_Valid() const{
    return m_assessment_arn_isValid;
}

QDateTime OAICreateRecommendationTemplateResponse_recommendationTemplate::getEndTime() const {
    return m_end_time;
}
void OAICreateRecommendationTemplateResponse_recommendationTemplate::setEndTime(const QDateTime &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_end_time_Valid() const{
    return m_end_time_isValid;
}

OAITemplateFormat OAICreateRecommendationTemplateResponse_recommendationTemplate::getFormat() const {
    return m_format;
}
void OAICreateRecommendationTemplateResponse_recommendationTemplate::setFormat(const OAITemplateFormat &format) {
    m_format = format;
    m_format_isSet = true;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_format_Set() const{
    return m_format_isSet;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_format_Valid() const{
    return m_format_isValid;
}

QString OAICreateRecommendationTemplateResponse_recommendationTemplate::getMessage() const {
    return m_message;
}
void OAICreateRecommendationTemplateResponse_recommendationTemplate::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_message_Set() const{
    return m_message_isSet;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_message_Valid() const{
    return m_message_isValid;
}

QString OAICreateRecommendationTemplateResponse_recommendationTemplate::getName() const {
    return m_name;
}
void OAICreateRecommendationTemplateResponse_recommendationTemplate::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_name_Valid() const{
    return m_name_isValid;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::getNeedsReplacements() const {
    return m_needs_replacements;
}
void OAICreateRecommendationTemplateResponse_recommendationTemplate::setNeedsReplacements(const bool &needs_replacements) {
    m_needs_replacements = needs_replacements;
    m_needs_replacements_isSet = true;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_needs_replacements_Set() const{
    return m_needs_replacements_isSet;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_needs_replacements_Valid() const{
    return m_needs_replacements_isValid;
}

QList OAICreateRecommendationTemplateResponse_recommendationTemplate::getRecommendationIds() const {
    return m_recommendation_ids;
}
void OAICreateRecommendationTemplateResponse_recommendationTemplate::setRecommendationIds(const QList &recommendation_ids) {
    m_recommendation_ids = recommendation_ids;
    m_recommendation_ids_isSet = true;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_recommendation_ids_Set() const{
    return m_recommendation_ids_isSet;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_recommendation_ids_Valid() const{
    return m_recommendation_ids_isValid;
}

QString OAICreateRecommendationTemplateResponse_recommendationTemplate::getRecommendationTemplateArn() const {
    return m_recommendation_template_arn;
}
void OAICreateRecommendationTemplateResponse_recommendationTemplate::setRecommendationTemplateArn(const QString &recommendation_template_arn) {
    m_recommendation_template_arn = recommendation_template_arn;
    m_recommendation_template_arn_isSet = true;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_recommendation_template_arn_Set() const{
    return m_recommendation_template_arn_isSet;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_recommendation_template_arn_Valid() const{
    return m_recommendation_template_arn_isValid;
}

QList OAICreateRecommendationTemplateResponse_recommendationTemplate::getRecommendationTypes() const {
    return m_recommendation_types;
}
void OAICreateRecommendationTemplateResponse_recommendationTemplate::setRecommendationTypes(const QList &recommendation_types) {
    m_recommendation_types = recommendation_types;
    m_recommendation_types_isSet = true;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_recommendation_types_Set() const{
    return m_recommendation_types_isSet;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_recommendation_types_Valid() const{
    return m_recommendation_types_isValid;
}

QDateTime OAICreateRecommendationTemplateResponse_recommendationTemplate::getStartTime() const {
    return m_start_time;
}
void OAICreateRecommendationTemplateResponse_recommendationTemplate::setStartTime(const QDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_start_time_Valid() const{
    return m_start_time_isValid;
}

OAIRecommendationTemplateStatus OAICreateRecommendationTemplateResponse_recommendationTemplate::getStatus() const {
    return m_status;
}
void OAICreateRecommendationTemplateResponse_recommendationTemplate::setStatus(const OAIRecommendationTemplateStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_status_Valid() const{
    return m_status_isValid;
}

QMap OAICreateRecommendationTemplateResponse_recommendationTemplate::getTags() const {
    return m_tags;
}
void OAICreateRecommendationTemplateResponse_recommendationTemplate::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_tags_Valid() const{
    return m_tags_isValid;
}

OAIRecommendationTemplate_templatesLocation OAICreateRecommendationTemplateResponse_recommendationTemplate::getTemplatesLocation() const {
    return m_templates_location;
}
void OAICreateRecommendationTemplateResponse_recommendationTemplate::setTemplatesLocation(const OAIRecommendationTemplate_templatesLocation &templates_location) {
    m_templates_location = templates_location;
    m_templates_location_isSet = true;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_templates_location_Set() const{
    return m_templates_location_isSet;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::is_templates_location_Valid() const{
    return m_templates_location_isValid;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assessment_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_format.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_needs_replacements_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_template_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_types.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_templates_location.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateRecommendationTemplateResponse_recommendationTemplate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_assessment_arn_isValid && m_format_isValid && m_name_isValid && m_recommendation_template_arn_isValid && m_recommendation_types_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
