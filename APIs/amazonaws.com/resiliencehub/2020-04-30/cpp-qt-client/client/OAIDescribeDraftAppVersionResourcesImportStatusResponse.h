/**
 * AWS Resilience Hub
 * Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production. 
 *
 * The version of the OpenAPI document: 2020-04-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeDraftAppVersionResourcesImportStatusResponse.h
 *
 * 
 */

#ifndef OAIDescribeDraftAppVersionResourcesImportStatusResponse_H
#define OAIDescribeDraftAppVersionResourcesImportStatusResponse_H

#include <QJsonObject>

#include "OAIResourceImportStatusType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeDraftAppVersionResourcesImportStatusResponse : public OAIObject {
public:
    OAIDescribeDraftAppVersionResourcesImportStatusResponse();
    OAIDescribeDraftAppVersionResourcesImportStatusResponse(QString json);
    ~OAIDescribeDraftAppVersionResourcesImportStatusResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppArn() const;
    void setAppArn(const QString &app_arn);
    bool is_app_arn_Set() const;
    bool is_app_arn_Valid() const;

    QString getAppVersion() const;
    void setAppVersion(const QString &app_version);
    bool is_app_version_Set() const;
    bool is_app_version_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    OAIResourceImportStatusType getStatus() const;
    void setStatus(const OAIResourceImportStatusType &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getStatusChangeTime() const;
    void setStatusChangeTime(const QDateTime &status_change_time);
    bool is_status_change_time_Set() const;
    bool is_status_change_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_arn;
    bool m_app_arn_isSet;
    bool m_app_arn_isValid;

    QString m_app_version;
    bool m_app_version_isSet;
    bool m_app_version_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    OAIResourceImportStatusType m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_status_change_time;
    bool m_status_change_time_isSet;
    bool m_status_change_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeDraftAppVersionResourcesImportStatusResponse)

#endif // OAIDescribeDraftAppVersionResourcesImportStatusResponse_H
