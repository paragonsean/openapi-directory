/*
 * AmazonMWAA
 * <p><fullname>Amazon Managed Workflows for Apache Airflow</fullname> <p>This section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API reference documentation. For more information, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html\">What is Amazon MWAA?</a>.</p> <p> <b>Endpoints</b> </p> <ul> <li> <p> <code>api.airflow.{region}.amazonaws.com</code> - This endpoint is used for environment management.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_CreateEnvironment.html\">CreateEnvironment</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_DeleteEnvironment.html\">DeleteEnvironment</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_GetEnvironment.html\">GetEnvironment</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_ListEnvironments.html\">ListEnvironments</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_ListTagsForResource.html\">ListTagsForResource</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_TagResource.html\">TagResource</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_UntagResource.html\">UntagResource</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_UpdateEnvironment.html\">UpdateEnvironment</a> </p> </li> </ul> </li> <li> <p> <code>env.airflow.{region}.amazonaws.com</code> - This endpoint is used to operate the Airflow environment.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_CreateCliToken.html \">CreateCliToken</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_CreateWebLoginToken.html\">CreateWebLoginToken</a> </p> </li> </ul> </li> <li> <p> <code>ops.airflow.{region}.amazonaws.com</code> - This endpoint is used to push environment metrics that track environment health.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_PublishMetrics.html \">PublishMetrics</a> </p> </li> </ul> </li> </ul> <p> <b>Regions</b> </p> <p>For a list of regions that Amazon MWAA supports, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html#regions-mwaa\">Region availability</a> in the <i>Amazon MWAA User Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2020-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.CreateEnvironmentRequestLoggingConfiguration;
import org.openapitools.client.model.UpdateEnvironmentRequestNetworkConfiguration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateEnvironmentRequest
 */
public class UpdateEnvironmentRequestTest {
    private final UpdateEnvironmentRequest model = new UpdateEnvironmentRequest();

    /**
     * Model tests for UpdateEnvironmentRequest
     */
    @Test
    public void testUpdateEnvironmentRequest() {
        // TODO: test UpdateEnvironmentRequest
    }

    /**
     * Test the property 'airflowConfigurationOptions'
     */
    @Test
    public void airflowConfigurationOptionsTest() {
        // TODO: test airflowConfigurationOptions
    }

    /**
     * Test the property 'airflowVersion'
     */
    @Test
    public void airflowVersionTest() {
        // TODO: test airflowVersion
    }

    /**
     * Test the property 'dagS3Path'
     */
    @Test
    public void dagS3PathTest() {
        // TODO: test dagS3Path
    }

    /**
     * Test the property 'environmentClass'
     */
    @Test
    public void environmentClassTest() {
        // TODO: test environmentClass
    }

    /**
     * Test the property 'executionRoleArn'
     */
    @Test
    public void executionRoleArnTest() {
        // TODO: test executionRoleArn
    }

    /**
     * Test the property 'loggingConfiguration'
     */
    @Test
    public void loggingConfigurationTest() {
        // TODO: test loggingConfiguration
    }

    /**
     * Test the property 'maxWorkers'
     */
    @Test
    public void maxWorkersTest() {
        // TODO: test maxWorkers
    }

    /**
     * Test the property 'minWorkers'
     */
    @Test
    public void minWorkersTest() {
        // TODO: test minWorkers
    }

    /**
     * Test the property 'networkConfiguration'
     */
    @Test
    public void networkConfigurationTest() {
        // TODO: test networkConfiguration
    }

    /**
     * Test the property 'pluginsS3ObjectVersion'
     */
    @Test
    public void pluginsS3ObjectVersionTest() {
        // TODO: test pluginsS3ObjectVersion
    }

    /**
     * Test the property 'pluginsS3Path'
     */
    @Test
    public void pluginsS3PathTest() {
        // TODO: test pluginsS3Path
    }

    /**
     * Test the property 'requirementsS3ObjectVersion'
     */
    @Test
    public void requirementsS3ObjectVersionTest() {
        // TODO: test requirementsS3ObjectVersion
    }

    /**
     * Test the property 'requirementsS3Path'
     */
    @Test
    public void requirementsS3PathTest() {
        // TODO: test requirementsS3Path
    }

    /**
     * Test the property 'schedulers'
     */
    @Test
    public void schedulersTest() {
        // TODO: test schedulers
    }

    /**
     * Test the property 'sourceBucketArn'
     */
    @Test
    public void sourceBucketArnTest() {
        // TODO: test sourceBucketArn
    }

    /**
     * Test the property 'startupScriptS3ObjectVersion'
     */
    @Test
    public void startupScriptS3ObjectVersionTest() {
        // TODO: test startupScriptS3ObjectVersion
    }

    /**
     * Test the property 'startupScriptS3Path'
     */
    @Test
    public void startupScriptS3PathTest() {
        // TODO: test startupScriptS3Path
    }

    /**
     * Test the property 'webserverAccessMode'
     */
    @Test
    public void webserverAccessModeTest() {
        // TODO: test webserverAccessMode
    }

    /**
     * Test the property 'weeklyMaintenanceWindowStart'
     */
    @Test
    public void weeklyMaintenanceWindowStartTest() {
        // TODO: test weeklyMaintenanceWindowStart
    }

}
