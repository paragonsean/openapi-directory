/*
 * AmazonMWAA
 * <p><fullname>Amazon Managed Workflows for Apache Airflow</fullname> <p>This section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API reference documentation. For more information, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html\">What is Amazon MWAA?</a>.</p> <p> <b>Endpoints</b> </p> <ul> <li> <p> <code>api.airflow.{region}.amazonaws.com</code> - This endpoint is used for environment management.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_CreateEnvironment.html\">CreateEnvironment</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_DeleteEnvironment.html\">DeleteEnvironment</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_GetEnvironment.html\">GetEnvironment</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_ListEnvironments.html\">ListEnvironments</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_ListTagsForResource.html\">ListTagsForResource</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_TagResource.html\">TagResource</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_UntagResource.html\">UntagResource</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_UpdateEnvironment.html\">UpdateEnvironment</a> </p> </li> </ul> </li> <li> <p> <code>env.airflow.{region}.amazonaws.com</code> - This endpoint is used to operate the Airflow environment.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_CreateCliToken.html \">CreateCliToken</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_CreateWebLoginToken.html\">CreateWebLoginToken</a> </p> </li> </ul> </li> <li> <p> <code>ops.airflow.{region}.amazonaws.com</code> - This endpoint is used to push environment metrics that track environment health.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_PublishMetrics.html \">PublishMetrics</a> </p> </li> </ul> </li> </ul> <p> <b>Regions</b> </p> <p>For a list of regions that Amazon MWAA supports, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html#regions-mwaa\">Region availability</a> in the <i>Amazon MWAA User Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2020-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateEnvironmentRequestLoggingConfigurationDagProcessingLogs;
import org.openapitools.client.model.CreateEnvironmentRequestLoggingConfigurationSchedulerLogs;
import org.openapitools.client.model.CreateEnvironmentRequestLoggingConfigurationTaskLogs;
import org.openapitools.client.model.CreateEnvironmentRequestLoggingConfigurationWebserverLogs;
import org.openapitools.client.model.CreateEnvironmentRequestLoggingConfigurationWorkerLogs;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateEnvironmentInputLoggingConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:11:05.881352-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateEnvironmentInputLoggingConfiguration {
  public static final String SERIALIZED_NAME_DAG_PROCESSING_LOGS = "DagProcessingLogs";
  @SerializedName(SERIALIZED_NAME_DAG_PROCESSING_LOGS)
  private CreateEnvironmentRequestLoggingConfigurationDagProcessingLogs dagProcessingLogs;

  public static final String SERIALIZED_NAME_SCHEDULER_LOGS = "SchedulerLogs";
  @SerializedName(SERIALIZED_NAME_SCHEDULER_LOGS)
  private CreateEnvironmentRequestLoggingConfigurationSchedulerLogs schedulerLogs;

  public static final String SERIALIZED_NAME_TASK_LOGS = "TaskLogs";
  @SerializedName(SERIALIZED_NAME_TASK_LOGS)
  private CreateEnvironmentRequestLoggingConfigurationTaskLogs taskLogs;

  public static final String SERIALIZED_NAME_WEBSERVER_LOGS = "WebserverLogs";
  @SerializedName(SERIALIZED_NAME_WEBSERVER_LOGS)
  private CreateEnvironmentRequestLoggingConfigurationWebserverLogs webserverLogs;

  public static final String SERIALIZED_NAME_WORKER_LOGS = "WorkerLogs";
  @SerializedName(SERIALIZED_NAME_WORKER_LOGS)
  private CreateEnvironmentRequestLoggingConfigurationWorkerLogs workerLogs;

  public CreateEnvironmentInputLoggingConfiguration() {
  }

  public CreateEnvironmentInputLoggingConfiguration dagProcessingLogs(CreateEnvironmentRequestLoggingConfigurationDagProcessingLogs dagProcessingLogs) {
    this.dagProcessingLogs = dagProcessingLogs;
    return this;
  }

  /**
   * Get dagProcessingLogs
   * @return dagProcessingLogs
   */
  @javax.annotation.Nullable
  public CreateEnvironmentRequestLoggingConfigurationDagProcessingLogs getDagProcessingLogs() {
    return dagProcessingLogs;
  }

  public void setDagProcessingLogs(CreateEnvironmentRequestLoggingConfigurationDagProcessingLogs dagProcessingLogs) {
    this.dagProcessingLogs = dagProcessingLogs;
  }


  public CreateEnvironmentInputLoggingConfiguration schedulerLogs(CreateEnvironmentRequestLoggingConfigurationSchedulerLogs schedulerLogs) {
    this.schedulerLogs = schedulerLogs;
    return this;
  }

  /**
   * Get schedulerLogs
   * @return schedulerLogs
   */
  @javax.annotation.Nullable
  public CreateEnvironmentRequestLoggingConfigurationSchedulerLogs getSchedulerLogs() {
    return schedulerLogs;
  }

  public void setSchedulerLogs(CreateEnvironmentRequestLoggingConfigurationSchedulerLogs schedulerLogs) {
    this.schedulerLogs = schedulerLogs;
  }


  public CreateEnvironmentInputLoggingConfiguration taskLogs(CreateEnvironmentRequestLoggingConfigurationTaskLogs taskLogs) {
    this.taskLogs = taskLogs;
    return this;
  }

  /**
   * Get taskLogs
   * @return taskLogs
   */
  @javax.annotation.Nullable
  public CreateEnvironmentRequestLoggingConfigurationTaskLogs getTaskLogs() {
    return taskLogs;
  }

  public void setTaskLogs(CreateEnvironmentRequestLoggingConfigurationTaskLogs taskLogs) {
    this.taskLogs = taskLogs;
  }


  public CreateEnvironmentInputLoggingConfiguration webserverLogs(CreateEnvironmentRequestLoggingConfigurationWebserverLogs webserverLogs) {
    this.webserverLogs = webserverLogs;
    return this;
  }

  /**
   * Get webserverLogs
   * @return webserverLogs
   */
  @javax.annotation.Nullable
  public CreateEnvironmentRequestLoggingConfigurationWebserverLogs getWebserverLogs() {
    return webserverLogs;
  }

  public void setWebserverLogs(CreateEnvironmentRequestLoggingConfigurationWebserverLogs webserverLogs) {
    this.webserverLogs = webserverLogs;
  }


  public CreateEnvironmentInputLoggingConfiguration workerLogs(CreateEnvironmentRequestLoggingConfigurationWorkerLogs workerLogs) {
    this.workerLogs = workerLogs;
    return this;
  }

  /**
   * Get workerLogs
   * @return workerLogs
   */
  @javax.annotation.Nullable
  public CreateEnvironmentRequestLoggingConfigurationWorkerLogs getWorkerLogs() {
    return workerLogs;
  }

  public void setWorkerLogs(CreateEnvironmentRequestLoggingConfigurationWorkerLogs workerLogs) {
    this.workerLogs = workerLogs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateEnvironmentInputLoggingConfiguration createEnvironmentInputLoggingConfiguration = (CreateEnvironmentInputLoggingConfiguration) o;
    return Objects.equals(this.dagProcessingLogs, createEnvironmentInputLoggingConfiguration.dagProcessingLogs) &&
        Objects.equals(this.schedulerLogs, createEnvironmentInputLoggingConfiguration.schedulerLogs) &&
        Objects.equals(this.taskLogs, createEnvironmentInputLoggingConfiguration.taskLogs) &&
        Objects.equals(this.webserverLogs, createEnvironmentInputLoggingConfiguration.webserverLogs) &&
        Objects.equals(this.workerLogs, createEnvironmentInputLoggingConfiguration.workerLogs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dagProcessingLogs, schedulerLogs, taskLogs, webserverLogs, workerLogs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateEnvironmentInputLoggingConfiguration {\n");
    sb.append("    dagProcessingLogs: ").append(toIndentedString(dagProcessingLogs)).append("\n");
    sb.append("    schedulerLogs: ").append(toIndentedString(schedulerLogs)).append("\n");
    sb.append("    taskLogs: ").append(toIndentedString(taskLogs)).append("\n");
    sb.append("    webserverLogs: ").append(toIndentedString(webserverLogs)).append("\n");
    sb.append("    workerLogs: ").append(toIndentedString(workerLogs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DagProcessingLogs");
    openapiFields.add("SchedulerLogs");
    openapiFields.add("TaskLogs");
    openapiFields.add("WebserverLogs");
    openapiFields.add("WorkerLogs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateEnvironmentInputLoggingConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateEnvironmentInputLoggingConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateEnvironmentInputLoggingConfiguration is not found in the empty JSON string", CreateEnvironmentInputLoggingConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateEnvironmentInputLoggingConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateEnvironmentInputLoggingConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `DagProcessingLogs`
      if (jsonObj.get("DagProcessingLogs") != null && !jsonObj.get("DagProcessingLogs").isJsonNull()) {
        CreateEnvironmentRequestLoggingConfigurationDagProcessingLogs.validateJsonElement(jsonObj.get("DagProcessingLogs"));
      }
      // validate the optional field `SchedulerLogs`
      if (jsonObj.get("SchedulerLogs") != null && !jsonObj.get("SchedulerLogs").isJsonNull()) {
        CreateEnvironmentRequestLoggingConfigurationSchedulerLogs.validateJsonElement(jsonObj.get("SchedulerLogs"));
      }
      // validate the optional field `TaskLogs`
      if (jsonObj.get("TaskLogs") != null && !jsonObj.get("TaskLogs").isJsonNull()) {
        CreateEnvironmentRequestLoggingConfigurationTaskLogs.validateJsonElement(jsonObj.get("TaskLogs"));
      }
      // validate the optional field `WebserverLogs`
      if (jsonObj.get("WebserverLogs") != null && !jsonObj.get("WebserverLogs").isJsonNull()) {
        CreateEnvironmentRequestLoggingConfigurationWebserverLogs.validateJsonElement(jsonObj.get("WebserverLogs"));
      }
      // validate the optional field `WorkerLogs`
      if (jsonObj.get("WorkerLogs") != null && !jsonObj.get("WorkerLogs").isJsonNull()) {
        CreateEnvironmentRequestLoggingConfigurationWorkerLogs.validateJsonElement(jsonObj.get("WorkerLogs"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateEnvironmentInputLoggingConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateEnvironmentInputLoggingConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateEnvironmentInputLoggingConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateEnvironmentInputLoggingConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateEnvironmentInputLoggingConfiguration>() {
           @Override
           public void write(JsonWriter out, CreateEnvironmentInputLoggingConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateEnvironmentInputLoggingConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateEnvironmentInputLoggingConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateEnvironmentInputLoggingConfiguration
   * @throws IOException if the JSON string is invalid with respect to CreateEnvironmentInputLoggingConfiguration
   */
  public static CreateEnvironmentInputLoggingConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateEnvironmentInputLoggingConfiguration.class);
  }

  /**
   * Convert an instance of CreateEnvironmentInputLoggingConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

