/**
 * AmazonMWAA
 * <p><fullname>Amazon Managed Workflows for Apache Airflow</fullname> <p>This section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API reference documentation. For more information, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html\">What is Amazon MWAA?</a>.</p> <p> <b>Endpoints</b> </p> <ul> <li> <p> <code>api.airflow.{region}.amazonaws.com</code> - This endpoint is used for environment management.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_CreateEnvironment.html\">CreateEnvironment</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_DeleteEnvironment.html\">DeleteEnvironment</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_GetEnvironment.html\">GetEnvironment</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_ListEnvironments.html\">ListEnvironments</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_ListTagsForResource.html\">ListTagsForResource</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_TagResource.html\">TagResource</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_UntagResource.html\">UntagResource</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_UpdateEnvironment.html\">UpdateEnvironment</a> </p> </li> </ul> </li> <li> <p> <code>env.airflow.{region}.amazonaws.com</code> - This endpoint is used to operate the Airflow environment.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_CreateCliToken.html \">CreateCliToken</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_CreateWebLoginToken.html\">CreateWebLoginToken</a> </p> </li> </ul> </li> <li> <p> <code>ops.airflow.{region}.amazonaws.com</code> - This endpoint is used to push environment metrics that track environment health.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_PublishMetrics.html \">PublishMetrics</a> </p> </li> </ul> </li> </ul> <p> <b>Regions</b> </p> <p>For a list of regions that Amazon MWAA supports, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html#regions-mwaa\">Region availability</a> in the <i>Amazon MWAA User Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2020-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonMwaa);
  }
}(this, function(expect, AmazonMwaa) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonMwaa.UpdateEnvironmentRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UpdateEnvironmentRequest', function() {
    it('should create an instance of UpdateEnvironmentRequest', function() {
      // uncomment below and update the code to test UpdateEnvironmentRequest
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be.a(AmazonMwaa.UpdateEnvironmentRequest);
    });

    it('should have the property airflowConfigurationOptions (base name: "AirflowConfigurationOptions")', function() {
      // uncomment below and update the code to test the property airflowConfigurationOptions
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property airflowVersion (base name: "AirflowVersion")', function() {
      // uncomment below and update the code to test the property airflowVersion
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property dagS3Path (base name: "DagS3Path")', function() {
      // uncomment below and update the code to test the property dagS3Path
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property environmentClass (base name: "EnvironmentClass")', function() {
      // uncomment below and update the code to test the property environmentClass
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property executionRoleArn (base name: "ExecutionRoleArn")', function() {
      // uncomment below and update the code to test the property executionRoleArn
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property loggingConfiguration (base name: "LoggingConfiguration")', function() {
      // uncomment below and update the code to test the property loggingConfiguration
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property maxWorkers (base name: "MaxWorkers")', function() {
      // uncomment below and update the code to test the property maxWorkers
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property minWorkers (base name: "MinWorkers")', function() {
      // uncomment below and update the code to test the property minWorkers
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property networkConfiguration (base name: "NetworkConfiguration")', function() {
      // uncomment below and update the code to test the property networkConfiguration
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property pluginsS3ObjectVersion (base name: "PluginsS3ObjectVersion")', function() {
      // uncomment below and update the code to test the property pluginsS3ObjectVersion
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property pluginsS3Path (base name: "PluginsS3Path")', function() {
      // uncomment below and update the code to test the property pluginsS3Path
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property requirementsS3ObjectVersion (base name: "RequirementsS3ObjectVersion")', function() {
      // uncomment below and update the code to test the property requirementsS3ObjectVersion
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property requirementsS3Path (base name: "RequirementsS3Path")', function() {
      // uncomment below and update the code to test the property requirementsS3Path
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property schedulers (base name: "Schedulers")', function() {
      // uncomment below and update the code to test the property schedulers
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property sourceBucketArn (base name: "SourceBucketArn")', function() {
      // uncomment below and update the code to test the property sourceBucketArn
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property startupScriptS3ObjectVersion (base name: "StartupScriptS3ObjectVersion")', function() {
      // uncomment below and update the code to test the property startupScriptS3ObjectVersion
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property startupScriptS3Path (base name: "StartupScriptS3Path")', function() {
      // uncomment below and update the code to test the property startupScriptS3Path
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property webserverAccessMode (base name: "WebserverAccessMode")', function() {
      // uncomment below and update the code to test the property webserverAccessMode
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

    it('should have the property weeklyMaintenanceWindowStart (base name: "WeeklyMaintenanceWindowStart")', function() {
      // uncomment below and update the code to test the property weeklyMaintenanceWindowStart
      //var instance = new AmazonMwaa.UpdateEnvironmentRequest();
      //expect(instance).to.be();
    });

  });

}));
