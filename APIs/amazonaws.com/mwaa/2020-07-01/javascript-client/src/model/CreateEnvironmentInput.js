/**
 * AmazonMWAA
 * <p><fullname>Amazon Managed Workflows for Apache Airflow</fullname> <p>This section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API reference documentation. For more information, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html\">What is Amazon MWAA?</a>.</p> <p> <b>Endpoints</b> </p> <ul> <li> <p> <code>api.airflow.{region}.amazonaws.com</code> - This endpoint is used for environment management.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_CreateEnvironment.html\">CreateEnvironment</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_DeleteEnvironment.html\">DeleteEnvironment</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_GetEnvironment.html\">GetEnvironment</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_ListEnvironments.html\">ListEnvironments</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_ListTagsForResource.html\">ListTagsForResource</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_TagResource.html\">TagResource</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_UntagResource.html\">UntagResource</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_UpdateEnvironment.html\">UpdateEnvironment</a> </p> </li> </ul> </li> <li> <p> <code>env.airflow.{region}.amazonaws.com</code> - This endpoint is used to operate the Airflow environment.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_CreateCliToken.html \">CreateCliToken</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_CreateWebLoginToken.html\">CreateWebLoginToken</a> </p> </li> </ul> </li> <li> <p> <code>ops.airflow.{region}.amazonaws.com</code> - This endpoint is used to push environment metrics that track environment health.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_PublishMetrics.html \">PublishMetrics</a> </p> </li> </ul> </li> </ul> <p> <b>Regions</b> </p> <p>For a list of regions that Amazon MWAA supports, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html#regions-mwaa\">Region availability</a> in the <i>Amazon MWAA User Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2020-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateEnvironmentInputLoggingConfiguration from './CreateEnvironmentInputLoggingConfiguration';
import CreateEnvironmentInputNetworkConfiguration from './CreateEnvironmentInputNetworkConfiguration';
import WebserverAccessMode from './WebserverAccessMode';

/**
 * The CreateEnvironmentInput model module.
 * @module model/CreateEnvironmentInput
 * @version 2020-07-01
 */
class CreateEnvironmentInput {
    /**
     * Constructs a new <code>CreateEnvironmentInput</code>.
     * This section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API reference documentation to create an environment. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/mwaa/latest/userguide/get-started.html\&quot;&gt;Get started with Amazon Managed Workflows for Apache Airflow&lt;/a&gt;.
     * @alias module:model/CreateEnvironmentInput
     * @param dagS3Path {String} 
     * @param executionRoleArn {String} 
     * @param networkConfiguration {module:model/CreateEnvironmentInputNetworkConfiguration} 
     * @param sourceBucketArn {String} 
     */
    constructor(dagS3Path, executionRoleArn, networkConfiguration, sourceBucketArn) { 
        
        CreateEnvironmentInput.initialize(this, dagS3Path, executionRoleArn, networkConfiguration, sourceBucketArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dagS3Path, executionRoleArn, networkConfiguration, sourceBucketArn) { 
        obj['DagS3Path'] = dagS3Path;
        obj['ExecutionRoleArn'] = executionRoleArn;
        obj['NetworkConfiguration'] = networkConfiguration;
        obj['SourceBucketArn'] = sourceBucketArn;
    }

    /**
     * Constructs a <code>CreateEnvironmentInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateEnvironmentInput} obj Optional instance to populate.
     * @return {module:model/CreateEnvironmentInput} The populated <code>CreateEnvironmentInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateEnvironmentInput();

            if (data.hasOwnProperty('AirflowConfigurationOptions')) {
                obj['AirflowConfigurationOptions'] = ApiClient.convertToType(data['AirflowConfigurationOptions'], Object);
            }
            if (data.hasOwnProperty('AirflowVersion')) {
                obj['AirflowVersion'] = ApiClient.convertToType(data['AirflowVersion'], 'String');
            }
            if (data.hasOwnProperty('DagS3Path')) {
                obj['DagS3Path'] = ApiClient.convertToType(data['DagS3Path'], 'String');
            }
            if (data.hasOwnProperty('EnvironmentClass')) {
                obj['EnvironmentClass'] = ApiClient.convertToType(data['EnvironmentClass'], 'String');
            }
            if (data.hasOwnProperty('ExecutionRoleArn')) {
                obj['ExecutionRoleArn'] = ApiClient.convertToType(data['ExecutionRoleArn'], 'String');
            }
            if (data.hasOwnProperty('KmsKey')) {
                obj['KmsKey'] = ApiClient.convertToType(data['KmsKey'], 'String');
            }
            if (data.hasOwnProperty('LoggingConfiguration')) {
                obj['LoggingConfiguration'] = CreateEnvironmentInputLoggingConfiguration.constructFromObject(data['LoggingConfiguration']);
            }
            if (data.hasOwnProperty('MaxWorkers')) {
                obj['MaxWorkers'] = ApiClient.convertToType(data['MaxWorkers'], 'Number');
            }
            if (data.hasOwnProperty('MinWorkers')) {
                obj['MinWorkers'] = ApiClient.convertToType(data['MinWorkers'], 'Number');
            }
            if (data.hasOwnProperty('NetworkConfiguration')) {
                obj['NetworkConfiguration'] = CreateEnvironmentInputNetworkConfiguration.constructFromObject(data['NetworkConfiguration']);
            }
            if (data.hasOwnProperty('PluginsS3ObjectVersion')) {
                obj['PluginsS3ObjectVersion'] = ApiClient.convertToType(data['PluginsS3ObjectVersion'], 'String');
            }
            if (data.hasOwnProperty('PluginsS3Path')) {
                obj['PluginsS3Path'] = ApiClient.convertToType(data['PluginsS3Path'], 'String');
            }
            if (data.hasOwnProperty('RequirementsS3ObjectVersion')) {
                obj['RequirementsS3ObjectVersion'] = ApiClient.convertToType(data['RequirementsS3ObjectVersion'], 'String');
            }
            if (data.hasOwnProperty('RequirementsS3Path')) {
                obj['RequirementsS3Path'] = ApiClient.convertToType(data['RequirementsS3Path'], 'String');
            }
            if (data.hasOwnProperty('Schedulers')) {
                obj['Schedulers'] = ApiClient.convertToType(data['Schedulers'], 'Number');
            }
            if (data.hasOwnProperty('SourceBucketArn')) {
                obj['SourceBucketArn'] = ApiClient.convertToType(data['SourceBucketArn'], 'String');
            }
            if (data.hasOwnProperty('StartupScriptS3ObjectVersion')) {
                obj['StartupScriptS3ObjectVersion'] = ApiClient.convertToType(data['StartupScriptS3ObjectVersion'], 'String');
            }
            if (data.hasOwnProperty('StartupScriptS3Path')) {
                obj['StartupScriptS3Path'] = ApiClient.convertToType(data['StartupScriptS3Path'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Object);
            }
            if (data.hasOwnProperty('WebserverAccessMode')) {
                obj['WebserverAccessMode'] = ApiClient.convertToType(data['WebserverAccessMode'], WebserverAccessMode);
            }
            if (data.hasOwnProperty('WeeklyMaintenanceWindowStart')) {
                obj['WeeklyMaintenanceWindowStart'] = ApiClient.convertToType(data['WeeklyMaintenanceWindowStart'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateEnvironmentInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateEnvironmentInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateEnvironmentInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `AirflowConfigurationOptions`
        if (data['AirflowConfigurationOptions']) { // data not null
          Object.validateJSON(data['AirflowConfigurationOptions']);
        }
        // validate the optional field `AirflowVersion`
        if (data['AirflowVersion']) { // data not null
          String.validateJSON(data['AirflowVersion']);
        }
        // validate the optional field `DagS3Path`
        if (data['DagS3Path']) { // data not null
          String.validateJSON(data['DagS3Path']);
        }
        // validate the optional field `EnvironmentClass`
        if (data['EnvironmentClass']) { // data not null
          String.validateJSON(data['EnvironmentClass']);
        }
        // validate the optional field `ExecutionRoleArn`
        if (data['ExecutionRoleArn']) { // data not null
          String.validateJSON(data['ExecutionRoleArn']);
        }
        // validate the optional field `KmsKey`
        if (data['KmsKey']) { // data not null
          String.validateJSON(data['KmsKey']);
        }
        // validate the optional field `LoggingConfiguration`
        if (data['LoggingConfiguration']) { // data not null
          CreateEnvironmentInputLoggingConfiguration.validateJSON(data['LoggingConfiguration']);
        }
        // validate the optional field `MaxWorkers`
        if (data['MaxWorkers']) { // data not null
          Number.validateJSON(data['MaxWorkers']);
        }
        // validate the optional field `MinWorkers`
        if (data['MinWorkers']) { // data not null
          Number.validateJSON(data['MinWorkers']);
        }
        // validate the optional field `NetworkConfiguration`
        if (data['NetworkConfiguration']) { // data not null
          CreateEnvironmentInputNetworkConfiguration.validateJSON(data['NetworkConfiguration']);
        }
        // validate the optional field `PluginsS3ObjectVersion`
        if (data['PluginsS3ObjectVersion']) { // data not null
          String.validateJSON(data['PluginsS3ObjectVersion']);
        }
        // validate the optional field `PluginsS3Path`
        if (data['PluginsS3Path']) { // data not null
          String.validateJSON(data['PluginsS3Path']);
        }
        // validate the optional field `RequirementsS3ObjectVersion`
        if (data['RequirementsS3ObjectVersion']) { // data not null
          String.validateJSON(data['RequirementsS3ObjectVersion']);
        }
        // validate the optional field `RequirementsS3Path`
        if (data['RequirementsS3Path']) { // data not null
          String.validateJSON(data['RequirementsS3Path']);
        }
        // validate the optional field `Schedulers`
        if (data['Schedulers']) { // data not null
          Number.validateJSON(data['Schedulers']);
        }
        // validate the optional field `SourceBucketArn`
        if (data['SourceBucketArn']) { // data not null
          String.validateJSON(data['SourceBucketArn']);
        }
        // validate the optional field `StartupScriptS3ObjectVersion`
        if (data['StartupScriptS3ObjectVersion']) { // data not null
          String.validateJSON(data['StartupScriptS3ObjectVersion']);
        }
        // validate the optional field `StartupScriptS3Path`
        if (data['StartupScriptS3Path']) { // data not null
          String.validateJSON(data['StartupScriptS3Path']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Object.validateJSON(data['Tags']);
        }
        // validate the optional field `WebserverAccessMode`
        if (data['WebserverAccessMode']) { // data not null
          WebserverAccessMode.validateJSON(data['WebserverAccessMode']);
        }
        // validate the optional field `WeeklyMaintenanceWindowStart`
        if (data['WeeklyMaintenanceWindowStart']) { // data not null
          String.validateJSON(data['WeeklyMaintenanceWindowStart']);
        }

        return true;
    }


}

CreateEnvironmentInput.RequiredProperties = ["DagS3Path", "ExecutionRoleArn", "NetworkConfiguration", "SourceBucketArn"];

/**
 * @member {Object} AirflowConfigurationOptions
 */
CreateEnvironmentInput.prototype['AirflowConfigurationOptions'] = undefined;

/**
 * @member {String} AirflowVersion
 */
CreateEnvironmentInput.prototype['AirflowVersion'] = undefined;

/**
 * @member {String} DagS3Path
 */
CreateEnvironmentInput.prototype['DagS3Path'] = undefined;

/**
 * @member {String} EnvironmentClass
 */
CreateEnvironmentInput.prototype['EnvironmentClass'] = undefined;

/**
 * @member {String} ExecutionRoleArn
 */
CreateEnvironmentInput.prototype['ExecutionRoleArn'] = undefined;

/**
 * @member {String} KmsKey
 */
CreateEnvironmentInput.prototype['KmsKey'] = undefined;

/**
 * @member {module:model/CreateEnvironmentInputLoggingConfiguration} LoggingConfiguration
 */
CreateEnvironmentInput.prototype['LoggingConfiguration'] = undefined;

/**
 * @member {Number} MaxWorkers
 */
CreateEnvironmentInput.prototype['MaxWorkers'] = undefined;

/**
 * @member {Number} MinWorkers
 */
CreateEnvironmentInput.prototype['MinWorkers'] = undefined;

/**
 * @member {module:model/CreateEnvironmentInputNetworkConfiguration} NetworkConfiguration
 */
CreateEnvironmentInput.prototype['NetworkConfiguration'] = undefined;

/**
 * @member {String} PluginsS3ObjectVersion
 */
CreateEnvironmentInput.prototype['PluginsS3ObjectVersion'] = undefined;

/**
 * @member {String} PluginsS3Path
 */
CreateEnvironmentInput.prototype['PluginsS3Path'] = undefined;

/**
 * @member {String} RequirementsS3ObjectVersion
 */
CreateEnvironmentInput.prototype['RequirementsS3ObjectVersion'] = undefined;

/**
 * @member {String} RequirementsS3Path
 */
CreateEnvironmentInput.prototype['RequirementsS3Path'] = undefined;

/**
 * @member {Number} Schedulers
 */
CreateEnvironmentInput.prototype['Schedulers'] = undefined;

/**
 * @member {String} SourceBucketArn
 */
CreateEnvironmentInput.prototype['SourceBucketArn'] = undefined;

/**
 * @member {String} StartupScriptS3ObjectVersion
 */
CreateEnvironmentInput.prototype['StartupScriptS3ObjectVersion'] = undefined;

/**
 * @member {String} StartupScriptS3Path
 */
CreateEnvironmentInput.prototype['StartupScriptS3Path'] = undefined;

/**
 * @member {Object} Tags
 */
CreateEnvironmentInput.prototype['Tags'] = undefined;

/**
 * @member {module:model/WebserverAccessMode} WebserverAccessMode
 */
CreateEnvironmentInput.prototype['WebserverAccessMode'] = undefined;

/**
 * @member {String} WeeklyMaintenanceWindowStart
 */
CreateEnvironmentInput.prototype['WeeklyMaintenanceWindowStart'] = undefined;






export default CreateEnvironmentInput;

