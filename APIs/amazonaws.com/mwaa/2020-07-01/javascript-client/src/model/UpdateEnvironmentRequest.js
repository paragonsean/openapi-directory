/**
 * AmazonMWAA
 * <p><fullname>Amazon Managed Workflows for Apache Airflow</fullname> <p>This section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API reference documentation. For more information, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html\">What is Amazon MWAA?</a>.</p> <p> <b>Endpoints</b> </p> <ul> <li> <p> <code>api.airflow.{region}.amazonaws.com</code> - This endpoint is used for environment management.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_CreateEnvironment.html\">CreateEnvironment</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_DeleteEnvironment.html\">DeleteEnvironment</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_GetEnvironment.html\">GetEnvironment</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_ListEnvironments.html\">ListEnvironments</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_ListTagsForResource.html\">ListTagsForResource</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_TagResource.html\">TagResource</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_UntagResource.html\">UntagResource</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_UpdateEnvironment.html\">UpdateEnvironment</a> </p> </li> </ul> </li> <li> <p> <code>env.airflow.{region}.amazonaws.com</code> - This endpoint is used to operate the Airflow environment.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_CreateCliToken.html \">CreateCliToken</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_CreateWebLoginToken.html\">CreateWebLoginToken</a> </p> </li> </ul> </li> <li> <p> <code>ops.airflow.{region}.amazonaws.com</code> - This endpoint is used to push environment metrics that track environment health.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mwaa/latest/API/API_PublishMetrics.html \">PublishMetrics</a> </p> </li> </ul> </li> </ul> <p> <b>Regions</b> </p> <p>For a list of regions that Amazon MWAA supports, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html#regions-mwaa\">Region availability</a> in the <i>Amazon MWAA User Guide</i>.</p></p>
 *
 * The version of the OpenAPI document: 2020-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateEnvironmentRequestLoggingConfiguration from './CreateEnvironmentRequestLoggingConfiguration';
import UpdateEnvironmentRequestNetworkConfiguration from './UpdateEnvironmentRequestNetworkConfiguration';

/**
 * The UpdateEnvironmentRequest model module.
 * @module model/UpdateEnvironmentRequest
 * @version 2020-07-01
 */
class UpdateEnvironmentRequest {
    /**
     * Constructs a new <code>UpdateEnvironmentRequest</code>.
     * @alias module:model/UpdateEnvironmentRequest
     */
    constructor() { 
        
        UpdateEnvironmentRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateEnvironmentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateEnvironmentRequest} obj Optional instance to populate.
     * @return {module:model/UpdateEnvironmentRequest} The populated <code>UpdateEnvironmentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateEnvironmentRequest();

            if (data.hasOwnProperty('AirflowConfigurationOptions')) {
                obj['AirflowConfigurationOptions'] = ApiClient.convertToType(data['AirflowConfigurationOptions'], {'String': 'String'});
            }
            if (data.hasOwnProperty('AirflowVersion')) {
                obj['AirflowVersion'] = ApiClient.convertToType(data['AirflowVersion'], 'String');
            }
            if (data.hasOwnProperty('DagS3Path')) {
                obj['DagS3Path'] = ApiClient.convertToType(data['DagS3Path'], 'String');
            }
            if (data.hasOwnProperty('EnvironmentClass')) {
                obj['EnvironmentClass'] = ApiClient.convertToType(data['EnvironmentClass'], 'String');
            }
            if (data.hasOwnProperty('ExecutionRoleArn')) {
                obj['ExecutionRoleArn'] = ApiClient.convertToType(data['ExecutionRoleArn'], 'String');
            }
            if (data.hasOwnProperty('LoggingConfiguration')) {
                obj['LoggingConfiguration'] = CreateEnvironmentRequestLoggingConfiguration.constructFromObject(data['LoggingConfiguration']);
            }
            if (data.hasOwnProperty('MaxWorkers')) {
                obj['MaxWorkers'] = ApiClient.convertToType(data['MaxWorkers'], 'Number');
            }
            if (data.hasOwnProperty('MinWorkers')) {
                obj['MinWorkers'] = ApiClient.convertToType(data['MinWorkers'], 'Number');
            }
            if (data.hasOwnProperty('NetworkConfiguration')) {
                obj['NetworkConfiguration'] = UpdateEnvironmentRequestNetworkConfiguration.constructFromObject(data['NetworkConfiguration']);
            }
            if (data.hasOwnProperty('PluginsS3ObjectVersion')) {
                obj['PluginsS3ObjectVersion'] = ApiClient.convertToType(data['PluginsS3ObjectVersion'], 'String');
            }
            if (data.hasOwnProperty('PluginsS3Path')) {
                obj['PluginsS3Path'] = ApiClient.convertToType(data['PluginsS3Path'], 'String');
            }
            if (data.hasOwnProperty('RequirementsS3ObjectVersion')) {
                obj['RequirementsS3ObjectVersion'] = ApiClient.convertToType(data['RequirementsS3ObjectVersion'], 'String');
            }
            if (data.hasOwnProperty('RequirementsS3Path')) {
                obj['RequirementsS3Path'] = ApiClient.convertToType(data['RequirementsS3Path'], 'String');
            }
            if (data.hasOwnProperty('Schedulers')) {
                obj['Schedulers'] = ApiClient.convertToType(data['Schedulers'], 'Number');
            }
            if (data.hasOwnProperty('SourceBucketArn')) {
                obj['SourceBucketArn'] = ApiClient.convertToType(data['SourceBucketArn'], 'String');
            }
            if (data.hasOwnProperty('StartupScriptS3ObjectVersion')) {
                obj['StartupScriptS3ObjectVersion'] = ApiClient.convertToType(data['StartupScriptS3ObjectVersion'], 'String');
            }
            if (data.hasOwnProperty('StartupScriptS3Path')) {
                obj['StartupScriptS3Path'] = ApiClient.convertToType(data['StartupScriptS3Path'], 'String');
            }
            if (data.hasOwnProperty('WebserverAccessMode')) {
                obj['WebserverAccessMode'] = ApiClient.convertToType(data['WebserverAccessMode'], 'String');
            }
            if (data.hasOwnProperty('WeeklyMaintenanceWindowStart')) {
                obj['WeeklyMaintenanceWindowStart'] = ApiClient.convertToType(data['WeeklyMaintenanceWindowStart'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateEnvironmentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateEnvironmentRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AirflowVersion'] && !(typeof data['AirflowVersion'] === 'string' || data['AirflowVersion'] instanceof String)) {
            throw new Error("Expected the field `AirflowVersion` to be a primitive type in the JSON string but got " + data['AirflowVersion']);
        }
        // ensure the json data is a string
        if (data['DagS3Path'] && !(typeof data['DagS3Path'] === 'string' || data['DagS3Path'] instanceof String)) {
            throw new Error("Expected the field `DagS3Path` to be a primitive type in the JSON string but got " + data['DagS3Path']);
        }
        // ensure the json data is a string
        if (data['EnvironmentClass'] && !(typeof data['EnvironmentClass'] === 'string' || data['EnvironmentClass'] instanceof String)) {
            throw new Error("Expected the field `EnvironmentClass` to be a primitive type in the JSON string but got " + data['EnvironmentClass']);
        }
        // ensure the json data is a string
        if (data['ExecutionRoleArn'] && !(typeof data['ExecutionRoleArn'] === 'string' || data['ExecutionRoleArn'] instanceof String)) {
            throw new Error("Expected the field `ExecutionRoleArn` to be a primitive type in the JSON string but got " + data['ExecutionRoleArn']);
        }
        // validate the optional field `LoggingConfiguration`
        if (data['LoggingConfiguration']) { // data not null
          CreateEnvironmentRequestLoggingConfiguration.validateJSON(data['LoggingConfiguration']);
        }
        // validate the optional field `NetworkConfiguration`
        if (data['NetworkConfiguration']) { // data not null
          UpdateEnvironmentRequestNetworkConfiguration.validateJSON(data['NetworkConfiguration']);
        }
        // ensure the json data is a string
        if (data['PluginsS3ObjectVersion'] && !(typeof data['PluginsS3ObjectVersion'] === 'string' || data['PluginsS3ObjectVersion'] instanceof String)) {
            throw new Error("Expected the field `PluginsS3ObjectVersion` to be a primitive type in the JSON string but got " + data['PluginsS3ObjectVersion']);
        }
        // ensure the json data is a string
        if (data['PluginsS3Path'] && !(typeof data['PluginsS3Path'] === 'string' || data['PluginsS3Path'] instanceof String)) {
            throw new Error("Expected the field `PluginsS3Path` to be a primitive type in the JSON string but got " + data['PluginsS3Path']);
        }
        // ensure the json data is a string
        if (data['RequirementsS3ObjectVersion'] && !(typeof data['RequirementsS3ObjectVersion'] === 'string' || data['RequirementsS3ObjectVersion'] instanceof String)) {
            throw new Error("Expected the field `RequirementsS3ObjectVersion` to be a primitive type in the JSON string but got " + data['RequirementsS3ObjectVersion']);
        }
        // ensure the json data is a string
        if (data['RequirementsS3Path'] && !(typeof data['RequirementsS3Path'] === 'string' || data['RequirementsS3Path'] instanceof String)) {
            throw new Error("Expected the field `RequirementsS3Path` to be a primitive type in the JSON string but got " + data['RequirementsS3Path']);
        }
        // ensure the json data is a string
        if (data['SourceBucketArn'] && !(typeof data['SourceBucketArn'] === 'string' || data['SourceBucketArn'] instanceof String)) {
            throw new Error("Expected the field `SourceBucketArn` to be a primitive type in the JSON string but got " + data['SourceBucketArn']);
        }
        // ensure the json data is a string
        if (data['StartupScriptS3ObjectVersion'] && !(typeof data['StartupScriptS3ObjectVersion'] === 'string' || data['StartupScriptS3ObjectVersion'] instanceof String)) {
            throw new Error("Expected the field `StartupScriptS3ObjectVersion` to be a primitive type in the JSON string but got " + data['StartupScriptS3ObjectVersion']);
        }
        // ensure the json data is a string
        if (data['StartupScriptS3Path'] && !(typeof data['StartupScriptS3Path'] === 'string' || data['StartupScriptS3Path'] instanceof String)) {
            throw new Error("Expected the field `StartupScriptS3Path` to be a primitive type in the JSON string but got " + data['StartupScriptS3Path']);
        }
        // ensure the json data is a string
        if (data['WebserverAccessMode'] && !(typeof data['WebserverAccessMode'] === 'string' || data['WebserverAccessMode'] instanceof String)) {
            throw new Error("Expected the field `WebserverAccessMode` to be a primitive type in the JSON string but got " + data['WebserverAccessMode']);
        }
        // ensure the json data is a string
        if (data['WeeklyMaintenanceWindowStart'] && !(typeof data['WeeklyMaintenanceWindowStart'] === 'string' || data['WeeklyMaintenanceWindowStart'] instanceof String)) {
            throw new Error("Expected the field `WeeklyMaintenanceWindowStart` to be a primitive type in the JSON string but got " + data['WeeklyMaintenanceWindowStart']);
        }

        return true;
    }


}



/**
 * A list of key-value pairs containing the Apache Airflow configuration options you want to attach to your environment. For more information, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html\">Apache Airflow configuration options</a>.
 * @member {Object.<String, String>} AirflowConfigurationOptions
 */
UpdateEnvironmentRequest.prototype['AirflowConfigurationOptions'] = undefined;

/**
 * <p>The Apache Airflow version for your environment. To upgrade your environment, specify a newer version of Apache Airflow supported by Amazon MWAA.</p> <p>Before you upgrade an environment, make sure your requirements, DAGs, plugins, and other resources used in your workflows are compatible with the new Apache Airflow version. For more information about updating your resources, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/upgrading-environment.html\">Upgrading an Amazon MWAA environment</a>.</p> <p>Valid values: <code>1.10.12</code>, <code>2.0.2</code>, <code>2.2.2</code>, <code>2.4.3</code>, and <code>2.5.1</code>.</p>
 * @member {String} AirflowVersion
 */
UpdateEnvironmentRequest.prototype['AirflowVersion'] = undefined;

/**
 * The relative path to the DAGs folder on your Amazon S3 bucket. For example, <code>dags</code>. For more information, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html\">Adding or updating DAGs</a>.
 * @member {String} DagS3Path
 */
UpdateEnvironmentRequest.prototype['DagS3Path'] = undefined;

/**
 * The environment class type. Valid values: <code>mw1.small</code>, <code>mw1.medium</code>, <code>mw1.large</code>. For more information, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html\">Amazon MWAA environment class</a>.
 * @member {String} EnvironmentClass
 */
UpdateEnvironmentRequest.prototype['EnvironmentClass'] = undefined;

/**
 * The Amazon Resource Name (ARN) of the execution role in IAM that allows MWAA to access Amazon Web Services resources in your environment. For example, <code>arn:aws:iam::123456789:role/my-execution-role</code>. For more information, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html\">Amazon MWAA Execution role</a>.
 * @member {String} ExecutionRoleArn
 */
UpdateEnvironmentRequest.prototype['ExecutionRoleArn'] = undefined;

/**
 * @member {module:model/CreateEnvironmentRequestLoggingConfiguration} LoggingConfiguration
 */
UpdateEnvironmentRequest.prototype['LoggingConfiguration'] = undefined;

/**
 * The maximum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the <code>MaxWorkers</code> field. For example, <code>20</code>. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the one worker that is included with your environment, or the number you specify in <code>MinWorkers</code>.
 * @member {Number} MaxWorkers
 */
UpdateEnvironmentRequest.prototype['MaxWorkers'] = undefined;

/**
 * The minimum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the <code>MaxWorkers</code> field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the worker count you specify in the <code>MinWorkers</code> field. For example, <code>2</code>.
 * @member {Number} MinWorkers
 */
UpdateEnvironmentRequest.prototype['MinWorkers'] = undefined;

/**
 * @member {module:model/UpdateEnvironmentRequestNetworkConfiguration} NetworkConfiguration
 */
UpdateEnvironmentRequest.prototype['NetworkConfiguration'] = undefined;

/**
 * The version of the plugins.zip file on your Amazon S3 bucket. You must specify a version each time a <code>plugins.zip</code> file is updated. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html\">How S3 Versioning works</a>.
 * @member {String} PluginsS3ObjectVersion
 */
UpdateEnvironmentRequest.prototype['PluginsS3ObjectVersion'] = undefined;

/**
 * The relative path to the <code>plugins.zip</code> file on your Amazon S3 bucket. For example, <code>plugins.zip</code>. If specified, then the plugins.zip version is required. For more information, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html\">Installing custom plugins</a>.
 * @member {String} PluginsS3Path
 */
UpdateEnvironmentRequest.prototype['PluginsS3Path'] = undefined;

/**
 * The version of the requirements.txt file on your Amazon S3 bucket. You must specify a version each time a <code>requirements.txt</code> file is updated. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html\">How S3 Versioning works</a>.
 * @member {String} RequirementsS3ObjectVersion
 */
UpdateEnvironmentRequest.prototype['RequirementsS3ObjectVersion'] = undefined;

/**
 * The relative path to the <code>requirements.txt</code> file on your Amazon S3 bucket. For example, <code>requirements.txt</code>. If specified, then a file version is required. For more information, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html\">Installing Python dependencies</a>.
 * @member {String} RequirementsS3Path
 */
UpdateEnvironmentRequest.prototype['RequirementsS3Path'] = undefined;

/**
 * The number of Apache Airflow schedulers to run in your Amazon MWAA environment.
 * @member {Number} Schedulers
 */
UpdateEnvironmentRequest.prototype['Schedulers'] = undefined;

/**
 * The Amazon Resource Name (ARN) of the Amazon S3 bucket where your DAG code and supporting files are stored. For example, <code>arn:aws:s3:::my-airflow-bucket-unique-name</code>. For more information, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html\">Create an Amazon S3 bucket for Amazon MWAA</a>.
 * @member {String} SourceBucketArn
 */
UpdateEnvironmentRequest.prototype['SourceBucketArn'] = undefined;

/**
 * <p> The version of the startup shell script in your Amazon S3 bucket. You must specify the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html\">version ID</a> that Amazon S3 assigns to the file every time you update the script. </p> <p> Version IDs are Unicode, UTF-8 encoded, URL-ready, opaque strings that are no more than 1,024 bytes long. The following is an example: </p> <p> <code>3sL4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo</code> </p> <p> For more information, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html\">Using a startup script</a>. </p>
 * @member {String} StartupScriptS3ObjectVersion
 */
UpdateEnvironmentRequest.prototype['StartupScriptS3ObjectVersion'] = undefined;

/**
 * <p>The relative path to the startup shell script in your Amazon S3 bucket. For example, <code>s3://mwaa-environment/startup.sh</code>.</p> <p> Amazon MWAA runs the script as your environment starts, and before running the Apache Airflow process. You can use this script to install dependencies, modify Apache Airflow configuration options, and set environment variables. For more information, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html\">Using a startup script</a>. </p>
 * @member {String} StartupScriptS3Path
 */
UpdateEnvironmentRequest.prototype['StartupScriptS3Path'] = undefined;

/**
 * The Apache Airflow <i>Web server</i> access mode. For more information, see <a href=\"https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html\">Apache Airflow access modes</a>.
 * @member {module:model/UpdateEnvironmentRequest.WebserverAccessModeEnum} WebserverAccessMode
 */
UpdateEnvironmentRequest.prototype['WebserverAccessMode'] = undefined;

/**
 * The day and time of the week in Coordinated Universal Time (UTC) 24-hour standard time to start weekly maintenance updates of your environment in the following format: <code>DAY:HH:MM</code>. For example: <code>TUE:03:30</code>. You can specify a start time in 30 minute increments only.
 * @member {String} WeeklyMaintenanceWindowStart
 */
UpdateEnvironmentRequest.prototype['WeeklyMaintenanceWindowStart'] = undefined;





/**
 * Allowed values for the <code>WebserverAccessMode</code> property.
 * @enum {String}
 * @readonly
 */
UpdateEnvironmentRequest['WebserverAccessModeEnum'] = {

    /**
     * value: "PRIVATE_ONLY"
     * @const
     */
    "PRIVATE_ONLY": "PRIVATE_ONLY",

    /**
     * value: "PUBLIC_ONLY"
     * @const
     */
    "PUBLIC_ONLY": "PUBLIC_ONLY"
};



export default UpdateEnvironmentRequest;

