# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_environment_input_logging_configuration import UpdateEnvironmentInputLoggingConfiguration
from openapi_server.models.update_environment_input_network_configuration import UpdateEnvironmentInputNetworkConfiguration
from openapi_server.models.webserver_access_mode import WebserverAccessMode
from openapi_server import util


class UpdateEnvironmentInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, airflow_configuration_options: Dict=None, airflow_version: str=None, dag_s3_path: str=None, environment_class: str=None, execution_role_arn: str=None, logging_configuration: UpdateEnvironmentInputLoggingConfiguration=None, max_workers: int=None, min_workers: int=None, network_configuration: UpdateEnvironmentInputNetworkConfiguration=None, plugins_s3_object_version: str=None, plugins_s3_path: str=None, requirements_s3_object_version: str=None, requirements_s3_path: str=None, schedulers: int=None, source_bucket_arn: str=None, startup_script_s3_object_version: str=None, startup_script_s3_path: str=None, webserver_access_mode: WebserverAccessMode=None, weekly_maintenance_window_start: str=None):
        """UpdateEnvironmentInput - a model defined in OpenAPI

        :param airflow_configuration_options: The airflow_configuration_options of this UpdateEnvironmentInput.
        :param airflow_version: The airflow_version of this UpdateEnvironmentInput.
        :param dag_s3_path: The dag_s3_path of this UpdateEnvironmentInput.
        :param environment_class: The environment_class of this UpdateEnvironmentInput.
        :param execution_role_arn: The execution_role_arn of this UpdateEnvironmentInput.
        :param logging_configuration: The logging_configuration of this UpdateEnvironmentInput.
        :param max_workers: The max_workers of this UpdateEnvironmentInput.
        :param min_workers: The min_workers of this UpdateEnvironmentInput.
        :param network_configuration: The network_configuration of this UpdateEnvironmentInput.
        :param plugins_s3_object_version: The plugins_s3_object_version of this UpdateEnvironmentInput.
        :param plugins_s3_path: The plugins_s3_path of this UpdateEnvironmentInput.
        :param requirements_s3_object_version: The requirements_s3_object_version of this UpdateEnvironmentInput.
        :param requirements_s3_path: The requirements_s3_path of this UpdateEnvironmentInput.
        :param schedulers: The schedulers of this UpdateEnvironmentInput.
        :param source_bucket_arn: The source_bucket_arn of this UpdateEnvironmentInput.
        :param startup_script_s3_object_version: The startup_script_s3_object_version of this UpdateEnvironmentInput.
        :param startup_script_s3_path: The startup_script_s3_path of this UpdateEnvironmentInput.
        :param webserver_access_mode: The webserver_access_mode of this UpdateEnvironmentInput.
        :param weekly_maintenance_window_start: The weekly_maintenance_window_start of this UpdateEnvironmentInput.
        """
        self.openapi_types = {
            'airflow_configuration_options': Dict,
            'airflow_version': str,
            'dag_s3_path': str,
            'environment_class': str,
            'execution_role_arn': str,
            'logging_configuration': UpdateEnvironmentInputLoggingConfiguration,
            'max_workers': int,
            'min_workers': int,
            'network_configuration': UpdateEnvironmentInputNetworkConfiguration,
            'plugins_s3_object_version': str,
            'plugins_s3_path': str,
            'requirements_s3_object_version': str,
            'requirements_s3_path': str,
            'schedulers': int,
            'source_bucket_arn': str,
            'startup_script_s3_object_version': str,
            'startup_script_s3_path': str,
            'webserver_access_mode': WebserverAccessMode,
            'weekly_maintenance_window_start': str
        }

        self.attribute_map = {
            'airflow_configuration_options': 'AirflowConfigurationOptions',
            'airflow_version': 'AirflowVersion',
            'dag_s3_path': 'DagS3Path',
            'environment_class': 'EnvironmentClass',
            'execution_role_arn': 'ExecutionRoleArn',
            'logging_configuration': 'LoggingConfiguration',
            'max_workers': 'MaxWorkers',
            'min_workers': 'MinWorkers',
            'network_configuration': 'NetworkConfiguration',
            'plugins_s3_object_version': 'PluginsS3ObjectVersion',
            'plugins_s3_path': 'PluginsS3Path',
            'requirements_s3_object_version': 'RequirementsS3ObjectVersion',
            'requirements_s3_path': 'RequirementsS3Path',
            'schedulers': 'Schedulers',
            'source_bucket_arn': 'SourceBucketArn',
            'startup_script_s3_object_version': 'StartupScriptS3ObjectVersion',
            'startup_script_s3_path': 'StartupScriptS3Path',
            'webserver_access_mode': 'WebserverAccessMode',
            'weekly_maintenance_window_start': 'WeeklyMaintenanceWindowStart'
        }

        self._airflow_configuration_options = airflow_configuration_options
        self._airflow_version = airflow_version
        self._dag_s3_path = dag_s3_path
        self._environment_class = environment_class
        self._execution_role_arn = execution_role_arn
        self._logging_configuration = logging_configuration
        self._max_workers = max_workers
        self._min_workers = min_workers
        self._network_configuration = network_configuration
        self._plugins_s3_object_version = plugins_s3_object_version
        self._plugins_s3_path = plugins_s3_path
        self._requirements_s3_object_version = requirements_s3_object_version
        self._requirements_s3_path = requirements_s3_path
        self._schedulers = schedulers
        self._source_bucket_arn = source_bucket_arn
        self._startup_script_s3_object_version = startup_script_s3_object_version
        self._startup_script_s3_path = startup_script_s3_path
        self._webserver_access_mode = webserver_access_mode
        self._weekly_maintenance_window_start = weekly_maintenance_window_start

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateEnvironmentInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateEnvironmentInput of this UpdateEnvironmentInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def airflow_configuration_options(self):
        """Gets the airflow_configuration_options of this UpdateEnvironmentInput.


        :return: The airflow_configuration_options of this UpdateEnvironmentInput.
        :rtype: Dict
        """
        return self._airflow_configuration_options

    @airflow_configuration_options.setter
    def airflow_configuration_options(self, airflow_configuration_options):
        """Sets the airflow_configuration_options of this UpdateEnvironmentInput.


        :param airflow_configuration_options: The airflow_configuration_options of this UpdateEnvironmentInput.
        :type airflow_configuration_options: Dict
        """

        self._airflow_configuration_options = airflow_configuration_options

    @property
    def airflow_version(self):
        """Gets the airflow_version of this UpdateEnvironmentInput.


        :return: The airflow_version of this UpdateEnvironmentInput.
        :rtype: str
        """
        return self._airflow_version

    @airflow_version.setter
    def airflow_version(self, airflow_version):
        """Sets the airflow_version of this UpdateEnvironmentInput.


        :param airflow_version: The airflow_version of this UpdateEnvironmentInput.
        :type airflow_version: str
        """

        self._airflow_version = airflow_version

    @property
    def dag_s3_path(self):
        """Gets the dag_s3_path of this UpdateEnvironmentInput.


        :return: The dag_s3_path of this UpdateEnvironmentInput.
        :rtype: str
        """
        return self._dag_s3_path

    @dag_s3_path.setter
    def dag_s3_path(self, dag_s3_path):
        """Sets the dag_s3_path of this UpdateEnvironmentInput.


        :param dag_s3_path: The dag_s3_path of this UpdateEnvironmentInput.
        :type dag_s3_path: str
        """

        self._dag_s3_path = dag_s3_path

    @property
    def environment_class(self):
        """Gets the environment_class of this UpdateEnvironmentInput.


        :return: The environment_class of this UpdateEnvironmentInput.
        :rtype: str
        """
        return self._environment_class

    @environment_class.setter
    def environment_class(self, environment_class):
        """Sets the environment_class of this UpdateEnvironmentInput.


        :param environment_class: The environment_class of this UpdateEnvironmentInput.
        :type environment_class: str
        """

        self._environment_class = environment_class

    @property
    def execution_role_arn(self):
        """Gets the execution_role_arn of this UpdateEnvironmentInput.


        :return: The execution_role_arn of this UpdateEnvironmentInput.
        :rtype: str
        """
        return self._execution_role_arn

    @execution_role_arn.setter
    def execution_role_arn(self, execution_role_arn):
        """Sets the execution_role_arn of this UpdateEnvironmentInput.


        :param execution_role_arn: The execution_role_arn of this UpdateEnvironmentInput.
        :type execution_role_arn: str
        """

        self._execution_role_arn = execution_role_arn

    @property
    def logging_configuration(self):
        """Gets the logging_configuration of this UpdateEnvironmentInput.


        :return: The logging_configuration of this UpdateEnvironmentInput.
        :rtype: UpdateEnvironmentInputLoggingConfiguration
        """
        return self._logging_configuration

    @logging_configuration.setter
    def logging_configuration(self, logging_configuration):
        """Sets the logging_configuration of this UpdateEnvironmentInput.


        :param logging_configuration: The logging_configuration of this UpdateEnvironmentInput.
        :type logging_configuration: UpdateEnvironmentInputLoggingConfiguration
        """

        self._logging_configuration = logging_configuration

    @property
    def max_workers(self):
        """Gets the max_workers of this UpdateEnvironmentInput.


        :return: The max_workers of this UpdateEnvironmentInput.
        :rtype: int
        """
        return self._max_workers

    @max_workers.setter
    def max_workers(self, max_workers):
        """Sets the max_workers of this UpdateEnvironmentInput.


        :param max_workers: The max_workers of this UpdateEnvironmentInput.
        :type max_workers: int
        """

        self._max_workers = max_workers

    @property
    def min_workers(self):
        """Gets the min_workers of this UpdateEnvironmentInput.


        :return: The min_workers of this UpdateEnvironmentInput.
        :rtype: int
        """
        return self._min_workers

    @min_workers.setter
    def min_workers(self, min_workers):
        """Sets the min_workers of this UpdateEnvironmentInput.


        :param min_workers: The min_workers of this UpdateEnvironmentInput.
        :type min_workers: int
        """

        self._min_workers = min_workers

    @property
    def network_configuration(self):
        """Gets the network_configuration of this UpdateEnvironmentInput.


        :return: The network_configuration of this UpdateEnvironmentInput.
        :rtype: UpdateEnvironmentInputNetworkConfiguration
        """
        return self._network_configuration

    @network_configuration.setter
    def network_configuration(self, network_configuration):
        """Sets the network_configuration of this UpdateEnvironmentInput.


        :param network_configuration: The network_configuration of this UpdateEnvironmentInput.
        :type network_configuration: UpdateEnvironmentInputNetworkConfiguration
        """

        self._network_configuration = network_configuration

    @property
    def plugins_s3_object_version(self):
        """Gets the plugins_s3_object_version of this UpdateEnvironmentInput.


        :return: The plugins_s3_object_version of this UpdateEnvironmentInput.
        :rtype: str
        """
        return self._plugins_s3_object_version

    @plugins_s3_object_version.setter
    def plugins_s3_object_version(self, plugins_s3_object_version):
        """Sets the plugins_s3_object_version of this UpdateEnvironmentInput.


        :param plugins_s3_object_version: The plugins_s3_object_version of this UpdateEnvironmentInput.
        :type plugins_s3_object_version: str
        """

        self._plugins_s3_object_version = plugins_s3_object_version

    @property
    def plugins_s3_path(self):
        """Gets the plugins_s3_path of this UpdateEnvironmentInput.


        :return: The plugins_s3_path of this UpdateEnvironmentInput.
        :rtype: str
        """
        return self._plugins_s3_path

    @plugins_s3_path.setter
    def plugins_s3_path(self, plugins_s3_path):
        """Sets the plugins_s3_path of this UpdateEnvironmentInput.


        :param plugins_s3_path: The plugins_s3_path of this UpdateEnvironmentInput.
        :type plugins_s3_path: str
        """

        self._plugins_s3_path = plugins_s3_path

    @property
    def requirements_s3_object_version(self):
        """Gets the requirements_s3_object_version of this UpdateEnvironmentInput.


        :return: The requirements_s3_object_version of this UpdateEnvironmentInput.
        :rtype: str
        """
        return self._requirements_s3_object_version

    @requirements_s3_object_version.setter
    def requirements_s3_object_version(self, requirements_s3_object_version):
        """Sets the requirements_s3_object_version of this UpdateEnvironmentInput.


        :param requirements_s3_object_version: The requirements_s3_object_version of this UpdateEnvironmentInput.
        :type requirements_s3_object_version: str
        """

        self._requirements_s3_object_version = requirements_s3_object_version

    @property
    def requirements_s3_path(self):
        """Gets the requirements_s3_path of this UpdateEnvironmentInput.


        :return: The requirements_s3_path of this UpdateEnvironmentInput.
        :rtype: str
        """
        return self._requirements_s3_path

    @requirements_s3_path.setter
    def requirements_s3_path(self, requirements_s3_path):
        """Sets the requirements_s3_path of this UpdateEnvironmentInput.


        :param requirements_s3_path: The requirements_s3_path of this UpdateEnvironmentInput.
        :type requirements_s3_path: str
        """

        self._requirements_s3_path = requirements_s3_path

    @property
    def schedulers(self):
        """Gets the schedulers of this UpdateEnvironmentInput.


        :return: The schedulers of this UpdateEnvironmentInput.
        :rtype: int
        """
        return self._schedulers

    @schedulers.setter
    def schedulers(self, schedulers):
        """Sets the schedulers of this UpdateEnvironmentInput.


        :param schedulers: The schedulers of this UpdateEnvironmentInput.
        :type schedulers: int
        """

        self._schedulers = schedulers

    @property
    def source_bucket_arn(self):
        """Gets the source_bucket_arn of this UpdateEnvironmentInput.


        :return: The source_bucket_arn of this UpdateEnvironmentInput.
        :rtype: str
        """
        return self._source_bucket_arn

    @source_bucket_arn.setter
    def source_bucket_arn(self, source_bucket_arn):
        """Sets the source_bucket_arn of this UpdateEnvironmentInput.


        :param source_bucket_arn: The source_bucket_arn of this UpdateEnvironmentInput.
        :type source_bucket_arn: str
        """

        self._source_bucket_arn = source_bucket_arn

    @property
    def startup_script_s3_object_version(self):
        """Gets the startup_script_s3_object_version of this UpdateEnvironmentInput.


        :return: The startup_script_s3_object_version of this UpdateEnvironmentInput.
        :rtype: str
        """
        return self._startup_script_s3_object_version

    @startup_script_s3_object_version.setter
    def startup_script_s3_object_version(self, startup_script_s3_object_version):
        """Sets the startup_script_s3_object_version of this UpdateEnvironmentInput.


        :param startup_script_s3_object_version: The startup_script_s3_object_version of this UpdateEnvironmentInput.
        :type startup_script_s3_object_version: str
        """

        self._startup_script_s3_object_version = startup_script_s3_object_version

    @property
    def startup_script_s3_path(self):
        """Gets the startup_script_s3_path of this UpdateEnvironmentInput.


        :return: The startup_script_s3_path of this UpdateEnvironmentInput.
        :rtype: str
        """
        return self._startup_script_s3_path

    @startup_script_s3_path.setter
    def startup_script_s3_path(self, startup_script_s3_path):
        """Sets the startup_script_s3_path of this UpdateEnvironmentInput.


        :param startup_script_s3_path: The startup_script_s3_path of this UpdateEnvironmentInput.
        :type startup_script_s3_path: str
        """

        self._startup_script_s3_path = startup_script_s3_path

    @property
    def webserver_access_mode(self):
        """Gets the webserver_access_mode of this UpdateEnvironmentInput.


        :return: The webserver_access_mode of this UpdateEnvironmentInput.
        :rtype: WebserverAccessMode
        """
        return self._webserver_access_mode

    @webserver_access_mode.setter
    def webserver_access_mode(self, webserver_access_mode):
        """Sets the webserver_access_mode of this UpdateEnvironmentInput.


        :param webserver_access_mode: The webserver_access_mode of this UpdateEnvironmentInput.
        :type webserver_access_mode: WebserverAccessMode
        """

        self._webserver_access_mode = webserver_access_mode

    @property
    def weekly_maintenance_window_start(self):
        """Gets the weekly_maintenance_window_start of this UpdateEnvironmentInput.


        :return: The weekly_maintenance_window_start of this UpdateEnvironmentInput.
        :rtype: str
        """
        return self._weekly_maintenance_window_start

    @weekly_maintenance_window_start.setter
    def weekly_maintenance_window_start(self, weekly_maintenance_window_start):
        """Sets the weekly_maintenance_window_start of this UpdateEnvironmentInput.


        :param weekly_maintenance_window_start: The weekly_maintenance_window_start of this UpdateEnvironmentInput.
        :type weekly_maintenance_window_start: str
        """

        self._weekly_maintenance_window_start = weekly_maintenance_window_start
