/**
 * Amazon AppIntegrations Service
 * <p>The Amazon AppIntegrations service enables you to configure and reuse connections to external applications.</p> <p>For information about how you can use external applications with Amazon Connect, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/crm.html\">Set up pre-built integrations</a> and <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-wisdom.html\">Deliver information to agents using Amazon Connect Wisdom</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-07-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonAppIntegrationsService);
  }
}(this, function(expect, AmazonAppIntegrationsService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonAppIntegrationsService.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createDataIntegration', function() {
      it('should call createDataIntegration successfully', function(done) {
        //uncomment below and update the code to test createDataIntegration
        //instance.createDataIntegration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEventIntegration', function() {
      it('should call createEventIntegration successfully', function(done) {
        //uncomment below and update the code to test createEventIntegration
        //instance.createEventIntegration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDataIntegration', function() {
      it('should call deleteDataIntegration successfully', function(done) {
        //uncomment below and update the code to test deleteDataIntegration
        //instance.deleteDataIntegration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEventIntegration', function() {
      it('should call deleteEventIntegration successfully', function(done) {
        //uncomment below and update the code to test deleteEventIntegration
        //instance.deleteEventIntegration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDataIntegration', function() {
      it('should call getDataIntegration successfully', function(done) {
        //uncomment below and update the code to test getDataIntegration
        //instance.getDataIntegration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventIntegration', function() {
      it('should call getEventIntegration successfully', function(done) {
        //uncomment below and update the code to test getEventIntegration
        //instance.getEventIntegration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDataIntegrationAssociations', function() {
      it('should call listDataIntegrationAssociations successfully', function(done) {
        //uncomment below and update the code to test listDataIntegrationAssociations
        //instance.listDataIntegrationAssociations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDataIntegrations', function() {
      it('should call listDataIntegrations successfully', function(done) {
        //uncomment below and update the code to test listDataIntegrations
        //instance.listDataIntegrations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listEventIntegrationAssociations', function() {
      it('should call listEventIntegrationAssociations successfully', function(done) {
        //uncomment below and update the code to test listEventIntegrationAssociations
        //instance.listEventIntegrationAssociations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listEventIntegrations', function() {
      it('should call listEventIntegrations successfully', function(done) {
        //uncomment below and update the code to test listEventIntegrations
        //instance.listEventIntegrations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDataIntegration', function() {
      it('should call updateDataIntegration successfully', function(done) {
        //uncomment below and update the code to test updateDataIntegration
        //instance.updateDataIntegration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEventIntegration', function() {
      it('should call updateEventIntegration successfully', function(done) {
        //uncomment below and update the code to test updateEventIntegration
        //instance.updateEventIntegration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
