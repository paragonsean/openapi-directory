/**
 * Amazon AppIntegrations Service
 * <p>The Amazon AppIntegrations service enables you to configure and reuse connections to external applications.</p> <p>For information about how you can use external applications with Amazon Connect, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/crm.html\">Set up pre-built integrations</a> and <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-wisdom.html\">Deliver information to agents using Amazon Connect Wisdom</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-07-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventIntegrationAssociation model module.
 * @module model/EventIntegrationAssociation
 * @version 2020-07-29
 */
class EventIntegrationAssociation {
    /**
     * Constructs a new <code>EventIntegrationAssociation</code>.
     * The event integration association.
     * @alias module:model/EventIntegrationAssociation
     */
    constructor() { 
        
        EventIntegrationAssociation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventIntegrationAssociation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventIntegrationAssociation} obj Optional instance to populate.
     * @return {module:model/EventIntegrationAssociation} The populated <code>EventIntegrationAssociation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventIntegrationAssociation();

            if (data.hasOwnProperty('EventIntegrationAssociationArn')) {
                obj['EventIntegrationAssociationArn'] = ApiClient.convertToType(data['EventIntegrationAssociationArn'], 'String');
            }
            if (data.hasOwnProperty('EventIntegrationAssociationId')) {
                obj['EventIntegrationAssociationId'] = ApiClient.convertToType(data['EventIntegrationAssociationId'], 'String');
            }
            if (data.hasOwnProperty('EventIntegrationName')) {
                obj['EventIntegrationName'] = ApiClient.convertToType(data['EventIntegrationName'], 'String');
            }
            if (data.hasOwnProperty('ClientId')) {
                obj['ClientId'] = ApiClient.convertToType(data['ClientId'], 'String');
            }
            if (data.hasOwnProperty('EventBridgeRuleName')) {
                obj['EventBridgeRuleName'] = ApiClient.convertToType(data['EventBridgeRuleName'], 'String');
            }
            if (data.hasOwnProperty('ClientAssociationMetadata')) {
                obj['ClientAssociationMetadata'] = ApiClient.convertToType(data['ClientAssociationMetadata'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventIntegrationAssociation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventIntegrationAssociation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `EventIntegrationAssociationArn`
        if (data['EventIntegrationAssociationArn']) { // data not null
          String.validateJSON(data['EventIntegrationAssociationArn']);
        }
        // validate the optional field `EventIntegrationAssociationId`
        if (data['EventIntegrationAssociationId']) { // data not null
          String.validateJSON(data['EventIntegrationAssociationId']);
        }
        // validate the optional field `EventIntegrationName`
        if (data['EventIntegrationName']) { // data not null
          String.validateJSON(data['EventIntegrationName']);
        }
        // validate the optional field `ClientId`
        if (data['ClientId']) { // data not null
          String.validateJSON(data['ClientId']);
        }
        // validate the optional field `EventBridgeRuleName`
        if (data['EventBridgeRuleName']) { // data not null
          String.validateJSON(data['EventBridgeRuleName']);
        }
        // validate the optional field `ClientAssociationMetadata`
        if (data['ClientAssociationMetadata']) { // data not null
          Object.validateJSON(data['ClientAssociationMetadata']);
        }

        return true;
    }


}



/**
 * @member {String} EventIntegrationAssociationArn
 */
EventIntegrationAssociation.prototype['EventIntegrationAssociationArn'] = undefined;

/**
 * @member {String} EventIntegrationAssociationId
 */
EventIntegrationAssociation.prototype['EventIntegrationAssociationId'] = undefined;

/**
 * @member {String} EventIntegrationName
 */
EventIntegrationAssociation.prototype['EventIntegrationName'] = undefined;

/**
 * @member {String} ClientId
 */
EventIntegrationAssociation.prototype['ClientId'] = undefined;

/**
 * @member {String} EventBridgeRuleName
 */
EventIntegrationAssociation.prototype['EventBridgeRuleName'] = undefined;

/**
 * @member {Object} ClientAssociationMetadata
 */
EventIntegrationAssociation.prototype['ClientAssociationMetadata'] = undefined;






export default EventIntegrationAssociation;

