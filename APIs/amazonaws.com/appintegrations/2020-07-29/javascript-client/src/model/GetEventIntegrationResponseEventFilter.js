/**
 * Amazon AppIntegrations Service
 * <p>The Amazon AppIntegrations service enables you to configure and reuse connections to external applications.</p> <p>For information about how you can use external applications with Amazon Connect, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/crm.html\">Set up pre-built integrations</a> and <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-wisdom.html\">Deliver information to agents using Amazon Connect Wisdom</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-07-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventFilter from './EventFilter';

/**
 * The GetEventIntegrationResponseEventFilter model module.
 * @module model/GetEventIntegrationResponseEventFilter
 * @version 2020-07-29
 */
class GetEventIntegrationResponseEventFilter {
    /**
     * Constructs a new <code>GetEventIntegrationResponseEventFilter</code>.
     * @alias module:model/GetEventIntegrationResponseEventFilter
     * @implements module:model/EventFilter
     * @param source {String} 
     */
    constructor(source) { 
        EventFilter.initialize(this, source);
        GetEventIntegrationResponseEventFilter.initialize(this, source);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, source) { 
        obj['Source'] = source;
    }

    /**
     * Constructs a <code>GetEventIntegrationResponseEventFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetEventIntegrationResponseEventFilter} obj Optional instance to populate.
     * @return {module:model/GetEventIntegrationResponseEventFilter} The populated <code>GetEventIntegrationResponseEventFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetEventIntegrationResponseEventFilter();
            EventFilter.constructFromObject(data, obj);

            if (data.hasOwnProperty('Source')) {
                obj['Source'] = ApiClient.convertToType(data['Source'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetEventIntegrationResponseEventFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetEventIntegrationResponseEventFilter</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetEventIntegrationResponseEventFilter.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Source`
        if (data['Source']) { // data not null
          String.validateJSON(data['Source']);
        }

        return true;
    }


}

GetEventIntegrationResponseEventFilter.RequiredProperties = ["Source"];

/**
 * @member {String} Source
 */
GetEventIntegrationResponseEventFilter.prototype['Source'] = undefined;


// Implement EventFilter interface:
/**
 * @member {String} Source
 */
EventFilter.prototype['Source'] = undefined;




export default GetEventIntegrationResponseEventFilter;

