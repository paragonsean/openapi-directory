/**
 * Amazon AppIntegrations Service
 * <p>The Amazon AppIntegrations service enables you to configure and reuse connections to external applications.</p> <p>For information about how you can use external applications with Amazon Connect, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/crm.html\">Set up pre-built integrations</a> and <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-wisdom.html\">Deliver information to agents using Amazon Connect Wisdom</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-07-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateEventIntegrationRequest.h
 *
 * 
 */

#ifndef OAICreateEventIntegrationRequest_H
#define OAICreateEventIntegrationRequest_H

#include <QJsonObject>

#include "OAIGetEventIntegrationResponse_EventFilter.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetEventIntegrationResponse_EventFilter;

class OAICreateEventIntegrationRequest : public OAIObject {
public:
    OAICreateEventIntegrationRequest();
    OAICreateEventIntegrationRequest(QString json);
    ~OAICreateEventIntegrationRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIGetEventIntegrationResponse_EventFilter getEventFilter() const;
    void setEventFilter(const OAIGetEventIntegrationResponse_EventFilter &event_filter);
    bool is_event_filter_Set() const;
    bool is_event_filter_Valid() const;

    QString getEventBridgeBus() const;
    void setEventBridgeBus(const QString &event_bridge_bus);
    bool is_event_bridge_bus_Set() const;
    bool is_event_bridge_bus_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIGetEventIntegrationResponse_EventFilter m_event_filter;
    bool m_event_filter_isSet;
    bool m_event_filter_isValid;

    QString m_event_bridge_bus;
    bool m_event_bridge_bus_isSet;
    bool m_event_bridge_bus_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateEventIntegrationRequest)

#endif // OAICreateEventIntegrationRequest_H
