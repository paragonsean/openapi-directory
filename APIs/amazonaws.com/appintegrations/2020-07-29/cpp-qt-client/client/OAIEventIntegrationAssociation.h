/**
 * Amazon AppIntegrations Service
 * <p>The Amazon AppIntegrations service enables you to configure and reuse connections to external applications.</p> <p>For information about how you can use external applications with Amazon Connect, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/crm.html\">Set up pre-built integrations</a> and <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-wisdom.html\">Deliver information to agents using Amazon Connect Wisdom</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-07-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventIntegrationAssociation.h
 *
 * The event integration association.
 */

#ifndef OAIEventIntegrationAssociation_H
#define OAIEventIntegrationAssociation_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEventIntegrationAssociation : public OAIObject {
public:
    OAIEventIntegrationAssociation();
    OAIEventIntegrationAssociation(QString json);
    ~OAIEventIntegrationAssociation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEventIntegrationAssociationArn() const;
    void setEventIntegrationAssociationArn(const QString &event_integration_association_arn);
    bool is_event_integration_association_arn_Set() const;
    bool is_event_integration_association_arn_Valid() const;

    QString getEventIntegrationAssociationId() const;
    void setEventIntegrationAssociationId(const QString &event_integration_association_id);
    bool is_event_integration_association_id_Set() const;
    bool is_event_integration_association_id_Valid() const;

    QString getEventIntegrationName() const;
    void setEventIntegrationName(const QString &event_integration_name);
    bool is_event_integration_name_Set() const;
    bool is_event_integration_name_Valid() const;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getEventBridgeRuleName() const;
    void setEventBridgeRuleName(const QString &event_bridge_rule_name);
    bool is_event_bridge_rule_name_Set() const;
    bool is_event_bridge_rule_name_Valid() const;

    QMap getClientAssociationMetadata() const;
    void setClientAssociationMetadata(const QMap &client_association_metadata);
    bool is_client_association_metadata_Set() const;
    bool is_client_association_metadata_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_event_integration_association_arn;
    bool m_event_integration_association_arn_isSet;
    bool m_event_integration_association_arn_isValid;

    QString m_event_integration_association_id;
    bool m_event_integration_association_id_isSet;
    bool m_event_integration_association_id_isValid;

    QString m_event_integration_name;
    bool m_event_integration_name_isSet;
    bool m_event_integration_name_isValid;

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_event_bridge_rule_name;
    bool m_event_bridge_rule_name_isSet;
    bool m_event_bridge_rule_name_isValid;

    QMap m_client_association_metadata;
    bool m_client_association_metadata_isSet;
    bool m_client_association_metadata_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventIntegrationAssociation)

#endif // OAIEventIntegrationAssociation_H
