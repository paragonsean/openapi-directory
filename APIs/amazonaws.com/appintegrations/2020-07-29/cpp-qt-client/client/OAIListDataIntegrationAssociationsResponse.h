/**
 * Amazon AppIntegrations Service
 * <p>The Amazon AppIntegrations service enables you to configure and reuse connections to external applications.</p> <p>For information about how you can use external applications with Amazon Connect, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/crm.html\">Set up pre-built integrations</a> and <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-wisdom.html\">Deliver information to agents using Amazon Connect Wisdom</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2020-07-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListDataIntegrationAssociationsResponse.h
 *
 * 
 */

#ifndef OAIListDataIntegrationAssociationsResponse_H
#define OAIListDataIntegrationAssociationsResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIListDataIntegrationAssociationsResponse : public OAIObject {
public:
    OAIListDataIntegrationAssociationsResponse();
    OAIListDataIntegrationAssociationsResponse(QString json);
    ~OAIListDataIntegrationAssociationsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getDataIntegrationAssociations() const;
    void setDataIntegrationAssociations(const QList &data_integration_associations);
    bool is_data_integration_associations_Set() const;
    bool is_data_integration_associations_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_data_integration_associations;
    bool m_data_integration_associations_isSet;
    bool m_data_integration_associations_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListDataIntegrationAssociationsResponse)

#endif // OAIListDataIntegrationAssociationsResponse_H
