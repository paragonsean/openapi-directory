/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonSimpleWorkflowService);
  }
}(this, function(expect, AmazonSimpleWorkflowService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonSimpleWorkflowService.Decision();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Decision', function() {
    it('should create an instance of Decision', function() {
      // uncomment below and update the code to test Decision
      //var instance = new AmazonSimpleWorkflowService.Decision();
      //expect(instance).to.be.a(AmazonSimpleWorkflowService.Decision);
    });

    it('should have the property decisionType (base name: "decisionType")', function() {
      // uncomment below and update the code to test the property decisionType
      //var instance = new AmazonSimpleWorkflowService.Decision();
      //expect(instance).to.be();
    });

    it('should have the property scheduleActivityTaskDecisionAttributes (base name: "scheduleActivityTaskDecisionAttributes")', function() {
      // uncomment below and update the code to test the property scheduleActivityTaskDecisionAttributes
      //var instance = new AmazonSimpleWorkflowService.Decision();
      //expect(instance).to.be();
    });

    it('should have the property requestCancelActivityTaskDecisionAttributes (base name: "requestCancelActivityTaskDecisionAttributes")', function() {
      // uncomment below and update the code to test the property requestCancelActivityTaskDecisionAttributes
      //var instance = new AmazonSimpleWorkflowService.Decision();
      //expect(instance).to.be();
    });

    it('should have the property completeWorkflowExecutionDecisionAttributes (base name: "completeWorkflowExecutionDecisionAttributes")', function() {
      // uncomment below and update the code to test the property completeWorkflowExecutionDecisionAttributes
      //var instance = new AmazonSimpleWorkflowService.Decision();
      //expect(instance).to.be();
    });

    it('should have the property failWorkflowExecutionDecisionAttributes (base name: "failWorkflowExecutionDecisionAttributes")', function() {
      // uncomment below and update the code to test the property failWorkflowExecutionDecisionAttributes
      //var instance = new AmazonSimpleWorkflowService.Decision();
      //expect(instance).to.be();
    });

    it('should have the property cancelWorkflowExecutionDecisionAttributes (base name: "cancelWorkflowExecutionDecisionAttributes")', function() {
      // uncomment below and update the code to test the property cancelWorkflowExecutionDecisionAttributes
      //var instance = new AmazonSimpleWorkflowService.Decision();
      //expect(instance).to.be();
    });

    it('should have the property continueAsNewWorkflowExecutionDecisionAttributes (base name: "continueAsNewWorkflowExecutionDecisionAttributes")', function() {
      // uncomment below and update the code to test the property continueAsNewWorkflowExecutionDecisionAttributes
      //var instance = new AmazonSimpleWorkflowService.Decision();
      //expect(instance).to.be();
    });

    it('should have the property recordMarkerDecisionAttributes (base name: "recordMarkerDecisionAttributes")', function() {
      // uncomment below and update the code to test the property recordMarkerDecisionAttributes
      //var instance = new AmazonSimpleWorkflowService.Decision();
      //expect(instance).to.be();
    });

    it('should have the property startTimerDecisionAttributes (base name: "startTimerDecisionAttributes")', function() {
      // uncomment below and update the code to test the property startTimerDecisionAttributes
      //var instance = new AmazonSimpleWorkflowService.Decision();
      //expect(instance).to.be();
    });

    it('should have the property cancelTimerDecisionAttributes (base name: "cancelTimerDecisionAttributes")', function() {
      // uncomment below and update the code to test the property cancelTimerDecisionAttributes
      //var instance = new AmazonSimpleWorkflowService.Decision();
      //expect(instance).to.be();
    });

    it('should have the property signalExternalWorkflowExecutionDecisionAttributes (base name: "signalExternalWorkflowExecutionDecisionAttributes")', function() {
      // uncomment below and update the code to test the property signalExternalWorkflowExecutionDecisionAttributes
      //var instance = new AmazonSimpleWorkflowService.Decision();
      //expect(instance).to.be();
    });

    it('should have the property requestCancelExternalWorkflowExecutionDecisionAttributes (base name: "requestCancelExternalWorkflowExecutionDecisionAttributes")', function() {
      // uncomment below and update the code to test the property requestCancelExternalWorkflowExecutionDecisionAttributes
      //var instance = new AmazonSimpleWorkflowService.Decision();
      //expect(instance).to.be();
    });

    it('should have the property startChildWorkflowExecutionDecisionAttributes (base name: "startChildWorkflowExecutionDecisionAttributes")', function() {
      // uncomment below and update the code to test the property startChildWorkflowExecutionDecisionAttributes
      //var instance = new AmazonSimpleWorkflowService.Decision();
      //expect(instance).to.be();
    });

    it('should have the property scheduleLambdaFunctionDecisionAttributes (base name: "scheduleLambdaFunctionDecisionAttributes")', function() {
      // uncomment below and update the code to test the property scheduleLambdaFunctionDecisionAttributes
      //var instance = new AmazonSimpleWorkflowService.Decision();
      //expect(instance).to.be();
    });

  });

}));
