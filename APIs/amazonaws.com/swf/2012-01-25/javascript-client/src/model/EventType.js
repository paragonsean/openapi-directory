/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class EventType.
* @enum {}
* @readonly
*/
export default class EventType {
    
        /**
         * value: "WorkflowExecutionStarted"
         * @const
         */
        "WorkflowExecutionStarted" = "WorkflowExecutionStarted";

    
        /**
         * value: "WorkflowExecutionCancelRequested"
         * @const
         */
        "WorkflowExecutionCancelRequested" = "WorkflowExecutionCancelRequested";

    
        /**
         * value: "WorkflowExecutionCompleted"
         * @const
         */
        "WorkflowExecutionCompleted" = "WorkflowExecutionCompleted";

    
        /**
         * value: "CompleteWorkflowExecutionFailed"
         * @const
         */
        "CompleteWorkflowExecutionFailed" = "CompleteWorkflowExecutionFailed";

    
        /**
         * value: "WorkflowExecutionFailed"
         * @const
         */
        "WorkflowExecutionFailed" = "WorkflowExecutionFailed";

    
        /**
         * value: "FailWorkflowExecutionFailed"
         * @const
         */
        "FailWorkflowExecutionFailed" = "FailWorkflowExecutionFailed";

    
        /**
         * value: "WorkflowExecutionTimedOut"
         * @const
         */
        "WorkflowExecutionTimedOut" = "WorkflowExecutionTimedOut";

    
        /**
         * value: "WorkflowExecutionCanceled"
         * @const
         */
        "WorkflowExecutionCanceled" = "WorkflowExecutionCanceled";

    
        /**
         * value: "CancelWorkflowExecutionFailed"
         * @const
         */
        "CancelWorkflowExecutionFailed" = "CancelWorkflowExecutionFailed";

    
        /**
         * value: "WorkflowExecutionContinuedAsNew"
         * @const
         */
        "WorkflowExecutionContinuedAsNew" = "WorkflowExecutionContinuedAsNew";

    
        /**
         * value: "ContinueAsNewWorkflowExecutionFailed"
         * @const
         */
        "ContinueAsNewWorkflowExecutionFailed" = "ContinueAsNewWorkflowExecutionFailed";

    
        /**
         * value: "WorkflowExecutionTerminated"
         * @const
         */
        "WorkflowExecutionTerminated" = "WorkflowExecutionTerminated";

    
        /**
         * value: "DecisionTaskScheduled"
         * @const
         */
        "DecisionTaskScheduled" = "DecisionTaskScheduled";

    
        /**
         * value: "DecisionTaskStarted"
         * @const
         */
        "DecisionTaskStarted" = "DecisionTaskStarted";

    
        /**
         * value: "DecisionTaskCompleted"
         * @const
         */
        "DecisionTaskCompleted" = "DecisionTaskCompleted";

    
        /**
         * value: "DecisionTaskTimedOut"
         * @const
         */
        "DecisionTaskTimedOut" = "DecisionTaskTimedOut";

    
        /**
         * value: "ActivityTaskScheduled"
         * @const
         */
        "ActivityTaskScheduled" = "ActivityTaskScheduled";

    
        /**
         * value: "ScheduleActivityTaskFailed"
         * @const
         */
        "ScheduleActivityTaskFailed" = "ScheduleActivityTaskFailed";

    
        /**
         * value: "ActivityTaskStarted"
         * @const
         */
        "ActivityTaskStarted" = "ActivityTaskStarted";

    
        /**
         * value: "ActivityTaskCompleted"
         * @const
         */
        "ActivityTaskCompleted" = "ActivityTaskCompleted";

    
        /**
         * value: "ActivityTaskFailed"
         * @const
         */
        "ActivityTaskFailed" = "ActivityTaskFailed";

    
        /**
         * value: "ActivityTaskTimedOut"
         * @const
         */
        "ActivityTaskTimedOut" = "ActivityTaskTimedOut";

    
        /**
         * value: "ActivityTaskCanceled"
         * @const
         */
        "ActivityTaskCanceled" = "ActivityTaskCanceled";

    
        /**
         * value: "ActivityTaskCancelRequested"
         * @const
         */
        "ActivityTaskCancelRequested" = "ActivityTaskCancelRequested";

    
        /**
         * value: "RequestCancelActivityTaskFailed"
         * @const
         */
        "RequestCancelActivityTaskFailed" = "RequestCancelActivityTaskFailed";

    
        /**
         * value: "WorkflowExecutionSignaled"
         * @const
         */
        "WorkflowExecutionSignaled" = "WorkflowExecutionSignaled";

    
        /**
         * value: "MarkerRecorded"
         * @const
         */
        "MarkerRecorded" = "MarkerRecorded";

    
        /**
         * value: "RecordMarkerFailed"
         * @const
         */
        "RecordMarkerFailed" = "RecordMarkerFailed";

    
        /**
         * value: "TimerStarted"
         * @const
         */
        "TimerStarted" = "TimerStarted";

    
        /**
         * value: "StartTimerFailed"
         * @const
         */
        "StartTimerFailed" = "StartTimerFailed";

    
        /**
         * value: "TimerFired"
         * @const
         */
        "TimerFired" = "TimerFired";

    
        /**
         * value: "TimerCanceled"
         * @const
         */
        "TimerCanceled" = "TimerCanceled";

    
        /**
         * value: "CancelTimerFailed"
         * @const
         */
        "CancelTimerFailed" = "CancelTimerFailed";

    
        /**
         * value: "StartChildWorkflowExecutionInitiated"
         * @const
         */
        "StartChildWorkflowExecutionInitiated" = "StartChildWorkflowExecutionInitiated";

    
        /**
         * value: "StartChildWorkflowExecutionFailed"
         * @const
         */
        "StartChildWorkflowExecutionFailed" = "StartChildWorkflowExecutionFailed";

    
        /**
         * value: "ChildWorkflowExecutionStarted"
         * @const
         */
        "ChildWorkflowExecutionStarted" = "ChildWorkflowExecutionStarted";

    
        /**
         * value: "ChildWorkflowExecutionCompleted"
         * @const
         */
        "ChildWorkflowExecutionCompleted" = "ChildWorkflowExecutionCompleted";

    
        /**
         * value: "ChildWorkflowExecutionFailed"
         * @const
         */
        "ChildWorkflowExecutionFailed" = "ChildWorkflowExecutionFailed";

    
        /**
         * value: "ChildWorkflowExecutionTimedOut"
         * @const
         */
        "ChildWorkflowExecutionTimedOut" = "ChildWorkflowExecutionTimedOut";

    
        /**
         * value: "ChildWorkflowExecutionCanceled"
         * @const
         */
        "ChildWorkflowExecutionCanceled" = "ChildWorkflowExecutionCanceled";

    
        /**
         * value: "ChildWorkflowExecutionTerminated"
         * @const
         */
        "ChildWorkflowExecutionTerminated" = "ChildWorkflowExecutionTerminated";

    
        /**
         * value: "SignalExternalWorkflowExecutionInitiated"
         * @const
         */
        "SignalExternalWorkflowExecutionInitiated" = "SignalExternalWorkflowExecutionInitiated";

    
        /**
         * value: "SignalExternalWorkflowExecutionFailed"
         * @const
         */
        "SignalExternalWorkflowExecutionFailed" = "SignalExternalWorkflowExecutionFailed";

    
        /**
         * value: "ExternalWorkflowExecutionSignaled"
         * @const
         */
        "ExternalWorkflowExecutionSignaled" = "ExternalWorkflowExecutionSignaled";

    
        /**
         * value: "RequestCancelExternalWorkflowExecutionInitiated"
         * @const
         */
        "RequestCancelExternalWorkflowExecutionInitiated" = "RequestCancelExternalWorkflowExecutionInitiated";

    
        /**
         * value: "RequestCancelExternalWorkflowExecutionFailed"
         * @const
         */
        "RequestCancelExternalWorkflowExecutionFailed" = "RequestCancelExternalWorkflowExecutionFailed";

    
        /**
         * value: "ExternalWorkflowExecutionCancelRequested"
         * @const
         */
        "ExternalWorkflowExecutionCancelRequested" = "ExternalWorkflowExecutionCancelRequested";

    
        /**
         * value: "LambdaFunctionScheduled"
         * @const
         */
        "LambdaFunctionScheduled" = "LambdaFunctionScheduled";

    
        /**
         * value: "LambdaFunctionStarted"
         * @const
         */
        "LambdaFunctionStarted" = "LambdaFunctionStarted";

    
        /**
         * value: "LambdaFunctionCompleted"
         * @const
         */
        "LambdaFunctionCompleted" = "LambdaFunctionCompleted";

    
        /**
         * value: "LambdaFunctionFailed"
         * @const
         */
        "LambdaFunctionFailed" = "LambdaFunctionFailed";

    
        /**
         * value: "LambdaFunctionTimedOut"
         * @const
         */
        "LambdaFunctionTimedOut" = "LambdaFunctionTimedOut";

    
        /**
         * value: "ScheduleLambdaFunctionFailed"
         * @const
         */
        "ScheduleLambdaFunctionFailed" = "ScheduleLambdaFunctionFailed";

    
        /**
         * value: "StartLambdaFunctionFailed"
         * @const
         */
        "StartLambdaFunctionFailed" = "StartLambdaFunctionFailed";

    

    /**
    * Returns a <code>EventType</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/EventType} The enum <code>EventType</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

