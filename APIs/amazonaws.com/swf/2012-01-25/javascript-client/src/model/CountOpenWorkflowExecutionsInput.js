/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CountOpenWorkflowExecutionsInputExecutionFilter from './CountOpenWorkflowExecutionsInputExecutionFilter';
import CountOpenWorkflowExecutionsInputStartTimeFilter from './CountOpenWorkflowExecutionsInputStartTimeFilter';
import CountOpenWorkflowExecutionsInputTagFilter from './CountOpenWorkflowExecutionsInputTagFilter';
import CountOpenWorkflowExecutionsInputTypeFilter from './CountOpenWorkflowExecutionsInputTypeFilter';

/**
 * The CountOpenWorkflowExecutionsInput model module.
 * @module model/CountOpenWorkflowExecutionsInput
 * @version 2012-01-25
 */
class CountOpenWorkflowExecutionsInput {
    /**
     * Constructs a new <code>CountOpenWorkflowExecutionsInput</code>.
     * @alias module:model/CountOpenWorkflowExecutionsInput
     * @param domain {String} 
     * @param startTimeFilter {module:model/CountOpenWorkflowExecutionsInputStartTimeFilter} 
     */
    constructor(domain, startTimeFilter) { 
        
        CountOpenWorkflowExecutionsInput.initialize(this, domain, startTimeFilter);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, domain, startTimeFilter) { 
        obj['domain'] = domain;
        obj['startTimeFilter'] = startTimeFilter;
    }

    /**
     * Constructs a <code>CountOpenWorkflowExecutionsInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CountOpenWorkflowExecutionsInput} obj Optional instance to populate.
     * @return {module:model/CountOpenWorkflowExecutionsInput} The populated <code>CountOpenWorkflowExecutionsInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CountOpenWorkflowExecutionsInput();

            if (data.hasOwnProperty('domain')) {
                obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
            }
            if (data.hasOwnProperty('startTimeFilter')) {
                obj['startTimeFilter'] = CountOpenWorkflowExecutionsInputStartTimeFilter.constructFromObject(data['startTimeFilter']);
            }
            if (data.hasOwnProperty('typeFilter')) {
                obj['typeFilter'] = CountOpenWorkflowExecutionsInputTypeFilter.constructFromObject(data['typeFilter']);
            }
            if (data.hasOwnProperty('tagFilter')) {
                obj['tagFilter'] = CountOpenWorkflowExecutionsInputTagFilter.constructFromObject(data['tagFilter']);
            }
            if (data.hasOwnProperty('executionFilter')) {
                obj['executionFilter'] = CountOpenWorkflowExecutionsInputExecutionFilter.constructFromObject(data['executionFilter']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CountOpenWorkflowExecutionsInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CountOpenWorkflowExecutionsInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CountOpenWorkflowExecutionsInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `domain`
        if (data['domain']) { // data not null
          String.validateJSON(data['domain']);
        }
        // validate the optional field `startTimeFilter`
        if (data['startTimeFilter']) { // data not null
          CountOpenWorkflowExecutionsInputStartTimeFilter.validateJSON(data['startTimeFilter']);
        }
        // validate the optional field `typeFilter`
        if (data['typeFilter']) { // data not null
          CountOpenWorkflowExecutionsInputTypeFilter.validateJSON(data['typeFilter']);
        }
        // validate the optional field `tagFilter`
        if (data['tagFilter']) { // data not null
          CountOpenWorkflowExecutionsInputTagFilter.validateJSON(data['tagFilter']);
        }
        // validate the optional field `executionFilter`
        if (data['executionFilter']) { // data not null
          CountOpenWorkflowExecutionsInputExecutionFilter.validateJSON(data['executionFilter']);
        }

        return true;
    }


}

CountOpenWorkflowExecutionsInput.RequiredProperties = ["domain", "startTimeFilter"];

/**
 * @member {String} domain
 */
CountOpenWorkflowExecutionsInput.prototype['domain'] = undefined;

/**
 * @member {module:model/CountOpenWorkflowExecutionsInputStartTimeFilter} startTimeFilter
 */
CountOpenWorkflowExecutionsInput.prototype['startTimeFilter'] = undefined;

/**
 * @member {module:model/CountOpenWorkflowExecutionsInputTypeFilter} typeFilter
 */
CountOpenWorkflowExecutionsInput.prototype['typeFilter'] = undefined;

/**
 * @member {module:model/CountOpenWorkflowExecutionsInputTagFilter} tagFilter
 */
CountOpenWorkflowExecutionsInput.prototype['tagFilter'] = undefined;

/**
 * @member {module:model/CountOpenWorkflowExecutionsInputExecutionFilter} executionFilter
 */
CountOpenWorkflowExecutionsInput.prototype['executionFilter'] = undefined;






export default CountOpenWorkflowExecutionsInput;

