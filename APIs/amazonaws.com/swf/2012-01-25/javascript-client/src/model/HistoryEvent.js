/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventType from './EventType';
import HistoryEventActivityTaskCancelRequestedEventAttributes from './HistoryEventActivityTaskCancelRequestedEventAttributes';
import HistoryEventActivityTaskCanceledEventAttributes from './HistoryEventActivityTaskCanceledEventAttributes';
import HistoryEventActivityTaskCompletedEventAttributes from './HistoryEventActivityTaskCompletedEventAttributes';
import HistoryEventActivityTaskFailedEventAttributes from './HistoryEventActivityTaskFailedEventAttributes';
import HistoryEventActivityTaskScheduledEventAttributes from './HistoryEventActivityTaskScheduledEventAttributes';
import HistoryEventActivityTaskStartedEventAttributes from './HistoryEventActivityTaskStartedEventAttributes';
import HistoryEventActivityTaskTimedOutEventAttributes from './HistoryEventActivityTaskTimedOutEventAttributes';
import HistoryEventCancelTimerFailedEventAttributes from './HistoryEventCancelTimerFailedEventAttributes';
import HistoryEventCancelWorkflowExecutionFailedEventAttributes from './HistoryEventCancelWorkflowExecutionFailedEventAttributes';
import HistoryEventChildWorkflowExecutionCanceledEventAttributes from './HistoryEventChildWorkflowExecutionCanceledEventAttributes';
import HistoryEventChildWorkflowExecutionCompletedEventAttributes from './HistoryEventChildWorkflowExecutionCompletedEventAttributes';
import HistoryEventChildWorkflowExecutionFailedEventAttributes from './HistoryEventChildWorkflowExecutionFailedEventAttributes';
import HistoryEventChildWorkflowExecutionStartedEventAttributes from './HistoryEventChildWorkflowExecutionStartedEventAttributes';
import HistoryEventChildWorkflowExecutionTerminatedEventAttributes from './HistoryEventChildWorkflowExecutionTerminatedEventAttributes';
import HistoryEventChildWorkflowExecutionTimedOutEventAttributes from './HistoryEventChildWorkflowExecutionTimedOutEventAttributes';
import HistoryEventCompleteWorkflowExecutionFailedEventAttributes from './HistoryEventCompleteWorkflowExecutionFailedEventAttributes';
import HistoryEventContinueAsNewWorkflowExecutionFailedEventAttributes from './HistoryEventContinueAsNewWorkflowExecutionFailedEventAttributes';
import HistoryEventDecisionTaskCompletedEventAttributes from './HistoryEventDecisionTaskCompletedEventAttributes';
import HistoryEventDecisionTaskScheduledEventAttributes from './HistoryEventDecisionTaskScheduledEventAttributes';
import HistoryEventDecisionTaskStartedEventAttributes from './HistoryEventDecisionTaskStartedEventAttributes';
import HistoryEventDecisionTaskTimedOutEventAttributes from './HistoryEventDecisionTaskTimedOutEventAttributes';
import HistoryEventExternalWorkflowExecutionCancelRequestedEventAttributes from './HistoryEventExternalWorkflowExecutionCancelRequestedEventAttributes';
import HistoryEventExternalWorkflowExecutionSignaledEventAttributes from './HistoryEventExternalWorkflowExecutionSignaledEventAttributes';
import HistoryEventFailWorkflowExecutionFailedEventAttributes from './HistoryEventFailWorkflowExecutionFailedEventAttributes';
import HistoryEventLambdaFunctionCompletedEventAttributes from './HistoryEventLambdaFunctionCompletedEventAttributes';
import HistoryEventLambdaFunctionFailedEventAttributes from './HistoryEventLambdaFunctionFailedEventAttributes';
import HistoryEventLambdaFunctionScheduledEventAttributes from './HistoryEventLambdaFunctionScheduledEventAttributes';
import HistoryEventLambdaFunctionStartedEventAttributes from './HistoryEventLambdaFunctionStartedEventAttributes';
import HistoryEventLambdaFunctionTimedOutEventAttributes from './HistoryEventLambdaFunctionTimedOutEventAttributes';
import HistoryEventMarkerRecordedEventAttributes from './HistoryEventMarkerRecordedEventAttributes';
import HistoryEventRecordMarkerFailedEventAttributes from './HistoryEventRecordMarkerFailedEventAttributes';
import HistoryEventRequestCancelActivityTaskFailedEventAttributes from './HistoryEventRequestCancelActivityTaskFailedEventAttributes';
import HistoryEventRequestCancelExternalWorkflowExecutionFailedEventAttributes from './HistoryEventRequestCancelExternalWorkflowExecutionFailedEventAttributes';
import HistoryEventRequestCancelExternalWorkflowExecutionInitiatedEventAttributes from './HistoryEventRequestCancelExternalWorkflowExecutionInitiatedEventAttributes';
import HistoryEventScheduleActivityTaskFailedEventAttributes from './HistoryEventScheduleActivityTaskFailedEventAttributes';
import HistoryEventScheduleLambdaFunctionFailedEventAttributes from './HistoryEventScheduleLambdaFunctionFailedEventAttributes';
import HistoryEventSignalExternalWorkflowExecutionFailedEventAttributes from './HistoryEventSignalExternalWorkflowExecutionFailedEventAttributes';
import HistoryEventSignalExternalWorkflowExecutionInitiatedEventAttributes from './HistoryEventSignalExternalWorkflowExecutionInitiatedEventAttributes';
import HistoryEventStartChildWorkflowExecutionFailedEventAttributes from './HistoryEventStartChildWorkflowExecutionFailedEventAttributes';
import HistoryEventStartChildWorkflowExecutionInitiatedEventAttributes from './HistoryEventStartChildWorkflowExecutionInitiatedEventAttributes';
import HistoryEventStartLambdaFunctionFailedEventAttributes from './HistoryEventStartLambdaFunctionFailedEventAttributes';
import HistoryEventStartTimerFailedEventAttributes from './HistoryEventStartTimerFailedEventAttributes';
import HistoryEventTimerCanceledEventAttributes from './HistoryEventTimerCanceledEventAttributes';
import HistoryEventTimerFiredEventAttributes from './HistoryEventTimerFiredEventAttributes';
import HistoryEventTimerStartedEventAttributes from './HistoryEventTimerStartedEventAttributes';
import HistoryEventWorkflowExecutionCancelRequestedEventAttributes from './HistoryEventWorkflowExecutionCancelRequestedEventAttributes';
import HistoryEventWorkflowExecutionCanceledEventAttributes from './HistoryEventWorkflowExecutionCanceledEventAttributes';
import HistoryEventWorkflowExecutionCompletedEventAttributes from './HistoryEventWorkflowExecutionCompletedEventAttributes';
import HistoryEventWorkflowExecutionContinuedAsNewEventAttributes from './HistoryEventWorkflowExecutionContinuedAsNewEventAttributes';
import HistoryEventWorkflowExecutionFailedEventAttributes from './HistoryEventWorkflowExecutionFailedEventAttributes';
import HistoryEventWorkflowExecutionSignaledEventAttributes from './HistoryEventWorkflowExecutionSignaledEventAttributes';
import HistoryEventWorkflowExecutionStartedEventAttributes from './HistoryEventWorkflowExecutionStartedEventAttributes';
import HistoryEventWorkflowExecutionTerminatedEventAttributes from './HistoryEventWorkflowExecutionTerminatedEventAttributes';
import HistoryEventWorkflowExecutionTimedOutEventAttributes from './HistoryEventWorkflowExecutionTimedOutEventAttributes';

/**
 * The HistoryEvent model module.
 * @module model/HistoryEvent
 * @version 2012-01-25
 */
class HistoryEvent {
    /**
     * Constructs a new <code>HistoryEvent</code>.
     * &lt;p&gt;Event within a workflow execution. A history event can be one of these types:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ActivityTaskCancelRequested&lt;/code&gt; – A &lt;code&gt;RequestCancelActivityTask&lt;/code&gt; decision was received by the system.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ActivityTaskCanceled&lt;/code&gt; – The activity task was successfully canceled.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ActivityTaskCompleted&lt;/code&gt; – An activity worker successfully completed an activity task by calling &lt;a&gt;RespondActivityTaskCompleted&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ActivityTaskFailed&lt;/code&gt; – An activity worker failed an activity task by calling &lt;a&gt;RespondActivityTaskFailed&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ActivityTaskScheduled&lt;/code&gt; – An activity task was scheduled for execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ActivityTaskStarted&lt;/code&gt; – The scheduled activity task was dispatched to a worker.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ActivityTaskTimedOut&lt;/code&gt; – The activity task timed out.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;CancelTimerFailed&lt;/code&gt; – Failed to process CancelTimer decision. This happens when the decision isn&#39;t configured properly, for example no timer exists with the specified timer Id.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;CancelWorkflowExecutionFailed&lt;/code&gt; – A request to cancel a workflow execution failed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ChildWorkflowExecutionCanceled&lt;/code&gt; – A child workflow execution, started by this workflow execution, was canceled and closed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ChildWorkflowExecutionCompleted&lt;/code&gt; – A child workflow execution, started by this workflow execution, completed successfully and was closed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ChildWorkflowExecutionFailed&lt;/code&gt; – A child workflow execution, started by this workflow execution, failed to complete successfully and was closed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ChildWorkflowExecutionStarted&lt;/code&gt; – A child workflow execution was successfully started.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ChildWorkflowExecutionTerminated&lt;/code&gt; – A child workflow execution, started by this workflow execution, was terminated.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ChildWorkflowExecutionTimedOut&lt;/code&gt; – A child workflow execution, started by this workflow execution, timed out and was closed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;CompleteWorkflowExecutionFailed&lt;/code&gt; – The workflow execution failed to complete.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ContinueAsNewWorkflowExecutionFailed&lt;/code&gt; – The workflow execution failed to complete after being continued as a new workflow execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DecisionTaskCompleted&lt;/code&gt; – The decider successfully completed a decision task by calling &lt;a&gt;RespondDecisionTaskCompleted&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DecisionTaskScheduled&lt;/code&gt; – A decision task was scheduled for the workflow execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DecisionTaskStarted&lt;/code&gt; – The decision task was dispatched to a decider.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DecisionTaskTimedOut&lt;/code&gt; – The decision task timed out.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ExternalWorkflowExecutionCancelRequested&lt;/code&gt; – Request to cancel an external workflow execution was successfully delivered to the target execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ExternalWorkflowExecutionSignaled&lt;/code&gt; – A signal, requested by this workflow execution, was successfully delivered to the target external workflow execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;FailWorkflowExecutionFailed&lt;/code&gt; – A request to mark a workflow execution as failed, itself failed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;MarkerRecorded&lt;/code&gt; – A marker was recorded in the workflow history as the result of a &lt;code&gt;RecordMarker&lt;/code&gt; decision.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RecordMarkerFailed&lt;/code&gt; – A &lt;code&gt;RecordMarker&lt;/code&gt; decision was returned as failed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RequestCancelActivityTaskFailed&lt;/code&gt; – Failed to process RequestCancelActivityTask decision. This happens when the decision isn&#39;t configured properly.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RequestCancelExternalWorkflowExecutionFailed&lt;/code&gt; – Request to cancel an external workflow execution failed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RequestCancelExternalWorkflowExecutionInitiated&lt;/code&gt; – A request was made to request the cancellation of an external workflow execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ScheduleActivityTaskFailed&lt;/code&gt; – Failed to process ScheduleActivityTask decision. This happens when the decision isn&#39;t configured properly, for example the activity type specified isn&#39;t registered.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;SignalExternalWorkflowExecutionFailed&lt;/code&gt; – The request to signal an external workflow execution failed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;SignalExternalWorkflowExecutionInitiated&lt;/code&gt; – A request to signal an external workflow was made.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;StartActivityTaskFailed&lt;/code&gt; – A scheduled activity task failed to start.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;StartChildWorkflowExecutionFailed&lt;/code&gt; – Failed to process StartChildWorkflowExecution decision. This happens when the decision isn&#39;t configured properly, for example the workflow type specified isn&#39;t registered.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;StartChildWorkflowExecutionInitiated&lt;/code&gt; – A request was made to start a child workflow execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;StartTimerFailed&lt;/code&gt; – Failed to process StartTimer decision. This happens when the decision isn&#39;t configured properly, for example a timer already exists with the specified timer Id.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;TimerCanceled&lt;/code&gt; – A timer, previously started for this workflow execution, was successfully canceled.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;TimerFired&lt;/code&gt; – A timer, previously started for this workflow execution, fired.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;TimerStarted&lt;/code&gt; – A timer was started for the workflow execution due to a &lt;code&gt;StartTimer&lt;/code&gt; decision.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionCancelRequested&lt;/code&gt; – A request to cancel this workflow execution was made.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionCanceled&lt;/code&gt; – The workflow execution was successfully canceled and closed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionCompleted&lt;/code&gt; – The workflow execution was closed due to successful completion.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionContinuedAsNew&lt;/code&gt; – The workflow execution was closed and a new execution of the same type was created with the same workflowId.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionFailed&lt;/code&gt; – The workflow execution closed due to a failure.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionSignaled&lt;/code&gt; – An external signal was received for the workflow execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionStarted&lt;/code&gt; – The workflow execution was started.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionTerminated&lt;/code&gt; – The workflow execution was terminated.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionTimedOut&lt;/code&gt; – The workflow execution was closed because a time out was exceeded.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     * @alias module:model/HistoryEvent
     * @param eventTimestamp {Date} 
     * @param eventType {module:model/EventType} 
     * @param eventId {Number} 
     */
    constructor(eventTimestamp, eventType, eventId) { 
        
        HistoryEvent.initialize(this, eventTimestamp, eventType, eventId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, eventTimestamp, eventType, eventId) { 
        obj['eventTimestamp'] = eventTimestamp;
        obj['eventType'] = eventType;
        obj['eventId'] = eventId;
    }

    /**
     * Constructs a <code>HistoryEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistoryEvent} obj Optional instance to populate.
     * @return {module:model/HistoryEvent} The populated <code>HistoryEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistoryEvent();

            if (data.hasOwnProperty('eventTimestamp')) {
                obj['eventTimestamp'] = ApiClient.convertToType(data['eventTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('eventType')) {
                obj['eventType'] = ApiClient.convertToType(data['eventType'], EventType);
            }
            if (data.hasOwnProperty('eventId')) {
                obj['eventId'] = ApiClient.convertToType(data['eventId'], 'Number');
            }
            if (data.hasOwnProperty('workflowExecutionStartedEventAttributes')) {
                obj['workflowExecutionStartedEventAttributes'] = HistoryEventWorkflowExecutionStartedEventAttributes.constructFromObject(data['workflowExecutionStartedEventAttributes']);
            }
            if (data.hasOwnProperty('workflowExecutionCompletedEventAttributes')) {
                obj['workflowExecutionCompletedEventAttributes'] = HistoryEventWorkflowExecutionCompletedEventAttributes.constructFromObject(data['workflowExecutionCompletedEventAttributes']);
            }
            if (data.hasOwnProperty('completeWorkflowExecutionFailedEventAttributes')) {
                obj['completeWorkflowExecutionFailedEventAttributes'] = HistoryEventCompleteWorkflowExecutionFailedEventAttributes.constructFromObject(data['completeWorkflowExecutionFailedEventAttributes']);
            }
            if (data.hasOwnProperty('workflowExecutionFailedEventAttributes')) {
                obj['workflowExecutionFailedEventAttributes'] = HistoryEventWorkflowExecutionFailedEventAttributes.constructFromObject(data['workflowExecutionFailedEventAttributes']);
            }
            if (data.hasOwnProperty('failWorkflowExecutionFailedEventAttributes')) {
                obj['failWorkflowExecutionFailedEventAttributes'] = HistoryEventFailWorkflowExecutionFailedEventAttributes.constructFromObject(data['failWorkflowExecutionFailedEventAttributes']);
            }
            if (data.hasOwnProperty('workflowExecutionTimedOutEventAttributes')) {
                obj['workflowExecutionTimedOutEventAttributes'] = HistoryEventWorkflowExecutionTimedOutEventAttributes.constructFromObject(data['workflowExecutionTimedOutEventAttributes']);
            }
            if (data.hasOwnProperty('workflowExecutionCanceledEventAttributes')) {
                obj['workflowExecutionCanceledEventAttributes'] = HistoryEventWorkflowExecutionCanceledEventAttributes.constructFromObject(data['workflowExecutionCanceledEventAttributes']);
            }
            if (data.hasOwnProperty('cancelWorkflowExecutionFailedEventAttributes')) {
                obj['cancelWorkflowExecutionFailedEventAttributes'] = HistoryEventCancelWorkflowExecutionFailedEventAttributes.constructFromObject(data['cancelWorkflowExecutionFailedEventAttributes']);
            }
            if (data.hasOwnProperty('workflowExecutionContinuedAsNewEventAttributes')) {
                obj['workflowExecutionContinuedAsNewEventAttributes'] = HistoryEventWorkflowExecutionContinuedAsNewEventAttributes.constructFromObject(data['workflowExecutionContinuedAsNewEventAttributes']);
            }
            if (data.hasOwnProperty('continueAsNewWorkflowExecutionFailedEventAttributes')) {
                obj['continueAsNewWorkflowExecutionFailedEventAttributes'] = HistoryEventContinueAsNewWorkflowExecutionFailedEventAttributes.constructFromObject(data['continueAsNewWorkflowExecutionFailedEventAttributes']);
            }
            if (data.hasOwnProperty('workflowExecutionTerminatedEventAttributes')) {
                obj['workflowExecutionTerminatedEventAttributes'] = HistoryEventWorkflowExecutionTerminatedEventAttributes.constructFromObject(data['workflowExecutionTerminatedEventAttributes']);
            }
            if (data.hasOwnProperty('workflowExecutionCancelRequestedEventAttributes')) {
                obj['workflowExecutionCancelRequestedEventAttributes'] = HistoryEventWorkflowExecutionCancelRequestedEventAttributes.constructFromObject(data['workflowExecutionCancelRequestedEventAttributes']);
            }
            if (data.hasOwnProperty('decisionTaskScheduledEventAttributes')) {
                obj['decisionTaskScheduledEventAttributes'] = HistoryEventDecisionTaskScheduledEventAttributes.constructFromObject(data['decisionTaskScheduledEventAttributes']);
            }
            if (data.hasOwnProperty('decisionTaskStartedEventAttributes')) {
                obj['decisionTaskStartedEventAttributes'] = HistoryEventDecisionTaskStartedEventAttributes.constructFromObject(data['decisionTaskStartedEventAttributes']);
            }
            if (data.hasOwnProperty('decisionTaskCompletedEventAttributes')) {
                obj['decisionTaskCompletedEventAttributes'] = HistoryEventDecisionTaskCompletedEventAttributes.constructFromObject(data['decisionTaskCompletedEventAttributes']);
            }
            if (data.hasOwnProperty('decisionTaskTimedOutEventAttributes')) {
                obj['decisionTaskTimedOutEventAttributes'] = HistoryEventDecisionTaskTimedOutEventAttributes.constructFromObject(data['decisionTaskTimedOutEventAttributes']);
            }
            if (data.hasOwnProperty('activityTaskScheduledEventAttributes')) {
                obj['activityTaskScheduledEventAttributes'] = HistoryEventActivityTaskScheduledEventAttributes.constructFromObject(data['activityTaskScheduledEventAttributes']);
            }
            if (data.hasOwnProperty('activityTaskStartedEventAttributes')) {
                obj['activityTaskStartedEventAttributes'] = HistoryEventActivityTaskStartedEventAttributes.constructFromObject(data['activityTaskStartedEventAttributes']);
            }
            if (data.hasOwnProperty('activityTaskCompletedEventAttributes')) {
                obj['activityTaskCompletedEventAttributes'] = HistoryEventActivityTaskCompletedEventAttributes.constructFromObject(data['activityTaskCompletedEventAttributes']);
            }
            if (data.hasOwnProperty('activityTaskFailedEventAttributes')) {
                obj['activityTaskFailedEventAttributes'] = HistoryEventActivityTaskFailedEventAttributes.constructFromObject(data['activityTaskFailedEventAttributes']);
            }
            if (data.hasOwnProperty('activityTaskTimedOutEventAttributes')) {
                obj['activityTaskTimedOutEventAttributes'] = HistoryEventActivityTaskTimedOutEventAttributes.constructFromObject(data['activityTaskTimedOutEventAttributes']);
            }
            if (data.hasOwnProperty('activityTaskCanceledEventAttributes')) {
                obj['activityTaskCanceledEventAttributes'] = HistoryEventActivityTaskCanceledEventAttributes.constructFromObject(data['activityTaskCanceledEventAttributes']);
            }
            if (data.hasOwnProperty('activityTaskCancelRequestedEventAttributes')) {
                obj['activityTaskCancelRequestedEventAttributes'] = HistoryEventActivityTaskCancelRequestedEventAttributes.constructFromObject(data['activityTaskCancelRequestedEventAttributes']);
            }
            if (data.hasOwnProperty('workflowExecutionSignaledEventAttributes')) {
                obj['workflowExecutionSignaledEventAttributes'] = HistoryEventWorkflowExecutionSignaledEventAttributes.constructFromObject(data['workflowExecutionSignaledEventAttributes']);
            }
            if (data.hasOwnProperty('markerRecordedEventAttributes')) {
                obj['markerRecordedEventAttributes'] = HistoryEventMarkerRecordedEventAttributes.constructFromObject(data['markerRecordedEventAttributes']);
            }
            if (data.hasOwnProperty('recordMarkerFailedEventAttributes')) {
                obj['recordMarkerFailedEventAttributes'] = HistoryEventRecordMarkerFailedEventAttributes.constructFromObject(data['recordMarkerFailedEventAttributes']);
            }
            if (data.hasOwnProperty('timerStartedEventAttributes')) {
                obj['timerStartedEventAttributes'] = HistoryEventTimerStartedEventAttributes.constructFromObject(data['timerStartedEventAttributes']);
            }
            if (data.hasOwnProperty('timerFiredEventAttributes')) {
                obj['timerFiredEventAttributes'] = HistoryEventTimerFiredEventAttributes.constructFromObject(data['timerFiredEventAttributes']);
            }
            if (data.hasOwnProperty('timerCanceledEventAttributes')) {
                obj['timerCanceledEventAttributes'] = HistoryEventTimerCanceledEventAttributes.constructFromObject(data['timerCanceledEventAttributes']);
            }
            if (data.hasOwnProperty('startChildWorkflowExecutionInitiatedEventAttributes')) {
                obj['startChildWorkflowExecutionInitiatedEventAttributes'] = HistoryEventStartChildWorkflowExecutionInitiatedEventAttributes.constructFromObject(data['startChildWorkflowExecutionInitiatedEventAttributes']);
            }
            if (data.hasOwnProperty('childWorkflowExecutionStartedEventAttributes')) {
                obj['childWorkflowExecutionStartedEventAttributes'] = HistoryEventChildWorkflowExecutionStartedEventAttributes.constructFromObject(data['childWorkflowExecutionStartedEventAttributes']);
            }
            if (data.hasOwnProperty('childWorkflowExecutionCompletedEventAttributes')) {
                obj['childWorkflowExecutionCompletedEventAttributes'] = HistoryEventChildWorkflowExecutionCompletedEventAttributes.constructFromObject(data['childWorkflowExecutionCompletedEventAttributes']);
            }
            if (data.hasOwnProperty('childWorkflowExecutionFailedEventAttributes')) {
                obj['childWorkflowExecutionFailedEventAttributes'] = HistoryEventChildWorkflowExecutionFailedEventAttributes.constructFromObject(data['childWorkflowExecutionFailedEventAttributes']);
            }
            if (data.hasOwnProperty('childWorkflowExecutionTimedOutEventAttributes')) {
                obj['childWorkflowExecutionTimedOutEventAttributes'] = HistoryEventChildWorkflowExecutionTimedOutEventAttributes.constructFromObject(data['childWorkflowExecutionTimedOutEventAttributes']);
            }
            if (data.hasOwnProperty('childWorkflowExecutionCanceledEventAttributes')) {
                obj['childWorkflowExecutionCanceledEventAttributes'] = HistoryEventChildWorkflowExecutionCanceledEventAttributes.constructFromObject(data['childWorkflowExecutionCanceledEventAttributes']);
            }
            if (data.hasOwnProperty('childWorkflowExecutionTerminatedEventAttributes')) {
                obj['childWorkflowExecutionTerminatedEventAttributes'] = HistoryEventChildWorkflowExecutionTerminatedEventAttributes.constructFromObject(data['childWorkflowExecutionTerminatedEventAttributes']);
            }
            if (data.hasOwnProperty('signalExternalWorkflowExecutionInitiatedEventAttributes')) {
                obj['signalExternalWorkflowExecutionInitiatedEventAttributes'] = HistoryEventSignalExternalWorkflowExecutionInitiatedEventAttributes.constructFromObject(data['signalExternalWorkflowExecutionInitiatedEventAttributes']);
            }
            if (data.hasOwnProperty('externalWorkflowExecutionSignaledEventAttributes')) {
                obj['externalWorkflowExecutionSignaledEventAttributes'] = HistoryEventExternalWorkflowExecutionSignaledEventAttributes.constructFromObject(data['externalWorkflowExecutionSignaledEventAttributes']);
            }
            if (data.hasOwnProperty('signalExternalWorkflowExecutionFailedEventAttributes')) {
                obj['signalExternalWorkflowExecutionFailedEventAttributes'] = HistoryEventSignalExternalWorkflowExecutionFailedEventAttributes.constructFromObject(data['signalExternalWorkflowExecutionFailedEventAttributes']);
            }
            if (data.hasOwnProperty('externalWorkflowExecutionCancelRequestedEventAttributes')) {
                obj['externalWorkflowExecutionCancelRequestedEventAttributes'] = HistoryEventExternalWorkflowExecutionCancelRequestedEventAttributes.constructFromObject(data['externalWorkflowExecutionCancelRequestedEventAttributes']);
            }
            if (data.hasOwnProperty('requestCancelExternalWorkflowExecutionInitiatedEventAttributes')) {
                obj['requestCancelExternalWorkflowExecutionInitiatedEventAttributes'] = HistoryEventRequestCancelExternalWorkflowExecutionInitiatedEventAttributes.constructFromObject(data['requestCancelExternalWorkflowExecutionInitiatedEventAttributes']);
            }
            if (data.hasOwnProperty('requestCancelExternalWorkflowExecutionFailedEventAttributes')) {
                obj['requestCancelExternalWorkflowExecutionFailedEventAttributes'] = HistoryEventRequestCancelExternalWorkflowExecutionFailedEventAttributes.constructFromObject(data['requestCancelExternalWorkflowExecutionFailedEventAttributes']);
            }
            if (data.hasOwnProperty('scheduleActivityTaskFailedEventAttributes')) {
                obj['scheduleActivityTaskFailedEventAttributes'] = HistoryEventScheduleActivityTaskFailedEventAttributes.constructFromObject(data['scheduleActivityTaskFailedEventAttributes']);
            }
            if (data.hasOwnProperty('requestCancelActivityTaskFailedEventAttributes')) {
                obj['requestCancelActivityTaskFailedEventAttributes'] = HistoryEventRequestCancelActivityTaskFailedEventAttributes.constructFromObject(data['requestCancelActivityTaskFailedEventAttributes']);
            }
            if (data.hasOwnProperty('startTimerFailedEventAttributes')) {
                obj['startTimerFailedEventAttributes'] = HistoryEventStartTimerFailedEventAttributes.constructFromObject(data['startTimerFailedEventAttributes']);
            }
            if (data.hasOwnProperty('cancelTimerFailedEventAttributes')) {
                obj['cancelTimerFailedEventAttributes'] = HistoryEventCancelTimerFailedEventAttributes.constructFromObject(data['cancelTimerFailedEventAttributes']);
            }
            if (data.hasOwnProperty('startChildWorkflowExecutionFailedEventAttributes')) {
                obj['startChildWorkflowExecutionFailedEventAttributes'] = HistoryEventStartChildWorkflowExecutionFailedEventAttributes.constructFromObject(data['startChildWorkflowExecutionFailedEventAttributes']);
            }
            if (data.hasOwnProperty('lambdaFunctionScheduledEventAttributes')) {
                obj['lambdaFunctionScheduledEventAttributes'] = HistoryEventLambdaFunctionScheduledEventAttributes.constructFromObject(data['lambdaFunctionScheduledEventAttributes']);
            }
            if (data.hasOwnProperty('lambdaFunctionStartedEventAttributes')) {
                obj['lambdaFunctionStartedEventAttributes'] = HistoryEventLambdaFunctionStartedEventAttributes.constructFromObject(data['lambdaFunctionStartedEventAttributes']);
            }
            if (data.hasOwnProperty('lambdaFunctionCompletedEventAttributes')) {
                obj['lambdaFunctionCompletedEventAttributes'] = HistoryEventLambdaFunctionCompletedEventAttributes.constructFromObject(data['lambdaFunctionCompletedEventAttributes']);
            }
            if (data.hasOwnProperty('lambdaFunctionFailedEventAttributes')) {
                obj['lambdaFunctionFailedEventAttributes'] = HistoryEventLambdaFunctionFailedEventAttributes.constructFromObject(data['lambdaFunctionFailedEventAttributes']);
            }
            if (data.hasOwnProperty('lambdaFunctionTimedOutEventAttributes')) {
                obj['lambdaFunctionTimedOutEventAttributes'] = HistoryEventLambdaFunctionTimedOutEventAttributes.constructFromObject(data['lambdaFunctionTimedOutEventAttributes']);
            }
            if (data.hasOwnProperty('scheduleLambdaFunctionFailedEventAttributes')) {
                obj['scheduleLambdaFunctionFailedEventAttributes'] = HistoryEventScheduleLambdaFunctionFailedEventAttributes.constructFromObject(data['scheduleLambdaFunctionFailedEventAttributes']);
            }
            if (data.hasOwnProperty('startLambdaFunctionFailedEventAttributes')) {
                obj['startLambdaFunctionFailedEventAttributes'] = HistoryEventStartLambdaFunctionFailedEventAttributes.constructFromObject(data['startLambdaFunctionFailedEventAttributes']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistoryEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistoryEvent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HistoryEvent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `eventTimestamp`
        if (data['eventTimestamp']) { // data not null
          Date.validateJSON(data['eventTimestamp']);
        }
        // validate the optional field `eventType`
        if (data['eventType']) { // data not null
          EventType.validateJSON(data['eventType']);
        }
        // validate the optional field `eventId`
        if (data['eventId']) { // data not null
          Number.validateJSON(data['eventId']);
        }
        // validate the optional field `workflowExecutionStartedEventAttributes`
        if (data['workflowExecutionStartedEventAttributes']) { // data not null
          HistoryEventWorkflowExecutionStartedEventAttributes.validateJSON(data['workflowExecutionStartedEventAttributes']);
        }
        // validate the optional field `workflowExecutionCompletedEventAttributes`
        if (data['workflowExecutionCompletedEventAttributes']) { // data not null
          HistoryEventWorkflowExecutionCompletedEventAttributes.validateJSON(data['workflowExecutionCompletedEventAttributes']);
        }
        // validate the optional field `completeWorkflowExecutionFailedEventAttributes`
        if (data['completeWorkflowExecutionFailedEventAttributes']) { // data not null
          HistoryEventCompleteWorkflowExecutionFailedEventAttributes.validateJSON(data['completeWorkflowExecutionFailedEventAttributes']);
        }
        // validate the optional field `workflowExecutionFailedEventAttributes`
        if (data['workflowExecutionFailedEventAttributes']) { // data not null
          HistoryEventWorkflowExecutionFailedEventAttributes.validateJSON(data['workflowExecutionFailedEventAttributes']);
        }
        // validate the optional field `failWorkflowExecutionFailedEventAttributes`
        if (data['failWorkflowExecutionFailedEventAttributes']) { // data not null
          HistoryEventFailWorkflowExecutionFailedEventAttributes.validateJSON(data['failWorkflowExecutionFailedEventAttributes']);
        }
        // validate the optional field `workflowExecutionTimedOutEventAttributes`
        if (data['workflowExecutionTimedOutEventAttributes']) { // data not null
          HistoryEventWorkflowExecutionTimedOutEventAttributes.validateJSON(data['workflowExecutionTimedOutEventAttributes']);
        }
        // validate the optional field `workflowExecutionCanceledEventAttributes`
        if (data['workflowExecutionCanceledEventAttributes']) { // data not null
          HistoryEventWorkflowExecutionCanceledEventAttributes.validateJSON(data['workflowExecutionCanceledEventAttributes']);
        }
        // validate the optional field `cancelWorkflowExecutionFailedEventAttributes`
        if (data['cancelWorkflowExecutionFailedEventAttributes']) { // data not null
          HistoryEventCancelWorkflowExecutionFailedEventAttributes.validateJSON(data['cancelWorkflowExecutionFailedEventAttributes']);
        }
        // validate the optional field `workflowExecutionContinuedAsNewEventAttributes`
        if (data['workflowExecutionContinuedAsNewEventAttributes']) { // data not null
          HistoryEventWorkflowExecutionContinuedAsNewEventAttributes.validateJSON(data['workflowExecutionContinuedAsNewEventAttributes']);
        }
        // validate the optional field `continueAsNewWorkflowExecutionFailedEventAttributes`
        if (data['continueAsNewWorkflowExecutionFailedEventAttributes']) { // data not null
          HistoryEventContinueAsNewWorkflowExecutionFailedEventAttributes.validateJSON(data['continueAsNewWorkflowExecutionFailedEventAttributes']);
        }
        // validate the optional field `workflowExecutionTerminatedEventAttributes`
        if (data['workflowExecutionTerminatedEventAttributes']) { // data not null
          HistoryEventWorkflowExecutionTerminatedEventAttributes.validateJSON(data['workflowExecutionTerminatedEventAttributes']);
        }
        // validate the optional field `workflowExecutionCancelRequestedEventAttributes`
        if (data['workflowExecutionCancelRequestedEventAttributes']) { // data not null
          HistoryEventWorkflowExecutionCancelRequestedEventAttributes.validateJSON(data['workflowExecutionCancelRequestedEventAttributes']);
        }
        // validate the optional field `decisionTaskScheduledEventAttributes`
        if (data['decisionTaskScheduledEventAttributes']) { // data not null
          HistoryEventDecisionTaskScheduledEventAttributes.validateJSON(data['decisionTaskScheduledEventAttributes']);
        }
        // validate the optional field `decisionTaskStartedEventAttributes`
        if (data['decisionTaskStartedEventAttributes']) { // data not null
          HistoryEventDecisionTaskStartedEventAttributes.validateJSON(data['decisionTaskStartedEventAttributes']);
        }
        // validate the optional field `decisionTaskCompletedEventAttributes`
        if (data['decisionTaskCompletedEventAttributes']) { // data not null
          HistoryEventDecisionTaskCompletedEventAttributes.validateJSON(data['decisionTaskCompletedEventAttributes']);
        }
        // validate the optional field `decisionTaskTimedOutEventAttributes`
        if (data['decisionTaskTimedOutEventAttributes']) { // data not null
          HistoryEventDecisionTaskTimedOutEventAttributes.validateJSON(data['decisionTaskTimedOutEventAttributes']);
        }
        // validate the optional field `activityTaskScheduledEventAttributes`
        if (data['activityTaskScheduledEventAttributes']) { // data not null
          HistoryEventActivityTaskScheduledEventAttributes.validateJSON(data['activityTaskScheduledEventAttributes']);
        }
        // validate the optional field `activityTaskStartedEventAttributes`
        if (data['activityTaskStartedEventAttributes']) { // data not null
          HistoryEventActivityTaskStartedEventAttributes.validateJSON(data['activityTaskStartedEventAttributes']);
        }
        // validate the optional field `activityTaskCompletedEventAttributes`
        if (data['activityTaskCompletedEventAttributes']) { // data not null
          HistoryEventActivityTaskCompletedEventAttributes.validateJSON(data['activityTaskCompletedEventAttributes']);
        }
        // validate the optional field `activityTaskFailedEventAttributes`
        if (data['activityTaskFailedEventAttributes']) { // data not null
          HistoryEventActivityTaskFailedEventAttributes.validateJSON(data['activityTaskFailedEventAttributes']);
        }
        // validate the optional field `activityTaskTimedOutEventAttributes`
        if (data['activityTaskTimedOutEventAttributes']) { // data not null
          HistoryEventActivityTaskTimedOutEventAttributes.validateJSON(data['activityTaskTimedOutEventAttributes']);
        }
        // validate the optional field `activityTaskCanceledEventAttributes`
        if (data['activityTaskCanceledEventAttributes']) { // data not null
          HistoryEventActivityTaskCanceledEventAttributes.validateJSON(data['activityTaskCanceledEventAttributes']);
        }
        // validate the optional field `activityTaskCancelRequestedEventAttributes`
        if (data['activityTaskCancelRequestedEventAttributes']) { // data not null
          HistoryEventActivityTaskCancelRequestedEventAttributes.validateJSON(data['activityTaskCancelRequestedEventAttributes']);
        }
        // validate the optional field `workflowExecutionSignaledEventAttributes`
        if (data['workflowExecutionSignaledEventAttributes']) { // data not null
          HistoryEventWorkflowExecutionSignaledEventAttributes.validateJSON(data['workflowExecutionSignaledEventAttributes']);
        }
        // validate the optional field `markerRecordedEventAttributes`
        if (data['markerRecordedEventAttributes']) { // data not null
          HistoryEventMarkerRecordedEventAttributes.validateJSON(data['markerRecordedEventAttributes']);
        }
        // validate the optional field `recordMarkerFailedEventAttributes`
        if (data['recordMarkerFailedEventAttributes']) { // data not null
          HistoryEventRecordMarkerFailedEventAttributes.validateJSON(data['recordMarkerFailedEventAttributes']);
        }
        // validate the optional field `timerStartedEventAttributes`
        if (data['timerStartedEventAttributes']) { // data not null
          HistoryEventTimerStartedEventAttributes.validateJSON(data['timerStartedEventAttributes']);
        }
        // validate the optional field `timerFiredEventAttributes`
        if (data['timerFiredEventAttributes']) { // data not null
          HistoryEventTimerFiredEventAttributes.validateJSON(data['timerFiredEventAttributes']);
        }
        // validate the optional field `timerCanceledEventAttributes`
        if (data['timerCanceledEventAttributes']) { // data not null
          HistoryEventTimerCanceledEventAttributes.validateJSON(data['timerCanceledEventAttributes']);
        }
        // validate the optional field `startChildWorkflowExecutionInitiatedEventAttributes`
        if (data['startChildWorkflowExecutionInitiatedEventAttributes']) { // data not null
          HistoryEventStartChildWorkflowExecutionInitiatedEventAttributes.validateJSON(data['startChildWorkflowExecutionInitiatedEventAttributes']);
        }
        // validate the optional field `childWorkflowExecutionStartedEventAttributes`
        if (data['childWorkflowExecutionStartedEventAttributes']) { // data not null
          HistoryEventChildWorkflowExecutionStartedEventAttributes.validateJSON(data['childWorkflowExecutionStartedEventAttributes']);
        }
        // validate the optional field `childWorkflowExecutionCompletedEventAttributes`
        if (data['childWorkflowExecutionCompletedEventAttributes']) { // data not null
          HistoryEventChildWorkflowExecutionCompletedEventAttributes.validateJSON(data['childWorkflowExecutionCompletedEventAttributes']);
        }
        // validate the optional field `childWorkflowExecutionFailedEventAttributes`
        if (data['childWorkflowExecutionFailedEventAttributes']) { // data not null
          HistoryEventChildWorkflowExecutionFailedEventAttributes.validateJSON(data['childWorkflowExecutionFailedEventAttributes']);
        }
        // validate the optional field `childWorkflowExecutionTimedOutEventAttributes`
        if (data['childWorkflowExecutionTimedOutEventAttributes']) { // data not null
          HistoryEventChildWorkflowExecutionTimedOutEventAttributes.validateJSON(data['childWorkflowExecutionTimedOutEventAttributes']);
        }
        // validate the optional field `childWorkflowExecutionCanceledEventAttributes`
        if (data['childWorkflowExecutionCanceledEventAttributes']) { // data not null
          HistoryEventChildWorkflowExecutionCanceledEventAttributes.validateJSON(data['childWorkflowExecutionCanceledEventAttributes']);
        }
        // validate the optional field `childWorkflowExecutionTerminatedEventAttributes`
        if (data['childWorkflowExecutionTerminatedEventAttributes']) { // data not null
          HistoryEventChildWorkflowExecutionTerminatedEventAttributes.validateJSON(data['childWorkflowExecutionTerminatedEventAttributes']);
        }
        // validate the optional field `signalExternalWorkflowExecutionInitiatedEventAttributes`
        if (data['signalExternalWorkflowExecutionInitiatedEventAttributes']) { // data not null
          HistoryEventSignalExternalWorkflowExecutionInitiatedEventAttributes.validateJSON(data['signalExternalWorkflowExecutionInitiatedEventAttributes']);
        }
        // validate the optional field `externalWorkflowExecutionSignaledEventAttributes`
        if (data['externalWorkflowExecutionSignaledEventAttributes']) { // data not null
          HistoryEventExternalWorkflowExecutionSignaledEventAttributes.validateJSON(data['externalWorkflowExecutionSignaledEventAttributes']);
        }
        // validate the optional field `signalExternalWorkflowExecutionFailedEventAttributes`
        if (data['signalExternalWorkflowExecutionFailedEventAttributes']) { // data not null
          HistoryEventSignalExternalWorkflowExecutionFailedEventAttributes.validateJSON(data['signalExternalWorkflowExecutionFailedEventAttributes']);
        }
        // validate the optional field `externalWorkflowExecutionCancelRequestedEventAttributes`
        if (data['externalWorkflowExecutionCancelRequestedEventAttributes']) { // data not null
          HistoryEventExternalWorkflowExecutionCancelRequestedEventAttributes.validateJSON(data['externalWorkflowExecutionCancelRequestedEventAttributes']);
        }
        // validate the optional field `requestCancelExternalWorkflowExecutionInitiatedEventAttributes`
        if (data['requestCancelExternalWorkflowExecutionInitiatedEventAttributes']) { // data not null
          HistoryEventRequestCancelExternalWorkflowExecutionInitiatedEventAttributes.validateJSON(data['requestCancelExternalWorkflowExecutionInitiatedEventAttributes']);
        }
        // validate the optional field `requestCancelExternalWorkflowExecutionFailedEventAttributes`
        if (data['requestCancelExternalWorkflowExecutionFailedEventAttributes']) { // data not null
          HistoryEventRequestCancelExternalWorkflowExecutionFailedEventAttributes.validateJSON(data['requestCancelExternalWorkflowExecutionFailedEventAttributes']);
        }
        // validate the optional field `scheduleActivityTaskFailedEventAttributes`
        if (data['scheduleActivityTaskFailedEventAttributes']) { // data not null
          HistoryEventScheduleActivityTaskFailedEventAttributes.validateJSON(data['scheduleActivityTaskFailedEventAttributes']);
        }
        // validate the optional field `requestCancelActivityTaskFailedEventAttributes`
        if (data['requestCancelActivityTaskFailedEventAttributes']) { // data not null
          HistoryEventRequestCancelActivityTaskFailedEventAttributes.validateJSON(data['requestCancelActivityTaskFailedEventAttributes']);
        }
        // validate the optional field `startTimerFailedEventAttributes`
        if (data['startTimerFailedEventAttributes']) { // data not null
          HistoryEventStartTimerFailedEventAttributes.validateJSON(data['startTimerFailedEventAttributes']);
        }
        // validate the optional field `cancelTimerFailedEventAttributes`
        if (data['cancelTimerFailedEventAttributes']) { // data not null
          HistoryEventCancelTimerFailedEventAttributes.validateJSON(data['cancelTimerFailedEventAttributes']);
        }
        // validate the optional field `startChildWorkflowExecutionFailedEventAttributes`
        if (data['startChildWorkflowExecutionFailedEventAttributes']) { // data not null
          HistoryEventStartChildWorkflowExecutionFailedEventAttributes.validateJSON(data['startChildWorkflowExecutionFailedEventAttributes']);
        }
        // validate the optional field `lambdaFunctionScheduledEventAttributes`
        if (data['lambdaFunctionScheduledEventAttributes']) { // data not null
          HistoryEventLambdaFunctionScheduledEventAttributes.validateJSON(data['lambdaFunctionScheduledEventAttributes']);
        }
        // validate the optional field `lambdaFunctionStartedEventAttributes`
        if (data['lambdaFunctionStartedEventAttributes']) { // data not null
          HistoryEventLambdaFunctionStartedEventAttributes.validateJSON(data['lambdaFunctionStartedEventAttributes']);
        }
        // validate the optional field `lambdaFunctionCompletedEventAttributes`
        if (data['lambdaFunctionCompletedEventAttributes']) { // data not null
          HistoryEventLambdaFunctionCompletedEventAttributes.validateJSON(data['lambdaFunctionCompletedEventAttributes']);
        }
        // validate the optional field `lambdaFunctionFailedEventAttributes`
        if (data['lambdaFunctionFailedEventAttributes']) { // data not null
          HistoryEventLambdaFunctionFailedEventAttributes.validateJSON(data['lambdaFunctionFailedEventAttributes']);
        }
        // validate the optional field `lambdaFunctionTimedOutEventAttributes`
        if (data['lambdaFunctionTimedOutEventAttributes']) { // data not null
          HistoryEventLambdaFunctionTimedOutEventAttributes.validateJSON(data['lambdaFunctionTimedOutEventAttributes']);
        }
        // validate the optional field `scheduleLambdaFunctionFailedEventAttributes`
        if (data['scheduleLambdaFunctionFailedEventAttributes']) { // data not null
          HistoryEventScheduleLambdaFunctionFailedEventAttributes.validateJSON(data['scheduleLambdaFunctionFailedEventAttributes']);
        }
        // validate the optional field `startLambdaFunctionFailedEventAttributes`
        if (data['startLambdaFunctionFailedEventAttributes']) { // data not null
          HistoryEventStartLambdaFunctionFailedEventAttributes.validateJSON(data['startLambdaFunctionFailedEventAttributes']);
        }

        return true;
    }


}

HistoryEvent.RequiredProperties = ["eventTimestamp", "eventType", "eventId"];

/**
 * @member {Date} eventTimestamp
 */
HistoryEvent.prototype['eventTimestamp'] = undefined;

/**
 * @member {module:model/EventType} eventType
 */
HistoryEvent.prototype['eventType'] = undefined;

/**
 * @member {Number} eventId
 */
HistoryEvent.prototype['eventId'] = undefined;

/**
 * @member {module:model/HistoryEventWorkflowExecutionStartedEventAttributes} workflowExecutionStartedEventAttributes
 */
HistoryEvent.prototype['workflowExecutionStartedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventWorkflowExecutionCompletedEventAttributes} workflowExecutionCompletedEventAttributes
 */
HistoryEvent.prototype['workflowExecutionCompletedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventCompleteWorkflowExecutionFailedEventAttributes} completeWorkflowExecutionFailedEventAttributes
 */
HistoryEvent.prototype['completeWorkflowExecutionFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventWorkflowExecutionFailedEventAttributes} workflowExecutionFailedEventAttributes
 */
HistoryEvent.prototype['workflowExecutionFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventFailWorkflowExecutionFailedEventAttributes} failWorkflowExecutionFailedEventAttributes
 */
HistoryEvent.prototype['failWorkflowExecutionFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventWorkflowExecutionTimedOutEventAttributes} workflowExecutionTimedOutEventAttributes
 */
HistoryEvent.prototype['workflowExecutionTimedOutEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventWorkflowExecutionCanceledEventAttributes} workflowExecutionCanceledEventAttributes
 */
HistoryEvent.prototype['workflowExecutionCanceledEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventCancelWorkflowExecutionFailedEventAttributes} cancelWorkflowExecutionFailedEventAttributes
 */
HistoryEvent.prototype['cancelWorkflowExecutionFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventWorkflowExecutionContinuedAsNewEventAttributes} workflowExecutionContinuedAsNewEventAttributes
 */
HistoryEvent.prototype['workflowExecutionContinuedAsNewEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventContinueAsNewWorkflowExecutionFailedEventAttributes} continueAsNewWorkflowExecutionFailedEventAttributes
 */
HistoryEvent.prototype['continueAsNewWorkflowExecutionFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventWorkflowExecutionTerminatedEventAttributes} workflowExecutionTerminatedEventAttributes
 */
HistoryEvent.prototype['workflowExecutionTerminatedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventWorkflowExecutionCancelRequestedEventAttributes} workflowExecutionCancelRequestedEventAttributes
 */
HistoryEvent.prototype['workflowExecutionCancelRequestedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventDecisionTaskScheduledEventAttributes} decisionTaskScheduledEventAttributes
 */
HistoryEvent.prototype['decisionTaskScheduledEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventDecisionTaskStartedEventAttributes} decisionTaskStartedEventAttributes
 */
HistoryEvent.prototype['decisionTaskStartedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventDecisionTaskCompletedEventAttributes} decisionTaskCompletedEventAttributes
 */
HistoryEvent.prototype['decisionTaskCompletedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventDecisionTaskTimedOutEventAttributes} decisionTaskTimedOutEventAttributes
 */
HistoryEvent.prototype['decisionTaskTimedOutEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventActivityTaskScheduledEventAttributes} activityTaskScheduledEventAttributes
 */
HistoryEvent.prototype['activityTaskScheduledEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventActivityTaskStartedEventAttributes} activityTaskStartedEventAttributes
 */
HistoryEvent.prototype['activityTaskStartedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventActivityTaskCompletedEventAttributes} activityTaskCompletedEventAttributes
 */
HistoryEvent.prototype['activityTaskCompletedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventActivityTaskFailedEventAttributes} activityTaskFailedEventAttributes
 */
HistoryEvent.prototype['activityTaskFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventActivityTaskTimedOutEventAttributes} activityTaskTimedOutEventAttributes
 */
HistoryEvent.prototype['activityTaskTimedOutEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventActivityTaskCanceledEventAttributes} activityTaskCanceledEventAttributes
 */
HistoryEvent.prototype['activityTaskCanceledEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventActivityTaskCancelRequestedEventAttributes} activityTaskCancelRequestedEventAttributes
 */
HistoryEvent.prototype['activityTaskCancelRequestedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventWorkflowExecutionSignaledEventAttributes} workflowExecutionSignaledEventAttributes
 */
HistoryEvent.prototype['workflowExecutionSignaledEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventMarkerRecordedEventAttributes} markerRecordedEventAttributes
 */
HistoryEvent.prototype['markerRecordedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventRecordMarkerFailedEventAttributes} recordMarkerFailedEventAttributes
 */
HistoryEvent.prototype['recordMarkerFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventTimerStartedEventAttributes} timerStartedEventAttributes
 */
HistoryEvent.prototype['timerStartedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventTimerFiredEventAttributes} timerFiredEventAttributes
 */
HistoryEvent.prototype['timerFiredEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventTimerCanceledEventAttributes} timerCanceledEventAttributes
 */
HistoryEvent.prototype['timerCanceledEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventStartChildWorkflowExecutionInitiatedEventAttributes} startChildWorkflowExecutionInitiatedEventAttributes
 */
HistoryEvent.prototype['startChildWorkflowExecutionInitiatedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventChildWorkflowExecutionStartedEventAttributes} childWorkflowExecutionStartedEventAttributes
 */
HistoryEvent.prototype['childWorkflowExecutionStartedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventChildWorkflowExecutionCompletedEventAttributes} childWorkflowExecutionCompletedEventAttributes
 */
HistoryEvent.prototype['childWorkflowExecutionCompletedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventChildWorkflowExecutionFailedEventAttributes} childWorkflowExecutionFailedEventAttributes
 */
HistoryEvent.prototype['childWorkflowExecutionFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventChildWorkflowExecutionTimedOutEventAttributes} childWorkflowExecutionTimedOutEventAttributes
 */
HistoryEvent.prototype['childWorkflowExecutionTimedOutEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventChildWorkflowExecutionCanceledEventAttributes} childWorkflowExecutionCanceledEventAttributes
 */
HistoryEvent.prototype['childWorkflowExecutionCanceledEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventChildWorkflowExecutionTerminatedEventAttributes} childWorkflowExecutionTerminatedEventAttributes
 */
HistoryEvent.prototype['childWorkflowExecutionTerminatedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventSignalExternalWorkflowExecutionInitiatedEventAttributes} signalExternalWorkflowExecutionInitiatedEventAttributes
 */
HistoryEvent.prototype['signalExternalWorkflowExecutionInitiatedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventExternalWorkflowExecutionSignaledEventAttributes} externalWorkflowExecutionSignaledEventAttributes
 */
HistoryEvent.prototype['externalWorkflowExecutionSignaledEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventSignalExternalWorkflowExecutionFailedEventAttributes} signalExternalWorkflowExecutionFailedEventAttributes
 */
HistoryEvent.prototype['signalExternalWorkflowExecutionFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventExternalWorkflowExecutionCancelRequestedEventAttributes} externalWorkflowExecutionCancelRequestedEventAttributes
 */
HistoryEvent.prototype['externalWorkflowExecutionCancelRequestedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventRequestCancelExternalWorkflowExecutionInitiatedEventAttributes} requestCancelExternalWorkflowExecutionInitiatedEventAttributes
 */
HistoryEvent.prototype['requestCancelExternalWorkflowExecutionInitiatedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventRequestCancelExternalWorkflowExecutionFailedEventAttributes} requestCancelExternalWorkflowExecutionFailedEventAttributes
 */
HistoryEvent.prototype['requestCancelExternalWorkflowExecutionFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventScheduleActivityTaskFailedEventAttributes} scheduleActivityTaskFailedEventAttributes
 */
HistoryEvent.prototype['scheduleActivityTaskFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventRequestCancelActivityTaskFailedEventAttributes} requestCancelActivityTaskFailedEventAttributes
 */
HistoryEvent.prototype['requestCancelActivityTaskFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventStartTimerFailedEventAttributes} startTimerFailedEventAttributes
 */
HistoryEvent.prototype['startTimerFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventCancelTimerFailedEventAttributes} cancelTimerFailedEventAttributes
 */
HistoryEvent.prototype['cancelTimerFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventStartChildWorkflowExecutionFailedEventAttributes} startChildWorkflowExecutionFailedEventAttributes
 */
HistoryEvent.prototype['startChildWorkflowExecutionFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventLambdaFunctionScheduledEventAttributes} lambdaFunctionScheduledEventAttributes
 */
HistoryEvent.prototype['lambdaFunctionScheduledEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventLambdaFunctionStartedEventAttributes} lambdaFunctionStartedEventAttributes
 */
HistoryEvent.prototype['lambdaFunctionStartedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventLambdaFunctionCompletedEventAttributes} lambdaFunctionCompletedEventAttributes
 */
HistoryEvent.prototype['lambdaFunctionCompletedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventLambdaFunctionFailedEventAttributes} lambdaFunctionFailedEventAttributes
 */
HistoryEvent.prototype['lambdaFunctionFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventLambdaFunctionTimedOutEventAttributes} lambdaFunctionTimedOutEventAttributes
 */
HistoryEvent.prototype['lambdaFunctionTimedOutEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventScheduleLambdaFunctionFailedEventAttributes} scheduleLambdaFunctionFailedEventAttributes
 */
HistoryEvent.prototype['scheduleLambdaFunctionFailedEventAttributes'] = undefined;

/**
 * @member {module:model/HistoryEventStartLambdaFunctionFailedEventAttributes} startLambdaFunctionFailedEventAttributes
 */
HistoryEvent.prototype['startLambdaFunctionFailedEventAttributes'] = undefined;






export default HistoryEvent;

