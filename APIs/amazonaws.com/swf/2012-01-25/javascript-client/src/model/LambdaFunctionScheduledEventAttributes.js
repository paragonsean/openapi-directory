/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LambdaFunctionScheduledEventAttributes model module.
 * @module model/LambdaFunctionScheduledEventAttributes
 * @version 2012-01-25
 */
class LambdaFunctionScheduledEventAttributes {
    /**
     * Constructs a new <code>LambdaFunctionScheduledEventAttributes</code>.
     * Provides the details of the &lt;code&gt;LambdaFunctionScheduled&lt;/code&gt; event. It isn&#39;t set for other event types.
     * @alias module:model/LambdaFunctionScheduledEventAttributes
     * @param id {String} 
     * @param name {String} 
     * @param decisionTaskCompletedEventId {Number} 
     */
    constructor(id, name, decisionTaskCompletedEventId) { 
        
        LambdaFunctionScheduledEventAttributes.initialize(this, id, name, decisionTaskCompletedEventId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name, decisionTaskCompletedEventId) { 
        obj['id'] = id;
        obj['name'] = name;
        obj['decisionTaskCompletedEventId'] = decisionTaskCompletedEventId;
    }

    /**
     * Constructs a <code>LambdaFunctionScheduledEventAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LambdaFunctionScheduledEventAttributes} obj Optional instance to populate.
     * @return {module:model/LambdaFunctionScheduledEventAttributes} The populated <code>LambdaFunctionScheduledEventAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LambdaFunctionScheduledEventAttributes();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('control')) {
                obj['control'] = ApiClient.convertToType(data['control'], 'String');
            }
            if (data.hasOwnProperty('input')) {
                obj['input'] = ApiClient.convertToType(data['input'], 'String');
            }
            if (data.hasOwnProperty('startToCloseTimeout')) {
                obj['startToCloseTimeout'] = ApiClient.convertToType(data['startToCloseTimeout'], 'String');
            }
            if (data.hasOwnProperty('decisionTaskCompletedEventId')) {
                obj['decisionTaskCompletedEventId'] = ApiClient.convertToType(data['decisionTaskCompletedEventId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LambdaFunctionScheduledEventAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LambdaFunctionScheduledEventAttributes</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LambdaFunctionScheduledEventAttributes.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `id`
        if (data['id']) { // data not null
          String.validateJSON(data['id']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `control`
        if (data['control']) { // data not null
          String.validateJSON(data['control']);
        }
        // validate the optional field `input`
        if (data['input']) { // data not null
          String.validateJSON(data['input']);
        }
        // validate the optional field `startToCloseTimeout`
        if (data['startToCloseTimeout']) { // data not null
          String.validateJSON(data['startToCloseTimeout']);
        }
        // validate the optional field `decisionTaskCompletedEventId`
        if (data['decisionTaskCompletedEventId']) { // data not null
          Number.validateJSON(data['decisionTaskCompletedEventId']);
        }

        return true;
    }


}

LambdaFunctionScheduledEventAttributes.RequiredProperties = ["id", "name", "decisionTaskCompletedEventId"];

/**
 * @member {String} id
 */
LambdaFunctionScheduledEventAttributes.prototype['id'] = undefined;

/**
 * @member {String} name
 */
LambdaFunctionScheduledEventAttributes.prototype['name'] = undefined;

/**
 * @member {String} control
 */
LambdaFunctionScheduledEventAttributes.prototype['control'] = undefined;

/**
 * @member {String} input
 */
LambdaFunctionScheduledEventAttributes.prototype['input'] = undefined;

/**
 * @member {String} startToCloseTimeout
 */
LambdaFunctionScheduledEventAttributes.prototype['startToCloseTimeout'] = undefined;

/**
 * @member {Number} decisionTaskCompletedEventId
 */
LambdaFunctionScheduledEventAttributes.prototype['decisionTaskCompletedEventId'] = undefined;






export default LambdaFunctionScheduledEventAttributes;

