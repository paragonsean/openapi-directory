/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChildPolicy from './ChildPolicy';
import WorkflowExecutionTimeoutType from './WorkflowExecutionTimeoutType';

/**
 * The WorkflowExecutionTimedOutEventAttributes model module.
 * @module model/WorkflowExecutionTimedOutEventAttributes
 * @version 2012-01-25
 */
class WorkflowExecutionTimedOutEventAttributes {
    /**
     * Constructs a new <code>WorkflowExecutionTimedOutEventAttributes</code>.
     * Provides the details of the &lt;code&gt;WorkflowExecutionTimedOut&lt;/code&gt; event.
     * @alias module:model/WorkflowExecutionTimedOutEventAttributes
     * @param timeoutType {module:model/WorkflowExecutionTimeoutType} 
     * @param childPolicy {module:model/ChildPolicy} 
     */
    constructor(timeoutType, childPolicy) { 
        
        WorkflowExecutionTimedOutEventAttributes.initialize(this, timeoutType, childPolicy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, timeoutType, childPolicy) { 
        obj['timeoutType'] = timeoutType;
        obj['childPolicy'] = childPolicy;
    }

    /**
     * Constructs a <code>WorkflowExecutionTimedOutEventAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkflowExecutionTimedOutEventAttributes} obj Optional instance to populate.
     * @return {module:model/WorkflowExecutionTimedOutEventAttributes} The populated <code>WorkflowExecutionTimedOutEventAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkflowExecutionTimedOutEventAttributes();

            if (data.hasOwnProperty('timeoutType')) {
                obj['timeoutType'] = ApiClient.convertToType(data['timeoutType'], WorkflowExecutionTimeoutType);
            }
            if (data.hasOwnProperty('childPolicy')) {
                obj['childPolicy'] = ApiClient.convertToType(data['childPolicy'], ChildPolicy);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkflowExecutionTimedOutEventAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkflowExecutionTimedOutEventAttributes</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WorkflowExecutionTimedOutEventAttributes.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `timeoutType`
        if (data['timeoutType']) { // data not null
          WorkflowExecutionTimeoutType.validateJSON(data['timeoutType']);
        }
        // validate the optional field `childPolicy`
        if (data['childPolicy']) { // data not null
          ChildPolicy.validateJSON(data['childPolicy']);
        }

        return true;
    }


}

WorkflowExecutionTimedOutEventAttributes.RequiredProperties = ["timeoutType", "childPolicy"];

/**
 * @member {module:model/WorkflowExecutionTimeoutType} timeoutType
 */
WorkflowExecutionTimedOutEventAttributes.prototype['timeoutType'] = undefined;

/**
 * @member {module:model/ChildPolicy} childPolicy
 */
WorkflowExecutionTimedOutEventAttributes.prototype['childPolicy'] = undefined;






export default WorkflowExecutionTimedOutEventAttributes;

