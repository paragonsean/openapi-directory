/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SignalExternalWorkflowExecutionDecisionAttributes model module.
 * @module model/SignalExternalWorkflowExecutionDecisionAttributes
 * @version 2012-01-25
 */
class SignalExternalWorkflowExecutionDecisionAttributes {
    /**
     * Constructs a new <code>SignalExternalWorkflowExecutionDecisionAttributes</code>.
     * &lt;p&gt;Provides the details of the &lt;code&gt;SignalExternalWorkflowExecution&lt;/code&gt; decision.&lt;/p&gt; &lt;p&gt; &lt;b&gt;Access Control&lt;/b&gt; &lt;/p&gt; &lt;p&gt;You can use IAM policies to control this decision&#39;s access to Amazon SWF resources as follows:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Use a &lt;code&gt;Resource&lt;/code&gt; element with the domain name to limit the action to only specified domains.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use an &lt;code&gt;Action&lt;/code&gt; element to allow or deny permission to call this action.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;You cannot use an IAM policy to constrain this action&#39;s parameters.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If the caller doesn&#39;t have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute&#39;s &lt;code&gt;cause&lt;/code&gt; parameter is set to &lt;code&gt;OPERATION_NOT_PERMITTED&lt;/code&gt;. For details and example IAM policies, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\&quot;&gt;Using IAM to Manage Access to Amazon SWF Workflows&lt;/a&gt; in the &lt;i&gt;Amazon SWF Developer Guide&lt;/i&gt;.&lt;/p&gt;
     * @alias module:model/SignalExternalWorkflowExecutionDecisionAttributes
     * @param workflowId {String} 
     * @param signalName {String} 
     */
    constructor(workflowId, signalName) { 
        
        SignalExternalWorkflowExecutionDecisionAttributes.initialize(this, workflowId, signalName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, workflowId, signalName) { 
        obj['workflowId'] = workflowId;
        obj['signalName'] = signalName;
    }

    /**
     * Constructs a <code>SignalExternalWorkflowExecutionDecisionAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SignalExternalWorkflowExecutionDecisionAttributes} obj Optional instance to populate.
     * @return {module:model/SignalExternalWorkflowExecutionDecisionAttributes} The populated <code>SignalExternalWorkflowExecutionDecisionAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SignalExternalWorkflowExecutionDecisionAttributes();

            if (data.hasOwnProperty('workflowId')) {
                obj['workflowId'] = ApiClient.convertToType(data['workflowId'], 'String');
            }
            if (data.hasOwnProperty('runId')) {
                obj['runId'] = ApiClient.convertToType(data['runId'], 'String');
            }
            if (data.hasOwnProperty('signalName')) {
                obj['signalName'] = ApiClient.convertToType(data['signalName'], 'String');
            }
            if (data.hasOwnProperty('input')) {
                obj['input'] = ApiClient.convertToType(data['input'], 'String');
            }
            if (data.hasOwnProperty('control')) {
                obj['control'] = ApiClient.convertToType(data['control'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SignalExternalWorkflowExecutionDecisionAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SignalExternalWorkflowExecutionDecisionAttributes</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SignalExternalWorkflowExecutionDecisionAttributes.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `workflowId`
        if (data['workflowId']) { // data not null
          String.validateJSON(data['workflowId']);
        }
        // validate the optional field `runId`
        if (data['runId']) { // data not null
          String.validateJSON(data['runId']);
        }
        // validate the optional field `signalName`
        if (data['signalName']) { // data not null
          String.validateJSON(data['signalName']);
        }
        // validate the optional field `input`
        if (data['input']) { // data not null
          String.validateJSON(data['input']);
        }
        // validate the optional field `control`
        if (data['control']) { // data not null
          String.validateJSON(data['control']);
        }

        return true;
    }


}

SignalExternalWorkflowExecutionDecisionAttributes.RequiredProperties = ["workflowId", "signalName"];

/**
 * @member {String} workflowId
 */
SignalExternalWorkflowExecutionDecisionAttributes.prototype['workflowId'] = undefined;

/**
 * @member {String} runId
 */
SignalExternalWorkflowExecutionDecisionAttributes.prototype['runId'] = undefined;

/**
 * @member {String} signalName
 */
SignalExternalWorkflowExecutionDecisionAttributes.prototype['signalName'] = undefined;

/**
 * @member {String} input
 */
SignalExternalWorkflowExecutionDecisionAttributes.prototype['input'] = undefined;

/**
 * @member {String} control
 */
SignalExternalWorkflowExecutionDecisionAttributes.prototype['control'] = undefined;






export default SignalExternalWorkflowExecutionDecisionAttributes;

