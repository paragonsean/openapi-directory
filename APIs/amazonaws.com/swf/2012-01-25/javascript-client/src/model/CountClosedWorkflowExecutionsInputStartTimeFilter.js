/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExecutionTimeFilter from './ExecutionTimeFilter';

/**
 * The CountClosedWorkflowExecutionsInputStartTimeFilter model module.
 * @module model/CountClosedWorkflowExecutionsInputStartTimeFilter
 * @version 2012-01-25
 */
class CountClosedWorkflowExecutionsInputStartTimeFilter {
    /**
     * Constructs a new <code>CountClosedWorkflowExecutionsInputStartTimeFilter</code>.
     * @alias module:model/CountClosedWorkflowExecutionsInputStartTimeFilter
     * @implements module:model/ExecutionTimeFilter
     * @param oldestDate {Date} 
     */
    constructor(oldestDate) { 
        ExecutionTimeFilter.initialize(this, oldestDate);
        CountClosedWorkflowExecutionsInputStartTimeFilter.initialize(this, oldestDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, oldestDate) { 
        obj['oldestDate'] = oldestDate;
    }

    /**
     * Constructs a <code>CountClosedWorkflowExecutionsInputStartTimeFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CountClosedWorkflowExecutionsInputStartTimeFilter} obj Optional instance to populate.
     * @return {module:model/CountClosedWorkflowExecutionsInputStartTimeFilter} The populated <code>CountClosedWorkflowExecutionsInputStartTimeFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CountClosedWorkflowExecutionsInputStartTimeFilter();
            ExecutionTimeFilter.constructFromObject(data, obj);

            if (data.hasOwnProperty('oldestDate')) {
                obj['oldestDate'] = ApiClient.convertToType(data['oldestDate'], 'Date');
            }
            if (data.hasOwnProperty('latestDate')) {
                obj['latestDate'] = ApiClient.convertToType(data['latestDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CountClosedWorkflowExecutionsInputStartTimeFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CountClosedWorkflowExecutionsInputStartTimeFilter</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CountClosedWorkflowExecutionsInputStartTimeFilter.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `oldestDate`
        if (data['oldestDate']) { // data not null
          Date.validateJSON(data['oldestDate']);
        }
        // validate the optional field `latestDate`
        if (data['latestDate']) { // data not null
          Date.validateJSON(data['latestDate']);
        }

        return true;
    }


}

CountClosedWorkflowExecutionsInputStartTimeFilter.RequiredProperties = ["oldestDate"];

/**
 * @member {Date} oldestDate
 */
CountClosedWorkflowExecutionsInputStartTimeFilter.prototype['oldestDate'] = undefined;

/**
 * @member {Date} latestDate
 */
CountClosedWorkflowExecutionsInputStartTimeFilter.prototype['latestDate'] = undefined;


// Implement ExecutionTimeFilter interface:
/**
 * @member {Date} oldestDate
 */
ExecutionTimeFilter.prototype['oldestDate'] = undefined;
/**
 * @member {Date} latestDate
 */
ExecutionTimeFilter.prototype['latestDate'] = undefined;




export default CountClosedWorkflowExecutionsInputStartTimeFilter;

