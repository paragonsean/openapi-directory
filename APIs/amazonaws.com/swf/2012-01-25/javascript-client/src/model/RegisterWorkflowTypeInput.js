/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChildPolicy from './ChildPolicy';
import RegisterWorkflowTypeInputDefaultTaskList from './RegisterWorkflowTypeInputDefaultTaskList';

/**
 * The RegisterWorkflowTypeInput model module.
 * @module model/RegisterWorkflowTypeInput
 * @version 2012-01-25
 */
class RegisterWorkflowTypeInput {
    /**
     * Constructs a new <code>RegisterWorkflowTypeInput</code>.
     * @alias module:model/RegisterWorkflowTypeInput
     * @param domain {String} 
     * @param name {String} 
     * @param version {String} 
     */
    constructor(domain, name, version) { 
        
        RegisterWorkflowTypeInput.initialize(this, domain, name, version);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, domain, name, version) { 
        obj['domain'] = domain;
        obj['name'] = name;
        obj['version'] = version;
    }

    /**
     * Constructs a <code>RegisterWorkflowTypeInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RegisterWorkflowTypeInput} obj Optional instance to populate.
     * @return {module:model/RegisterWorkflowTypeInput} The populated <code>RegisterWorkflowTypeInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RegisterWorkflowTypeInput();

            if (data.hasOwnProperty('domain')) {
                obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('defaultTaskStartToCloseTimeout')) {
                obj['defaultTaskStartToCloseTimeout'] = ApiClient.convertToType(data['defaultTaskStartToCloseTimeout'], 'String');
            }
            if (data.hasOwnProperty('defaultExecutionStartToCloseTimeout')) {
                obj['defaultExecutionStartToCloseTimeout'] = ApiClient.convertToType(data['defaultExecutionStartToCloseTimeout'], 'String');
            }
            if (data.hasOwnProperty('defaultTaskList')) {
                obj['defaultTaskList'] = RegisterWorkflowTypeInputDefaultTaskList.constructFromObject(data['defaultTaskList']);
            }
            if (data.hasOwnProperty('defaultTaskPriority')) {
                obj['defaultTaskPriority'] = ApiClient.convertToType(data['defaultTaskPriority'], 'String');
            }
            if (data.hasOwnProperty('defaultChildPolicy')) {
                obj['defaultChildPolicy'] = ApiClient.convertToType(data['defaultChildPolicy'], ChildPolicy);
            }
            if (data.hasOwnProperty('defaultLambdaRole')) {
                obj['defaultLambdaRole'] = ApiClient.convertToType(data['defaultLambdaRole'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RegisterWorkflowTypeInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RegisterWorkflowTypeInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RegisterWorkflowTypeInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `domain`
        if (data['domain']) { // data not null
          String.validateJSON(data['domain']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `version`
        if (data['version']) { // data not null
          String.validateJSON(data['version']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `defaultTaskStartToCloseTimeout`
        if (data['defaultTaskStartToCloseTimeout']) { // data not null
          String.validateJSON(data['defaultTaskStartToCloseTimeout']);
        }
        // validate the optional field `defaultExecutionStartToCloseTimeout`
        if (data['defaultExecutionStartToCloseTimeout']) { // data not null
          String.validateJSON(data['defaultExecutionStartToCloseTimeout']);
        }
        // validate the optional field `defaultTaskList`
        if (data['defaultTaskList']) { // data not null
          RegisterWorkflowTypeInputDefaultTaskList.validateJSON(data['defaultTaskList']);
        }
        // validate the optional field `defaultTaskPriority`
        if (data['defaultTaskPriority']) { // data not null
          String.validateJSON(data['defaultTaskPriority']);
        }
        // validate the optional field `defaultChildPolicy`
        if (data['defaultChildPolicy']) { // data not null
          ChildPolicy.validateJSON(data['defaultChildPolicy']);
        }
        // validate the optional field `defaultLambdaRole`
        if (data['defaultLambdaRole']) { // data not null
          String.validateJSON(data['defaultLambdaRole']);
        }

        return true;
    }


}

RegisterWorkflowTypeInput.RequiredProperties = ["domain", "name", "version"];

/**
 * @member {String} domain
 */
RegisterWorkflowTypeInput.prototype['domain'] = undefined;

/**
 * @member {String} name
 */
RegisterWorkflowTypeInput.prototype['name'] = undefined;

/**
 * @member {String} version
 */
RegisterWorkflowTypeInput.prototype['version'] = undefined;

/**
 * @member {String} description
 */
RegisterWorkflowTypeInput.prototype['description'] = undefined;

/**
 * @member {String} defaultTaskStartToCloseTimeout
 */
RegisterWorkflowTypeInput.prototype['defaultTaskStartToCloseTimeout'] = undefined;

/**
 * @member {String} defaultExecutionStartToCloseTimeout
 */
RegisterWorkflowTypeInput.prototype['defaultExecutionStartToCloseTimeout'] = undefined;

/**
 * @member {module:model/RegisterWorkflowTypeInputDefaultTaskList} defaultTaskList
 */
RegisterWorkflowTypeInput.prototype['defaultTaskList'] = undefined;

/**
 * @member {String} defaultTaskPriority
 */
RegisterWorkflowTypeInput.prototype['defaultTaskPriority'] = undefined;

/**
 * @member {module:model/ChildPolicy} defaultChildPolicy
 */
RegisterWorkflowTypeInput.prototype['defaultChildPolicy'] = undefined;

/**
 * @member {String} defaultLambdaRole
 */
RegisterWorkflowTypeInput.prototype['defaultLambdaRole'] = undefined;






export default RegisterWorkflowTypeInput;

