# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.register_activity_type_input_default_task_list import RegisterActivityTypeInputDefaultTaskList
from openapi_server import util


class RegisterActivityTypeInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: str=None, name: str=None, version: str=None, description: str=None, default_task_start_to_close_timeout: str=None, default_task_heartbeat_timeout: str=None, default_task_list: RegisterActivityTypeInputDefaultTaskList=None, default_task_priority: str=None, default_task_schedule_to_start_timeout: str=None, default_task_schedule_to_close_timeout: str=None):
        """RegisterActivityTypeInput - a model defined in OpenAPI

        :param domain: The domain of this RegisterActivityTypeInput.
        :param name: The name of this RegisterActivityTypeInput.
        :param version: The version of this RegisterActivityTypeInput.
        :param description: The description of this RegisterActivityTypeInput.
        :param default_task_start_to_close_timeout: The default_task_start_to_close_timeout of this RegisterActivityTypeInput.
        :param default_task_heartbeat_timeout: The default_task_heartbeat_timeout of this RegisterActivityTypeInput.
        :param default_task_list: The default_task_list of this RegisterActivityTypeInput.
        :param default_task_priority: The default_task_priority of this RegisterActivityTypeInput.
        :param default_task_schedule_to_start_timeout: The default_task_schedule_to_start_timeout of this RegisterActivityTypeInput.
        :param default_task_schedule_to_close_timeout: The default_task_schedule_to_close_timeout of this RegisterActivityTypeInput.
        """
        self.openapi_types = {
            'domain': str,
            'name': str,
            'version': str,
            'description': str,
            'default_task_start_to_close_timeout': str,
            'default_task_heartbeat_timeout': str,
            'default_task_list': RegisterActivityTypeInputDefaultTaskList,
            'default_task_priority': str,
            'default_task_schedule_to_start_timeout': str,
            'default_task_schedule_to_close_timeout': str
        }

        self.attribute_map = {
            'domain': 'domain',
            'name': 'name',
            'version': 'version',
            'description': 'description',
            'default_task_start_to_close_timeout': 'defaultTaskStartToCloseTimeout',
            'default_task_heartbeat_timeout': 'defaultTaskHeartbeatTimeout',
            'default_task_list': 'defaultTaskList',
            'default_task_priority': 'defaultTaskPriority',
            'default_task_schedule_to_start_timeout': 'defaultTaskScheduleToStartTimeout',
            'default_task_schedule_to_close_timeout': 'defaultTaskScheduleToCloseTimeout'
        }

        self._domain = domain
        self._name = name
        self._version = version
        self._description = description
        self._default_task_start_to_close_timeout = default_task_start_to_close_timeout
        self._default_task_heartbeat_timeout = default_task_heartbeat_timeout
        self._default_task_list = default_task_list
        self._default_task_priority = default_task_priority
        self._default_task_schedule_to_start_timeout = default_task_schedule_to_start_timeout
        self._default_task_schedule_to_close_timeout = default_task_schedule_to_close_timeout

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegisterActivityTypeInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegisterActivityTypeInput of this RegisterActivityTypeInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this RegisterActivityTypeInput.


        :return: The domain of this RegisterActivityTypeInput.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this RegisterActivityTypeInput.


        :param domain: The domain of this RegisterActivityTypeInput.
        :type domain: str
        """
        if domain is None:
            raise ValueError("Invalid value for `domain`, must not be `None`")

        self._domain = domain

    @property
    def name(self):
        """Gets the name of this RegisterActivityTypeInput.


        :return: The name of this RegisterActivityTypeInput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RegisterActivityTypeInput.


        :param name: The name of this RegisterActivityTypeInput.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def version(self):
        """Gets the version of this RegisterActivityTypeInput.


        :return: The version of this RegisterActivityTypeInput.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this RegisterActivityTypeInput.


        :param version: The version of this RegisterActivityTypeInput.
        :type version: str
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")

        self._version = version

    @property
    def description(self):
        """Gets the description of this RegisterActivityTypeInput.


        :return: The description of this RegisterActivityTypeInput.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RegisterActivityTypeInput.


        :param description: The description of this RegisterActivityTypeInput.
        :type description: str
        """

        self._description = description

    @property
    def default_task_start_to_close_timeout(self):
        """Gets the default_task_start_to_close_timeout of this RegisterActivityTypeInput.


        :return: The default_task_start_to_close_timeout of this RegisterActivityTypeInput.
        :rtype: str
        """
        return self._default_task_start_to_close_timeout

    @default_task_start_to_close_timeout.setter
    def default_task_start_to_close_timeout(self, default_task_start_to_close_timeout):
        """Sets the default_task_start_to_close_timeout of this RegisterActivityTypeInput.


        :param default_task_start_to_close_timeout: The default_task_start_to_close_timeout of this RegisterActivityTypeInput.
        :type default_task_start_to_close_timeout: str
        """

        self._default_task_start_to_close_timeout = default_task_start_to_close_timeout

    @property
    def default_task_heartbeat_timeout(self):
        """Gets the default_task_heartbeat_timeout of this RegisterActivityTypeInput.


        :return: The default_task_heartbeat_timeout of this RegisterActivityTypeInput.
        :rtype: str
        """
        return self._default_task_heartbeat_timeout

    @default_task_heartbeat_timeout.setter
    def default_task_heartbeat_timeout(self, default_task_heartbeat_timeout):
        """Sets the default_task_heartbeat_timeout of this RegisterActivityTypeInput.


        :param default_task_heartbeat_timeout: The default_task_heartbeat_timeout of this RegisterActivityTypeInput.
        :type default_task_heartbeat_timeout: str
        """

        self._default_task_heartbeat_timeout = default_task_heartbeat_timeout

    @property
    def default_task_list(self):
        """Gets the default_task_list of this RegisterActivityTypeInput.


        :return: The default_task_list of this RegisterActivityTypeInput.
        :rtype: RegisterActivityTypeInputDefaultTaskList
        """
        return self._default_task_list

    @default_task_list.setter
    def default_task_list(self, default_task_list):
        """Sets the default_task_list of this RegisterActivityTypeInput.


        :param default_task_list: The default_task_list of this RegisterActivityTypeInput.
        :type default_task_list: RegisterActivityTypeInputDefaultTaskList
        """

        self._default_task_list = default_task_list

    @property
    def default_task_priority(self):
        """Gets the default_task_priority of this RegisterActivityTypeInput.


        :return: The default_task_priority of this RegisterActivityTypeInput.
        :rtype: str
        """
        return self._default_task_priority

    @default_task_priority.setter
    def default_task_priority(self, default_task_priority):
        """Sets the default_task_priority of this RegisterActivityTypeInput.


        :param default_task_priority: The default_task_priority of this RegisterActivityTypeInput.
        :type default_task_priority: str
        """

        self._default_task_priority = default_task_priority

    @property
    def default_task_schedule_to_start_timeout(self):
        """Gets the default_task_schedule_to_start_timeout of this RegisterActivityTypeInput.


        :return: The default_task_schedule_to_start_timeout of this RegisterActivityTypeInput.
        :rtype: str
        """
        return self._default_task_schedule_to_start_timeout

    @default_task_schedule_to_start_timeout.setter
    def default_task_schedule_to_start_timeout(self, default_task_schedule_to_start_timeout):
        """Sets the default_task_schedule_to_start_timeout of this RegisterActivityTypeInput.


        :param default_task_schedule_to_start_timeout: The default_task_schedule_to_start_timeout of this RegisterActivityTypeInput.
        :type default_task_schedule_to_start_timeout: str
        """

        self._default_task_schedule_to_start_timeout = default_task_schedule_to_start_timeout

    @property
    def default_task_schedule_to_close_timeout(self):
        """Gets the default_task_schedule_to_close_timeout of this RegisterActivityTypeInput.


        :return: The default_task_schedule_to_close_timeout of this RegisterActivityTypeInput.
        :rtype: str
        """
        return self._default_task_schedule_to_close_timeout

    @default_task_schedule_to_close_timeout.setter
    def default_task_schedule_to_close_timeout(self, default_task_schedule_to_close_timeout):
        """Sets the default_task_schedule_to_close_timeout of this RegisterActivityTypeInput.


        :param default_task_schedule_to_close_timeout: The default_task_schedule_to_close_timeout of this RegisterActivityTypeInput.
        :type default_task_schedule_to_close_timeout: str
        """

        self._default_task_schedule_to_close_timeout = default_task_schedule_to_close_timeout
