# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cancel_workflow_execution_failed_cause import CancelWorkflowExecutionFailedCause
from openapi_server import util


class HistoryEventCancelWorkflowExecutionFailedEventAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cause: CancelWorkflowExecutionFailedCause=None, decision_task_completed_event_id: int=None):
        """HistoryEventCancelWorkflowExecutionFailedEventAttributes - a model defined in OpenAPI

        :param cause: The cause of this HistoryEventCancelWorkflowExecutionFailedEventAttributes.
        :param decision_task_completed_event_id: The decision_task_completed_event_id of this HistoryEventCancelWorkflowExecutionFailedEventAttributes.
        """
        self.openapi_types = {
            'cause': CancelWorkflowExecutionFailedCause,
            'decision_task_completed_event_id': int
        }

        self.attribute_map = {
            'cause': 'cause',
            'decision_task_completed_event_id': 'decisionTaskCompletedEventId'
        }

        self._cause = cause
        self._decision_task_completed_event_id = decision_task_completed_event_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HistoryEventCancelWorkflowExecutionFailedEventAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HistoryEvent_cancelWorkflowExecutionFailedEventAttributes of this HistoryEventCancelWorkflowExecutionFailedEventAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cause(self):
        """Gets the cause of this HistoryEventCancelWorkflowExecutionFailedEventAttributes.


        :return: The cause of this HistoryEventCancelWorkflowExecutionFailedEventAttributes.
        :rtype: CancelWorkflowExecutionFailedCause
        """
        return self._cause

    @cause.setter
    def cause(self, cause):
        """Sets the cause of this HistoryEventCancelWorkflowExecutionFailedEventAttributes.


        :param cause: The cause of this HistoryEventCancelWorkflowExecutionFailedEventAttributes.
        :type cause: CancelWorkflowExecutionFailedCause
        """
        if cause is None:
            raise ValueError("Invalid value for `cause`, must not be `None`")

        self._cause = cause

    @property
    def decision_task_completed_event_id(self):
        """Gets the decision_task_completed_event_id of this HistoryEventCancelWorkflowExecutionFailedEventAttributes.


        :return: The decision_task_completed_event_id of this HistoryEventCancelWorkflowExecutionFailedEventAttributes.
        :rtype: int
        """
        return self._decision_task_completed_event_id

    @decision_task_completed_event_id.setter
    def decision_task_completed_event_id(self, decision_task_completed_event_id):
        """Sets the decision_task_completed_event_id of this HistoryEventCancelWorkflowExecutionFailedEventAttributes.


        :param decision_task_completed_event_id: The decision_task_completed_event_id of this HistoryEventCancelWorkflowExecutionFailedEventAttributes.
        :type decision_task_completed_event_id: int
        """
        if decision_task_completed_event_id is None:
            raise ValueError("Invalid value for `decision_task_completed_event_id`, must not be `None`")

        self._decision_task_completed_event_id = decision_task_completed_event_id
