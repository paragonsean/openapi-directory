# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.workflow_execution_signaled_event_attributes_external_workflow_execution import WorkflowExecutionSignaledEventAttributesExternalWorkflowExecution
from openapi_server import util


class HistoryEventWorkflowExecutionSignaledEventAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, signal_name: str=None, input: str=None, external_workflow_execution: WorkflowExecutionSignaledEventAttributesExternalWorkflowExecution=None, external_initiated_event_id: int=None):
        """HistoryEventWorkflowExecutionSignaledEventAttributes - a model defined in OpenAPI

        :param signal_name: The signal_name of this HistoryEventWorkflowExecutionSignaledEventAttributes.
        :param input: The input of this HistoryEventWorkflowExecutionSignaledEventAttributes.
        :param external_workflow_execution: The external_workflow_execution of this HistoryEventWorkflowExecutionSignaledEventAttributes.
        :param external_initiated_event_id: The external_initiated_event_id of this HistoryEventWorkflowExecutionSignaledEventAttributes.
        """
        self.openapi_types = {
            'signal_name': str,
            'input': str,
            'external_workflow_execution': WorkflowExecutionSignaledEventAttributesExternalWorkflowExecution,
            'external_initiated_event_id': int
        }

        self.attribute_map = {
            'signal_name': 'signalName',
            'input': 'input',
            'external_workflow_execution': 'externalWorkflowExecution',
            'external_initiated_event_id': 'externalInitiatedEventId'
        }

        self._signal_name = signal_name
        self._input = input
        self._external_workflow_execution = external_workflow_execution
        self._external_initiated_event_id = external_initiated_event_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HistoryEventWorkflowExecutionSignaledEventAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HistoryEvent_workflowExecutionSignaledEventAttributes of this HistoryEventWorkflowExecutionSignaledEventAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def signal_name(self):
        """Gets the signal_name of this HistoryEventWorkflowExecutionSignaledEventAttributes.


        :return: The signal_name of this HistoryEventWorkflowExecutionSignaledEventAttributes.
        :rtype: str
        """
        return self._signal_name

    @signal_name.setter
    def signal_name(self, signal_name):
        """Sets the signal_name of this HistoryEventWorkflowExecutionSignaledEventAttributes.


        :param signal_name: The signal_name of this HistoryEventWorkflowExecutionSignaledEventAttributes.
        :type signal_name: str
        """
        if signal_name is None:
            raise ValueError("Invalid value for `signal_name`, must not be `None`")

        self._signal_name = signal_name

    @property
    def input(self):
        """Gets the input of this HistoryEventWorkflowExecutionSignaledEventAttributes.


        :return: The input of this HistoryEventWorkflowExecutionSignaledEventAttributes.
        :rtype: str
        """
        return self._input

    @input.setter
    def input(self, input):
        """Sets the input of this HistoryEventWorkflowExecutionSignaledEventAttributes.


        :param input: The input of this HistoryEventWorkflowExecutionSignaledEventAttributes.
        :type input: str
        """

        self._input = input

    @property
    def external_workflow_execution(self):
        """Gets the external_workflow_execution of this HistoryEventWorkflowExecutionSignaledEventAttributes.


        :return: The external_workflow_execution of this HistoryEventWorkflowExecutionSignaledEventAttributes.
        :rtype: WorkflowExecutionSignaledEventAttributesExternalWorkflowExecution
        """
        return self._external_workflow_execution

    @external_workflow_execution.setter
    def external_workflow_execution(self, external_workflow_execution):
        """Sets the external_workflow_execution of this HistoryEventWorkflowExecutionSignaledEventAttributes.


        :param external_workflow_execution: The external_workflow_execution of this HistoryEventWorkflowExecutionSignaledEventAttributes.
        :type external_workflow_execution: WorkflowExecutionSignaledEventAttributesExternalWorkflowExecution
        """

        self._external_workflow_execution = external_workflow_execution

    @property
    def external_initiated_event_id(self):
        """Gets the external_initiated_event_id of this HistoryEventWorkflowExecutionSignaledEventAttributes.


        :return: The external_initiated_event_id of this HistoryEventWorkflowExecutionSignaledEventAttributes.
        :rtype: int
        """
        return self._external_initiated_event_id

    @external_initiated_event_id.setter
    def external_initiated_event_id(self, external_initiated_event_id):
        """Sets the external_initiated_event_id of this HistoryEventWorkflowExecutionSignaledEventAttributes.


        :param external_initiated_event_id: The external_initiated_event_id of this HistoryEventWorkflowExecutionSignaledEventAttributes.
        :type external_initiated_event_id: int
        """

        self._external_initiated_event_id = external_initiated_event_id
