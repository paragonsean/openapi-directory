# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContinueAsNewWorkflowExecutionFailedCause(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    UNHANDLED_DECISION = 'UNHANDLED_DECISION'
    WORKFLOW_TYPE_DEPRECATED = 'WORKFLOW_TYPE_DEPRECATED'
    WORKFLOW_TYPE_DOES_NOT_EXIST = 'WORKFLOW_TYPE_DOES_NOT_EXIST'
    DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED = 'DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED'
    DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED = 'DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED'
    DEFAULT_TASK_LIST_UNDEFINED = 'DEFAULT_TASK_LIST_UNDEFINED'
    DEFAULT_CHILD_POLICY_UNDEFINED = 'DEFAULT_CHILD_POLICY_UNDEFINED'
    CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED = 'CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED'
    OPERATION_NOT_PERMITTED = 'OPERATION_NOT_PERMITTED'

    def __init__(self):
        """ContinueAsNewWorkflowExecutionFailedCause - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContinueAsNewWorkflowExecutionFailedCause':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContinueAsNewWorkflowExecutionFailedCause of this ContinueAsNewWorkflowExecutionFailedCause.
        """
        return util.deserialize_model(dikt, cls)
