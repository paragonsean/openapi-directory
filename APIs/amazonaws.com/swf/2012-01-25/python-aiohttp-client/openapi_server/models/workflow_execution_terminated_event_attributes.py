# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.child_policy import ChildPolicy
from openapi_server.models.workflow_execution_terminated_cause import WorkflowExecutionTerminatedCause
from openapi_server import util


class WorkflowExecutionTerminatedEventAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reason: str=None, details: str=None, child_policy: ChildPolicy=None, cause: WorkflowExecutionTerminatedCause=None):
        """WorkflowExecutionTerminatedEventAttributes - a model defined in OpenAPI

        :param reason: The reason of this WorkflowExecutionTerminatedEventAttributes.
        :param details: The details of this WorkflowExecutionTerminatedEventAttributes.
        :param child_policy: The child_policy of this WorkflowExecutionTerminatedEventAttributes.
        :param cause: The cause of this WorkflowExecutionTerminatedEventAttributes.
        """
        self.openapi_types = {
            'reason': str,
            'details': str,
            'child_policy': ChildPolicy,
            'cause': WorkflowExecutionTerminatedCause
        }

        self.attribute_map = {
            'reason': 'reason',
            'details': 'details',
            'child_policy': 'childPolicy',
            'cause': 'cause'
        }

        self._reason = reason
        self._details = details
        self._child_policy = child_policy
        self._cause = cause

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkflowExecutionTerminatedEventAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkflowExecutionTerminatedEventAttributes of this WorkflowExecutionTerminatedEventAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reason(self):
        """Gets the reason of this WorkflowExecutionTerminatedEventAttributes.


        :return: The reason of this WorkflowExecutionTerminatedEventAttributes.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this WorkflowExecutionTerminatedEventAttributes.


        :param reason: The reason of this WorkflowExecutionTerminatedEventAttributes.
        :type reason: str
        """

        self._reason = reason

    @property
    def details(self):
        """Gets the details of this WorkflowExecutionTerminatedEventAttributes.


        :return: The details of this WorkflowExecutionTerminatedEventAttributes.
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this WorkflowExecutionTerminatedEventAttributes.


        :param details: The details of this WorkflowExecutionTerminatedEventAttributes.
        :type details: str
        """

        self._details = details

    @property
    def child_policy(self):
        """Gets the child_policy of this WorkflowExecutionTerminatedEventAttributes.


        :return: The child_policy of this WorkflowExecutionTerminatedEventAttributes.
        :rtype: ChildPolicy
        """
        return self._child_policy

    @child_policy.setter
    def child_policy(self, child_policy):
        """Sets the child_policy of this WorkflowExecutionTerminatedEventAttributes.


        :param child_policy: The child_policy of this WorkflowExecutionTerminatedEventAttributes.
        :type child_policy: ChildPolicy
        """
        if child_policy is None:
            raise ValueError("Invalid value for `child_policy`, must not be `None`")

        self._child_policy = child_policy

    @property
    def cause(self):
        """Gets the cause of this WorkflowExecutionTerminatedEventAttributes.


        :return: The cause of this WorkflowExecutionTerminatedEventAttributes.
        :rtype: WorkflowExecutionTerminatedCause
        """
        return self._cause

    @cause.setter
    def cause(self, cause):
        """Sets the cause of this WorkflowExecutionTerminatedEventAttributes.


        :param cause: The cause of this WorkflowExecutionTerminatedEventAttributes.
        :type cause: WorkflowExecutionTerminatedCause
        """

        self._cause = cause
