# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActivityTaskStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cancel_requested: bool=None):
        """ActivityTaskStatus - a model defined in OpenAPI

        :param cancel_requested: The cancel_requested of this ActivityTaskStatus.
        """
        self.openapi_types = {
            'cancel_requested': bool
        }

        self.attribute_map = {
            'cancel_requested': 'cancelRequested'
        }

        self._cancel_requested = cancel_requested

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityTaskStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivityTaskStatus of this ActivityTaskStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cancel_requested(self):
        """Gets the cancel_requested of this ActivityTaskStatus.


        :return: The cancel_requested of this ActivityTaskStatus.
        :rtype: bool
        """
        return self._cancel_requested

    @cancel_requested.setter
    def cancel_requested(self, cancel_requested):
        """Sets the cancel_requested of this ActivityTaskStatus.


        :param cancel_requested: The cancel_requested of this ActivityTaskStatus.
        :type cancel_requested: bool
        """
        if cancel_requested is None:
            raise ValueError("Invalid value for `cancel_requested`, must not be `None`")

        self._cancel_requested = cancel_requested
