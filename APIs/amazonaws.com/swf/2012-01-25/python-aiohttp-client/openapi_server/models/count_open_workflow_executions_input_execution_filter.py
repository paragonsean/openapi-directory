# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CountOpenWorkflowExecutionsInputExecutionFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workflow_id: str=None):
        """CountOpenWorkflowExecutionsInputExecutionFilter - a model defined in OpenAPI

        :param workflow_id: The workflow_id of this CountOpenWorkflowExecutionsInputExecutionFilter.
        """
        self.openapi_types = {
            'workflow_id': str
        }

        self.attribute_map = {
            'workflow_id': 'workflowId'
        }

        self._workflow_id = workflow_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CountOpenWorkflowExecutionsInputExecutionFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CountOpenWorkflowExecutionsInput_executionFilter of this CountOpenWorkflowExecutionsInputExecutionFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workflow_id(self):
        """Gets the workflow_id of this CountOpenWorkflowExecutionsInputExecutionFilter.


        :return: The workflow_id of this CountOpenWorkflowExecutionsInputExecutionFilter.
        :rtype: str
        """
        return self._workflow_id

    @workflow_id.setter
    def workflow_id(self, workflow_id):
        """Sets the workflow_id of this CountOpenWorkflowExecutionsInputExecutionFilter.


        :param workflow_id: The workflow_id of this CountOpenWorkflowExecutionsInputExecutionFilter.
        :type workflow_id: str
        """
        if workflow_id is None:
            raise ValueError("Invalid value for `workflow_id`, must not be `None`")

        self._workflow_id = workflow_id
