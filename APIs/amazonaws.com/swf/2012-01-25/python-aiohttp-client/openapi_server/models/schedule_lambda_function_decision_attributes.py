# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScheduleLambdaFunctionDecisionAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, control: str=None, input: str=None, start_to_close_timeout: str=None):
        """ScheduleLambdaFunctionDecisionAttributes - a model defined in OpenAPI

        :param id: The id of this ScheduleLambdaFunctionDecisionAttributes.
        :param name: The name of this ScheduleLambdaFunctionDecisionAttributes.
        :param control: The control of this ScheduleLambdaFunctionDecisionAttributes.
        :param input: The input of this ScheduleLambdaFunctionDecisionAttributes.
        :param start_to_close_timeout: The start_to_close_timeout of this ScheduleLambdaFunctionDecisionAttributes.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'control': str,
            'input': str,
            'start_to_close_timeout': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'control': 'control',
            'input': 'input',
            'start_to_close_timeout': 'startToCloseTimeout'
        }

        self._id = id
        self._name = name
        self._control = control
        self._input = input
        self._start_to_close_timeout = start_to_close_timeout

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduleLambdaFunctionDecisionAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScheduleLambdaFunctionDecisionAttributes of this ScheduleLambdaFunctionDecisionAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ScheduleLambdaFunctionDecisionAttributes.


        :return: The id of this ScheduleLambdaFunctionDecisionAttributes.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ScheduleLambdaFunctionDecisionAttributes.


        :param id: The id of this ScheduleLambdaFunctionDecisionAttributes.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def name(self):
        """Gets the name of this ScheduleLambdaFunctionDecisionAttributes.


        :return: The name of this ScheduleLambdaFunctionDecisionAttributes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ScheduleLambdaFunctionDecisionAttributes.


        :param name: The name of this ScheduleLambdaFunctionDecisionAttributes.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def control(self):
        """Gets the control of this ScheduleLambdaFunctionDecisionAttributes.


        :return: The control of this ScheduleLambdaFunctionDecisionAttributes.
        :rtype: str
        """
        return self._control

    @control.setter
    def control(self, control):
        """Sets the control of this ScheduleLambdaFunctionDecisionAttributes.


        :param control: The control of this ScheduleLambdaFunctionDecisionAttributes.
        :type control: str
        """

        self._control = control

    @property
    def input(self):
        """Gets the input of this ScheduleLambdaFunctionDecisionAttributes.


        :return: The input of this ScheduleLambdaFunctionDecisionAttributes.
        :rtype: str
        """
        return self._input

    @input.setter
    def input(self, input):
        """Sets the input of this ScheduleLambdaFunctionDecisionAttributes.


        :param input: The input of this ScheduleLambdaFunctionDecisionAttributes.
        :type input: str
        """

        self._input = input

    @property
    def start_to_close_timeout(self):
        """Gets the start_to_close_timeout of this ScheduleLambdaFunctionDecisionAttributes.


        :return: The start_to_close_timeout of this ScheduleLambdaFunctionDecisionAttributes.
        :rtype: str
        """
        return self._start_to_close_timeout

    @start_to_close_timeout.setter
    def start_to_close_timeout(self, start_to_close_timeout):
        """Sets the start_to_close_timeout of this ScheduleLambdaFunctionDecisionAttributes.


        :param start_to_close_timeout: The start_to_close_timeout of this ScheduleLambdaFunctionDecisionAttributes.
        :type start_to_close_timeout: str
        """

        self._start_to_close_timeout = start_to_close_timeout
