# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WorkflowExecutionInfos(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, execution_infos: List=None, next_page_token: str=None):
        """WorkflowExecutionInfos - a model defined in OpenAPI

        :param execution_infos: The execution_infos of this WorkflowExecutionInfos.
        :param next_page_token: The next_page_token of this WorkflowExecutionInfos.
        """
        self.openapi_types = {
            'execution_infos': List,
            'next_page_token': str
        }

        self.attribute_map = {
            'execution_infos': 'executionInfos',
            'next_page_token': 'nextPageToken'
        }

        self._execution_infos = execution_infos
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkflowExecutionInfos':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkflowExecutionInfos of this WorkflowExecutionInfos.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def execution_infos(self):
        """Gets the execution_infos of this WorkflowExecutionInfos.


        :return: The execution_infos of this WorkflowExecutionInfos.
        :rtype: List
        """
        return self._execution_infos

    @execution_infos.setter
    def execution_infos(self, execution_infos):
        """Sets the execution_infos of this WorkflowExecutionInfos.


        :param execution_infos: The execution_infos of this WorkflowExecutionInfos.
        :type execution_infos: List
        """
        if execution_infos is None:
            raise ValueError("Invalid value for `execution_infos`, must not be `None`")

        self._execution_infos = execution_infos

    @property
    def next_page_token(self):
        """Gets the next_page_token of this WorkflowExecutionInfos.


        :return: The next_page_token of this WorkflowExecutionInfos.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this WorkflowExecutionInfos.


        :param next_page_token: The next_page_token of this WorkflowExecutionInfos.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
