# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActivityTaskCancelRequestedEventAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, decision_task_completed_event_id: int=None, activity_id: str=None):
        """ActivityTaskCancelRequestedEventAttributes - a model defined in OpenAPI

        :param decision_task_completed_event_id: The decision_task_completed_event_id of this ActivityTaskCancelRequestedEventAttributes.
        :param activity_id: The activity_id of this ActivityTaskCancelRequestedEventAttributes.
        """
        self.openapi_types = {
            'decision_task_completed_event_id': int,
            'activity_id': str
        }

        self.attribute_map = {
            'decision_task_completed_event_id': 'decisionTaskCompletedEventId',
            'activity_id': 'activityId'
        }

        self._decision_task_completed_event_id = decision_task_completed_event_id
        self._activity_id = activity_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityTaskCancelRequestedEventAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivityTaskCancelRequestedEventAttributes of this ActivityTaskCancelRequestedEventAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def decision_task_completed_event_id(self):
        """Gets the decision_task_completed_event_id of this ActivityTaskCancelRequestedEventAttributes.


        :return: The decision_task_completed_event_id of this ActivityTaskCancelRequestedEventAttributes.
        :rtype: int
        """
        return self._decision_task_completed_event_id

    @decision_task_completed_event_id.setter
    def decision_task_completed_event_id(self, decision_task_completed_event_id):
        """Sets the decision_task_completed_event_id of this ActivityTaskCancelRequestedEventAttributes.


        :param decision_task_completed_event_id: The decision_task_completed_event_id of this ActivityTaskCancelRequestedEventAttributes.
        :type decision_task_completed_event_id: int
        """
        if decision_task_completed_event_id is None:
            raise ValueError("Invalid value for `decision_task_completed_event_id`, must not be `None`")

        self._decision_task_completed_event_id = decision_task_completed_event_id

    @property
    def activity_id(self):
        """Gets the activity_id of this ActivityTaskCancelRequestedEventAttributes.


        :return: The activity_id of this ActivityTaskCancelRequestedEventAttributes.
        :rtype: str
        """
        return self._activity_id

    @activity_id.setter
    def activity_id(self, activity_id):
        """Sets the activity_id of this ActivityTaskCancelRequestedEventAttributes.


        :param activity_id: The activity_id of this ActivityTaskCancelRequestedEventAttributes.
        :type activity_id: str
        """
        if activity_id is None:
            raise ValueError("Invalid value for `activity_id`, must not be `None`")

        self._activity_id = activity_id
