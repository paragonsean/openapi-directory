# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LambdaFunctionCompletedEventAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scheduled_event_id: int=None, started_event_id: int=None, result: str=None):
        """LambdaFunctionCompletedEventAttributes - a model defined in OpenAPI

        :param scheduled_event_id: The scheduled_event_id of this LambdaFunctionCompletedEventAttributes.
        :param started_event_id: The started_event_id of this LambdaFunctionCompletedEventAttributes.
        :param result: The result of this LambdaFunctionCompletedEventAttributes.
        """
        self.openapi_types = {
            'scheduled_event_id': int,
            'started_event_id': int,
            'result': str
        }

        self.attribute_map = {
            'scheduled_event_id': 'scheduledEventId',
            'started_event_id': 'startedEventId',
            'result': 'result'
        }

        self._scheduled_event_id = scheduled_event_id
        self._started_event_id = started_event_id
        self._result = result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LambdaFunctionCompletedEventAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LambdaFunctionCompletedEventAttributes of this LambdaFunctionCompletedEventAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scheduled_event_id(self):
        """Gets the scheduled_event_id of this LambdaFunctionCompletedEventAttributes.


        :return: The scheduled_event_id of this LambdaFunctionCompletedEventAttributes.
        :rtype: int
        """
        return self._scheduled_event_id

    @scheduled_event_id.setter
    def scheduled_event_id(self, scheduled_event_id):
        """Sets the scheduled_event_id of this LambdaFunctionCompletedEventAttributes.


        :param scheduled_event_id: The scheduled_event_id of this LambdaFunctionCompletedEventAttributes.
        :type scheduled_event_id: int
        """
        if scheduled_event_id is None:
            raise ValueError("Invalid value for `scheduled_event_id`, must not be `None`")

        self._scheduled_event_id = scheduled_event_id

    @property
    def started_event_id(self):
        """Gets the started_event_id of this LambdaFunctionCompletedEventAttributes.


        :return: The started_event_id of this LambdaFunctionCompletedEventAttributes.
        :rtype: int
        """
        return self._started_event_id

    @started_event_id.setter
    def started_event_id(self, started_event_id):
        """Sets the started_event_id of this LambdaFunctionCompletedEventAttributes.


        :param started_event_id: The started_event_id of this LambdaFunctionCompletedEventAttributes.
        :type started_event_id: int
        """
        if started_event_id is None:
            raise ValueError("Invalid value for `started_event_id`, must not be `None`")

        self._started_event_id = started_event_id

    @property
    def result(self):
        """Gets the result of this LambdaFunctionCompletedEventAttributes.


        :return: The result of this LambdaFunctionCompletedEventAttributes.
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this LambdaFunctionCompletedEventAttributes.


        :param result: The result of this LambdaFunctionCompletedEventAttributes.
        :type result: str
        """

        self._result = result
