# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_workflow_execution_history_input_execution import GetWorkflowExecutionHistoryInputExecution
from openapi_server import util


class GetWorkflowExecutionHistoryInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: str=None, execution: GetWorkflowExecutionHistoryInputExecution=None, next_page_token: str=None, maximum_page_size: int=None, reverse_order: bool=None):
        """GetWorkflowExecutionHistoryInput - a model defined in OpenAPI

        :param domain: The domain of this GetWorkflowExecutionHistoryInput.
        :param execution: The execution of this GetWorkflowExecutionHistoryInput.
        :param next_page_token: The next_page_token of this GetWorkflowExecutionHistoryInput.
        :param maximum_page_size: The maximum_page_size of this GetWorkflowExecutionHistoryInput.
        :param reverse_order: The reverse_order of this GetWorkflowExecutionHistoryInput.
        """
        self.openapi_types = {
            'domain': str,
            'execution': GetWorkflowExecutionHistoryInputExecution,
            'next_page_token': str,
            'maximum_page_size': int,
            'reverse_order': bool
        }

        self.attribute_map = {
            'domain': 'domain',
            'execution': 'execution',
            'next_page_token': 'nextPageToken',
            'maximum_page_size': 'maximumPageSize',
            'reverse_order': 'reverseOrder'
        }

        self._domain = domain
        self._execution = execution
        self._next_page_token = next_page_token
        self._maximum_page_size = maximum_page_size
        self._reverse_order = reverse_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetWorkflowExecutionHistoryInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetWorkflowExecutionHistoryInput of this GetWorkflowExecutionHistoryInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this GetWorkflowExecutionHistoryInput.


        :return: The domain of this GetWorkflowExecutionHistoryInput.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this GetWorkflowExecutionHistoryInput.


        :param domain: The domain of this GetWorkflowExecutionHistoryInput.
        :type domain: str
        """
        if domain is None:
            raise ValueError("Invalid value for `domain`, must not be `None`")

        self._domain = domain

    @property
    def execution(self):
        """Gets the execution of this GetWorkflowExecutionHistoryInput.


        :return: The execution of this GetWorkflowExecutionHistoryInput.
        :rtype: GetWorkflowExecutionHistoryInputExecution
        """
        return self._execution

    @execution.setter
    def execution(self, execution):
        """Sets the execution of this GetWorkflowExecutionHistoryInput.


        :param execution: The execution of this GetWorkflowExecutionHistoryInput.
        :type execution: GetWorkflowExecutionHistoryInputExecution
        """
        if execution is None:
            raise ValueError("Invalid value for `execution`, must not be `None`")

        self._execution = execution

    @property
    def next_page_token(self):
        """Gets the next_page_token of this GetWorkflowExecutionHistoryInput.


        :return: The next_page_token of this GetWorkflowExecutionHistoryInput.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this GetWorkflowExecutionHistoryInput.


        :param next_page_token: The next_page_token of this GetWorkflowExecutionHistoryInput.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def maximum_page_size(self):
        """Gets the maximum_page_size of this GetWorkflowExecutionHistoryInput.


        :return: The maximum_page_size of this GetWorkflowExecutionHistoryInput.
        :rtype: int
        """
        return self._maximum_page_size

    @maximum_page_size.setter
    def maximum_page_size(self, maximum_page_size):
        """Sets the maximum_page_size of this GetWorkflowExecutionHistoryInput.


        :param maximum_page_size: The maximum_page_size of this GetWorkflowExecutionHistoryInput.
        :type maximum_page_size: int
        """

        self._maximum_page_size = maximum_page_size

    @property
    def reverse_order(self):
        """Gets the reverse_order of this GetWorkflowExecutionHistoryInput.


        :return: The reverse_order of this GetWorkflowExecutionHistoryInput.
        :rtype: bool
        """
        return self._reverse_order

    @reverse_order.setter
    def reverse_order(self, reverse_order):
        """Sets the reverse_order of this GetWorkflowExecutionHistoryInput.


        :param reverse_order: The reverse_order of this GetWorkflowExecutionHistoryInput.
        :type reverse_order: bool
        """

        self._reverse_order = reverse_order
