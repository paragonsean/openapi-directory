# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HistoryEventWorkflowExecutionFailedEventAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reason: str=None, details: str=None, decision_task_completed_event_id: int=None):
        """HistoryEventWorkflowExecutionFailedEventAttributes - a model defined in OpenAPI

        :param reason: The reason of this HistoryEventWorkflowExecutionFailedEventAttributes.
        :param details: The details of this HistoryEventWorkflowExecutionFailedEventAttributes.
        :param decision_task_completed_event_id: The decision_task_completed_event_id of this HistoryEventWorkflowExecutionFailedEventAttributes.
        """
        self.openapi_types = {
            'reason': str,
            'details': str,
            'decision_task_completed_event_id': int
        }

        self.attribute_map = {
            'reason': 'reason',
            'details': 'details',
            'decision_task_completed_event_id': 'decisionTaskCompletedEventId'
        }

        self._reason = reason
        self._details = details
        self._decision_task_completed_event_id = decision_task_completed_event_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HistoryEventWorkflowExecutionFailedEventAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HistoryEvent_workflowExecutionFailedEventAttributes of this HistoryEventWorkflowExecutionFailedEventAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reason(self):
        """Gets the reason of this HistoryEventWorkflowExecutionFailedEventAttributes.


        :return: The reason of this HistoryEventWorkflowExecutionFailedEventAttributes.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this HistoryEventWorkflowExecutionFailedEventAttributes.


        :param reason: The reason of this HistoryEventWorkflowExecutionFailedEventAttributes.
        :type reason: str
        """

        self._reason = reason

    @property
    def details(self):
        """Gets the details of this HistoryEventWorkflowExecutionFailedEventAttributes.


        :return: The details of this HistoryEventWorkflowExecutionFailedEventAttributes.
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this HistoryEventWorkflowExecutionFailedEventAttributes.


        :param details: The details of this HistoryEventWorkflowExecutionFailedEventAttributes.
        :type details: str
        """

        self._details = details

    @property
    def decision_task_completed_event_id(self):
        """Gets the decision_task_completed_event_id of this HistoryEventWorkflowExecutionFailedEventAttributes.


        :return: The decision_task_completed_event_id of this HistoryEventWorkflowExecutionFailedEventAttributes.
        :rtype: int
        """
        return self._decision_task_completed_event_id

    @decision_task_completed_event_id.setter
    def decision_task_completed_event_id(self, decision_task_completed_event_id):
        """Sets the decision_task_completed_event_id of this HistoryEventWorkflowExecutionFailedEventAttributes.


        :param decision_task_completed_event_id: The decision_task_completed_event_id of this HistoryEventWorkflowExecutionFailedEventAttributes.
        :type decision_task_completed_event_id: int
        """
        if decision_task_completed_event_id is None:
            raise ValueError("Invalid value for `decision_task_completed_event_id`, must not be `None`")

        self._decision_task_completed_event_id = decision_task_completed_event_id
