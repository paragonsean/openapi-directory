# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CountClosedWorkflowExecutionsInputStartTimeFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, oldest_date: datetime=None, latest_date: datetime=None):
        """CountClosedWorkflowExecutionsInputStartTimeFilter - a model defined in OpenAPI

        :param oldest_date: The oldest_date of this CountClosedWorkflowExecutionsInputStartTimeFilter.
        :param latest_date: The latest_date of this CountClosedWorkflowExecutionsInputStartTimeFilter.
        """
        self.openapi_types = {
            'oldest_date': datetime,
            'latest_date': datetime
        }

        self.attribute_map = {
            'oldest_date': 'oldestDate',
            'latest_date': 'latestDate'
        }

        self._oldest_date = oldest_date
        self._latest_date = latest_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CountClosedWorkflowExecutionsInputStartTimeFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CountClosedWorkflowExecutionsInput_startTimeFilter of this CountClosedWorkflowExecutionsInputStartTimeFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def oldest_date(self):
        """Gets the oldest_date of this CountClosedWorkflowExecutionsInputStartTimeFilter.


        :return: The oldest_date of this CountClosedWorkflowExecutionsInputStartTimeFilter.
        :rtype: datetime
        """
        return self._oldest_date

    @oldest_date.setter
    def oldest_date(self, oldest_date):
        """Sets the oldest_date of this CountClosedWorkflowExecutionsInputStartTimeFilter.


        :param oldest_date: The oldest_date of this CountClosedWorkflowExecutionsInputStartTimeFilter.
        :type oldest_date: datetime
        """
        if oldest_date is None:
            raise ValueError("Invalid value for `oldest_date`, must not be `None`")

        self._oldest_date = oldest_date

    @property
    def latest_date(self):
        """Gets the latest_date of this CountClosedWorkflowExecutionsInputStartTimeFilter.


        :return: The latest_date of this CountClosedWorkflowExecutionsInputStartTimeFilter.
        :rtype: datetime
        """
        return self._latest_date

    @latest_date.setter
    def latest_date(self, latest_date):
        """Sets the latest_date of this CountClosedWorkflowExecutionsInputStartTimeFilter.


        :param latest_date: The latest_date of this CountClosedWorkflowExecutionsInputStartTimeFilter.
        :type latest_date: datetime
        """

        self._latest_date = latest_date
