openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon\
    \ Simple Workflow Service (Amazon SWF) makes it easy to build applications that\
    \ use Amazon's cloud to coordinate work across distributed components. In Amazon\
    \ SWF, a <i>task</i> represents a logical unit of work that is performed by a\
    \ component of your workflow. Coordinating tasks in a workflow involves managing\
    \ intertask dependencies, scheduling, and concurrency in accordance with the logical\
    \ flow of the application.</p> <p>Amazon SWF gives you full control over implementing\
    \ tasks and coordinating them without worrying about underlying complexities such\
    \ as tracking their progress and maintaining their state.</p> <p>This documentation\
    \ serves as reference only. For a broader overview of the Amazon SWF programming\
    \ model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\"\
    >Amazon SWF Developer Guide</a> </i>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Simple Workflow Service
  version: 2012-01-25
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: swf
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/swf-2012-01-25.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/swf/
servers:
- description: The Amazon SWF multi-region endpoint
  url: "http://swf.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon SWF multi-region endpoint
  url: "https://swf.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon SWF endpoint for China (Beijing) and China (Ningxia)
  url: "http://swf.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon SWF endpoint for China (Beijing) and China (Ningxia)
  url: "https://swf.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=SimpleWorkflowService.CountClosedWorkflowExecutions:
    post:
      description: "<p>Returns the number of closed workflow executions within the\
        \ given domain that meet the specified filtering criteria.</p> <note> <p>This\
        \ operation is eventually consistent. The results are best effort and may\
        \ not exactly reflect recent updates and changes.</p> </note> <p> <b>Access\
        \ Control</b> </p> <p>You can use IAM policies to control this action's access\
        \ to Amazon SWF resources as follows:</p> <ul> <li> <p>Use a <code>Resource</code>\
        \ element with the domain name to limit the action to only specified domains.</p>\
        \ </li> <li> <p>Use an <code>Action</code> element to allow or deny permission\
        \ to call this action.</p> </li> <li> <p>Constrain the following parameters\
        \ by using a <code>Condition</code> element with the appropriate keys.</p>\
        \ <ul> <li> <p> <code>tagFilter.tag</code>: String constraint. The key is\
        \ <code>swf:tagFilter.tag</code>.</p> </li> <li> <p> <code>typeFilter.name</code>:\
        \ String constraint. The key is <code>swf:typeFilter.name</code>.</p> </li>\
        \ <li> <p> <code>typeFilter.version</code>: String constraint. The key is\
        \ <code>swf:typeFilter.version</code>.</p> </li> </ul> </li> </ul> <p>If the\
        \ caller doesn't have sufficient permissions to invoke the action, or the\
        \ parameter values fall outside the specified constraints, the action fails.\
        \ The associated event attribute's <code>cause</code> parameter is set to\
        \ <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM policies,\
        \ see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: count_closed_workflow_executions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.CountClosedWorkflowExecutions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountClosedWorkflowExecutionsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionCount'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.CountOpenWorkflowExecutions:
    post:
      description: "<p>Returns the number of open workflow executions within the given\
        \ domain that meet the specified filtering criteria.</p> <note> <p>This operation\
        \ is eventually consistent. The results are best effort and may not exactly\
        \ reflect recent updates and changes.</p> </note> <p> <b>Access Control</b>\
        \ </p> <p>You can use IAM policies to control this action's access to Amazon\
        \ SWF resources as follows:</p> <ul> <li> <p>Use a <code>Resource</code> element\
        \ with the domain name to limit the action to only specified domains.</p>\
        \ </li> <li> <p>Use an <code>Action</code> element to allow or deny permission\
        \ to call this action.</p> </li> <li> <p>Constrain the following parameters\
        \ by using a <code>Condition</code> element with the appropriate keys.</p>\
        \ <ul> <li> <p> <code>tagFilter.tag</code>: String constraint. The key is\
        \ <code>swf:tagFilter.tag</code>.</p> </li> <li> <p> <code>typeFilter.name</code>:\
        \ String constraint. The key is <code>swf:typeFilter.name</code>.</p> </li>\
        \ <li> <p> <code>typeFilter.version</code>: String constraint. The key is\
        \ <code>swf:typeFilter.version</code>.</p> </li> </ul> </li> </ul> <p>If the\
        \ caller doesn't have sufficient permissions to invoke the action, or the\
        \ parameter values fall outside the specified constraints, the action fails.\
        \ The associated event attribute's <code>cause</code> parameter is set to\
        \ <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM policies,\
        \ see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: count_open_workflow_executions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.CountOpenWorkflowExecutions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountOpenWorkflowExecutionsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionCount'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.CountPendingActivityTasks:
    post:
      description: "<p>Returns the estimated number of activity tasks in the specified\
        \ task list. The count returned is an approximation and isn't guaranteed to\
        \ be exact. If you specify a task list that no activity task was ever scheduled\
        \ in then <code>0</code> is returned.</p> <p> <b>Access Control</b> </p> <p>You\
        \ can use IAM policies to control this action's access to Amazon SWF resources\
        \ as follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the\
        \ domain name to limit the action to only specified domains.</p> </li> <li>\
        \ <p>Use an <code>Action</code> element to allow or deny permission to call\
        \ this action.</p> </li> <li> <p>Constrain the <code>taskList.name</code>\
        \ parameter by using a <code>Condition</code> element with the <code>swf:taskList.name</code>\
        \ key to allow the action to access only certain task lists.</p> </li> </ul>\
        \ <p>If the caller doesn't have sufficient permissions to invoke the action,\
        \ or the parameter values fall outside the specified constraints, the action\
        \ fails. The associated event attribute's <code>cause</code> parameter is\
        \ set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM\
        \ policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: count_pending_activity_tasks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.CountPendingActivityTasks
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountPendingActivityTasksInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingTaskCount'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.CountPendingDecisionTasks:
    post:
      description: "<p>Returns the estimated number of decision tasks in the specified\
        \ task list. The count returned is an approximation and isn't guaranteed to\
        \ be exact. If you specify a task list that no decision task was ever scheduled\
        \ in then <code>0</code> is returned.</p> <p> <b>Access Control</b> </p> <p>You\
        \ can use IAM policies to control this action's access to Amazon SWF resources\
        \ as follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the\
        \ domain name to limit the action to only specified domains.</p> </li> <li>\
        \ <p>Use an <code>Action</code> element to allow or deny permission to call\
        \ this action.</p> </li> <li> <p>Constrain the <code>taskList.name</code>\
        \ parameter by using a <code>Condition</code> element with the <code>swf:taskList.name</code>\
        \ key to allow the action to access only certain task lists.</p> </li> </ul>\
        \ <p>If the caller doesn't have sufficient permissions to invoke the action,\
        \ or the parameter values fall outside the specified constraints, the action\
        \ fails. The associated event attribute's <code>cause</code> parameter is\
        \ set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM\
        \ policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: count_pending_decision_tasks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.CountPendingDecisionTasks
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountPendingDecisionTasksInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingTaskCount'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.DeprecateActivityType:
    post:
      description: "<p>Deprecates the specified <i>activity type</i>. After an activity\
        \ type has been deprecated, you cannot create new tasks of that activity type.\
        \ Tasks of this type that were scheduled before the type was deprecated continue\
        \ to run.</p> <note> <p>This operation is eventually consistent. The results\
        \ are best effort and may not exactly reflect recent updates and changes.</p>\
        \ </note> <p> <b>Access Control</b> </p> <p>You can use IAM policies to control\
        \ this action's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use\
        \ a <code>Resource</code> element with the domain name to limit the action\
        \ to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>Constrain the following parameters by using a <code>Condition</code>\
        \ element with the appropriate keys.</p> <ul> <li> <p> <code>activityType.name</code>:\
        \ String constraint. The key is <code>swf:activityType.name</code>.</p> </li>\
        \ <li> <p> <code>activityType.version</code>: String constraint. The key is\
        \ <code>swf:activityType.version</code>.</p> </li> </ul> </li> </ul> <p>If\
        \ the caller doesn't have sufficient permissions to invoke the action, or\
        \ the parameter values fall outside the specified constraints, the action\
        \ fails. The associated event attribute's <code>cause</code> parameter is\
        \ set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM\
        \ policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: deprecate_activity_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.DeprecateActivityType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeprecateActivityTypeInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDeprecatedFault'
          description: TypeDeprecatedFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.DeprecateDomain:
    post:
      description: "<p>Deprecates the specified domain. After a domain has been deprecated\
        \ it cannot be used to create new workflow executions or register new types.\
        \ However, you can still use visibility actions on this domain. Deprecating\
        \ a domain also deprecates all activity and workflow types registered in the\
        \ domain. Executions that were started before the domain was deprecated continues\
        \ to run.</p> <note> <p>This operation is eventually consistent. The results\
        \ are best effort and may not exactly reflect recent updates and changes.</p>\
        \ </note> <p> <b>Access Control</b> </p> <p>You can use IAM policies to control\
        \ this action's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use\
        \ a <code>Resource</code> element with the domain name to limit the action\
        \ to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: deprecate_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.DeprecateDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeprecateDomainInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainDeprecatedFault'
          description: DomainDeprecatedFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.DeprecateWorkflowType:
    post:
      description: "<p>Deprecates the specified <i>workflow type</i>. After a workflow\
        \ type has been deprecated, you cannot create new executions of that type.\
        \ Executions that were started before the type was deprecated continues to\
        \ run. A deprecated workflow type may still be used when calling visibility\
        \ actions.</p> <note> <p>This operation is eventually consistent. The results\
        \ are best effort and may not exactly reflect recent updates and changes.</p>\
        \ </note> <p> <b>Access Control</b> </p> <p>You can use IAM policies to control\
        \ this action's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use\
        \ a <code>Resource</code> element with the domain name to limit the action\
        \ to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>Constrain the following parameters by using a <code>Condition</code>\
        \ element with the appropriate keys.</p> <ul> <li> <p> <code>workflowType.name</code>:\
        \ String constraint. The key is <code>swf:workflowType.name</code>.</p> </li>\
        \ <li> <p> <code>workflowType.version</code>: String constraint. The key is\
        \ <code>swf:workflowType.version</code>.</p> </li> </ul> </li> </ul> <p>If\
        \ the caller doesn't have sufficient permissions to invoke the action, or\
        \ the parameter values fall outside the specified constraints, the action\
        \ fails. The associated event attribute's <code>cause</code> parameter is\
        \ set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM\
        \ policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: deprecate_workflow_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.DeprecateWorkflowType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeprecateWorkflowTypeInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDeprecatedFault'
          description: TypeDeprecatedFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.DescribeActivityType:
    post:
      description: "<p>Returns information about the specified activity type. This\
        \ includes configuration settings provided when the type was registered and\
        \ other general information about the type.</p> <p> <b>Access Control</b>\
        \ </p> <p>You can use IAM policies to control this action's access to Amazon\
        \ SWF resources as follows:</p> <ul> <li> <p>Use a <code>Resource</code> element\
        \ with the domain name to limit the action to only specified domains.</p>\
        \ </li> <li> <p>Use an <code>Action</code> element to allow or deny permission\
        \ to call this action.</p> </li> <li> <p>Constrain the following parameters\
        \ by using a <code>Condition</code> element with the appropriate keys.</p>\
        \ <ul> <li> <p> <code>activityType.name</code>: String constraint. The key\
        \ is <code>swf:activityType.name</code>.</p> </li> <li> <p> <code>activityType.version</code>:\
        \ String constraint. The key is <code>swf:activityType.version</code>.</p>\
        \ </li> </ul> </li> </ul> <p>If the caller doesn't have sufficient permissions\
        \ to invoke the action, or the parameter values fall outside the specified\
        \ constraints, the action fails. The associated event attribute's <code>cause</code>\
        \ parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details and\
        \ example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: describe_activity_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.DescribeActivityType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeActivityTypeInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTypeDetail'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.DescribeDomain:
    post:
      description: "<p>Returns information about the specified domain, including description\
        \ and status.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies\
        \ to control this action's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: describe_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.DescribeDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDomainInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainDetail'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.DescribeWorkflowExecution:
    post:
      description: "<p>Returns information about the specified workflow execution\
        \ including its type and some statistics.</p> <note> <p>This operation is\
        \ eventually consistent. The results are best effort and may not exactly reflect\
        \ recent updates and changes.</p> </note> <p> <b>Access Control</b> </p> <p>You\
        \ can use IAM policies to control this action's access to Amazon SWF resources\
        \ as follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the\
        \ domain name to limit the action to only specified domains.</p> </li> <li>\
        \ <p>Use an <code>Action</code> element to allow or deny permission to call\
        \ this action.</p> </li> <li> <p>You cannot use an IAM policy to constrain\
        \ this action's parameters.</p> </li> </ul> <p>If the caller doesn't have\
        \ sufficient permissions to invoke the action, or the parameter values fall\
        \ outside the specified constraints, the action fails. The associated event\
        \ attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.\
        \ For details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: describe_workflow_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.DescribeWorkflowExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorkflowExecutionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionDetail'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.DescribeWorkflowType:
    post:
      description: "<p>Returns information about the specified <i>workflow type</i>.\
        \ This includes configuration settings specified when the type was registered\
        \ and other information such as creation date, current status, etc.</p> <p>\
        \ <b>Access Control</b> </p> <p>You can use IAM policies to control this action's\
        \ access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use a <code>Resource</code>\
        \ element with the domain name to limit the action to only specified domains.</p>\
        \ </li> <li> <p>Use an <code>Action</code> element to allow or deny permission\
        \ to call this action.</p> </li> <li> <p>Constrain the following parameters\
        \ by using a <code>Condition</code> element with the appropriate keys.</p>\
        \ <ul> <li> <p> <code>workflowType.name</code>: String constraint. The key\
        \ is <code>swf:workflowType.name</code>.</p> </li> <li> <p> <code>workflowType.version</code>:\
        \ String constraint. The key is <code>swf:workflowType.version</code>.</p>\
        \ </li> </ul> </li> </ul> <p>If the caller doesn't have sufficient permissions\
        \ to invoke the action, or the parameter values fall outside the specified\
        \ constraints, the action fails. The associated event attribute's <code>cause</code>\
        \ parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details and\
        \ example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: describe_workflow_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.DescribeWorkflowType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorkflowTypeInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTypeDetail'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.GetWorkflowExecutionHistory:
    post:
      description: "<p>Returns the history of the specified workflow execution. The\
        \ results may be split into multiple pages. To retrieve subsequent pages,\
        \ make the call again using the <code>nextPageToken</code> returned by the\
        \ initial call.</p> <note> <p>This operation is eventually consistent. The\
        \ results are best effort and may not exactly reflect recent updates and changes.</p>\
        \ </note> <p> <b>Access Control</b> </p> <p>You can use IAM policies to control\
        \ this action's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use\
        \ a <code>Resource</code> element with the domain name to limit the action\
        \ to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: get_workflow_execution_history
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maximumPageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.GetWorkflowExecutionHistory
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWorkflowExecutionHistoryInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.ListActivityTypes:
    post:
      description: "<p>Returns information about all activities registered in the\
        \ specified domain that match the specified name and registration status.\
        \ The result includes information like creation date, current status of the\
        \ activity, etc. The results may be split into multiple pages. To retrieve\
        \ subsequent pages, make the call again using the <code>nextPageToken</code>\
        \ returned by the initial call.</p> <p> <b>Access Control</b> </p> <p>You\
        \ can use IAM policies to control this action's access to Amazon SWF resources\
        \ as follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the\
        \ domain name to limit the action to only specified domains.</p> </li> <li>\
        \ <p>Use an <code>Action</code> element to allow or deny permission to call\
        \ this action.</p> </li> <li> <p>You cannot use an IAM policy to constrain\
        \ this action's parameters.</p> </li> </ul> <p>If the caller doesn't have\
        \ sufficient permissions to invoke the action, or the parameter values fall\
        \ outside the specified constraints, the action fails. The associated event\
        \ attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.\
        \ For details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: list_activity_types
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maximumPageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.ListActivityTypes
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListActivityTypesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTypeInfos'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.ListClosedWorkflowExecutions:
    post:
      description: "<p>Returns a list of closed workflow executions in the specified\
        \ domain that meet the filtering criteria. The results may be split into multiple\
        \ pages. To retrieve subsequent pages, make the call again using the nextPageToken\
        \ returned by the initial call.</p> <note> <p>This operation is eventually\
        \ consistent. The results are best effort and may not exactly reflect recent\
        \ updates and changes.</p> </note> <p> <b>Access Control</b> </p> <p>You can\
        \ use IAM policies to control this action's access to Amazon SWF resources\
        \ as follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the\
        \ domain name to limit the action to only specified domains.</p> </li> <li>\
        \ <p>Use an <code>Action</code> element to allow or deny permission to call\
        \ this action.</p> </li> <li> <p>Constrain the following parameters by using\
        \ a <code>Condition</code> element with the appropriate keys.</p> <ul> <li>\
        \ <p> <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.</p>\
        \ </li> <li> <p> <code>typeFilter.name</code>: String constraint. The key\
        \ is <code>swf:typeFilter.name</code>.</p> </li> <li> <p> <code>typeFilter.version</code>:\
        \ String constraint. The key is <code>swf:typeFilter.version</code>.</p> </li>\
        \ </ul> </li> </ul> <p>If the caller doesn't have sufficient permissions to\
        \ invoke the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: list_closed_workflow_executions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maximumPageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.ListClosedWorkflowExecutions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListClosedWorkflowExecutionsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionInfos'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.ListDomains:
    post:
      description: "<p>Returns the list of domains registered in the account. The\
        \ results may be split into multiple pages. To retrieve subsequent pages,\
        \ make the call again using the nextPageToken returned by the initial call.</p>\
        \ <note> <p>This operation is eventually consistent. The results are best\
        \ effort and may not exactly reflect recent updates and changes.</p> </note>\
        \ <p> <b>Access Control</b> </p> <p>You can use IAM policies to control this\
        \ action's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use\
        \ a <code>Resource</code> element with the domain name to limit the action\
        \ to only specified domains. The element must be set to <code>arn:aws:swf::AccountID:domain/*</code>,\
        \ where <i>AccountID</i> is the account ID, with no dashes.</p> </li> <li>\
        \ <p>Use an <code>Action</code> element to allow or deny permission to call\
        \ this action.</p> </li> <li> <p>You cannot use an IAM policy to constrain\
        \ this action's parameters.</p> </li> </ul> <p>If the caller doesn't have\
        \ sufficient permissions to invoke the action, or the parameter values fall\
        \ outside the specified constraints, the action fails. The associated event\
        \ attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.\
        \ For details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: list_domains
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maximumPageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.ListDomains
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDomainsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainInfos'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.ListOpenWorkflowExecutions:
    post:
      description: "<p>Returns a list of open workflow executions in the specified\
        \ domain that meet the filtering criteria. The results may be split into multiple\
        \ pages. To retrieve subsequent pages, make the call again using the nextPageToken\
        \ returned by the initial call.</p> <note> <p>This operation is eventually\
        \ consistent. The results are best effort and may not exactly reflect recent\
        \ updates and changes.</p> </note> <p> <b>Access Control</b> </p> <p>You can\
        \ use IAM policies to control this action's access to Amazon SWF resources\
        \ as follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the\
        \ domain name to limit the action to only specified domains.</p> </li> <li>\
        \ <p>Use an <code>Action</code> element to allow or deny permission to call\
        \ this action.</p> </li> <li> <p>Constrain the following parameters by using\
        \ a <code>Condition</code> element with the appropriate keys.</p> <ul> <li>\
        \ <p> <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.</p>\
        \ </li> <li> <p> <code>typeFilter.name</code>: String constraint. The key\
        \ is <code>swf:typeFilter.name</code>.</p> </li> <li> <p> <code>typeFilter.version</code>:\
        \ String constraint. The key is <code>swf:typeFilter.version</code>.</p> </li>\
        \ </ul> </li> </ul> <p>If the caller doesn't have sufficient permissions to\
        \ invoke the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: list_open_workflow_executions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maximumPageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.ListOpenWorkflowExecutions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOpenWorkflowExecutionsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionInfos'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.ListTagsForResource:
    post:
      description: List tags for a given domain.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
          description: LimitExceededFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.ListWorkflowTypes:
    post:
      description: "<p>Returns information about workflow types in the specified domain.\
        \ The results may be split into multiple pages that can be retrieved by making\
        \ the call repeatedly.</p> <p> <b>Access Control</b> </p> <p>You can use IAM\
        \ policies to control this action's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: list_workflow_types
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maximumPageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.ListWorkflowTypes
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorkflowTypesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTypeInfos'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.PollForActivityTask:
    post:
      description: "<p>Used by workers to get an <a>ActivityTask</a> from the specified\
        \ activity <code>taskList</code>. This initiates a long poll, where the service\
        \ holds the HTTP connection open and responds as soon as a task becomes available.\
        \ The maximum time the service holds on to the request before responding is\
        \ 60 seconds. If no task is available within 60 seconds, the poll returns\
        \ an empty result. An empty result, in this context, means that an ActivityTask\
        \ is returned, but that the value of taskToken is an empty string. If a task\
        \ is returned, the worker should use its type to identify and process it correctly.</p>\
        \ <important> <p>Workers should set their client side socket timeout to at\
        \ least 70 seconds (10 seconds higher than the maximum time service may hold\
        \ the poll request).</p> </important> <p> <b>Access Control</b> </p> <p>You\
        \ can use IAM policies to control this action's access to Amazon SWF resources\
        \ as follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the\
        \ domain name to limit the action to only specified domains.</p> </li> <li>\
        \ <p>Use an <code>Action</code> element to allow or deny permission to call\
        \ this action.</p> </li> <li> <p>Constrain the <code>taskList.name</code>\
        \ parameter by using a <code>Condition</code> element with the <code>swf:taskList.name</code>\
        \ key to allow the action to access only certain task lists.</p> </li> </ul>\
        \ <p>If the caller doesn't have sufficient permissions to invoke the action,\
        \ or the parameter values fall outside the specified constraints, the action\
        \ fails. The associated event attribute's <code>cause</code> parameter is\
        \ set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM\
        \ policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: poll_for_activity_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.PollForActivityTask
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollForActivityTaskInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTask'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
          description: LimitExceededFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.PollForDecisionTask:
    post:
      description: "<p>Used by deciders to get a <a>DecisionTask</a> from the specified\
        \ decision <code>taskList</code>. A decision task may be returned for any\
        \ open workflow execution that is using the specified task list. The task\
        \ includes a paginated view of the history of the workflow execution. The\
        \ decider should use the workflow type and the history to determine how to\
        \ properly handle the task.</p> <p>This action initiates a long poll, where\
        \ the service holds the HTTP connection open and responds as soon a task becomes\
        \ available. If no decision task is available in the specified task list before\
        \ the timeout of 60 seconds expires, an empty result is returned. An empty\
        \ result, in this context, means that a DecisionTask is returned, but that\
        \ the value of taskToken is an empty string.</p> <important> <p>Deciders should\
        \ set their client side socket timeout to at least 70 seconds (10 seconds\
        \ higher than the timeout).</p> </important> <important> <p>Because the number\
        \ of workflow history events for a single workflow execution might be very\
        \ large, the result returned might be split up across a number of pages. To\
        \ retrieve subsequent pages, make additional calls to <code>PollForDecisionTask</code>\
        \ using the <code>nextPageToken</code> returned by the initial call. Note\
        \ that you do <i>not</i> call <code>GetWorkflowExecutionHistory</code> with\
        \ this <code>nextPageToken</code>. Instead, call <code>PollForDecisionTask</code>\
        \ again.</p> </important> <p> <b>Access Control</b> </p> <p>You can use IAM\
        \ policies to control this action's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>\
        \ element with the <code>swf:taskList.name</code> key to allow the action\
        \ to access only certain task lists.</p> </li> </ul> <p>If the caller doesn't\
        \ have sufficient permissions to invoke the action, or the parameter values\
        \ fall outside the specified constraints, the action fails. The associated\
        \ event attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.\
        \ For details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: poll_for_decision_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maximumPageSize
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.PollForDecisionTask
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollForDecisionTaskInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecisionTask'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
          description: LimitExceededFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.RecordActivityTaskHeartbeat:
    post:
      description: "<p>Used by activity workers to report to the service that the\
        \ <a>ActivityTask</a> represented by the specified <code>taskToken</code>\
        \ is still making progress. The worker can also specify details of the progress,\
        \ for example percent complete, using the <code>details</code> parameter.\
        \ This action can also be used by the worker as a mechanism to check if cancellation\
        \ is being requested for the activity task. If a cancellation is being attempted\
        \ for the specified task, then the boolean <code>cancelRequested</code> flag\
        \ returned by the service is set to <code>true</code>.</p> <p>This action\
        \ resets the <code>taskHeartbeatTimeout</code> clock. The <code>taskHeartbeatTimeout</code>\
        \ is specified in <a>RegisterActivityType</a>.</p> <p>This action doesn't\
        \ in itself create an event in the workflow execution history. However, if\
        \ the task times out, the workflow execution history contains a <code>ActivityTaskTimedOut</code>\
        \ event that contains the information from the last heartbeat generated by\
        \ the activity worker.</p> <note> <p>The <code>taskStartToCloseTimeout</code>\
        \ of an activity type is the maximum duration of an activity task, regardless\
        \ of the number of <a>RecordActivityTaskHeartbeat</a> requests received. The\
        \ <code>taskStartToCloseTimeout</code> is also specified in <a>RegisterActivityType</a>.</p>\
        \ </note> <note> <p>This operation is only useful for long-lived activities\
        \ to report liveliness of the task and to determine if a cancellation is being\
        \ attempted.</p> </note> <important> <p>If the <code>cancelRequested</code>\
        \ flag returns <code>true</code>, a cancellation is being attempted. If the\
        \ worker can cancel the activity, it should respond with <a>RespondActivityTaskCanceled</a>.\
        \ Otherwise, it should ignore the cancellation request.</p> </important> <p>\
        \ <b>Access Control</b> </p> <p>You can use IAM policies to control this action's\
        \ access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use a <code>Resource</code>\
        \ element with the domain name to limit the action to only specified domains.</p>\
        \ </li> <li> <p>Use an <code>Action</code> element to allow or deny permission\
        \ to call this action.</p> </li> <li> <p>You cannot use an IAM policy to constrain\
        \ this action's parameters.</p> </li> </ul> <p>If the caller doesn't have\
        \ sufficient permissions to invoke the action, or the parameter values fall\
        \ outside the specified constraints, the action fails. The associated event\
        \ attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.\
        \ For details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: record_activity_task_heartbeat
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.RecordActivityTaskHeartbeat
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordActivityTaskHeartbeatInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTaskStatus'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.RegisterActivityType:
    post:
      description: "<p>Registers a new <i>activity type</i> along with its configuration\
        \ settings in the specified domain.</p> <important> <p>A <code>TypeAlreadyExists</code>\
        \ fault is returned if the type already exists in the domain. You cannot change\
        \ any configuration settings of the type after its registration, and it must\
        \ be registered as a new version.</p> </important> <p> <b>Access Control</b>\
        \ </p> <p>You can use IAM policies to control this action's access to Amazon\
        \ SWF resources as follows:</p> <ul> <li> <p>Use a <code>Resource</code> element\
        \ with the domain name to limit the action to only specified domains.</p>\
        \ </li> <li> <p>Use an <code>Action</code> element to allow or deny permission\
        \ to call this action.</p> </li> <li> <p>Constrain the following parameters\
        \ by using a <code>Condition</code> element with the appropriate keys.</p>\
        \ <ul> <li> <p> <code>defaultTaskList.name</code>: String constraint. The\
        \ key is <code>swf:defaultTaskList.name</code>.</p> </li> <li> <p> <code>name</code>:\
        \ String constraint. The key is <code>swf:name</code>.</p> </li> <li> <p>\
        \ <code>version</code>: String constraint. The key is <code>swf:version</code>.</p>\
        \ </li> </ul> </li> </ul> <p>If the caller doesn't have sufficient permissions\
        \ to invoke the action, or the parameter values fall outside the specified\
        \ constraints, the action fails. The associated event attribute's <code>cause</code>\
        \ parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details and\
        \ example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: register_activity_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.RegisterActivityType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterActivityTypeInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeAlreadyExistsFault'
          description: TypeAlreadyExistsFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
          description: LimitExceededFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.RegisterDomain:
    post:
      description: "<p>Registers a new domain.</p> <p> <b>Access Control</b> </p>\
        \ <p>You can use IAM policies to control this action's access to Amazon SWF\
        \ resources as follows:</p> <ul> <li> <p>You cannot use an IAM policy to control\
        \ domain access for this action. The name of the domain being registered is\
        \ available as the resource of this action.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: register_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.RegisterDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDomainInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainAlreadyExistsFault'
          description: DomainAlreadyExistsFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
          description: LimitExceededFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsFault'
          description: TooManyTagsFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.RegisterWorkflowType:
    post:
      description: "<p>Registers a new <i>workflow type</i> and its configuration\
        \ settings in the specified domain.</p> <p>The retention period for the workflow\
        \ history is set by the <a>RegisterDomain</a> action.</p> <important> <p>If\
        \ the type already exists, then a <code>TypeAlreadyExists</code> fault is\
        \ returned. You cannot change the configuration settings of a workflow type\
        \ once it is registered and it must be registered as a new version.</p> </important>\
        \ <p> <b>Access Control</b> </p> <p>You can use IAM policies to control this\
        \ action's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use\
        \ a <code>Resource</code> element with the domain name to limit the action\
        \ to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>Constrain the following parameters by using a <code>Condition</code>\
        \ element with the appropriate keys.</p> <ul> <li> <p> <code>defaultTaskList.name</code>:\
        \ String constraint. The key is <code>swf:defaultTaskList.name</code>.</p>\
        \ </li> <li> <p> <code>name</code>: String constraint. The key is <code>swf:name</code>.</p>\
        \ </li> <li> <p> <code>version</code>: String constraint. The key is <code>swf:version</code>.</p>\
        \ </li> </ul> </li> </ul> <p>If the caller doesn't have sufficient permissions\
        \ to invoke the action, or the parameter values fall outside the specified\
        \ constraints, the action fails. The associated event attribute's <code>cause</code>\
        \ parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details and\
        \ example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: register_workflow_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.RegisterWorkflowType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterWorkflowTypeInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeAlreadyExistsFault'
          description: TypeAlreadyExistsFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
          description: LimitExceededFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.RequestCancelWorkflowExecution:
    post:
      description: "<p>Records a <code>WorkflowExecutionCancelRequested</code> event\
        \ in the currently running workflow execution identified by the given domain,\
        \ workflowId, and runId. This logically requests the cancellation of the workflow\
        \ execution as a whole. It is up to the decider to take appropriate actions\
        \ when it receives an execution history with this event.</p> <note> <p>If\
        \ the runId isn't specified, the <code>WorkflowExecutionCancelRequested</code>\
        \ event is recorded in the history of the current open workflow execution\
        \ with the specified workflowId in the domain.</p> </note> <note> <p>Because\
        \ this action allows the workflow to properly clean up and gracefully close,\
        \ it should be used instead of <a>TerminateWorkflowExecution</a> when possible.</p>\
        \ </note> <p> <b>Access Control</b> </p> <p>You can use IAM policies to control\
        \ this action's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use\
        \ a <code>Resource</code> element with the domain name to limit the action\
        \ to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: request_cancel_workflow_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.RequestCancelWorkflowExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCancelWorkflowExecutionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.RespondActivityTaskCanceled:
    post:
      description: "<p>Used by workers to tell the service that the <a>ActivityTask</a>\
        \ identified by the <code>taskToken</code> was successfully canceled. Additional\
        \ <code>details</code> can be provided using the <code>details</code> argument.</p>\
        \ <p>These <code>details</code> (if provided) appear in the <code>ActivityTaskCanceled</code>\
        \ event added to the workflow history.</p> <important> <p>Only use this operation\
        \ if the <code>canceled</code> flag of a <a>RecordActivityTaskHeartbeat</a>\
        \ request returns <code>true</code> and if the activity can be safely undone\
        \ or abandoned.</p> </important> <p>A task is considered open from the time\
        \ that it is scheduled until it is closed. Therefore a task is reported as\
        \ open while a worker is processing it. A task is closed after it has been\
        \ specified in a call to <a>RespondActivityTaskCompleted</a>, RespondActivityTaskCanceled,\
        \ <a>RespondActivityTaskFailed</a>, or the task has <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types\"\
        >timed out</a>.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies\
        \ to control this action's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: respond_activity_task_canceled
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.RespondActivityTaskCanceled
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RespondActivityTaskCanceledInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.RespondActivityTaskCompleted:
    post:
      description: "<p>Used by workers to tell the service that the <a>ActivityTask</a>\
        \ identified by the <code>taskToken</code> completed successfully with a <code>result</code>\
        \ (if provided). The <code>result</code> appears in the <code>ActivityTaskCompleted</code>\
        \ event in the workflow history.</p> <important> <p>If the requested task\
        \ doesn't complete successfully, use <a>RespondActivityTaskFailed</a> instead.\
        \ If the worker finds that the task is canceled through the <code>canceled</code>\
        \ flag returned by <a>RecordActivityTaskHeartbeat</a>, it should cancel the\
        \ task, clean up and then call <a>RespondActivityTaskCanceled</a>.</p> </important>\
        \ <p>A task is considered open from the time that it is scheduled until it\
        \ is closed. Therefore a task is reported as open while a worker is processing\
        \ it. A task is closed after it has been specified in a call to RespondActivityTaskCompleted,\
        \ <a>RespondActivityTaskCanceled</a>, <a>RespondActivityTaskFailed</a>, or\
        \ the task has <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types\"\
        >timed out</a>.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies\
        \ to control this action's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: respond_activity_task_completed
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.RespondActivityTaskCompleted
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RespondActivityTaskCompletedInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.RespondActivityTaskFailed:
    post:
      description: "<p>Used by workers to tell the service that the <a>ActivityTask</a>\
        \ identified by the <code>taskToken</code> has failed with <code>reason</code>\
        \ (if specified). The <code>reason</code> and <code>details</code> appear\
        \ in the <code>ActivityTaskFailed</code> event added to the workflow history.</p>\
        \ <p>A task is considered open from the time that it is scheduled until it\
        \ is closed. Therefore a task is reported as open while a worker is processing\
        \ it. A task is closed after it has been specified in a call to <a>RespondActivityTaskCompleted</a>,\
        \ <a>RespondActivityTaskCanceled</a>, RespondActivityTaskFailed, or the task\
        \ has <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types\"\
        >timed out</a>.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies\
        \ to control this action's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: respond_activity_task_failed
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.RespondActivityTaskFailed
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RespondActivityTaskFailedInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.RespondDecisionTaskCompleted:
    post:
      description: "<p>Used by deciders to tell the service that the <a>DecisionTask</a>\
        \ identified by the <code>taskToken</code> has successfully completed. The\
        \ <code>decisions</code> argument specifies the list of decisions made while\
        \ processing the task.</p> <p>A <code>DecisionTaskCompleted</code> event is\
        \ added to the workflow history. The <code>executionContext</code> specified\
        \ is attached to the event in the workflow execution history.</p> <p> <b>Access\
        \ Control</b> </p> <p>If an IAM policy grants permission to use <code>RespondDecisionTaskCompleted</code>,\
        \ it can express permissions for the list of decisions in the <code>decisions</code>\
        \ parameter. Each of the decisions has one or more parameters, much like a\
        \ regular API call. To allow for policies to be as readable as possible, you\
        \ can express permissions on decisions as if they were actual API calls, including\
        \ applying conditions to some parameters. For more information, see <a href=\"\
        https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: respond_decision_task_completed
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.RespondDecisionTaskCompleted
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RespondDecisionTaskCompletedInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.SignalWorkflowExecution:
    post:
      description: "<p>Records a <code>WorkflowExecutionSignaled</code> event in the\
        \ workflow execution history and creates a decision task for the workflow\
        \ execution identified by the given domain, workflowId and runId. The event\
        \ is recorded with the specified user defined signalName and input (if provided).</p>\
        \ <note> <p>If a runId isn't specified, then the <code>WorkflowExecutionSignaled</code>\
        \ event is recorded in the history of the current open workflow with the matching\
        \ workflowId in the domain.</p> </note> <note> <p>If the specified workflow\
        \ execution isn't open, this method fails with <code>UnknownResource</code>.</p>\
        \ </note> <p> <b>Access Control</b> </p> <p>You can use IAM policies to control\
        \ this action's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use\
        \ a <code>Resource</code> element with the domain name to limit the action\
        \ to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: signal_workflow_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.SignalWorkflowExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignalWorkflowExecutionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.StartWorkflowExecution:
    post:
      description: "<p>Starts an execution of the workflow type in the specified domain\
        \ using the provided <code>workflowId</code> and input data.</p> <p>This action\
        \ returns the newly started workflow execution.</p> <p> <b>Access Control</b>\
        \ </p> <p>You can use IAM policies to control this action's access to Amazon\
        \ SWF resources as follows:</p> <ul> <li> <p>Use a <code>Resource</code> element\
        \ with the domain name to limit the action to only specified domains.</p>\
        \ </li> <li> <p>Use an <code>Action</code> element to allow or deny permission\
        \ to call this action.</p> </li> <li> <p>Constrain the following parameters\
        \ by using a <code>Condition</code> element with the appropriate keys.</p>\
        \ <ul> <li> <p> <code>tagList.member.0</code>: The key is <code>swf:tagList.member.0</code>.</p>\
        \ </li> <li> <p> <code>tagList.member.1</code>: The key is <code>swf:tagList.member.1</code>.</p>\
        \ </li> <li> <p> <code>tagList.member.2</code>: The key is <code>swf:tagList.member.2</code>.</p>\
        \ </li> <li> <p> <code>tagList.member.3</code>: The key is <code>swf:tagList.member.3</code>.</p>\
        \ </li> <li> <p> <code>tagList.member.4</code>: The key is <code>swf:tagList.member.4</code>.</p>\
        \ </li> <li> <p> <code>taskList</code>: String constraint. The key is <code>swf:taskList.name</code>.</p>\
        \ </li> <li> <p> <code>workflowType.name</code>: String constraint. The key\
        \ is <code>swf:workflowType.name</code>.</p> </li> <li> <p> <code>workflowType.version</code>:\
        \ String constraint. The key is <code>swf:workflowType.version</code>.</p>\
        \ </li> </ul> </li> </ul> <p>If the caller doesn't have sufficient permissions\
        \ to invoke the action, or the parameter values fall outside the specified\
        \ constraints, the action fails. The associated event attribute's <code>cause</code>\
        \ parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details and\
        \ example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: start_workflow_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.StartWorkflowExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartWorkflowExecutionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDeprecatedFault'
          description: TypeDeprecatedFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionAlreadyStartedFault'
          description: WorkflowExecutionAlreadyStartedFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
          description: LimitExceededFault
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultUndefinedFault'
          description: DefaultUndefinedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.TagResource:
    post:
      description: <p>Add a tag to a Amazon SWF domain.</p> <note> <p>Amazon SWF supports
        a maximum of 50 tags per resource.</p> </note>
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsFault'
          description: TooManyTagsFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
          description: LimitExceededFault
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.TerminateWorkflowExecution:
    post:
      description: "<p>Records a <code>WorkflowExecutionTerminated</code> event and\
        \ forces closure of the workflow execution identified by the given domain,\
        \ runId, and workflowId. The child policy, registered with the workflow type\
        \ or specified when starting this execution, is applied to any open child\
        \ workflow executions of this workflow execution.</p> <important> <p>If the\
        \ identified workflow execution was in progress, it is terminated immediately.</p>\
        \ </important> <note> <p>If a runId isn't specified, then the <code>WorkflowExecutionTerminated</code>\
        \ event is recorded in the history of the current open workflow with the matching\
        \ workflowId in the domain.</p> </note> <note> <p>You should consider using\
        \ <a>RequestCancelWorkflowExecution</a> action instead because it allows the\
        \ workflow to gracefully close while <a>TerminateWorkflowExecution</a> doesn't.</p>\
        \ </note> <p> <b>Access Control</b> </p> <p>You can use IAM policies to control\
        \ this action's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use\
        \ a <code>Resource</code> element with the domain name to limit the action\
        \ to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: terminate_workflow_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.TerminateWorkflowExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateWorkflowExecutionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.UndeprecateActivityType:
    post:
      description: "<p>Undeprecates a previously deprecated <i>activity type</i>.\
        \ After an activity type has been undeprecated, you can create new tasks of\
        \ that activity type.</p> <note> <p>This operation is eventually consistent.\
        \ The results are best effort and may not exactly reflect recent updates and\
        \ changes.</p> </note> <p> <b>Access Control</b> </p> <p>You can use IAM policies\
        \ to control this action's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>Constrain the following parameters by using a <code>Condition</code>\
        \ element with the appropriate keys.</p> <ul> <li> <p> <code>activityType.name</code>:\
        \ String constraint. The key is <code>swf:activityType.name</code>.</p> </li>\
        \ <li> <p> <code>activityType.version</code>: String constraint. The key is\
        \ <code>swf:activityType.version</code>.</p> </li> </ul> </li> </ul> <p>If\
        \ the caller doesn't have sufficient permissions to invoke the action, or\
        \ the parameter values fall outside the specified constraints, the action\
        \ fails. The associated event attribute's <code>cause</code> parameter is\
        \ set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM\
        \ policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: undeprecate_activity_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.UndeprecateActivityType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeprecateActivityTypeInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeAlreadyExistsFault'
          description: TypeAlreadyExistsFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.UndeprecateDomain:
    post:
      description: "<p>Undeprecates a previously deprecated domain. After a domain\
        \ has been undeprecated it can be used to create new workflow executions or\
        \ register new types.</p> <note> <p>This operation is eventually consistent.\
        \ The results are best effort and may not exactly reflect recent updates and\
        \ changes.</p> </note> <p> <b>Access Control</b> </p> <p>You can use IAM policies\
        \ to control this action's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: undeprecate_domain
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.UndeprecateDomain
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeprecateDomainInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainAlreadyExistsFault'
          description: DomainAlreadyExistsFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.UndeprecateWorkflowType:
    post:
      description: "<p>Undeprecates a previously deprecated <i>workflow type</i>.\
        \ After a workflow type has been undeprecated, you can create new executions\
        \ of that type. </p> <note> <p>This operation is eventually consistent. The\
        \ results are best effort and may not exactly reflect recent updates and changes.</p>\
        \ </note> <p> <b>Access Control</b> </p> <p>You can use IAM policies to control\
        \ this action's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use\
        \ a <code>Resource</code> element with the domain name to limit the action\
        \ to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>Constrain the following parameters by using a <code>Condition</code>\
        \ element with the appropriate keys.</p> <ul> <li> <p> <code>workflowType.name</code>:\
        \ String constraint. The key is <code>swf:workflowType.name</code>.</p> </li>\
        \ <li> <p> <code>workflowType.version</code>: String constraint. The key is\
        \ <code>swf:workflowType.version</code>.</p> </li> </ul> </li> </ul> <p>If\
        \ the caller doesn't have sufficient permissions to invoke the action, or\
        \ the parameter values fall outside the specified constraints, the action\
        \ fails. The associated event attribute's <code>cause</code> parameter is\
        \ set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM\
        \ policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      operationId: undeprecate_workflow_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.UndeprecateWorkflowType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeprecateWorkflowTypeInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeAlreadyExistsFault'
          description: TypeAlreadyExistsFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=SimpleWorkflowService.UntagResource:
    post:
      description: Remove a tag from a Amazon SWF domain.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - SimpleWorkflowService.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
          description: UnknownResourceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
          description: LimitExceededFault
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
          description: OperationNotPermittedFault
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    WorkflowExecutionCount:
      description: 'Contains the count of workflow executions returned from <a>CountOpenWorkflowExecutions</a>
        or <a>CountClosedWorkflowExecutions</a> '
      example:
        count: ""
        truncated: ""
      properties:
        count:
          allOf:
          - $ref: '#/components/schemas/Count'
          - description: The number of workflow executions.
          title: count
        truncated:
          allOf:
          - $ref: '#/components/schemas/Truncated'
          - description: "If set to true, indicates that the actual count was more\
              \ than the maximum supported by this API and the count returned is the\
              \ truncated value."
          title: truncated
      required:
      - count
      title: WorkflowExecutionCount
      type: object
    CountClosedWorkflowExecutionsInput:
      example:
        tagFilter:
          tag: ""
        typeFilter:
          name: ""
          version: ""
        closeStatusFilter:
          status: ""
        domain: ""
        startTimeFilter:
          latestDate: ""
          oldestDate: ""
        executionFilter:
          workflowId: ""
        closeTimeFilter:
          latestDate: ""
          oldestDate: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain containing the workflow executions
              to count.
          title: domain
        startTimeFilter:
          $ref: '#/components/schemas/CountClosedWorkflowExecutionsInput_startTimeFilter'
        closeTimeFilter:
          $ref: '#/components/schemas/CountClosedWorkflowExecutionsInput_closeTimeFilter'
        executionFilter:
          $ref: '#/components/schemas/CountClosedWorkflowExecutionsInput_executionFilter'
        typeFilter:
          $ref: '#/components/schemas/CountClosedWorkflowExecutionsInput_typeFilter'
        tagFilter:
          $ref: '#/components/schemas/CountClosedWorkflowExecutionsInput_tagFilter'
        closeStatusFilter:
          $ref: '#/components/schemas/CountClosedWorkflowExecutionsInput_closeStatusFilter'
      required:
      - domain
      title: CountClosedWorkflowExecutionsInput
      type: object
    UnknownResourceFault: {}
    OperationNotPermittedFault: {}
    CountOpenWorkflowExecutionsInput:
      example:
        tagFilter:
          tag: ""
        typeFilter:
          name: ""
          version: ""
        domain: ""
        startTimeFilter:
          latestDate: ""
          oldestDate: ""
        executionFilter:
          workflowId: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain containing the workflow executions
              to count.
          title: domain
        startTimeFilter:
          $ref: '#/components/schemas/CountOpenWorkflowExecutionsInput_startTimeFilter'
        typeFilter:
          $ref: '#/components/schemas/CountOpenWorkflowExecutionsInput_typeFilter'
        tagFilter:
          $ref: '#/components/schemas/CountOpenWorkflowExecutionsInput_tagFilter'
        executionFilter:
          $ref: '#/components/schemas/CountOpenWorkflowExecutionsInput_executionFilter'
      required:
      - domain
      - startTimeFilter
      title: CountOpenWorkflowExecutionsInput
      type: object
    PendingTaskCount:
      description: Contains the count of tasks in a task list.
      example:
        count: ""
        truncated: ""
      properties:
        count:
          allOf:
          - $ref: '#/components/schemas/Count'
          - description: The number of tasks in the task list.
          title: count
        truncated:
          allOf:
          - $ref: '#/components/schemas/Truncated'
          - description: "If set to true, indicates that the actual count was more\
              \ than the maximum supported by this API and the count returned is the\
              \ truncated value."
          title: truncated
      required:
      - count
      title: PendingTaskCount
      type: object
    CountPendingActivityTasksInput:
      example:
        domain: ""
        taskList:
          name: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain that contains the task list.
          title: domain
        taskList:
          $ref: '#/components/schemas/CountPendingActivityTasksInput_taskList'
      required:
      - domain
      - taskList
      title: CountPendingActivityTasksInput
      type: object
    CountPendingDecisionTasksInput:
      example:
        domain: ""
        taskList:
          name: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain that contains the task list.
          title: domain
        taskList:
          $ref: '#/components/schemas/CountPendingActivityTasksInput_taskList'
      required:
      - domain
      - taskList
      title: CountPendingDecisionTasksInput
      type: object
    DeprecateActivityTypeInput:
      example:
        domain: ""
        activityType:
          name: ""
          version: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain in which the activity type is registered.
          title: domain
        activityType:
          $ref: '#/components/schemas/DeprecateActivityTypeInput_activityType'
      required:
      - activityType
      - domain
      title: DeprecateActivityTypeInput
      type: object
    TypeDeprecatedFault: {}
    DeprecateDomainInput:
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain to deprecate.
          title: name
      required:
      - name
      title: DeprecateDomainInput
      type: object
    DomainDeprecatedFault: {}
    DeprecateWorkflowTypeInput:
      example:
        domain: ""
        workflowType:
          name: ""
          version: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain in which the workflow type is registered.
          title: domain
        workflowType:
          $ref: '#/components/schemas/DeprecateWorkflowTypeInput_workflowType'
      required:
      - domain
      - workflowType
      title: DeprecateWorkflowTypeInput
      type: object
    ActivityTypeDetail:
      description: Detailed information about an activity type.
      example:
        typeInfo:
          deprecationDate: ""
          description: ""
          activityType:
            name: ""
            version: ""
          creationDate: ""
          status: ""
        configuration:
          defaultTaskScheduleToStartTimeout: ""
          defaultTaskList:
            name: ""
          defaultTaskStartToCloseTimeout: ""
          defaultTaskHeartbeatTimeout: ""
          defaultTaskScheduleToCloseTimeout: ""
          defaultTaskPriority: ""
      properties:
        typeInfo:
          $ref: '#/components/schemas/ActivityTypeDetail_typeInfo'
        configuration:
          $ref: '#/components/schemas/ActivityTypeDetail_configuration'
      required:
      - configuration
      - typeInfo
      title: ActivityTypeDetail
      type: object
    DescribeActivityTypeInput:
      example:
        domain: ""
        activityType:
          name: ""
          version: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain in which the activity type is registered.
          title: domain
        activityType:
          $ref: '#/components/schemas/DescribeActivityTypeInput_activityType'
      required:
      - activityType
      - domain
      title: DescribeActivityTypeInput
      type: object
    DomainDetail:
      description: Contains details of a domain.
      example:
        domainInfo:
          name: ""
          description: ""
          arn: ""
          status: ""
        configuration:
          workflowExecutionRetentionPeriodInDays: ""
      properties:
        domainInfo:
          $ref: '#/components/schemas/DomainDetail_domainInfo'
        configuration:
          $ref: '#/components/schemas/DomainDetail_configuration'
      required:
      - configuration
      - domainInfo
      title: DomainDetail
      type: object
    DescribeDomainInput:
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain to describe.
          title: name
      required:
      - name
      title: DescribeDomainInput
      type: object
    WorkflowExecutionDetail:
      description: Contains details about a workflow execution.
      example:
        executionConfiguration:
          lambdaRole: ""
          childPolicy: ""
          taskPriority: ""
          taskList:
            name: ""
          taskStartToCloseTimeout: ""
          executionStartToCloseTimeout: ""
        latestActivityTaskTimestamp: ""
        executionInfo:
          tagList: ""
          execution:
            runId: ""
            workflowId: ""
          parent:
            runId: ""
            workflowId: ""
          closeStatus: ""
          executionStatus: ""
          workflowType:
            name: ""
            version: ""
          cancelRequested: ""
          closeTimestamp: ""
          startTimestamp: ""
        openCounts:
          openDecisionTasks: ""
          openLambdaFunctions: ""
          openChildWorkflowExecutions: ""
          openTimers: ""
          openActivityTasks: ""
        latestExecutionContext: ""
      properties:
        executionInfo:
          $ref: '#/components/schemas/WorkflowExecutionDetail_executionInfo'
        executionConfiguration:
          $ref: '#/components/schemas/WorkflowExecutionDetail_executionConfiguration'
        openCounts:
          $ref: '#/components/schemas/WorkflowExecutionDetail_openCounts'
        latestActivityTaskTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the last activity task was scheduled for this
              workflow execution. You can use this information to determine if the
              workflow has not made progress for an unusually long period of time
              and might require a corrective action.
          title: latestActivityTaskTimestamp
        latestExecutionContext:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The latest executionContext provided by the decider for this
              workflow execution. A decider can provide an executionContext (a free-form
              string) when closing a decision task using <a>RespondDecisionTaskCompleted</a>.
          title: latestExecutionContext
      required:
      - executionConfiguration
      - executionInfo
      - openCounts
      title: WorkflowExecutionDetail
      type: object
    DescribeWorkflowExecutionInput:
      example:
        execution:
          runId: ""
          workflowId: ""
        domain: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain containing the workflow execution.
          title: domain
        execution:
          $ref: '#/components/schemas/DescribeWorkflowExecutionInput_execution'
      required:
      - domain
      - execution
      title: DescribeWorkflowExecutionInput
      type: object
    WorkflowTypeDetail:
      description: Contains details about a workflow type.
      example:
        typeInfo:
          deprecationDate: ""
          description: ""
          workflowType:
            name: ""
            version: ""
          creationDate: ""
          status: ""
        configuration:
          defaultChildPolicy: ""
          defaultTaskList:
            name: ""
          defaultTaskStartToCloseTimeout: ""
          defaultLambdaRole: ""
          defaultExecutionStartToCloseTimeout: ""
          defaultTaskPriority: ""
      properties:
        typeInfo:
          $ref: '#/components/schemas/WorkflowTypeDetail_typeInfo'
        configuration:
          $ref: '#/components/schemas/WorkflowTypeDetail_configuration'
      required:
      - configuration
      - typeInfo
      title: WorkflowTypeDetail
      type: object
    DescribeWorkflowTypeInput:
      example:
        domain: ""
        workflowType:
          name: ""
          version: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain in which this workflow type is registered.
          title: domain
        workflowType:
          $ref: '#/components/schemas/DescribeWorkflowTypeInput_workflowType'
      required:
      - domain
      - workflowType
      title: DescribeWorkflowTypeInput
      type: object
    History:
      description: "Paginated representation of a workflow history for a workflow\
        \ execution. This is the up to date, complete and authoritative record of\
        \ the events related to all tasks and events in the life of the workflow execution."
      example:
        nextPageToken: ""
        events: ""
      properties:
        events:
          allOf:
          - $ref: '#/components/schemas/HistoryEventList'
          - description: The list of history events.
          title: events
        nextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "<p>If a <code>NextPageToken</code> was returned by a previous\
              \ call, there are more results available. To retrieve the next page\
              \ of results, make the call again using the returned token in <code>nextPageToken</code>.\
              \ Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code>\
              \ determines how many results can be returned in a single call.</p>"
          title: nextPageToken
      required:
      - events
      title: History
      type: object
    GetWorkflowExecutionHistoryInput:
      example:
        execution:
          runId: ""
          workflowId: ""
        maximumPageSize: ""
        nextPageToken: ""
        reverseOrder: ""
        domain: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain containing the workflow execution.
          title: domain
        execution:
          $ref: '#/components/schemas/GetWorkflowExecutionHistoryInput_execution'
        nextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "<p>If <code>NextPageToken</code> is returned there are more\
              \ results available. The value of <code>NextPageToken</code> is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged.\
              \ Each pagination token expires after 24 hours. Using an expired pagination\
              \ token will return a <code>400</code> error: \"<code>Specified token\
              \ has exceeded its maximum lifetime</code>\". </p> <p>The configured\
              \ <code>maximumPageSize</code> determines how many results can be returned\
              \ in a single call. </p>"
          title: nextPageToken
        maximumPageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: 'The maximum number of results that are returned per call.
              Use <code>nextPageToken</code> to obtain further pages of results. '
          title: maximumPageSize
        reverseOrder:
          allOf:
          - $ref: '#/components/schemas/ReverseOrder'
          - description: "When set to <code>true</code>, returns the events in reverse\
              \ order. By default the results are returned in ascending order of the\
              \ <code>eventTimeStamp</code> of the events."
          title: reverseOrder
      required:
      - domain
      - execution
      title: GetWorkflowExecutionHistoryInput
      type: object
    ActivityTypeInfos:
      description: Contains a paginated list of activity type information structures.
      example:
        nextPageToken: ""
        typeInfos: ""
      properties:
        typeInfos:
          allOf:
          - $ref: '#/components/schemas/ActivityTypeInfoList'
          - description: List of activity type information.
          title: typeInfos
        nextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "<p>If a <code>NextPageToken</code> was returned by a previous\
              \ call, there are more results available. To retrieve the next page\
              \ of results, make the call again using the returned token in <code>nextPageToken</code>.\
              \ Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code>\
              \ determines how many results can be returned in a single call.</p>"
          title: nextPageToken
      required:
      - typeInfos
      title: ActivityTypeInfos
      type: object
    ListActivityTypesInput:
      example:
        registrationStatus: ""
        maximumPageSize: ""
        nextPageToken: ""
        reverseOrder: ""
        domain: ""
        name: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain in which the activity types have been
              registered.
          title: domain
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "If specified, only lists the activity types that have this\
              \ name."
          title: name
        registrationStatus:
          allOf:
          - $ref: '#/components/schemas/RegistrationStatus'
          - description: Specifies the registration status of the activity types to
              list.
          title: registrationStatus
        nextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "<p>If <code>NextPageToken</code> is returned there are more\
              \ results available. The value of <code>NextPageToken</code> is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged.\
              \ Each pagination token expires after 24 hours. Using an expired pagination\
              \ token will return a <code>400</code> error: \"<code>Specified token\
              \ has exceeded its maximum lifetime</code>\". </p> <p>The configured\
              \ <code>maximumPageSize</code> determines how many results can be returned\
              \ in a single call. </p>"
          title: nextPageToken
        maximumPageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: 'The maximum number of results that are returned per call.
              Use <code>nextPageToken</code> to obtain further pages of results. '
          title: maximumPageSize
        reverseOrder:
          allOf:
          - $ref: '#/components/schemas/ReverseOrder'
          - description: "When set to <code>true</code>, returns the results in reverse\
              \ order. By default, the results are returned in ascending alphabetical\
              \ order by <code>name</code> of the activity types."
          title: reverseOrder
      required:
      - domain
      - registrationStatus
      title: ListActivityTypesInput
      type: object
    WorkflowExecutionInfos:
      description: Contains a paginated list of information about workflow executions.
      example:
        nextPageToken: ""
        executionInfos: ""
      properties:
        executionInfos:
          allOf:
          - $ref: '#/components/schemas/WorkflowExecutionInfoList'
          - description: The list of workflow information structures.
          title: executionInfos
        nextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "<p>If a <code>NextPageToken</code> was returned by a previous\
              \ call, there are more results available. To retrieve the next page\
              \ of results, make the call again using the returned token in <code>nextPageToken</code>.\
              \ Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code>\
              \ determines how many results can be returned in a single call.</p>"
          title: nextPageToken
      required:
      - executionInfos
      title: WorkflowExecutionInfos
      type: object
    ListClosedWorkflowExecutionsInput:
      example:
        tagFilter:
          tag: ""
        typeFilter:
          name: ""
          version: ""
        maximumPageSize: ""
        closeStatusFilter:
          status: ""
        nextPageToken: ""
        reverseOrder: ""
        domain: ""
        startTimeFilter:
          latestDate: ""
          oldestDate: ""
        executionFilter:
          workflowId: ""
        closeTimeFilter:
          latestDate: ""
          oldestDate: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain that contains the workflow executions
              to list.
          title: domain
        startTimeFilter:
          $ref: '#/components/schemas/ListClosedWorkflowExecutionsInput_startTimeFilter'
        closeTimeFilter:
          $ref: '#/components/schemas/ListClosedWorkflowExecutionsInput_closeTimeFilter'
        executionFilter:
          $ref: '#/components/schemas/ListClosedWorkflowExecutionsInput_executionFilter'
        closeStatusFilter:
          $ref: '#/components/schemas/ListClosedWorkflowExecutionsInput_closeStatusFilter'
        typeFilter:
          $ref: '#/components/schemas/ListClosedWorkflowExecutionsInput_typeFilter'
        tagFilter:
          $ref: '#/components/schemas/ListClosedWorkflowExecutionsInput_tagFilter'
        nextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "<p>If <code>NextPageToken</code> is returned there are more\
              \ results available. The value of <code>NextPageToken</code> is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged.\
              \ Each pagination token expires after 24 hours. Using an expired pagination\
              \ token will return a <code>400</code> error: \"<code>Specified token\
              \ has exceeded its maximum lifetime</code>\". </p> <p>The configured\
              \ <code>maximumPageSize</code> determines how many results can be returned\
              \ in a single call. </p>"
          title: nextPageToken
        maximumPageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: 'The maximum number of results that are returned per call.
              Use <code>nextPageToken</code> to obtain further pages of results. '
          title: maximumPageSize
        reverseOrder:
          allOf:
          - $ref: '#/components/schemas/ReverseOrder'
          - description: "When set to <code>true</code>, returns the results in reverse\
              \ order. By default the results are returned in descending order of\
              \ the start or the close time of the executions."
          title: reverseOrder
      required:
      - domain
      title: ListClosedWorkflowExecutionsInput
      type: object
    DomainInfos:
      description: Contains a paginated collection of DomainInfo structures.
      example:
        nextPageToken: ""
        domainInfos: ""
      properties:
        domainInfos:
          allOf:
          - $ref: '#/components/schemas/DomainInfoList'
          - description: A list of DomainInfo structures.
          title: domainInfos
        nextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "<p>If a <code>NextPageToken</code> was returned by a previous\
              \ call, there are more results available. To retrieve the next page\
              \ of results, make the call again using the returned token in <code>nextPageToken</code>.\
              \ Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code>\
              \ determines how many results can be returned in a single call.</p>"
          title: nextPageToken
      required:
      - domainInfos
      title: DomainInfos
      type: object
    ListDomainsInput:
      example:
        registrationStatus: ""
        maximumPageSize: ""
        nextPageToken: ""
        reverseOrder: ""
      properties:
        nextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "<p>If <code>NextPageToken</code> is returned there are more\
              \ results available. The value of <code>NextPageToken</code> is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged.\
              \ Each pagination token expires after 24 hours. Using an expired pagination\
              \ token will return a <code>400</code> error: \"<code>Specified token\
              \ has exceeded its maximum lifetime</code>\". </p> <p>The configured\
              \ <code>maximumPageSize</code> determines how many results can be returned\
              \ in a single call. </p>"
          title: nextPageToken
        registrationStatus:
          allOf:
          - $ref: '#/components/schemas/RegistrationStatus'
          - description: Specifies the registration status of the domains to list.
          title: registrationStatus
        maximumPageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: 'The maximum number of results that are returned per call.
              Use <code>nextPageToken</code> to obtain further pages of results. '
          title: maximumPageSize
        reverseOrder:
          allOf:
          - $ref: '#/components/schemas/ReverseOrder'
          - description: "When set to <code>true</code>, returns the results in reverse\
              \ order. By default, the results are returned in ascending alphabetical\
              \ order by <code>name</code> of the domains."
          title: reverseOrder
      required:
      - registrationStatus
      title: ListDomainsInput
      type: object
    ListOpenWorkflowExecutionsInput:
      example:
        tagFilter:
          tag: ""
        typeFilter:
          name: ""
          version: ""
        maximumPageSize: ""
        nextPageToken: ""
        reverseOrder: ""
        domain: ""
        startTimeFilter:
          latestDate: ""
          oldestDate: ""
        executionFilter:
          workflowId: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain that contains the workflow executions
              to list.
          title: domain
        startTimeFilter:
          $ref: '#/components/schemas/ListOpenWorkflowExecutionsInput_startTimeFilter'
        typeFilter:
          $ref: '#/components/schemas/ListOpenWorkflowExecutionsInput_typeFilter'
        tagFilter:
          $ref: '#/components/schemas/ListOpenWorkflowExecutionsInput_tagFilter'
        nextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "<p>If <code>NextPageToken</code> is returned there are more\
              \ results available. The value of <code>NextPageToken</code> is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged.\
              \ Each pagination token expires after 24 hours. Using an expired pagination\
              \ token will return a <code>400</code> error: \"<code>Specified token\
              \ has exceeded its maximum lifetime</code>\". </p> <p>The configured\
              \ <code>maximumPageSize</code> determines how many results can be returned\
              \ in a single call. </p>"
          title: nextPageToken
        maximumPageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: 'The maximum number of results that are returned per call.
              Use <code>nextPageToken</code> to obtain further pages of results. '
          title: maximumPageSize
        reverseOrder:
          allOf:
          - $ref: '#/components/schemas/ReverseOrder'
          - description: "When set to <code>true</code>, returns the results in reverse\
              \ order. By default the results are returned in descending order of\
              \ the start time of the executions."
          title: reverseOrder
        executionFilter:
          $ref: '#/components/schemas/ListOpenWorkflowExecutionsInput_executionFilter'
      required:
      - domain
      - startTimeFilter
      title: ListOpenWorkflowExecutionsInput
      type: object
    ListTagsForResourceOutput:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/ResourceTagList'
          - description: An array of tags associated with the domain.
          title: tags
      title: ListTagsForResourceOutput
      type: object
    ListTagsForResourceInput:
      example:
        resourceArn: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the Amazon SWF domain.
          title: resourceArn
      required:
      - resourceArn
      title: ListTagsForResourceInput
      type: object
    LimitExceededFault: {}
    WorkflowTypeInfos:
      description: Contains a paginated list of information structures about workflow
        types.
      example:
        nextPageToken: ""
        typeInfos: ""
      properties:
        typeInfos:
          allOf:
          - $ref: '#/components/schemas/WorkflowTypeInfoList'
          - description: The list of workflow type information.
          title: typeInfos
        nextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "<p>If a <code>NextPageToken</code> was returned by a previous\
              \ call, there are more results available. To retrieve the next page\
              \ of results, make the call again using the returned token in <code>nextPageToken</code>.\
              \ Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code>\
              \ determines how many results can be returned in a single call.</p>"
          title: nextPageToken
      required:
      - typeInfos
      title: WorkflowTypeInfos
      type: object
    ListWorkflowTypesInput:
      example:
        registrationStatus: ""
        maximumPageSize: ""
        nextPageToken: ""
        reverseOrder: ""
        domain: ""
        name: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain in which the workflow types have been
              registered.
          title: domain
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "If specified, lists the workflow type with this name."
          title: name
        registrationStatus:
          allOf:
          - $ref: '#/components/schemas/RegistrationStatus'
          - description: Specifies the registration status of the workflow types to
              list.
          title: registrationStatus
        nextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "<p>If <code>NextPageToken</code> is returned there are more\
              \ results available. The value of <code>NextPageToken</code> is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged.\
              \ Each pagination token expires after 24 hours. Using an expired pagination\
              \ token will return a <code>400</code> error: \"<code>Specified token\
              \ has exceeded its maximum lifetime</code>\". </p> <p>The configured\
              \ <code>maximumPageSize</code> determines how many results can be returned\
              \ in a single call. </p>"
          title: nextPageToken
        maximumPageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: 'The maximum number of results that are returned per call.
              Use <code>nextPageToken</code> to obtain further pages of results. '
          title: maximumPageSize
        reverseOrder:
          allOf:
          - $ref: '#/components/schemas/ReverseOrder'
          - description: "When set to <code>true</code>, returns the results in reverse\
              \ order. By default the results are returned in ascending alphabetical\
              \ order of the <code>name</code> of the workflow types."
          title: reverseOrder
      required:
      - domain
      - registrationStatus
      title: ListWorkflowTypesInput
      type: object
    ActivityTask:
      description: Unit of work sent to an activity worker.
      example:
        activityId: ""
        input: ""
        startedEventId: ""
        workflowExecution:
          runId: ""
          workflowId: ""
        activityType:
          name: ""
          version: ""
        taskToken: ""
      properties:
        taskToken:
          allOf:
          - $ref: '#/components/schemas/TaskToken'
          - description: The opaque string used as a handle on the task. This token
              is used by workers to communicate progress and response information
              back to the system about the task.
          title: taskToken
        activityId:
          allOf:
          - $ref: '#/components/schemas/ActivityId'
          - description: The unique ID of the task.
          title: activityId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>ActivityTaskStarted</code> event recorded
              in the history.
          title: startedEventId
        workflowExecution:
          $ref: '#/components/schemas/ActivityTask_workflowExecution'
        activityType:
          $ref: '#/components/schemas/ActivityTask_activityType'
        input:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The inputs provided when the activity task was scheduled.
              The form of the input is user defined and should be meaningful to the
              activity implementation.
          title: input
      required:
      - activityId
      - activityType
      - startedEventId
      - taskToken
      - workflowExecution
      title: ActivityTask
      type: object
    PollForActivityTaskInput:
      example:
        identity: ""
        domain: ""
        taskList:
          name: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain that contains the task lists being
              polled.
          title: domain
        taskList:
          $ref: '#/components/schemas/PollForActivityTaskInput_taskList'
        identity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          - description: "Identity of the worker making the request, recorded in the\
              \ <code>ActivityTaskStarted</code> event in the workflow history. This\
              \ enables diagnostic tracing when problems arise. The form of this identity\
              \ is user defined."
          title: identity
      required:
      - domain
      - taskList
      title: PollForActivityTaskInput
      type: object
    DecisionTask:
      description: A structure that represents a decision task. Decision tasks are
        sent to deciders in order for them to make decisions.
      example:
        startedEventId: ""
        workflowExecution:
          runId: ""
          workflowId: ""
        nextPageToken: ""
        workflowType:
          name: ""
          version: ""
        previousStartedEventId: ""
        events: ""
        taskToken: ""
      properties:
        taskToken:
          allOf:
          - $ref: '#/components/schemas/TaskToken'
          - description: The opaque string used as a handle on the task. This token
              is used by workers to communicate progress and response information
              back to the system about the task.
          title: taskToken
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskStarted</code> event recorded
              in the history.
          title: startedEventId
        workflowExecution:
          $ref: '#/components/schemas/DecisionTask_workflowExecution'
        workflowType:
          $ref: '#/components/schemas/DecisionTask_workflowType'
        events:
          allOf:
          - $ref: '#/components/schemas/HistoryEventList'
          - description: A paginated list of history events of the workflow execution.
              The decider uses this during the processing of the decision task.
          title: events
        nextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "<p>If a <code>NextPageToken</code> was returned by a previous\
              \ call, there are more results available. To retrieve the next page\
              \ of results, make the call again using the returned token in <code>nextPageToken</code>.\
              \ Keep all other arguments unchanged.</p> <p>The configured <code>maximumPageSize</code>\
              \ determines how many results can be returned in a single call.</p>"
          title: nextPageToken
        previousStartedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the DecisionTaskStarted event of the previous decision
              task of this workflow execution that was processed by the decider. This
              can be used to determine the events in the history new since the last
              decision task received by the decider.
          title: previousStartedEventId
      required:
      - events
      - startedEventId
      - taskToken
      - workflowExecution
      - workflowType
      title: DecisionTask
      type: object
    PollForDecisionTaskInput:
      example:
        maximumPageSize: ""
        identity: ""
        nextPageToken: ""
        reverseOrder: ""
        domain: ""
        taskList:
          name: ""
        startAtPreviousStartedEvent: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain containing the task lists to poll.
          title: domain
        taskList:
          $ref: '#/components/schemas/PollForDecisionTaskInput_taskList'
        identity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          - description: "Identity of the decider making the request, which is recorded\
              \ in the DecisionTaskStarted event in the workflow history. This enables\
              \ diagnostic tracing when problems arise. The form of this identity\
              \ is user defined."
          title: identity
        nextPageToken:
          allOf:
          - $ref: '#/components/schemas/PageToken'
          - description: "<p>If <code>NextPageToken</code> is returned there are more\
              \ results available. The value of <code>NextPageToken</code> is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page. Keep all other arguments unchanged.\
              \ Each pagination token expires after 24 hours. Using an expired pagination\
              \ token will return a <code>400</code> error: \"<code>Specified token\
              \ has exceeded its maximum lifetime</code>\". </p> <p>The configured\
              \ <code>maximumPageSize</code> determines how many results can be returned\
              \ in a single call. </p> <note> <p>The <code>nextPageToken</code> returned\
              \ by this action cannot be used with <a>GetWorkflowExecutionHistory</a>\
              \ to get the next page. You must call <a>PollForDecisionTask</a> again\
              \ (with the <code>nextPageToken</code>) to retrieve the next page of\
              \ history records. Calling <a>PollForDecisionTask</a> with a <code>nextPageToken</code>\
              \ doesn't return a new decision task.</p> </note>"
          title: nextPageToken
        maximumPageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          - description: <p>The maximum number of results that are returned per call.
              Use <code>nextPageToken</code> to obtain further pages of results. </p>
              <p>This is an upper limit only; the actual number of results returned
              per call may be fewer than the specified maximum.</p>
          title: maximumPageSize
        reverseOrder:
          allOf:
          - $ref: '#/components/schemas/ReverseOrder'
          - description: "When set to <code>true</code>, returns the events in reverse\
              \ order. By default the results are returned in ascending order of the\
              \ <code>eventTimestamp</code> of the events."
          title: reverseOrder
        startAtPreviousStartedEvent:
          allOf:
          - $ref: '#/components/schemas/StartAtPreviousStartedEvent'
          - description: "When set to <code>true</code>, returns the events with <code>eventTimestamp</code>\
              \ greater than or equal to <code>eventTimestamp</code> of the most recent\
              \ <code>DecisionTaskStarted</code> event. By default, this parameter\
              \ is set to <code>false</code>."
          title: startAtPreviousStartedEvent
      required:
      - domain
      - taskList
      title: PollForDecisionTaskInput
      type: object
    ActivityTaskStatus:
      description: Status information about an activity task.
      example:
        cancelRequested: ""
      properties:
        cancelRequested:
          allOf:
          - $ref: '#/components/schemas/Canceled'
          - description: Set to <code>true</code> if cancellation of the task is requested.
          title: cancelRequested
      required:
      - cancelRequested
      title: ActivityTaskStatus
      type: object
    RecordActivityTaskHeartbeatInput:
      example:
        details: ""
        taskToken: ""
      properties:
        taskToken:
          allOf:
          - $ref: '#/components/schemas/TaskToken'
          - description: "<p>The <code>taskToken</code> of the <a>ActivityTask</a>.</p>\
              \ <important> <p> <code>taskToken</code> is generated by the service\
              \ and should be treated as an opaque value. If the task is passed to\
              \ another process, its <code>taskToken</code> must also be passed. This\
              \ enables it to provide its progress and respond with results. </p>\
              \ </important>"
          title: taskToken
        details:
          allOf:
          - $ref: '#/components/schemas/LimitedData'
          - description: "If specified, contains details about the progress of the\
              \ task."
          title: details
      required:
      - taskToken
      title: RecordActivityTaskHeartbeatInput
      type: object
    RegisterActivityTypeInput:
      example:
        defaultTaskScheduleToStartTimeout: ""
        defaultTaskList:
          name: ""
        domain: ""
        defaultTaskStartToCloseTimeout: ""
        name: ""
        description: ""
        defaultTaskHeartbeatTimeout: ""
        defaultTaskScheduleToCloseTimeout: ""
        version: ""
        defaultTaskPriority: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain in which this activity is to be registered.
          title: domain
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "<p>The name of the activity type within the domain.</p>\
              \ <p>The specified string must not contain a <code>:</code> (colon),\
              \ <code>/</code> (slash), <code>|</code> (vertical bar), or any control\
              \ characters (<code>\\u0000-\\u001f</code> | <code>\\u007f-\\u009f</code>).\
              \ Also, it must <i>not</i> be the literal string <code>arn</code>.</p>"
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: "<p>The version of the activity type.</p> <note> <p>The activity\
              \ type consists of the name and version, the combination of which must\
              \ be unique within the domain.</p> </note> <p>The specified string must\
              \ not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code>\
              \ (vertical bar), or any control characters (<code>\\u0000-\\u001f</code>\
              \ | <code>\\u007f-\\u009f</code>). Also, it must <i>not</i> be the literal\
              \ string <code>arn</code>.</p>"
          title: version
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A textual description of the activity type.
          title: description
        defaultTaskStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>If set, specifies the default maximum duration that a\
              \ worker can take to process tasks of this activity type. This default\
              \ can be overridden when scheduling an activity task using the <code>ScheduleActivityTask</code>\
              \ <a>Decision</a>.</p> <p>The duration is specified in seconds, an integer\
              \ greater than or equal to <code>0</code>. You can use <code>NONE</code>\
              \ to specify unlimited duration.</p>"
          title: defaultTaskStartToCloseTimeout
        defaultTaskHeartbeatTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>If set, specifies the default maximum time before which\
              \ a worker processing a task of this type must report progress by calling\
              \ <a>RecordActivityTaskHeartbeat</a>. If the timeout is exceeded, the\
              \ activity task is automatically timed out. This default can be overridden\
              \ when scheduling an activity task using the <code>ScheduleActivityTask</code>\
              \ <a>Decision</a>. If the activity worker subsequently attempts to record\
              \ a heartbeat or returns a result, the activity worker receives an <code>UnknownResource</code>\
              \ fault. In this case, Amazon SWF no longer considers the activity task\
              \ to be valid; the activity worker should clean up the activity task.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>. You can use <code>NONE</code> to specify\
              \ unlimited duration.</p>"
          title: defaultTaskHeartbeatTimeout
        defaultTaskList:
          $ref: '#/components/schemas/RegisterActivityTypeInput_defaultTaskList'
        defaultTaskPriority:
          allOf:
          - $ref: '#/components/schemas/TaskPriority'
          - description: "<p>The default task priority to assign to the activity type.\
              \ If not assigned, then <code>0</code> is used. Valid values are integers\
              \ that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648)\
              \ to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate\
              \ higher priority.</p> <p>For more information about setting task priority,\
              \ see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html\"\
              >Setting Task Priority</a> in the <i>in the <i>Amazon SWF Developer\
              \ Guide</i>.</i>.</p>"
          title: defaultTaskPriority
        defaultTaskScheduleToStartTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>If set, specifies the default maximum duration that a\
              \ task of this activity type can wait before being assigned to a worker.\
              \ This default can be overridden when scheduling an activity task using\
              \ the <code>ScheduleActivityTask</code> <a>Decision</a>.</p> <p>The\
              \ duration is specified in seconds, an integer greater than or equal\
              \ to <code>0</code>. You can use <code>NONE</code> to specify unlimited\
              \ duration.</p>"
          title: defaultTaskScheduleToStartTimeout
        defaultTaskScheduleToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>If set, specifies the default maximum duration for a\
              \ task of this activity type. This default can be overridden when scheduling\
              \ an activity task using the <code>ScheduleActivityTask</code> <a>Decision</a>.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>. You can use <code>NONE</code> to specify\
              \ unlimited duration.</p>"
          title: defaultTaskScheduleToCloseTimeout
      required:
      - domain
      - name
      - version
      title: RegisterActivityTypeInput
      type: object
    TypeAlreadyExistsFault: {}
    RegisterDomainInput:
      example:
        workflowExecutionRetentionPeriodInDays: ""
        name: ""
        description: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: "<p>Name of the domain to register. The name must be unique\
              \ in the region that the domain is registered in.</p> <p>The specified\
              \ string must not start or end with whitespace. It must not contain\
              \ a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical\
              \ bar), or any control characters (<code>\\u0000-\\u001f</code> | <code>\\\
              u007f-\\u009f</code>). Also, it must <i>not</i> be the literal string\
              \ <code>arn</code>.</p>"
          title: name
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A text description of the domain.
          title: description
        workflowExecutionRetentionPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/DurationInDays'
          - description: "<p>The duration (in days) that records and histories of\
              \ workflow executions on the domain should be kept by the service. After\
              \ the retention period, the workflow execution isn't available in the\
              \ results of visibility calls.</p> <p>If you pass the value <code>NONE</code>\
              \ or <code>0</code> (zero), then the workflow execution history isn't\
              \ retained. As soon as the workflow execution completes, the execution\
              \ record and its history are deleted.</p> <p>The maximum workflow execution\
              \ retention period is 90 days. For more information about Amazon SWF\
              \ service limits, see: <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-limits.html\"\
              >Amazon SWF Service Limits</a> in the <i>Amazon SWF Developer Guide</i>.</p>"
          title: workflowExecutionRetentionPeriodInDays
        tags:
          allOf:
          - $ref: '#/components/schemas/ResourceTagList'
          - description: "<p>Tags to be added when registering a domain.</p> <p>Tags\
              \ may only contain unicode letters, digits, whitespace, or these symbols:\
              \ <code>_ . : / = + - @</code>.</p>"
          title: tags
      required:
      - name
      - workflowExecutionRetentionPeriodInDays
      title: RegisterDomainInput
      type: object
    DomainAlreadyExistsFault: {}
    TooManyTagsFault: {}
    RegisterWorkflowTypeInput:
      example:
        defaultChildPolicy: ""
        defaultTaskList:
          name: ""
        domain: ""
        defaultTaskStartToCloseTimeout: ""
        name: ""
        description: ""
        defaultLambdaRole: ""
        version: ""
        defaultExecutionStartToCloseTimeout: ""
        defaultTaskPriority: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain in which to register the workflow
              type.
          title: domain
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "<p>The name of the workflow type.</p> <p>The specified string\
              \ must not contain a <code>:</code> (colon), <code>/</code> (slash),\
              \ <code>|</code> (vertical bar), or any control characters (<code>\\\
              u0000-\\u001f</code> | <code>\\u007f-\\u009f</code>). Also, it must\
              \ <i>not</i> be the literal string <code>arn</code>.</p>"
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: "<p>The version of the workflow type.</p> <note> <p>The workflow\
              \ type consists of the name and version, the combination of which must\
              \ be unique within the domain. To get a list of all currently registered\
              \ workflow types, use the <a>ListWorkflowTypes</a> action.</p> </note>\
              \ <p>The specified string must not contain a <code>:</code> (colon),\
              \ <code>/</code> (slash), <code>|</code> (vertical bar), or any control\
              \ characters (<code>\\u0000-\\u001f</code> | <code>\\u007f-\\u009f</code>).\
              \ Also, it must <i>not</i> be the literal string <code>arn</code>.</p>"
          title: version
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: Textual description of the workflow type.
          title: description
        defaultTaskStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>If set, specifies the default maximum duration of decision\
              \ tasks for this workflow type. This default can be overridden when\
              \ starting a workflow execution using the <a>StartWorkflowExecution</a>\
              \ action or the <code>StartChildWorkflowExecution</code> <a>Decision</a>.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>. You can use <code>NONE</code> to specify\
              \ unlimited duration.</p>"
          title: defaultTaskStartToCloseTimeout
        defaultExecutionStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>If set, specifies the default maximum duration for executions\
              \ of this workflow type. You can override this default when starting\
              \ an execution through the <a>StartWorkflowExecution</a> Action or <code>StartChildWorkflowExecution</code>\
              \ <a>Decision</a>.</p> <p>The duration is specified in seconds; an integer\
              \ greater than or equal to 0. Unlike some of the other timeout parameters\
              \ in Amazon SWF, you cannot specify a value of \"NONE\" for <code>defaultExecutionStartToCloseTimeout</code>;\
              \ there is a one-year max limit on the time that a workflow execution\
              \ can run. Exceeding this limit always causes the workflow execution\
              \ to time out.</p>"
          title: defaultExecutionStartToCloseTimeout
        defaultTaskList:
          $ref: '#/components/schemas/RegisterWorkflowTypeInput_defaultTaskList'
        defaultTaskPriority:
          allOf:
          - $ref: '#/components/schemas/TaskPriority'
          - description: "<p>The default task priority to assign to the workflow type.\
              \ If not assigned, then <code>0</code> is used. Valid values are integers\
              \ that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648)\
              \ to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate\
              \ higher priority.</p> <p>For more information about setting task priority,\
              \ see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html\"\
              >Setting Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>"
          title: defaultTaskPriority
        defaultChildPolicy:
          allOf:
          - $ref: '#/components/schemas/ChildPolicy'
          - description: "<p>If set, specifies the default policy to use for the child\
              \ workflow executions when a workflow execution of this type is terminated,\
              \ by calling the <a>TerminateWorkflowExecution</a> action explicitly\
              \ or due to an expired timeout. This default can be overridden when\
              \ starting a workflow execution using the <a>StartWorkflowExecution</a>\
              \ action or the <code>StartChildWorkflowExecution</code> <a>Decision</a>.</p>\
              \ <p>The supported child policies are:</p> <ul> <li> <p> <code>TERMINATE</code>\
              \ – The child executions are terminated.</p> </li> <li> <p> <code>REQUEST_CANCEL</code>\
              \ – A request to cancel is attempted for each child execution by recording\
              \ a <code>WorkflowExecutionCancelRequested</code> event in its history.\
              \ It is up to the decider to take appropriate actions when it receives\
              \ an execution history with this event.</p> </li> <li> <p> <code>ABANDON</code>\
              \ – No action is taken. The child executions continue to run.</p> </li>\
              \ </ul>"
          title: defaultChildPolicy
        defaultLambdaRole:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The default IAM role attached to this workflow type.</p>\
              \ <note> <p>Executions of this workflow type need IAM roles to invoke\
              \ Lambda functions. If you don't specify an IAM role when you start\
              \ this workflow type, the default Lambda role is attached to the execution.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html\"\
              >https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html</a>\
              \ in the <i>Amazon SWF Developer Guide</i>.</p> </note>"
          title: defaultLambdaRole
      required:
      - domain
      - name
      - version
      title: RegisterWorkflowTypeInput
      type: object
    RequestCancelWorkflowExecutionInput:
      example:
        domain: ""
        runId: ""
        workflowId: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain containing the workflow execution
              to cancel.
          title: domain
        workflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: The workflowId of the workflow execution to cancel.
          title: workflowId
        runId:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunIdOptional'
          - description: The runId of the workflow execution to cancel.
          title: runId
      required:
      - domain
      - workflowId
      title: RequestCancelWorkflowExecutionInput
      type: object
    RespondActivityTaskCanceledInput:
      example:
        details: ""
        taskToken: ""
      properties:
        taskToken:
          allOf:
          - $ref: '#/components/schemas/TaskToken'
          - description: "<p>The <code>taskToken</code> of the <a>ActivityTask</a>.</p>\
              \ <important> <p> <code>taskToken</code> is generated by the service\
              \ and should be treated as an opaque value. If the task is passed to\
              \ another process, its <code>taskToken</code> must also be passed. This\
              \ enables it to provide its progress and respond with results.</p> </important>"
          title: taskToken
        details:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: ' Information about the cancellation.'
          title: details
      required:
      - taskToken
      title: RespondActivityTaskCanceledInput
      type: object
    RespondActivityTaskCompletedInput:
      example:
        result: ""
        taskToken: ""
      properties:
        taskToken:
          allOf:
          - $ref: '#/components/schemas/TaskToken'
          - description: "<p>The <code>taskToken</code> of the <a>ActivityTask</a>.</p>\
              \ <important> <p> <code>taskToken</code> is generated by the service\
              \ and should be treated as an opaque value. If the task is passed to\
              \ another process, its <code>taskToken</code> must also be passed. This\
              \ enables it to provide its progress and respond with results.</p> </important>"
          title: taskToken
        result:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The result of the activity task. It is a free form string
              that is implementation specific.
          title: result
      required:
      - taskToken
      title: RespondActivityTaskCompletedInput
      type: object
    RespondActivityTaskFailedInput:
      example:
        reason: ""
        details: ""
        taskToken: ""
      properties:
        taskToken:
          allOf:
          - $ref: '#/components/schemas/TaskToken'
          - description: "<p>The <code>taskToken</code> of the <a>ActivityTask</a>.</p>\
              \ <important> <p> <code>taskToken</code> is generated by the service\
              \ and should be treated as an opaque value. If the task is passed to\
              \ another process, its <code>taskToken</code> must also be passed. This\
              \ enables it to provide its progress and respond with results.</p> </important>"
          title: taskToken
        reason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: Description of the error that may assist in diagnostics.
          title: reason
        details:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: ' Detailed information about the failure.'
          title: details
      required:
      - taskToken
      title: RespondActivityTaskFailedInput
      type: object
    RespondDecisionTaskCompletedInput:
      description: Input data for a TaskCompleted response to a decision task.
      example:
        executionContext: ""
        decisions: ""
        taskToken: ""
      properties:
        taskToken:
          allOf:
          - $ref: '#/components/schemas/TaskToken'
          - description: "<p>The <code>taskToken</code> from the <a>DecisionTask</a>.</p>\
              \ <important> <p> <code>taskToken</code> is generated by the service\
              \ and should be treated as an opaque value. If the task is passed to\
              \ another process, its <code>taskToken</code> must also be passed. This\
              \ enables it to provide its progress and respond with results.</p> </important>"
          title: taskToken
        decisions:
          allOf:
          - $ref: '#/components/schemas/DecisionList'
          - description: The list of decisions (possibly empty) made by the decider
              while processing this decision task. See the docs for the <a>Decision</a>
              structure for details.
          title: decisions
        executionContext:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: User defined context to add to workflow execution.
          title: executionContext
      required:
      - taskToken
      title: RespondDecisionTaskCompletedInput
      type: object
    SignalWorkflowExecutionInput:
      example:
        signalName: ""
        input: ""
        domain: ""
        runId: ""
        workflowId: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain containing the workflow execution
              to signal.
          title: domain
        workflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: The workflowId of the workflow execution to signal.
          title: workflowId
        runId:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunIdOptional'
          - description: The runId of the workflow execution to signal.
          title: runId
        signalName:
          allOf:
          - $ref: '#/components/schemas/SignalName'
          - description: The name of the signal. This name must be meaningful to the
              target workflow.
          title: signalName
        input:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: Data to attach to the <code>WorkflowExecutionSignaled</code>
              event in the target workflow execution's history.
          title: input
      required:
      - domain
      - signalName
      - workflowId
      title: SignalWorkflowExecutionInput
      type: object
    Run:
      description: Specifies the <code>runId</code> of a workflow execution.
      example:
        runId: ""
      properties:
        runId:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunId'
          - description: The <code>runId</code> of a workflow execution. This ID is
              generated by the service and can be used to uniquely identify the workflow
              execution within a domain.
          title: runId
      title: Run
      type: object
    StartWorkflowExecutionInput:
      example:
        tagList: ""
        input: ""
        lambdaRole: ""
        domain: ""
        childPolicy: ""
        taskPriority: ""
        taskList:
          name: ""
        workflowType:
          name: ""
          version: ""
        taskStartToCloseTimeout: ""
        executionStartToCloseTimeout: ""
        workflowId: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: "<p>The name of the domain in which the workflow execution\
              \ is created.</p> <p>The specified string must not contain a <code>:</code>\
              \ (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or\
              \ any control characters (<code>\\u0000-\\u001f</code> | <code>\\u007f-\\\
              u009f</code>). Also, it must <i>not</i> be the literal string <code>arn</code>.</p>"
          title: domain
        workflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: "<p>The user defined identifier associated with the workflow\
              \ execution. You can use this to associate a custom identifier with\
              \ the workflow execution. You may specify the same identifier if a workflow\
              \ execution is logically a <i>restart</i> of a previous execution. You\
              \ cannot have two open workflow executions with the same <code>workflowId</code>\
              \ at the same time within the same domain.</p> <p>The specified string\
              \ must not contain a <code>:</code> (colon), <code>/</code> (slash),\
              \ <code>|</code> (vertical bar), or any control characters (<code>\\\
              u0000-\\u001f</code> | <code>\\u007f-\\u009f</code>). Also, it must\
              \ <i>not</i> be the literal string <code>arn</code>.</p>"
          title: workflowId
        workflowType:
          $ref: '#/components/schemas/StartWorkflowExecutionInput_workflowType'
        taskList:
          $ref: '#/components/schemas/StartWorkflowExecutionInput_taskList'
        taskPriority:
          allOf:
          - $ref: '#/components/schemas/TaskPriority'
          - description: "<p>The task priority to use for this workflow execution.\
              \ This overrides any default priority that was assigned when the workflow\
              \ type was registered. If not set, then the default task priority for\
              \ the workflow type is used. Valid values are integers that range from\
              \ Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code>\
              \ (2147483647). Higher numbers indicate higher priority.</p> <p>For\
              \ more information about setting task priority, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html\"\
              >Setting Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>"
          title: taskPriority
        input:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The input for the workflow execution. This is a free form
              string which should be meaningful to the workflow you are starting.
              This <code>input</code> is made available to the new workflow execution
              in the <code>WorkflowExecutionStarted</code> history event.
          title: input
        executionStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>The total duration for this workflow execution. This\
              \ overrides the defaultExecutionStartToCloseTimeout specified when registering\
              \ the workflow type.</p> <p>The duration is specified in seconds; an\
              \ integer greater than or equal to <code>0</code>. Exceeding this limit\
              \ causes the workflow execution to time out. Unlike some of the other\
              \ timeout parameters in Amazon SWF, you cannot specify a value of \"\
              NONE\" for this timeout; there is a one-year max limit on the time that\
              \ a workflow execution can run.</p> <note> <p>An execution start-to-close\
              \ timeout must be specified either through this parameter or as a default\
              \ when the workflow type is registered. If neither this parameter nor\
              \ a default execution start-to-close timeout is specified, a fault is\
              \ returned.</p> </note>"
          title: executionStartToCloseTimeout
        tagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The list of tags to associate with the workflow execution.
              You can specify a maximum of 5 tags. You can list workflow executions
              with a specific tag by calling <a>ListOpenWorkflowExecutions</a> or
              <a>ListClosedWorkflowExecutions</a> and specifying a <a>TagFilter</a>.
          title: tagList
        taskStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>Specifies the maximum duration of decision tasks for\
              \ this workflow execution. This parameter overrides the <code>defaultTaskStartToCloseTimout</code>\
              \ specified when registering the workflow type using <a>RegisterWorkflowType</a>.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>. You can use <code>NONE</code> to specify\
              \ unlimited duration.</p> <note> <p>A task start-to-close timeout for\
              \ this workflow execution must be specified either as a default for\
              \ the workflow type or through this parameter. If neither this parameter\
              \ is set nor a default task start-to-close timeout was specified at\
              \ registration time then a fault is returned.</p> </note>"
          title: taskStartToCloseTimeout
        childPolicy:
          allOf:
          - $ref: '#/components/schemas/ChildPolicy'
          - description: "<p>If set, specifies the policy to use for the child workflow\
              \ executions of this workflow execution if it is terminated, by calling\
              \ the <a>TerminateWorkflowExecution</a> action explicitly or due to\
              \ an expired timeout. This policy overrides the default child policy\
              \ specified when registering the workflow type using <a>RegisterWorkflowType</a>.</p>\
              \ <p>The supported child policies are:</p> <ul> <li> <p> <code>TERMINATE</code>\
              \ – The child executions are terminated.</p> </li> <li> <p> <code>REQUEST_CANCEL</code>\
              \ – A request to cancel is attempted for each child execution by recording\
              \ a <code>WorkflowExecutionCancelRequested</code> event in its history.\
              \ It is up to the decider to take appropriate actions when it receives\
              \ an execution history with this event.</p> </li> <li> <p> <code>ABANDON</code>\
              \ – No action is taken. The child executions continue to run.</p> </li>\
              \ </ul> <note> <p>A child policy for this workflow execution must be\
              \ specified either as a default for the workflow type or through this\
              \ parameter. If neither this parameter is set nor a default child policy\
              \ was specified at registration time then a fault is returned.</p> </note>"
          title: childPolicy
        lambdaRole:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The IAM role to attach to this workflow execution.</p>\
              \ <note> <p>Executions of this workflow type need IAM roles to invoke\
              \ Lambda functions. If you don't attach an IAM role, any attempt to\
              \ schedule a Lambda task fails. This results in a <code>ScheduleLambdaFunctionFailed</code>\
              \ history event. For more information, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html\"\
              >https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html</a>\
              \ in the <i>Amazon SWF Developer Guide</i>.</p> </note>"
          title: lambdaRole
      required:
      - domain
      - workflowId
      - workflowType
      title: StartWorkflowExecutionInput
      type: object
    WorkflowExecutionAlreadyStartedFault: {}
    DefaultUndefinedFault: {}
    TagResourceInput:
      example:
        resourceArn: ""
        tags: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the Amazon SWF domain.
          title: resourceArn
        tags:
          allOf:
          - $ref: '#/components/schemas/ResourceTagList'
          - description: "<p>The list of tags to add to a domain. </p> <p>Tags may\
              \ only contain unicode letters, digits, whitespace, or these symbols:\
              \ <code>_ . : / = + - @</code>.</p>"
          title: tags
      required:
      - resourceArn
      - tags
      title: TagResourceInput
      type: object
    TerminateWorkflowExecutionInput:
      example:
        reason: ""
        domain: ""
        childPolicy: ""
        details: ""
        runId: ""
        workflowId: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The domain of the workflow execution to terminate.
          title: domain
        workflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: The workflowId of the workflow execution to terminate.
          title: workflowId
        runId:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunIdOptional'
          - description: The runId of the workflow execution to terminate.
          title: runId
        reason:
          allOf:
          - $ref: '#/components/schemas/TerminateReason'
          - description: ' A descriptive reason for terminating the workflow execution.'
          title: reason
        details:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: ' Details for terminating the workflow execution.'
          title: details
        childPolicy:
          allOf:
          - $ref: '#/components/schemas/ChildPolicy'
          - description: "<p>If set, specifies the policy to use for the child workflow\
              \ executions of the workflow execution being terminated. This policy\
              \ overrides the child policy specified for the workflow execution at\
              \ registration time or when starting the execution.</p> <p>The supported\
              \ child policies are:</p> <ul> <li> <p> <code>TERMINATE</code> – The\
              \ child executions are terminated.</p> </li> <li> <p> <code>REQUEST_CANCEL</code>\
              \ – A request to cancel is attempted for each child execution by recording\
              \ a <code>WorkflowExecutionCancelRequested</code> event in its history.\
              \ It is up to the decider to take appropriate actions when it receives\
              \ an execution history with this event.</p> </li> <li> <p> <code>ABANDON</code>\
              \ – No action is taken. The child executions continue to run.</p> </li>\
              \ </ul> <note> <p>A child policy for this workflow execution must be\
              \ specified either as a default for the workflow type or through this\
              \ parameter. If neither this parameter is set nor a default child policy\
              \ was specified at registration time then a fault is returned.</p> </note>"
          title: childPolicy
      required:
      - domain
      - workflowId
      title: TerminateWorkflowExecutionInput
      type: object
    UndeprecateActivityTypeInput:
      example:
        domain: ""
        activityType:
          name: ""
          version: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain of the deprecated activity type.
          title: domain
        activityType:
          $ref: '#/components/schemas/UndeprecateActivityTypeInput_activityType'
      required:
      - activityType
      - domain
      title: UndeprecateActivityTypeInput
      type: object
    UndeprecateDomainInput:
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain of the deprecated workflow type.
          title: name
      required:
      - name
      title: UndeprecateDomainInput
      type: object
    UndeprecateWorkflowTypeInput:
      example:
        domain: ""
        workflowType:
          name: ""
          version: ""
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain of the deprecated workflow type.
          title: domain
        workflowType:
          $ref: '#/components/schemas/UndeprecateWorkflowTypeInput_workflowType'
      required:
      - domain
      - workflowType
      title: UndeprecateWorkflowTypeInput
      type: object
    UntagResourceInput:
      example:
        tagKeys: ""
        resourceArn: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) for the Amazon SWF domain.
          title: resourceArn
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/ResourceTagKeyList'
          - description: The list of tags to remove from the Amazon SWF domain.
          title: tagKeys
      required:
      - resourceArn
      - tagKeys
      title: UntagResourceInput
      type: object
    ActivityId:
      maxLength: 256
      minLength: 1
      type: string
    TaskToken:
      maxLength: 1024
      minLength: 1
      type: string
    EventId:
      type: integer
    WorkflowExecution:
      description: Represents a workflow execution.
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: The user defined identifier associated with the workflow
              execution.
          title: workflowId
        runId:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunId'
          - description: A system-generated unique identifier for the workflow execution.
          title: runId
      required:
      - runId
      - workflowId
      title: WorkflowExecution
      type: object
    ActivityType:
      description: Represents an activity type.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: <p>The name of this activity.</p> <note> <p>The combination
              of activity type name and version must be unique within a domain.</p>
              </note>
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: <p>The version of this activity.</p> <note> <p>The combination
              of activity type name and version must be unique with in a domain.</p>
              </note>
          title: version
      required:
      - name
      - version
      title: ActivityType
      type: object
    Data:
      maxLength: 32768
      type: string
    ActivityTaskCancelRequestedEventAttributes:
      description: Provides the details of the <code>ActivityTaskCancelRequested</code>
        event.
      properties:
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>RequestCancelActivityTask</code>
              decision for this cancellation request. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: decisionTaskCompletedEventId
        activityId:
          allOf:
          - $ref: '#/components/schemas/ActivityId'
          - description: The unique ID of the task.
          title: activityId
      required:
      - activityId
      - decisionTaskCompletedEventId
      title: ActivityTaskCancelRequestedEventAttributes
      type: object
    ActivityTaskCanceledEventAttributes:
      description: Provides the details of the <code>ActivityTaskCanceled</code> event.
      properties:
        details:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: Details of the cancellation.
          title: details
        scheduledEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>ActivityTaskScheduled</code> event that
              was recorded when this activity task was scheduled. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: scheduledEventId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>ActivityTaskStarted</code> event recorded
              when this activity task was started. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: startedEventId
        latestCancelRequestedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: "If set, contains the ID of the last <code>ActivityTaskCancelRequested</code>\
              \ event recorded for this activity task. This information can be useful\
              \ for diagnosing problems by tracing back the chain of events leading\
              \ up to this event."
          title: latestCancelRequestedEventId
      required:
      - scheduledEventId
      - startedEventId
      title: ActivityTaskCanceledEventAttributes
      type: object
    ActivityTaskCompletedEventAttributes:
      description: Provides the details of the <code>ActivityTaskCompleted</code>
        event.
      properties:
        result:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The results of the activity task.
          title: result
        scheduledEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>ActivityTaskScheduled</code> event that
              was recorded when this activity task was scheduled. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: scheduledEventId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>ActivityTaskStarted</code> event recorded
              when this activity task was started. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: startedEventId
      required:
      - scheduledEventId
      - startedEventId
      title: ActivityTaskCompletedEventAttributes
      type: object
    FailureReason:
      maxLength: 256
      type: string
    ActivityTaskFailedEventAttributes:
      description: Provides the details of the <code>ActivityTaskFailed</code> event.
      properties:
        reason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: The reason provided for the failure.
          title: reason
        details:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The details of the failure.
          title: details
        scheduledEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>ActivityTaskScheduled</code> event that
              was recorded when this activity task was scheduled. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: scheduledEventId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>ActivityTaskStarted</code> event recorded
              when this activity task was started. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: startedEventId
      required:
      - scheduledEventId
      - startedEventId
      title: ActivityTaskFailedEventAttributes
      type: object
    DurationInSecondsOptional:
      maxLength: 8
      type: string
    TaskList:
      description: Represents a task list.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the task list.
          title: name
      required:
      - name
      title: TaskList
      type: object
    TaskPriority:
      type: string
    ActivityTaskScheduledEventAttributes:
      description: Provides the details of the <code>ActivityTaskScheduled</code>
        event.
      properties:
        activityType:
          $ref: '#/components/schemas/ActivityTaskScheduledEventAttributes_activityType'
        activityId:
          allOf:
          - $ref: '#/components/schemas/ActivityId'
          - description: The unique ID of the activity task.
          title: activityId
        input:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The input provided to the activity task.
          title: input
        control:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: Data attached to the event that can be used by the decider
              in subsequent workflow tasks. This data isn't sent to the activity.
          title: control
        scheduleToStartTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: The maximum amount of time the activity task can wait to
              be assigned to a worker.
          title: scheduleToStartTimeout
        scheduleToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: The maximum amount of time for this activity task.
          title: scheduleToCloseTimeout
        startToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: The maximum amount of time a worker may take to process the
              activity task.
          title: startToCloseTimeout
        taskList:
          $ref: '#/components/schemas/ActivityTaskScheduledEventAttributes_taskList'
        taskPriority:
          allOf:
          - $ref: '#/components/schemas/TaskPriority'
          - description: "<p> The priority to assign to the scheduled activity task.\
              \ If set, this overrides any default priority value that was assigned\
              \ when the activity type was registered.</p> <p>Valid values are integers\
              \ that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648)\
              \ to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate\
              \ higher priority.</p> <p>For more information about setting task priority,\
              \ see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html\"\
              >Setting Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>"
          title: taskPriority
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision that resulted in the scheduling of this activity task.
              This information can be useful for diagnosing problems by tracing back
              the chain of events leading up to this event.
          title: decisionTaskCompletedEventId
        heartbeatTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "The maximum time before which the worker processing this\
              \ task must report progress by calling <a>RecordActivityTaskHeartbeat</a>.\
              \ If the timeout is exceeded, the activity task is automatically timed\
              \ out. If the worker subsequently attempts to record a heartbeat or\
              \ return a result, it is ignored."
          title: heartbeatTimeout
      required:
      - activityId
      - activityType
      - decisionTaskCompletedEventId
      - taskList
      title: ActivityTaskScheduledEventAttributes
      type: object
    Identity:
      maxLength: 256
      type: string
    ActivityTaskStartedEventAttributes:
      description: Provides the details of the <code>ActivityTaskStarted</code> event.
      properties:
        identity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          - description: Identity of the worker that was assigned this task. This
              aids diagnostics when problems arise. The form of this identity is user
              defined.
          title: identity
        scheduledEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>ActivityTaskScheduled</code> event that
              was recorded when this activity task was scheduled. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: scheduledEventId
      required:
      - scheduledEventId
      title: ActivityTaskStartedEventAttributes
      type: object
    Canceled:
      type: boolean
    ActivityTaskTimeoutType:
      enum:
      - START_TO_CLOSE
      - SCHEDULE_TO_START
      - SCHEDULE_TO_CLOSE
      - HEARTBEAT
      title: ActivityTaskTimeoutType
      type: string
    LimitedData:
      maxLength: 2048
      type: string
    ActivityTaskTimedOutEventAttributes:
      description: Provides the details of the <code>ActivityTaskTimedOut</code> event.
      properties:
        timeoutType:
          allOf:
          - $ref: '#/components/schemas/ActivityTaskTimeoutType'
          - description: The type of the timeout that caused this event.
          title: timeoutType
        scheduledEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>ActivityTaskScheduled</code> event that
              was recorded when this activity task was scheduled. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: scheduledEventId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>ActivityTaskStarted</code> event recorded
              when this activity task was started. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: startedEventId
        details:
          allOf:
          - $ref: '#/components/schemas/LimitedData'
          - description: Contains the content of the <code>details</code> parameter
              for the last call made by the activity to <code>RecordActivityTaskHeartbeat</code>.
          title: details
      required:
      - scheduledEventId
      - startedEventId
      - timeoutType
      title: ActivityTaskTimedOutEventAttributes
      type: object
    Name:
      maxLength: 256
      minLength: 1
      type: string
    Version:
      maxLength: 64
      minLength: 1
      type: string
    ActivityTypeConfiguration:
      description: Configuration settings registered with the activity type.
      properties:
        defaultTaskStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p> The default maximum duration for tasks of an activity\
              \ type specified when registering the activity type. You can override\
              \ this default when scheduling a task through the <code>ScheduleActivityTask</code>\
              \ <a>Decision</a>.</p> <p>The duration is specified in seconds, an integer\
              \ greater than or equal to <code>0</code>. You can use <code>NONE</code>\
              \ to specify unlimited duration.</p>"
          title: defaultTaskStartToCloseTimeout
        defaultTaskHeartbeatTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p> The default maximum time, in seconds, before which a\
              \ worker processing a task must report progress by calling <a>RecordActivityTaskHeartbeat</a>.</p>\
              \ <p>You can specify this value only when <i>registering</i> an activity\
              \ type. The registered default value can be overridden when you schedule\
              \ a task through the <code>ScheduleActivityTask</code> <a>Decision</a>.\
              \ If the activity worker subsequently attempts to record a heartbeat\
              \ or returns a result, the activity worker receives an <code>UnknownResource</code>\
              \ fault. In this case, Amazon SWF no longer considers the activity task\
              \ to be valid; the activity worker should clean up the activity task.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>. You can use <code>NONE</code> to specify\
              \ unlimited duration.</p>"
          title: defaultTaskHeartbeatTimeout
        defaultTaskList:
          $ref: '#/components/schemas/ActivityTypeConfiguration_defaultTaskList'
        defaultTaskPriority:
          allOf:
          - $ref: '#/components/schemas/TaskPriority'
          - description: "<p> The default task priority for tasks of this activity\
              \ type, specified at registration. If not set, then <code>0</code> is\
              \ used as the default priority. This default can be overridden when\
              \ scheduling an activity task.</p> <p>Valid values are integers that\
              \ range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to\
              \ <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate\
              \ higher priority.</p> <p>For more information about setting task priority,\
              \ see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html\"\
              >Setting Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>"
          title: defaultTaskPriority
        defaultTaskScheduleToStartTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p> The default maximum duration, specified when registering\
              \ the activity type, that a task of an activity type can wait before\
              \ being assigned to a worker. You can override this default when scheduling\
              \ a task through the <code>ScheduleActivityTask</code> <a>Decision</a>.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>. You can use <code>NONE</code> to specify\
              \ unlimited duration.</p>"
          title: defaultTaskScheduleToStartTimeout
        defaultTaskScheduleToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p> The default maximum duration, specified when registering\
              \ the activity type, for tasks of this activity type. You can override\
              \ this default when scheduling a task through the <code>ScheduleActivityTask</code>\
              \ <a>Decision</a>.</p> <p>The duration is specified in seconds, an integer\
              \ greater than or equal to <code>0</code>. You can use <code>NONE</code>\
              \ to specify unlimited duration.</p>"
          title: defaultTaskScheduleToCloseTimeout
      title: ActivityTypeConfiguration
      type: object
    ActivityTypeInfo:
      description: Detailed information about an activity type.
      properties:
        activityType:
          $ref: '#/components/schemas/ActivityTypeInfo_activityType'
        status:
          allOf:
          - $ref: '#/components/schemas/RegistrationStatus'
          - description: The current status of the activity type.
          title: status
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the activity type provided in <a>RegisterActivityType</a>.
          title: description
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time this activity type was created through
              <a>RegisterActivityType</a>.
          title: creationDate
        deprecationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "If DEPRECATED, the date and time <a>DeprecateActivityType</a>\
              \ was called."
          title: deprecationDate
      required:
      - activityType
      - creationDate
      - status
      title: ActivityTypeInfo
      type: object
    RegistrationStatus:
      enum:
      - REGISTERED
      - DEPRECATED
      title: RegistrationStatus
      type: string
    Description:
      maxLength: 1024
      type: string
    Timestamp:
      format: date-time
      type: string
    ActivityTypeInfoList:
      items:
        $ref: '#/components/schemas/ActivityTypeInfo'
      type: array
    PageToken:
      maxLength: 2048
      type: string
    Arn:
      maxLength: 1600
      minLength: 1
      type: string
    TimerId:
      maxLength: 256
      minLength: 1
      type: string
    CancelTimerDecisionAttributes:
      description: "<p>Provides the details of the <code>CancelTimer</code> decision.</p>\
        \ <p> <b>Access Control</b> </p> <p>You can use IAM policies to control this\
        \ decision's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use\
        \ a <code>Resource</code> element with the domain name to limit the action\
        \ to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      properties:
        timerId:
          allOf:
          - $ref: '#/components/schemas/TimerId'
          - description: ' The unique ID of the timer to cancel.'
          title: timerId
      required:
      - timerId
      title: CancelTimerDecisionAttributes
      type: object
    CancelTimerFailedCause:
      enum:
      - TIMER_ID_UNKNOWN
      - OPERATION_NOT_PERMITTED
      title: CancelTimerFailedCause
      type: string
    CancelTimerFailedEventAttributes:
      description: Provides the details of the <code>CancelTimerFailed</code> event.
      properties:
        timerId:
          allOf:
          - $ref: '#/components/schemas/TimerId'
          - description: The timerId provided in the <code>CancelTimer</code> decision
              that failed.
          title: timerId
        cause:
          allOf:
          - $ref: '#/components/schemas/CancelTimerFailedCause'
          - description: "<p>The cause of the failure. This information is generated\
              \ by the system and can be useful for diagnostic purposes.</p> <note>\
              \ <p>If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>,\
              \ the decision failed because it lacked sufficient permissions. For\
              \ details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
              >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon\
              \ SWF Developer Guide</i>.</p> </note>"
          title: cause
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>CancelTimer</code> decision
              to cancel this timer. This information can be useful for diagnosing
              problems by tracing back the chain of events leading up to this event.
          title: decisionTaskCompletedEventId
      required:
      - cause
      - decisionTaskCompletedEventId
      - timerId
      title: CancelTimerFailedEventAttributes
      type: object
    CancelWorkflowExecutionDecisionAttributes:
      description: "<p>Provides the details of the <code>CancelWorkflowExecution</code>\
        \ decision.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies\
        \ to control this decision's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      properties:
        details:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: ' Details of the cancellation.'
          title: details
      title: CancelWorkflowExecutionDecisionAttributes
      type: object
    CancelWorkflowExecutionFailedCause:
      enum:
      - UNHANDLED_DECISION
      - OPERATION_NOT_PERMITTED
      title: CancelWorkflowExecutionFailedCause
      type: string
    CancelWorkflowExecutionFailedEventAttributes:
      description: Provides the details of the <code>CancelWorkflowExecutionFailed</code>
        event.
      properties:
        cause:
          allOf:
          - $ref: '#/components/schemas/CancelWorkflowExecutionFailedCause'
          - description: "<p>The cause of the failure. This information is generated\
              \ by the system and can be useful for diagnostic purposes.</p> <note>\
              \ <p>If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>,\
              \ the decision failed because it lacked sufficient permissions. For\
              \ details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
              >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon\
              \ SWF Developer Guide</i>.</p> </note>"
          title: cause
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>CancelWorkflowExecution</code>
              decision for this cancellation request. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: decisionTaskCompletedEventId
      required:
      - cause
      - decisionTaskCompletedEventId
      title: CancelWorkflowExecutionFailedEventAttributes
      type: object
    CauseMessage:
      maxLength: 1728
      type: string
    ChildPolicy:
      enum:
      - TERMINATE
      - REQUEST_CANCEL
      - ABANDON
      title: ChildPolicy
      type: string
    WorkflowType:
      description: Represents a workflow type.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: <p> The name of the workflow type.</p> <note> <p>The combination
              of workflow type name and version must be unique with in a domain.</p>
              </note>
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: <p> The version of the workflow type.</p> <note> <p>The combination
              of workflow type name and version must be unique with in a domain.</p>
              </note>
          title: version
      required:
      - name
      - version
      title: WorkflowType
      type: object
    ChildWorkflowExecutionCanceledEventAttributes:
      description: Provide details of the <code>ChildWorkflowExecutionCanceled</code>
        event.
      properties:
        workflowExecution:
          $ref: '#/components/schemas/ChildWorkflowExecutionCanceledEventAttributes_workflowExecution'
        workflowType:
          $ref: '#/components/schemas/ChildWorkflowExecutionCanceledEventAttributes_workflowType'
        details:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: Details of the cancellation (if provided).
          title: details
        initiatedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>StartChildWorkflowExecutionInitiated</code>
              event corresponding to the <code>StartChildWorkflowExecution</code>
              <a>Decision</a> to start this child workflow execution. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: initiatedEventId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>ChildWorkflowExecutionStarted</code>
              event recorded when this child workflow execution was started. This
              information can be useful for diagnosing problems by tracing back the
              chain of events leading up to this event.
          title: startedEventId
      required:
      - initiatedEventId
      - startedEventId
      - workflowExecution
      - workflowType
      title: ChildWorkflowExecutionCanceledEventAttributes
      type: object
    ChildWorkflowExecutionCompletedEventAttributes:
      description: Provides the details of the <code>ChildWorkflowExecutionCompleted</code>
        event.
      properties:
        workflowExecution:
          $ref: '#/components/schemas/ChildWorkflowExecutionCompletedEventAttributes_workflowExecution'
        workflowType:
          $ref: '#/components/schemas/ChildWorkflowExecutionCanceledEventAttributes_workflowType'
        result:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The result of the child workflow execution.
          title: result
        initiatedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>StartChildWorkflowExecutionInitiated</code>
              event corresponding to the <code>StartChildWorkflowExecution</code>
              <a>Decision</a> to start this child workflow execution. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: initiatedEventId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>ChildWorkflowExecutionStarted</code>
              event recorded when this child workflow execution was started. This
              information can be useful for diagnosing problems by tracing back the
              chain of events leading up to this event.
          title: startedEventId
      required:
      - initiatedEventId
      - startedEventId
      - workflowExecution
      - workflowType
      title: ChildWorkflowExecutionCompletedEventAttributes
      type: object
    ChildWorkflowExecutionFailedEventAttributes:
      description: Provides the details of the <code>ChildWorkflowExecutionFailed</code>
        event.
      properties:
        workflowExecution:
          $ref: '#/components/schemas/ChildWorkflowExecutionFailedEventAttributes_workflowExecution'
        workflowType:
          $ref: '#/components/schemas/ChildWorkflowExecutionCanceledEventAttributes_workflowType'
        reason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: The reason for the failure (if provided).
          title: reason
        details:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The details of the failure (if provided).
          title: details
        initiatedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>StartChildWorkflowExecutionInitiated</code>
              event corresponding to the <code>StartChildWorkflowExecution</code>
              <a>Decision</a> to start this child workflow execution. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: initiatedEventId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>ChildWorkflowExecutionStarted</code>
              event recorded when this child workflow execution was started. This
              information can be useful for diagnosing problems by tracing back the
              chain of events leading up to this event.
          title: startedEventId
      required:
      - initiatedEventId
      - startedEventId
      - workflowExecution
      - workflowType
      title: ChildWorkflowExecutionFailedEventAttributes
      type: object
    ChildWorkflowExecutionStartedEventAttributes:
      description: Provides the details of the <code>ChildWorkflowExecutionStarted</code>
        event.
      properties:
        workflowExecution:
          $ref: '#/components/schemas/ChildWorkflowExecutionStartedEventAttributes_workflowExecution'
        workflowType:
          $ref: '#/components/schemas/ChildWorkflowExecutionCanceledEventAttributes_workflowType'
        initiatedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>StartChildWorkflowExecutionInitiated</code>
              event corresponding to the <code>StartChildWorkflowExecution</code>
              <a>Decision</a> to start this child workflow execution. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: initiatedEventId
      required:
      - initiatedEventId
      - workflowExecution
      - workflowType
      title: ChildWorkflowExecutionStartedEventAttributes
      type: object
    ChildWorkflowExecutionTerminatedEventAttributes:
      description: Provides the details of the <code>ChildWorkflowExecutionTerminated</code>
        event.
      properties:
        workflowExecution:
          $ref: '#/components/schemas/ChildWorkflowExecutionTerminatedEventAttributes_workflowExecution'
        workflowType:
          $ref: '#/components/schemas/ChildWorkflowExecutionCanceledEventAttributes_workflowType'
        initiatedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>StartChildWorkflowExecutionInitiated</code>
              event corresponding to the <code>StartChildWorkflowExecution</code>
              <a>Decision</a> to start this child workflow execution. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: initiatedEventId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>ChildWorkflowExecutionStarted</code>
              event recorded when this child workflow execution was started. This
              information can be useful for diagnosing problems by tracing back the
              chain of events leading up to this event.
          title: startedEventId
      required:
      - initiatedEventId
      - startedEventId
      - workflowExecution
      - workflowType
      title: ChildWorkflowExecutionTerminatedEventAttributes
      type: object
    WorkflowExecutionTimeoutType:
      enum:
      - START_TO_CLOSE
      title: WorkflowExecutionTimeoutType
      type: string
    ChildWorkflowExecutionTimedOutEventAttributes:
      description: Provides the details of the <code>ChildWorkflowExecutionTimedOut</code>
        event.
      properties:
        workflowExecution:
          $ref: '#/components/schemas/ChildWorkflowExecutionTimedOutEventAttributes_workflowExecution'
        workflowType:
          $ref: '#/components/schemas/ChildWorkflowExecutionCanceledEventAttributes_workflowType'
        timeoutType:
          allOf:
          - $ref: '#/components/schemas/WorkflowExecutionTimeoutType'
          - description: The type of the timeout that caused the child workflow execution
              to time out.
          title: timeoutType
        initiatedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>StartChildWorkflowExecutionInitiated</code>
              event corresponding to the <code>StartChildWorkflowExecution</code>
              <a>Decision</a> to start this child workflow execution. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: initiatedEventId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>ChildWorkflowExecutionStarted</code>
              event recorded when this child workflow execution was started. This
              information can be useful for diagnosing problems by tracing back the
              chain of events leading up to this event.
          title: startedEventId
      required:
      - initiatedEventId
      - startedEventId
      - timeoutType
      - workflowExecution
      - workflowType
      title: ChildWorkflowExecutionTimedOutEventAttributes
      type: object
    CloseStatus:
      enum:
      - COMPLETED
      - FAILED
      - CANCELED
      - TERMINATED
      - CONTINUED_AS_NEW
      - TIMED_OUT
      title: CloseStatus
      type: string
    CloseStatusFilter:
      description: Used to filter the closed workflow executions in visibility APIs
        by their close status.
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/CloseStatus'
          - description: ' The close status that must match the close status of an
              execution for it to meet the criteria of this filter.'
          title: status
      required:
      - status
      title: CloseStatusFilter
      type: object
    CompleteWorkflowExecutionDecisionAttributes:
      description: "<p>Provides the details of the <code>CompleteWorkflowExecution</code>\
        \ decision.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies\
        \ to control this decision's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      properties:
        result:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The result of the workflow execution. The form of the result
              is implementation defined.
          title: result
      title: CompleteWorkflowExecutionDecisionAttributes
      type: object
    CompleteWorkflowExecutionFailedCause:
      enum:
      - UNHANDLED_DECISION
      - OPERATION_NOT_PERMITTED
      title: CompleteWorkflowExecutionFailedCause
      type: string
    CompleteWorkflowExecutionFailedEventAttributes:
      description: Provides the details of the <code>CompleteWorkflowExecutionFailed</code>
        event.
      properties:
        cause:
          allOf:
          - $ref: '#/components/schemas/CompleteWorkflowExecutionFailedCause'
          - description: "<p>The cause of the failure. This information is generated\
              \ by the system and can be useful for diagnostic purposes.</p> <note>\
              \ <p>If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>,\
              \ the decision failed because it lacked sufficient permissions. For\
              \ details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
              >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon\
              \ SWF Developer Guide</i>.</p> </note>"
          title: cause
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>CompleteWorkflowExecution</code>
              decision to complete this execution. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: decisionTaskCompletedEventId
      required:
      - cause
      - decisionTaskCompletedEventId
      title: CompleteWorkflowExecutionFailedEventAttributes
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 5
      type: array
    ContinueAsNewWorkflowExecutionDecisionAttributes:
      description: "<p>Provides the details of the <code>ContinueAsNewWorkflowExecution</code>\
        \ decision.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies\
        \ to control this decision's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>Constrain the following parameters by using a <code>Condition</code>\
        \ element with the appropriate keys.</p> <ul> <li> <p> <code>tag</code> –\
        \ A tag used to identify the workflow execution</p> </li> <li> <p> <code>taskList</code>\
        \ – String constraint. The key is <code>swf:taskList.name</code>.</p> </li>\
        \ <li> <p> <code>workflowType.version</code> – String constraint. The key\
        \ is <code>swf:workflowType.version</code>.</p> </li> </ul> </li> </ul> <p>If\
        \ the caller doesn't have sufficient permissions to invoke the action, or\
        \ the parameter values fall outside the specified constraints, the action\
        \ fails. The associated event attribute's <code>cause</code> parameter is\
        \ set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM\
        \ policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      properties:
        input:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The input provided to the new workflow execution.
          title: input
        executionStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>If set, specifies the total duration for this workflow\
              \ execution. This overrides the <code>defaultExecutionStartToCloseTimeout</code>\
              \ specified when registering the workflow type.</p> <p>The duration\
              \ is specified in seconds, an integer greater than or equal to <code>0</code>.\
              \ You can use <code>NONE</code> to specify unlimited duration.</p> <note>\
              \ <p>An execution start-to-close timeout for this workflow execution\
              \ must be specified either as a default for the workflow type or through\
              \ this field. If neither this field is set nor a default execution start-to-close\
              \ timeout was specified at registration time then a fault is returned.</p>\
              \ </note>"
          title: executionStartToCloseTimeout
        taskList:
          $ref: '#/components/schemas/ContinueAsNewWorkflowExecutionDecisionAttributes_taskList'
        taskPriority:
          allOf:
          - $ref: '#/components/schemas/TaskPriority'
          - description: "<p> The task priority that, if set, specifies the priority\
              \ for the decision tasks for this workflow execution. This overrides\
              \ the defaultTaskPriority specified when registering the workflow type.\
              \ Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code>\
              \ (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher\
              \ numbers indicate higher priority.</p> <p>For more information about\
              \ setting task priority, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html\"\
              >Setting Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>"
          title: taskPriority
        taskStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>Specifies the maximum duration of decision tasks for\
              \ the new workflow execution. This parameter overrides the <code>defaultTaskStartToCloseTimout</code>\
              \ specified when registering the workflow type using <a>RegisterWorkflowType</a>.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>. You can use <code>NONE</code> to specify\
              \ unlimited duration.</p> <note> <p>A task start-to-close timeout for\
              \ the new workflow execution must be specified either as a default for\
              \ the workflow type or through this parameter. If neither this parameter\
              \ is set nor a default task start-to-close timeout was specified at\
              \ registration time then a fault is returned.</p> </note>"
          title: taskStartToCloseTimeout
        childPolicy:
          allOf:
          - $ref: '#/components/schemas/ChildPolicy'
          - description: "<p>If set, specifies the policy to use for the child workflow\
              \ executions of the new execution if it is terminated by calling the\
              \ <a>TerminateWorkflowExecution</a> action explicitly or due to an expired\
              \ timeout. This policy overrides the default child policy specified\
              \ when registering the workflow type using <a>RegisterWorkflowType</a>.</p>\
              \ <p>The supported child policies are:</p> <ul> <li> <p> <code>TERMINATE</code>\
              \ – The child executions are terminated.</p> </li> <li> <p> <code>REQUEST_CANCEL</code>\
              \ – A request to cancel is attempted for each child execution by recording\
              \ a <code>WorkflowExecutionCancelRequested</code> event in its history.\
              \ It is up to the decider to take appropriate actions when it receives\
              \ an execution history with this event.</p> </li> <li> <p> <code>ABANDON</code>\
              \ – No action is taken. The child executions continue to run.</p> </li>\
              \ </ul> <note> <p>A child policy for this workflow execution must be\
              \ specified either as a default for the workflow type or through this\
              \ parameter. If neither this parameter is set nor a default child policy\
              \ was specified at registration time then a fault is returned.</p> </note>"
          title: childPolicy
        tagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The list of tags to associate with the new workflow execution.
              A maximum of 5 tags can be specified. You can list workflow executions
              with a specific tag by calling <a>ListOpenWorkflowExecutions</a> or
              <a>ListClosedWorkflowExecutions</a> and specifying a <a>TagFilter</a>.
          title: tagList
        workflowTypeVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the workflow to start.
          title: workflowTypeVersion
        lambdaRole:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The IAM role to attach to the new (continued) execution.
          title: lambdaRole
      title: ContinueAsNewWorkflowExecutionDecisionAttributes
      type: object
    ContinueAsNewWorkflowExecutionFailedCause:
      enum:
      - UNHANDLED_DECISION
      - WORKFLOW_TYPE_DEPRECATED
      - WORKFLOW_TYPE_DOES_NOT_EXIST
      - DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED
      - DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED
      - DEFAULT_TASK_LIST_UNDEFINED
      - DEFAULT_CHILD_POLICY_UNDEFINED
      - CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED
      - OPERATION_NOT_PERMITTED
      title: ContinueAsNewWorkflowExecutionFailedCause
      type: string
    ContinueAsNewWorkflowExecutionFailedEventAttributes:
      description: Provides the details of the <code>ContinueAsNewWorkflowExecutionFailed</code>
        event.
      properties:
        cause:
          allOf:
          - $ref: '#/components/schemas/ContinueAsNewWorkflowExecutionFailedCause'
          - description: "<p>The cause of the failure. This information is generated\
              \ by the system and can be useful for diagnostic purposes.</p> <note>\
              \ <p>If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>,\
              \ the decision failed because it lacked sufficient permissions. For\
              \ details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
              >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon\
              \ SWF Developer Guide</i>.</p> </note>"
          title: cause
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>ContinueAsNewWorkflowExecution</code>
              decision that started this execution. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: decisionTaskCompletedEventId
      required:
      - cause
      - decisionTaskCompletedEventId
      title: ContinueAsNewWorkflowExecutionFailedEventAttributes
      type: object
    Count:
      minimum: 0
      type: integer
    DomainName:
      maxLength: 256
      minLength: 1
      type: string
    ExecutionTimeFilter:
      description: "Used to filter the workflow executions in visibility APIs by various\
        \ time-based rules. Each parameter, if specified, defines a rule that must\
        \ be satisfied by each returned query result. The parameter values are in\
        \ the <a href=\"https://en.wikipedia.org/wiki/Unix_time\">Unix Time format</a>.\
        \ For example: <code>\"oldestDate\": 1325376070.</code> "
      properties:
        oldestDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Specifies the oldest start or close date and time to return.
          title: oldestDate
        latestDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Specifies the latest start or close date and time to return.
          title: latestDate
      required:
      - oldestDate
      title: ExecutionTimeFilter
      type: object
    WorkflowExecutionFilter:
      description: Used to filter the workflow executions in visibility APIs by their
        <code>workflowId</code>.
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: The workflowId to pass of match the criteria of this filter.
          title: workflowId
      required:
      - workflowId
      title: WorkflowExecutionFilter
      type: object
    WorkflowTypeFilter:
      description: "Used to filter workflow execution query results by type. Each\
        \ parameter, if specified, defines a rule that must be satisfied by each returned\
        \ result."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: ' Name of the workflow type.'
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/VersionOptional'
          - description: Version of the workflow type.
          title: version
      required:
      - name
      title: WorkflowTypeFilter
      type: object
    TagFilter:
      description: Used to filter the workflow executions in visibility APIs based
        on a tag.
      properties:
        tag:
          allOf:
          - $ref: '#/components/schemas/Tag'
          - description: "<p> Specifies the tag that must be associated with the execution\
              \ for it to meet the filter criteria.</p> <p>Tags may only contain unicode\
              \ letters, digits, whitespace, or these symbols: <code>_ . : / = + -\
              \ @</code>.</p>"
          title: tag
      required:
      - tag
      title: TagFilter
      type: object
    DecisionType:
      enum:
      - ScheduleActivityTask
      - RequestCancelActivityTask
      - CompleteWorkflowExecution
      - FailWorkflowExecution
      - CancelWorkflowExecution
      - ContinueAsNewWorkflowExecution
      - RecordMarker
      - StartTimer
      - CancelTimer
      - SignalExternalWorkflowExecution
      - RequestCancelExternalWorkflowExecution
      - StartChildWorkflowExecution
      - ScheduleLambdaFunction
      title: DecisionType
      type: string
    ScheduleActivityTaskDecisionAttributes:
      description: "<p>Provides the details of the <code>ScheduleActivityTask</code>\
        \ decision.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies\
        \ to control this decision's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>Constrain the following parameters by using a <code>Condition</code>\
        \ element with the appropriate keys.</p> <ul> <li> <p> <code>activityType.name</code>\
        \ – String constraint. The key is <code>swf:activityType.name</code>.</p>\
        \ </li> <li> <p> <code>activityType.version</code> – String constraint. The\
        \ key is <code>swf:activityType.version</code>.</p> </li> <li> <p> <code>taskList</code>\
        \ – String constraint. The key is <code>swf:taskList.name</code>.</p> </li>\
        \ </ul> </li> </ul> <p>If the caller doesn't have sufficient permissions to\
        \ invoke the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      properties:
        activityType:
          $ref: '#/components/schemas/ScheduleActivityTaskDecisionAttributes_activityType'
        activityId:
          allOf:
          - $ref: '#/components/schemas/ActivityId'
          - description: "<p> The <code>activityId</code> of the activity task.</p>\
              \ <p>The specified string must not contain a <code>:</code> (colon),\
              \ <code>/</code> (slash), <code>|</code> (vertical bar), or any control\
              \ characters (<code>\\u0000-\\u001f</code> | <code>\\u007f-\\u009f</code>).\
              \ Also, it must <i>not</i> be the literal string <code>arn</code>.</p>"
          title: activityId
        control:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: Data attached to the event that can be used by the decider
              in subsequent workflow tasks. This data isn't sent to the activity.
          title: control
        input:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The input provided to the activity task.
          title: input
        scheduleToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>The maximum duration for this activity task.</p> <p>The\
              \ duration is specified in seconds, an integer greater than or equal\
              \ to <code>0</code>. You can use <code>NONE</code> to specify unlimited\
              \ duration.</p> <note> <p>A schedule-to-close timeout for this activity\
              \ task must be specified either as a default for the activity type or\
              \ through this field. If neither this field is set nor a default schedule-to-close\
              \ timeout was specified at registration time then a fault is returned.</p>\
              \ </note>"
          title: scheduleToCloseTimeout
        taskList:
          $ref: '#/components/schemas/ScheduleActivityTaskDecisionAttributes_taskList'
        taskPriority:
          allOf:
          - $ref: '#/components/schemas/TaskPriority'
          - description: "<p> If set, specifies the priority with which the activity\
              \ task is to be assigned to a worker. This overrides the defaultTaskPriority\
              \ specified when registering the activity type using <a>RegisterActivityType</a>.\
              \ Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code>\
              \ (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher\
              \ numbers indicate higher priority.</p> <p>For more information about\
              \ setting task priority, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html\"\
              >Setting Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>"
          title: taskPriority
        scheduleToStartTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p> If set, specifies the maximum duration the activity\
              \ task can wait to be assigned to a worker. This overrides the default\
              \ schedule-to-start timeout specified when registering the activity\
              \ type using <a>RegisterActivityType</a>.</p> <p>The duration is specified\
              \ in seconds, an integer greater than or equal to <code>0</code>. You\
              \ can use <code>NONE</code> to specify unlimited duration.</p> <note>\
              \ <p>A schedule-to-start timeout for this activity task must be specified\
              \ either as a default for the activity type or through this field. If\
              \ neither this field is set nor a default schedule-to-start timeout\
              \ was specified at registration time then a fault is returned.</p> </note>"
          title: scheduleToStartTimeout
        startToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>If set, specifies the maximum duration a worker may take\
              \ to process this activity task. This overrides the default start-to-close\
              \ timeout specified when registering the activity type using <a>RegisterActivityType</a>.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>. You can use <code>NONE</code> to specify\
              \ unlimited duration.</p> <note> <p>A start-to-close timeout for this\
              \ activity task must be specified either as a default for the activity\
              \ type or through this field. If neither this field is set nor a default\
              \ start-to-close timeout was specified at registration time then a fault\
              \ is returned.</p> </note>"
          title: startToCloseTimeout
        heartbeatTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>If set, specifies the maximum time before which a worker\
              \ processing a task of this type must report progress by calling <a>RecordActivityTaskHeartbeat</a>.\
              \ If the timeout is exceeded, the activity task is automatically timed\
              \ out. If the worker subsequently attempts to record a heartbeat or\
              \ returns a result, it is ignored. This overrides the default heartbeat\
              \ timeout specified when registering the activity type using <a>RegisterActivityType</a>.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>. You can use <code>NONE</code> to specify\
              \ unlimited duration.</p>"
          title: heartbeatTimeout
      required:
      - activityId
      - activityType
      title: ScheduleActivityTaskDecisionAttributes
      type: object
    RequestCancelActivityTaskDecisionAttributes:
      description: "<p>Provides the details of the <code>RequestCancelActivityTask</code>\
        \ decision.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies\
        \ to control this decision's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      properties:
        activityId:
          allOf:
          - $ref: '#/components/schemas/ActivityId'
          - description: The <code>activityId</code> of the activity task to be canceled.
          title: activityId
      required:
      - activityId
      title: RequestCancelActivityTaskDecisionAttributes
      type: object
    FailWorkflowExecutionDecisionAttributes:
      description: "<p>Provides the details of the <code>FailWorkflowExecution</code>\
        \ decision.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies\
        \ to control this decision's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      properties:
        reason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: A descriptive reason for the failure that may help in diagnostics.
          title: reason
        details:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: ' Details of the failure.'
          title: details
      title: FailWorkflowExecutionDecisionAttributes
      type: object
    RecordMarkerDecisionAttributes:
      description: "<p>Provides the details of the <code>RecordMarker</code> decision.</p>\
        \ <p> <b>Access Control</b> </p> <p>You can use IAM policies to control this\
        \ decision's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use\
        \ a <code>Resource</code> element with the domain name to limit the action\
        \ to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      properties:
        markerName:
          allOf:
          - $ref: '#/components/schemas/MarkerName'
          - description: ' The name of the marker.'
          title: markerName
        details:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: ' The details of the marker.'
          title: details
      required:
      - markerName
      title: RecordMarkerDecisionAttributes
      type: object
    StartTimerDecisionAttributes:
      description: "<p>Provides the details of the <code>StartTimer</code> decision.</p>\
        \ <p> <b>Access Control</b> </p> <p>You can use IAM policies to control this\
        \ decision's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use\
        \ a <code>Resource</code> element with the domain name to limit the action\
        \ to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      properties:
        timerId:
          allOf:
          - $ref: '#/components/schemas/TimerId'
          - description: "<p> The unique ID of the timer.</p> <p>The specified string\
              \ must not contain a <code>:</code> (colon), <code>/</code> (slash),\
              \ <code>|</code> (vertical bar), or any control characters (<code>\\\
              u0000-\\u001f</code> | <code>\\u007f-\\u009f</code>). Also, it must\
              \ <i>not</i> be the literal string <code>arn</code>.</p>"
          title: timerId
        control:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The data attached to the event that can be used by the decider
              in subsequent workflow tasks.
          title: control
        startToFireTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSeconds'
          - description: "<p> The duration to wait before firing the timer.</p> <p>The\
              \ duration is specified in seconds, an integer greater than or equal\
              \ to <code>0</code>.</p>"
          title: startToFireTimeout
      required:
      - startToFireTimeout
      - timerId
      title: StartTimerDecisionAttributes
      type: object
    SignalExternalWorkflowExecutionDecisionAttributes:
      description: "<p>Provides the details of the <code>SignalExternalWorkflowExecution</code>\
        \ decision.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies\
        \ to control this decision's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: ' The <code>workflowId</code> of the workflow execution to
              be signaled.'
          title: workflowId
        runId:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunIdOptional'
          - description: The <code>runId</code> of the workflow execution to be signaled.
          title: runId
        signalName:
          allOf:
          - $ref: '#/components/schemas/SignalName'
          - description: ' The name of the signal.The target workflow execution uses
              the signal name and input to process the signal.'
          title: signalName
        input:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: ' The input data to be provided with the signal. The target
              workflow execution uses the signal name and input data to process the
              signal.'
          title: input
        control:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The data attached to the event that can be used by the decider
              in subsequent decision tasks.
          title: control
      required:
      - signalName
      - workflowId
      title: SignalExternalWorkflowExecutionDecisionAttributes
      type: object
    RequestCancelExternalWorkflowExecutionDecisionAttributes:
      description: "<p>Provides the details of the <code>RequestCancelExternalWorkflowExecution</code>\
        \ decision.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies\
        \ to control this decision's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>You cannot use an IAM policy to constrain this action's parameters.</p>\
        \ </li> </ul> <p>If the caller doesn't have sufficient permissions to invoke\
        \ the action, or the parameter values fall outside the specified constraints,\
        \ the action fails. The associated event attribute's <code>cause</code> parameter\
        \ is set to <code>OPERATION_NOT_PERMITTED</code>. For details and example\
        \ IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: ' The <code>workflowId</code> of the external workflow execution
              to cancel.'
          title: workflowId
        runId:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunIdOptional'
          - description: The <code>runId</code> of the external workflow execution
              to cancel.
          title: runId
        control:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The data attached to the event that can be used by the decider
              in subsequent workflow tasks.
          title: control
      required:
      - workflowId
      title: RequestCancelExternalWorkflowExecutionDecisionAttributes
      type: object
    StartChildWorkflowExecutionDecisionAttributes:
      description: "<p>Provides the details of the <code>StartChildWorkflowExecution</code>\
        \ decision.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies\
        \ to control this decision's access to Amazon SWF resources as follows:</p>\
        \ <ul> <li> <p>Use a <code>Resource</code> element with the domain name to\
        \ limit the action to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>\
        \ element to allow or deny permission to call this action.</p> </li> <li>\
        \ <p>Constrain the following parameters by using a <code>Condition</code>\
        \ element with the appropriate keys.</p> <ul> <li> <p> <code>tagList.member.N</code>\
        \ – The key is \"swf:tagList.N\" where N is the tag number from 0 to 4, inclusive.</p>\
        \ </li> <li> <p> <code>taskList</code> – String constraint. The key is <code>swf:taskList.name</code>.</p>\
        \ </li> <li> <p> <code>workflowType.name</code> – String constraint. The key\
        \ is <code>swf:workflowType.name</code>.</p> </li> <li> <p> <code>workflowType.version</code>\
        \ – String constraint. The key is <code>swf:workflowType.version</code>.</p>\
        \ </li> </ul> </li> </ul> <p>If the caller doesn't have sufficient permissions\
        \ to invoke the action, or the parameter values fall outside the specified\
        \ constraints, the action fails. The associated event attribute's <code>cause</code>\
        \ parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details and\
        \ example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p>"
      properties:
        workflowType:
          $ref: '#/components/schemas/StartChildWorkflowExecutionDecisionAttributes_workflowType'
        workflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: "<p> The <code>workflowId</code> of the workflow execution.</p>\
              \ <p>The specified string must not contain a <code>:</code> (colon),\
              \ <code>/</code> (slash), <code>|</code> (vertical bar), or any control\
              \ characters (<code>\\u0000-\\u001f</code> | <code>\\u007f-\\u009f</code>).\
              \ Also, it must <i>not</i> be the literal string <code>arn</code>.</p>"
          title: workflowId
        control:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The data attached to the event that can be used by the decider
              in subsequent workflow tasks. This data isn't sent to the child workflow
              execution.
          title: control
        input:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The input to be provided to the workflow execution.
          title: input
        executionStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>The total duration for this workflow execution. This\
              \ overrides the defaultExecutionStartToCloseTimeout specified when registering\
              \ the workflow type.</p> <p>The duration is specified in seconds, an\
              \ integer greater than or equal to <code>0</code>. You can use <code>NONE</code>\
              \ to specify unlimited duration.</p> <note> <p>An execution start-to-close\
              \ timeout for this workflow execution must be specified either as a\
              \ default for the workflow type or through this parameter. If neither\
              \ this parameter is set nor a default execution start-to-close timeout\
              \ was specified at registration time then a fault is returned.</p> </note>"
          title: executionStartToCloseTimeout
        taskList:
          $ref: '#/components/schemas/StartChildWorkflowExecutionDecisionAttributes_taskList'
        taskPriority:
          allOf:
          - $ref: '#/components/schemas/TaskPriority'
          - description: "<p> A task priority that, if set, specifies the priority\
              \ for a decision task of this workflow execution. This overrides the\
              \ defaultTaskPriority specified when registering the workflow type.\
              \ Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code>\
              \ (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher\
              \ numbers indicate higher priority.</p> <p>For more information about\
              \ setting task priority, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html\"\
              >Setting Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>"
          title: taskPriority
        taskStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>Specifies the maximum duration of decision tasks for\
              \ this workflow execution. This parameter overrides the <code>defaultTaskStartToCloseTimout</code>\
              \ specified when registering the workflow type using <a>RegisterWorkflowType</a>.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>. You can use <code>NONE</code> to specify\
              \ unlimited duration.</p> <note> <p>A task start-to-close timeout for\
              \ this workflow execution must be specified either as a default for\
              \ the workflow type or through this parameter. If neither this parameter\
              \ is set nor a default task start-to-close timeout was specified at\
              \ registration time then a fault is returned.</p> </note>"
          title: taskStartToCloseTimeout
        childPolicy:
          allOf:
          - $ref: '#/components/schemas/ChildPolicy'
          - description: "<p> If set, specifies the policy to use for the child workflow\
              \ executions if the workflow execution being started is terminated by\
              \ calling the <a>TerminateWorkflowExecution</a> action explicitly or\
              \ due to an expired timeout. This policy overrides the default child\
              \ policy specified when registering the workflow type using <a>RegisterWorkflowType</a>.</p>\
              \ <p>The supported child policies are:</p> <ul> <li> <p> <code>TERMINATE</code>\
              \ – The child executions are terminated.</p> </li> <li> <p> <code>REQUEST_CANCEL</code>\
              \ – A request to cancel is attempted for each child execution by recording\
              \ a <code>WorkflowExecutionCancelRequested</code> event in its history.\
              \ It is up to the decider to take appropriate actions when it receives\
              \ an execution history with this event.</p> </li> <li> <p> <code>ABANDON</code>\
              \ – No action is taken. The child executions continue to run.</p> </li>\
              \ </ul> <note> <p>A child policy for this workflow execution must be\
              \ specified either as a default for the workflow type or through this\
              \ parameter. If neither this parameter is set nor a default child policy\
              \ was specified at registration time then a fault is returned.</p> </note>"
          title: childPolicy
        tagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The list of tags to associate with the child workflow execution.
              A maximum of 5 tags can be specified. You can list workflow executions
              with a specific tag by calling <a>ListOpenWorkflowExecutions</a> or
              <a>ListClosedWorkflowExecutions</a> and specifying a <a>TagFilter</a>.
          title: tagList
        lambdaRole:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The IAM role attached to the child workflow execution.
          title: lambdaRole
      required:
      - workflowId
      - workflowType
      title: StartChildWorkflowExecutionDecisionAttributes
      type: object
    ScheduleLambdaFunctionDecisionAttributes:
      description: Decision attributes specified in <code>scheduleLambdaFunctionDecisionAttributes</code>
        within the list of decisions <code>decisions</code> passed to <a>RespondDecisionTaskCompleted</a>.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/FunctionId'
          - description: A string that identifies the Lambda function execution in
              the event history.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/FunctionName'
          - description: "The name, or ARN, of the Lambda function to schedule."
          title: name
        control:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The data attached to the event that the decider can use in
              subsequent workflow tasks. This data isn't sent to the Lambda task.
          title: control
        input:
          allOf:
          - $ref: '#/components/schemas/FunctionInput'
          - description: The optional input data to be supplied to the Lambda function.
          title: input
        startToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>The timeout value, in seconds, after which the Lambda\
              \ function is considered to be failed once it has started. This can\
              \ be any integer from 1-900 (1s-15m).</p> <p>If no value is supplied,\
              \ then a default value of 900s is assumed.</p>"
          title: startToCloseTimeout
      required:
      - id
      - name
      title: ScheduleLambdaFunctionDecisionAttributes
      type: object
    Decision:
      description: "<p>Specifies a decision made by the decider. A decision can be\
        \ one of these types:</p> <ul> <li> <p> <code>CancelTimer</code> – Cancels\
        \ a previously started timer and records a <code>TimerCanceled</code> event\
        \ in the history.</p> </li> <li> <p> <code>CancelWorkflowExecution</code>\
        \ – Closes the workflow execution and records a <code>WorkflowExecutionCanceled</code>\
        \ event in the history.</p> </li> <li> <p> <code>CompleteWorkflowExecution</code>\
        \ – Closes the workflow execution and records a <code>WorkflowExecutionCompleted</code>\
        \ event in the history .</p> </li> <li> <p> <code>ContinueAsNewWorkflowExecution</code>\
        \ – Closes the workflow execution and starts a new workflow execution of the\
        \ same type using the same workflow ID and a unique run Id. A <code>WorkflowExecutionContinuedAsNew</code>\
        \ event is recorded in the history.</p> </li> <li> <p> <code>FailWorkflowExecution</code>\
        \ – Closes the workflow execution and records a <code>WorkflowExecutionFailed</code>\
        \ event in the history.</p> </li> <li> <p> <code>RecordMarker</code> – Records\
        \ a <code>MarkerRecorded</code> event in the history. Markers can be used\
        \ for adding custom information in the history for instance to let deciders\
        \ know that they don't need to look at the history beyond the marker event.</p>\
        \ </li> <li> <p> <code>RequestCancelActivityTask</code> – Attempts to cancel\
        \ a previously scheduled activity task. If the activity task was scheduled\
        \ but has not been assigned to a worker, then it is canceled. If the activity\
        \ task was already assigned to a worker, then the worker is informed that\
        \ cancellation has been requested in the response to <a>RecordActivityTaskHeartbeat</a>.</p>\
        \ </li> <li> <p> <code>RequestCancelExternalWorkflowExecution</code> – Requests\
        \ that a request be made to cancel the specified external workflow execution\
        \ and records a <code>RequestCancelExternalWorkflowExecutionInitiated</code>\
        \ event in the history.</p> </li> <li> <p> <code>ScheduleActivityTask</code>\
        \ – Schedules an activity task.</p> </li> <li> <p> <code>SignalExternalWorkflowExecution</code>\
        \ – Requests a signal to be delivered to the specified external workflow execution\
        \ and records a <code>SignalExternalWorkflowExecutionInitiated</code> event\
        \ in the history.</p> </li> <li> <p> <code>StartChildWorkflowExecution</code>\
        \ – Requests that a child workflow execution be started and records a <code>StartChildWorkflowExecutionInitiated</code>\
        \ event in the history. The child workflow execution is a separate workflow\
        \ execution with its own history.</p> </li> <li> <p> <code>StartTimer</code>\
        \ – Starts a timer for this workflow execution and records a <code>TimerStarted</code>\
        \ event in the history. This timer fires after the specified delay and record\
        \ a <code>TimerFired</code> event.</p> </li> </ul> <p> <b>Access Control</b>\
        \ </p> <p>If you grant permission to use <code>RespondDecisionTaskCompleted</code>,\
        \ you can use IAM policies to express permissions for the list of decisions\
        \ returned by this action as if they were members of the API. Treating decisions\
        \ as a pseudo API maintains a uniform conceptual model and helps keep policies\
        \ readable. For details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p> <p> <b>Decision Failure</b> </p> <p>Decisions can\
        \ fail for several reasons</p> <ul> <li> <p>The ordering of decisions should\
        \ follow a logical flow. Some decisions might not make sense in the current\
        \ context of the workflow execution and therefore fails.</p> </li> <li> <p>A\
        \ limit on your account was reached.</p> </li> <li> <p>The decision lacks\
        \ sufficient permissions.</p> </li> </ul> <p>One of the following events might\
        \ be added to the history to indicate an error. The event attribute's <code>cause</code>\
        \ parameter indicates the cause. If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>,\
        \ the decision failed because it lacked sufficient permissions. For details\
        \ and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
        >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF\
        \ Developer Guide</i>.</p> <ul> <li> <p> <code>ScheduleActivityTaskFailed</code>\
        \ – A <code>ScheduleActivityTask</code> decision failed. This could happen\
        \ if the activity type specified in the decision isn't registered, is in a\
        \ deprecated state, or the decision isn't properly configured.</p> </li> <li>\
        \ <p> <code>RequestCancelActivityTaskFailed</code> – A <code>RequestCancelActivityTask</code>\
        \ decision failed. This could happen if there is no open activity task with\
        \ the specified activityId.</p> </li> <li> <p> <code>StartTimerFailed</code>\
        \ – A <code>StartTimer</code> decision failed. This could happen if there\
        \ is another open timer with the same timerId.</p> </li> <li> <p> <code>CancelTimerFailed</code>\
        \ – A <code>CancelTimer</code> decision failed. This could happen if there\
        \ is no open timer with the specified timerId.</p> </li> <li> <p> <code>StartChildWorkflowExecutionFailed</code>\
        \ – A <code>StartChildWorkflowExecution</code> decision failed. This could\
        \ happen if the workflow type specified isn't registered, is deprecated, or\
        \ the decision isn't properly configured.</p> </li> <li> <p> <code>SignalExternalWorkflowExecutionFailed</code>\
        \ – A <code>SignalExternalWorkflowExecution</code> decision failed. This could\
        \ happen if the <code>workflowID</code> specified in the decision was incorrect.</p>\
        \ </li> <li> <p> <code>RequestCancelExternalWorkflowExecutionFailed</code>\
        \ – A <code>RequestCancelExternalWorkflowExecution</code> decision failed.\
        \ This could happen if the <code>workflowID</code> specified in the decision\
        \ was incorrect.</p> </li> <li> <p> <code>CancelWorkflowExecutionFailed</code>\
        \ – A <code>CancelWorkflowExecution</code> decision failed. This could happen\
        \ if there is an unhandled decision task pending in the workflow execution.</p>\
        \ </li> <li> <p> <code>CompleteWorkflowExecutionFailed</code> – A <code>CompleteWorkflowExecution</code>\
        \ decision failed. This could happen if there is an unhandled decision task\
        \ pending in the workflow execution.</p> </li> <li> <p> <code>ContinueAsNewWorkflowExecutionFailed</code>\
        \ – A <code>ContinueAsNewWorkflowExecution</code> decision failed. This could\
        \ happen if there is an unhandled decision task pending in the workflow execution\
        \ or the ContinueAsNewWorkflowExecution decision was not configured correctly.</p>\
        \ </li> <li> <p> <code>FailWorkflowExecutionFailed</code> – A <code>FailWorkflowExecution</code>\
        \ decision failed. This could happen if there is an unhandled decision task\
        \ pending in the workflow execution.</p> </li> </ul> <p>The preceding error\
        \ events might occur due to an error in the decider logic, which might put\
        \ the workflow execution in an unstable state The cause field in the event\
        \ structure for the error event indicates the cause of the error.</p> <note>\
        \ <p>A workflow execution may be closed by the decider by returning one of\
        \ the following decisions when completing a decision task: <code>CompleteWorkflowExecution</code>,\
        \ <code>FailWorkflowExecution</code>, <code>CancelWorkflowExecution</code>\
        \ and <code>ContinueAsNewWorkflowExecution</code>. An <code>UnhandledDecision</code>\
        \ fault is returned if a workflow closing decision is specified and a signal\
        \ or activity event had been added to the history while the decision task\
        \ was being performed by the decider. Unlike the above situations which are\
        \ logic issues, this fault is always possible because of race conditions in\
        \ a distributed system. The right action here is to call <a>RespondDecisionTaskCompleted</a>\
        \ without any decisions. This would result in another decision task with these\
        \ new events included in the history. The decider should handle the new events\
        \ and may decide to close the workflow execution.</p> </note> <p> <b>How to\
        \ Code a Decision</b> </p> <p>You code a decision by first setting the decision\
        \ type field to one of the above decision values, and then set the corresponding\
        \ attributes field shown below:</p> <ul> <li> <p> <code> <a>ScheduleActivityTaskDecisionAttributes</a>\
        \ </code> </p> </li> <li> <p> <code> <a>RequestCancelActivityTaskDecisionAttributes</a>\
        \ </code> </p> </li> <li> <p> <code> <a>CompleteWorkflowExecutionDecisionAttributes</a>\
        \ </code> </p> </li> <li> <p> <code> <a>FailWorkflowExecutionDecisionAttributes</a>\
        \ </code> </p> </li> <li> <p> <code> <a>CancelWorkflowExecutionDecisionAttributes</a>\
        \ </code> </p> </li> <li> <p> <code> <a>ContinueAsNewWorkflowExecutionDecisionAttributes</a>\
        \ </code> </p> </li> <li> <p> <code> <a>RecordMarkerDecisionAttributes</a>\
        \ </code> </p> </li> <li> <p> <code> <a>StartTimerDecisionAttributes</a> </code>\
        \ </p> </li> <li> <p> <code> <a>CancelTimerDecisionAttributes</a> </code>\
        \ </p> </li> <li> <p> <code> <a>SignalExternalWorkflowExecutionDecisionAttributes</a>\
        \ </code> </p> </li> <li> <p> <code> <a>RequestCancelExternalWorkflowExecutionDecisionAttributes</a>\
        \ </code> </p> </li> <li> <p> <code> <a>StartChildWorkflowExecutionDecisionAttributes</a>\
        \ </code> </p> </li> </ul>"
      properties:
        decisionType:
          allOf:
          - $ref: '#/components/schemas/DecisionType'
          - description: Specifies the type of the decision.
          title: decisionType
        scheduleActivityTaskDecisionAttributes:
          $ref: '#/components/schemas/Decision_scheduleActivityTaskDecisionAttributes'
        requestCancelActivityTaskDecisionAttributes:
          $ref: '#/components/schemas/Decision_requestCancelActivityTaskDecisionAttributes'
        completeWorkflowExecutionDecisionAttributes:
          $ref: '#/components/schemas/Decision_completeWorkflowExecutionDecisionAttributes'
        failWorkflowExecutionDecisionAttributes:
          $ref: '#/components/schemas/Decision_failWorkflowExecutionDecisionAttributes'
        cancelWorkflowExecutionDecisionAttributes:
          $ref: '#/components/schemas/Decision_cancelWorkflowExecutionDecisionAttributes'
        continueAsNewWorkflowExecutionDecisionAttributes:
          $ref: '#/components/schemas/Decision_continueAsNewWorkflowExecutionDecisionAttributes'
        recordMarkerDecisionAttributes:
          $ref: '#/components/schemas/Decision_recordMarkerDecisionAttributes'
        startTimerDecisionAttributes:
          $ref: '#/components/schemas/Decision_startTimerDecisionAttributes'
        cancelTimerDecisionAttributes:
          $ref: '#/components/schemas/Decision_cancelTimerDecisionAttributes'
        signalExternalWorkflowExecutionDecisionAttributes:
          $ref: '#/components/schemas/Decision_signalExternalWorkflowExecutionDecisionAttributes'
        requestCancelExternalWorkflowExecutionDecisionAttributes:
          $ref: '#/components/schemas/Decision_requestCancelExternalWorkflowExecutionDecisionAttributes'
        startChildWorkflowExecutionDecisionAttributes:
          $ref: '#/components/schemas/Decision_startChildWorkflowExecutionDecisionAttributes'
        scheduleLambdaFunctionDecisionAttributes:
          $ref: '#/components/schemas/Decision_scheduleLambdaFunctionDecisionAttributes'
      required:
      - decisionType
      title: Decision
      type: object
    DecisionList:
      items:
        $ref: '#/components/schemas/Decision'
      type: array
    HistoryEventList:
      items:
        $ref: '#/components/schemas/HistoryEvent'
      type: array
    DecisionTaskCompletedEventAttributes:
      description: Provides the details of the <code>DecisionTaskCompleted</code>
        event.
      properties:
        executionContext:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: User defined context for the workflow execution.
          title: executionContext
        scheduledEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskScheduled</code> event that
              was recorded when this decision task was scheduled. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: scheduledEventId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskStarted</code> event recorded
              when this decision task was started. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: startedEventId
      required:
      - scheduledEventId
      - startedEventId
      title: DecisionTaskCompletedEventAttributes
      type: object
    DecisionTaskScheduledEventAttributes:
      description: Provides details about the <code>DecisionTaskScheduled</code> event.
      properties:
        taskList:
          $ref: '#/components/schemas/DecisionTaskScheduledEventAttributes_taskList'
        taskPriority:
          allOf:
          - $ref: '#/components/schemas/TaskPriority'
          - description: "<p> A task priority that, if set, specifies the priority\
              \ for this decision task. Valid values are integers that range from\
              \ Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code>\
              \ (2147483647). Higher numbers indicate higher priority.</p> <p>For\
              \ more information about setting task priority, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html\"\
              >Setting Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>"
          title: taskPriority
        startToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>The maximum duration for this decision task. The task\
              \ is considered timed out if it doesn't completed within this duration.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>. You can use <code>NONE</code> to specify\
              \ unlimited duration.</p>"
          title: startToCloseTimeout
      required:
      - taskList
      title: DecisionTaskScheduledEventAttributes
      type: object
    DecisionTaskStartedEventAttributes:
      description: Provides the details of the <code>DecisionTaskStarted</code> event.
      properties:
        identity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          - description: Identity of the decider making the request. This enables
              diagnostic tracing when problems arise. The form of this identity is
              user defined.
          title: identity
        scheduledEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskScheduled</code> event that
              was recorded when this decision task was scheduled. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: scheduledEventId
      required:
      - scheduledEventId
      title: DecisionTaskStartedEventAttributes
      type: object
    DecisionTaskTimeoutType:
      enum:
      - START_TO_CLOSE
      title: DecisionTaskTimeoutType
      type: string
    DecisionTaskTimedOutEventAttributes:
      description: Provides the details of the <code>DecisionTaskTimedOut</code> event.
      properties:
        timeoutType:
          allOf:
          - $ref: '#/components/schemas/DecisionTaskTimeoutType'
          - description: The type of timeout that expired before the decision task
              could be completed.
          title: timeoutType
        scheduledEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskScheduled</code> event that
              was recorded when this decision task was scheduled. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: scheduledEventId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskStarted</code> event recorded
              when this decision task was started. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: startedEventId
      required:
      - scheduledEventId
      - startedEventId
      - timeoutType
      title: DecisionTaskTimedOutEventAttributes
      type: object
    DurationInDays:
      maxLength: 8
      minLength: 1
      type: string
    DomainConfiguration:
      description: Contains the configuration settings of a domain.
      properties:
        workflowExecutionRetentionPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/DurationInDays'
          - description: The retention period for workflow executions in this domain.
          title: workflowExecutionRetentionPeriodInDays
      required:
      - workflowExecutionRetentionPeriodInDays
      title: DomainConfiguration
      type: object
    DomainInfo:
      description: Contains general information about a domain.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: The name of the domain. This name is unique within the account.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/RegistrationStatus'
          - description: "<p>The status of the domain:</p> <ul> <li> <p> <code>REGISTERED</code>\
              \ – The domain is properly registered and available. You can use this\
              \ domain for registering types and creating new workflow executions.\
              \ </p> </li> <li> <p> <code>DEPRECATED</code> – The domain was deprecated\
              \ using <a>DeprecateDomain</a>, but is still in use. You should not\
              \ create new workflow executions in this domain. </p> </li> </ul>"
          title: status
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the domain provided through <a>RegisterDomain</a>.
          title: description
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the domain.
          title: arn
      required:
      - name
      - status
      title: DomainInfo
      type: object
    DomainInfoList:
      items:
        $ref: '#/components/schemas/DomainInfo'
      type: array
    DurationInSeconds:
      maxLength: 8
      minLength: 1
      type: string
    EventType:
      enum:
      - WorkflowExecutionStarted
      - WorkflowExecutionCancelRequested
      - WorkflowExecutionCompleted
      - CompleteWorkflowExecutionFailed
      - WorkflowExecutionFailed
      - FailWorkflowExecutionFailed
      - WorkflowExecutionTimedOut
      - WorkflowExecutionCanceled
      - CancelWorkflowExecutionFailed
      - WorkflowExecutionContinuedAsNew
      - ContinueAsNewWorkflowExecutionFailed
      - WorkflowExecutionTerminated
      - DecisionTaskScheduled
      - DecisionTaskStarted
      - DecisionTaskCompleted
      - DecisionTaskTimedOut
      - ActivityTaskScheduled
      - ScheduleActivityTaskFailed
      - ActivityTaskStarted
      - ActivityTaskCompleted
      - ActivityTaskFailed
      - ActivityTaskTimedOut
      - ActivityTaskCanceled
      - ActivityTaskCancelRequested
      - RequestCancelActivityTaskFailed
      - WorkflowExecutionSignaled
      - MarkerRecorded
      - RecordMarkerFailed
      - TimerStarted
      - StartTimerFailed
      - TimerFired
      - TimerCanceled
      - CancelTimerFailed
      - StartChildWorkflowExecutionInitiated
      - StartChildWorkflowExecutionFailed
      - ChildWorkflowExecutionStarted
      - ChildWorkflowExecutionCompleted
      - ChildWorkflowExecutionFailed
      - ChildWorkflowExecutionTimedOut
      - ChildWorkflowExecutionCanceled
      - ChildWorkflowExecutionTerminated
      - SignalExternalWorkflowExecutionInitiated
      - SignalExternalWorkflowExecutionFailed
      - ExternalWorkflowExecutionSignaled
      - RequestCancelExternalWorkflowExecutionInitiated
      - RequestCancelExternalWorkflowExecutionFailed
      - ExternalWorkflowExecutionCancelRequested
      - LambdaFunctionScheduled
      - LambdaFunctionStarted
      - LambdaFunctionCompleted
      - LambdaFunctionFailed
      - LambdaFunctionTimedOut
      - ScheduleLambdaFunctionFailed
      - StartLambdaFunctionFailed
      title: EventType
      type: string
    ExecutionStatus:
      enum:
      - OPEN
      - CLOSED
      title: ExecutionStatus
      type: string
    ExternalWorkflowExecutionCancelRequestedEventAttributes:
      description: Provides the details of the <code>ExternalWorkflowExecutionCancelRequested</code>
        event.
      properties:
        workflowExecution:
          $ref: '#/components/schemas/ExternalWorkflowExecutionCancelRequestedEventAttributes_workflowExecution'
        initiatedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>RequestCancelExternalWorkflowExecutionInitiated</code>
              event corresponding to the <code>RequestCancelExternalWorkflowExecution</code>
              decision to cancel this external workflow execution. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: initiatedEventId
      required:
      - initiatedEventId
      - workflowExecution
      title: ExternalWorkflowExecutionCancelRequestedEventAttributes
      type: object
    ExternalWorkflowExecutionSignaledEventAttributes:
      description: Provides the details of the <code>ExternalWorkflowExecutionSignaled</code>
        event.
      properties:
        workflowExecution:
          $ref: '#/components/schemas/ExternalWorkflowExecutionSignaledEventAttributes_workflowExecution'
        initiatedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>SignalExternalWorkflowExecutionInitiated</code>
              event corresponding to the <code>SignalExternalWorkflowExecution</code>
              decision to request this signal. This information can be useful for
              diagnosing problems by tracing back the chain of events leading up to
              this event.
          title: initiatedEventId
      required:
      - initiatedEventId
      - workflowExecution
      title: ExternalWorkflowExecutionSignaledEventAttributes
      type: object
    FailWorkflowExecutionFailedCause:
      enum:
      - UNHANDLED_DECISION
      - OPERATION_NOT_PERMITTED
      title: FailWorkflowExecutionFailedCause
      type: string
    FailWorkflowExecutionFailedEventAttributes:
      description: Provides the details of the <code>FailWorkflowExecutionFailed</code>
        event.
      properties:
        cause:
          allOf:
          - $ref: '#/components/schemas/FailWorkflowExecutionFailedCause'
          - description: "<p>The cause of the failure. This information is generated\
              \ by the system and can be useful for diagnostic purposes.</p> <note>\
              \ <p>If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>,\
              \ the decision failed because it lacked sufficient permissions. For\
              \ details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
              >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon\
              \ SWF Developer Guide</i>.</p> </note>"
          title: cause
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>FailWorkflowExecution</code>
              decision to fail this execution. This information can be useful for
              diagnosing problems by tracing back the chain of events leading up to
              this event.
          title: decisionTaskCompletedEventId
      required:
      - cause
      - decisionTaskCompletedEventId
      title: FailWorkflowExecutionFailedEventAttributes
      type: object
    FunctionId:
      maxLength: 256
      minLength: 1
      type: string
    FunctionInput:
      maxLength: 32768
      minLength: 0
      type: string
    FunctionName:
      maxLength: 64
      minLength: 1
      type: string
    PageSize:
      maximum: 1000
      minimum: 0
      type: integer
    ReverseOrder:
      type: boolean
    WorkflowExecutionStartedEventAttributes:
      description: Provides details of <code>WorkflowExecutionStarted</code> event.
      properties:
        input:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The input provided to the workflow execution.
          title: input
        executionStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>The maximum duration for this workflow execution.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>. You can use <code>NONE</code> to specify\
              \ unlimited duration.</p>"
          title: executionStartToCloseTimeout
        taskStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>The maximum duration of decision tasks for this workflow\
              \ type.</p> <p>The duration is specified in seconds, an integer greater\
              \ than or equal to <code>0</code>. You can use <code>NONE</code> to\
              \ specify unlimited duration.</p>"
          title: taskStartToCloseTimeout
        childPolicy:
          allOf:
          - $ref: '#/components/schemas/ChildPolicy'
          - description: "<p>The policy to use for the child workflow executions if\
              \ this workflow execution is terminated, by calling the <a>TerminateWorkflowExecution</a>\
              \ action explicitly or due to an expired timeout.</p> <p>The supported\
              \ child policies are:</p> <ul> <li> <p> <code>TERMINATE</code> – The\
              \ child executions are terminated.</p> </li> <li> <p> <code>REQUEST_CANCEL</code>\
              \ – A request to cancel is attempted for each child execution by recording\
              \ a <code>WorkflowExecutionCancelRequested</code> event in its history.\
              \ It is up to the decider to take appropriate actions when it receives\
              \ an execution history with this event.</p> </li> <li> <p> <code>ABANDON</code>\
              \ – No action is taken. The child executions continue to run.</p> </li>\
              \ </ul>"
          title: childPolicy
        taskList:
          $ref: '#/components/schemas/WorkflowExecutionStartedEventAttributes_taskList'
        taskPriority:
          allOf:
          - $ref: '#/components/schemas/TaskPriority'
          - description: The priority of the decision tasks in the workflow execution.
          title: taskPriority
        workflowType:
          $ref: '#/components/schemas/WorkflowExecutionStartedEventAttributes_workflowType'
        tagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The list of tags associated with this workflow execution.
              An execution can have up to 5 tags.
          title: tagList
        continuedExecutionRunId:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunIdOptional'
          - description: "If this workflow execution was started due to a <code>ContinueAsNewWorkflowExecution</code>\
              \ decision, then it contains the <code>runId</code> of the previous\
              \ workflow execution that was closed and continued as this execution."
          title: continuedExecutionRunId
        parentWorkflowExecution:
          $ref: '#/components/schemas/WorkflowExecutionStartedEventAttributes_parentWorkflowExecution'
        parentInitiatedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>StartChildWorkflowExecutionInitiated</code>
              event corresponding to the <code>StartChildWorkflowExecution</code>
              <a>Decision</a> to start this workflow execution. The source event with
              this ID can be found in the history of the source workflow execution.
              This information can be useful for diagnosing problems by tracing back
              the chain of events leading up to this event.
          title: parentInitiatedEventId
        lambdaRole:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The IAM role attached to the workflow execution.
          title: lambdaRole
      required:
      - childPolicy
      - taskList
      - workflowType
      title: WorkflowExecutionStartedEventAttributes
      type: object
    WorkflowExecutionCompletedEventAttributes:
      description: Provides the details of the <code>WorkflowExecutionCompleted</code>
        event.
      properties:
        result:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The result produced by the workflow execution upon successful
              completion.
          title: result
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>CompleteWorkflowExecution</code>
              decision to complete this execution. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: decisionTaskCompletedEventId
      required:
      - decisionTaskCompletedEventId
      title: WorkflowExecutionCompletedEventAttributes
      type: object
    WorkflowExecutionFailedEventAttributes:
      description: Provides the details of the <code>WorkflowExecutionFailed</code>
        event.
      properties:
        reason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: The descriptive reason provided for the failure.
          title: reason
        details:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The details of the failure.
          title: details
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>FailWorkflowExecution</code>
              decision to fail this execution. This information can be useful for
              diagnosing problems by tracing back the chain of events leading up to
              this event.
          title: decisionTaskCompletedEventId
      required:
      - decisionTaskCompletedEventId
      title: WorkflowExecutionFailedEventAttributes
      type: object
    WorkflowExecutionTimedOutEventAttributes:
      description: Provides the details of the <code>WorkflowExecutionTimedOut</code>
        event.
      properties:
        timeoutType:
          allOf:
          - $ref: '#/components/schemas/WorkflowExecutionTimeoutType'
          - description: The type of timeout that caused this event.
          title: timeoutType
        childPolicy:
          allOf:
          - $ref: '#/components/schemas/ChildPolicy'
          - description: <p>The policy used for the child workflow executions of this
              workflow execution.</p> <p>The supported child policies are:</p> <ul>
              <li> <p> <code>TERMINATE</code> – The child executions are terminated.</p>
              </li> <li> <p> <code>REQUEST_CANCEL</code> – A request to cancel is
              attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code>
              event in its history. It is up to the decider to take appropriate actions
              when it receives an execution history with this event.</p> </li> <li>
              <p> <code>ABANDON</code> – No action is taken. The child executions
              continue to run.</p> </li> </ul>
          title: childPolicy
      required:
      - childPolicy
      - timeoutType
      title: WorkflowExecutionTimedOutEventAttributes
      type: object
    WorkflowExecutionCanceledEventAttributes:
      description: Provides the details of the <code>WorkflowExecutionCanceled</code>
        event.
      properties:
        details:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The details of the cancellation.
          title: details
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>CancelWorkflowExecution</code>
              decision for this cancellation request. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: decisionTaskCompletedEventId
      required:
      - decisionTaskCompletedEventId
      title: WorkflowExecutionCanceledEventAttributes
      type: object
    WorkflowExecutionContinuedAsNewEventAttributes:
      description: Provides the details of the <code>WorkflowExecutionContinuedAsNew</code>
        event.
      properties:
        input:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The input provided to the new workflow execution.
          title: input
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>ContinueAsNewWorkflowExecution</code>
              decision that started this execution. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: decisionTaskCompletedEventId
        newExecutionRunId:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunId'
          - description: The <code>runId</code> of the new workflow execution.
          title: newExecutionRunId
        executionStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>The total duration allowed for the new workflow execution.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>. You can use <code>NONE</code> to specify\
              \ unlimited duration.</p>"
          title: executionStartToCloseTimeout
        taskList:
          $ref: '#/components/schemas/ContinueAsNewWorkflowExecutionDecisionAttributes_taskList'
        taskPriority:
          allOf:
          - $ref: '#/components/schemas/TaskPriority'
          - description: The priority of the task to use for the decisions of the
              new (continued) workflow execution.
          title: taskPriority
        taskStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>The maximum duration of decision tasks for the new workflow\
              \ execution.</p> <p>The duration is specified in seconds, an integer\
              \ greater than or equal to <code>0</code>. You can use <code>NONE</code>\
              \ to specify unlimited duration.</p>"
          title: taskStartToCloseTimeout
        childPolicy:
          allOf:
          - $ref: '#/components/schemas/ChildPolicy'
          - description: <p>The policy to use for the child workflow executions of
              the new execution if it is terminated by calling the <a>TerminateWorkflowExecution</a>
              action explicitly or due to an expired timeout.</p> <p>The supported
              child policies are:</p> <ul> <li> <p> <code>TERMINATE</code> – The child
              executions are terminated.</p> </li> <li> <p> <code>REQUEST_CANCEL</code>
              – A request to cancel is attempted for each child execution by recording
              a <code>WorkflowExecutionCancelRequested</code> event in its history.
              It is up to the decider to take appropriate actions when it receives
              an execution history with this event.</p> </li> <li> <p> <code>ABANDON</code>
              – No action is taken. The child executions continue to run.</p> </li>
              </ul>
          title: childPolicy
        tagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The list of tags associated with the new workflow execution.
          title: tagList
        workflowType:
          $ref: '#/components/schemas/WorkflowExecutionStartedEventAttributes_workflowType'
        lambdaRole:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The IAM role to attach to the new (continued) workflow execution.
          title: lambdaRole
      required:
      - childPolicy
      - decisionTaskCompletedEventId
      - newExecutionRunId
      - taskList
      - workflowType
      title: WorkflowExecutionContinuedAsNewEventAttributes
      type: object
    WorkflowExecutionTerminatedEventAttributes:
      description: Provides the details of the <code>WorkflowExecutionTerminated</code>
        event.
      properties:
        reason:
          allOf:
          - $ref: '#/components/schemas/TerminateReason'
          - description: The reason provided for the termination.
          title: reason
        details:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The details provided for the termination.
          title: details
        childPolicy:
          allOf:
          - $ref: '#/components/schemas/ChildPolicy'
          - description: <p>The policy used for the child workflow executions of this
              workflow execution.</p> <p>The supported child policies are:</p> <ul>
              <li> <p> <code>TERMINATE</code> – The child executions are terminated.</p>
              </li> <li> <p> <code>REQUEST_CANCEL</code> – A request to cancel is
              attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code>
              event in its history. It is up to the decider to take appropriate actions
              when it receives an execution history with this event.</p> </li> <li>
              <p> <code>ABANDON</code> – No action is taken. The child executions
              continue to run.</p> </li> </ul>
          title: childPolicy
        cause:
          allOf:
          - $ref: '#/components/schemas/WorkflowExecutionTerminatedCause'
          - description: "If set, indicates that the workflow execution was automatically\
              \ terminated, and specifies the cause. This happens if the parent workflow\
              \ execution times out or is terminated and the child policy is set to\
              \ terminate child executions."
          title: cause
      required:
      - childPolicy
      title: WorkflowExecutionTerminatedEventAttributes
      type: object
    WorkflowExecutionCancelRequestedEventAttributes:
      description: Provides the details of the <code>WorkflowExecutionCancelRequested</code>
        event.
      properties:
        externalWorkflowExecution:
          $ref: '#/components/schemas/WorkflowExecutionCancelRequestedEventAttributes_externalWorkflowExecution'
        externalInitiatedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>RequestCancelExternalWorkflowExecutionInitiated</code>
              event corresponding to the <code>RequestCancelExternalWorkflowExecution</code>
              decision to cancel this workflow execution.The source event with this
              ID can be found in the history of the source workflow execution. This
              information can be useful for diagnosing problems by tracing back the
              chain of events leading up to this event.
          title: externalInitiatedEventId
        cause:
          allOf:
          - $ref: '#/components/schemas/WorkflowExecutionCancelRequestedCause'
          - description: "If set, indicates that the request to cancel the workflow\
              \ execution was automatically generated, and specifies the cause. This\
              \ happens if the parent workflow execution times out or is terminated,\
              \ and the child policy is set to cancel child executions."
          title: cause
      title: WorkflowExecutionCancelRequestedEventAttributes
      type: object
    WorkflowExecutionSignaledEventAttributes:
      description: Provides the details of the <code>WorkflowExecutionSignaled</code>
        event.
      properties:
        signalName:
          allOf:
          - $ref: '#/components/schemas/SignalName'
          - description: The name of the signal received. The decider can use the
              signal name and inputs to determine how to the process the signal.
          title: signalName
        input:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The inputs provided with the signal. The decider can use
              the signal name and inputs to determine how to process the signal.
          title: input
        externalWorkflowExecution:
          $ref: '#/components/schemas/WorkflowExecutionSignaledEventAttributes_externalWorkflowExecution'
        externalInitiatedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>SignalExternalWorkflowExecutionInitiated</code>
              event corresponding to the <code>SignalExternalWorkflow</code> decision
              to signal this workflow execution.The source event with this ID can
              be found in the history of the source workflow execution. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event. This field is set only if the signal was initiated
              by another workflow execution.
          title: externalInitiatedEventId
      required:
      - signalName
      title: WorkflowExecutionSignaledEventAttributes
      type: object
    MarkerRecordedEventAttributes:
      description: Provides the details of the <code>MarkerRecorded</code> event.
      properties:
        markerName:
          allOf:
          - $ref: '#/components/schemas/MarkerName'
          - description: The name of the marker.
          title: markerName
        details:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The details of the marker.
          title: details
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>RecordMarker</code>
              decision that requested this marker. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: decisionTaskCompletedEventId
      required:
      - decisionTaskCompletedEventId
      - markerName
      title: MarkerRecordedEventAttributes
      type: object
    RecordMarkerFailedEventAttributes:
      description: Provides the details of the <code>RecordMarkerFailed</code> event.
      properties:
        markerName:
          allOf:
          - $ref: '#/components/schemas/MarkerName'
          - description: The marker's name.
          title: markerName
        cause:
          allOf:
          - $ref: '#/components/schemas/RecordMarkerFailedCause'
          - description: "<p>The cause of the failure. This information is generated\
              \ by the system and can be useful for diagnostic purposes.</p> <note>\
              \ <p>If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>,\
              \ the decision failed because it lacked sufficient permissions. For\
              \ details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
              >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon\
              \ SWF Developer Guide</i>.</p> </note>"
          title: cause
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>RecordMarkerFailed</code>
              decision for this cancellation request. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: decisionTaskCompletedEventId
      required:
      - cause
      - decisionTaskCompletedEventId
      - markerName
      title: RecordMarkerFailedEventAttributes
      type: object
    TimerStartedEventAttributes:
      description: Provides the details of the <code>TimerStarted</code> event.
      properties:
        timerId:
          allOf:
          - $ref: '#/components/schemas/TimerId'
          - description: The unique ID of the timer that was started.
          title: timerId
        control:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: Data attached to the event that can be used by the decider
              in subsequent workflow tasks.
          title: control
        startToFireTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSeconds'
          - description: "<p>The duration of time after which the timer fires.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>.</p>"
          title: startToFireTimeout
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>StartTimer</code> decision
              for this activity task. This information can be useful for diagnosing
              problems by tracing back the chain of events leading up to this event.
          title: decisionTaskCompletedEventId
      required:
      - decisionTaskCompletedEventId
      - startToFireTimeout
      - timerId
      title: TimerStartedEventAttributes
      type: object
    TimerFiredEventAttributes:
      description: Provides the details of the <code>TimerFired</code> event.
      properties:
        timerId:
          allOf:
          - $ref: '#/components/schemas/TimerId'
          - description: The unique ID of the timer that fired.
          title: timerId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>TimerStarted</code> event that was recorded
              when this timer was started. This information can be useful for diagnosing
              problems by tracing back the chain of events leading up to this event.
          title: startedEventId
      required:
      - startedEventId
      - timerId
      title: TimerFiredEventAttributes
      type: object
    TimerCanceledEventAttributes:
      description: ' Provides the details of the <code>TimerCanceled</code> event. '
      properties:
        timerId:
          allOf:
          - $ref: '#/components/schemas/TimerId'
          - description: The unique ID of the timer that was canceled.
          title: timerId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>TimerStarted</code> event that was recorded
              when this timer was started. This information can be useful for diagnosing
              problems by tracing back the chain of events leading up to this event.
          title: startedEventId
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>CancelTimer</code> decision
              to cancel this timer. This information can be useful for diagnosing
              problems by tracing back the chain of events leading up to this event.
          title: decisionTaskCompletedEventId
      required:
      - decisionTaskCompletedEventId
      - startedEventId
      - timerId
      title: TimerCanceledEventAttributes
      type: object
    StartChildWorkflowExecutionInitiatedEventAttributes:
      description: Provides the details of the <code>StartChildWorkflowExecutionInitiated</code>
        event.
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: The <code>workflowId</code> of the child workflow execution.
          title: workflowId
        workflowType:
          $ref: '#/components/schemas/ChildWorkflowExecutionCanceledEventAttributes_workflowType'
        control:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: Data attached to the event that can be used by the decider
              in subsequent decision tasks. This data isn't sent to the activity.
          title: control
        input:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The inputs provided to the child workflow execution.
          title: input
        executionStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>The maximum duration for the child workflow execution.\
              \ If the workflow execution isn't closed within this duration, it is\
              \ timed out and force-terminated.</p> <p>The duration is specified in\
              \ seconds, an integer greater than or equal to <code>0</code>. You can\
              \ use <code>NONE</code> to specify unlimited duration.</p>"
          title: executionStartToCloseTimeout
        taskList:
          $ref: '#/components/schemas/StartChildWorkflowExecutionInitiatedEventAttributes_taskList'
        taskPriority:
          allOf:
          - $ref: '#/components/schemas/TaskPriority'
          - description: "<p> The priority assigned for the decision tasks for this\
              \ workflow execution. Valid values are integers that range from Java's\
              \ <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code>\
              \ (2147483647). Higher numbers indicate higher priority.</p> <p>For\
              \ more information about setting task priority, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html\"\
              >Setting Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>"
          title: taskPriority
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>StartChildWorkflowExecution</code>
              <a>Decision</a> to request this child workflow execution. This information
              can be useful for diagnosing problems by tracing back the cause of events.
          title: decisionTaskCompletedEventId
        childPolicy:
          allOf:
          - $ref: '#/components/schemas/ChildPolicy'
          - description: <p>The policy to use for the child workflow executions if
              this execution gets terminated by explicitly calling the <a>TerminateWorkflowExecution</a>
              action or due to an expired timeout.</p> <p>The supported child policies
              are:</p> <ul> <li> <p> <code>TERMINATE</code> – The child executions
              are terminated.</p> </li> <li> <p> <code>REQUEST_CANCEL</code> – A request
              to cancel is attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code>
              event in its history. It is up to the decider to take appropriate actions
              when it receives an execution history with this event.</p> </li> <li>
              <p> <code>ABANDON</code> – No action is taken. The child executions
              continue to run.</p> </li> </ul>
          title: childPolicy
        taskStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p>The maximum duration allowed for the decision tasks for\
              \ this workflow execution.</p> <p>The duration is specified in seconds,\
              \ an integer greater than or equal to <code>0</code>. You can use <code>NONE</code>\
              \ to specify unlimited duration.</p>"
          title: taskStartToCloseTimeout
        tagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The list of tags to associated with the child workflow execution.
          title: tagList
        lambdaRole:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The IAM role to attach to the child workflow execution.
          title: lambdaRole
      required:
      - childPolicy
      - decisionTaskCompletedEventId
      - taskList
      - workflowId
      - workflowType
      title: StartChildWorkflowExecutionInitiatedEventAttributes
      type: object
    SignalExternalWorkflowExecutionInitiatedEventAttributes:
      description: Provides the details of the <code>SignalExternalWorkflowExecutionInitiated</code>
        event.
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: The <code>workflowId</code> of the external workflow execution.
          title: workflowId
        runId:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunIdOptional'
          - description: The <code>runId</code> of the external workflow execution
              to send the signal to.
          title: runId
        signalName:
          allOf:
          - $ref: '#/components/schemas/SignalName'
          - description: The name of the signal.
          title: signalName
        input:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The input provided to the signal.
          title: input
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>SignalExternalWorkflowExecution</code>
              decision for this signal. This information can be useful for diagnosing
              problems by tracing back the chain of events leading up to this event.
          title: decisionTaskCompletedEventId
        control:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: Data attached to the event that can be used by the decider
              in subsequent decision tasks.
          title: control
      required:
      - decisionTaskCompletedEventId
      - signalName
      - workflowId
      title: SignalExternalWorkflowExecutionInitiatedEventAttributes
      type: object
    SignalExternalWorkflowExecutionFailedEventAttributes:
      description: Provides the details of the <code>SignalExternalWorkflowExecutionFailed</code>
        event.
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: The <code>workflowId</code> of the external workflow execution
              that the signal was being delivered to.
          title: workflowId
        runId:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunIdOptional'
          - description: The <code>runId</code> of the external workflow execution
              that the signal was being delivered to.
          title: runId
        cause:
          allOf:
          - $ref: '#/components/schemas/SignalExternalWorkflowExecutionFailedCause'
          - description: "<p>The cause of the failure. This information is generated\
              \ by the system and can be useful for diagnostic purposes.</p> <note>\
              \ <p>If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>,\
              \ the decision failed because it lacked sufficient permissions. For\
              \ details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
              >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon\
              \ SWF Developer Guide</i>.</p> </note>"
          title: cause
        initiatedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>SignalExternalWorkflowExecutionInitiated</code>
              event corresponding to the <code>SignalExternalWorkflowExecution</code>
              decision to request this signal. This information can be useful for
              diagnosing problems by tracing back the chain of events leading up to
              this event.
          title: initiatedEventId
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>SignalExternalWorkflowExecution</code>
              decision for this signal. This information can be useful for diagnosing
              problems by tracing back the chain of events leading up to this event.
          title: decisionTaskCompletedEventId
        control:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The data attached to the event that the decider can use in
              subsequent workflow tasks. This data isn't sent to the workflow execution.
          title: control
      required:
      - cause
      - decisionTaskCompletedEventId
      - initiatedEventId
      - workflowId
      title: SignalExternalWorkflowExecutionFailedEventAttributes
      type: object
    RequestCancelExternalWorkflowExecutionInitiatedEventAttributes:
      description: Provides the details of the <code>RequestCancelExternalWorkflowExecutionInitiated</code>
        event.
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: The <code>workflowId</code> of the external workflow execution
              to be canceled.
          title: workflowId
        runId:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunIdOptional'
          - description: The <code>runId</code> of the external workflow execution
              to be canceled.
          title: runId
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>RequestCancelExternalWorkflowExecution</code>
              decision for this cancellation request. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: decisionTaskCompletedEventId
        control:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: Data attached to the event that can be used by the decider
              in subsequent workflow tasks.
          title: control
      required:
      - decisionTaskCompletedEventId
      - workflowId
      title: RequestCancelExternalWorkflowExecutionInitiatedEventAttributes
      type: object
    RequestCancelExternalWorkflowExecutionFailedEventAttributes:
      description: Provides the details of the <code>RequestCancelExternalWorkflowExecutionFailed</code>
        event.
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: The <code>workflowId</code> of the external workflow to which
              the cancel request was to be delivered.
          title: workflowId
        runId:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunIdOptional'
          - description: The <code>runId</code> of the external workflow execution.
          title: runId
        cause:
          allOf:
          - $ref: '#/components/schemas/RequestCancelExternalWorkflowExecutionFailedCause'
          - description: "<p>The cause of the failure. This information is generated\
              \ by the system and can be useful for diagnostic purposes.</p> <note>\
              \ <p>If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>,\
              \ the decision failed because it lacked sufficient permissions. For\
              \ details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
              >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon\
              \ SWF Developer Guide</i>.</p> </note>"
          title: cause
        initiatedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>RequestCancelExternalWorkflowExecutionInitiated</code>
              event corresponding to the <code>RequestCancelExternalWorkflowExecution</code>
              decision to cancel this external workflow execution. This information
              can be useful for diagnosing problems by tracing back the chain of events
              leading up to this event.
          title: initiatedEventId
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>RequestCancelExternalWorkflowExecution</code>
              decision for this cancellation request. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: decisionTaskCompletedEventId
        control:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The data attached to the event that the decider can use in
              subsequent workflow tasks. This data isn't sent to the workflow execution.
          title: control
      required:
      - cause
      - decisionTaskCompletedEventId
      - initiatedEventId
      - workflowId
      title: RequestCancelExternalWorkflowExecutionFailedEventAttributes
      type: object
    ScheduleActivityTaskFailedEventAttributes:
      description: Provides the details of the <code>ScheduleActivityTaskFailed</code>
        event.
      properties:
        activityType:
          $ref: '#/components/schemas/ScheduleActivityTaskFailedEventAttributes_activityType'
        activityId:
          allOf:
          - $ref: '#/components/schemas/ActivityId'
          - description: The activityId provided in the <code>ScheduleActivityTask</code>
              decision that failed.
          title: activityId
        cause:
          allOf:
          - $ref: '#/components/schemas/ScheduleActivityTaskFailedCause'
          - description: "<p>The cause of the failure. This information is generated\
              \ by the system and can be useful for diagnostic purposes.</p> <note>\
              \ <p>If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>,\
              \ the decision failed because it lacked sufficient permissions. For\
              \ details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
              >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon\
              \ SWF Developer Guide</i>.</p> </note>"
          title: cause
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision that resulted in the scheduling of this activity task.
              This information can be useful for diagnosing problems by tracing back
              the chain of events leading up to this event.
          title: decisionTaskCompletedEventId
      required:
      - activityId
      - activityType
      - cause
      - decisionTaskCompletedEventId
      title: ScheduleActivityTaskFailedEventAttributes
      type: object
    RequestCancelActivityTaskFailedEventAttributes:
      description: Provides the details of the <code>RequestCancelActivityTaskFailed</code>
        event.
      properties:
        activityId:
          allOf:
          - $ref: '#/components/schemas/ActivityId'
          - description: The activityId provided in the <code>RequestCancelActivityTask</code>
              decision that failed.
          title: activityId
        cause:
          allOf:
          - $ref: '#/components/schemas/RequestCancelActivityTaskFailedCause'
          - description: "<p>The cause of the failure. This information is generated\
              \ by the system and can be useful for diagnostic purposes.</p> <note>\
              \ <p>If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>,\
              \ the decision failed because it lacked sufficient permissions. For\
              \ details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
              >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon\
              \ SWF Developer Guide</i>.</p> </note>"
          title: cause
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>RequestCancelActivityTask</code>
              decision for this cancellation request. This information can be useful
              for diagnosing problems by tracing back the chain of events leading
              up to this event.
          title: decisionTaskCompletedEventId
      required:
      - activityId
      - cause
      - decisionTaskCompletedEventId
      title: RequestCancelActivityTaskFailedEventAttributes
      type: object
    StartTimerFailedEventAttributes:
      description: Provides the details of the <code>StartTimerFailed</code> event.
      properties:
        timerId:
          allOf:
          - $ref: '#/components/schemas/TimerId'
          - description: The timerId provided in the <code>StartTimer</code> decision
              that failed.
          title: timerId
        cause:
          allOf:
          - $ref: '#/components/schemas/StartTimerFailedCause'
          - description: "<p>The cause of the failure. This information is generated\
              \ by the system and can be useful for diagnostic purposes.</p> <note>\
              \ <p>If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>,\
              \ the decision failed because it lacked sufficient permissions. For\
              \ details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
              >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon\
              \ SWF Developer Guide</i>.</p> </note>"
          title: cause
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>StartTimer</code> decision
              for this activity task. This information can be useful for diagnosing
              problems by tracing back the chain of events leading up to this event.
          title: decisionTaskCompletedEventId
      required:
      - cause
      - decisionTaskCompletedEventId
      - timerId
      title: StartTimerFailedEventAttributes
      type: object
    StartChildWorkflowExecutionFailedEventAttributes:
      description: Provides the details of the <code>StartChildWorkflowExecutionFailed</code>
        event.
      properties:
        workflowType:
          $ref: '#/components/schemas/StartChildWorkflowExecutionFailedEventAttributes_workflowType'
        cause:
          allOf:
          - $ref: '#/components/schemas/StartChildWorkflowExecutionFailedCause'
          - description: "<p>The cause of the failure. This information is generated\
              \ by the system and can be useful for diagnostic purposes.</p> <note>\
              \ <p>When <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>,\
              \ the decision fails because it lacks sufficient permissions. For details\
              \ and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
              > Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon\
              \ SWF Developer Guide</i>.</p> </note>"
          title: cause
        workflowId:
          allOf:
          - $ref: '#/components/schemas/WorkflowId'
          - description: The <code>workflowId</code> of the child workflow execution.
          title: workflowId
        initiatedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: "<p>When the <code>cause</code> is <code>WORKFLOW_ALREADY_RUNNING</code>,\
              \ <code>initiatedEventId</code> is the ID of the <code>StartChildWorkflowExecutionInitiated</code>\
              \ event that corresponds to the <code>StartChildWorkflowExecution</code>\
              \ <a>Decision</a> to start the workflow execution. You can use this\
              \ information to diagnose problems by tracing back the chain of events\
              \ leading up to this event.</p> <p>When the <code>cause</code> isn't\
              \ <code>WORKFLOW_ALREADY_RUNNING</code>, <code>initiatedEventId</code>\
              \ is set to <code>0</code> because the <code>StartChildWorkflowExecutionInitiated</code>\
              \ event doesn't exist.</p>"
          title: initiatedEventId
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the <code>DecisionTaskCompleted</code> event corresponding
              to the decision task that resulted in the <code>StartChildWorkflowExecution</code>
              <a>Decision</a> to request this child workflow execution. This information
              can be useful for diagnosing problems by tracing back the chain of events.
          title: decisionTaskCompletedEventId
        control:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The data attached to the event that the decider can use in
              subsequent workflow tasks. This data isn't sent to the child workflow
              execution.
          title: control
      required:
      - cause
      - decisionTaskCompletedEventId
      - initiatedEventId
      - workflowId
      - workflowType
      title: StartChildWorkflowExecutionFailedEventAttributes
      type: object
    LambdaFunctionScheduledEventAttributes:
      description: Provides the details of the <code>LambdaFunctionScheduled</code>
        event. It isn't set for other event types.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/FunctionId'
          - description: The unique ID of the Lambda task.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/FunctionName'
          - description: The name of the Lambda function.
          title: name
        control:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: Data attached to the event that the decider can use in subsequent
              workflow tasks. This data isn't sent to the Lambda task.
          title: control
        input:
          allOf:
          - $ref: '#/components/schemas/FunctionInput'
          - description: The input provided to the Lambda task.
          title: input
        startToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: The maximum amount of time a worker can take to process the
              Lambda task.
          title: startToCloseTimeout
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: "The ID of the <code>LambdaFunctionCompleted</code> event\
              \ corresponding to the decision that resulted in scheduling this activity\
              \ task. To help diagnose issues, use this information to trace back\
              \ the chain of events leading up to this event."
          title: decisionTaskCompletedEventId
      required:
      - decisionTaskCompletedEventId
      - id
      - name
      title: LambdaFunctionScheduledEventAttributes
      type: object
    LambdaFunctionStartedEventAttributes:
      description: Provides the details of the <code>LambdaFunctionStarted</code>
        event. It isn't set for other event types.
      properties:
        scheduledEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: "The ID of the <code>LambdaFunctionScheduled</code> event\
              \ that was recorded when this activity task was scheduled. To help diagnose\
              \ issues, use this information to trace back the chain of events leading\
              \ up to this event."
          title: scheduledEventId
      required:
      - scheduledEventId
      title: LambdaFunctionStartedEventAttributes
      type: object
    LambdaFunctionCompletedEventAttributes:
      description: Provides the details of the <code>LambdaFunctionCompleted</code>
        event. It isn't set for other event types.
      properties:
        scheduledEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: "The ID of the <code>LambdaFunctionScheduled</code> event\
              \ that was recorded when this Lambda task was scheduled. To help diagnose\
              \ issues, use this information to trace back the chain of events leading\
              \ up to this event."
          title: scheduledEventId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: "The ID of the <code>LambdaFunctionStarted</code> event recorded\
              \ when this activity task started. To help diagnose issues, use this\
              \ information to trace back the chain of events leading up to this event."
          title: startedEventId
        result:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The results of the Lambda task.
          title: result
      required:
      - scheduledEventId
      - startedEventId
      title: LambdaFunctionCompletedEventAttributes
      type: object
    LambdaFunctionFailedEventAttributes:
      description: Provides the details of the <code>LambdaFunctionFailed</code> event.
        It isn't set for other event types.
      properties:
        scheduledEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: "The ID of the <code>LambdaFunctionScheduled</code> event\
              \ that was recorded when this activity task was scheduled. To help diagnose\
              \ issues, use this information to trace back the chain of events leading\
              \ up to this event."
          title: scheduledEventId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: "The ID of the <code>LambdaFunctionStarted</code> event recorded\
              \ when this activity task started. To help diagnose issues, use this\
              \ information to trace back the chain of events leading up to this event."
          title: startedEventId
        reason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          - description: The reason provided for the failure.
          title: reason
        details:
          allOf:
          - $ref: '#/components/schemas/Data'
          - description: The details of the failure.
          title: details
      required:
      - scheduledEventId
      - startedEventId
      title: LambdaFunctionFailedEventAttributes
      type: object
    LambdaFunctionTimedOutEventAttributes:
      description: Provides details of the <code>LambdaFunctionTimedOut</code> event.
      properties:
        scheduledEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: "The ID of the <code>LambdaFunctionScheduled</code> event\
              \ that was recorded when this activity task was scheduled. To help diagnose\
              \ issues, use this information to trace back the chain of events leading\
              \ up to this event."
          title: scheduledEventId
        startedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: "The ID of the <code>ActivityTaskStarted</code> event that\
              \ was recorded when this activity task started. To help diagnose issues,\
              \ use this information to trace back the chain of events leading up\
              \ to this event."
          title: startedEventId
        timeoutType:
          allOf:
          - $ref: '#/components/schemas/LambdaFunctionTimeoutType'
          - description: The type of the timeout that caused this event.
          title: timeoutType
      required:
      - scheduledEventId
      - startedEventId
      title: LambdaFunctionTimedOutEventAttributes
      type: object
    ScheduleLambdaFunctionFailedEventAttributes:
      description: Provides the details of the <code>ScheduleLambdaFunctionFailed</code>
        event. It isn't set for other event types.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/FunctionId'
          - description: 'The ID provided in the <code>ScheduleLambdaFunction</code>
              decision that failed. '
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/FunctionName'
          - description: The name of the Lambda function.
          title: name
        cause:
          allOf:
          - $ref: '#/components/schemas/ScheduleLambdaFunctionFailedCause'
          - description: "<p>The cause of the failure. To help diagnose issues, use\
              \ this information to trace back the chain of events leading up to this\
              \ event.</p> <note> <p>If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>,\
              \ the decision failed because it lacked sufficient permissions. For\
              \ details and example IAM policies, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html\"\
              >Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon\
              \ SWF Developer Guide</i>.</p> </note>"
          title: cause
        decisionTaskCompletedEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: "The ID of the <code>LambdaFunctionCompleted</code> event\
              \ corresponding to the decision that resulted in scheduling this Lambda\
              \ task. To help diagnose issues, use this information to trace back\
              \ the chain of events leading up to this event."
          title: decisionTaskCompletedEventId
      required:
      - cause
      - decisionTaskCompletedEventId
      - id
      - name
      title: ScheduleLambdaFunctionFailedEventAttributes
      type: object
    StartLambdaFunctionFailedEventAttributes:
      description: Provides the details of the <code>StartLambdaFunctionFailed</code>
        event. It isn't set for other event types.
      properties:
        scheduledEventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: "The ID of the <code>ActivityTaskScheduled</code> event that\
              \ was recorded when this activity task was scheduled. To help diagnose\
              \ issues, use this information to trace back the chain of events leading\
              \ up to this event."
          title: scheduledEventId
        cause:
          allOf:
          - $ref: '#/components/schemas/StartLambdaFunctionFailedCause'
          - description: "<p>The cause of the failure. To help diagnose issues, use\
              \ this information to trace back the chain of events leading up to this\
              \ event.</p> <note> <p>If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>,\
              \ the decision failed because the IAM role attached to the execution\
              \ lacked sufficient permissions. For details and example IAM policies,\
              \ see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html\"\
              >Lambda Tasks</a> in the <i>Amazon SWF Developer Guide</i>.</p> </note>"
          title: cause
        message:
          allOf:
          - $ref: '#/components/schemas/CauseMessage'
          - description: A description that can help diagnose the cause of the fault.
          title: message
      title: StartLambdaFunctionFailedEventAttributes
      type: object
    HistoryEvent:
      description: "<p>Event within a workflow execution. A history event can be one\
        \ of these types:</p> <ul> <li> <p> <code>ActivityTaskCancelRequested</code>\
        \ – A <code>RequestCancelActivityTask</code> decision was received by the\
        \ system.</p> </li> <li> <p> <code>ActivityTaskCanceled</code> – The activity\
        \ task was successfully canceled.</p> </li> <li> <p> <code>ActivityTaskCompleted</code>\
        \ – An activity worker successfully completed an activity task by calling\
        \ <a>RespondActivityTaskCompleted</a>.</p> </li> <li> <p> <code>ActivityTaskFailed</code>\
        \ – An activity worker failed an activity task by calling <a>RespondActivityTaskFailed</a>.</p>\
        \ </li> <li> <p> <code>ActivityTaskScheduled</code> – An activity task was\
        \ scheduled for execution.</p> </li> <li> <p> <code>ActivityTaskStarted</code>\
        \ – The scheduled activity task was dispatched to a worker.</p> </li> <li>\
        \ <p> <code>ActivityTaskTimedOut</code> – The activity task timed out.</p>\
        \ </li> <li> <p> <code>CancelTimerFailed</code> – Failed to process CancelTimer\
        \ decision. This happens when the decision isn't configured properly, for\
        \ example no timer exists with the specified timer Id.</p> </li> <li> <p>\
        \ <code>CancelWorkflowExecutionFailed</code> – A request to cancel a workflow\
        \ execution failed.</p> </li> <li> <p> <code>ChildWorkflowExecutionCanceled</code>\
        \ – A child workflow execution, started by this workflow execution, was canceled\
        \ and closed.</p> </li> <li> <p> <code>ChildWorkflowExecutionCompleted</code>\
        \ – A child workflow execution, started by this workflow execution, completed\
        \ successfully and was closed.</p> </li> <li> <p> <code>ChildWorkflowExecutionFailed</code>\
        \ – A child workflow execution, started by this workflow execution, failed\
        \ to complete successfully and was closed.</p> </li> <li> <p> <code>ChildWorkflowExecutionStarted</code>\
        \ – A child workflow execution was successfully started.</p> </li> <li> <p>\
        \ <code>ChildWorkflowExecutionTerminated</code> – A child workflow execution,\
        \ started by this workflow execution, was terminated.</p> </li> <li> <p> <code>ChildWorkflowExecutionTimedOut</code>\
        \ – A child workflow execution, started by this workflow execution, timed\
        \ out and was closed.</p> </li> <li> <p> <code>CompleteWorkflowExecutionFailed</code>\
        \ – The workflow execution failed to complete.</p> </li> <li> <p> <code>ContinueAsNewWorkflowExecutionFailed</code>\
        \ – The workflow execution failed to complete after being continued as a new\
        \ workflow execution.</p> </li> <li> <p> <code>DecisionTaskCompleted</code>\
        \ – The decider successfully completed a decision task by calling <a>RespondDecisionTaskCompleted</a>.</p>\
        \ </li> <li> <p> <code>DecisionTaskScheduled</code> – A decision task was\
        \ scheduled for the workflow execution.</p> </li> <li> <p> <code>DecisionTaskStarted</code>\
        \ – The decision task was dispatched to a decider.</p> </li> <li> <p> <code>DecisionTaskTimedOut</code>\
        \ – The decision task timed out.</p> </li> <li> <p> <code>ExternalWorkflowExecutionCancelRequested</code>\
        \ – Request to cancel an external workflow execution was successfully delivered\
        \ to the target execution.</p> </li> <li> <p> <code>ExternalWorkflowExecutionSignaled</code>\
        \ – A signal, requested by this workflow execution, was successfully delivered\
        \ to the target external workflow execution.</p> </li> <li> <p> <code>FailWorkflowExecutionFailed</code>\
        \ – A request to mark a workflow execution as failed, itself failed.</p> </li>\
        \ <li> <p> <code>MarkerRecorded</code> – A marker was recorded in the workflow\
        \ history as the result of a <code>RecordMarker</code> decision.</p> </li>\
        \ <li> <p> <code>RecordMarkerFailed</code> – A <code>RecordMarker</code> decision\
        \ was returned as failed.</p> </li> <li> <p> <code>RequestCancelActivityTaskFailed</code>\
        \ – Failed to process RequestCancelActivityTask decision. This happens when\
        \ the decision isn't configured properly.</p> </li> <li> <p> <code>RequestCancelExternalWorkflowExecutionFailed</code>\
        \ – Request to cancel an external workflow execution failed.</p> </li> <li>\
        \ <p> <code>RequestCancelExternalWorkflowExecutionInitiated</code> – A request\
        \ was made to request the cancellation of an external workflow execution.</p>\
        \ </li> <li> <p> <code>ScheduleActivityTaskFailed</code> – Failed to process\
        \ ScheduleActivityTask decision. This happens when the decision isn't configured\
        \ properly, for example the activity type specified isn't registered.</p>\
        \ </li> <li> <p> <code>SignalExternalWorkflowExecutionFailed</code> – The\
        \ request to signal an external workflow execution failed.</p> </li> <li>\
        \ <p> <code>SignalExternalWorkflowExecutionInitiated</code> – A request to\
        \ signal an external workflow was made.</p> </li> <li> <p> <code>StartActivityTaskFailed</code>\
        \ – A scheduled activity task failed to start.</p> </li> <li> <p> <code>StartChildWorkflowExecutionFailed</code>\
        \ – Failed to process StartChildWorkflowExecution decision. This happens when\
        \ the decision isn't configured properly, for example the workflow type specified\
        \ isn't registered.</p> </li> <li> <p> <code>StartChildWorkflowExecutionInitiated</code>\
        \ – A request was made to start a child workflow execution.</p> </li> <li>\
        \ <p> <code>StartTimerFailed</code> – Failed to process StartTimer decision.\
        \ This happens when the decision isn't configured properly, for example a\
        \ timer already exists with the specified timer Id.</p> </li> <li> <p> <code>TimerCanceled</code>\
        \ – A timer, previously started for this workflow execution, was successfully\
        \ canceled.</p> </li> <li> <p> <code>TimerFired</code> – A timer, previously\
        \ started for this workflow execution, fired.</p> </li> <li> <p> <code>TimerStarted</code>\
        \ – A timer was started for the workflow execution due to a <code>StartTimer</code>\
        \ decision.</p> </li> <li> <p> <code>WorkflowExecutionCancelRequested</code>\
        \ – A request to cancel this workflow execution was made.</p> </li> <li> <p>\
        \ <code>WorkflowExecutionCanceled</code> – The workflow execution was successfully\
        \ canceled and closed.</p> </li> <li> <p> <code>WorkflowExecutionCompleted</code>\
        \ – The workflow execution was closed due to successful completion.</p> </li>\
        \ <li> <p> <code>WorkflowExecutionContinuedAsNew</code> – The workflow execution\
        \ was closed and a new execution of the same type was created with the same\
        \ workflowId.</p> </li> <li> <p> <code>WorkflowExecutionFailed</code> – The\
        \ workflow execution closed due to a failure.</p> </li> <li> <p> <code>WorkflowExecutionSignaled</code>\
        \ – An external signal was received for the workflow execution.</p> </li>\
        \ <li> <p> <code>WorkflowExecutionStarted</code> – The workflow execution\
        \ was started.</p> </li> <li> <p> <code>WorkflowExecutionTerminated</code>\
        \ – The workflow execution was terminated.</p> </li> <li> <p> <code>WorkflowExecutionTimedOut</code>\
        \ – The workflow execution was closed because a time out was exceeded.</p>\
        \ </li> </ul>"
      properties:
        eventTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the event occurred.
          title: eventTimestamp
        eventType:
          allOf:
          - $ref: '#/components/schemas/EventType'
          - description: The type of the history event.
          title: eventType
        eventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The system generated ID of the event. This ID uniquely identifies
              the event with in the workflow execution history.
          title: eventId
        workflowExecutionStartedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_workflowExecutionStartedEventAttributes'
        workflowExecutionCompletedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_workflowExecutionCompletedEventAttributes'
        completeWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_completeWorkflowExecutionFailedEventAttributes'
        workflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_workflowExecutionFailedEventAttributes'
        failWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_failWorkflowExecutionFailedEventAttributes'
        workflowExecutionTimedOutEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_workflowExecutionTimedOutEventAttributes'
        workflowExecutionCanceledEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_workflowExecutionCanceledEventAttributes'
        cancelWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_cancelWorkflowExecutionFailedEventAttributes'
        workflowExecutionContinuedAsNewEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_workflowExecutionContinuedAsNewEventAttributes'
        continueAsNewWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_continueAsNewWorkflowExecutionFailedEventAttributes'
        workflowExecutionTerminatedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_workflowExecutionTerminatedEventAttributes'
        workflowExecutionCancelRequestedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_workflowExecutionCancelRequestedEventAttributes'
        decisionTaskScheduledEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_decisionTaskScheduledEventAttributes'
        decisionTaskStartedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_decisionTaskStartedEventAttributes'
        decisionTaskCompletedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_decisionTaskCompletedEventAttributes'
        decisionTaskTimedOutEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_decisionTaskTimedOutEventAttributes'
        activityTaskScheduledEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_activityTaskScheduledEventAttributes'
        activityTaskStartedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_activityTaskStartedEventAttributes'
        activityTaskCompletedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_activityTaskCompletedEventAttributes'
        activityTaskFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_activityTaskFailedEventAttributes'
        activityTaskTimedOutEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_activityTaskTimedOutEventAttributes'
        activityTaskCanceledEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_activityTaskCanceledEventAttributes'
        activityTaskCancelRequestedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_activityTaskCancelRequestedEventAttributes'
        workflowExecutionSignaledEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_workflowExecutionSignaledEventAttributes'
        markerRecordedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_markerRecordedEventAttributes'
        recordMarkerFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_recordMarkerFailedEventAttributes'
        timerStartedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_timerStartedEventAttributes'
        timerFiredEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_timerFiredEventAttributes'
        timerCanceledEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_timerCanceledEventAttributes'
        startChildWorkflowExecutionInitiatedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_startChildWorkflowExecutionInitiatedEventAttributes'
        childWorkflowExecutionStartedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_childWorkflowExecutionStartedEventAttributes'
        childWorkflowExecutionCompletedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_childWorkflowExecutionCompletedEventAttributes'
        childWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_childWorkflowExecutionFailedEventAttributes'
        childWorkflowExecutionTimedOutEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_childWorkflowExecutionTimedOutEventAttributes'
        childWorkflowExecutionCanceledEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_childWorkflowExecutionCanceledEventAttributes'
        childWorkflowExecutionTerminatedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_childWorkflowExecutionTerminatedEventAttributes'
        signalExternalWorkflowExecutionInitiatedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_signalExternalWorkflowExecutionInitiatedEventAttributes'
        externalWorkflowExecutionSignaledEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_externalWorkflowExecutionSignaledEventAttributes'
        signalExternalWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_signalExternalWorkflowExecutionFailedEventAttributes'
        externalWorkflowExecutionCancelRequestedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_externalWorkflowExecutionCancelRequestedEventAttributes'
        requestCancelExternalWorkflowExecutionInitiatedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_requestCancelExternalWorkflowExecutionInitiatedEventAttributes'
        requestCancelExternalWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_requestCancelExternalWorkflowExecutionFailedEventAttributes'
        scheduleActivityTaskFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_scheduleActivityTaskFailedEventAttributes'
        requestCancelActivityTaskFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_requestCancelActivityTaskFailedEventAttributes'
        startTimerFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_startTimerFailedEventAttributes'
        cancelTimerFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_cancelTimerFailedEventAttributes'
        startChildWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_startChildWorkflowExecutionFailedEventAttributes'
        lambdaFunctionScheduledEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_lambdaFunctionScheduledEventAttributes'
        lambdaFunctionStartedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_lambdaFunctionStartedEventAttributes'
        lambdaFunctionCompletedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_lambdaFunctionCompletedEventAttributes'
        lambdaFunctionFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_lambdaFunctionFailedEventAttributes'
        lambdaFunctionTimedOutEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_lambdaFunctionTimedOutEventAttributes'
        scheduleLambdaFunctionFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_scheduleLambdaFunctionFailedEventAttributes'
        startLambdaFunctionFailedEventAttributes:
          $ref: '#/components/schemas/HistoryEvent_startLambdaFunctionFailedEventAttributes'
      required:
      - eventId
      - eventTimestamp
      - eventType
      title: HistoryEvent
      type: object
    LambdaFunctionTimeoutType:
      enum:
      - START_TO_CLOSE
      title: LambdaFunctionTimeoutType
      type: string
    ResourceTagList:
      items:
        $ref: '#/components/schemas/ResourceTag'
      type: array
    MarkerName:
      maxLength: 256
      minLength: 1
      type: string
    OpenDecisionTasksCount:
      maximum: 1
      minimum: 0
      type: integer
    Truncated:
      type: boolean
    StartAtPreviousStartedEvent:
      type: boolean
    RecordMarkerFailedCause:
      enum:
      - OPERATION_NOT_PERMITTED
      title: RecordMarkerFailedCause
      type: string
    RequestCancelActivityTaskFailedCause:
      enum:
      - ACTIVITY_ID_UNKNOWN
      - OPERATION_NOT_PERMITTED
      title: RequestCancelActivityTaskFailedCause
      type: string
    WorkflowId:
      maxLength: 256
      minLength: 1
      type: string
    WorkflowRunIdOptional:
      maxLength: 64
      type: string
    RequestCancelExternalWorkflowExecutionFailedCause:
      enum:
      - UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION
      - REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED
      - OPERATION_NOT_PERMITTED
      title: RequestCancelExternalWorkflowExecutionFailedCause
      type: string
    ResourceTagKey:
      maxLength: 128
      minLength: 1
      title: ResourceTagKey
      type: string
    ResourceTagValue:
      maxLength: 256
      type: string
    ResourceTag:
      description: "<p>Tags are key-value pairs that can be associated with Amazon\
        \ SWF state machines and activities.</p> <p>Tags may only contain unicode\
        \ letters, digits, whitespace, or these symbols: <code>_ . : / = + - @</code>.</p>"
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/ResourceTagKey'
          - description: The key of a tag.
          title: key
        value:
          allOf:
          - $ref: '#/components/schemas/ResourceTagValue'
          - description: The value of a tag.
          title: value
      required:
      - key
      title: ResourceTag
      type: object
    ResourceTagKeyList:
      items:
        $ref: '#/components/schemas/ResourceTagKey'
      type: array
    WorkflowRunId:
      maxLength: 64
      minLength: 1
      type: string
    ScheduleActivityTaskFailedCause:
      enum:
      - ACTIVITY_TYPE_DEPRECATED
      - ACTIVITY_TYPE_DOES_NOT_EXIST
      - ACTIVITY_ID_ALREADY_IN_USE
      - OPEN_ACTIVITIES_LIMIT_EXCEEDED
      - ACTIVITY_CREATION_RATE_EXCEEDED
      - DEFAULT_SCHEDULE_TO_CLOSE_TIMEOUT_UNDEFINED
      - DEFAULT_TASK_LIST_UNDEFINED
      - DEFAULT_SCHEDULE_TO_START_TIMEOUT_UNDEFINED
      - DEFAULT_START_TO_CLOSE_TIMEOUT_UNDEFINED
      - DEFAULT_HEARTBEAT_TIMEOUT_UNDEFINED
      - OPERATION_NOT_PERMITTED
      title: ScheduleActivityTaskFailedCause
      type: string
    ScheduleLambdaFunctionFailedCause:
      enum:
      - ID_ALREADY_IN_USE
      - OPEN_LAMBDA_FUNCTIONS_LIMIT_EXCEEDED
      - LAMBDA_FUNCTION_CREATION_RATE_EXCEEDED
      - LAMBDA_SERVICE_NOT_AVAILABLE_IN_REGION
      title: ScheduleLambdaFunctionFailedCause
      type: string
    SignalName:
      maxLength: 256
      minLength: 1
      type: string
    SignalExternalWorkflowExecutionFailedCause:
      enum:
      - UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION
      - SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED
      - OPERATION_NOT_PERMITTED
      title: SignalExternalWorkflowExecutionFailedCause
      type: string
    StartChildWorkflowExecutionFailedCause:
      enum:
      - WORKFLOW_TYPE_DOES_NOT_EXIST
      - WORKFLOW_TYPE_DEPRECATED
      - OPEN_CHILDREN_LIMIT_EXCEEDED
      - OPEN_WORKFLOWS_LIMIT_EXCEEDED
      - CHILD_CREATION_RATE_EXCEEDED
      - WORKFLOW_ALREADY_RUNNING
      - DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED
      - DEFAULT_TASK_LIST_UNDEFINED
      - DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED
      - DEFAULT_CHILD_POLICY_UNDEFINED
      - OPERATION_NOT_PERMITTED
      title: StartChildWorkflowExecutionFailedCause
      type: string
    StartLambdaFunctionFailedCause:
      enum:
      - ASSUME_ROLE_FAILED
      title: StartLambdaFunctionFailedCause
      type: string
    StartTimerFailedCause:
      enum:
      - TIMER_ID_ALREADY_IN_USE
      - OPEN_TIMERS_LIMIT_EXCEEDED
      - TIMER_CREATION_RATE_EXCEEDED
      - OPERATION_NOT_PERMITTED
      title: StartTimerFailedCause
      type: string
    Tag:
      maxLength: 256
      minLength: 0
      title: Tag
      type: string
    TerminateReason:
      maxLength: 256
      type: string
    VersionOptional:
      maxLength: 64
      type: string
    WorkflowExecutionCancelRequestedCause:
      enum:
      - CHILD_POLICY_APPLIED
      title: WorkflowExecutionCancelRequestedCause
      type: string
    WorkflowExecutionConfiguration:
      description: "The configuration settings for a workflow execution including\
        \ timeout values, tasklist etc. These configuration settings are determined\
        \ from the defaults specified when registering the workflow type and those\
        \ specified when starting the workflow execution."
      properties:
        taskStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSeconds'
          - description: "<p>The maximum duration allowed for decision tasks for this\
              \ workflow execution.</p> <p>The duration is specified in seconds, an\
              \ integer greater than or equal to <code>0</code>. You can use <code>NONE</code>\
              \ to specify unlimited duration.</p>"
          title: taskStartToCloseTimeout
        executionStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSeconds'
          - description: "<p>The total duration for this workflow execution.</p> <p>The\
              \ duration is specified in seconds, an integer greater than or equal\
              \ to <code>0</code>. You can use <code>NONE</code> to specify unlimited\
              \ duration.</p>"
          title: executionStartToCloseTimeout
        taskList:
          $ref: '#/components/schemas/WorkflowExecutionConfiguration_taskList'
        taskPriority:
          allOf:
          - $ref: '#/components/schemas/TaskPriority'
          - description: "<p>The priority assigned to decision tasks for this workflow\
              \ execution. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code>\
              \ (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher\
              \ numbers indicate higher priority.</p> <p>For more information about\
              \ setting task priority, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html\"\
              >Setting Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>"
          title: taskPriority
        childPolicy:
          allOf:
          - $ref: '#/components/schemas/ChildPolicy'
          - description: "<p>The policy to use for the child workflow executions if\
              \ this workflow execution is terminated, by calling the <a>TerminateWorkflowExecution</a>\
              \ action explicitly or due to an expired timeout.</p> <p>The supported\
              \ child policies are:</p> <ul> <li> <p> <code>TERMINATE</code> – The\
              \ child executions are terminated.</p> </li> <li> <p> <code>REQUEST_CANCEL</code>\
              \ – A request to cancel is attempted for each child execution by recording\
              \ a <code>WorkflowExecutionCancelRequested</code> event in its history.\
              \ It is up to the decider to take appropriate actions when it receives\
              \ an execution history with this event.</p> </li> <li> <p> <code>ABANDON</code>\
              \ – No action is taken. The child executions continue to run.</p> </li>\
              \ </ul>"
          title: childPolicy
        lambdaRole:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The IAM role attached to the child workflow execution.
          title: lambdaRole
      required:
      - childPolicy
      - executionStartToCloseTimeout
      - taskList
      - taskStartToCloseTimeout
      title: WorkflowExecutionConfiguration
      type: object
    WorkflowExecutionInfo:
      description: Contains information about a workflow execution.
      properties:
        execution:
          $ref: '#/components/schemas/WorkflowExecutionInfo_execution'
        workflowType:
          $ref: '#/components/schemas/WorkflowExecutionInfo_workflowType'
        startTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the execution was started.
          title: startTimestamp
        closeTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the workflow execution was closed. Set only
              if the execution status is CLOSED.
          title: closeTimestamp
        executionStatus:
          allOf:
          - $ref: '#/components/schemas/ExecutionStatus'
          - description: The current status of the execution.
          title: executionStatus
        closeStatus:
          allOf:
          - $ref: '#/components/schemas/CloseStatus'
          - description: <p>If the execution status is closed then this specifies
              how the execution was closed:</p> <ul> <li> <p> <code>COMPLETED</code>
              – the execution was successfully completed.</p> </li> <li> <p> <code>CANCELED</code>
              – the execution was canceled.Cancellation allows the implementation
              to gracefully clean up before the execution is closed.</p> </li> <li>
              <p> <code>TERMINATED</code> – the execution was force terminated.</p>
              </li> <li> <p> <code>FAILED</code> – the execution failed to complete.</p>
              </li> <li> <p> <code>TIMED_OUT</code> – the execution did not complete
              in the alloted time and was automatically timed out.</p> </li> <li>
              <p> <code>CONTINUED_AS_NEW</code> – the execution is logically continued.
              This means the current execution was completed and a new execution was
              started to carry on the workflow.</p> </li> </ul>
          title: closeStatus
        parent:
          $ref: '#/components/schemas/WorkflowExecutionInfo_parent'
        tagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The list of tags associated with the workflow execution.
              Tags can be used to identify and list workflow executions of interest
              through the visibility APIs. A workflow execution can have a maximum
              of 5 tags.
          title: tagList
        cancelRequested:
          allOf:
          - $ref: '#/components/schemas/Canceled'
          - description: Set to true if a cancellation is requested for this workflow
              execution.
          title: cancelRequested
      required:
      - execution
      - executionStatus
      - startTimestamp
      - workflowType
      title: WorkflowExecutionInfo
      type: object
    WorkflowExecutionOpenCounts:
      description: "Contains the counts of open tasks, child workflow executions and\
        \ timers for a workflow execution."
      properties:
        openActivityTasks:
          allOf:
          - $ref: '#/components/schemas/Count'
          - description: The count of activity tasks whose status is <code>OPEN</code>.
          title: openActivityTasks
        openDecisionTasks:
          allOf:
          - $ref: '#/components/schemas/OpenDecisionTasksCount'
          - description: The count of decision tasks whose status is OPEN. A workflow
              execution can have at most one open decision task.
          title: openDecisionTasks
        openTimers:
          allOf:
          - $ref: '#/components/schemas/Count'
          - description: The count of timers started by this workflow execution that
              have not fired yet.
          title: openTimers
        openChildWorkflowExecutions:
          allOf:
          - $ref: '#/components/schemas/Count'
          - description: The count of child workflow executions whose status is <code>OPEN</code>.
          title: openChildWorkflowExecutions
        openLambdaFunctions:
          allOf:
          - $ref: '#/components/schemas/Count'
          - description: The count of Lambda tasks whose status is <code>OPEN</code>.
          title: openLambdaFunctions
      required:
      - openActivityTasks
      - openChildWorkflowExecutions
      - openDecisionTasks
      - openTimers
      title: WorkflowExecutionOpenCounts
      type: object
    WorkflowExecutionInfoList:
      items:
        $ref: '#/components/schemas/WorkflowExecutionInfo'
      type: array
    WorkflowExecutionTerminatedCause:
      enum:
      - CHILD_POLICY_APPLIED
      - EVENT_LIMIT_EXCEEDED
      - OPERATOR_INITIATED
      title: WorkflowExecutionTerminatedCause
      type: string
    WorkflowTypeConfiguration:
      description: The configuration settings of a workflow type.
      properties:
        defaultTaskStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p> The default maximum duration, specified when registering\
              \ the workflow type, that a decision task for executions of this workflow\
              \ type might take before returning completion or failure. If the task\
              \ doesn'tdo close in the specified time then the task is automatically\
              \ timed out and rescheduled. If the decider eventually reports a completion\
              \ or failure, it is ignored. This default can be overridden when starting\
              \ a workflow execution using the <a>StartWorkflowExecution</a> action\
              \ or the <code>StartChildWorkflowExecution</code> <a>Decision</a>.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>. You can use <code>NONE</code> to specify\
              \ unlimited duration.</p>"
          title: defaultTaskStartToCloseTimeout
        defaultExecutionStartToCloseTimeout:
          allOf:
          - $ref: '#/components/schemas/DurationInSecondsOptional'
          - description: "<p> The default maximum duration, specified when registering\
              \ the workflow type, for executions of this workflow type. This default\
              \ can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a>\
              \ action or the <code>StartChildWorkflowExecution</code> <a>Decision</a>.</p>\
              \ <p>The duration is specified in seconds, an integer greater than or\
              \ equal to <code>0</code>. You can use <code>NONE</code> to specify\
              \ unlimited duration.</p>"
          title: defaultExecutionStartToCloseTimeout
        defaultTaskList:
          $ref: '#/components/schemas/WorkflowTypeConfiguration_defaultTaskList'
        defaultTaskPriority:
          allOf:
          - $ref: '#/components/schemas/TaskPriority'
          - description: "<p> The default task priority, specified when registering\
              \ the workflow type, for all decision tasks of this workflow type. This\
              \ default can be overridden when starting a workflow execution using\
              \ the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code>\
              \ decision.</p> <p>Valid values are integers that range from Java's\
              \ <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code>\
              \ (2147483647). Higher numbers indicate higher priority.</p> <p>For\
              \ more information about setting task priority, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html\"\
              >Setting Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>"
          title: defaultTaskPriority
        defaultChildPolicy:
          allOf:
          - $ref: '#/components/schemas/ChildPolicy'
          - description: "<p> The default policy to use for the child workflow executions\
              \ when a workflow execution of this type is terminated, by calling the\
              \ <a>TerminateWorkflowExecution</a> action explicitly or due to an expired\
              \ timeout. This default can be overridden when starting a workflow execution\
              \ using the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code>\
              \ <a>Decision</a>.</p> <p>The supported child policies are:</p> <ul>\
              \ <li> <p> <code>TERMINATE</code> – The child executions are terminated.</p>\
              \ </li> <li> <p> <code>REQUEST_CANCEL</code> – A request to cancel is\
              \ attempted for each child execution by recording a <code>WorkflowExecutionCancelRequested</code>\
              \ event in its history. It is up to the decider to take appropriate\
              \ actions when it receives an execution history with this event.</p>\
              \ </li> <li> <p> <code>ABANDON</code> – No action is taken. The child\
              \ executions continue to run.</p> </li> </ul>"
          title: defaultChildPolicy
        defaultLambdaRole:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "<p>The default IAM role attached to this workflow type.</p>\
              \ <note> <p>Executions of this workflow type need IAM roles to invoke\
              \ Lambda functions. If you don't specify an IAM role when starting this\
              \ workflow type, the default Lambda role is attached to the execution.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html\"\
              >https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html</a>\
              \ in the <i>Amazon SWF Developer Guide</i>.</p> </note>"
          title: defaultLambdaRole
      title: WorkflowTypeConfiguration
      type: object
    WorkflowTypeInfo:
      description: Contains information about a workflow type.
      properties:
        workflowType:
          $ref: '#/components/schemas/WorkflowTypeInfo_workflowType'
        status:
          allOf:
          - $ref: '#/components/schemas/RegistrationStatus'
          - description: The current status of the workflow type.
          title: status
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the type registered through <a>RegisterWorkflowType</a>.
          title: description
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date when this type was registered.
          title: creationDate
        deprecationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "If the type is in deprecated state, then it is set to the\
              \ date when the type was deprecated."
          title: deprecationDate
      required:
      - creationDate
      - status
      - workflowType
      title: WorkflowTypeInfo
      type: object
    WorkflowTypeInfoList:
      items:
        $ref: '#/components/schemas/WorkflowTypeInfo'
      type: array
    CountClosedWorkflowExecutionsInput_startTimeFilter:
      allOf:
      - $ref: '#/components/schemas/ExecutionTimeFilter'
      - description: "<p>If specified, only workflow executions that meet the start\
          \ time criteria of the filter are counted.</p> <note> <p> <code>startTimeFilter</code>\
          \ and <code>closeTimeFilter</code> are mutually exclusive. You must specify\
          \ one of these in a request but not both.</p> </note>"
      example:
        latestDate: ""
        oldestDate: ""
      title: CountClosedWorkflowExecutionsInput_startTimeFilter
    CountClosedWorkflowExecutionsInput_closeTimeFilter:
      allOf:
      - $ref: '#/components/schemas/ExecutionTimeFilter'
      - description: "<p>If specified, only workflow executions that meet the close\
          \ time criteria of the filter are counted.</p> <note> <p> <code>startTimeFilter</code>\
          \ and <code>closeTimeFilter</code> are mutually exclusive. You must specify\
          \ one of these in a request but not both.</p> </note>"
      example:
        latestDate: ""
        oldestDate: ""
      title: CountClosedWorkflowExecutionsInput_closeTimeFilter
    CountClosedWorkflowExecutionsInput_executionFilter:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionFilter'
      - description: "<p>If specified, only workflow executions matching the <code>WorkflowId</code>\
          \ in the filter are counted.</p> <note> <p> <code>closeStatusFilter</code>,\
          \ <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\
          \ are mutually exclusive. You can specify at most one of these in a request.</p>\
          \ </note>"
      example:
        workflowId: ""
      title: CountClosedWorkflowExecutionsInput_executionFilter
    CountClosedWorkflowExecutionsInput_typeFilter:
      allOf:
      - $ref: '#/components/schemas/WorkflowTypeFilter'
      - description: "<p>If specified, indicates the type of the workflow executions\
          \ to be counted.</p> <note> <p> <code>closeStatusFilter</code>, <code>executionFilter</code>,\
          \ <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive.\
          \ You can specify at most one of these in a request.</p> </note>"
      example:
        name: ""
        version: ""
      title: CountClosedWorkflowExecutionsInput_typeFilter
    CountClosedWorkflowExecutionsInput_tagFilter:
      allOf:
      - $ref: '#/components/schemas/TagFilter'
      - description: "<p>If specified, only executions that have a tag that matches\
          \ the filter are counted.</p> <note> <p> <code>closeStatusFilter</code>,\
          \ <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\
          \ are mutually exclusive. You can specify at most one of these in a request.</p>\
          \ </note>"
      example:
        tag: ""
      title: CountClosedWorkflowExecutionsInput_tagFilter
    CountClosedWorkflowExecutionsInput_closeStatusFilter:
      allOf:
      - $ref: '#/components/schemas/CloseStatusFilter'
      - description: "<p>If specified, only workflow executions that match this close\
          \ status are counted. This filter has an affect only if <code>executionStatus</code>\
          \ is specified as <code>CLOSED</code>.</p> <note> <p> <code>closeStatusFilter</code>,\
          \ <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\
          \ are mutually exclusive. You can specify at most one of these in a request.</p>\
          \ </note>"
      example:
        status: ""
      title: CountClosedWorkflowExecutionsInput_closeStatusFilter
    CountOpenWorkflowExecutionsInput_startTimeFilter:
      allOf:
      - $ref: '#/components/schemas/ExecutionTimeFilter'
      - description: Specifies the start time criteria that workflow executions must
          meet in order to be counted.
      example:
        latestDate: ""
        oldestDate: ""
      title: CountOpenWorkflowExecutionsInput_startTimeFilter
    CountOpenWorkflowExecutionsInput_typeFilter:
      allOf:
      - $ref: '#/components/schemas/WorkflowTypeFilter'
      - description: "<p>Specifies the type of the workflow executions to be counted.</p>\
          \ <note> <p> <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\
          \ are mutually exclusive. You can specify at most one of these in a request.</p>\
          \ </note>"
      example:
        name: ""
        version: ""
      title: CountOpenWorkflowExecutionsInput_typeFilter
    CountOpenWorkflowExecutionsInput_tagFilter:
      allOf:
      - $ref: '#/components/schemas/TagFilter'
      - description: "<p>If specified, only executions that have a tag that matches\
          \ the filter are counted.</p> <note> <p> <code>executionFilter</code>, <code>typeFilter</code>\
          \ and <code>tagFilter</code> are mutually exclusive. You can specify at\
          \ most one of these in a request.</p> </note>"
      example:
        tag: ""
      title: CountOpenWorkflowExecutionsInput_tagFilter
    CountOpenWorkflowExecutionsInput_executionFilter:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionFilter'
      - description: "<p>If specified, only workflow executions matching the <code>WorkflowId</code>\
          \ in the filter are counted.</p> <note> <p> <code>executionFilter</code>,\
          \ <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive.\
          \ You can specify at most one of these in a request.</p> </note>"
      example:
        workflowId: ""
      title: CountOpenWorkflowExecutionsInput_executionFilter
    CountPendingActivityTasksInput_taskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: The name of the task list.
      example:
        name: ""
      title: CountPendingActivityTasksInput_taskList
    DeprecateActivityTypeInput_activityType:
      allOf:
      - $ref: '#/components/schemas/ActivityType'
      - description: The activity type to deprecate.
      example:
        name: ""
        version: ""
      title: DeprecateActivityTypeInput_activityType
    DeprecateWorkflowTypeInput_workflowType:
      allOf:
      - $ref: '#/components/schemas/WorkflowType'
      - description: The workflow type to deprecate.
      example:
        name: ""
        version: ""
      title: DeprecateWorkflowTypeInput_workflowType
    ActivityTypeDetail_typeInfo:
      allOf:
      - $ref: '#/components/schemas/ActivityTypeInfo'
      - description: "<p>General information about the activity type.</p> <p>The status\
          \ of activity type (returned in the ActivityTypeInfo structure) can be one\
          \ of the following.</p> <ul> <li> <p> <code>REGISTERED</code> – The type\
          \ is registered and available. Workers supporting this type should be running.\
          \ </p> </li> <li> <p> <code>DEPRECATED</code> – The type was deprecated\
          \ using <a>DeprecateActivityType</a>, but is still in use. You should keep\
          \ workers supporting this type running. You cannot create new tasks of this\
          \ type. </p> </li> </ul>"
      example:
        deprecationDate: ""
        description: ""
        activityType:
          name: ""
          version: ""
        creationDate: ""
        status: ""
      title: ActivityTypeDetail_typeInfo
    ActivityTypeDetail_configuration:
      allOf:
      - $ref: '#/components/schemas/ActivityTypeConfiguration'
      - description: The configuration settings registered with the activity type.
      example:
        defaultTaskScheduleToStartTimeout: ""
        defaultTaskList:
          name: ""
        defaultTaskStartToCloseTimeout: ""
        defaultTaskHeartbeatTimeout: ""
        defaultTaskScheduleToCloseTimeout: ""
        defaultTaskPriority: ""
      title: ActivityTypeDetail_configuration
    DescribeActivityTypeInput_activityType:
      allOf:
      - $ref: '#/components/schemas/ActivityType'
      - description: The activity type to get information about. Activity types are
          identified by the <code>name</code> and <code>version</code> that were supplied
          when the activity was registered.
      example:
        name: ""
        version: ""
      title: DescribeActivityTypeInput_activityType
    DomainDetail_domainInfo:
      allOf:
      - $ref: '#/components/schemas/DomainInfo'
      - description: "The basic information about a domain, such as its name, status,\
          \ and description."
      example:
        name: ""
        description: ""
        arn: ""
        status: ""
      title: DomainDetail_domainInfo
    DomainDetail_configuration:
      allOf:
      - $ref: '#/components/schemas/DomainConfiguration'
      - description: "The domain configuration. Currently, this includes only the\
          \ domain's retention period."
      example:
        workflowExecutionRetentionPeriodInDays: ""
      title: DomainDetail_configuration
    WorkflowExecutionDetail_executionInfo:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionInfo'
      - description: Information about the workflow execution.
      example:
        tagList: ""
        execution:
          runId: ""
          workflowId: ""
        parent:
          runId: ""
          workflowId: ""
        closeStatus: ""
        executionStatus: ""
        workflowType:
          name: ""
          version: ""
        cancelRequested: ""
        closeTimestamp: ""
        startTimestamp: ""
      title: WorkflowExecutionDetail_executionInfo
    WorkflowExecutionDetail_executionConfiguration:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionConfiguration'
      - description: "The configuration settings for this workflow execution including\
          \ timeout values, tasklist etc."
      example:
        lambdaRole: ""
        childPolicy: ""
        taskPriority: ""
        taskList:
          name: ""
        taskStartToCloseTimeout: ""
        executionStartToCloseTimeout: ""
      title: WorkflowExecutionDetail_executionConfiguration
    WorkflowExecutionDetail_openCounts:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionOpenCounts'
      - description: The number of tasks for this workflow execution. This includes
          open and closed tasks of all types.
      example:
        openDecisionTasks: ""
        openLambdaFunctions: ""
        openChildWorkflowExecutions: ""
        openTimers: ""
        openActivityTasks: ""
      title: WorkflowExecutionDetail_openCounts
    DescribeWorkflowExecutionInput_execution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: The workflow execution to describe.
      example:
        runId: ""
        workflowId: ""
      title: DescribeWorkflowExecutionInput_execution
    WorkflowTypeDetail_typeInfo:
      allOf:
      - $ref: '#/components/schemas/WorkflowTypeInfo'
      - description: "<p>General information about the workflow type.</p> <p>The status\
          \ of the workflow type (returned in the WorkflowTypeInfo structure) can\
          \ be one of the following.</p> <ul> <li> <p> <code>REGISTERED</code> – The\
          \ type is registered and available. Workers supporting this type should\
          \ be running.</p> </li> <li> <p> <code>DEPRECATED</code> – The type was\
          \ deprecated using <a>DeprecateWorkflowType</a>, but is still in use. You\
          \ should keep workers supporting this type running. You cannot create new\
          \ workflow executions of this type.</p> </li> </ul>"
      example:
        deprecationDate: ""
        description: ""
        workflowType:
          name: ""
          version: ""
        creationDate: ""
        status: ""
      title: WorkflowTypeDetail_typeInfo
    WorkflowTypeDetail_configuration:
      allOf:
      - $ref: '#/components/schemas/WorkflowTypeConfiguration'
      - description: 'Configuration settings of the workflow type registered through
          <a>RegisterWorkflowType</a> '
      example:
        defaultChildPolicy: ""
        defaultTaskList:
          name: ""
        defaultTaskStartToCloseTimeout: ""
        defaultLambdaRole: ""
        defaultExecutionStartToCloseTimeout: ""
        defaultTaskPriority: ""
      title: WorkflowTypeDetail_configuration
    DescribeWorkflowTypeInput_workflowType:
      allOf:
      - $ref: '#/components/schemas/WorkflowType'
      - description: The workflow type to describe.
      example:
        name: ""
        version: ""
      title: DescribeWorkflowTypeInput_workflowType
    GetWorkflowExecutionHistoryInput_execution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: Specifies the workflow execution for which to return the history.
      example:
        runId: ""
        workflowId: ""
      title: GetWorkflowExecutionHistoryInput_execution
    ListClosedWorkflowExecutionsInput_startTimeFilter:
      allOf:
      - $ref: '#/components/schemas/ExecutionTimeFilter'
      - description: "<p>If specified, the workflow executions are included in the\
          \ returned results based on whether their start times are within the range\
          \ specified by this filter. Also, if this parameter is specified, the returned\
          \ results are ordered by their start times.</p> <note> <p> <code>startTimeFilter</code>\
          \ and <code>closeTimeFilter</code> are mutually exclusive. You must specify\
          \ one of these in a request but not both.</p> </note>"
      example:
        latestDate: ""
        oldestDate: ""
      title: ListClosedWorkflowExecutionsInput_startTimeFilter
    ListClosedWorkflowExecutionsInput_closeTimeFilter:
      allOf:
      - $ref: '#/components/schemas/ExecutionTimeFilter'
      - description: "<p>If specified, the workflow executions are included in the\
          \ returned results based on whether their close times are within the range\
          \ specified by this filter. Also, if this parameter is specified, the returned\
          \ results are ordered by their close times.</p> <note> <p> <code>startTimeFilter</code>\
          \ and <code>closeTimeFilter</code> are mutually exclusive. You must specify\
          \ one of these in a request but not both.</p> </note>"
      example:
        latestDate: ""
        oldestDate: ""
      title: ListClosedWorkflowExecutionsInput_closeTimeFilter
    ListClosedWorkflowExecutionsInput_executionFilter:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionFilter'
      - description: "<p>If specified, only workflow executions matching the workflow\
          \ ID specified in the filter are returned.</p> <note> <p> <code>closeStatusFilter</code>,\
          \ <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\
          \ are mutually exclusive. You can specify at most one of these in a request.</p>\
          \ </note>"
      example:
        workflowId: ""
      title: ListClosedWorkflowExecutionsInput_executionFilter
    ListClosedWorkflowExecutionsInput_closeStatusFilter:
      allOf:
      - $ref: '#/components/schemas/CloseStatusFilter'
      - description: "<p>If specified, only workflow executions that match this <i>close\
          \ status</i> are listed. For example, if TERMINATED is specified, then only\
          \ TERMINATED workflow executions are listed.</p> <note> <p> <code>closeStatusFilter</code>,\
          \ <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>\
          \ are mutually exclusive. You can specify at most one of these in a request.</p>\
          \ </note>"
      example:
        status: ""
      title: ListClosedWorkflowExecutionsInput_closeStatusFilter
    ListClosedWorkflowExecutionsInput_typeFilter:
      allOf:
      - $ref: '#/components/schemas/WorkflowTypeFilter'
      - description: "<p>If specified, only executions of the type specified in the\
          \ filter are returned.</p> <note> <p> <code>closeStatusFilter</code>, <code>executionFilter</code>,\
          \ <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive.\
          \ You can specify at most one of these in a request.</p> </note>"
      example:
        name: ""
        version: ""
      title: ListClosedWorkflowExecutionsInput_typeFilter
    ListClosedWorkflowExecutionsInput_tagFilter:
      allOf:
      - $ref: '#/components/schemas/TagFilter'
      - description: "<p>If specified, only executions that have the matching tag\
          \ are listed.</p> <note> <p> <code>closeStatusFilter</code>, <code>executionFilter</code>,\
          \ <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive.\
          \ You can specify at most one of these in a request.</p> </note>"
      example:
        tag: ""
      title: ListClosedWorkflowExecutionsInput_tagFilter
    ListOpenWorkflowExecutionsInput_startTimeFilter:
      allOf:
      - $ref: '#/components/schemas/ExecutionTimeFilter'
      - description: Workflow executions are included in the returned results based
          on whether their start times are within the range specified by this filter.
      example:
        latestDate: ""
        oldestDate: ""
      title: ListOpenWorkflowExecutionsInput_startTimeFilter
    ListOpenWorkflowExecutionsInput_typeFilter:
      allOf:
      - $ref: '#/components/schemas/WorkflowTypeFilter'
      - description: "<p>If specified, only executions of the type specified in the\
          \ filter are returned.</p> <note> <p> <code>executionFilter</code>, <code>typeFilter</code>\
          \ and <code>tagFilter</code> are mutually exclusive. You can specify at\
          \ most one of these in a request.</p> </note>"
      example:
        name: ""
        version: ""
      title: ListOpenWorkflowExecutionsInput_typeFilter
    ListOpenWorkflowExecutionsInput_tagFilter:
      allOf:
      - $ref: '#/components/schemas/TagFilter'
      - description: "<p>If specified, only executions that have the matching tag\
          \ are listed.</p> <note> <p> <code>executionFilter</code>, <code>typeFilter</code>\
          \ and <code>tagFilter</code> are mutually exclusive. You can specify at\
          \ most one of these in a request.</p> </note>"
      example:
        tag: ""
      title: ListOpenWorkflowExecutionsInput_tagFilter
    ListOpenWorkflowExecutionsInput_executionFilter:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionFilter'
      - description: "<p>If specified, only workflow executions matching the workflow\
          \ ID specified in the filter are returned.</p> <note> <p> <code>executionFilter</code>,\
          \ <code>typeFilter</code> and <code>tagFilter</code> are mutually exclusive.\
          \ You can specify at most one of these in a request.</p> </note>"
      example:
        workflowId: ""
      title: ListOpenWorkflowExecutionsInput_executionFilter
    ActivityTask_workflowExecution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: The workflow execution that started this activity task.
      example:
        runId: ""
        workflowId: ""
      title: ActivityTask_workflowExecution
    ActivityTask_activityType:
      allOf:
      - $ref: '#/components/schemas/ActivityType'
      - description: The type of this activity task.
      example:
        name: ""
        version: ""
      title: ActivityTask_activityType
    PollForActivityTaskInput_taskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: "<p>Specifies the task list to poll for activity tasks.</p> <p>The\
          \ specified string must not start or end with whitespace. It must not contain\
          \ a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical\
          \ bar), or any control characters (<code>\\u0000-\\u001f</code> | <code>\\\
          u007f-\\u009f</code>). Also, it must <i>not</i> be the literal string <code>arn</code>.</p>"
      example:
        name: ""
      title: PollForActivityTaskInput_taskList
    DecisionTask_workflowExecution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: The workflow execution for which this decision task was created.
      example:
        runId: ""
        workflowId: ""
      title: DecisionTask_workflowExecution
    DecisionTask_workflowType:
      allOf:
      - $ref: '#/components/schemas/WorkflowType'
      - description: The type of the workflow execution for which this decision task
          was created.
      example:
        name: ""
        version: ""
      title: DecisionTask_workflowType
    PollForDecisionTaskInput_taskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: "<p>Specifies the task list to poll for decision tasks.</p> <p>The\
          \ specified string must not contain a <code>:</code> (colon), <code>/</code>\
          \ (slash), <code>|</code> (vertical bar), or any control characters (<code>\\\
          u0000-\\u001f</code> | <code>\\u007f-\\u009f</code>). Also, it must <i>not</i>\
          \ be the literal string <code>arn</code>.</p>"
      example:
        name: ""
      title: PollForDecisionTaskInput_taskList
    RegisterActivityTypeInput_defaultTaskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: "If set, specifies the default task list to use for scheduling\
          \ tasks of this activity type. This default task list is used if a task\
          \ list isn't provided when a task is scheduled through the <code>ScheduleActivityTask</code>\
          \ <a>Decision</a>."
      example:
        name: ""
      title: RegisterActivityTypeInput_defaultTaskList
    RegisterWorkflowTypeInput_defaultTaskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: "If set, specifies the default task list to use for scheduling\
          \ decision tasks for executions of this workflow type. This default is used\
          \ only if a task list isn't provided when starting the execution through\
          \ the <a>StartWorkflowExecution</a> Action or <code>StartChildWorkflowExecution</code>\
          \ <a>Decision</a>."
      example:
        name: ""
      title: RegisterWorkflowTypeInput_defaultTaskList
    StartWorkflowExecutionInput_workflowType:
      allOf:
      - $ref: '#/components/schemas/WorkflowType'
      - description: The type of the workflow to start.
      example:
        name: ""
        version: ""
      title: StartWorkflowExecutionInput_workflowType
    StartWorkflowExecutionInput_taskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: "<p>The task list to use for the decision tasks generated for\
          \ this workflow execution. This overrides the <code>defaultTaskList</code>\
          \ specified when registering the workflow type.</p> <note> <p>A task list\
          \ for this workflow execution must be specified either as a default for\
          \ the workflow type or through this parameter. If neither this parameter\
          \ is set nor a default task list was specified at registration time then\
          \ a fault is returned.</p> </note> <p>The specified string must not contain\
          \ a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical\
          \ bar), or any control characters (<code>\\u0000-\\u001f</code> | <code>\\\
          u007f-\\u009f</code>). Also, it must <i>not</i> be the literal string <code>arn</code>.</p>"
      example:
        name: ""
      title: StartWorkflowExecutionInput_taskList
    UndeprecateActivityTypeInput_activityType:
      allOf:
      - $ref: '#/components/schemas/ActivityType'
      - description: The activity type to undeprecate.
      example:
        name: ""
        version: ""
      title: UndeprecateActivityTypeInput_activityType
    UndeprecateWorkflowTypeInput_workflowType:
      allOf:
      - $ref: '#/components/schemas/WorkflowType'
      - description: The name of the domain of the deprecated workflow type.
      example:
        name: ""
        version: ""
      title: UndeprecateWorkflowTypeInput_workflowType
    ActivityTaskScheduledEventAttributes_activityType:
      allOf:
      - $ref: '#/components/schemas/ActivityType'
      - description: The type of the activity task.
      title: ActivityTaskScheduledEventAttributes_activityType
    ActivityTaskScheduledEventAttributes_taskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: The task list in which the activity task has been scheduled.
      title: ActivityTaskScheduledEventAttributes_taskList
    ActivityTypeConfiguration_defaultTaskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: ' The default task list specified for this activity type at registration.
          This default is used if a task list isn''t provided when a task is scheduled
          through the <code>ScheduleActivityTask</code> <a>Decision</a>. You can override
          the default registered task list when scheduling a task through the <code>ScheduleActivityTask</code>
          <a>Decision</a>.'
      example:
        name: ""
      title: ActivityTypeConfiguration_defaultTaskList
    ActivityTypeInfo_activityType:
      allOf:
      - $ref: '#/components/schemas/ActivityType'
      - description: The <a>ActivityType</a> type structure representing the activity
          type.
      example:
        name: ""
        version: ""
      title: ActivityTypeInfo_activityType
    ChildWorkflowExecutionCanceledEventAttributes_workflowExecution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: The child workflow execution that was canceled.
      title: ChildWorkflowExecutionCanceledEventAttributes_workflowExecution
    ChildWorkflowExecutionCanceledEventAttributes_workflowType:
      allOf:
      - $ref: '#/components/schemas/WorkflowType'
      - description: The type of the child workflow execution.
      title: ChildWorkflowExecutionCanceledEventAttributes_workflowType
    ChildWorkflowExecutionCompletedEventAttributes_workflowExecution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: The child workflow execution that was completed.
      title: ChildWorkflowExecutionCompletedEventAttributes_workflowExecution
    ChildWorkflowExecutionFailedEventAttributes_workflowExecution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: The child workflow execution that failed.
      title: ChildWorkflowExecutionFailedEventAttributes_workflowExecution
    ChildWorkflowExecutionStartedEventAttributes_workflowExecution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: The child workflow execution that was started.
      title: ChildWorkflowExecutionStartedEventAttributes_workflowExecution
    ChildWorkflowExecutionTerminatedEventAttributes_workflowExecution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: The child workflow execution that was terminated.
      title: ChildWorkflowExecutionTerminatedEventAttributes_workflowExecution
    ChildWorkflowExecutionTimedOutEventAttributes_workflowExecution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: The child workflow execution that timed out.
      title: ChildWorkflowExecutionTimedOutEventAttributes_workflowExecution
    ContinueAsNewWorkflowExecutionDecisionAttributes_taskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: The task list to use for the decisions of the new (continued)
          workflow execution.
      title: ContinueAsNewWorkflowExecutionDecisionAttributes_taskList
    ScheduleActivityTaskDecisionAttributes_activityType:
      allOf:
      - $ref: '#/components/schemas/ActivityType'
      - description: ' The type of the activity task to schedule.'
      title: ScheduleActivityTaskDecisionAttributes_activityType
    ScheduleActivityTaskDecisionAttributes_taskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: "<p>If set, specifies the name of the task list in which to schedule\
          \ the activity task. If not specified, the <code>defaultTaskList</code>\
          \ registered with the activity type is used.</p> <note> <p>A task list for\
          \ this activity task must be specified either as a default for the activity\
          \ type or through this field. If neither this field is set nor a default\
          \ task list was specified at registration time then a fault is returned.</p>\
          \ </note> <p>The specified string must not contain a <code>:</code> (colon),\
          \ <code>/</code> (slash), <code>|</code> (vertical bar), or any control\
          \ characters (<code>\\u0000-\\u001f</code> | <code>\\u007f-\\u009f</code>).\
          \ Also, it must <i>not</i> be the literal string <code>arn</code>.</p>"
      title: ScheduleActivityTaskDecisionAttributes_taskList
    StartChildWorkflowExecutionDecisionAttributes_workflowType:
      allOf:
      - $ref: '#/components/schemas/WorkflowType'
      - description: ' The type of the workflow execution to be started.'
      title: StartChildWorkflowExecutionDecisionAttributes_workflowType
    StartChildWorkflowExecutionDecisionAttributes_taskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: "<p>The name of the task list to be used for decision tasks of\
          \ the child workflow execution.</p> <note> <p>A task list for this workflow\
          \ execution must be specified either as a default for the workflow type\
          \ or through this parameter. If neither this parameter is set nor a default\
          \ task list was specified at registration time then a fault is returned.</p>\
          \ </note> <p>The specified string must not start or end with whitespace.\
          \ It must not contain a <code>:</code> (colon), <code>/</code> (slash),\
          \ <code>|</code> (vertical bar), or any control characters (<code>\\u0000-\\\
          u001f</code> | <code>\\u007f-\\u009f</code>). Also, it must <i>not</i> be\
          \ the literal string <code>arn</code>.</p>"
      title: StartChildWorkflowExecutionDecisionAttributes_taskList
    Decision_scheduleActivityTaskDecisionAttributes:
      allOf:
      - $ref: '#/components/schemas/ScheduleActivityTaskDecisionAttributes'
      - description: Provides the details of the <code>ScheduleActivityTask</code>
          decision. It isn't set for other decision types.
      title: Decision_scheduleActivityTaskDecisionAttributes
    Decision_requestCancelActivityTaskDecisionAttributes:
      allOf:
      - $ref: '#/components/schemas/RequestCancelActivityTaskDecisionAttributes'
      - description: Provides the details of the <code>RequestCancelActivityTask</code>
          decision. It isn't set for other decision types.
      title: Decision_requestCancelActivityTaskDecisionAttributes
    Decision_completeWorkflowExecutionDecisionAttributes:
      allOf:
      - $ref: '#/components/schemas/CompleteWorkflowExecutionDecisionAttributes'
      - description: Provides the details of the <code>CompleteWorkflowExecution</code>
          decision. It isn't set for other decision types.
      title: Decision_completeWorkflowExecutionDecisionAttributes
    Decision_failWorkflowExecutionDecisionAttributes:
      allOf:
      - $ref: '#/components/schemas/FailWorkflowExecutionDecisionAttributes'
      - description: Provides the details of the <code>FailWorkflowExecution</code>
          decision. It isn't set for other decision types.
      title: Decision_failWorkflowExecutionDecisionAttributes
    Decision_cancelWorkflowExecutionDecisionAttributes:
      allOf:
      - $ref: '#/components/schemas/CancelWorkflowExecutionDecisionAttributes'
      - description: Provides the details of the <code>CancelWorkflowExecution</code>
          decision. It isn't set for other decision types.
      title: Decision_cancelWorkflowExecutionDecisionAttributes
    Decision_continueAsNewWorkflowExecutionDecisionAttributes:
      allOf:
      - $ref: '#/components/schemas/ContinueAsNewWorkflowExecutionDecisionAttributes'
      - description: Provides the details of the <code>ContinueAsNewWorkflowExecution</code>
          decision. It isn't set for other decision types.
      title: Decision_continueAsNewWorkflowExecutionDecisionAttributes
    Decision_recordMarkerDecisionAttributes:
      allOf:
      - $ref: '#/components/schemas/RecordMarkerDecisionAttributes'
      - description: Provides the details of the <code>RecordMarker</code> decision.
          It isn't set for other decision types.
      title: Decision_recordMarkerDecisionAttributes
    Decision_startTimerDecisionAttributes:
      allOf:
      - $ref: '#/components/schemas/StartTimerDecisionAttributes'
      - description: Provides the details of the <code>StartTimer</code> decision.
          It isn't set for other decision types.
      title: Decision_startTimerDecisionAttributes
    Decision_cancelTimerDecisionAttributes:
      allOf:
      - $ref: '#/components/schemas/CancelTimerDecisionAttributes'
      - description: Provides the details of the <code>CancelTimer</code> decision.
          It isn't set for other decision types.
      title: Decision_cancelTimerDecisionAttributes
    Decision_signalExternalWorkflowExecutionDecisionAttributes:
      allOf:
      - $ref: '#/components/schemas/SignalExternalWorkflowExecutionDecisionAttributes'
      - description: Provides the details of the <code>SignalExternalWorkflowExecution</code>
          decision. It isn't set for other decision types.
      title: Decision_signalExternalWorkflowExecutionDecisionAttributes
    Decision_requestCancelExternalWorkflowExecutionDecisionAttributes:
      allOf:
      - $ref: '#/components/schemas/RequestCancelExternalWorkflowExecutionDecisionAttributes'
      - description: Provides the details of the <code>RequestCancelExternalWorkflowExecution</code>
          decision. It isn't set for other decision types.
      title: Decision_requestCancelExternalWorkflowExecutionDecisionAttributes
    Decision_startChildWorkflowExecutionDecisionAttributes:
      allOf:
      - $ref: '#/components/schemas/StartChildWorkflowExecutionDecisionAttributes'
      - description: Provides the details of the <code>StartChildWorkflowExecution</code>
          decision. It isn't set for other decision types.
      title: Decision_startChildWorkflowExecutionDecisionAttributes
    Decision_scheduleLambdaFunctionDecisionAttributes:
      allOf:
      - $ref: '#/components/schemas/ScheduleLambdaFunctionDecisionAttributes'
      - description: Provides the details of the <code>ScheduleLambdaFunction</code>
          decision. It isn't set for other decision types.
      title: Decision_scheduleLambdaFunctionDecisionAttributes
    DecisionTaskScheduledEventAttributes_taskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: The name of the task list in which the decision task was scheduled.
      title: DecisionTaskScheduledEventAttributes_taskList
    ExternalWorkflowExecutionCancelRequestedEventAttributes_workflowExecution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: The external workflow execution to which the cancellation request
          was delivered.
      title: ExternalWorkflowExecutionCancelRequestedEventAttributes_workflowExecution
    ExternalWorkflowExecutionSignaledEventAttributes_workflowExecution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: The external workflow execution that the signal was delivered
          to.
      title: ExternalWorkflowExecutionSignaledEventAttributes_workflowExecution
    WorkflowExecutionStartedEventAttributes_taskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: The name of the task list for scheduling the decision tasks for
          this workflow execution.
      title: WorkflowExecutionStartedEventAttributes_taskList
    WorkflowExecutionStartedEventAttributes_workflowType:
      allOf:
      - $ref: '#/components/schemas/WorkflowType'
      - description: The workflow type of this execution.
      title: WorkflowExecutionStartedEventAttributes_workflowType
    WorkflowExecutionStartedEventAttributes_parentWorkflowExecution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: The source workflow execution that started this workflow execution.
          The member isn't set if the workflow execution was not started by a workflow.
      title: WorkflowExecutionStartedEventAttributes_parentWorkflowExecution
    WorkflowExecutionCancelRequestedEventAttributes_externalWorkflowExecution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: The external workflow execution for which the cancellation was
          requested.
      title: WorkflowExecutionCancelRequestedEventAttributes_externalWorkflowExecution
    WorkflowExecutionSignaledEventAttributes_externalWorkflowExecution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: The workflow execution that sent the signal. This is set only
          of the signal was sent by another workflow execution.
      title: WorkflowExecutionSignaledEventAttributes_externalWorkflowExecution
    StartChildWorkflowExecutionInitiatedEventAttributes_taskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: The name of the task list used for the decision tasks of the
          child workflow execution.
      title: StartChildWorkflowExecutionInitiatedEventAttributes_taskList
    ScheduleActivityTaskFailedEventAttributes_activityType:
      allOf:
      - $ref: '#/components/schemas/ActivityType'
      - description: The activity type provided in the <code>ScheduleActivityTask</code>
          decision that failed.
      title: ScheduleActivityTaskFailedEventAttributes_activityType
    StartChildWorkflowExecutionFailedEventAttributes_workflowType:
      allOf:
      - $ref: '#/components/schemas/WorkflowType'
      - description: The workflow type provided in the <code>StartChildWorkflowExecution</code>
          <a>Decision</a> that failed.
      title: StartChildWorkflowExecutionFailedEventAttributes_workflowType
    HistoryEvent_workflowExecutionStartedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionStartedEventAttributes'
      - description: If the event is of type <code>WorkflowExecutionStarted</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_workflowExecutionStartedEventAttributes
    HistoryEvent_workflowExecutionCompletedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionCompletedEventAttributes'
      - description: If the event is of type <code>WorkflowExecutionCompleted</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_workflowExecutionCompletedEventAttributes
    HistoryEvent_completeWorkflowExecutionFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/CompleteWorkflowExecutionFailedEventAttributes'
      - description: If the event is of type <code>CompleteWorkflowExecutionFailed</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_completeWorkflowExecutionFailedEventAttributes
    HistoryEvent_workflowExecutionFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionFailedEventAttributes'
      - description: If the event is of type <code>WorkflowExecutionFailed</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_workflowExecutionFailedEventAttributes
    HistoryEvent_failWorkflowExecutionFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/FailWorkflowExecutionFailedEventAttributes'
      - description: If the event is of type <code>FailWorkflowExecutionFailed</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_failWorkflowExecutionFailedEventAttributes
    HistoryEvent_workflowExecutionTimedOutEventAttributes:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionTimedOutEventAttributes'
      - description: If the event is of type <code>WorkflowExecutionTimedOut</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_workflowExecutionTimedOutEventAttributes
    HistoryEvent_workflowExecutionCanceledEventAttributes:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionCanceledEventAttributes'
      - description: If the event is of type <code>WorkflowExecutionCanceled</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_workflowExecutionCanceledEventAttributes
    HistoryEvent_cancelWorkflowExecutionFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/CancelWorkflowExecutionFailedEventAttributes'
      - description: If the event is of type <code>CancelWorkflowExecutionFailed</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_cancelWorkflowExecutionFailedEventAttributes
    HistoryEvent_workflowExecutionContinuedAsNewEventAttributes:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionContinuedAsNewEventAttributes'
      - description: If the event is of type <code>WorkflowExecutionContinuedAsNew</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_workflowExecutionContinuedAsNewEventAttributes
    HistoryEvent_continueAsNewWorkflowExecutionFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ContinueAsNewWorkflowExecutionFailedEventAttributes'
      - description: If the event is of type <code>ContinueAsNewWorkflowExecutionFailed</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_continueAsNewWorkflowExecutionFailedEventAttributes
    HistoryEvent_workflowExecutionTerminatedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionTerminatedEventAttributes'
      - description: If the event is of type <code>WorkflowExecutionTerminated</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_workflowExecutionTerminatedEventAttributes
    HistoryEvent_workflowExecutionCancelRequestedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionCancelRequestedEventAttributes'
      - description: If the event is of type <code>WorkflowExecutionCancelRequested</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_workflowExecutionCancelRequestedEventAttributes
    HistoryEvent_decisionTaskScheduledEventAttributes:
      allOf:
      - $ref: '#/components/schemas/DecisionTaskScheduledEventAttributes'
      - description: If the event is of type <code>DecisionTaskScheduled</code> then
          this member is set and provides detailed information about the event. It
          isn't set for other event types.
      title: HistoryEvent_decisionTaskScheduledEventAttributes
    HistoryEvent_decisionTaskStartedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/DecisionTaskStartedEventAttributes'
      - description: If the event is of type <code>DecisionTaskStarted</code> then
          this member is set and provides detailed information about the event. It
          isn't set for other event types.
      title: HistoryEvent_decisionTaskStartedEventAttributes
    HistoryEvent_decisionTaskCompletedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/DecisionTaskCompletedEventAttributes'
      - description: If the event is of type <code>DecisionTaskCompleted</code> then
          this member is set and provides detailed information about the event. It
          isn't set for other event types.
      title: HistoryEvent_decisionTaskCompletedEventAttributes
    HistoryEvent_decisionTaskTimedOutEventAttributes:
      allOf:
      - $ref: '#/components/schemas/DecisionTaskTimedOutEventAttributes'
      - description: If the event is of type <code>DecisionTaskTimedOut</code> then
          this member is set and provides detailed information about the event. It
          isn't set for other event types.
      title: HistoryEvent_decisionTaskTimedOutEventAttributes
    HistoryEvent_activityTaskScheduledEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ActivityTaskScheduledEventAttributes'
      - description: If the event is of type <code>ActivityTaskScheduled</code> then
          this member is set and provides detailed information about the event. It
          isn't set for other event types.
      title: HistoryEvent_activityTaskScheduledEventAttributes
    HistoryEvent_activityTaskStartedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ActivityTaskStartedEventAttributes'
      - description: If the event is of type <code>ActivityTaskStarted</code> then
          this member is set and provides detailed information about the event. It
          isn't set for other event types.
      title: HistoryEvent_activityTaskStartedEventAttributes
    HistoryEvent_activityTaskCompletedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ActivityTaskCompletedEventAttributes'
      - description: If the event is of type <code>ActivityTaskCompleted</code> then
          this member is set and provides detailed information about the event. It
          isn't set for other event types.
      title: HistoryEvent_activityTaskCompletedEventAttributes
    HistoryEvent_activityTaskFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ActivityTaskFailedEventAttributes'
      - description: If the event is of type <code>ActivityTaskFailed</code> then
          this member is set and provides detailed information about the event. It
          isn't set for other event types.
      title: HistoryEvent_activityTaskFailedEventAttributes
    HistoryEvent_activityTaskTimedOutEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ActivityTaskTimedOutEventAttributes'
      - description: If the event is of type <code>ActivityTaskTimedOut</code> then
          this member is set and provides detailed information about the event. It
          isn't set for other event types.
      title: HistoryEvent_activityTaskTimedOutEventAttributes
    HistoryEvent_activityTaskCanceledEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ActivityTaskCanceledEventAttributes'
      - description: If the event is of type <code>ActivityTaskCanceled</code> then
          this member is set and provides detailed information about the event. It
          isn't set for other event types.
      title: HistoryEvent_activityTaskCanceledEventAttributes
    HistoryEvent_activityTaskCancelRequestedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ActivityTaskCancelRequestedEventAttributes'
      - description: If the event is of type <code>ActivityTaskcancelRequested</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_activityTaskCancelRequestedEventAttributes
    HistoryEvent_workflowExecutionSignaledEventAttributes:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecutionSignaledEventAttributes'
      - description: If the event is of type <code>WorkflowExecutionSignaled</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_workflowExecutionSignaledEventAttributes
    HistoryEvent_markerRecordedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/MarkerRecordedEventAttributes'
      - description: If the event is of type <code>MarkerRecorded</code> then this
          member is set and provides detailed information about the event. It isn't
          set for other event types.
      title: HistoryEvent_markerRecordedEventAttributes
    HistoryEvent_recordMarkerFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/RecordMarkerFailedEventAttributes'
      - description: If the event is of type <code>DecisionTaskFailed</code> then
          this member is set and provides detailed information about the event. It
          isn't set for other event types.
      title: HistoryEvent_recordMarkerFailedEventAttributes
    HistoryEvent_timerStartedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/TimerStartedEventAttributes'
      - description: If the event is of type <code>TimerStarted</code> then this member
          is set and provides detailed information about the event. It isn't set for
          other event types.
      title: HistoryEvent_timerStartedEventAttributes
    HistoryEvent_timerFiredEventAttributes:
      allOf:
      - $ref: '#/components/schemas/TimerFiredEventAttributes'
      - description: If the event is of type <code>TimerFired</code> then this member
          is set and provides detailed information about the event. It isn't set for
          other event types.
      title: HistoryEvent_timerFiredEventAttributes
    HistoryEvent_timerCanceledEventAttributes:
      allOf:
      - $ref: '#/components/schemas/TimerCanceledEventAttributes'
      - description: If the event is of type <code>TimerCanceled</code> then this
          member is set and provides detailed information about the event. It isn't
          set for other event types.
      title: HistoryEvent_timerCanceledEventAttributes
    HistoryEvent_startChildWorkflowExecutionInitiatedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/StartChildWorkflowExecutionInitiatedEventAttributes'
      - description: If the event is of type <code>StartChildWorkflowExecutionInitiated</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_startChildWorkflowExecutionInitiatedEventAttributes
    HistoryEvent_childWorkflowExecutionStartedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ChildWorkflowExecutionStartedEventAttributes'
      - description: If the event is of type <code>ChildWorkflowExecutionStarted</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_childWorkflowExecutionStartedEventAttributes
    HistoryEvent_childWorkflowExecutionCompletedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ChildWorkflowExecutionCompletedEventAttributes'
      - description: If the event is of type <code>ChildWorkflowExecutionCompleted</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_childWorkflowExecutionCompletedEventAttributes
    HistoryEvent_childWorkflowExecutionFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ChildWorkflowExecutionFailedEventAttributes'
      - description: If the event is of type <code>ChildWorkflowExecutionFailed</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_childWorkflowExecutionFailedEventAttributes
    HistoryEvent_childWorkflowExecutionTimedOutEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ChildWorkflowExecutionTimedOutEventAttributes'
      - description: If the event is of type <code>ChildWorkflowExecutionTimedOut</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_childWorkflowExecutionTimedOutEventAttributes
    HistoryEvent_childWorkflowExecutionCanceledEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ChildWorkflowExecutionCanceledEventAttributes'
      - description: If the event is of type <code>ChildWorkflowExecutionCanceled</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_childWorkflowExecutionCanceledEventAttributes
    HistoryEvent_childWorkflowExecutionTerminatedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ChildWorkflowExecutionTerminatedEventAttributes'
      - description: If the event is of type <code>ChildWorkflowExecutionTerminated</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_childWorkflowExecutionTerminatedEventAttributes
    HistoryEvent_signalExternalWorkflowExecutionInitiatedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/SignalExternalWorkflowExecutionInitiatedEventAttributes'
      - description: If the event is of type <code>SignalExternalWorkflowExecutionInitiated</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_signalExternalWorkflowExecutionInitiatedEventAttributes
    HistoryEvent_externalWorkflowExecutionSignaledEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ExternalWorkflowExecutionSignaledEventAttributes'
      - description: If the event is of type <code>ExternalWorkflowExecutionSignaled</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_externalWorkflowExecutionSignaledEventAttributes
    HistoryEvent_signalExternalWorkflowExecutionFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/SignalExternalWorkflowExecutionFailedEventAttributes'
      - description: If the event is of type <code>SignalExternalWorkflowExecutionFailed</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_signalExternalWorkflowExecutionFailedEventAttributes
    HistoryEvent_externalWorkflowExecutionCancelRequestedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ExternalWorkflowExecutionCancelRequestedEventAttributes'
      - description: 'If the event is of type <code>ExternalWorkflowExecutionCancelRequested</code>
          then this member is set and provides detailed information about the event.
          It isn''t set for other event types. '
      title: HistoryEvent_externalWorkflowExecutionCancelRequestedEventAttributes
    HistoryEvent_requestCancelExternalWorkflowExecutionInitiatedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/RequestCancelExternalWorkflowExecutionInitiatedEventAttributes'
      - description: If the event is of type <code>RequestCancelExternalWorkflowExecutionInitiated</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_requestCancelExternalWorkflowExecutionInitiatedEventAttributes
    HistoryEvent_requestCancelExternalWorkflowExecutionFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/RequestCancelExternalWorkflowExecutionFailedEventAttributes'
      - description: If the event is of type <code>RequestCancelExternalWorkflowExecutionFailed</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_requestCancelExternalWorkflowExecutionFailedEventAttributes
    HistoryEvent_scheduleActivityTaskFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ScheduleActivityTaskFailedEventAttributes'
      - description: If the event is of type <code>ScheduleActivityTaskFailed</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_scheduleActivityTaskFailedEventAttributes
    HistoryEvent_requestCancelActivityTaskFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/RequestCancelActivityTaskFailedEventAttributes'
      - description: If the event is of type <code>RequestCancelActivityTaskFailed</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_requestCancelActivityTaskFailedEventAttributes
    HistoryEvent_startTimerFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/StartTimerFailedEventAttributes'
      - description: If the event is of type <code>StartTimerFailed</code> then this
          member is set and provides detailed information about the event. It isn't
          set for other event types.
      title: HistoryEvent_startTimerFailedEventAttributes
    HistoryEvent_cancelTimerFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/CancelTimerFailedEventAttributes'
      - description: If the event is of type <code>CancelTimerFailed</code> then this
          member is set and provides detailed information about the event. It isn't
          set for other event types.
      title: HistoryEvent_cancelTimerFailedEventAttributes
    HistoryEvent_startChildWorkflowExecutionFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/StartChildWorkflowExecutionFailedEventAttributes'
      - description: If the event is of type <code>StartChildWorkflowExecutionFailed</code>
          then this member is set and provides detailed information about the event.
          It isn't set for other event types.
      title: HistoryEvent_startChildWorkflowExecutionFailedEventAttributes
    HistoryEvent_lambdaFunctionScheduledEventAttributes:
      allOf:
      - $ref: '#/components/schemas/LambdaFunctionScheduledEventAttributes'
      - description: Provides the details of the <code>LambdaFunctionScheduled</code>
          event. It isn't set for other event types.
      title: HistoryEvent_lambdaFunctionScheduledEventAttributes
    HistoryEvent_lambdaFunctionStartedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/LambdaFunctionStartedEventAttributes'
      - description: Provides the details of the <code>LambdaFunctionStarted</code>
          event. It isn't set for other event types.
      title: HistoryEvent_lambdaFunctionStartedEventAttributes
    HistoryEvent_lambdaFunctionCompletedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/LambdaFunctionCompletedEventAttributes'
      - description: Provides the details of the <code>LambdaFunctionCompleted</code>
          event. It isn't set for other event types.
      title: HistoryEvent_lambdaFunctionCompletedEventAttributes
    HistoryEvent_lambdaFunctionFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/LambdaFunctionFailedEventAttributes'
      - description: Provides the details of the <code>LambdaFunctionFailed</code>
          event. It isn't set for other event types.
      title: HistoryEvent_lambdaFunctionFailedEventAttributes
    HistoryEvent_lambdaFunctionTimedOutEventAttributes:
      allOf:
      - $ref: '#/components/schemas/LambdaFunctionTimedOutEventAttributes'
      - description: Provides the details of the <code>LambdaFunctionTimedOut</code>
          event. It isn't set for other event types.
      title: HistoryEvent_lambdaFunctionTimedOutEventAttributes
    HistoryEvent_scheduleLambdaFunctionFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/ScheduleLambdaFunctionFailedEventAttributes'
      - description: Provides the details of the <code>ScheduleLambdaFunctionFailed</code>
          event. It isn't set for other event types.
      title: HistoryEvent_scheduleLambdaFunctionFailedEventAttributes
    HistoryEvent_startLambdaFunctionFailedEventAttributes:
      allOf:
      - $ref: '#/components/schemas/StartLambdaFunctionFailedEventAttributes'
      - description: Provides the details of the <code>StartLambdaFunctionFailed</code>
          event. It isn't set for other event types.
      title: HistoryEvent_startLambdaFunctionFailedEventAttributes
    WorkflowExecutionConfiguration_taskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: The task list used for the decision tasks generated for this
          workflow execution.
      example:
        name: ""
      title: WorkflowExecutionConfiguration_taskList
    WorkflowExecutionInfo_execution:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: The workflow execution this information is about.
      example:
        runId: ""
        workflowId: ""
      title: WorkflowExecutionInfo_execution
    WorkflowExecutionInfo_workflowType:
      allOf:
      - $ref: '#/components/schemas/WorkflowType'
      - description: The type of the workflow execution.
      example:
        name: ""
        version: ""
      title: WorkflowExecutionInfo_workflowType
    WorkflowExecutionInfo_parent:
      allOf:
      - $ref: '#/components/schemas/WorkflowExecution'
      - description: If this workflow execution is a child of another execution then
          contains the workflow execution that started this execution.
      example:
        runId: ""
        workflowId: ""
      title: WorkflowExecutionInfo_parent
    WorkflowTypeConfiguration_defaultTaskList:
      allOf:
      - $ref: '#/components/schemas/TaskList'
      - description: " The default task list, specified when registering the workflow\
          \ type, for decisions tasks scheduled for workflow executions of this type.\
          \ This default can be overridden when starting a workflow execution using\
          \ the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code>\
          \ <a>Decision</a>."
      example:
        name: ""
      title: WorkflowTypeConfiguration_defaultTaskList
    WorkflowTypeInfo_workflowType:
      allOf:
      - $ref: '#/components/schemas/WorkflowType'
      - description: The workflow type this information is about.
      example:
        name: ""
        version: ""
      title: WorkflowTypeInfo_workflowType
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
