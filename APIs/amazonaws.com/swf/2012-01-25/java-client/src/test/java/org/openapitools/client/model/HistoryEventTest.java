/*
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.EventType;
import org.openapitools.client.model.HistoryEventActivityTaskCancelRequestedEventAttributes;
import org.openapitools.client.model.HistoryEventActivityTaskCanceledEventAttributes;
import org.openapitools.client.model.HistoryEventActivityTaskCompletedEventAttributes;
import org.openapitools.client.model.HistoryEventActivityTaskFailedEventAttributes;
import org.openapitools.client.model.HistoryEventActivityTaskScheduledEventAttributes;
import org.openapitools.client.model.HistoryEventActivityTaskStartedEventAttributes;
import org.openapitools.client.model.HistoryEventActivityTaskTimedOutEventAttributes;
import org.openapitools.client.model.HistoryEventCancelTimerFailedEventAttributes;
import org.openapitools.client.model.HistoryEventCancelWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventChildWorkflowExecutionCanceledEventAttributes;
import org.openapitools.client.model.HistoryEventChildWorkflowExecutionCompletedEventAttributes;
import org.openapitools.client.model.HistoryEventChildWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventChildWorkflowExecutionStartedEventAttributes;
import org.openapitools.client.model.HistoryEventChildWorkflowExecutionTerminatedEventAttributes;
import org.openapitools.client.model.HistoryEventChildWorkflowExecutionTimedOutEventAttributes;
import org.openapitools.client.model.HistoryEventCompleteWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventContinueAsNewWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventDecisionTaskCompletedEventAttributes;
import org.openapitools.client.model.HistoryEventDecisionTaskScheduledEventAttributes;
import org.openapitools.client.model.HistoryEventDecisionTaskStartedEventAttributes;
import org.openapitools.client.model.HistoryEventDecisionTaskTimedOutEventAttributes;
import org.openapitools.client.model.HistoryEventExternalWorkflowExecutionCancelRequestedEventAttributes;
import org.openapitools.client.model.HistoryEventExternalWorkflowExecutionSignaledEventAttributes;
import org.openapitools.client.model.HistoryEventFailWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventLambdaFunctionCompletedEventAttributes;
import org.openapitools.client.model.HistoryEventLambdaFunctionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventLambdaFunctionScheduledEventAttributes;
import org.openapitools.client.model.HistoryEventLambdaFunctionStartedEventAttributes;
import org.openapitools.client.model.HistoryEventLambdaFunctionTimedOutEventAttributes;
import org.openapitools.client.model.HistoryEventMarkerRecordedEventAttributes;
import org.openapitools.client.model.HistoryEventRecordMarkerFailedEventAttributes;
import org.openapitools.client.model.HistoryEventRequestCancelActivityTaskFailedEventAttributes;
import org.openapitools.client.model.HistoryEventRequestCancelExternalWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventRequestCancelExternalWorkflowExecutionInitiatedEventAttributes;
import org.openapitools.client.model.HistoryEventScheduleActivityTaskFailedEventAttributes;
import org.openapitools.client.model.HistoryEventScheduleLambdaFunctionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventSignalExternalWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventSignalExternalWorkflowExecutionInitiatedEventAttributes;
import org.openapitools.client.model.HistoryEventStartChildWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventStartChildWorkflowExecutionInitiatedEventAttributes;
import org.openapitools.client.model.HistoryEventStartLambdaFunctionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventStartTimerFailedEventAttributes;
import org.openapitools.client.model.HistoryEventTimerCanceledEventAttributes;
import org.openapitools.client.model.HistoryEventTimerFiredEventAttributes;
import org.openapitools.client.model.HistoryEventTimerStartedEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionCancelRequestedEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionCanceledEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionCompletedEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionContinuedAsNewEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionSignaledEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionStartedEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionTerminatedEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionTimedOutEventAttributes;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for HistoryEvent
 */
public class HistoryEventTest {
    private final HistoryEvent model = new HistoryEvent();

    /**
     * Model tests for HistoryEvent
     */
    @Test
    public void testHistoryEvent() {
        // TODO: test HistoryEvent
    }

    /**
     * Test the property 'eventTimestamp'
     */
    @Test
    public void eventTimestampTest() {
        // TODO: test eventTimestamp
    }

    /**
     * Test the property 'eventType'
     */
    @Test
    public void eventTypeTest() {
        // TODO: test eventType
    }

    /**
     * Test the property 'eventId'
     */
    @Test
    public void eventIdTest() {
        // TODO: test eventId
    }

    /**
     * Test the property 'workflowExecutionStartedEventAttributes'
     */
    @Test
    public void workflowExecutionStartedEventAttributesTest() {
        // TODO: test workflowExecutionStartedEventAttributes
    }

    /**
     * Test the property 'workflowExecutionCompletedEventAttributes'
     */
    @Test
    public void workflowExecutionCompletedEventAttributesTest() {
        // TODO: test workflowExecutionCompletedEventAttributes
    }

    /**
     * Test the property 'completeWorkflowExecutionFailedEventAttributes'
     */
    @Test
    public void completeWorkflowExecutionFailedEventAttributesTest() {
        // TODO: test completeWorkflowExecutionFailedEventAttributes
    }

    /**
     * Test the property 'workflowExecutionFailedEventAttributes'
     */
    @Test
    public void workflowExecutionFailedEventAttributesTest() {
        // TODO: test workflowExecutionFailedEventAttributes
    }

    /**
     * Test the property 'failWorkflowExecutionFailedEventAttributes'
     */
    @Test
    public void failWorkflowExecutionFailedEventAttributesTest() {
        // TODO: test failWorkflowExecutionFailedEventAttributes
    }

    /**
     * Test the property 'workflowExecutionTimedOutEventAttributes'
     */
    @Test
    public void workflowExecutionTimedOutEventAttributesTest() {
        // TODO: test workflowExecutionTimedOutEventAttributes
    }

    /**
     * Test the property 'workflowExecutionCanceledEventAttributes'
     */
    @Test
    public void workflowExecutionCanceledEventAttributesTest() {
        // TODO: test workflowExecutionCanceledEventAttributes
    }

    /**
     * Test the property 'cancelWorkflowExecutionFailedEventAttributes'
     */
    @Test
    public void cancelWorkflowExecutionFailedEventAttributesTest() {
        // TODO: test cancelWorkflowExecutionFailedEventAttributes
    }

    /**
     * Test the property 'workflowExecutionContinuedAsNewEventAttributes'
     */
    @Test
    public void workflowExecutionContinuedAsNewEventAttributesTest() {
        // TODO: test workflowExecutionContinuedAsNewEventAttributes
    }

    /**
     * Test the property 'continueAsNewWorkflowExecutionFailedEventAttributes'
     */
    @Test
    public void continueAsNewWorkflowExecutionFailedEventAttributesTest() {
        // TODO: test continueAsNewWorkflowExecutionFailedEventAttributes
    }

    /**
     * Test the property 'workflowExecutionTerminatedEventAttributes'
     */
    @Test
    public void workflowExecutionTerminatedEventAttributesTest() {
        // TODO: test workflowExecutionTerminatedEventAttributes
    }

    /**
     * Test the property 'workflowExecutionCancelRequestedEventAttributes'
     */
    @Test
    public void workflowExecutionCancelRequestedEventAttributesTest() {
        // TODO: test workflowExecutionCancelRequestedEventAttributes
    }

    /**
     * Test the property 'decisionTaskScheduledEventAttributes'
     */
    @Test
    public void decisionTaskScheduledEventAttributesTest() {
        // TODO: test decisionTaskScheduledEventAttributes
    }

    /**
     * Test the property 'decisionTaskStartedEventAttributes'
     */
    @Test
    public void decisionTaskStartedEventAttributesTest() {
        // TODO: test decisionTaskStartedEventAttributes
    }

    /**
     * Test the property 'decisionTaskCompletedEventAttributes'
     */
    @Test
    public void decisionTaskCompletedEventAttributesTest() {
        // TODO: test decisionTaskCompletedEventAttributes
    }

    /**
     * Test the property 'decisionTaskTimedOutEventAttributes'
     */
    @Test
    public void decisionTaskTimedOutEventAttributesTest() {
        // TODO: test decisionTaskTimedOutEventAttributes
    }

    /**
     * Test the property 'activityTaskScheduledEventAttributes'
     */
    @Test
    public void activityTaskScheduledEventAttributesTest() {
        // TODO: test activityTaskScheduledEventAttributes
    }

    /**
     * Test the property 'activityTaskStartedEventAttributes'
     */
    @Test
    public void activityTaskStartedEventAttributesTest() {
        // TODO: test activityTaskStartedEventAttributes
    }

    /**
     * Test the property 'activityTaskCompletedEventAttributes'
     */
    @Test
    public void activityTaskCompletedEventAttributesTest() {
        // TODO: test activityTaskCompletedEventAttributes
    }

    /**
     * Test the property 'activityTaskFailedEventAttributes'
     */
    @Test
    public void activityTaskFailedEventAttributesTest() {
        // TODO: test activityTaskFailedEventAttributes
    }

    /**
     * Test the property 'activityTaskTimedOutEventAttributes'
     */
    @Test
    public void activityTaskTimedOutEventAttributesTest() {
        // TODO: test activityTaskTimedOutEventAttributes
    }

    /**
     * Test the property 'activityTaskCanceledEventAttributes'
     */
    @Test
    public void activityTaskCanceledEventAttributesTest() {
        // TODO: test activityTaskCanceledEventAttributes
    }

    /**
     * Test the property 'activityTaskCancelRequestedEventAttributes'
     */
    @Test
    public void activityTaskCancelRequestedEventAttributesTest() {
        // TODO: test activityTaskCancelRequestedEventAttributes
    }

    /**
     * Test the property 'workflowExecutionSignaledEventAttributes'
     */
    @Test
    public void workflowExecutionSignaledEventAttributesTest() {
        // TODO: test workflowExecutionSignaledEventAttributes
    }

    /**
     * Test the property 'markerRecordedEventAttributes'
     */
    @Test
    public void markerRecordedEventAttributesTest() {
        // TODO: test markerRecordedEventAttributes
    }

    /**
     * Test the property 'recordMarkerFailedEventAttributes'
     */
    @Test
    public void recordMarkerFailedEventAttributesTest() {
        // TODO: test recordMarkerFailedEventAttributes
    }

    /**
     * Test the property 'timerStartedEventAttributes'
     */
    @Test
    public void timerStartedEventAttributesTest() {
        // TODO: test timerStartedEventAttributes
    }

    /**
     * Test the property 'timerFiredEventAttributes'
     */
    @Test
    public void timerFiredEventAttributesTest() {
        // TODO: test timerFiredEventAttributes
    }

    /**
     * Test the property 'timerCanceledEventAttributes'
     */
    @Test
    public void timerCanceledEventAttributesTest() {
        // TODO: test timerCanceledEventAttributes
    }

    /**
     * Test the property 'startChildWorkflowExecutionInitiatedEventAttributes'
     */
    @Test
    public void startChildWorkflowExecutionInitiatedEventAttributesTest() {
        // TODO: test startChildWorkflowExecutionInitiatedEventAttributes
    }

    /**
     * Test the property 'childWorkflowExecutionStartedEventAttributes'
     */
    @Test
    public void childWorkflowExecutionStartedEventAttributesTest() {
        // TODO: test childWorkflowExecutionStartedEventAttributes
    }

    /**
     * Test the property 'childWorkflowExecutionCompletedEventAttributes'
     */
    @Test
    public void childWorkflowExecutionCompletedEventAttributesTest() {
        // TODO: test childWorkflowExecutionCompletedEventAttributes
    }

    /**
     * Test the property 'childWorkflowExecutionFailedEventAttributes'
     */
    @Test
    public void childWorkflowExecutionFailedEventAttributesTest() {
        // TODO: test childWorkflowExecutionFailedEventAttributes
    }

    /**
     * Test the property 'childWorkflowExecutionTimedOutEventAttributes'
     */
    @Test
    public void childWorkflowExecutionTimedOutEventAttributesTest() {
        // TODO: test childWorkflowExecutionTimedOutEventAttributes
    }

    /**
     * Test the property 'childWorkflowExecutionCanceledEventAttributes'
     */
    @Test
    public void childWorkflowExecutionCanceledEventAttributesTest() {
        // TODO: test childWorkflowExecutionCanceledEventAttributes
    }

    /**
     * Test the property 'childWorkflowExecutionTerminatedEventAttributes'
     */
    @Test
    public void childWorkflowExecutionTerminatedEventAttributesTest() {
        // TODO: test childWorkflowExecutionTerminatedEventAttributes
    }

    /**
     * Test the property 'signalExternalWorkflowExecutionInitiatedEventAttributes'
     */
    @Test
    public void signalExternalWorkflowExecutionInitiatedEventAttributesTest() {
        // TODO: test signalExternalWorkflowExecutionInitiatedEventAttributes
    }

    /**
     * Test the property 'externalWorkflowExecutionSignaledEventAttributes'
     */
    @Test
    public void externalWorkflowExecutionSignaledEventAttributesTest() {
        // TODO: test externalWorkflowExecutionSignaledEventAttributes
    }

    /**
     * Test the property 'signalExternalWorkflowExecutionFailedEventAttributes'
     */
    @Test
    public void signalExternalWorkflowExecutionFailedEventAttributesTest() {
        // TODO: test signalExternalWorkflowExecutionFailedEventAttributes
    }

    /**
     * Test the property 'externalWorkflowExecutionCancelRequestedEventAttributes'
     */
    @Test
    public void externalWorkflowExecutionCancelRequestedEventAttributesTest() {
        // TODO: test externalWorkflowExecutionCancelRequestedEventAttributes
    }

    /**
     * Test the property 'requestCancelExternalWorkflowExecutionInitiatedEventAttributes'
     */
    @Test
    public void requestCancelExternalWorkflowExecutionInitiatedEventAttributesTest() {
        // TODO: test requestCancelExternalWorkflowExecutionInitiatedEventAttributes
    }

    /**
     * Test the property 'requestCancelExternalWorkflowExecutionFailedEventAttributes'
     */
    @Test
    public void requestCancelExternalWorkflowExecutionFailedEventAttributesTest() {
        // TODO: test requestCancelExternalWorkflowExecutionFailedEventAttributes
    }

    /**
     * Test the property 'scheduleActivityTaskFailedEventAttributes'
     */
    @Test
    public void scheduleActivityTaskFailedEventAttributesTest() {
        // TODO: test scheduleActivityTaskFailedEventAttributes
    }

    /**
     * Test the property 'requestCancelActivityTaskFailedEventAttributes'
     */
    @Test
    public void requestCancelActivityTaskFailedEventAttributesTest() {
        // TODO: test requestCancelActivityTaskFailedEventAttributes
    }

    /**
     * Test the property 'startTimerFailedEventAttributes'
     */
    @Test
    public void startTimerFailedEventAttributesTest() {
        // TODO: test startTimerFailedEventAttributes
    }

    /**
     * Test the property 'cancelTimerFailedEventAttributes'
     */
    @Test
    public void cancelTimerFailedEventAttributesTest() {
        // TODO: test cancelTimerFailedEventAttributes
    }

    /**
     * Test the property 'startChildWorkflowExecutionFailedEventAttributes'
     */
    @Test
    public void startChildWorkflowExecutionFailedEventAttributesTest() {
        // TODO: test startChildWorkflowExecutionFailedEventAttributes
    }

    /**
     * Test the property 'lambdaFunctionScheduledEventAttributes'
     */
    @Test
    public void lambdaFunctionScheduledEventAttributesTest() {
        // TODO: test lambdaFunctionScheduledEventAttributes
    }

    /**
     * Test the property 'lambdaFunctionStartedEventAttributes'
     */
    @Test
    public void lambdaFunctionStartedEventAttributesTest() {
        // TODO: test lambdaFunctionStartedEventAttributes
    }

    /**
     * Test the property 'lambdaFunctionCompletedEventAttributes'
     */
    @Test
    public void lambdaFunctionCompletedEventAttributesTest() {
        // TODO: test lambdaFunctionCompletedEventAttributes
    }

    /**
     * Test the property 'lambdaFunctionFailedEventAttributes'
     */
    @Test
    public void lambdaFunctionFailedEventAttributesTest() {
        // TODO: test lambdaFunctionFailedEventAttributes
    }

    /**
     * Test the property 'lambdaFunctionTimedOutEventAttributes'
     */
    @Test
    public void lambdaFunctionTimedOutEventAttributesTest() {
        // TODO: test lambdaFunctionTimedOutEventAttributes
    }

    /**
     * Test the property 'scheduleLambdaFunctionFailedEventAttributes'
     */
    @Test
    public void scheduleLambdaFunctionFailedEventAttributesTest() {
        // TODO: test scheduleLambdaFunctionFailedEventAttributes
    }

    /**
     * Test the property 'startLambdaFunctionFailedEventAttributes'
     */
    @Test
    public void startLambdaFunctionFailedEventAttributesTest() {
        // TODO: test startLambdaFunctionFailedEventAttributes
    }

}
