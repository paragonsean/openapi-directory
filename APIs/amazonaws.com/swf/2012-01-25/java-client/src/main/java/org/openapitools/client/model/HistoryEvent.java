/*
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.EventType;
import org.openapitools.client.model.HistoryEventActivityTaskCancelRequestedEventAttributes;
import org.openapitools.client.model.HistoryEventActivityTaskCanceledEventAttributes;
import org.openapitools.client.model.HistoryEventActivityTaskCompletedEventAttributes;
import org.openapitools.client.model.HistoryEventActivityTaskFailedEventAttributes;
import org.openapitools.client.model.HistoryEventActivityTaskScheduledEventAttributes;
import org.openapitools.client.model.HistoryEventActivityTaskStartedEventAttributes;
import org.openapitools.client.model.HistoryEventActivityTaskTimedOutEventAttributes;
import org.openapitools.client.model.HistoryEventCancelTimerFailedEventAttributes;
import org.openapitools.client.model.HistoryEventCancelWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventChildWorkflowExecutionCanceledEventAttributes;
import org.openapitools.client.model.HistoryEventChildWorkflowExecutionCompletedEventAttributes;
import org.openapitools.client.model.HistoryEventChildWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventChildWorkflowExecutionStartedEventAttributes;
import org.openapitools.client.model.HistoryEventChildWorkflowExecutionTerminatedEventAttributes;
import org.openapitools.client.model.HistoryEventChildWorkflowExecutionTimedOutEventAttributes;
import org.openapitools.client.model.HistoryEventCompleteWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventContinueAsNewWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventDecisionTaskCompletedEventAttributes;
import org.openapitools.client.model.HistoryEventDecisionTaskScheduledEventAttributes;
import org.openapitools.client.model.HistoryEventDecisionTaskStartedEventAttributes;
import org.openapitools.client.model.HistoryEventDecisionTaskTimedOutEventAttributes;
import org.openapitools.client.model.HistoryEventExternalWorkflowExecutionCancelRequestedEventAttributes;
import org.openapitools.client.model.HistoryEventExternalWorkflowExecutionSignaledEventAttributes;
import org.openapitools.client.model.HistoryEventFailWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventLambdaFunctionCompletedEventAttributes;
import org.openapitools.client.model.HistoryEventLambdaFunctionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventLambdaFunctionScheduledEventAttributes;
import org.openapitools.client.model.HistoryEventLambdaFunctionStartedEventAttributes;
import org.openapitools.client.model.HistoryEventLambdaFunctionTimedOutEventAttributes;
import org.openapitools.client.model.HistoryEventMarkerRecordedEventAttributes;
import org.openapitools.client.model.HistoryEventRecordMarkerFailedEventAttributes;
import org.openapitools.client.model.HistoryEventRequestCancelActivityTaskFailedEventAttributes;
import org.openapitools.client.model.HistoryEventRequestCancelExternalWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventRequestCancelExternalWorkflowExecutionInitiatedEventAttributes;
import org.openapitools.client.model.HistoryEventScheduleActivityTaskFailedEventAttributes;
import org.openapitools.client.model.HistoryEventScheduleLambdaFunctionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventSignalExternalWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventSignalExternalWorkflowExecutionInitiatedEventAttributes;
import org.openapitools.client.model.HistoryEventStartChildWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventStartChildWorkflowExecutionInitiatedEventAttributes;
import org.openapitools.client.model.HistoryEventStartLambdaFunctionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventStartTimerFailedEventAttributes;
import org.openapitools.client.model.HistoryEventTimerCanceledEventAttributes;
import org.openapitools.client.model.HistoryEventTimerFiredEventAttributes;
import org.openapitools.client.model.HistoryEventTimerStartedEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionCancelRequestedEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionCanceledEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionCompletedEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionContinuedAsNewEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionFailedEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionSignaledEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionStartedEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionTerminatedEventAttributes;
import org.openapitools.client.model.HistoryEventWorkflowExecutionTimedOutEventAttributes;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Event within a workflow execution. A history event can be one of these types:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ActivityTaskCancelRequested&lt;/code&gt; – A &lt;code&gt;RequestCancelActivityTask&lt;/code&gt; decision was received by the system.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ActivityTaskCanceled&lt;/code&gt; – The activity task was successfully canceled.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ActivityTaskCompleted&lt;/code&gt; – An activity worker successfully completed an activity task by calling &lt;a&gt;RespondActivityTaskCompleted&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ActivityTaskFailed&lt;/code&gt; – An activity worker failed an activity task by calling &lt;a&gt;RespondActivityTaskFailed&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ActivityTaskScheduled&lt;/code&gt; – An activity task was scheduled for execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ActivityTaskStarted&lt;/code&gt; – The scheduled activity task was dispatched to a worker.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ActivityTaskTimedOut&lt;/code&gt; – The activity task timed out.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;CancelTimerFailed&lt;/code&gt; – Failed to process CancelTimer decision. This happens when the decision isn&#39;t configured properly, for example no timer exists with the specified timer Id.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;CancelWorkflowExecutionFailed&lt;/code&gt; – A request to cancel a workflow execution failed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ChildWorkflowExecutionCanceled&lt;/code&gt; – A child workflow execution, started by this workflow execution, was canceled and closed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ChildWorkflowExecutionCompleted&lt;/code&gt; – A child workflow execution, started by this workflow execution, completed successfully and was closed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ChildWorkflowExecutionFailed&lt;/code&gt; – A child workflow execution, started by this workflow execution, failed to complete successfully and was closed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ChildWorkflowExecutionStarted&lt;/code&gt; – A child workflow execution was successfully started.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ChildWorkflowExecutionTerminated&lt;/code&gt; – A child workflow execution, started by this workflow execution, was terminated.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ChildWorkflowExecutionTimedOut&lt;/code&gt; – A child workflow execution, started by this workflow execution, timed out and was closed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;CompleteWorkflowExecutionFailed&lt;/code&gt; – The workflow execution failed to complete.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ContinueAsNewWorkflowExecutionFailed&lt;/code&gt; – The workflow execution failed to complete after being continued as a new workflow execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DecisionTaskCompleted&lt;/code&gt; – The decider successfully completed a decision task by calling &lt;a&gt;RespondDecisionTaskCompleted&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DecisionTaskScheduled&lt;/code&gt; – A decision task was scheduled for the workflow execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DecisionTaskStarted&lt;/code&gt; – The decision task was dispatched to a decider.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DecisionTaskTimedOut&lt;/code&gt; – The decision task timed out.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ExternalWorkflowExecutionCancelRequested&lt;/code&gt; – Request to cancel an external workflow execution was successfully delivered to the target execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ExternalWorkflowExecutionSignaled&lt;/code&gt; – A signal, requested by this workflow execution, was successfully delivered to the target external workflow execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;FailWorkflowExecutionFailed&lt;/code&gt; – A request to mark a workflow execution as failed, itself failed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;MarkerRecorded&lt;/code&gt; – A marker was recorded in the workflow history as the result of a &lt;code&gt;RecordMarker&lt;/code&gt; decision.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RecordMarkerFailed&lt;/code&gt; – A &lt;code&gt;RecordMarker&lt;/code&gt; decision was returned as failed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RequestCancelActivityTaskFailed&lt;/code&gt; – Failed to process RequestCancelActivityTask decision. This happens when the decision isn&#39;t configured properly.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RequestCancelExternalWorkflowExecutionFailed&lt;/code&gt; – Request to cancel an external workflow execution failed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RequestCancelExternalWorkflowExecutionInitiated&lt;/code&gt; – A request was made to request the cancellation of an external workflow execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ScheduleActivityTaskFailed&lt;/code&gt; – Failed to process ScheduleActivityTask decision. This happens when the decision isn&#39;t configured properly, for example the activity type specified isn&#39;t registered.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;SignalExternalWorkflowExecutionFailed&lt;/code&gt; – The request to signal an external workflow execution failed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;SignalExternalWorkflowExecutionInitiated&lt;/code&gt; – A request to signal an external workflow was made.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;StartActivityTaskFailed&lt;/code&gt; – A scheduled activity task failed to start.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;StartChildWorkflowExecutionFailed&lt;/code&gt; – Failed to process StartChildWorkflowExecution decision. This happens when the decision isn&#39;t configured properly, for example the workflow type specified isn&#39;t registered.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;StartChildWorkflowExecutionInitiated&lt;/code&gt; – A request was made to start a child workflow execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;StartTimerFailed&lt;/code&gt; – Failed to process StartTimer decision. This happens when the decision isn&#39;t configured properly, for example a timer already exists with the specified timer Id.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;TimerCanceled&lt;/code&gt; – A timer, previously started for this workflow execution, was successfully canceled.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;TimerFired&lt;/code&gt; – A timer, previously started for this workflow execution, fired.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;TimerStarted&lt;/code&gt; – A timer was started for the workflow execution due to a &lt;code&gt;StartTimer&lt;/code&gt; decision.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionCancelRequested&lt;/code&gt; – A request to cancel this workflow execution was made.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionCanceled&lt;/code&gt; – The workflow execution was successfully canceled and closed.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionCompleted&lt;/code&gt; – The workflow execution was closed due to successful completion.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionContinuedAsNew&lt;/code&gt; – The workflow execution was closed and a new execution of the same type was created with the same workflowId.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionFailed&lt;/code&gt; – The workflow execution closed due to a failure.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionSignaled&lt;/code&gt; – An external signal was received for the workflow execution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionStarted&lt;/code&gt; – The workflow execution was started.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionTerminated&lt;/code&gt; – The workflow execution was terminated.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;WorkflowExecutionTimedOut&lt;/code&gt; – The workflow execution was closed because a time out was exceeded.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:07.181417-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class HistoryEvent {
  public static final String SERIALIZED_NAME_EVENT_TIMESTAMP = "eventTimestamp";
  @SerializedName(SERIALIZED_NAME_EVENT_TIMESTAMP)
  private OffsetDateTime eventTimestamp;

  public static final String SERIALIZED_NAME_EVENT_TYPE = "eventType";
  @SerializedName(SERIALIZED_NAME_EVENT_TYPE)
  private EventType eventType;

  public static final String SERIALIZED_NAME_EVENT_ID = "eventId";
  @SerializedName(SERIALIZED_NAME_EVENT_ID)
  private Integer eventId;

  public static final String SERIALIZED_NAME_WORKFLOW_EXECUTION_STARTED_EVENT_ATTRIBUTES = "workflowExecutionStartedEventAttributes";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_EXECUTION_STARTED_EVENT_ATTRIBUTES)
  private HistoryEventWorkflowExecutionStartedEventAttributes workflowExecutionStartedEventAttributes;

  public static final String SERIALIZED_NAME_WORKFLOW_EXECUTION_COMPLETED_EVENT_ATTRIBUTES = "workflowExecutionCompletedEventAttributes";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_EXECUTION_COMPLETED_EVENT_ATTRIBUTES)
  private HistoryEventWorkflowExecutionCompletedEventAttributes workflowExecutionCompletedEventAttributes;

  public static final String SERIALIZED_NAME_COMPLETE_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES = "completeWorkflowExecutionFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_COMPLETE_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventCompleteWorkflowExecutionFailedEventAttributes completeWorkflowExecutionFailedEventAttributes;

  public static final String SERIALIZED_NAME_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES = "workflowExecutionFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventWorkflowExecutionFailedEventAttributes workflowExecutionFailedEventAttributes;

  public static final String SERIALIZED_NAME_FAIL_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES = "failWorkflowExecutionFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_FAIL_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventFailWorkflowExecutionFailedEventAttributes failWorkflowExecutionFailedEventAttributes;

  public static final String SERIALIZED_NAME_WORKFLOW_EXECUTION_TIMED_OUT_EVENT_ATTRIBUTES = "workflowExecutionTimedOutEventAttributes";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_EXECUTION_TIMED_OUT_EVENT_ATTRIBUTES)
  private HistoryEventWorkflowExecutionTimedOutEventAttributes workflowExecutionTimedOutEventAttributes;

  public static final String SERIALIZED_NAME_WORKFLOW_EXECUTION_CANCELED_EVENT_ATTRIBUTES = "workflowExecutionCanceledEventAttributes";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_EXECUTION_CANCELED_EVENT_ATTRIBUTES)
  private HistoryEventWorkflowExecutionCanceledEventAttributes workflowExecutionCanceledEventAttributes;

  public static final String SERIALIZED_NAME_CANCEL_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES = "cancelWorkflowExecutionFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_CANCEL_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventCancelWorkflowExecutionFailedEventAttributes cancelWorkflowExecutionFailedEventAttributes;

  public static final String SERIALIZED_NAME_WORKFLOW_EXECUTION_CONTINUED_AS_NEW_EVENT_ATTRIBUTES = "workflowExecutionContinuedAsNewEventAttributes";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_EXECUTION_CONTINUED_AS_NEW_EVENT_ATTRIBUTES)
  private HistoryEventWorkflowExecutionContinuedAsNewEventAttributes workflowExecutionContinuedAsNewEventAttributes;

  public static final String SERIALIZED_NAME_CONTINUE_AS_NEW_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES = "continueAsNewWorkflowExecutionFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_CONTINUE_AS_NEW_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventContinueAsNewWorkflowExecutionFailedEventAttributes continueAsNewWorkflowExecutionFailedEventAttributes;

  public static final String SERIALIZED_NAME_WORKFLOW_EXECUTION_TERMINATED_EVENT_ATTRIBUTES = "workflowExecutionTerminatedEventAttributes";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_EXECUTION_TERMINATED_EVENT_ATTRIBUTES)
  private HistoryEventWorkflowExecutionTerminatedEventAttributes workflowExecutionTerminatedEventAttributes;

  public static final String SERIALIZED_NAME_WORKFLOW_EXECUTION_CANCEL_REQUESTED_EVENT_ATTRIBUTES = "workflowExecutionCancelRequestedEventAttributes";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_EXECUTION_CANCEL_REQUESTED_EVENT_ATTRIBUTES)
  private HistoryEventWorkflowExecutionCancelRequestedEventAttributes workflowExecutionCancelRequestedEventAttributes;

  public static final String SERIALIZED_NAME_DECISION_TASK_SCHEDULED_EVENT_ATTRIBUTES = "decisionTaskScheduledEventAttributes";
  @SerializedName(SERIALIZED_NAME_DECISION_TASK_SCHEDULED_EVENT_ATTRIBUTES)
  private HistoryEventDecisionTaskScheduledEventAttributes decisionTaskScheduledEventAttributes;

  public static final String SERIALIZED_NAME_DECISION_TASK_STARTED_EVENT_ATTRIBUTES = "decisionTaskStartedEventAttributes";
  @SerializedName(SERIALIZED_NAME_DECISION_TASK_STARTED_EVENT_ATTRIBUTES)
  private HistoryEventDecisionTaskStartedEventAttributes decisionTaskStartedEventAttributes;

  public static final String SERIALIZED_NAME_DECISION_TASK_COMPLETED_EVENT_ATTRIBUTES = "decisionTaskCompletedEventAttributes";
  @SerializedName(SERIALIZED_NAME_DECISION_TASK_COMPLETED_EVENT_ATTRIBUTES)
  private HistoryEventDecisionTaskCompletedEventAttributes decisionTaskCompletedEventAttributes;

  public static final String SERIALIZED_NAME_DECISION_TASK_TIMED_OUT_EVENT_ATTRIBUTES = "decisionTaskTimedOutEventAttributes";
  @SerializedName(SERIALIZED_NAME_DECISION_TASK_TIMED_OUT_EVENT_ATTRIBUTES)
  private HistoryEventDecisionTaskTimedOutEventAttributes decisionTaskTimedOutEventAttributes;

  public static final String SERIALIZED_NAME_ACTIVITY_TASK_SCHEDULED_EVENT_ATTRIBUTES = "activityTaskScheduledEventAttributes";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_TASK_SCHEDULED_EVENT_ATTRIBUTES)
  private HistoryEventActivityTaskScheduledEventAttributes activityTaskScheduledEventAttributes;

  public static final String SERIALIZED_NAME_ACTIVITY_TASK_STARTED_EVENT_ATTRIBUTES = "activityTaskStartedEventAttributes";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_TASK_STARTED_EVENT_ATTRIBUTES)
  private HistoryEventActivityTaskStartedEventAttributes activityTaskStartedEventAttributes;

  public static final String SERIALIZED_NAME_ACTIVITY_TASK_COMPLETED_EVENT_ATTRIBUTES = "activityTaskCompletedEventAttributes";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_TASK_COMPLETED_EVENT_ATTRIBUTES)
  private HistoryEventActivityTaskCompletedEventAttributes activityTaskCompletedEventAttributes;

  public static final String SERIALIZED_NAME_ACTIVITY_TASK_FAILED_EVENT_ATTRIBUTES = "activityTaskFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_TASK_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventActivityTaskFailedEventAttributes activityTaskFailedEventAttributes;

  public static final String SERIALIZED_NAME_ACTIVITY_TASK_TIMED_OUT_EVENT_ATTRIBUTES = "activityTaskTimedOutEventAttributes";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_TASK_TIMED_OUT_EVENT_ATTRIBUTES)
  private HistoryEventActivityTaskTimedOutEventAttributes activityTaskTimedOutEventAttributes;

  public static final String SERIALIZED_NAME_ACTIVITY_TASK_CANCELED_EVENT_ATTRIBUTES = "activityTaskCanceledEventAttributes";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_TASK_CANCELED_EVENT_ATTRIBUTES)
  private HistoryEventActivityTaskCanceledEventAttributes activityTaskCanceledEventAttributes;

  public static final String SERIALIZED_NAME_ACTIVITY_TASK_CANCEL_REQUESTED_EVENT_ATTRIBUTES = "activityTaskCancelRequestedEventAttributes";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_TASK_CANCEL_REQUESTED_EVENT_ATTRIBUTES)
  private HistoryEventActivityTaskCancelRequestedEventAttributes activityTaskCancelRequestedEventAttributes;

  public static final String SERIALIZED_NAME_WORKFLOW_EXECUTION_SIGNALED_EVENT_ATTRIBUTES = "workflowExecutionSignaledEventAttributes";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_EXECUTION_SIGNALED_EVENT_ATTRIBUTES)
  private HistoryEventWorkflowExecutionSignaledEventAttributes workflowExecutionSignaledEventAttributes;

  public static final String SERIALIZED_NAME_MARKER_RECORDED_EVENT_ATTRIBUTES = "markerRecordedEventAttributes";
  @SerializedName(SERIALIZED_NAME_MARKER_RECORDED_EVENT_ATTRIBUTES)
  private HistoryEventMarkerRecordedEventAttributes markerRecordedEventAttributes;

  public static final String SERIALIZED_NAME_RECORD_MARKER_FAILED_EVENT_ATTRIBUTES = "recordMarkerFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_RECORD_MARKER_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventRecordMarkerFailedEventAttributes recordMarkerFailedEventAttributes;

  public static final String SERIALIZED_NAME_TIMER_STARTED_EVENT_ATTRIBUTES = "timerStartedEventAttributes";
  @SerializedName(SERIALIZED_NAME_TIMER_STARTED_EVENT_ATTRIBUTES)
  private HistoryEventTimerStartedEventAttributes timerStartedEventAttributes;

  public static final String SERIALIZED_NAME_TIMER_FIRED_EVENT_ATTRIBUTES = "timerFiredEventAttributes";
  @SerializedName(SERIALIZED_NAME_TIMER_FIRED_EVENT_ATTRIBUTES)
  private HistoryEventTimerFiredEventAttributes timerFiredEventAttributes;

  public static final String SERIALIZED_NAME_TIMER_CANCELED_EVENT_ATTRIBUTES = "timerCanceledEventAttributes";
  @SerializedName(SERIALIZED_NAME_TIMER_CANCELED_EVENT_ATTRIBUTES)
  private HistoryEventTimerCanceledEventAttributes timerCanceledEventAttributes;

  public static final String SERIALIZED_NAME_START_CHILD_WORKFLOW_EXECUTION_INITIATED_EVENT_ATTRIBUTES = "startChildWorkflowExecutionInitiatedEventAttributes";
  @SerializedName(SERIALIZED_NAME_START_CHILD_WORKFLOW_EXECUTION_INITIATED_EVENT_ATTRIBUTES)
  private HistoryEventStartChildWorkflowExecutionInitiatedEventAttributes startChildWorkflowExecutionInitiatedEventAttributes;

  public static final String SERIALIZED_NAME_CHILD_WORKFLOW_EXECUTION_STARTED_EVENT_ATTRIBUTES = "childWorkflowExecutionStartedEventAttributes";
  @SerializedName(SERIALIZED_NAME_CHILD_WORKFLOW_EXECUTION_STARTED_EVENT_ATTRIBUTES)
  private HistoryEventChildWorkflowExecutionStartedEventAttributes childWorkflowExecutionStartedEventAttributes;

  public static final String SERIALIZED_NAME_CHILD_WORKFLOW_EXECUTION_COMPLETED_EVENT_ATTRIBUTES = "childWorkflowExecutionCompletedEventAttributes";
  @SerializedName(SERIALIZED_NAME_CHILD_WORKFLOW_EXECUTION_COMPLETED_EVENT_ATTRIBUTES)
  private HistoryEventChildWorkflowExecutionCompletedEventAttributes childWorkflowExecutionCompletedEventAttributes;

  public static final String SERIALIZED_NAME_CHILD_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES = "childWorkflowExecutionFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_CHILD_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventChildWorkflowExecutionFailedEventAttributes childWorkflowExecutionFailedEventAttributes;

  public static final String SERIALIZED_NAME_CHILD_WORKFLOW_EXECUTION_TIMED_OUT_EVENT_ATTRIBUTES = "childWorkflowExecutionTimedOutEventAttributes";
  @SerializedName(SERIALIZED_NAME_CHILD_WORKFLOW_EXECUTION_TIMED_OUT_EVENT_ATTRIBUTES)
  private HistoryEventChildWorkflowExecutionTimedOutEventAttributes childWorkflowExecutionTimedOutEventAttributes;

  public static final String SERIALIZED_NAME_CHILD_WORKFLOW_EXECUTION_CANCELED_EVENT_ATTRIBUTES = "childWorkflowExecutionCanceledEventAttributes";
  @SerializedName(SERIALIZED_NAME_CHILD_WORKFLOW_EXECUTION_CANCELED_EVENT_ATTRIBUTES)
  private HistoryEventChildWorkflowExecutionCanceledEventAttributes childWorkflowExecutionCanceledEventAttributes;

  public static final String SERIALIZED_NAME_CHILD_WORKFLOW_EXECUTION_TERMINATED_EVENT_ATTRIBUTES = "childWorkflowExecutionTerminatedEventAttributes";
  @SerializedName(SERIALIZED_NAME_CHILD_WORKFLOW_EXECUTION_TERMINATED_EVENT_ATTRIBUTES)
  private HistoryEventChildWorkflowExecutionTerminatedEventAttributes childWorkflowExecutionTerminatedEventAttributes;

  public static final String SERIALIZED_NAME_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED_EVENT_ATTRIBUTES = "signalExternalWorkflowExecutionInitiatedEventAttributes";
  @SerializedName(SERIALIZED_NAME_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED_EVENT_ATTRIBUTES)
  private HistoryEventSignalExternalWorkflowExecutionInitiatedEventAttributes signalExternalWorkflowExecutionInitiatedEventAttributes;

  public static final String SERIALIZED_NAME_EXTERNAL_WORKFLOW_EXECUTION_SIGNALED_EVENT_ATTRIBUTES = "externalWorkflowExecutionSignaledEventAttributes";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_WORKFLOW_EXECUTION_SIGNALED_EVENT_ATTRIBUTES)
  private HistoryEventExternalWorkflowExecutionSignaledEventAttributes externalWorkflowExecutionSignaledEventAttributes;

  public static final String SERIALIZED_NAME_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES = "signalExternalWorkflowExecutionFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventSignalExternalWorkflowExecutionFailedEventAttributes signalExternalWorkflowExecutionFailedEventAttributes;

  public static final String SERIALIZED_NAME_EXTERNAL_WORKFLOW_EXECUTION_CANCEL_REQUESTED_EVENT_ATTRIBUTES = "externalWorkflowExecutionCancelRequestedEventAttributes";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_WORKFLOW_EXECUTION_CANCEL_REQUESTED_EVENT_ATTRIBUTES)
  private HistoryEventExternalWorkflowExecutionCancelRequestedEventAttributes externalWorkflowExecutionCancelRequestedEventAttributes;

  public static final String SERIALIZED_NAME_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED_EVENT_ATTRIBUTES = "requestCancelExternalWorkflowExecutionInitiatedEventAttributes";
  @SerializedName(SERIALIZED_NAME_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED_EVENT_ATTRIBUTES)
  private HistoryEventRequestCancelExternalWorkflowExecutionInitiatedEventAttributes requestCancelExternalWorkflowExecutionInitiatedEventAttributes;

  public static final String SERIALIZED_NAME_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES = "requestCancelExternalWorkflowExecutionFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventRequestCancelExternalWorkflowExecutionFailedEventAttributes requestCancelExternalWorkflowExecutionFailedEventAttributes;

  public static final String SERIALIZED_NAME_SCHEDULE_ACTIVITY_TASK_FAILED_EVENT_ATTRIBUTES = "scheduleActivityTaskFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_ACTIVITY_TASK_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventScheduleActivityTaskFailedEventAttributes scheduleActivityTaskFailedEventAttributes;

  public static final String SERIALIZED_NAME_REQUEST_CANCEL_ACTIVITY_TASK_FAILED_EVENT_ATTRIBUTES = "requestCancelActivityTaskFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_REQUEST_CANCEL_ACTIVITY_TASK_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventRequestCancelActivityTaskFailedEventAttributes requestCancelActivityTaskFailedEventAttributes;

  public static final String SERIALIZED_NAME_START_TIMER_FAILED_EVENT_ATTRIBUTES = "startTimerFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_START_TIMER_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventStartTimerFailedEventAttributes startTimerFailedEventAttributes;

  public static final String SERIALIZED_NAME_CANCEL_TIMER_FAILED_EVENT_ATTRIBUTES = "cancelTimerFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_CANCEL_TIMER_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventCancelTimerFailedEventAttributes cancelTimerFailedEventAttributes;

  public static final String SERIALIZED_NAME_START_CHILD_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES = "startChildWorkflowExecutionFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_START_CHILD_WORKFLOW_EXECUTION_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventStartChildWorkflowExecutionFailedEventAttributes startChildWorkflowExecutionFailedEventAttributes;

  public static final String SERIALIZED_NAME_LAMBDA_FUNCTION_SCHEDULED_EVENT_ATTRIBUTES = "lambdaFunctionScheduledEventAttributes";
  @SerializedName(SERIALIZED_NAME_LAMBDA_FUNCTION_SCHEDULED_EVENT_ATTRIBUTES)
  private HistoryEventLambdaFunctionScheduledEventAttributes lambdaFunctionScheduledEventAttributes;

  public static final String SERIALIZED_NAME_LAMBDA_FUNCTION_STARTED_EVENT_ATTRIBUTES = "lambdaFunctionStartedEventAttributes";
  @SerializedName(SERIALIZED_NAME_LAMBDA_FUNCTION_STARTED_EVENT_ATTRIBUTES)
  private HistoryEventLambdaFunctionStartedEventAttributes lambdaFunctionStartedEventAttributes;

  public static final String SERIALIZED_NAME_LAMBDA_FUNCTION_COMPLETED_EVENT_ATTRIBUTES = "lambdaFunctionCompletedEventAttributes";
  @SerializedName(SERIALIZED_NAME_LAMBDA_FUNCTION_COMPLETED_EVENT_ATTRIBUTES)
  private HistoryEventLambdaFunctionCompletedEventAttributes lambdaFunctionCompletedEventAttributes;

  public static final String SERIALIZED_NAME_LAMBDA_FUNCTION_FAILED_EVENT_ATTRIBUTES = "lambdaFunctionFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_LAMBDA_FUNCTION_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventLambdaFunctionFailedEventAttributes lambdaFunctionFailedEventAttributes;

  public static final String SERIALIZED_NAME_LAMBDA_FUNCTION_TIMED_OUT_EVENT_ATTRIBUTES = "lambdaFunctionTimedOutEventAttributes";
  @SerializedName(SERIALIZED_NAME_LAMBDA_FUNCTION_TIMED_OUT_EVENT_ATTRIBUTES)
  private HistoryEventLambdaFunctionTimedOutEventAttributes lambdaFunctionTimedOutEventAttributes;

  public static final String SERIALIZED_NAME_SCHEDULE_LAMBDA_FUNCTION_FAILED_EVENT_ATTRIBUTES = "scheduleLambdaFunctionFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_LAMBDA_FUNCTION_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventScheduleLambdaFunctionFailedEventAttributes scheduleLambdaFunctionFailedEventAttributes;

  public static final String SERIALIZED_NAME_START_LAMBDA_FUNCTION_FAILED_EVENT_ATTRIBUTES = "startLambdaFunctionFailedEventAttributes";
  @SerializedName(SERIALIZED_NAME_START_LAMBDA_FUNCTION_FAILED_EVENT_ATTRIBUTES)
  private HistoryEventStartLambdaFunctionFailedEventAttributes startLambdaFunctionFailedEventAttributes;

  public HistoryEvent() {
  }

  public HistoryEvent eventTimestamp(OffsetDateTime eventTimestamp) {
    this.eventTimestamp = eventTimestamp;
    return this;
  }

  /**
   * Get eventTimestamp
   * @return eventTimestamp
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getEventTimestamp() {
    return eventTimestamp;
  }

  public void setEventTimestamp(OffsetDateTime eventTimestamp) {
    this.eventTimestamp = eventTimestamp;
  }


  public HistoryEvent eventType(EventType eventType) {
    this.eventType = eventType;
    return this;
  }

  /**
   * Get eventType
   * @return eventType
   */
  @javax.annotation.Nonnull
  public EventType getEventType() {
    return eventType;
  }

  public void setEventType(EventType eventType) {
    this.eventType = eventType;
  }


  public HistoryEvent eventId(Integer eventId) {
    this.eventId = eventId;
    return this;
  }

  /**
   * Get eventId
   * @return eventId
   */
  @javax.annotation.Nonnull
  public Integer getEventId() {
    return eventId;
  }

  public void setEventId(Integer eventId) {
    this.eventId = eventId;
  }


  public HistoryEvent workflowExecutionStartedEventAttributes(HistoryEventWorkflowExecutionStartedEventAttributes workflowExecutionStartedEventAttributes) {
    this.workflowExecutionStartedEventAttributes = workflowExecutionStartedEventAttributes;
    return this;
  }

  /**
   * Get workflowExecutionStartedEventAttributes
   * @return workflowExecutionStartedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventWorkflowExecutionStartedEventAttributes getWorkflowExecutionStartedEventAttributes() {
    return workflowExecutionStartedEventAttributes;
  }

  public void setWorkflowExecutionStartedEventAttributes(HistoryEventWorkflowExecutionStartedEventAttributes workflowExecutionStartedEventAttributes) {
    this.workflowExecutionStartedEventAttributes = workflowExecutionStartedEventAttributes;
  }


  public HistoryEvent workflowExecutionCompletedEventAttributes(HistoryEventWorkflowExecutionCompletedEventAttributes workflowExecutionCompletedEventAttributes) {
    this.workflowExecutionCompletedEventAttributes = workflowExecutionCompletedEventAttributes;
    return this;
  }

  /**
   * Get workflowExecutionCompletedEventAttributes
   * @return workflowExecutionCompletedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventWorkflowExecutionCompletedEventAttributes getWorkflowExecutionCompletedEventAttributes() {
    return workflowExecutionCompletedEventAttributes;
  }

  public void setWorkflowExecutionCompletedEventAttributes(HistoryEventWorkflowExecutionCompletedEventAttributes workflowExecutionCompletedEventAttributes) {
    this.workflowExecutionCompletedEventAttributes = workflowExecutionCompletedEventAttributes;
  }


  public HistoryEvent completeWorkflowExecutionFailedEventAttributes(HistoryEventCompleteWorkflowExecutionFailedEventAttributes completeWorkflowExecutionFailedEventAttributes) {
    this.completeWorkflowExecutionFailedEventAttributes = completeWorkflowExecutionFailedEventAttributes;
    return this;
  }

  /**
   * Get completeWorkflowExecutionFailedEventAttributes
   * @return completeWorkflowExecutionFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventCompleteWorkflowExecutionFailedEventAttributes getCompleteWorkflowExecutionFailedEventAttributes() {
    return completeWorkflowExecutionFailedEventAttributes;
  }

  public void setCompleteWorkflowExecutionFailedEventAttributes(HistoryEventCompleteWorkflowExecutionFailedEventAttributes completeWorkflowExecutionFailedEventAttributes) {
    this.completeWorkflowExecutionFailedEventAttributes = completeWorkflowExecutionFailedEventAttributes;
  }


  public HistoryEvent workflowExecutionFailedEventAttributes(HistoryEventWorkflowExecutionFailedEventAttributes workflowExecutionFailedEventAttributes) {
    this.workflowExecutionFailedEventAttributes = workflowExecutionFailedEventAttributes;
    return this;
  }

  /**
   * Get workflowExecutionFailedEventAttributes
   * @return workflowExecutionFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventWorkflowExecutionFailedEventAttributes getWorkflowExecutionFailedEventAttributes() {
    return workflowExecutionFailedEventAttributes;
  }

  public void setWorkflowExecutionFailedEventAttributes(HistoryEventWorkflowExecutionFailedEventAttributes workflowExecutionFailedEventAttributes) {
    this.workflowExecutionFailedEventAttributes = workflowExecutionFailedEventAttributes;
  }


  public HistoryEvent failWorkflowExecutionFailedEventAttributes(HistoryEventFailWorkflowExecutionFailedEventAttributes failWorkflowExecutionFailedEventAttributes) {
    this.failWorkflowExecutionFailedEventAttributes = failWorkflowExecutionFailedEventAttributes;
    return this;
  }

  /**
   * Get failWorkflowExecutionFailedEventAttributes
   * @return failWorkflowExecutionFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventFailWorkflowExecutionFailedEventAttributes getFailWorkflowExecutionFailedEventAttributes() {
    return failWorkflowExecutionFailedEventAttributes;
  }

  public void setFailWorkflowExecutionFailedEventAttributes(HistoryEventFailWorkflowExecutionFailedEventAttributes failWorkflowExecutionFailedEventAttributes) {
    this.failWorkflowExecutionFailedEventAttributes = failWorkflowExecutionFailedEventAttributes;
  }


  public HistoryEvent workflowExecutionTimedOutEventAttributes(HistoryEventWorkflowExecutionTimedOutEventAttributes workflowExecutionTimedOutEventAttributes) {
    this.workflowExecutionTimedOutEventAttributes = workflowExecutionTimedOutEventAttributes;
    return this;
  }

  /**
   * Get workflowExecutionTimedOutEventAttributes
   * @return workflowExecutionTimedOutEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventWorkflowExecutionTimedOutEventAttributes getWorkflowExecutionTimedOutEventAttributes() {
    return workflowExecutionTimedOutEventAttributes;
  }

  public void setWorkflowExecutionTimedOutEventAttributes(HistoryEventWorkflowExecutionTimedOutEventAttributes workflowExecutionTimedOutEventAttributes) {
    this.workflowExecutionTimedOutEventAttributes = workflowExecutionTimedOutEventAttributes;
  }


  public HistoryEvent workflowExecutionCanceledEventAttributes(HistoryEventWorkflowExecutionCanceledEventAttributes workflowExecutionCanceledEventAttributes) {
    this.workflowExecutionCanceledEventAttributes = workflowExecutionCanceledEventAttributes;
    return this;
  }

  /**
   * Get workflowExecutionCanceledEventAttributes
   * @return workflowExecutionCanceledEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventWorkflowExecutionCanceledEventAttributes getWorkflowExecutionCanceledEventAttributes() {
    return workflowExecutionCanceledEventAttributes;
  }

  public void setWorkflowExecutionCanceledEventAttributes(HistoryEventWorkflowExecutionCanceledEventAttributes workflowExecutionCanceledEventAttributes) {
    this.workflowExecutionCanceledEventAttributes = workflowExecutionCanceledEventAttributes;
  }


  public HistoryEvent cancelWorkflowExecutionFailedEventAttributes(HistoryEventCancelWorkflowExecutionFailedEventAttributes cancelWorkflowExecutionFailedEventAttributes) {
    this.cancelWorkflowExecutionFailedEventAttributes = cancelWorkflowExecutionFailedEventAttributes;
    return this;
  }

  /**
   * Get cancelWorkflowExecutionFailedEventAttributes
   * @return cancelWorkflowExecutionFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventCancelWorkflowExecutionFailedEventAttributes getCancelWorkflowExecutionFailedEventAttributes() {
    return cancelWorkflowExecutionFailedEventAttributes;
  }

  public void setCancelWorkflowExecutionFailedEventAttributes(HistoryEventCancelWorkflowExecutionFailedEventAttributes cancelWorkflowExecutionFailedEventAttributes) {
    this.cancelWorkflowExecutionFailedEventAttributes = cancelWorkflowExecutionFailedEventAttributes;
  }


  public HistoryEvent workflowExecutionContinuedAsNewEventAttributes(HistoryEventWorkflowExecutionContinuedAsNewEventAttributes workflowExecutionContinuedAsNewEventAttributes) {
    this.workflowExecutionContinuedAsNewEventAttributes = workflowExecutionContinuedAsNewEventAttributes;
    return this;
  }

  /**
   * Get workflowExecutionContinuedAsNewEventAttributes
   * @return workflowExecutionContinuedAsNewEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventWorkflowExecutionContinuedAsNewEventAttributes getWorkflowExecutionContinuedAsNewEventAttributes() {
    return workflowExecutionContinuedAsNewEventAttributes;
  }

  public void setWorkflowExecutionContinuedAsNewEventAttributes(HistoryEventWorkflowExecutionContinuedAsNewEventAttributes workflowExecutionContinuedAsNewEventAttributes) {
    this.workflowExecutionContinuedAsNewEventAttributes = workflowExecutionContinuedAsNewEventAttributes;
  }


  public HistoryEvent continueAsNewWorkflowExecutionFailedEventAttributes(HistoryEventContinueAsNewWorkflowExecutionFailedEventAttributes continueAsNewWorkflowExecutionFailedEventAttributes) {
    this.continueAsNewWorkflowExecutionFailedEventAttributes = continueAsNewWorkflowExecutionFailedEventAttributes;
    return this;
  }

  /**
   * Get continueAsNewWorkflowExecutionFailedEventAttributes
   * @return continueAsNewWorkflowExecutionFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventContinueAsNewWorkflowExecutionFailedEventAttributes getContinueAsNewWorkflowExecutionFailedEventAttributes() {
    return continueAsNewWorkflowExecutionFailedEventAttributes;
  }

  public void setContinueAsNewWorkflowExecutionFailedEventAttributes(HistoryEventContinueAsNewWorkflowExecutionFailedEventAttributes continueAsNewWorkflowExecutionFailedEventAttributes) {
    this.continueAsNewWorkflowExecutionFailedEventAttributes = continueAsNewWorkflowExecutionFailedEventAttributes;
  }


  public HistoryEvent workflowExecutionTerminatedEventAttributes(HistoryEventWorkflowExecutionTerminatedEventAttributes workflowExecutionTerminatedEventAttributes) {
    this.workflowExecutionTerminatedEventAttributes = workflowExecutionTerminatedEventAttributes;
    return this;
  }

  /**
   * Get workflowExecutionTerminatedEventAttributes
   * @return workflowExecutionTerminatedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventWorkflowExecutionTerminatedEventAttributes getWorkflowExecutionTerminatedEventAttributes() {
    return workflowExecutionTerminatedEventAttributes;
  }

  public void setWorkflowExecutionTerminatedEventAttributes(HistoryEventWorkflowExecutionTerminatedEventAttributes workflowExecutionTerminatedEventAttributes) {
    this.workflowExecutionTerminatedEventAttributes = workflowExecutionTerminatedEventAttributes;
  }


  public HistoryEvent workflowExecutionCancelRequestedEventAttributes(HistoryEventWorkflowExecutionCancelRequestedEventAttributes workflowExecutionCancelRequestedEventAttributes) {
    this.workflowExecutionCancelRequestedEventAttributes = workflowExecutionCancelRequestedEventAttributes;
    return this;
  }

  /**
   * Get workflowExecutionCancelRequestedEventAttributes
   * @return workflowExecutionCancelRequestedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventWorkflowExecutionCancelRequestedEventAttributes getWorkflowExecutionCancelRequestedEventAttributes() {
    return workflowExecutionCancelRequestedEventAttributes;
  }

  public void setWorkflowExecutionCancelRequestedEventAttributes(HistoryEventWorkflowExecutionCancelRequestedEventAttributes workflowExecutionCancelRequestedEventAttributes) {
    this.workflowExecutionCancelRequestedEventAttributes = workflowExecutionCancelRequestedEventAttributes;
  }


  public HistoryEvent decisionTaskScheduledEventAttributes(HistoryEventDecisionTaskScheduledEventAttributes decisionTaskScheduledEventAttributes) {
    this.decisionTaskScheduledEventAttributes = decisionTaskScheduledEventAttributes;
    return this;
  }

  /**
   * Get decisionTaskScheduledEventAttributes
   * @return decisionTaskScheduledEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventDecisionTaskScheduledEventAttributes getDecisionTaskScheduledEventAttributes() {
    return decisionTaskScheduledEventAttributes;
  }

  public void setDecisionTaskScheduledEventAttributes(HistoryEventDecisionTaskScheduledEventAttributes decisionTaskScheduledEventAttributes) {
    this.decisionTaskScheduledEventAttributes = decisionTaskScheduledEventAttributes;
  }


  public HistoryEvent decisionTaskStartedEventAttributes(HistoryEventDecisionTaskStartedEventAttributes decisionTaskStartedEventAttributes) {
    this.decisionTaskStartedEventAttributes = decisionTaskStartedEventAttributes;
    return this;
  }

  /**
   * Get decisionTaskStartedEventAttributes
   * @return decisionTaskStartedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventDecisionTaskStartedEventAttributes getDecisionTaskStartedEventAttributes() {
    return decisionTaskStartedEventAttributes;
  }

  public void setDecisionTaskStartedEventAttributes(HistoryEventDecisionTaskStartedEventAttributes decisionTaskStartedEventAttributes) {
    this.decisionTaskStartedEventAttributes = decisionTaskStartedEventAttributes;
  }


  public HistoryEvent decisionTaskCompletedEventAttributes(HistoryEventDecisionTaskCompletedEventAttributes decisionTaskCompletedEventAttributes) {
    this.decisionTaskCompletedEventAttributes = decisionTaskCompletedEventAttributes;
    return this;
  }

  /**
   * Get decisionTaskCompletedEventAttributes
   * @return decisionTaskCompletedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventDecisionTaskCompletedEventAttributes getDecisionTaskCompletedEventAttributes() {
    return decisionTaskCompletedEventAttributes;
  }

  public void setDecisionTaskCompletedEventAttributes(HistoryEventDecisionTaskCompletedEventAttributes decisionTaskCompletedEventAttributes) {
    this.decisionTaskCompletedEventAttributes = decisionTaskCompletedEventAttributes;
  }


  public HistoryEvent decisionTaskTimedOutEventAttributes(HistoryEventDecisionTaskTimedOutEventAttributes decisionTaskTimedOutEventAttributes) {
    this.decisionTaskTimedOutEventAttributes = decisionTaskTimedOutEventAttributes;
    return this;
  }

  /**
   * Get decisionTaskTimedOutEventAttributes
   * @return decisionTaskTimedOutEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventDecisionTaskTimedOutEventAttributes getDecisionTaskTimedOutEventAttributes() {
    return decisionTaskTimedOutEventAttributes;
  }

  public void setDecisionTaskTimedOutEventAttributes(HistoryEventDecisionTaskTimedOutEventAttributes decisionTaskTimedOutEventAttributes) {
    this.decisionTaskTimedOutEventAttributes = decisionTaskTimedOutEventAttributes;
  }


  public HistoryEvent activityTaskScheduledEventAttributes(HistoryEventActivityTaskScheduledEventAttributes activityTaskScheduledEventAttributes) {
    this.activityTaskScheduledEventAttributes = activityTaskScheduledEventAttributes;
    return this;
  }

  /**
   * Get activityTaskScheduledEventAttributes
   * @return activityTaskScheduledEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventActivityTaskScheduledEventAttributes getActivityTaskScheduledEventAttributes() {
    return activityTaskScheduledEventAttributes;
  }

  public void setActivityTaskScheduledEventAttributes(HistoryEventActivityTaskScheduledEventAttributes activityTaskScheduledEventAttributes) {
    this.activityTaskScheduledEventAttributes = activityTaskScheduledEventAttributes;
  }


  public HistoryEvent activityTaskStartedEventAttributes(HistoryEventActivityTaskStartedEventAttributes activityTaskStartedEventAttributes) {
    this.activityTaskStartedEventAttributes = activityTaskStartedEventAttributes;
    return this;
  }

  /**
   * Get activityTaskStartedEventAttributes
   * @return activityTaskStartedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventActivityTaskStartedEventAttributes getActivityTaskStartedEventAttributes() {
    return activityTaskStartedEventAttributes;
  }

  public void setActivityTaskStartedEventAttributes(HistoryEventActivityTaskStartedEventAttributes activityTaskStartedEventAttributes) {
    this.activityTaskStartedEventAttributes = activityTaskStartedEventAttributes;
  }


  public HistoryEvent activityTaskCompletedEventAttributes(HistoryEventActivityTaskCompletedEventAttributes activityTaskCompletedEventAttributes) {
    this.activityTaskCompletedEventAttributes = activityTaskCompletedEventAttributes;
    return this;
  }

  /**
   * Get activityTaskCompletedEventAttributes
   * @return activityTaskCompletedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventActivityTaskCompletedEventAttributes getActivityTaskCompletedEventAttributes() {
    return activityTaskCompletedEventAttributes;
  }

  public void setActivityTaskCompletedEventAttributes(HistoryEventActivityTaskCompletedEventAttributes activityTaskCompletedEventAttributes) {
    this.activityTaskCompletedEventAttributes = activityTaskCompletedEventAttributes;
  }


  public HistoryEvent activityTaskFailedEventAttributes(HistoryEventActivityTaskFailedEventAttributes activityTaskFailedEventAttributes) {
    this.activityTaskFailedEventAttributes = activityTaskFailedEventAttributes;
    return this;
  }

  /**
   * Get activityTaskFailedEventAttributes
   * @return activityTaskFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventActivityTaskFailedEventAttributes getActivityTaskFailedEventAttributes() {
    return activityTaskFailedEventAttributes;
  }

  public void setActivityTaskFailedEventAttributes(HistoryEventActivityTaskFailedEventAttributes activityTaskFailedEventAttributes) {
    this.activityTaskFailedEventAttributes = activityTaskFailedEventAttributes;
  }


  public HistoryEvent activityTaskTimedOutEventAttributes(HistoryEventActivityTaskTimedOutEventAttributes activityTaskTimedOutEventAttributes) {
    this.activityTaskTimedOutEventAttributes = activityTaskTimedOutEventAttributes;
    return this;
  }

  /**
   * Get activityTaskTimedOutEventAttributes
   * @return activityTaskTimedOutEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventActivityTaskTimedOutEventAttributes getActivityTaskTimedOutEventAttributes() {
    return activityTaskTimedOutEventAttributes;
  }

  public void setActivityTaskTimedOutEventAttributes(HistoryEventActivityTaskTimedOutEventAttributes activityTaskTimedOutEventAttributes) {
    this.activityTaskTimedOutEventAttributes = activityTaskTimedOutEventAttributes;
  }


  public HistoryEvent activityTaskCanceledEventAttributes(HistoryEventActivityTaskCanceledEventAttributes activityTaskCanceledEventAttributes) {
    this.activityTaskCanceledEventAttributes = activityTaskCanceledEventAttributes;
    return this;
  }

  /**
   * Get activityTaskCanceledEventAttributes
   * @return activityTaskCanceledEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventActivityTaskCanceledEventAttributes getActivityTaskCanceledEventAttributes() {
    return activityTaskCanceledEventAttributes;
  }

  public void setActivityTaskCanceledEventAttributes(HistoryEventActivityTaskCanceledEventAttributes activityTaskCanceledEventAttributes) {
    this.activityTaskCanceledEventAttributes = activityTaskCanceledEventAttributes;
  }


  public HistoryEvent activityTaskCancelRequestedEventAttributes(HistoryEventActivityTaskCancelRequestedEventAttributes activityTaskCancelRequestedEventAttributes) {
    this.activityTaskCancelRequestedEventAttributes = activityTaskCancelRequestedEventAttributes;
    return this;
  }

  /**
   * Get activityTaskCancelRequestedEventAttributes
   * @return activityTaskCancelRequestedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventActivityTaskCancelRequestedEventAttributes getActivityTaskCancelRequestedEventAttributes() {
    return activityTaskCancelRequestedEventAttributes;
  }

  public void setActivityTaskCancelRequestedEventAttributes(HistoryEventActivityTaskCancelRequestedEventAttributes activityTaskCancelRequestedEventAttributes) {
    this.activityTaskCancelRequestedEventAttributes = activityTaskCancelRequestedEventAttributes;
  }


  public HistoryEvent workflowExecutionSignaledEventAttributes(HistoryEventWorkflowExecutionSignaledEventAttributes workflowExecutionSignaledEventAttributes) {
    this.workflowExecutionSignaledEventAttributes = workflowExecutionSignaledEventAttributes;
    return this;
  }

  /**
   * Get workflowExecutionSignaledEventAttributes
   * @return workflowExecutionSignaledEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventWorkflowExecutionSignaledEventAttributes getWorkflowExecutionSignaledEventAttributes() {
    return workflowExecutionSignaledEventAttributes;
  }

  public void setWorkflowExecutionSignaledEventAttributes(HistoryEventWorkflowExecutionSignaledEventAttributes workflowExecutionSignaledEventAttributes) {
    this.workflowExecutionSignaledEventAttributes = workflowExecutionSignaledEventAttributes;
  }


  public HistoryEvent markerRecordedEventAttributes(HistoryEventMarkerRecordedEventAttributes markerRecordedEventAttributes) {
    this.markerRecordedEventAttributes = markerRecordedEventAttributes;
    return this;
  }

  /**
   * Get markerRecordedEventAttributes
   * @return markerRecordedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventMarkerRecordedEventAttributes getMarkerRecordedEventAttributes() {
    return markerRecordedEventAttributes;
  }

  public void setMarkerRecordedEventAttributes(HistoryEventMarkerRecordedEventAttributes markerRecordedEventAttributes) {
    this.markerRecordedEventAttributes = markerRecordedEventAttributes;
  }


  public HistoryEvent recordMarkerFailedEventAttributes(HistoryEventRecordMarkerFailedEventAttributes recordMarkerFailedEventAttributes) {
    this.recordMarkerFailedEventAttributes = recordMarkerFailedEventAttributes;
    return this;
  }

  /**
   * Get recordMarkerFailedEventAttributes
   * @return recordMarkerFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventRecordMarkerFailedEventAttributes getRecordMarkerFailedEventAttributes() {
    return recordMarkerFailedEventAttributes;
  }

  public void setRecordMarkerFailedEventAttributes(HistoryEventRecordMarkerFailedEventAttributes recordMarkerFailedEventAttributes) {
    this.recordMarkerFailedEventAttributes = recordMarkerFailedEventAttributes;
  }


  public HistoryEvent timerStartedEventAttributes(HistoryEventTimerStartedEventAttributes timerStartedEventAttributes) {
    this.timerStartedEventAttributes = timerStartedEventAttributes;
    return this;
  }

  /**
   * Get timerStartedEventAttributes
   * @return timerStartedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventTimerStartedEventAttributes getTimerStartedEventAttributes() {
    return timerStartedEventAttributes;
  }

  public void setTimerStartedEventAttributes(HistoryEventTimerStartedEventAttributes timerStartedEventAttributes) {
    this.timerStartedEventAttributes = timerStartedEventAttributes;
  }


  public HistoryEvent timerFiredEventAttributes(HistoryEventTimerFiredEventAttributes timerFiredEventAttributes) {
    this.timerFiredEventAttributes = timerFiredEventAttributes;
    return this;
  }

  /**
   * Get timerFiredEventAttributes
   * @return timerFiredEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventTimerFiredEventAttributes getTimerFiredEventAttributes() {
    return timerFiredEventAttributes;
  }

  public void setTimerFiredEventAttributes(HistoryEventTimerFiredEventAttributes timerFiredEventAttributes) {
    this.timerFiredEventAttributes = timerFiredEventAttributes;
  }


  public HistoryEvent timerCanceledEventAttributes(HistoryEventTimerCanceledEventAttributes timerCanceledEventAttributes) {
    this.timerCanceledEventAttributes = timerCanceledEventAttributes;
    return this;
  }

  /**
   * Get timerCanceledEventAttributes
   * @return timerCanceledEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventTimerCanceledEventAttributes getTimerCanceledEventAttributes() {
    return timerCanceledEventAttributes;
  }

  public void setTimerCanceledEventAttributes(HistoryEventTimerCanceledEventAttributes timerCanceledEventAttributes) {
    this.timerCanceledEventAttributes = timerCanceledEventAttributes;
  }


  public HistoryEvent startChildWorkflowExecutionInitiatedEventAttributes(HistoryEventStartChildWorkflowExecutionInitiatedEventAttributes startChildWorkflowExecutionInitiatedEventAttributes) {
    this.startChildWorkflowExecutionInitiatedEventAttributes = startChildWorkflowExecutionInitiatedEventAttributes;
    return this;
  }

  /**
   * Get startChildWorkflowExecutionInitiatedEventAttributes
   * @return startChildWorkflowExecutionInitiatedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventStartChildWorkflowExecutionInitiatedEventAttributes getStartChildWorkflowExecutionInitiatedEventAttributes() {
    return startChildWorkflowExecutionInitiatedEventAttributes;
  }

  public void setStartChildWorkflowExecutionInitiatedEventAttributes(HistoryEventStartChildWorkflowExecutionInitiatedEventAttributes startChildWorkflowExecutionInitiatedEventAttributes) {
    this.startChildWorkflowExecutionInitiatedEventAttributes = startChildWorkflowExecutionInitiatedEventAttributes;
  }


  public HistoryEvent childWorkflowExecutionStartedEventAttributes(HistoryEventChildWorkflowExecutionStartedEventAttributes childWorkflowExecutionStartedEventAttributes) {
    this.childWorkflowExecutionStartedEventAttributes = childWorkflowExecutionStartedEventAttributes;
    return this;
  }

  /**
   * Get childWorkflowExecutionStartedEventAttributes
   * @return childWorkflowExecutionStartedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventChildWorkflowExecutionStartedEventAttributes getChildWorkflowExecutionStartedEventAttributes() {
    return childWorkflowExecutionStartedEventAttributes;
  }

  public void setChildWorkflowExecutionStartedEventAttributes(HistoryEventChildWorkflowExecutionStartedEventAttributes childWorkflowExecutionStartedEventAttributes) {
    this.childWorkflowExecutionStartedEventAttributes = childWorkflowExecutionStartedEventAttributes;
  }


  public HistoryEvent childWorkflowExecutionCompletedEventAttributes(HistoryEventChildWorkflowExecutionCompletedEventAttributes childWorkflowExecutionCompletedEventAttributes) {
    this.childWorkflowExecutionCompletedEventAttributes = childWorkflowExecutionCompletedEventAttributes;
    return this;
  }

  /**
   * Get childWorkflowExecutionCompletedEventAttributes
   * @return childWorkflowExecutionCompletedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventChildWorkflowExecutionCompletedEventAttributes getChildWorkflowExecutionCompletedEventAttributes() {
    return childWorkflowExecutionCompletedEventAttributes;
  }

  public void setChildWorkflowExecutionCompletedEventAttributes(HistoryEventChildWorkflowExecutionCompletedEventAttributes childWorkflowExecutionCompletedEventAttributes) {
    this.childWorkflowExecutionCompletedEventAttributes = childWorkflowExecutionCompletedEventAttributes;
  }


  public HistoryEvent childWorkflowExecutionFailedEventAttributes(HistoryEventChildWorkflowExecutionFailedEventAttributes childWorkflowExecutionFailedEventAttributes) {
    this.childWorkflowExecutionFailedEventAttributes = childWorkflowExecutionFailedEventAttributes;
    return this;
  }

  /**
   * Get childWorkflowExecutionFailedEventAttributes
   * @return childWorkflowExecutionFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventChildWorkflowExecutionFailedEventAttributes getChildWorkflowExecutionFailedEventAttributes() {
    return childWorkflowExecutionFailedEventAttributes;
  }

  public void setChildWorkflowExecutionFailedEventAttributes(HistoryEventChildWorkflowExecutionFailedEventAttributes childWorkflowExecutionFailedEventAttributes) {
    this.childWorkflowExecutionFailedEventAttributes = childWorkflowExecutionFailedEventAttributes;
  }


  public HistoryEvent childWorkflowExecutionTimedOutEventAttributes(HistoryEventChildWorkflowExecutionTimedOutEventAttributes childWorkflowExecutionTimedOutEventAttributes) {
    this.childWorkflowExecutionTimedOutEventAttributes = childWorkflowExecutionTimedOutEventAttributes;
    return this;
  }

  /**
   * Get childWorkflowExecutionTimedOutEventAttributes
   * @return childWorkflowExecutionTimedOutEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventChildWorkflowExecutionTimedOutEventAttributes getChildWorkflowExecutionTimedOutEventAttributes() {
    return childWorkflowExecutionTimedOutEventAttributes;
  }

  public void setChildWorkflowExecutionTimedOutEventAttributes(HistoryEventChildWorkflowExecutionTimedOutEventAttributes childWorkflowExecutionTimedOutEventAttributes) {
    this.childWorkflowExecutionTimedOutEventAttributes = childWorkflowExecutionTimedOutEventAttributes;
  }


  public HistoryEvent childWorkflowExecutionCanceledEventAttributes(HistoryEventChildWorkflowExecutionCanceledEventAttributes childWorkflowExecutionCanceledEventAttributes) {
    this.childWorkflowExecutionCanceledEventAttributes = childWorkflowExecutionCanceledEventAttributes;
    return this;
  }

  /**
   * Get childWorkflowExecutionCanceledEventAttributes
   * @return childWorkflowExecutionCanceledEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventChildWorkflowExecutionCanceledEventAttributes getChildWorkflowExecutionCanceledEventAttributes() {
    return childWorkflowExecutionCanceledEventAttributes;
  }

  public void setChildWorkflowExecutionCanceledEventAttributes(HistoryEventChildWorkflowExecutionCanceledEventAttributes childWorkflowExecutionCanceledEventAttributes) {
    this.childWorkflowExecutionCanceledEventAttributes = childWorkflowExecutionCanceledEventAttributes;
  }


  public HistoryEvent childWorkflowExecutionTerminatedEventAttributes(HistoryEventChildWorkflowExecutionTerminatedEventAttributes childWorkflowExecutionTerminatedEventAttributes) {
    this.childWorkflowExecutionTerminatedEventAttributes = childWorkflowExecutionTerminatedEventAttributes;
    return this;
  }

  /**
   * Get childWorkflowExecutionTerminatedEventAttributes
   * @return childWorkflowExecutionTerminatedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventChildWorkflowExecutionTerminatedEventAttributes getChildWorkflowExecutionTerminatedEventAttributes() {
    return childWorkflowExecutionTerminatedEventAttributes;
  }

  public void setChildWorkflowExecutionTerminatedEventAttributes(HistoryEventChildWorkflowExecutionTerminatedEventAttributes childWorkflowExecutionTerminatedEventAttributes) {
    this.childWorkflowExecutionTerminatedEventAttributes = childWorkflowExecutionTerminatedEventAttributes;
  }


  public HistoryEvent signalExternalWorkflowExecutionInitiatedEventAttributes(HistoryEventSignalExternalWorkflowExecutionInitiatedEventAttributes signalExternalWorkflowExecutionInitiatedEventAttributes) {
    this.signalExternalWorkflowExecutionInitiatedEventAttributes = signalExternalWorkflowExecutionInitiatedEventAttributes;
    return this;
  }

  /**
   * Get signalExternalWorkflowExecutionInitiatedEventAttributes
   * @return signalExternalWorkflowExecutionInitiatedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventSignalExternalWorkflowExecutionInitiatedEventAttributes getSignalExternalWorkflowExecutionInitiatedEventAttributes() {
    return signalExternalWorkflowExecutionInitiatedEventAttributes;
  }

  public void setSignalExternalWorkflowExecutionInitiatedEventAttributes(HistoryEventSignalExternalWorkflowExecutionInitiatedEventAttributes signalExternalWorkflowExecutionInitiatedEventAttributes) {
    this.signalExternalWorkflowExecutionInitiatedEventAttributes = signalExternalWorkflowExecutionInitiatedEventAttributes;
  }


  public HistoryEvent externalWorkflowExecutionSignaledEventAttributes(HistoryEventExternalWorkflowExecutionSignaledEventAttributes externalWorkflowExecutionSignaledEventAttributes) {
    this.externalWorkflowExecutionSignaledEventAttributes = externalWorkflowExecutionSignaledEventAttributes;
    return this;
  }

  /**
   * Get externalWorkflowExecutionSignaledEventAttributes
   * @return externalWorkflowExecutionSignaledEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventExternalWorkflowExecutionSignaledEventAttributes getExternalWorkflowExecutionSignaledEventAttributes() {
    return externalWorkflowExecutionSignaledEventAttributes;
  }

  public void setExternalWorkflowExecutionSignaledEventAttributes(HistoryEventExternalWorkflowExecutionSignaledEventAttributes externalWorkflowExecutionSignaledEventAttributes) {
    this.externalWorkflowExecutionSignaledEventAttributes = externalWorkflowExecutionSignaledEventAttributes;
  }


  public HistoryEvent signalExternalWorkflowExecutionFailedEventAttributes(HistoryEventSignalExternalWorkflowExecutionFailedEventAttributes signalExternalWorkflowExecutionFailedEventAttributes) {
    this.signalExternalWorkflowExecutionFailedEventAttributes = signalExternalWorkflowExecutionFailedEventAttributes;
    return this;
  }

  /**
   * Get signalExternalWorkflowExecutionFailedEventAttributes
   * @return signalExternalWorkflowExecutionFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventSignalExternalWorkflowExecutionFailedEventAttributes getSignalExternalWorkflowExecutionFailedEventAttributes() {
    return signalExternalWorkflowExecutionFailedEventAttributes;
  }

  public void setSignalExternalWorkflowExecutionFailedEventAttributes(HistoryEventSignalExternalWorkflowExecutionFailedEventAttributes signalExternalWorkflowExecutionFailedEventAttributes) {
    this.signalExternalWorkflowExecutionFailedEventAttributes = signalExternalWorkflowExecutionFailedEventAttributes;
  }


  public HistoryEvent externalWorkflowExecutionCancelRequestedEventAttributes(HistoryEventExternalWorkflowExecutionCancelRequestedEventAttributes externalWorkflowExecutionCancelRequestedEventAttributes) {
    this.externalWorkflowExecutionCancelRequestedEventAttributes = externalWorkflowExecutionCancelRequestedEventAttributes;
    return this;
  }

  /**
   * Get externalWorkflowExecutionCancelRequestedEventAttributes
   * @return externalWorkflowExecutionCancelRequestedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventExternalWorkflowExecutionCancelRequestedEventAttributes getExternalWorkflowExecutionCancelRequestedEventAttributes() {
    return externalWorkflowExecutionCancelRequestedEventAttributes;
  }

  public void setExternalWorkflowExecutionCancelRequestedEventAttributes(HistoryEventExternalWorkflowExecutionCancelRequestedEventAttributes externalWorkflowExecutionCancelRequestedEventAttributes) {
    this.externalWorkflowExecutionCancelRequestedEventAttributes = externalWorkflowExecutionCancelRequestedEventAttributes;
  }


  public HistoryEvent requestCancelExternalWorkflowExecutionInitiatedEventAttributes(HistoryEventRequestCancelExternalWorkflowExecutionInitiatedEventAttributes requestCancelExternalWorkflowExecutionInitiatedEventAttributes) {
    this.requestCancelExternalWorkflowExecutionInitiatedEventAttributes = requestCancelExternalWorkflowExecutionInitiatedEventAttributes;
    return this;
  }

  /**
   * Get requestCancelExternalWorkflowExecutionInitiatedEventAttributes
   * @return requestCancelExternalWorkflowExecutionInitiatedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventRequestCancelExternalWorkflowExecutionInitiatedEventAttributes getRequestCancelExternalWorkflowExecutionInitiatedEventAttributes() {
    return requestCancelExternalWorkflowExecutionInitiatedEventAttributes;
  }

  public void setRequestCancelExternalWorkflowExecutionInitiatedEventAttributes(HistoryEventRequestCancelExternalWorkflowExecutionInitiatedEventAttributes requestCancelExternalWorkflowExecutionInitiatedEventAttributes) {
    this.requestCancelExternalWorkflowExecutionInitiatedEventAttributes = requestCancelExternalWorkflowExecutionInitiatedEventAttributes;
  }


  public HistoryEvent requestCancelExternalWorkflowExecutionFailedEventAttributes(HistoryEventRequestCancelExternalWorkflowExecutionFailedEventAttributes requestCancelExternalWorkflowExecutionFailedEventAttributes) {
    this.requestCancelExternalWorkflowExecutionFailedEventAttributes = requestCancelExternalWorkflowExecutionFailedEventAttributes;
    return this;
  }

  /**
   * Get requestCancelExternalWorkflowExecutionFailedEventAttributes
   * @return requestCancelExternalWorkflowExecutionFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventRequestCancelExternalWorkflowExecutionFailedEventAttributes getRequestCancelExternalWorkflowExecutionFailedEventAttributes() {
    return requestCancelExternalWorkflowExecutionFailedEventAttributes;
  }

  public void setRequestCancelExternalWorkflowExecutionFailedEventAttributes(HistoryEventRequestCancelExternalWorkflowExecutionFailedEventAttributes requestCancelExternalWorkflowExecutionFailedEventAttributes) {
    this.requestCancelExternalWorkflowExecutionFailedEventAttributes = requestCancelExternalWorkflowExecutionFailedEventAttributes;
  }


  public HistoryEvent scheduleActivityTaskFailedEventAttributes(HistoryEventScheduleActivityTaskFailedEventAttributes scheduleActivityTaskFailedEventAttributes) {
    this.scheduleActivityTaskFailedEventAttributes = scheduleActivityTaskFailedEventAttributes;
    return this;
  }

  /**
   * Get scheduleActivityTaskFailedEventAttributes
   * @return scheduleActivityTaskFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventScheduleActivityTaskFailedEventAttributes getScheduleActivityTaskFailedEventAttributes() {
    return scheduleActivityTaskFailedEventAttributes;
  }

  public void setScheduleActivityTaskFailedEventAttributes(HistoryEventScheduleActivityTaskFailedEventAttributes scheduleActivityTaskFailedEventAttributes) {
    this.scheduleActivityTaskFailedEventAttributes = scheduleActivityTaskFailedEventAttributes;
  }


  public HistoryEvent requestCancelActivityTaskFailedEventAttributes(HistoryEventRequestCancelActivityTaskFailedEventAttributes requestCancelActivityTaskFailedEventAttributes) {
    this.requestCancelActivityTaskFailedEventAttributes = requestCancelActivityTaskFailedEventAttributes;
    return this;
  }

  /**
   * Get requestCancelActivityTaskFailedEventAttributes
   * @return requestCancelActivityTaskFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventRequestCancelActivityTaskFailedEventAttributes getRequestCancelActivityTaskFailedEventAttributes() {
    return requestCancelActivityTaskFailedEventAttributes;
  }

  public void setRequestCancelActivityTaskFailedEventAttributes(HistoryEventRequestCancelActivityTaskFailedEventAttributes requestCancelActivityTaskFailedEventAttributes) {
    this.requestCancelActivityTaskFailedEventAttributes = requestCancelActivityTaskFailedEventAttributes;
  }


  public HistoryEvent startTimerFailedEventAttributes(HistoryEventStartTimerFailedEventAttributes startTimerFailedEventAttributes) {
    this.startTimerFailedEventAttributes = startTimerFailedEventAttributes;
    return this;
  }

  /**
   * Get startTimerFailedEventAttributes
   * @return startTimerFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventStartTimerFailedEventAttributes getStartTimerFailedEventAttributes() {
    return startTimerFailedEventAttributes;
  }

  public void setStartTimerFailedEventAttributes(HistoryEventStartTimerFailedEventAttributes startTimerFailedEventAttributes) {
    this.startTimerFailedEventAttributes = startTimerFailedEventAttributes;
  }


  public HistoryEvent cancelTimerFailedEventAttributes(HistoryEventCancelTimerFailedEventAttributes cancelTimerFailedEventAttributes) {
    this.cancelTimerFailedEventAttributes = cancelTimerFailedEventAttributes;
    return this;
  }

  /**
   * Get cancelTimerFailedEventAttributes
   * @return cancelTimerFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventCancelTimerFailedEventAttributes getCancelTimerFailedEventAttributes() {
    return cancelTimerFailedEventAttributes;
  }

  public void setCancelTimerFailedEventAttributes(HistoryEventCancelTimerFailedEventAttributes cancelTimerFailedEventAttributes) {
    this.cancelTimerFailedEventAttributes = cancelTimerFailedEventAttributes;
  }


  public HistoryEvent startChildWorkflowExecutionFailedEventAttributes(HistoryEventStartChildWorkflowExecutionFailedEventAttributes startChildWorkflowExecutionFailedEventAttributes) {
    this.startChildWorkflowExecutionFailedEventAttributes = startChildWorkflowExecutionFailedEventAttributes;
    return this;
  }

  /**
   * Get startChildWorkflowExecutionFailedEventAttributes
   * @return startChildWorkflowExecutionFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventStartChildWorkflowExecutionFailedEventAttributes getStartChildWorkflowExecutionFailedEventAttributes() {
    return startChildWorkflowExecutionFailedEventAttributes;
  }

  public void setStartChildWorkflowExecutionFailedEventAttributes(HistoryEventStartChildWorkflowExecutionFailedEventAttributes startChildWorkflowExecutionFailedEventAttributes) {
    this.startChildWorkflowExecutionFailedEventAttributes = startChildWorkflowExecutionFailedEventAttributes;
  }


  public HistoryEvent lambdaFunctionScheduledEventAttributes(HistoryEventLambdaFunctionScheduledEventAttributes lambdaFunctionScheduledEventAttributes) {
    this.lambdaFunctionScheduledEventAttributes = lambdaFunctionScheduledEventAttributes;
    return this;
  }

  /**
   * Get lambdaFunctionScheduledEventAttributes
   * @return lambdaFunctionScheduledEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventLambdaFunctionScheduledEventAttributes getLambdaFunctionScheduledEventAttributes() {
    return lambdaFunctionScheduledEventAttributes;
  }

  public void setLambdaFunctionScheduledEventAttributes(HistoryEventLambdaFunctionScheduledEventAttributes lambdaFunctionScheduledEventAttributes) {
    this.lambdaFunctionScheduledEventAttributes = lambdaFunctionScheduledEventAttributes;
  }


  public HistoryEvent lambdaFunctionStartedEventAttributes(HistoryEventLambdaFunctionStartedEventAttributes lambdaFunctionStartedEventAttributes) {
    this.lambdaFunctionStartedEventAttributes = lambdaFunctionStartedEventAttributes;
    return this;
  }

  /**
   * Get lambdaFunctionStartedEventAttributes
   * @return lambdaFunctionStartedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventLambdaFunctionStartedEventAttributes getLambdaFunctionStartedEventAttributes() {
    return lambdaFunctionStartedEventAttributes;
  }

  public void setLambdaFunctionStartedEventAttributes(HistoryEventLambdaFunctionStartedEventAttributes lambdaFunctionStartedEventAttributes) {
    this.lambdaFunctionStartedEventAttributes = lambdaFunctionStartedEventAttributes;
  }


  public HistoryEvent lambdaFunctionCompletedEventAttributes(HistoryEventLambdaFunctionCompletedEventAttributes lambdaFunctionCompletedEventAttributes) {
    this.lambdaFunctionCompletedEventAttributes = lambdaFunctionCompletedEventAttributes;
    return this;
  }

  /**
   * Get lambdaFunctionCompletedEventAttributes
   * @return lambdaFunctionCompletedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventLambdaFunctionCompletedEventAttributes getLambdaFunctionCompletedEventAttributes() {
    return lambdaFunctionCompletedEventAttributes;
  }

  public void setLambdaFunctionCompletedEventAttributes(HistoryEventLambdaFunctionCompletedEventAttributes lambdaFunctionCompletedEventAttributes) {
    this.lambdaFunctionCompletedEventAttributes = lambdaFunctionCompletedEventAttributes;
  }


  public HistoryEvent lambdaFunctionFailedEventAttributes(HistoryEventLambdaFunctionFailedEventAttributes lambdaFunctionFailedEventAttributes) {
    this.lambdaFunctionFailedEventAttributes = lambdaFunctionFailedEventAttributes;
    return this;
  }

  /**
   * Get lambdaFunctionFailedEventAttributes
   * @return lambdaFunctionFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventLambdaFunctionFailedEventAttributes getLambdaFunctionFailedEventAttributes() {
    return lambdaFunctionFailedEventAttributes;
  }

  public void setLambdaFunctionFailedEventAttributes(HistoryEventLambdaFunctionFailedEventAttributes lambdaFunctionFailedEventAttributes) {
    this.lambdaFunctionFailedEventAttributes = lambdaFunctionFailedEventAttributes;
  }


  public HistoryEvent lambdaFunctionTimedOutEventAttributes(HistoryEventLambdaFunctionTimedOutEventAttributes lambdaFunctionTimedOutEventAttributes) {
    this.lambdaFunctionTimedOutEventAttributes = lambdaFunctionTimedOutEventAttributes;
    return this;
  }

  /**
   * Get lambdaFunctionTimedOutEventAttributes
   * @return lambdaFunctionTimedOutEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventLambdaFunctionTimedOutEventAttributes getLambdaFunctionTimedOutEventAttributes() {
    return lambdaFunctionTimedOutEventAttributes;
  }

  public void setLambdaFunctionTimedOutEventAttributes(HistoryEventLambdaFunctionTimedOutEventAttributes lambdaFunctionTimedOutEventAttributes) {
    this.lambdaFunctionTimedOutEventAttributes = lambdaFunctionTimedOutEventAttributes;
  }


  public HistoryEvent scheduleLambdaFunctionFailedEventAttributes(HistoryEventScheduleLambdaFunctionFailedEventAttributes scheduleLambdaFunctionFailedEventAttributes) {
    this.scheduleLambdaFunctionFailedEventAttributes = scheduleLambdaFunctionFailedEventAttributes;
    return this;
  }

  /**
   * Get scheduleLambdaFunctionFailedEventAttributes
   * @return scheduleLambdaFunctionFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventScheduleLambdaFunctionFailedEventAttributes getScheduleLambdaFunctionFailedEventAttributes() {
    return scheduleLambdaFunctionFailedEventAttributes;
  }

  public void setScheduleLambdaFunctionFailedEventAttributes(HistoryEventScheduleLambdaFunctionFailedEventAttributes scheduleLambdaFunctionFailedEventAttributes) {
    this.scheduleLambdaFunctionFailedEventAttributes = scheduleLambdaFunctionFailedEventAttributes;
  }


  public HistoryEvent startLambdaFunctionFailedEventAttributes(HistoryEventStartLambdaFunctionFailedEventAttributes startLambdaFunctionFailedEventAttributes) {
    this.startLambdaFunctionFailedEventAttributes = startLambdaFunctionFailedEventAttributes;
    return this;
  }

  /**
   * Get startLambdaFunctionFailedEventAttributes
   * @return startLambdaFunctionFailedEventAttributes
   */
  @javax.annotation.Nullable
  public HistoryEventStartLambdaFunctionFailedEventAttributes getStartLambdaFunctionFailedEventAttributes() {
    return startLambdaFunctionFailedEventAttributes;
  }

  public void setStartLambdaFunctionFailedEventAttributes(HistoryEventStartLambdaFunctionFailedEventAttributes startLambdaFunctionFailedEventAttributes) {
    this.startLambdaFunctionFailedEventAttributes = startLambdaFunctionFailedEventAttributes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HistoryEvent historyEvent = (HistoryEvent) o;
    return Objects.equals(this.eventTimestamp, historyEvent.eventTimestamp) &&
        Objects.equals(this.eventType, historyEvent.eventType) &&
        Objects.equals(this.eventId, historyEvent.eventId) &&
        Objects.equals(this.workflowExecutionStartedEventAttributes, historyEvent.workflowExecutionStartedEventAttributes) &&
        Objects.equals(this.workflowExecutionCompletedEventAttributes, historyEvent.workflowExecutionCompletedEventAttributes) &&
        Objects.equals(this.completeWorkflowExecutionFailedEventAttributes, historyEvent.completeWorkflowExecutionFailedEventAttributes) &&
        Objects.equals(this.workflowExecutionFailedEventAttributes, historyEvent.workflowExecutionFailedEventAttributes) &&
        Objects.equals(this.failWorkflowExecutionFailedEventAttributes, historyEvent.failWorkflowExecutionFailedEventAttributes) &&
        Objects.equals(this.workflowExecutionTimedOutEventAttributes, historyEvent.workflowExecutionTimedOutEventAttributes) &&
        Objects.equals(this.workflowExecutionCanceledEventAttributes, historyEvent.workflowExecutionCanceledEventAttributes) &&
        Objects.equals(this.cancelWorkflowExecutionFailedEventAttributes, historyEvent.cancelWorkflowExecutionFailedEventAttributes) &&
        Objects.equals(this.workflowExecutionContinuedAsNewEventAttributes, historyEvent.workflowExecutionContinuedAsNewEventAttributes) &&
        Objects.equals(this.continueAsNewWorkflowExecutionFailedEventAttributes, historyEvent.continueAsNewWorkflowExecutionFailedEventAttributes) &&
        Objects.equals(this.workflowExecutionTerminatedEventAttributes, historyEvent.workflowExecutionTerminatedEventAttributes) &&
        Objects.equals(this.workflowExecutionCancelRequestedEventAttributes, historyEvent.workflowExecutionCancelRequestedEventAttributes) &&
        Objects.equals(this.decisionTaskScheduledEventAttributes, historyEvent.decisionTaskScheduledEventAttributes) &&
        Objects.equals(this.decisionTaskStartedEventAttributes, historyEvent.decisionTaskStartedEventAttributes) &&
        Objects.equals(this.decisionTaskCompletedEventAttributes, historyEvent.decisionTaskCompletedEventAttributes) &&
        Objects.equals(this.decisionTaskTimedOutEventAttributes, historyEvent.decisionTaskTimedOutEventAttributes) &&
        Objects.equals(this.activityTaskScheduledEventAttributes, historyEvent.activityTaskScheduledEventAttributes) &&
        Objects.equals(this.activityTaskStartedEventAttributes, historyEvent.activityTaskStartedEventAttributes) &&
        Objects.equals(this.activityTaskCompletedEventAttributes, historyEvent.activityTaskCompletedEventAttributes) &&
        Objects.equals(this.activityTaskFailedEventAttributes, historyEvent.activityTaskFailedEventAttributes) &&
        Objects.equals(this.activityTaskTimedOutEventAttributes, historyEvent.activityTaskTimedOutEventAttributes) &&
        Objects.equals(this.activityTaskCanceledEventAttributes, historyEvent.activityTaskCanceledEventAttributes) &&
        Objects.equals(this.activityTaskCancelRequestedEventAttributes, historyEvent.activityTaskCancelRequestedEventAttributes) &&
        Objects.equals(this.workflowExecutionSignaledEventAttributes, historyEvent.workflowExecutionSignaledEventAttributes) &&
        Objects.equals(this.markerRecordedEventAttributes, historyEvent.markerRecordedEventAttributes) &&
        Objects.equals(this.recordMarkerFailedEventAttributes, historyEvent.recordMarkerFailedEventAttributes) &&
        Objects.equals(this.timerStartedEventAttributes, historyEvent.timerStartedEventAttributes) &&
        Objects.equals(this.timerFiredEventAttributes, historyEvent.timerFiredEventAttributes) &&
        Objects.equals(this.timerCanceledEventAttributes, historyEvent.timerCanceledEventAttributes) &&
        Objects.equals(this.startChildWorkflowExecutionInitiatedEventAttributes, historyEvent.startChildWorkflowExecutionInitiatedEventAttributes) &&
        Objects.equals(this.childWorkflowExecutionStartedEventAttributes, historyEvent.childWorkflowExecutionStartedEventAttributes) &&
        Objects.equals(this.childWorkflowExecutionCompletedEventAttributes, historyEvent.childWorkflowExecutionCompletedEventAttributes) &&
        Objects.equals(this.childWorkflowExecutionFailedEventAttributes, historyEvent.childWorkflowExecutionFailedEventAttributes) &&
        Objects.equals(this.childWorkflowExecutionTimedOutEventAttributes, historyEvent.childWorkflowExecutionTimedOutEventAttributes) &&
        Objects.equals(this.childWorkflowExecutionCanceledEventAttributes, historyEvent.childWorkflowExecutionCanceledEventAttributes) &&
        Objects.equals(this.childWorkflowExecutionTerminatedEventAttributes, historyEvent.childWorkflowExecutionTerminatedEventAttributes) &&
        Objects.equals(this.signalExternalWorkflowExecutionInitiatedEventAttributes, historyEvent.signalExternalWorkflowExecutionInitiatedEventAttributes) &&
        Objects.equals(this.externalWorkflowExecutionSignaledEventAttributes, historyEvent.externalWorkflowExecutionSignaledEventAttributes) &&
        Objects.equals(this.signalExternalWorkflowExecutionFailedEventAttributes, historyEvent.signalExternalWorkflowExecutionFailedEventAttributes) &&
        Objects.equals(this.externalWorkflowExecutionCancelRequestedEventAttributes, historyEvent.externalWorkflowExecutionCancelRequestedEventAttributes) &&
        Objects.equals(this.requestCancelExternalWorkflowExecutionInitiatedEventAttributes, historyEvent.requestCancelExternalWorkflowExecutionInitiatedEventAttributes) &&
        Objects.equals(this.requestCancelExternalWorkflowExecutionFailedEventAttributes, historyEvent.requestCancelExternalWorkflowExecutionFailedEventAttributes) &&
        Objects.equals(this.scheduleActivityTaskFailedEventAttributes, historyEvent.scheduleActivityTaskFailedEventAttributes) &&
        Objects.equals(this.requestCancelActivityTaskFailedEventAttributes, historyEvent.requestCancelActivityTaskFailedEventAttributes) &&
        Objects.equals(this.startTimerFailedEventAttributes, historyEvent.startTimerFailedEventAttributes) &&
        Objects.equals(this.cancelTimerFailedEventAttributes, historyEvent.cancelTimerFailedEventAttributes) &&
        Objects.equals(this.startChildWorkflowExecutionFailedEventAttributes, historyEvent.startChildWorkflowExecutionFailedEventAttributes) &&
        Objects.equals(this.lambdaFunctionScheduledEventAttributes, historyEvent.lambdaFunctionScheduledEventAttributes) &&
        Objects.equals(this.lambdaFunctionStartedEventAttributes, historyEvent.lambdaFunctionStartedEventAttributes) &&
        Objects.equals(this.lambdaFunctionCompletedEventAttributes, historyEvent.lambdaFunctionCompletedEventAttributes) &&
        Objects.equals(this.lambdaFunctionFailedEventAttributes, historyEvent.lambdaFunctionFailedEventAttributes) &&
        Objects.equals(this.lambdaFunctionTimedOutEventAttributes, historyEvent.lambdaFunctionTimedOutEventAttributes) &&
        Objects.equals(this.scheduleLambdaFunctionFailedEventAttributes, historyEvent.scheduleLambdaFunctionFailedEventAttributes) &&
        Objects.equals(this.startLambdaFunctionFailedEventAttributes, historyEvent.startLambdaFunctionFailedEventAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventTimestamp, eventType, eventId, workflowExecutionStartedEventAttributes, workflowExecutionCompletedEventAttributes, completeWorkflowExecutionFailedEventAttributes, workflowExecutionFailedEventAttributes, failWorkflowExecutionFailedEventAttributes, workflowExecutionTimedOutEventAttributes, workflowExecutionCanceledEventAttributes, cancelWorkflowExecutionFailedEventAttributes, workflowExecutionContinuedAsNewEventAttributes, continueAsNewWorkflowExecutionFailedEventAttributes, workflowExecutionTerminatedEventAttributes, workflowExecutionCancelRequestedEventAttributes, decisionTaskScheduledEventAttributes, decisionTaskStartedEventAttributes, decisionTaskCompletedEventAttributes, decisionTaskTimedOutEventAttributes, activityTaskScheduledEventAttributes, activityTaskStartedEventAttributes, activityTaskCompletedEventAttributes, activityTaskFailedEventAttributes, activityTaskTimedOutEventAttributes, activityTaskCanceledEventAttributes, activityTaskCancelRequestedEventAttributes, workflowExecutionSignaledEventAttributes, markerRecordedEventAttributes, recordMarkerFailedEventAttributes, timerStartedEventAttributes, timerFiredEventAttributes, timerCanceledEventAttributes, startChildWorkflowExecutionInitiatedEventAttributes, childWorkflowExecutionStartedEventAttributes, childWorkflowExecutionCompletedEventAttributes, childWorkflowExecutionFailedEventAttributes, childWorkflowExecutionTimedOutEventAttributes, childWorkflowExecutionCanceledEventAttributes, childWorkflowExecutionTerminatedEventAttributes, signalExternalWorkflowExecutionInitiatedEventAttributes, externalWorkflowExecutionSignaledEventAttributes, signalExternalWorkflowExecutionFailedEventAttributes, externalWorkflowExecutionCancelRequestedEventAttributes, requestCancelExternalWorkflowExecutionInitiatedEventAttributes, requestCancelExternalWorkflowExecutionFailedEventAttributes, scheduleActivityTaskFailedEventAttributes, requestCancelActivityTaskFailedEventAttributes, startTimerFailedEventAttributes, cancelTimerFailedEventAttributes, startChildWorkflowExecutionFailedEventAttributes, lambdaFunctionScheduledEventAttributes, lambdaFunctionStartedEventAttributes, lambdaFunctionCompletedEventAttributes, lambdaFunctionFailedEventAttributes, lambdaFunctionTimedOutEventAttributes, scheduleLambdaFunctionFailedEventAttributes, startLambdaFunctionFailedEventAttributes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HistoryEvent {\n");
    sb.append("    eventTimestamp: ").append(toIndentedString(eventTimestamp)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("    workflowExecutionStartedEventAttributes: ").append(toIndentedString(workflowExecutionStartedEventAttributes)).append("\n");
    sb.append("    workflowExecutionCompletedEventAttributes: ").append(toIndentedString(workflowExecutionCompletedEventAttributes)).append("\n");
    sb.append("    completeWorkflowExecutionFailedEventAttributes: ").append(toIndentedString(completeWorkflowExecutionFailedEventAttributes)).append("\n");
    sb.append("    workflowExecutionFailedEventAttributes: ").append(toIndentedString(workflowExecutionFailedEventAttributes)).append("\n");
    sb.append("    failWorkflowExecutionFailedEventAttributes: ").append(toIndentedString(failWorkflowExecutionFailedEventAttributes)).append("\n");
    sb.append("    workflowExecutionTimedOutEventAttributes: ").append(toIndentedString(workflowExecutionTimedOutEventAttributes)).append("\n");
    sb.append("    workflowExecutionCanceledEventAttributes: ").append(toIndentedString(workflowExecutionCanceledEventAttributes)).append("\n");
    sb.append("    cancelWorkflowExecutionFailedEventAttributes: ").append(toIndentedString(cancelWorkflowExecutionFailedEventAttributes)).append("\n");
    sb.append("    workflowExecutionContinuedAsNewEventAttributes: ").append(toIndentedString(workflowExecutionContinuedAsNewEventAttributes)).append("\n");
    sb.append("    continueAsNewWorkflowExecutionFailedEventAttributes: ").append(toIndentedString(continueAsNewWorkflowExecutionFailedEventAttributes)).append("\n");
    sb.append("    workflowExecutionTerminatedEventAttributes: ").append(toIndentedString(workflowExecutionTerminatedEventAttributes)).append("\n");
    sb.append("    workflowExecutionCancelRequestedEventAttributes: ").append(toIndentedString(workflowExecutionCancelRequestedEventAttributes)).append("\n");
    sb.append("    decisionTaskScheduledEventAttributes: ").append(toIndentedString(decisionTaskScheduledEventAttributes)).append("\n");
    sb.append("    decisionTaskStartedEventAttributes: ").append(toIndentedString(decisionTaskStartedEventAttributes)).append("\n");
    sb.append("    decisionTaskCompletedEventAttributes: ").append(toIndentedString(decisionTaskCompletedEventAttributes)).append("\n");
    sb.append("    decisionTaskTimedOutEventAttributes: ").append(toIndentedString(decisionTaskTimedOutEventAttributes)).append("\n");
    sb.append("    activityTaskScheduledEventAttributes: ").append(toIndentedString(activityTaskScheduledEventAttributes)).append("\n");
    sb.append("    activityTaskStartedEventAttributes: ").append(toIndentedString(activityTaskStartedEventAttributes)).append("\n");
    sb.append("    activityTaskCompletedEventAttributes: ").append(toIndentedString(activityTaskCompletedEventAttributes)).append("\n");
    sb.append("    activityTaskFailedEventAttributes: ").append(toIndentedString(activityTaskFailedEventAttributes)).append("\n");
    sb.append("    activityTaskTimedOutEventAttributes: ").append(toIndentedString(activityTaskTimedOutEventAttributes)).append("\n");
    sb.append("    activityTaskCanceledEventAttributes: ").append(toIndentedString(activityTaskCanceledEventAttributes)).append("\n");
    sb.append("    activityTaskCancelRequestedEventAttributes: ").append(toIndentedString(activityTaskCancelRequestedEventAttributes)).append("\n");
    sb.append("    workflowExecutionSignaledEventAttributes: ").append(toIndentedString(workflowExecutionSignaledEventAttributes)).append("\n");
    sb.append("    markerRecordedEventAttributes: ").append(toIndentedString(markerRecordedEventAttributes)).append("\n");
    sb.append("    recordMarkerFailedEventAttributes: ").append(toIndentedString(recordMarkerFailedEventAttributes)).append("\n");
    sb.append("    timerStartedEventAttributes: ").append(toIndentedString(timerStartedEventAttributes)).append("\n");
    sb.append("    timerFiredEventAttributes: ").append(toIndentedString(timerFiredEventAttributes)).append("\n");
    sb.append("    timerCanceledEventAttributes: ").append(toIndentedString(timerCanceledEventAttributes)).append("\n");
    sb.append("    startChildWorkflowExecutionInitiatedEventAttributes: ").append(toIndentedString(startChildWorkflowExecutionInitiatedEventAttributes)).append("\n");
    sb.append("    childWorkflowExecutionStartedEventAttributes: ").append(toIndentedString(childWorkflowExecutionStartedEventAttributes)).append("\n");
    sb.append("    childWorkflowExecutionCompletedEventAttributes: ").append(toIndentedString(childWorkflowExecutionCompletedEventAttributes)).append("\n");
    sb.append("    childWorkflowExecutionFailedEventAttributes: ").append(toIndentedString(childWorkflowExecutionFailedEventAttributes)).append("\n");
    sb.append("    childWorkflowExecutionTimedOutEventAttributes: ").append(toIndentedString(childWorkflowExecutionTimedOutEventAttributes)).append("\n");
    sb.append("    childWorkflowExecutionCanceledEventAttributes: ").append(toIndentedString(childWorkflowExecutionCanceledEventAttributes)).append("\n");
    sb.append("    childWorkflowExecutionTerminatedEventAttributes: ").append(toIndentedString(childWorkflowExecutionTerminatedEventAttributes)).append("\n");
    sb.append("    signalExternalWorkflowExecutionInitiatedEventAttributes: ").append(toIndentedString(signalExternalWorkflowExecutionInitiatedEventAttributes)).append("\n");
    sb.append("    externalWorkflowExecutionSignaledEventAttributes: ").append(toIndentedString(externalWorkflowExecutionSignaledEventAttributes)).append("\n");
    sb.append("    signalExternalWorkflowExecutionFailedEventAttributes: ").append(toIndentedString(signalExternalWorkflowExecutionFailedEventAttributes)).append("\n");
    sb.append("    externalWorkflowExecutionCancelRequestedEventAttributes: ").append(toIndentedString(externalWorkflowExecutionCancelRequestedEventAttributes)).append("\n");
    sb.append("    requestCancelExternalWorkflowExecutionInitiatedEventAttributes: ").append(toIndentedString(requestCancelExternalWorkflowExecutionInitiatedEventAttributes)).append("\n");
    sb.append("    requestCancelExternalWorkflowExecutionFailedEventAttributes: ").append(toIndentedString(requestCancelExternalWorkflowExecutionFailedEventAttributes)).append("\n");
    sb.append("    scheduleActivityTaskFailedEventAttributes: ").append(toIndentedString(scheduleActivityTaskFailedEventAttributes)).append("\n");
    sb.append("    requestCancelActivityTaskFailedEventAttributes: ").append(toIndentedString(requestCancelActivityTaskFailedEventAttributes)).append("\n");
    sb.append("    startTimerFailedEventAttributes: ").append(toIndentedString(startTimerFailedEventAttributes)).append("\n");
    sb.append("    cancelTimerFailedEventAttributes: ").append(toIndentedString(cancelTimerFailedEventAttributes)).append("\n");
    sb.append("    startChildWorkflowExecutionFailedEventAttributes: ").append(toIndentedString(startChildWorkflowExecutionFailedEventAttributes)).append("\n");
    sb.append("    lambdaFunctionScheduledEventAttributes: ").append(toIndentedString(lambdaFunctionScheduledEventAttributes)).append("\n");
    sb.append("    lambdaFunctionStartedEventAttributes: ").append(toIndentedString(lambdaFunctionStartedEventAttributes)).append("\n");
    sb.append("    lambdaFunctionCompletedEventAttributes: ").append(toIndentedString(lambdaFunctionCompletedEventAttributes)).append("\n");
    sb.append("    lambdaFunctionFailedEventAttributes: ").append(toIndentedString(lambdaFunctionFailedEventAttributes)).append("\n");
    sb.append("    lambdaFunctionTimedOutEventAttributes: ").append(toIndentedString(lambdaFunctionTimedOutEventAttributes)).append("\n");
    sb.append("    scheduleLambdaFunctionFailedEventAttributes: ").append(toIndentedString(scheduleLambdaFunctionFailedEventAttributes)).append("\n");
    sb.append("    startLambdaFunctionFailedEventAttributes: ").append(toIndentedString(startLambdaFunctionFailedEventAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("eventTimestamp");
    openapiFields.add("eventType");
    openapiFields.add("eventId");
    openapiFields.add("workflowExecutionStartedEventAttributes");
    openapiFields.add("workflowExecutionCompletedEventAttributes");
    openapiFields.add("completeWorkflowExecutionFailedEventAttributes");
    openapiFields.add("workflowExecutionFailedEventAttributes");
    openapiFields.add("failWorkflowExecutionFailedEventAttributes");
    openapiFields.add("workflowExecutionTimedOutEventAttributes");
    openapiFields.add("workflowExecutionCanceledEventAttributes");
    openapiFields.add("cancelWorkflowExecutionFailedEventAttributes");
    openapiFields.add("workflowExecutionContinuedAsNewEventAttributes");
    openapiFields.add("continueAsNewWorkflowExecutionFailedEventAttributes");
    openapiFields.add("workflowExecutionTerminatedEventAttributes");
    openapiFields.add("workflowExecutionCancelRequestedEventAttributes");
    openapiFields.add("decisionTaskScheduledEventAttributes");
    openapiFields.add("decisionTaskStartedEventAttributes");
    openapiFields.add("decisionTaskCompletedEventAttributes");
    openapiFields.add("decisionTaskTimedOutEventAttributes");
    openapiFields.add("activityTaskScheduledEventAttributes");
    openapiFields.add("activityTaskStartedEventAttributes");
    openapiFields.add("activityTaskCompletedEventAttributes");
    openapiFields.add("activityTaskFailedEventAttributes");
    openapiFields.add("activityTaskTimedOutEventAttributes");
    openapiFields.add("activityTaskCanceledEventAttributes");
    openapiFields.add("activityTaskCancelRequestedEventAttributes");
    openapiFields.add("workflowExecutionSignaledEventAttributes");
    openapiFields.add("markerRecordedEventAttributes");
    openapiFields.add("recordMarkerFailedEventAttributes");
    openapiFields.add("timerStartedEventAttributes");
    openapiFields.add("timerFiredEventAttributes");
    openapiFields.add("timerCanceledEventAttributes");
    openapiFields.add("startChildWorkflowExecutionInitiatedEventAttributes");
    openapiFields.add("childWorkflowExecutionStartedEventAttributes");
    openapiFields.add("childWorkflowExecutionCompletedEventAttributes");
    openapiFields.add("childWorkflowExecutionFailedEventAttributes");
    openapiFields.add("childWorkflowExecutionTimedOutEventAttributes");
    openapiFields.add("childWorkflowExecutionCanceledEventAttributes");
    openapiFields.add("childWorkflowExecutionTerminatedEventAttributes");
    openapiFields.add("signalExternalWorkflowExecutionInitiatedEventAttributes");
    openapiFields.add("externalWorkflowExecutionSignaledEventAttributes");
    openapiFields.add("signalExternalWorkflowExecutionFailedEventAttributes");
    openapiFields.add("externalWorkflowExecutionCancelRequestedEventAttributes");
    openapiFields.add("requestCancelExternalWorkflowExecutionInitiatedEventAttributes");
    openapiFields.add("requestCancelExternalWorkflowExecutionFailedEventAttributes");
    openapiFields.add("scheduleActivityTaskFailedEventAttributes");
    openapiFields.add("requestCancelActivityTaskFailedEventAttributes");
    openapiFields.add("startTimerFailedEventAttributes");
    openapiFields.add("cancelTimerFailedEventAttributes");
    openapiFields.add("startChildWorkflowExecutionFailedEventAttributes");
    openapiFields.add("lambdaFunctionScheduledEventAttributes");
    openapiFields.add("lambdaFunctionStartedEventAttributes");
    openapiFields.add("lambdaFunctionCompletedEventAttributes");
    openapiFields.add("lambdaFunctionFailedEventAttributes");
    openapiFields.add("lambdaFunctionTimedOutEventAttributes");
    openapiFields.add("scheduleLambdaFunctionFailedEventAttributes");
    openapiFields.add("startLambdaFunctionFailedEventAttributes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("eventTimestamp");
    openapiRequiredFields.add("eventType");
    openapiRequiredFields.add("eventId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to HistoryEvent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!HistoryEvent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in HistoryEvent is not found in the empty JSON string", HistoryEvent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!HistoryEvent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `HistoryEvent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : HistoryEvent.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `eventTimestamp`
      OffsetDateTime.validateJsonElement(jsonObj.get("eventTimestamp"));
      // validate the required field `eventType`
      EventType.validateJsonElement(jsonObj.get("eventType"));
      // validate the required field `eventId`
      Integer.validateJsonElement(jsonObj.get("eventId"));
      // validate the optional field `workflowExecutionStartedEventAttributes`
      if (jsonObj.get("workflowExecutionStartedEventAttributes") != null && !jsonObj.get("workflowExecutionStartedEventAttributes").isJsonNull()) {
        HistoryEventWorkflowExecutionStartedEventAttributes.validateJsonElement(jsonObj.get("workflowExecutionStartedEventAttributes"));
      }
      // validate the optional field `workflowExecutionCompletedEventAttributes`
      if (jsonObj.get("workflowExecutionCompletedEventAttributes") != null && !jsonObj.get("workflowExecutionCompletedEventAttributes").isJsonNull()) {
        HistoryEventWorkflowExecutionCompletedEventAttributes.validateJsonElement(jsonObj.get("workflowExecutionCompletedEventAttributes"));
      }
      // validate the optional field `completeWorkflowExecutionFailedEventAttributes`
      if (jsonObj.get("completeWorkflowExecutionFailedEventAttributes") != null && !jsonObj.get("completeWorkflowExecutionFailedEventAttributes").isJsonNull()) {
        HistoryEventCompleteWorkflowExecutionFailedEventAttributes.validateJsonElement(jsonObj.get("completeWorkflowExecutionFailedEventAttributes"));
      }
      // validate the optional field `workflowExecutionFailedEventAttributes`
      if (jsonObj.get("workflowExecutionFailedEventAttributes") != null && !jsonObj.get("workflowExecutionFailedEventAttributes").isJsonNull()) {
        HistoryEventWorkflowExecutionFailedEventAttributes.validateJsonElement(jsonObj.get("workflowExecutionFailedEventAttributes"));
      }
      // validate the optional field `failWorkflowExecutionFailedEventAttributes`
      if (jsonObj.get("failWorkflowExecutionFailedEventAttributes") != null && !jsonObj.get("failWorkflowExecutionFailedEventAttributes").isJsonNull()) {
        HistoryEventFailWorkflowExecutionFailedEventAttributes.validateJsonElement(jsonObj.get("failWorkflowExecutionFailedEventAttributes"));
      }
      // validate the optional field `workflowExecutionTimedOutEventAttributes`
      if (jsonObj.get("workflowExecutionTimedOutEventAttributes") != null && !jsonObj.get("workflowExecutionTimedOutEventAttributes").isJsonNull()) {
        HistoryEventWorkflowExecutionTimedOutEventAttributes.validateJsonElement(jsonObj.get("workflowExecutionTimedOutEventAttributes"));
      }
      // validate the optional field `workflowExecutionCanceledEventAttributes`
      if (jsonObj.get("workflowExecutionCanceledEventAttributes") != null && !jsonObj.get("workflowExecutionCanceledEventAttributes").isJsonNull()) {
        HistoryEventWorkflowExecutionCanceledEventAttributes.validateJsonElement(jsonObj.get("workflowExecutionCanceledEventAttributes"));
      }
      // validate the optional field `cancelWorkflowExecutionFailedEventAttributes`
      if (jsonObj.get("cancelWorkflowExecutionFailedEventAttributes") != null && !jsonObj.get("cancelWorkflowExecutionFailedEventAttributes").isJsonNull()) {
        HistoryEventCancelWorkflowExecutionFailedEventAttributes.validateJsonElement(jsonObj.get("cancelWorkflowExecutionFailedEventAttributes"));
      }
      // validate the optional field `workflowExecutionContinuedAsNewEventAttributes`
      if (jsonObj.get("workflowExecutionContinuedAsNewEventAttributes") != null && !jsonObj.get("workflowExecutionContinuedAsNewEventAttributes").isJsonNull()) {
        HistoryEventWorkflowExecutionContinuedAsNewEventAttributes.validateJsonElement(jsonObj.get("workflowExecutionContinuedAsNewEventAttributes"));
      }
      // validate the optional field `continueAsNewWorkflowExecutionFailedEventAttributes`
      if (jsonObj.get("continueAsNewWorkflowExecutionFailedEventAttributes") != null && !jsonObj.get("continueAsNewWorkflowExecutionFailedEventAttributes").isJsonNull()) {
        HistoryEventContinueAsNewWorkflowExecutionFailedEventAttributes.validateJsonElement(jsonObj.get("continueAsNewWorkflowExecutionFailedEventAttributes"));
      }
      // validate the optional field `workflowExecutionTerminatedEventAttributes`
      if (jsonObj.get("workflowExecutionTerminatedEventAttributes") != null && !jsonObj.get("workflowExecutionTerminatedEventAttributes").isJsonNull()) {
        HistoryEventWorkflowExecutionTerminatedEventAttributes.validateJsonElement(jsonObj.get("workflowExecutionTerminatedEventAttributes"));
      }
      // validate the optional field `workflowExecutionCancelRequestedEventAttributes`
      if (jsonObj.get("workflowExecutionCancelRequestedEventAttributes") != null && !jsonObj.get("workflowExecutionCancelRequestedEventAttributes").isJsonNull()) {
        HistoryEventWorkflowExecutionCancelRequestedEventAttributes.validateJsonElement(jsonObj.get("workflowExecutionCancelRequestedEventAttributes"));
      }
      // validate the optional field `decisionTaskScheduledEventAttributes`
      if (jsonObj.get("decisionTaskScheduledEventAttributes") != null && !jsonObj.get("decisionTaskScheduledEventAttributes").isJsonNull()) {
        HistoryEventDecisionTaskScheduledEventAttributes.validateJsonElement(jsonObj.get("decisionTaskScheduledEventAttributes"));
      }
      // validate the optional field `decisionTaskStartedEventAttributes`
      if (jsonObj.get("decisionTaskStartedEventAttributes") != null && !jsonObj.get("decisionTaskStartedEventAttributes").isJsonNull()) {
        HistoryEventDecisionTaskStartedEventAttributes.validateJsonElement(jsonObj.get("decisionTaskStartedEventAttributes"));
      }
      // validate the optional field `decisionTaskCompletedEventAttributes`
      if (jsonObj.get("decisionTaskCompletedEventAttributes") != null && !jsonObj.get("decisionTaskCompletedEventAttributes").isJsonNull()) {
        HistoryEventDecisionTaskCompletedEventAttributes.validateJsonElement(jsonObj.get("decisionTaskCompletedEventAttributes"));
      }
      // validate the optional field `decisionTaskTimedOutEventAttributes`
      if (jsonObj.get("decisionTaskTimedOutEventAttributes") != null && !jsonObj.get("decisionTaskTimedOutEventAttributes").isJsonNull()) {
        HistoryEventDecisionTaskTimedOutEventAttributes.validateJsonElement(jsonObj.get("decisionTaskTimedOutEventAttributes"));
      }
      // validate the optional field `activityTaskScheduledEventAttributes`
      if (jsonObj.get("activityTaskScheduledEventAttributes") != null && !jsonObj.get("activityTaskScheduledEventAttributes").isJsonNull()) {
        HistoryEventActivityTaskScheduledEventAttributes.validateJsonElement(jsonObj.get("activityTaskScheduledEventAttributes"));
      }
      // validate the optional field `activityTaskStartedEventAttributes`
      if (jsonObj.get("activityTaskStartedEventAttributes") != null && !jsonObj.get("activityTaskStartedEventAttributes").isJsonNull()) {
        HistoryEventActivityTaskStartedEventAttributes.validateJsonElement(jsonObj.get("activityTaskStartedEventAttributes"));
      }
      // validate the optional field `activityTaskCompletedEventAttributes`
      if (jsonObj.get("activityTaskCompletedEventAttributes") != null && !jsonObj.get("activityTaskCompletedEventAttributes").isJsonNull()) {
        HistoryEventActivityTaskCompletedEventAttributes.validateJsonElement(jsonObj.get("activityTaskCompletedEventAttributes"));
      }
      // validate the optional field `activityTaskFailedEventAttributes`
      if (jsonObj.get("activityTaskFailedEventAttributes") != null && !jsonObj.get("activityTaskFailedEventAttributes").isJsonNull()) {
        HistoryEventActivityTaskFailedEventAttributes.validateJsonElement(jsonObj.get("activityTaskFailedEventAttributes"));
      }
      // validate the optional field `activityTaskTimedOutEventAttributes`
      if (jsonObj.get("activityTaskTimedOutEventAttributes") != null && !jsonObj.get("activityTaskTimedOutEventAttributes").isJsonNull()) {
        HistoryEventActivityTaskTimedOutEventAttributes.validateJsonElement(jsonObj.get("activityTaskTimedOutEventAttributes"));
      }
      // validate the optional field `activityTaskCanceledEventAttributes`
      if (jsonObj.get("activityTaskCanceledEventAttributes") != null && !jsonObj.get("activityTaskCanceledEventAttributes").isJsonNull()) {
        HistoryEventActivityTaskCanceledEventAttributes.validateJsonElement(jsonObj.get("activityTaskCanceledEventAttributes"));
      }
      // validate the optional field `activityTaskCancelRequestedEventAttributes`
      if (jsonObj.get("activityTaskCancelRequestedEventAttributes") != null && !jsonObj.get("activityTaskCancelRequestedEventAttributes").isJsonNull()) {
        HistoryEventActivityTaskCancelRequestedEventAttributes.validateJsonElement(jsonObj.get("activityTaskCancelRequestedEventAttributes"));
      }
      // validate the optional field `workflowExecutionSignaledEventAttributes`
      if (jsonObj.get("workflowExecutionSignaledEventAttributes") != null && !jsonObj.get("workflowExecutionSignaledEventAttributes").isJsonNull()) {
        HistoryEventWorkflowExecutionSignaledEventAttributes.validateJsonElement(jsonObj.get("workflowExecutionSignaledEventAttributes"));
      }
      // validate the optional field `markerRecordedEventAttributes`
      if (jsonObj.get("markerRecordedEventAttributes") != null && !jsonObj.get("markerRecordedEventAttributes").isJsonNull()) {
        HistoryEventMarkerRecordedEventAttributes.validateJsonElement(jsonObj.get("markerRecordedEventAttributes"));
      }
      // validate the optional field `recordMarkerFailedEventAttributes`
      if (jsonObj.get("recordMarkerFailedEventAttributes") != null && !jsonObj.get("recordMarkerFailedEventAttributes").isJsonNull()) {
        HistoryEventRecordMarkerFailedEventAttributes.validateJsonElement(jsonObj.get("recordMarkerFailedEventAttributes"));
      }
      // validate the optional field `timerStartedEventAttributes`
      if (jsonObj.get("timerStartedEventAttributes") != null && !jsonObj.get("timerStartedEventAttributes").isJsonNull()) {
        HistoryEventTimerStartedEventAttributes.validateJsonElement(jsonObj.get("timerStartedEventAttributes"));
      }
      // validate the optional field `timerFiredEventAttributes`
      if (jsonObj.get("timerFiredEventAttributes") != null && !jsonObj.get("timerFiredEventAttributes").isJsonNull()) {
        HistoryEventTimerFiredEventAttributes.validateJsonElement(jsonObj.get("timerFiredEventAttributes"));
      }
      // validate the optional field `timerCanceledEventAttributes`
      if (jsonObj.get("timerCanceledEventAttributes") != null && !jsonObj.get("timerCanceledEventAttributes").isJsonNull()) {
        HistoryEventTimerCanceledEventAttributes.validateJsonElement(jsonObj.get("timerCanceledEventAttributes"));
      }
      // validate the optional field `startChildWorkflowExecutionInitiatedEventAttributes`
      if (jsonObj.get("startChildWorkflowExecutionInitiatedEventAttributes") != null && !jsonObj.get("startChildWorkflowExecutionInitiatedEventAttributes").isJsonNull()) {
        HistoryEventStartChildWorkflowExecutionInitiatedEventAttributes.validateJsonElement(jsonObj.get("startChildWorkflowExecutionInitiatedEventAttributes"));
      }
      // validate the optional field `childWorkflowExecutionStartedEventAttributes`
      if (jsonObj.get("childWorkflowExecutionStartedEventAttributes") != null && !jsonObj.get("childWorkflowExecutionStartedEventAttributes").isJsonNull()) {
        HistoryEventChildWorkflowExecutionStartedEventAttributes.validateJsonElement(jsonObj.get("childWorkflowExecutionStartedEventAttributes"));
      }
      // validate the optional field `childWorkflowExecutionCompletedEventAttributes`
      if (jsonObj.get("childWorkflowExecutionCompletedEventAttributes") != null && !jsonObj.get("childWorkflowExecutionCompletedEventAttributes").isJsonNull()) {
        HistoryEventChildWorkflowExecutionCompletedEventAttributes.validateJsonElement(jsonObj.get("childWorkflowExecutionCompletedEventAttributes"));
      }
      // validate the optional field `childWorkflowExecutionFailedEventAttributes`
      if (jsonObj.get("childWorkflowExecutionFailedEventAttributes") != null && !jsonObj.get("childWorkflowExecutionFailedEventAttributes").isJsonNull()) {
        HistoryEventChildWorkflowExecutionFailedEventAttributes.validateJsonElement(jsonObj.get("childWorkflowExecutionFailedEventAttributes"));
      }
      // validate the optional field `childWorkflowExecutionTimedOutEventAttributes`
      if (jsonObj.get("childWorkflowExecutionTimedOutEventAttributes") != null && !jsonObj.get("childWorkflowExecutionTimedOutEventAttributes").isJsonNull()) {
        HistoryEventChildWorkflowExecutionTimedOutEventAttributes.validateJsonElement(jsonObj.get("childWorkflowExecutionTimedOutEventAttributes"));
      }
      // validate the optional field `childWorkflowExecutionCanceledEventAttributes`
      if (jsonObj.get("childWorkflowExecutionCanceledEventAttributes") != null && !jsonObj.get("childWorkflowExecutionCanceledEventAttributes").isJsonNull()) {
        HistoryEventChildWorkflowExecutionCanceledEventAttributes.validateJsonElement(jsonObj.get("childWorkflowExecutionCanceledEventAttributes"));
      }
      // validate the optional field `childWorkflowExecutionTerminatedEventAttributes`
      if (jsonObj.get("childWorkflowExecutionTerminatedEventAttributes") != null && !jsonObj.get("childWorkflowExecutionTerminatedEventAttributes").isJsonNull()) {
        HistoryEventChildWorkflowExecutionTerminatedEventAttributes.validateJsonElement(jsonObj.get("childWorkflowExecutionTerminatedEventAttributes"));
      }
      // validate the optional field `signalExternalWorkflowExecutionInitiatedEventAttributes`
      if (jsonObj.get("signalExternalWorkflowExecutionInitiatedEventAttributes") != null && !jsonObj.get("signalExternalWorkflowExecutionInitiatedEventAttributes").isJsonNull()) {
        HistoryEventSignalExternalWorkflowExecutionInitiatedEventAttributes.validateJsonElement(jsonObj.get("signalExternalWorkflowExecutionInitiatedEventAttributes"));
      }
      // validate the optional field `externalWorkflowExecutionSignaledEventAttributes`
      if (jsonObj.get("externalWorkflowExecutionSignaledEventAttributes") != null && !jsonObj.get("externalWorkflowExecutionSignaledEventAttributes").isJsonNull()) {
        HistoryEventExternalWorkflowExecutionSignaledEventAttributes.validateJsonElement(jsonObj.get("externalWorkflowExecutionSignaledEventAttributes"));
      }
      // validate the optional field `signalExternalWorkflowExecutionFailedEventAttributes`
      if (jsonObj.get("signalExternalWorkflowExecutionFailedEventAttributes") != null && !jsonObj.get("signalExternalWorkflowExecutionFailedEventAttributes").isJsonNull()) {
        HistoryEventSignalExternalWorkflowExecutionFailedEventAttributes.validateJsonElement(jsonObj.get("signalExternalWorkflowExecutionFailedEventAttributes"));
      }
      // validate the optional field `externalWorkflowExecutionCancelRequestedEventAttributes`
      if (jsonObj.get("externalWorkflowExecutionCancelRequestedEventAttributes") != null && !jsonObj.get("externalWorkflowExecutionCancelRequestedEventAttributes").isJsonNull()) {
        HistoryEventExternalWorkflowExecutionCancelRequestedEventAttributes.validateJsonElement(jsonObj.get("externalWorkflowExecutionCancelRequestedEventAttributes"));
      }
      // validate the optional field `requestCancelExternalWorkflowExecutionInitiatedEventAttributes`
      if (jsonObj.get("requestCancelExternalWorkflowExecutionInitiatedEventAttributes") != null && !jsonObj.get("requestCancelExternalWorkflowExecutionInitiatedEventAttributes").isJsonNull()) {
        HistoryEventRequestCancelExternalWorkflowExecutionInitiatedEventAttributes.validateJsonElement(jsonObj.get("requestCancelExternalWorkflowExecutionInitiatedEventAttributes"));
      }
      // validate the optional field `requestCancelExternalWorkflowExecutionFailedEventAttributes`
      if (jsonObj.get("requestCancelExternalWorkflowExecutionFailedEventAttributes") != null && !jsonObj.get("requestCancelExternalWorkflowExecutionFailedEventAttributes").isJsonNull()) {
        HistoryEventRequestCancelExternalWorkflowExecutionFailedEventAttributes.validateJsonElement(jsonObj.get("requestCancelExternalWorkflowExecutionFailedEventAttributes"));
      }
      // validate the optional field `scheduleActivityTaskFailedEventAttributes`
      if (jsonObj.get("scheduleActivityTaskFailedEventAttributes") != null && !jsonObj.get("scheduleActivityTaskFailedEventAttributes").isJsonNull()) {
        HistoryEventScheduleActivityTaskFailedEventAttributes.validateJsonElement(jsonObj.get("scheduleActivityTaskFailedEventAttributes"));
      }
      // validate the optional field `requestCancelActivityTaskFailedEventAttributes`
      if (jsonObj.get("requestCancelActivityTaskFailedEventAttributes") != null && !jsonObj.get("requestCancelActivityTaskFailedEventAttributes").isJsonNull()) {
        HistoryEventRequestCancelActivityTaskFailedEventAttributes.validateJsonElement(jsonObj.get("requestCancelActivityTaskFailedEventAttributes"));
      }
      // validate the optional field `startTimerFailedEventAttributes`
      if (jsonObj.get("startTimerFailedEventAttributes") != null && !jsonObj.get("startTimerFailedEventAttributes").isJsonNull()) {
        HistoryEventStartTimerFailedEventAttributes.validateJsonElement(jsonObj.get("startTimerFailedEventAttributes"));
      }
      // validate the optional field `cancelTimerFailedEventAttributes`
      if (jsonObj.get("cancelTimerFailedEventAttributes") != null && !jsonObj.get("cancelTimerFailedEventAttributes").isJsonNull()) {
        HistoryEventCancelTimerFailedEventAttributes.validateJsonElement(jsonObj.get("cancelTimerFailedEventAttributes"));
      }
      // validate the optional field `startChildWorkflowExecutionFailedEventAttributes`
      if (jsonObj.get("startChildWorkflowExecutionFailedEventAttributes") != null && !jsonObj.get("startChildWorkflowExecutionFailedEventAttributes").isJsonNull()) {
        HistoryEventStartChildWorkflowExecutionFailedEventAttributes.validateJsonElement(jsonObj.get("startChildWorkflowExecutionFailedEventAttributes"));
      }
      // validate the optional field `lambdaFunctionScheduledEventAttributes`
      if (jsonObj.get("lambdaFunctionScheduledEventAttributes") != null && !jsonObj.get("lambdaFunctionScheduledEventAttributes").isJsonNull()) {
        HistoryEventLambdaFunctionScheduledEventAttributes.validateJsonElement(jsonObj.get("lambdaFunctionScheduledEventAttributes"));
      }
      // validate the optional field `lambdaFunctionStartedEventAttributes`
      if (jsonObj.get("lambdaFunctionStartedEventAttributes") != null && !jsonObj.get("lambdaFunctionStartedEventAttributes").isJsonNull()) {
        HistoryEventLambdaFunctionStartedEventAttributes.validateJsonElement(jsonObj.get("lambdaFunctionStartedEventAttributes"));
      }
      // validate the optional field `lambdaFunctionCompletedEventAttributes`
      if (jsonObj.get("lambdaFunctionCompletedEventAttributes") != null && !jsonObj.get("lambdaFunctionCompletedEventAttributes").isJsonNull()) {
        HistoryEventLambdaFunctionCompletedEventAttributes.validateJsonElement(jsonObj.get("lambdaFunctionCompletedEventAttributes"));
      }
      // validate the optional field `lambdaFunctionFailedEventAttributes`
      if (jsonObj.get("lambdaFunctionFailedEventAttributes") != null && !jsonObj.get("lambdaFunctionFailedEventAttributes").isJsonNull()) {
        HistoryEventLambdaFunctionFailedEventAttributes.validateJsonElement(jsonObj.get("lambdaFunctionFailedEventAttributes"));
      }
      // validate the optional field `lambdaFunctionTimedOutEventAttributes`
      if (jsonObj.get("lambdaFunctionTimedOutEventAttributes") != null && !jsonObj.get("lambdaFunctionTimedOutEventAttributes").isJsonNull()) {
        HistoryEventLambdaFunctionTimedOutEventAttributes.validateJsonElement(jsonObj.get("lambdaFunctionTimedOutEventAttributes"));
      }
      // validate the optional field `scheduleLambdaFunctionFailedEventAttributes`
      if (jsonObj.get("scheduleLambdaFunctionFailedEventAttributes") != null && !jsonObj.get("scheduleLambdaFunctionFailedEventAttributes").isJsonNull()) {
        HistoryEventScheduleLambdaFunctionFailedEventAttributes.validateJsonElement(jsonObj.get("scheduleLambdaFunctionFailedEventAttributes"));
      }
      // validate the optional field `startLambdaFunctionFailedEventAttributes`
      if (jsonObj.get("startLambdaFunctionFailedEventAttributes") != null && !jsonObj.get("startLambdaFunctionFailedEventAttributes").isJsonNull()) {
        HistoryEventStartLambdaFunctionFailedEventAttributes.validateJsonElement(jsonObj.get("startLambdaFunctionFailedEventAttributes"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!HistoryEvent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'HistoryEvent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<HistoryEvent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(HistoryEvent.class));

       return (TypeAdapter<T>) new TypeAdapter<HistoryEvent>() {
           @Override
           public void write(JsonWriter out, HistoryEvent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public HistoryEvent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of HistoryEvent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of HistoryEvent
   * @throws IOException if the JSON string is invalid with respect to HistoryEvent
   */
  public static HistoryEvent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, HistoryEvent.class);
  }

  /**
   * Convert an instance of HistoryEvent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

