/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRegisterWorkflowTypeInput.h
 *
 * 
 */

#ifndef OAIRegisterWorkflowTypeInput_H
#define OAIRegisterWorkflowTypeInput_H

#include <QJsonObject>

#include "OAIChildPolicy.h"
#include "OAIRegisterWorkflowTypeInput_defaultTaskList.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRegisterWorkflowTypeInput_defaultTaskList;

class OAIRegisterWorkflowTypeInput : public OAIObject {
public:
    OAIRegisterWorkflowTypeInput();
    OAIRegisterWorkflowTypeInput(QString json);
    ~OAIRegisterWorkflowTypeInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDefaultTaskStartToCloseTimeout() const;
    void setDefaultTaskStartToCloseTimeout(const QString &default_task_start_to_close_timeout);
    bool is_default_task_start_to_close_timeout_Set() const;
    bool is_default_task_start_to_close_timeout_Valid() const;

    QString getDefaultExecutionStartToCloseTimeout() const;
    void setDefaultExecutionStartToCloseTimeout(const QString &default_execution_start_to_close_timeout);
    bool is_default_execution_start_to_close_timeout_Set() const;
    bool is_default_execution_start_to_close_timeout_Valid() const;

    OAIRegisterWorkflowTypeInput_defaultTaskList getDefaultTaskList() const;
    void setDefaultTaskList(const OAIRegisterWorkflowTypeInput_defaultTaskList &default_task_list);
    bool is_default_task_list_Set() const;
    bool is_default_task_list_Valid() const;

    QString getDefaultTaskPriority() const;
    void setDefaultTaskPriority(const QString &default_task_priority);
    bool is_default_task_priority_Set() const;
    bool is_default_task_priority_Valid() const;

    OAIChildPolicy getDefaultChildPolicy() const;
    void setDefaultChildPolicy(const OAIChildPolicy &default_child_policy);
    bool is_default_child_policy_Set() const;
    bool is_default_child_policy_Valid() const;

    QString getDefaultLambdaRole() const;
    void setDefaultLambdaRole(const QString &default_lambda_role);
    bool is_default_lambda_role_Set() const;
    bool is_default_lambda_role_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_default_task_start_to_close_timeout;
    bool m_default_task_start_to_close_timeout_isSet;
    bool m_default_task_start_to_close_timeout_isValid;

    QString m_default_execution_start_to_close_timeout;
    bool m_default_execution_start_to_close_timeout_isSet;
    bool m_default_execution_start_to_close_timeout_isValid;

    OAIRegisterWorkflowTypeInput_defaultTaskList m_default_task_list;
    bool m_default_task_list_isSet;
    bool m_default_task_list_isValid;

    QString m_default_task_priority;
    bool m_default_task_priority_isSet;
    bool m_default_task_priority_isValid;

    OAIChildPolicy m_default_child_policy;
    bool m_default_child_policy_isSet;
    bool m_default_child_policy_isValid;

    QString m_default_lambda_role;
    bool m_default_lambda_role_isSet;
    bool m_default_lambda_role_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRegisterWorkflowTypeInput)

#endif // OAIRegisterWorkflowTypeInput_H
