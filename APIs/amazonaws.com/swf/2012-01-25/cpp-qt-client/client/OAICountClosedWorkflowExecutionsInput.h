/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICountClosedWorkflowExecutionsInput.h
 *
 * 
 */

#ifndef OAICountClosedWorkflowExecutionsInput_H
#define OAICountClosedWorkflowExecutionsInput_H

#include <QJsonObject>

#include "OAICountClosedWorkflowExecutionsInput_closeStatusFilter.h"
#include "OAICountClosedWorkflowExecutionsInput_closeTimeFilter.h"
#include "OAICountClosedWorkflowExecutionsInput_executionFilter.h"
#include "OAICountClosedWorkflowExecutionsInput_startTimeFilter.h"
#include "OAICountClosedWorkflowExecutionsInput_tagFilter.h"
#include "OAICountClosedWorkflowExecutionsInput_typeFilter.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICountClosedWorkflowExecutionsInput_startTimeFilter;
class OAICountClosedWorkflowExecutionsInput_closeTimeFilter;
class OAICountClosedWorkflowExecutionsInput_executionFilter;
class OAICountClosedWorkflowExecutionsInput_typeFilter;
class OAICountClosedWorkflowExecutionsInput_tagFilter;
class OAICountClosedWorkflowExecutionsInput_closeStatusFilter;

class OAICountClosedWorkflowExecutionsInput : public OAIObject {
public:
    OAICountClosedWorkflowExecutionsInput();
    OAICountClosedWorkflowExecutionsInput(QString json);
    ~OAICountClosedWorkflowExecutionsInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    OAICountClosedWorkflowExecutionsInput_startTimeFilter getStartTimeFilter() const;
    void setStartTimeFilter(const OAICountClosedWorkflowExecutionsInput_startTimeFilter &start_time_filter);
    bool is_start_time_filter_Set() const;
    bool is_start_time_filter_Valid() const;

    OAICountClosedWorkflowExecutionsInput_closeTimeFilter getCloseTimeFilter() const;
    void setCloseTimeFilter(const OAICountClosedWorkflowExecutionsInput_closeTimeFilter &close_time_filter);
    bool is_close_time_filter_Set() const;
    bool is_close_time_filter_Valid() const;

    OAICountClosedWorkflowExecutionsInput_executionFilter getExecutionFilter() const;
    void setExecutionFilter(const OAICountClosedWorkflowExecutionsInput_executionFilter &execution_filter);
    bool is_execution_filter_Set() const;
    bool is_execution_filter_Valid() const;

    OAICountClosedWorkflowExecutionsInput_typeFilter getTypeFilter() const;
    void setTypeFilter(const OAICountClosedWorkflowExecutionsInput_typeFilter &type_filter);
    bool is_type_filter_Set() const;
    bool is_type_filter_Valid() const;

    OAICountClosedWorkflowExecutionsInput_tagFilter getTagFilter() const;
    void setTagFilter(const OAICountClosedWorkflowExecutionsInput_tagFilter &tag_filter);
    bool is_tag_filter_Set() const;
    bool is_tag_filter_Valid() const;

    OAICountClosedWorkflowExecutionsInput_closeStatusFilter getCloseStatusFilter() const;
    void setCloseStatusFilter(const OAICountClosedWorkflowExecutionsInput_closeStatusFilter &close_status_filter);
    bool is_close_status_filter_Set() const;
    bool is_close_status_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    OAICountClosedWorkflowExecutionsInput_startTimeFilter m_start_time_filter;
    bool m_start_time_filter_isSet;
    bool m_start_time_filter_isValid;

    OAICountClosedWorkflowExecutionsInput_closeTimeFilter m_close_time_filter;
    bool m_close_time_filter_isSet;
    bool m_close_time_filter_isValid;

    OAICountClosedWorkflowExecutionsInput_executionFilter m_execution_filter;
    bool m_execution_filter_isSet;
    bool m_execution_filter_isValid;

    OAICountClosedWorkflowExecutionsInput_typeFilter m_type_filter;
    bool m_type_filter_isSet;
    bool m_type_filter_isValid;

    OAICountClosedWorkflowExecutionsInput_tagFilter m_tag_filter;
    bool m_tag_filter_isSet;
    bool m_tag_filter_isValid;

    OAICountClosedWorkflowExecutionsInput_closeStatusFilter m_close_status_filter;
    bool m_close_status_filter_isSet;
    bool m_close_status_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICountClosedWorkflowExecutionsInput)

#endif // OAICountClosedWorkflowExecutionsInput_H
