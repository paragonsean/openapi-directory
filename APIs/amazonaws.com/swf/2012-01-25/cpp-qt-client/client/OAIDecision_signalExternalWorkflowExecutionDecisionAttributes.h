/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDecision_signalExternalWorkflowExecutionDecisionAttributes.h
 *
 * 
 */

#ifndef OAIDecision_signalExternalWorkflowExecutionDecisionAttributes_H
#define OAIDecision_signalExternalWorkflowExecutionDecisionAttributes_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDecision_signalExternalWorkflowExecutionDecisionAttributes : public OAIObject {
public:
    OAIDecision_signalExternalWorkflowExecutionDecisionAttributes();
    OAIDecision_signalExternalWorkflowExecutionDecisionAttributes(QString json);
    ~OAIDecision_signalExternalWorkflowExecutionDecisionAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getWorkflowId() const;
    void setWorkflowId(const QString &workflow_id);
    bool is_workflow_id_Set() const;
    bool is_workflow_id_Valid() const;

    QString getRunId() const;
    void setRunId(const QString &run_id);
    bool is_run_id_Set() const;
    bool is_run_id_Valid() const;

    QString getSignalName() const;
    void setSignalName(const QString &signal_name);
    bool is_signal_name_Set() const;
    bool is_signal_name_Valid() const;

    QString getInput() const;
    void setInput(const QString &input);
    bool is_input_Set() const;
    bool is_input_Valid() const;

    QString getControl() const;
    void setControl(const QString &control);
    bool is_control_Set() const;
    bool is_control_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_workflow_id;
    bool m_workflow_id_isSet;
    bool m_workflow_id_isValid;

    QString m_run_id;
    bool m_run_id_isSet;
    bool m_run_id_isValid;

    QString m_signal_name;
    bool m_signal_name_isSet;
    bool m_signal_name_isValid;

    QString m_input;
    bool m_input_isSet;
    bool m_input_isValid;

    QString m_control;
    bool m_control_isSet;
    bool m_control_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDecision_signalExternalWorkflowExecutionDecisionAttributes)

#endif // OAIDecision_signalExternalWorkflowExecutionDecisionAttributes_H
