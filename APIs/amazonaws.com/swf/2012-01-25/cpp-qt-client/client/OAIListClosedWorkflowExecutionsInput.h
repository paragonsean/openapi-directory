/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListClosedWorkflowExecutionsInput.h
 *
 * 
 */

#ifndef OAIListClosedWorkflowExecutionsInput_H
#define OAIListClosedWorkflowExecutionsInput_H

#include <QJsonObject>

#include "OAIListClosedWorkflowExecutionsInput_closeStatusFilter.h"
#include "OAIListClosedWorkflowExecutionsInput_closeTimeFilter.h"
#include "OAIListClosedWorkflowExecutionsInput_executionFilter.h"
#include "OAIListClosedWorkflowExecutionsInput_startTimeFilter.h"
#include "OAIListClosedWorkflowExecutionsInput_tagFilter.h"
#include "OAIListClosedWorkflowExecutionsInput_typeFilter.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListClosedWorkflowExecutionsInput_startTimeFilter;
class OAIListClosedWorkflowExecutionsInput_closeTimeFilter;
class OAIListClosedWorkflowExecutionsInput_executionFilter;
class OAIListClosedWorkflowExecutionsInput_closeStatusFilter;
class OAIListClosedWorkflowExecutionsInput_typeFilter;
class OAIListClosedWorkflowExecutionsInput_tagFilter;

class OAIListClosedWorkflowExecutionsInput : public OAIObject {
public:
    OAIListClosedWorkflowExecutionsInput();
    OAIListClosedWorkflowExecutionsInput(QString json);
    ~OAIListClosedWorkflowExecutionsInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    OAIListClosedWorkflowExecutionsInput_startTimeFilter getStartTimeFilter() const;
    void setStartTimeFilter(const OAIListClosedWorkflowExecutionsInput_startTimeFilter &start_time_filter);
    bool is_start_time_filter_Set() const;
    bool is_start_time_filter_Valid() const;

    OAIListClosedWorkflowExecutionsInput_closeTimeFilter getCloseTimeFilter() const;
    void setCloseTimeFilter(const OAIListClosedWorkflowExecutionsInput_closeTimeFilter &close_time_filter);
    bool is_close_time_filter_Set() const;
    bool is_close_time_filter_Valid() const;

    OAIListClosedWorkflowExecutionsInput_executionFilter getExecutionFilter() const;
    void setExecutionFilter(const OAIListClosedWorkflowExecutionsInput_executionFilter &execution_filter);
    bool is_execution_filter_Set() const;
    bool is_execution_filter_Valid() const;

    OAIListClosedWorkflowExecutionsInput_closeStatusFilter getCloseStatusFilter() const;
    void setCloseStatusFilter(const OAIListClosedWorkflowExecutionsInput_closeStatusFilter &close_status_filter);
    bool is_close_status_filter_Set() const;
    bool is_close_status_filter_Valid() const;

    OAIListClosedWorkflowExecutionsInput_typeFilter getTypeFilter() const;
    void setTypeFilter(const OAIListClosedWorkflowExecutionsInput_typeFilter &type_filter);
    bool is_type_filter_Set() const;
    bool is_type_filter_Valid() const;

    OAIListClosedWorkflowExecutionsInput_tagFilter getTagFilter() const;
    void setTagFilter(const OAIListClosedWorkflowExecutionsInput_tagFilter &tag_filter);
    bool is_tag_filter_Set() const;
    bool is_tag_filter_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    qint32 getMaximumPageSize() const;
    void setMaximumPageSize(const qint32 &maximum_page_size);
    bool is_maximum_page_size_Set() const;
    bool is_maximum_page_size_Valid() const;

    bool getReverseOrder() const;
    void setReverseOrder(const bool &reverse_order);
    bool is_reverse_order_Set() const;
    bool is_reverse_order_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    OAIListClosedWorkflowExecutionsInput_startTimeFilter m_start_time_filter;
    bool m_start_time_filter_isSet;
    bool m_start_time_filter_isValid;

    OAIListClosedWorkflowExecutionsInput_closeTimeFilter m_close_time_filter;
    bool m_close_time_filter_isSet;
    bool m_close_time_filter_isValid;

    OAIListClosedWorkflowExecutionsInput_executionFilter m_execution_filter;
    bool m_execution_filter_isSet;
    bool m_execution_filter_isValid;

    OAIListClosedWorkflowExecutionsInput_closeStatusFilter m_close_status_filter;
    bool m_close_status_filter_isSet;
    bool m_close_status_filter_isValid;

    OAIListClosedWorkflowExecutionsInput_typeFilter m_type_filter;
    bool m_type_filter_isSet;
    bool m_type_filter_isValid;

    OAIListClosedWorkflowExecutionsInput_tagFilter m_tag_filter;
    bool m_tag_filter_isSet;
    bool m_tag_filter_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;

    qint32 m_maximum_page_size;
    bool m_maximum_page_size_isSet;
    bool m_maximum_page_size_isValid;

    bool m_reverse_order;
    bool m_reverse_order_isSet;
    bool m_reverse_order_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListClosedWorkflowExecutionsInput)

#endif // OAIListClosedWorkflowExecutionsInput_H
