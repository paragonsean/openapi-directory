/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkflowExecutionSignaledEventAttributes.h
 *
 * Provides the details of the &lt;code&gt;WorkflowExecutionSignaled&lt;/code&gt; event.
 */

#ifndef OAIWorkflowExecutionSignaledEventAttributes_H
#define OAIWorkflowExecutionSignaledEventAttributes_H

#include <QJsonObject>

#include "OAIWorkflowExecutionSignaledEventAttributes_externalWorkflowExecution.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWorkflowExecutionSignaledEventAttributes_externalWorkflowExecution;

class OAIWorkflowExecutionSignaledEventAttributes : public OAIObject {
public:
    OAIWorkflowExecutionSignaledEventAttributes();
    OAIWorkflowExecutionSignaledEventAttributes(QString json);
    ~OAIWorkflowExecutionSignaledEventAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSignalName() const;
    void setSignalName(const QString &signal_name);
    bool is_signal_name_Set() const;
    bool is_signal_name_Valid() const;

    QString getInput() const;
    void setInput(const QString &input);
    bool is_input_Set() const;
    bool is_input_Valid() const;

    OAIWorkflowExecutionSignaledEventAttributes_externalWorkflowExecution getExternalWorkflowExecution() const;
    void setExternalWorkflowExecution(const OAIWorkflowExecutionSignaledEventAttributes_externalWorkflowExecution &external_workflow_execution);
    bool is_external_workflow_execution_Set() const;
    bool is_external_workflow_execution_Valid() const;

    qint32 getExternalInitiatedEventId() const;
    void setExternalInitiatedEventId(const qint32 &external_initiated_event_id);
    bool is_external_initiated_event_id_Set() const;
    bool is_external_initiated_event_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_signal_name;
    bool m_signal_name_isSet;
    bool m_signal_name_isValid;

    QString m_input;
    bool m_input_isSet;
    bool m_input_isValid;

    OAIWorkflowExecutionSignaledEventAttributes_externalWorkflowExecution m_external_workflow_execution;
    bool m_external_workflow_execution_isSet;
    bool m_external_workflow_execution_isValid;

    qint32 m_external_initiated_event_id;
    bool m_external_initiated_event_id_isSet;
    bool m_external_initiated_event_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkflowExecutionSignaledEventAttributes)

#endif // OAIWorkflowExecutionSignaledEventAttributes_H
