/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActivityTypeInfo.h
 *
 * Detailed information about an activity type.
 */

#ifndef OAIActivityTypeInfo_H
#define OAIActivityTypeInfo_H

#include <QJsonObject>

#include "OAIActivityTypeInfo_activityType.h"
#include "OAIRegistrationStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIActivityTypeInfo_activityType;

class OAIActivityTypeInfo : public OAIObject {
public:
    OAIActivityTypeInfo();
    OAIActivityTypeInfo(QString json);
    ~OAIActivityTypeInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIActivityTypeInfo_activityType getActivityType() const;
    void setActivityType(const OAIActivityTypeInfo_activityType &activity_type);
    bool is_activity_type_Set() const;
    bool is_activity_type_Valid() const;

    OAIRegistrationStatus getStatus() const;
    void setStatus(const OAIRegistrationStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QDateTime getDeprecationDate() const;
    void setDeprecationDate(const QDateTime &deprecation_date);
    bool is_deprecation_date_Set() const;
    bool is_deprecation_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIActivityTypeInfo_activityType m_activity_type;
    bool m_activity_type_isSet;
    bool m_activity_type_isValid;

    OAIRegistrationStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QDateTime m_deprecation_date;
    bool m_deprecation_date_isSet;
    bool m_deprecation_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActivityTypeInfo)

#endif // OAIActivityTypeInfo_H
