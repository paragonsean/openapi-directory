/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICountOpenWorkflowExecutionsInput.h
 *
 * 
 */

#ifndef OAICountOpenWorkflowExecutionsInput_H
#define OAICountOpenWorkflowExecutionsInput_H

#include <QJsonObject>

#include "OAICountOpenWorkflowExecutionsInput_executionFilter.h"
#include "OAICountOpenWorkflowExecutionsInput_startTimeFilter.h"
#include "OAICountOpenWorkflowExecutionsInput_tagFilter.h"
#include "OAICountOpenWorkflowExecutionsInput_typeFilter.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICountOpenWorkflowExecutionsInput_startTimeFilter;
class OAICountOpenWorkflowExecutionsInput_typeFilter;
class OAICountOpenWorkflowExecutionsInput_tagFilter;
class OAICountOpenWorkflowExecutionsInput_executionFilter;

class OAICountOpenWorkflowExecutionsInput : public OAIObject {
public:
    OAICountOpenWorkflowExecutionsInput();
    OAICountOpenWorkflowExecutionsInput(QString json);
    ~OAICountOpenWorkflowExecutionsInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    OAICountOpenWorkflowExecutionsInput_startTimeFilter getStartTimeFilter() const;
    void setStartTimeFilter(const OAICountOpenWorkflowExecutionsInput_startTimeFilter &start_time_filter);
    bool is_start_time_filter_Set() const;
    bool is_start_time_filter_Valid() const;

    OAICountOpenWorkflowExecutionsInput_typeFilter getTypeFilter() const;
    void setTypeFilter(const OAICountOpenWorkflowExecutionsInput_typeFilter &type_filter);
    bool is_type_filter_Set() const;
    bool is_type_filter_Valid() const;

    OAICountOpenWorkflowExecutionsInput_tagFilter getTagFilter() const;
    void setTagFilter(const OAICountOpenWorkflowExecutionsInput_tagFilter &tag_filter);
    bool is_tag_filter_Set() const;
    bool is_tag_filter_Valid() const;

    OAICountOpenWorkflowExecutionsInput_executionFilter getExecutionFilter() const;
    void setExecutionFilter(const OAICountOpenWorkflowExecutionsInput_executionFilter &execution_filter);
    bool is_execution_filter_Set() const;
    bool is_execution_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    OAICountOpenWorkflowExecutionsInput_startTimeFilter m_start_time_filter;
    bool m_start_time_filter_isSet;
    bool m_start_time_filter_isValid;

    OAICountOpenWorkflowExecutionsInput_typeFilter m_type_filter;
    bool m_type_filter_isSet;
    bool m_type_filter_isValid;

    OAICountOpenWorkflowExecutionsInput_tagFilter m_tag_filter;
    bool m_tag_filter_isSet;
    bool m_tag_filter_isValid;

    OAICountOpenWorkflowExecutionsInput_executionFilter m_execution_filter;
    bool m_execution_filter_isSet;
    bool m_execution_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICountOpenWorkflowExecutionsInput)

#endif // OAICountOpenWorkflowExecutionsInput_H
