/**
 * Amazon Simple Workflow Service
 * <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon's cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <i> <a href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/\">Amazon SWF Developer Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2012-01-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkflowExecutionDetail_executionConfiguration.h
 *
 * 
 */

#ifndef OAIWorkflowExecutionDetail_executionConfiguration_H
#define OAIWorkflowExecutionDetail_executionConfiguration_H

#include <QJsonObject>

#include "OAIChildPolicy.h"
#include "OAIWorkflowExecutionConfiguration_taskList.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWorkflowExecutionConfiguration_taskList;

class OAIWorkflowExecutionDetail_executionConfiguration : public OAIObject {
public:
    OAIWorkflowExecutionDetail_executionConfiguration();
    OAIWorkflowExecutionDetail_executionConfiguration(QString json);
    ~OAIWorkflowExecutionDetail_executionConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTaskStartToCloseTimeout() const;
    void setTaskStartToCloseTimeout(const QString &task_start_to_close_timeout);
    bool is_task_start_to_close_timeout_Set() const;
    bool is_task_start_to_close_timeout_Valid() const;

    QString getExecutionStartToCloseTimeout() const;
    void setExecutionStartToCloseTimeout(const QString &execution_start_to_close_timeout);
    bool is_execution_start_to_close_timeout_Set() const;
    bool is_execution_start_to_close_timeout_Valid() const;

    OAIWorkflowExecutionConfiguration_taskList getTaskList() const;
    void setTaskList(const OAIWorkflowExecutionConfiguration_taskList &task_list);
    bool is_task_list_Set() const;
    bool is_task_list_Valid() const;

    QString getTaskPriority() const;
    void setTaskPriority(const QString &task_priority);
    bool is_task_priority_Set() const;
    bool is_task_priority_Valid() const;

    OAIChildPolicy getChildPolicy() const;
    void setChildPolicy(const OAIChildPolicy &child_policy);
    bool is_child_policy_Set() const;
    bool is_child_policy_Valid() const;

    QString getLambdaRole() const;
    void setLambdaRole(const QString &lambda_role);
    bool is_lambda_role_Set() const;
    bool is_lambda_role_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_task_start_to_close_timeout;
    bool m_task_start_to_close_timeout_isSet;
    bool m_task_start_to_close_timeout_isValid;

    QString m_execution_start_to_close_timeout;
    bool m_execution_start_to_close_timeout_isSet;
    bool m_execution_start_to_close_timeout_isValid;

    OAIWorkflowExecutionConfiguration_taskList m_task_list;
    bool m_task_list_isSet;
    bool m_task_list_isValid;

    QString m_task_priority;
    bool m_task_priority_isSet;
    bool m_task_priority_isValid;

    OAIChildPolicy m_child_policy;
    bool m_child_policy_isSet;
    bool m_child_policy_isValid;

    QString m_lambda_role;
    bool m_lambda_role_isSet;
    bool m_lambda_role_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkflowExecutionDetail_executionConfiguration)

#endif // OAIWorkflowExecutionDetail_executionConfiguration_H
