/**
 * Amazon EventBridge Scheduler
 *  Amazon EventBridge Scheduler is a serverless scheduler that allows you to create, run, and manage tasks from one central, managed service. EventBridge Scheduler delivers your tasks reliably, with built-in mechanisms that adjust your schedules based on the availability of downstream targets. The following reference lists the available API actions, and data types for EventBridge Scheduler. 
 *
 * The version of the OpenAPI document: 2021-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateScheduleGroupInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateScheduleGroupInput::OAICreateScheduleGroupInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateScheduleGroupInput::OAICreateScheduleGroupInput() {
    this->initializeModel();
}

OAICreateScheduleGroupInput::~OAICreateScheduleGroupInput() {}

void OAICreateScheduleGroupInput::initializeModel() {

    m_client_token_isSet = false;
    m_client_token_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAICreateScheduleGroupInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateScheduleGroupInput::fromJsonObject(QJsonObject json) {

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("ClientToken")]);
    m_client_token_isSet = !json[QString("ClientToken")].isNull() && m_client_token_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;
}

QString OAICreateScheduleGroupInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateScheduleGroupInput::asJsonObject() const {
    QJsonObject obj;
    if (m_client_token_isSet) {
        obj.insert(QString("ClientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAICreateScheduleGroupInput::getClientToken() const {
    return m_client_token;
}
void OAICreateScheduleGroupInput::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAICreateScheduleGroupInput::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAICreateScheduleGroupInput::is_client_token_Valid() const{
    return m_client_token_isValid;
}

QList OAICreateScheduleGroupInput::getTags() const {
    return m_tags;
}
void OAICreateScheduleGroupInput::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateScheduleGroupInput::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateScheduleGroupInput::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAICreateScheduleGroupInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateScheduleGroupInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
