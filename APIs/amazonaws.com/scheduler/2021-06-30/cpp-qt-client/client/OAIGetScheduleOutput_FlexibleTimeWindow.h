/**
 * Amazon EventBridge Scheduler
 *  Amazon EventBridge Scheduler is a serverless scheduler that allows you to create, run, and manage tasks from one central, managed service. EventBridge Scheduler delivers your tasks reliably, with built-in mechanisms that adjust your schedules based on the availability of downstream targets. The following reference lists the available API actions, and data types for EventBridge Scheduler. 
 *
 * The version of the OpenAPI document: 2021-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetScheduleOutput_FlexibleTimeWindow.h
 *
 * 
 */

#ifndef OAIGetScheduleOutput_FlexibleTimeWindow_H
#define OAIGetScheduleOutput_FlexibleTimeWindow_H

#include <QJsonObject>

#include "OAIFlexibleTimeWindowMode.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetScheduleOutput_FlexibleTimeWindow : public OAIObject {
public:
    OAIGetScheduleOutput_FlexibleTimeWindow();
    OAIGetScheduleOutput_FlexibleTimeWindow(QString json);
    ~OAIGetScheduleOutput_FlexibleTimeWindow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaximumWindowInMinutes() const;
    void setMaximumWindowInMinutes(const qint32 &maximum_window_in_minutes);
    bool is_maximum_window_in_minutes_Set() const;
    bool is_maximum_window_in_minutes_Valid() const;

    OAIFlexibleTimeWindowMode getMode() const;
    void setMode(const OAIFlexibleTimeWindowMode &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_maximum_window_in_minutes;
    bool m_maximum_window_in_minutes_isSet;
    bool m_maximum_window_in_minutes_isValid;

    OAIFlexibleTimeWindowMode m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetScheduleOutput_FlexibleTimeWindow)

#endif // OAIGetScheduleOutput_FlexibleTimeWindow_H
