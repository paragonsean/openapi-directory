/**
 * Amazon EventBridge Scheduler
 *  Amazon EventBridge Scheduler is a serverless scheduler that allows you to create, run, and manage tasks from one central, managed service. EventBridge Scheduler delivers your tasks reliably, with built-in mechanisms that adjust your schedules based on the availability of downstream targets. The following reference lists the available API actions, and data types for EventBridge Scheduler. 
 *
 * The version of the OpenAPI document: 2021-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateScheduleInput_Target.h
 *
 * 
 */

#ifndef OAIUpdateScheduleInput_Target_H
#define OAIUpdateScheduleInput_Target_H

#include <QJsonObject>

#include "OAIUpdateSchedule_request_Target_DeadLetterConfig.h"
#include "OAIUpdateSchedule_request_Target_EcsParameters.h"
#include "OAIUpdateSchedule_request_Target_EventBridgeParameters.h"
#include "OAIUpdateSchedule_request_Target_KinesisParameters.h"
#include "OAIUpdateSchedule_request_Target_RetryPolicy.h"
#include "OAIUpdateSchedule_request_Target_SageMakerPipelineParameters.h"
#include "OAIUpdateSchedule_request_Target_SqsParameters.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateSchedule_request_Target_DeadLetterConfig;
class OAIUpdateSchedule_request_Target_EcsParameters;
class OAIUpdateSchedule_request_Target_EventBridgeParameters;
class OAIUpdateSchedule_request_Target_KinesisParameters;
class OAIUpdateSchedule_request_Target_RetryPolicy;
class OAIUpdateSchedule_request_Target_SageMakerPipelineParameters;
class OAIUpdateSchedule_request_Target_SqsParameters;

class OAIUpdateScheduleInput_Target : public OAIObject {
public:
    OAIUpdateScheduleInput_Target();
    OAIUpdateScheduleInput_Target(QString json);
    ~OAIUpdateScheduleInput_Target() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    OAIUpdateSchedule_request_Target_DeadLetterConfig getDeadLetterConfig() const;
    void setDeadLetterConfig(const OAIUpdateSchedule_request_Target_DeadLetterConfig &dead_letter_config);
    bool is_dead_letter_config_Set() const;
    bool is_dead_letter_config_Valid() const;

    OAIUpdateSchedule_request_Target_EcsParameters getEcsParameters() const;
    void setEcsParameters(const OAIUpdateSchedule_request_Target_EcsParameters &ecs_parameters);
    bool is_ecs_parameters_Set() const;
    bool is_ecs_parameters_Valid() const;

    OAIUpdateSchedule_request_Target_EventBridgeParameters getEventBridgeParameters() const;
    void setEventBridgeParameters(const OAIUpdateSchedule_request_Target_EventBridgeParameters &event_bridge_parameters);
    bool is_event_bridge_parameters_Set() const;
    bool is_event_bridge_parameters_Valid() const;

    QString getInput() const;
    void setInput(const QString &input);
    bool is_input_Set() const;
    bool is_input_Valid() const;

    OAIUpdateSchedule_request_Target_KinesisParameters getKinesisParameters() const;
    void setKinesisParameters(const OAIUpdateSchedule_request_Target_KinesisParameters &kinesis_parameters);
    bool is_kinesis_parameters_Set() const;
    bool is_kinesis_parameters_Valid() const;

    OAIUpdateSchedule_request_Target_RetryPolicy getRetryPolicy() const;
    void setRetryPolicy(const OAIUpdateSchedule_request_Target_RetryPolicy &retry_policy);
    bool is_retry_policy_Set() const;
    bool is_retry_policy_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    OAIUpdateSchedule_request_Target_SageMakerPipelineParameters getSageMakerPipelineParameters() const;
    void setSageMakerPipelineParameters(const OAIUpdateSchedule_request_Target_SageMakerPipelineParameters &sage_maker_pipeline_parameters);
    bool is_sage_maker_pipeline_parameters_Set() const;
    bool is_sage_maker_pipeline_parameters_Valid() const;

    OAIUpdateSchedule_request_Target_SqsParameters getSqsParameters() const;
    void setSqsParameters(const OAIUpdateSchedule_request_Target_SqsParameters &sqs_parameters);
    bool is_sqs_parameters_Set() const;
    bool is_sqs_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    OAIUpdateSchedule_request_Target_DeadLetterConfig m_dead_letter_config;
    bool m_dead_letter_config_isSet;
    bool m_dead_letter_config_isValid;

    OAIUpdateSchedule_request_Target_EcsParameters m_ecs_parameters;
    bool m_ecs_parameters_isSet;
    bool m_ecs_parameters_isValid;

    OAIUpdateSchedule_request_Target_EventBridgeParameters m_event_bridge_parameters;
    bool m_event_bridge_parameters_isSet;
    bool m_event_bridge_parameters_isValid;

    QString m_input;
    bool m_input_isSet;
    bool m_input_isValid;

    OAIUpdateSchedule_request_Target_KinesisParameters m_kinesis_parameters;
    bool m_kinesis_parameters_isSet;
    bool m_kinesis_parameters_isValid;

    OAIUpdateSchedule_request_Target_RetryPolicy m_retry_policy;
    bool m_retry_policy_isSet;
    bool m_retry_policy_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    OAIUpdateSchedule_request_Target_SageMakerPipelineParameters m_sage_maker_pipeline_parameters;
    bool m_sage_maker_pipeline_parameters_isSet;
    bool m_sage_maker_pipeline_parameters_isValid;

    OAIUpdateSchedule_request_Target_SqsParameters m_sqs_parameters;
    bool m_sqs_parameters_isSet;
    bool m_sqs_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateScheduleInput_Target)

#endif // OAIUpdateScheduleInput_Target_H
