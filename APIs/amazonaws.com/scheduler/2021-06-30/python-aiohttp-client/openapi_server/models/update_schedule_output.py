# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateScheduleOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schedule_arn: str=None):
        """UpdateScheduleOutput - a model defined in OpenAPI

        :param schedule_arn: The schedule_arn of this UpdateScheduleOutput.
        """
        self.openapi_types = {
            'schedule_arn': str
        }

        self.attribute_map = {
            'schedule_arn': 'ScheduleArn'
        }

        self._schedule_arn = schedule_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateScheduleOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateScheduleOutput of this UpdateScheduleOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schedule_arn(self):
        """Gets the schedule_arn of this UpdateScheduleOutput.


        :return: The schedule_arn of this UpdateScheduleOutput.
        :rtype: str
        """
        return self._schedule_arn

    @schedule_arn.setter
    def schedule_arn(self, schedule_arn):
        """Sets the schedule_arn of this UpdateScheduleOutput.


        :param schedule_arn: The schedule_arn of this UpdateScheduleOutput.
        :type schedule_arn: str
        """
        if schedule_arn is None:
            raise ValueError("Invalid value for `schedule_arn`, must not be `None`")

        self._schedule_arn = schedule_arn
