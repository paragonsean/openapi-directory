# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.flexible_time_window_mode import FlexibleTimeWindowMode
from openapi_server import util


class GetScheduleOutputFlexibleTimeWindow(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, maximum_window_in_minutes: int=None, mode: FlexibleTimeWindowMode=None):
        """GetScheduleOutputFlexibleTimeWindow - a model defined in OpenAPI

        :param maximum_window_in_minutes: The maximum_window_in_minutes of this GetScheduleOutputFlexibleTimeWindow.
        :param mode: The mode of this GetScheduleOutputFlexibleTimeWindow.
        """
        self.openapi_types = {
            'maximum_window_in_minutes': int,
            'mode': FlexibleTimeWindowMode
        }

        self.attribute_map = {
            'maximum_window_in_minutes': 'MaximumWindowInMinutes',
            'mode': 'Mode'
        }

        self._maximum_window_in_minutes = maximum_window_in_minutes
        self._mode = mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetScheduleOutputFlexibleTimeWindow':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetScheduleOutput_FlexibleTimeWindow of this GetScheduleOutputFlexibleTimeWindow.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def maximum_window_in_minutes(self):
        """Gets the maximum_window_in_minutes of this GetScheduleOutputFlexibleTimeWindow.


        :return: The maximum_window_in_minutes of this GetScheduleOutputFlexibleTimeWindow.
        :rtype: int
        """
        return self._maximum_window_in_minutes

    @maximum_window_in_minutes.setter
    def maximum_window_in_minutes(self, maximum_window_in_minutes):
        """Sets the maximum_window_in_minutes of this GetScheduleOutputFlexibleTimeWindow.


        :param maximum_window_in_minutes: The maximum_window_in_minutes of this GetScheduleOutputFlexibleTimeWindow.
        :type maximum_window_in_minutes: int
        """

        self._maximum_window_in_minutes = maximum_window_in_minutes

    @property
    def mode(self):
        """Gets the mode of this GetScheduleOutputFlexibleTimeWindow.


        :return: The mode of this GetScheduleOutputFlexibleTimeWindow.
        :rtype: FlexibleTimeWindowMode
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this GetScheduleOutputFlexibleTimeWindow.


        :param mode: The mode of this GetScheduleOutputFlexibleTimeWindow.
        :type mode: FlexibleTimeWindowMode
        """
        if mode is None:
            raise ValueError("Invalid value for `mode`, must not be `None`")

        self._mode = mode
