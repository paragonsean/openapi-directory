# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateScheduleRequestTargetEventBridgeParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detail_type: str=None, source: str=None):
        """UpdateScheduleRequestTargetEventBridgeParameters - a model defined in OpenAPI

        :param detail_type: The detail_type of this UpdateScheduleRequestTargetEventBridgeParameters.
        :param source: The source of this UpdateScheduleRequestTargetEventBridgeParameters.
        """
        self.openapi_types = {
            'detail_type': str,
            'source': str
        }

        self.attribute_map = {
            'detail_type': 'DetailType',
            'source': 'Source'
        }

        self._detail_type = detail_type
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateScheduleRequestTargetEventBridgeParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSchedule_request_Target_EventBridgeParameters of this UpdateScheduleRequestTargetEventBridgeParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detail_type(self):
        """Gets the detail_type of this UpdateScheduleRequestTargetEventBridgeParameters.


        :return: The detail_type of this UpdateScheduleRequestTargetEventBridgeParameters.
        :rtype: str
        """
        return self._detail_type

    @detail_type.setter
    def detail_type(self, detail_type):
        """Sets the detail_type of this UpdateScheduleRequestTargetEventBridgeParameters.


        :param detail_type: The detail_type of this UpdateScheduleRequestTargetEventBridgeParameters.
        :type detail_type: str
        """
        if detail_type is None:
            raise ValueError("Invalid value for `detail_type`, must not be `None`")

        self._detail_type = detail_type

    @property
    def source(self):
        """Gets the source of this UpdateScheduleRequestTargetEventBridgeParameters.


        :return: The source of this UpdateScheduleRequestTargetEventBridgeParameters.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this UpdateScheduleRequestTargetEventBridgeParameters.


        :param source: The source of this UpdateScheduleRequestTargetEventBridgeParameters.
        :type source: str
        """
        if source is None:
            raise ValueError("Invalid value for `source`, must not be `None`")

        self._source = source
