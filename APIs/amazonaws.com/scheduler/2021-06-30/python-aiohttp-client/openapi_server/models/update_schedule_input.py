# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action_after_completion import ActionAfterCompletion
from openapi_server.models.get_schedule_output_flexible_time_window import GetScheduleOutputFlexibleTimeWindow
from openapi_server.models.schedule_state import ScheduleState
from openapi_server.models.update_schedule_input_target import UpdateScheduleInputTarget
from openapi_server import util


class UpdateScheduleInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_after_completion: ActionAfterCompletion=None, client_token: str=None, description: str=None, end_date: datetime=None, flexible_time_window: GetScheduleOutputFlexibleTimeWindow=None, group_name: str=None, kms_key_arn: str=None, schedule_expression: str=None, schedule_expression_timezone: str=None, start_date: datetime=None, state: ScheduleState=None, target: UpdateScheduleInputTarget=None):
        """UpdateScheduleInput - a model defined in OpenAPI

        :param action_after_completion: The action_after_completion of this UpdateScheduleInput.
        :param client_token: The client_token of this UpdateScheduleInput.
        :param description: The description of this UpdateScheduleInput.
        :param end_date: The end_date of this UpdateScheduleInput.
        :param flexible_time_window: The flexible_time_window of this UpdateScheduleInput.
        :param group_name: The group_name of this UpdateScheduleInput.
        :param kms_key_arn: The kms_key_arn of this UpdateScheduleInput.
        :param schedule_expression: The schedule_expression of this UpdateScheduleInput.
        :param schedule_expression_timezone: The schedule_expression_timezone of this UpdateScheduleInput.
        :param start_date: The start_date of this UpdateScheduleInput.
        :param state: The state of this UpdateScheduleInput.
        :param target: The target of this UpdateScheduleInput.
        """
        self.openapi_types = {
            'action_after_completion': ActionAfterCompletion,
            'client_token': str,
            'description': str,
            'end_date': datetime,
            'flexible_time_window': GetScheduleOutputFlexibleTimeWindow,
            'group_name': str,
            'kms_key_arn': str,
            'schedule_expression': str,
            'schedule_expression_timezone': str,
            'start_date': datetime,
            'state': ScheduleState,
            'target': UpdateScheduleInputTarget
        }

        self.attribute_map = {
            'action_after_completion': 'ActionAfterCompletion',
            'client_token': 'ClientToken',
            'description': 'Description',
            'end_date': 'EndDate',
            'flexible_time_window': 'FlexibleTimeWindow',
            'group_name': 'GroupName',
            'kms_key_arn': 'KmsKeyArn',
            'schedule_expression': 'ScheduleExpression',
            'schedule_expression_timezone': 'ScheduleExpressionTimezone',
            'start_date': 'StartDate',
            'state': 'State',
            'target': 'Target'
        }

        self._action_after_completion = action_after_completion
        self._client_token = client_token
        self._description = description
        self._end_date = end_date
        self._flexible_time_window = flexible_time_window
        self._group_name = group_name
        self._kms_key_arn = kms_key_arn
        self._schedule_expression = schedule_expression
        self._schedule_expression_timezone = schedule_expression_timezone
        self._start_date = start_date
        self._state = state
        self._target = target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateScheduleInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateScheduleInput of this UpdateScheduleInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_after_completion(self):
        """Gets the action_after_completion of this UpdateScheduleInput.


        :return: The action_after_completion of this UpdateScheduleInput.
        :rtype: ActionAfterCompletion
        """
        return self._action_after_completion

    @action_after_completion.setter
    def action_after_completion(self, action_after_completion):
        """Sets the action_after_completion of this UpdateScheduleInput.


        :param action_after_completion: The action_after_completion of this UpdateScheduleInput.
        :type action_after_completion: ActionAfterCompletion
        """

        self._action_after_completion = action_after_completion

    @property
    def client_token(self):
        """Gets the client_token of this UpdateScheduleInput.


        :return: The client_token of this UpdateScheduleInput.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this UpdateScheduleInput.


        :param client_token: The client_token of this UpdateScheduleInput.
        :type client_token: str
        """

        self._client_token = client_token

    @property
    def description(self):
        """Gets the description of this UpdateScheduleInput.


        :return: The description of this UpdateScheduleInput.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateScheduleInput.


        :param description: The description of this UpdateScheduleInput.
        :type description: str
        """

        self._description = description

    @property
    def end_date(self):
        """Gets the end_date of this UpdateScheduleInput.


        :return: The end_date of this UpdateScheduleInput.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this UpdateScheduleInput.


        :param end_date: The end_date of this UpdateScheduleInput.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def flexible_time_window(self):
        """Gets the flexible_time_window of this UpdateScheduleInput.


        :return: The flexible_time_window of this UpdateScheduleInput.
        :rtype: GetScheduleOutputFlexibleTimeWindow
        """
        return self._flexible_time_window

    @flexible_time_window.setter
    def flexible_time_window(self, flexible_time_window):
        """Sets the flexible_time_window of this UpdateScheduleInput.


        :param flexible_time_window: The flexible_time_window of this UpdateScheduleInput.
        :type flexible_time_window: GetScheduleOutputFlexibleTimeWindow
        """
        if flexible_time_window is None:
            raise ValueError("Invalid value for `flexible_time_window`, must not be `None`")

        self._flexible_time_window = flexible_time_window

    @property
    def group_name(self):
        """Gets the group_name of this UpdateScheduleInput.


        :return: The group_name of this UpdateScheduleInput.
        :rtype: str
        """
        return self._group_name

    @group_name.setter
    def group_name(self, group_name):
        """Sets the group_name of this UpdateScheduleInput.


        :param group_name: The group_name of this UpdateScheduleInput.
        :type group_name: str
        """

        self._group_name = group_name

    @property
    def kms_key_arn(self):
        """Gets the kms_key_arn of this UpdateScheduleInput.


        :return: The kms_key_arn of this UpdateScheduleInput.
        :rtype: str
        """
        return self._kms_key_arn

    @kms_key_arn.setter
    def kms_key_arn(self, kms_key_arn):
        """Sets the kms_key_arn of this UpdateScheduleInput.


        :param kms_key_arn: The kms_key_arn of this UpdateScheduleInput.
        :type kms_key_arn: str
        """

        self._kms_key_arn = kms_key_arn

    @property
    def schedule_expression(self):
        """Gets the schedule_expression of this UpdateScheduleInput.


        :return: The schedule_expression of this UpdateScheduleInput.
        :rtype: str
        """
        return self._schedule_expression

    @schedule_expression.setter
    def schedule_expression(self, schedule_expression):
        """Sets the schedule_expression of this UpdateScheduleInput.


        :param schedule_expression: The schedule_expression of this UpdateScheduleInput.
        :type schedule_expression: str
        """
        if schedule_expression is None:
            raise ValueError("Invalid value for `schedule_expression`, must not be `None`")

        self._schedule_expression = schedule_expression

    @property
    def schedule_expression_timezone(self):
        """Gets the schedule_expression_timezone of this UpdateScheduleInput.


        :return: The schedule_expression_timezone of this UpdateScheduleInput.
        :rtype: str
        """
        return self._schedule_expression_timezone

    @schedule_expression_timezone.setter
    def schedule_expression_timezone(self, schedule_expression_timezone):
        """Sets the schedule_expression_timezone of this UpdateScheduleInput.


        :param schedule_expression_timezone: The schedule_expression_timezone of this UpdateScheduleInput.
        :type schedule_expression_timezone: str
        """

        self._schedule_expression_timezone = schedule_expression_timezone

    @property
    def start_date(self):
        """Gets the start_date of this UpdateScheduleInput.


        :return: The start_date of this UpdateScheduleInput.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this UpdateScheduleInput.


        :param start_date: The start_date of this UpdateScheduleInput.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def state(self):
        """Gets the state of this UpdateScheduleInput.


        :return: The state of this UpdateScheduleInput.
        :rtype: ScheduleState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this UpdateScheduleInput.


        :param state: The state of this UpdateScheduleInput.
        :type state: ScheduleState
        """

        self._state = state

    @property
    def target(self):
        """Gets the target of this UpdateScheduleInput.


        :return: The target of this UpdateScheduleInput.
        :rtype: UpdateScheduleInputTarget
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this UpdateScheduleInput.


        :param target: The target of this UpdateScheduleInput.
        :type target: UpdateScheduleInputTarget
        """
        if target is None:
            raise ValueError("Invalid value for `target`, must not be `None`")

        self._target = target
