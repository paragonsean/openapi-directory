/*
 * Amazon EventBridge Scheduler
 *  Amazon EventBridge Scheduler is a serverless scheduler that allows you to create, run, and manage tasks from one central, managed service. EventBridge Scheduler delivers your tasks reliably, with built-in mechanisms that adjust your schedules based on the availability of downstream targets. The following reference lists the available API actions, and data types for EventBridge Scheduler. 
 *
 * The version of the OpenAPI document: 2021-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.UpdateScheduleRequestTargetDeadLetterConfig;
import org.openapitools.client.model.UpdateScheduleRequestTargetEcsParameters;
import org.openapitools.client.model.UpdateScheduleRequestTargetEventBridgeParameters;
import org.openapitools.client.model.UpdateScheduleRequestTargetKinesisParameters;
import org.openapitools.client.model.UpdateScheduleRequestTargetRetryPolicy;
import org.openapitools.client.model.UpdateScheduleRequestTargetSageMakerPipelineParameters;
import org.openapitools.client.model.UpdateScheduleRequestTargetSqsParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateScheduleRequestTarget
 */
public class UpdateScheduleRequestTargetTest {
    private final UpdateScheduleRequestTarget model = new UpdateScheduleRequestTarget();

    /**
     * Model tests for UpdateScheduleRequestTarget
     */
    @Test
    public void testUpdateScheduleRequestTarget() {
        // TODO: test UpdateScheduleRequestTarget
    }

    /**
     * Test the property 'arn'
     */
    @Test
    public void arnTest() {
        // TODO: test arn
    }

    /**
     * Test the property 'deadLetterConfig'
     */
    @Test
    public void deadLetterConfigTest() {
        // TODO: test deadLetterConfig
    }

    /**
     * Test the property 'ecsParameters'
     */
    @Test
    public void ecsParametersTest() {
        // TODO: test ecsParameters
    }

    /**
     * Test the property 'eventBridgeParameters'
     */
    @Test
    public void eventBridgeParametersTest() {
        // TODO: test eventBridgeParameters
    }

    /**
     * Test the property 'input'
     */
    @Test
    public void inputTest() {
        // TODO: test input
    }

    /**
     * Test the property 'kinesisParameters'
     */
    @Test
    public void kinesisParametersTest() {
        // TODO: test kinesisParameters
    }

    /**
     * Test the property 'retryPolicy'
     */
    @Test
    public void retryPolicyTest() {
        // TODO: test retryPolicy
    }

    /**
     * Test the property 'roleArn'
     */
    @Test
    public void roleArnTest() {
        // TODO: test roleArn
    }

    /**
     * Test the property 'sageMakerPipelineParameters'
     */
    @Test
    public void sageMakerPipelineParametersTest() {
        // TODO: test sageMakerPipelineParameters
    }

    /**
     * Test the property 'sqsParameters'
     */
    @Test
    public void sqsParametersTest() {
        // TODO: test sqsParameters
    }

}
