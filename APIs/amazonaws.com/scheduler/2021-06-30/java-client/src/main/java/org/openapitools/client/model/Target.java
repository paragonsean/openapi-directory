/*
 * Amazon EventBridge Scheduler
 *  Amazon EventBridge Scheduler is a serverless scheduler that allows you to create, run, and manage tasks from one central, managed service. EventBridge Scheduler delivers your tasks reliably, with built-in mechanisms that adjust your schedules based on the availability of downstream targets. The following reference lists the available API actions, and data types for EventBridge Scheduler. 
 *
 * The version of the OpenAPI document: 2021-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.UpdateScheduleRequestTargetDeadLetterConfig;
import org.openapitools.client.model.UpdateScheduleRequestTargetEcsParameters;
import org.openapitools.client.model.UpdateScheduleRequestTargetEventBridgeParameters;
import org.openapitools.client.model.UpdateScheduleRequestTargetKinesisParameters;
import org.openapitools.client.model.UpdateScheduleRequestTargetRetryPolicy;
import org.openapitools.client.model.UpdateScheduleRequestTargetSageMakerPipelineParameters;
import org.openapitools.client.model.UpdateScheduleRequestTargetSqsParameters;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The schedule&#39;s target. EventBridge Scheduler supports templated target that invoke common API operations, as well as universal targets that you can customize to invoke over 6,000 API operations across more than 270 services. You can only specify one templated or universal target for a schedule.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:23.202326-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Target {
  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_DEAD_LETTER_CONFIG = "DeadLetterConfig";
  @SerializedName(SERIALIZED_NAME_DEAD_LETTER_CONFIG)
  private UpdateScheduleRequestTargetDeadLetterConfig deadLetterConfig;

  public static final String SERIALIZED_NAME_ECS_PARAMETERS = "EcsParameters";
  @SerializedName(SERIALIZED_NAME_ECS_PARAMETERS)
  private UpdateScheduleRequestTargetEcsParameters ecsParameters;

  public static final String SERIALIZED_NAME_EVENT_BRIDGE_PARAMETERS = "EventBridgeParameters";
  @SerializedName(SERIALIZED_NAME_EVENT_BRIDGE_PARAMETERS)
  private UpdateScheduleRequestTargetEventBridgeParameters eventBridgeParameters;

  public static final String SERIALIZED_NAME_INPUT = "Input";
  @SerializedName(SERIALIZED_NAME_INPUT)
  private String input;

  public static final String SERIALIZED_NAME_KINESIS_PARAMETERS = "KinesisParameters";
  @SerializedName(SERIALIZED_NAME_KINESIS_PARAMETERS)
  private UpdateScheduleRequestTargetKinesisParameters kinesisParameters;

  public static final String SERIALIZED_NAME_RETRY_POLICY = "RetryPolicy";
  @SerializedName(SERIALIZED_NAME_RETRY_POLICY)
  private UpdateScheduleRequestTargetRetryPolicy retryPolicy;

  public static final String SERIALIZED_NAME_ROLE_ARN = "RoleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_SAGE_MAKER_PIPELINE_PARAMETERS = "SageMakerPipelineParameters";
  @SerializedName(SERIALIZED_NAME_SAGE_MAKER_PIPELINE_PARAMETERS)
  private UpdateScheduleRequestTargetSageMakerPipelineParameters sageMakerPipelineParameters;

  public static final String SERIALIZED_NAME_SQS_PARAMETERS = "SqsParameters";
  @SerializedName(SERIALIZED_NAME_SQS_PARAMETERS)
  private UpdateScheduleRequestTargetSqsParameters sqsParameters;

  public Target() {
  }

  public Target arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nonnull
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public Target deadLetterConfig(UpdateScheduleRequestTargetDeadLetterConfig deadLetterConfig) {
    this.deadLetterConfig = deadLetterConfig;
    return this;
  }

  /**
   * Get deadLetterConfig
   * @return deadLetterConfig
   */
  @javax.annotation.Nullable
  public UpdateScheduleRequestTargetDeadLetterConfig getDeadLetterConfig() {
    return deadLetterConfig;
  }

  public void setDeadLetterConfig(UpdateScheduleRequestTargetDeadLetterConfig deadLetterConfig) {
    this.deadLetterConfig = deadLetterConfig;
  }


  public Target ecsParameters(UpdateScheduleRequestTargetEcsParameters ecsParameters) {
    this.ecsParameters = ecsParameters;
    return this;
  }

  /**
   * Get ecsParameters
   * @return ecsParameters
   */
  @javax.annotation.Nullable
  public UpdateScheduleRequestTargetEcsParameters getEcsParameters() {
    return ecsParameters;
  }

  public void setEcsParameters(UpdateScheduleRequestTargetEcsParameters ecsParameters) {
    this.ecsParameters = ecsParameters;
  }


  public Target eventBridgeParameters(UpdateScheduleRequestTargetEventBridgeParameters eventBridgeParameters) {
    this.eventBridgeParameters = eventBridgeParameters;
    return this;
  }

  /**
   * Get eventBridgeParameters
   * @return eventBridgeParameters
   */
  @javax.annotation.Nullable
  public UpdateScheduleRequestTargetEventBridgeParameters getEventBridgeParameters() {
    return eventBridgeParameters;
  }

  public void setEventBridgeParameters(UpdateScheduleRequestTargetEventBridgeParameters eventBridgeParameters) {
    this.eventBridgeParameters = eventBridgeParameters;
  }


  public Target input(String input) {
    this.input = input;
    return this;
  }

  /**
   * Get input
   * @return input
   */
  @javax.annotation.Nullable
  public String getInput() {
    return input;
  }

  public void setInput(String input) {
    this.input = input;
  }


  public Target kinesisParameters(UpdateScheduleRequestTargetKinesisParameters kinesisParameters) {
    this.kinesisParameters = kinesisParameters;
    return this;
  }

  /**
   * Get kinesisParameters
   * @return kinesisParameters
   */
  @javax.annotation.Nullable
  public UpdateScheduleRequestTargetKinesisParameters getKinesisParameters() {
    return kinesisParameters;
  }

  public void setKinesisParameters(UpdateScheduleRequestTargetKinesisParameters kinesisParameters) {
    this.kinesisParameters = kinesisParameters;
  }


  public Target retryPolicy(UpdateScheduleRequestTargetRetryPolicy retryPolicy) {
    this.retryPolicy = retryPolicy;
    return this;
  }

  /**
   * Get retryPolicy
   * @return retryPolicy
   */
  @javax.annotation.Nullable
  public UpdateScheduleRequestTargetRetryPolicy getRetryPolicy() {
    return retryPolicy;
  }

  public void setRetryPolicy(UpdateScheduleRequestTargetRetryPolicy retryPolicy) {
    this.retryPolicy = retryPolicy;
  }


  public Target roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nonnull
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public Target sageMakerPipelineParameters(UpdateScheduleRequestTargetSageMakerPipelineParameters sageMakerPipelineParameters) {
    this.sageMakerPipelineParameters = sageMakerPipelineParameters;
    return this;
  }

  /**
   * Get sageMakerPipelineParameters
   * @return sageMakerPipelineParameters
   */
  @javax.annotation.Nullable
  public UpdateScheduleRequestTargetSageMakerPipelineParameters getSageMakerPipelineParameters() {
    return sageMakerPipelineParameters;
  }

  public void setSageMakerPipelineParameters(UpdateScheduleRequestTargetSageMakerPipelineParameters sageMakerPipelineParameters) {
    this.sageMakerPipelineParameters = sageMakerPipelineParameters;
  }


  public Target sqsParameters(UpdateScheduleRequestTargetSqsParameters sqsParameters) {
    this.sqsParameters = sqsParameters;
    return this;
  }

  /**
   * Get sqsParameters
   * @return sqsParameters
   */
  @javax.annotation.Nullable
  public UpdateScheduleRequestTargetSqsParameters getSqsParameters() {
    return sqsParameters;
  }

  public void setSqsParameters(UpdateScheduleRequestTargetSqsParameters sqsParameters) {
    this.sqsParameters = sqsParameters;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Target target = (Target) o;
    return Objects.equals(this.arn, target.arn) &&
        Objects.equals(this.deadLetterConfig, target.deadLetterConfig) &&
        Objects.equals(this.ecsParameters, target.ecsParameters) &&
        Objects.equals(this.eventBridgeParameters, target.eventBridgeParameters) &&
        Objects.equals(this.input, target.input) &&
        Objects.equals(this.kinesisParameters, target.kinesisParameters) &&
        Objects.equals(this.retryPolicy, target.retryPolicy) &&
        Objects.equals(this.roleArn, target.roleArn) &&
        Objects.equals(this.sageMakerPipelineParameters, target.sageMakerPipelineParameters) &&
        Objects.equals(this.sqsParameters, target.sqsParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, deadLetterConfig, ecsParameters, eventBridgeParameters, input, kinesisParameters, retryPolicy, roleArn, sageMakerPipelineParameters, sqsParameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Target {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    deadLetterConfig: ").append(toIndentedString(deadLetterConfig)).append("\n");
    sb.append("    ecsParameters: ").append(toIndentedString(ecsParameters)).append("\n");
    sb.append("    eventBridgeParameters: ").append(toIndentedString(eventBridgeParameters)).append("\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    kinesisParameters: ").append(toIndentedString(kinesisParameters)).append("\n");
    sb.append("    retryPolicy: ").append(toIndentedString(retryPolicy)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    sageMakerPipelineParameters: ").append(toIndentedString(sageMakerPipelineParameters)).append("\n");
    sb.append("    sqsParameters: ").append(toIndentedString(sqsParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Arn");
    openapiFields.add("DeadLetterConfig");
    openapiFields.add("EcsParameters");
    openapiFields.add("EventBridgeParameters");
    openapiFields.add("Input");
    openapiFields.add("KinesisParameters");
    openapiFields.add("RetryPolicy");
    openapiFields.add("RoleArn");
    openapiFields.add("SageMakerPipelineParameters");
    openapiFields.add("SqsParameters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Arn");
    openapiRequiredFields.add("RoleArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Target
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Target.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Target is not found in the empty JSON string", Target.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Target.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Target` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Target.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `Arn`
      String.validateJsonElement(jsonObj.get("Arn"));
      // validate the optional field `DeadLetterConfig`
      if (jsonObj.get("DeadLetterConfig") != null && !jsonObj.get("DeadLetterConfig").isJsonNull()) {
        UpdateScheduleRequestTargetDeadLetterConfig.validateJsonElement(jsonObj.get("DeadLetterConfig"));
      }
      // validate the optional field `EcsParameters`
      if (jsonObj.get("EcsParameters") != null && !jsonObj.get("EcsParameters").isJsonNull()) {
        UpdateScheduleRequestTargetEcsParameters.validateJsonElement(jsonObj.get("EcsParameters"));
      }
      // validate the optional field `EventBridgeParameters`
      if (jsonObj.get("EventBridgeParameters") != null && !jsonObj.get("EventBridgeParameters").isJsonNull()) {
        UpdateScheduleRequestTargetEventBridgeParameters.validateJsonElement(jsonObj.get("EventBridgeParameters"));
      }
      // validate the optional field `Input`
      if (jsonObj.get("Input") != null && !jsonObj.get("Input").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Input"));
      }
      // validate the optional field `KinesisParameters`
      if (jsonObj.get("KinesisParameters") != null && !jsonObj.get("KinesisParameters").isJsonNull()) {
        UpdateScheduleRequestTargetKinesisParameters.validateJsonElement(jsonObj.get("KinesisParameters"));
      }
      // validate the optional field `RetryPolicy`
      if (jsonObj.get("RetryPolicy") != null && !jsonObj.get("RetryPolicy").isJsonNull()) {
        UpdateScheduleRequestTargetRetryPolicy.validateJsonElement(jsonObj.get("RetryPolicy"));
      }
      // validate the required field `RoleArn`
      String.validateJsonElement(jsonObj.get("RoleArn"));
      // validate the optional field `SageMakerPipelineParameters`
      if (jsonObj.get("SageMakerPipelineParameters") != null && !jsonObj.get("SageMakerPipelineParameters").isJsonNull()) {
        UpdateScheduleRequestTargetSageMakerPipelineParameters.validateJsonElement(jsonObj.get("SageMakerPipelineParameters"));
      }
      // validate the optional field `SqsParameters`
      if (jsonObj.get("SqsParameters") != null && !jsonObj.get("SqsParameters").isJsonNull()) {
        UpdateScheduleRequestTargetSqsParameters.validateJsonElement(jsonObj.get("SqsParameters"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Target.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Target' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Target> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Target.class));

       return (TypeAdapter<T>) new TypeAdapter<Target>() {
           @Override
           public void write(JsonWriter out, Target value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Target read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Target given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Target
   * @throws IOException if the JSON string is invalid with respect to Target
   */
  public static Target fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Target.class);
  }

  /**
   * Convert an instance of Target to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

