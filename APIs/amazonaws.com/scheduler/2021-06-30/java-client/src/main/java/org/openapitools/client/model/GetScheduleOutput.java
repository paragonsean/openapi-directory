/*
 * Amazon EventBridge Scheduler
 *  Amazon EventBridge Scheduler is a serverless scheduler that allows you to create, run, and manage tasks from one central, managed service. EventBridge Scheduler delivers your tasks reliably, with built-in mechanisms that adjust your schedules based on the availability of downstream targets. The following reference lists the available API actions, and data types for EventBridge Scheduler. 
 *
 * The version of the OpenAPI document: 2021-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ActionAfterCompletion;
import org.openapitools.client.model.GetScheduleOutputFlexibleTimeWindow;
import org.openapitools.client.model.GetScheduleOutputTarget;
import org.openapitools.client.model.ScheduleState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetScheduleOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:23.202326-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetScheduleOutput {
  public static final String SERIALIZED_NAME_ACTION_AFTER_COMPLETION = "ActionAfterCompletion";
  @SerializedName(SERIALIZED_NAME_ACTION_AFTER_COMPLETION)
  private ActionAfterCompletion actionAfterCompletion;

  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_END_DATE = "EndDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_FLEXIBLE_TIME_WINDOW = "FlexibleTimeWindow";
  @SerializedName(SERIALIZED_NAME_FLEXIBLE_TIME_WINDOW)
  private GetScheduleOutputFlexibleTimeWindow flexibleTimeWindow;

  public static final String SERIALIZED_NAME_GROUP_NAME = "GroupName";
  @SerializedName(SERIALIZED_NAME_GROUP_NAME)
  private String groupName;

  public static final String SERIALIZED_NAME_KMS_KEY_ARN = "KmsKeyArn";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ARN)
  private String kmsKeyArn;

  public static final String SERIALIZED_NAME_LAST_MODIFICATION_DATE = "LastModificationDate";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFICATION_DATE)
  private OffsetDateTime lastModificationDate;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SCHEDULE_EXPRESSION = "ScheduleExpression";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_EXPRESSION)
  private String scheduleExpression;

  public static final String SERIALIZED_NAME_SCHEDULE_EXPRESSION_TIMEZONE = "ScheduleExpressionTimezone";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_EXPRESSION_TIMEZONE)
  private String scheduleExpressionTimezone;

  public static final String SERIALIZED_NAME_START_DATE = "StartDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private ScheduleState state;

  public static final String SERIALIZED_NAME_TARGET = "Target";
  @SerializedName(SERIALIZED_NAME_TARGET)
  private GetScheduleOutputTarget target;

  public GetScheduleOutput() {
  }

  public GetScheduleOutput actionAfterCompletion(ActionAfterCompletion actionAfterCompletion) {
    this.actionAfterCompletion = actionAfterCompletion;
    return this;
  }

  /**
   * Get actionAfterCompletion
   * @return actionAfterCompletion
   */
  @javax.annotation.Nullable
  public ActionAfterCompletion getActionAfterCompletion() {
    return actionAfterCompletion;
  }

  public void setActionAfterCompletion(ActionAfterCompletion actionAfterCompletion) {
    this.actionAfterCompletion = actionAfterCompletion;
  }


  public GetScheduleOutput arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public GetScheduleOutput creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public GetScheduleOutput description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GetScheduleOutput endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Get endDate
   * @return endDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public GetScheduleOutput flexibleTimeWindow(GetScheduleOutputFlexibleTimeWindow flexibleTimeWindow) {
    this.flexibleTimeWindow = flexibleTimeWindow;
    return this;
  }

  /**
   * Get flexibleTimeWindow
   * @return flexibleTimeWindow
   */
  @javax.annotation.Nullable
  public GetScheduleOutputFlexibleTimeWindow getFlexibleTimeWindow() {
    return flexibleTimeWindow;
  }

  public void setFlexibleTimeWindow(GetScheduleOutputFlexibleTimeWindow flexibleTimeWindow) {
    this.flexibleTimeWindow = flexibleTimeWindow;
  }


  public GetScheduleOutput groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

  /**
   * Get groupName
   * @return groupName
   */
  @javax.annotation.Nullable
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }


  public GetScheduleOutput kmsKeyArn(String kmsKeyArn) {
    this.kmsKeyArn = kmsKeyArn;
    return this;
  }

  /**
   * Get kmsKeyArn
   * @return kmsKeyArn
   */
  @javax.annotation.Nullable
  public String getKmsKeyArn() {
    return kmsKeyArn;
  }

  public void setKmsKeyArn(String kmsKeyArn) {
    this.kmsKeyArn = kmsKeyArn;
  }


  public GetScheduleOutput lastModificationDate(OffsetDateTime lastModificationDate) {
    this.lastModificationDate = lastModificationDate;
    return this;
  }

  /**
   * Get lastModificationDate
   * @return lastModificationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModificationDate() {
    return lastModificationDate;
  }

  public void setLastModificationDate(OffsetDateTime lastModificationDate) {
    this.lastModificationDate = lastModificationDate;
  }


  public GetScheduleOutput name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetScheduleOutput scheduleExpression(String scheduleExpression) {
    this.scheduleExpression = scheduleExpression;
    return this;
  }

  /**
   * Get scheduleExpression
   * @return scheduleExpression
   */
  @javax.annotation.Nullable
  public String getScheduleExpression() {
    return scheduleExpression;
  }

  public void setScheduleExpression(String scheduleExpression) {
    this.scheduleExpression = scheduleExpression;
  }


  public GetScheduleOutput scheduleExpressionTimezone(String scheduleExpressionTimezone) {
    this.scheduleExpressionTimezone = scheduleExpressionTimezone;
    return this;
  }

  /**
   * Get scheduleExpressionTimezone
   * @return scheduleExpressionTimezone
   */
  @javax.annotation.Nullable
  public String getScheduleExpressionTimezone() {
    return scheduleExpressionTimezone;
  }

  public void setScheduleExpressionTimezone(String scheduleExpressionTimezone) {
    this.scheduleExpressionTimezone = scheduleExpressionTimezone;
  }


  public GetScheduleOutput startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public GetScheduleOutput state(ScheduleState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public ScheduleState getState() {
    return state;
  }

  public void setState(ScheduleState state) {
    this.state = state;
  }


  public GetScheduleOutput target(GetScheduleOutputTarget target) {
    this.target = target;
    return this;
  }

  /**
   * Get target
   * @return target
   */
  @javax.annotation.Nullable
  public GetScheduleOutputTarget getTarget() {
    return target;
  }

  public void setTarget(GetScheduleOutputTarget target) {
    this.target = target;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetScheduleOutput getScheduleOutput = (GetScheduleOutput) o;
    return Objects.equals(this.actionAfterCompletion, getScheduleOutput.actionAfterCompletion) &&
        Objects.equals(this.arn, getScheduleOutput.arn) &&
        Objects.equals(this.creationDate, getScheduleOutput.creationDate) &&
        Objects.equals(this.description, getScheduleOutput.description) &&
        Objects.equals(this.endDate, getScheduleOutput.endDate) &&
        Objects.equals(this.flexibleTimeWindow, getScheduleOutput.flexibleTimeWindow) &&
        Objects.equals(this.groupName, getScheduleOutput.groupName) &&
        Objects.equals(this.kmsKeyArn, getScheduleOutput.kmsKeyArn) &&
        Objects.equals(this.lastModificationDate, getScheduleOutput.lastModificationDate) &&
        Objects.equals(this.name, getScheduleOutput.name) &&
        Objects.equals(this.scheduleExpression, getScheduleOutput.scheduleExpression) &&
        Objects.equals(this.scheduleExpressionTimezone, getScheduleOutput.scheduleExpressionTimezone) &&
        Objects.equals(this.startDate, getScheduleOutput.startDate) &&
        Objects.equals(this.state, getScheduleOutput.state) &&
        Objects.equals(this.target, getScheduleOutput.target);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionAfterCompletion, arn, creationDate, description, endDate, flexibleTimeWindow, groupName, kmsKeyArn, lastModificationDate, name, scheduleExpression, scheduleExpressionTimezone, startDate, state, target);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetScheduleOutput {\n");
    sb.append("    actionAfterCompletion: ").append(toIndentedString(actionAfterCompletion)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    flexibleTimeWindow: ").append(toIndentedString(flexibleTimeWindow)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    kmsKeyArn: ").append(toIndentedString(kmsKeyArn)).append("\n");
    sb.append("    lastModificationDate: ").append(toIndentedString(lastModificationDate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    scheduleExpression: ").append(toIndentedString(scheduleExpression)).append("\n");
    sb.append("    scheduleExpressionTimezone: ").append(toIndentedString(scheduleExpressionTimezone)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ActionAfterCompletion");
    openapiFields.add("Arn");
    openapiFields.add("CreationDate");
    openapiFields.add("Description");
    openapiFields.add("EndDate");
    openapiFields.add("FlexibleTimeWindow");
    openapiFields.add("GroupName");
    openapiFields.add("KmsKeyArn");
    openapiFields.add("LastModificationDate");
    openapiFields.add("Name");
    openapiFields.add("ScheduleExpression");
    openapiFields.add("ScheduleExpressionTimezone");
    openapiFields.add("StartDate");
    openapiFields.add("State");
    openapiFields.add("Target");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetScheduleOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetScheduleOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetScheduleOutput is not found in the empty JSON string", GetScheduleOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetScheduleOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetScheduleOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ActionAfterCompletion`
      if (jsonObj.get("ActionAfterCompletion") != null && !jsonObj.get("ActionAfterCompletion").isJsonNull()) {
        ActionAfterCompletion.validateJsonElement(jsonObj.get("ActionAfterCompletion"));
      }
      // validate the optional field `Arn`
      if (jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arn"));
      }
      // validate the optional field `CreationDate`
      if (jsonObj.get("CreationDate") != null && !jsonObj.get("CreationDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationDate"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `EndDate`
      if (jsonObj.get("EndDate") != null && !jsonObj.get("EndDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndDate"));
      }
      // validate the optional field `FlexibleTimeWindow`
      if (jsonObj.get("FlexibleTimeWindow") != null && !jsonObj.get("FlexibleTimeWindow").isJsonNull()) {
        GetScheduleOutputFlexibleTimeWindow.validateJsonElement(jsonObj.get("FlexibleTimeWindow"));
      }
      // validate the optional field `GroupName`
      if (jsonObj.get("GroupName") != null && !jsonObj.get("GroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GroupName"));
      }
      // validate the optional field `KmsKeyArn`
      if (jsonObj.get("KmsKeyArn") != null && !jsonObj.get("KmsKeyArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyArn"));
      }
      // validate the optional field `LastModificationDate`
      if (jsonObj.get("LastModificationDate") != null && !jsonObj.get("LastModificationDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModificationDate"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `ScheduleExpression`
      if (jsonObj.get("ScheduleExpression") != null && !jsonObj.get("ScheduleExpression").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ScheduleExpression"));
      }
      // validate the optional field `ScheduleExpressionTimezone`
      if (jsonObj.get("ScheduleExpressionTimezone") != null && !jsonObj.get("ScheduleExpressionTimezone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ScheduleExpressionTimezone"));
      }
      // validate the optional field `StartDate`
      if (jsonObj.get("StartDate") != null && !jsonObj.get("StartDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartDate"));
      }
      // validate the optional field `State`
      if (jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) {
        ScheduleState.validateJsonElement(jsonObj.get("State"));
      }
      // validate the optional field `Target`
      if (jsonObj.get("Target") != null && !jsonObj.get("Target").isJsonNull()) {
        GetScheduleOutputTarget.validateJsonElement(jsonObj.get("Target"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetScheduleOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetScheduleOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetScheduleOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetScheduleOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<GetScheduleOutput>() {
           @Override
           public void write(JsonWriter out, GetScheduleOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetScheduleOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetScheduleOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetScheduleOutput
   * @throws IOException if the JSON string is invalid with respect to GetScheduleOutput
   */
  public static GetScheduleOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetScheduleOutput.class);
  }

  /**
   * Convert an instance of GetScheduleOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

