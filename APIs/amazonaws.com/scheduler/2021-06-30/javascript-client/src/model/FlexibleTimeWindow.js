/**
 * Amazon EventBridge Scheduler
 *  Amazon EventBridge Scheduler is a serverless scheduler that allows you to create, run, and manage tasks from one central, managed service. EventBridge Scheduler delivers your tasks reliably, with built-in mechanisms that adjust your schedules based on the availability of downstream targets. The following reference lists the available API actions, and data types for EventBridge Scheduler. 
 *
 * The version of the OpenAPI document: 2021-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FlexibleTimeWindowMode from './FlexibleTimeWindowMode';

/**
 * The FlexibleTimeWindow model module.
 * @module model/FlexibleTimeWindow
 * @version 2021-06-30
 */
class FlexibleTimeWindow {
    /**
     * Constructs a new <code>FlexibleTimeWindow</code>.
     * Allows you to configure a time window during which EventBridge Scheduler invokes the schedule.
     * @alias module:model/FlexibleTimeWindow
     * @param mode {module:model/FlexibleTimeWindowMode} 
     */
    constructor(mode) { 
        
        FlexibleTimeWindow.initialize(this, mode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, mode) { 
        obj['Mode'] = mode;
    }

    /**
     * Constructs a <code>FlexibleTimeWindow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FlexibleTimeWindow} obj Optional instance to populate.
     * @return {module:model/FlexibleTimeWindow} The populated <code>FlexibleTimeWindow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FlexibleTimeWindow();

            if (data.hasOwnProperty('MaximumWindowInMinutes')) {
                obj['MaximumWindowInMinutes'] = ApiClient.convertToType(data['MaximumWindowInMinutes'], 'Number');
            }
            if (data.hasOwnProperty('Mode')) {
                obj['Mode'] = ApiClient.convertToType(data['Mode'], FlexibleTimeWindowMode);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FlexibleTimeWindow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FlexibleTimeWindow</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FlexibleTimeWindow.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `MaximumWindowInMinutes`
        if (data['MaximumWindowInMinutes']) { // data not null
          Number.validateJSON(data['MaximumWindowInMinutes']);
        }
        // validate the optional field `Mode`
        if (data['Mode']) { // data not null
          FlexibleTimeWindowMode.validateJSON(data['Mode']);
        }

        return true;
    }


}

FlexibleTimeWindow.RequiredProperties = ["Mode"];

/**
 * @member {Number} MaximumWindowInMinutes
 */
FlexibleTimeWindow.prototype['MaximumWindowInMinutes'] = undefined;

/**
 * @member {module:model/FlexibleTimeWindowMode} Mode
 */
FlexibleTimeWindow.prototype['Mode'] = undefined;






export default FlexibleTimeWindow;

