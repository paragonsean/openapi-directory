# coding: utf-8

import sys
from setuptools import setup, find_packages

NAME = "openapi_server"
VERSION = "1.0.0"

# To install the library, run the following
#
# python setup.py install
#
# prerequisite: setuptools
# http://pypi.python.org/pypi/setuptools

REQUIRES = [
    "connexion==2.14.1",
    "swagger-ui-bundle==0.0.9",
    "aiohttp_jinja2==1.5.0",
]

setup(
    name=NAME,
    version=VERSION,
    description="AWS CodeCommit",
    author_email="mike.ralphson@gmail.com",
    url="",
    keywords=["OpenAPI", "AWS CodeCommit"],
    install_requires=REQUIRES,
    packages=find_packages(),
    package_data={'': ['openapi/openapi.yaml']},
    include_package_data=True,
    entry_points={
        'console_scripts': ['openapi_server=openapi_server.__main__:main']},
    long_description="""\
    &lt;fullname&gt;AWS CodeCommit&lt;/fullname&gt; &lt;p&gt;This is the &lt;i&gt;AWS CodeCommit API Reference&lt;/i&gt;. This reference provides descriptions of the operations and data types for AWS CodeCommit API along with usage examples.&lt;/p&gt; &lt;p&gt;You can use the AWS CodeCommit API to work with the following objects:&lt;/p&gt; &lt;p&gt;Repositories, by calling the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;BatchGetRepositories&lt;/a&gt;, which returns information about one or more repositories associated with your AWS account.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateRepository&lt;/a&gt;, which creates an AWS CodeCommit repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DeleteRepository&lt;/a&gt;, which deletes an AWS CodeCommit repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetRepository&lt;/a&gt;, which returns information about a specified repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListRepositories&lt;/a&gt;, which lists all AWS CodeCommit repositories associated with your AWS account.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UpdateRepositoryDescription&lt;/a&gt;, which sets or updates the description of the repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UpdateRepositoryName&lt;/a&gt;, which changes the name of the repository. If you change the name of a repository, no other users of that repository can access it until you send them the new HTTPS or SSH URL to use.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Branches, by calling the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateBranch&lt;/a&gt;, which creates a branch in a specified repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DeleteBranch&lt;/a&gt;, which deletes the specified branch in a repository unless it is the default branch.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetBranch&lt;/a&gt;, which returns information about a specified branch.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListBranches&lt;/a&gt;, which lists all branches for a specified repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UpdateDefaultBranch&lt;/a&gt;, which changes the default branch for a repository.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Files, by calling the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DeleteFile&lt;/a&gt;, which deletes the content of a specified file from a specified branch.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetBlob&lt;/a&gt;, which returns the base-64 encoded content of an individual Git blob object in a repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetFile&lt;/a&gt;, which returns the base-64 encoded content of a specified file.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetFolder&lt;/a&gt;, which returns the contents of a specified folder or directory.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;PutFile&lt;/a&gt;, which adds or modifies a single file in a specified repository and branch.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Commits, by calling the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;BatchGetCommits&lt;/a&gt;, which returns information about one or more commits in a repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateCommit&lt;/a&gt;, which creates a commit for changes to a repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetCommit&lt;/a&gt;, which returns information about a commit, including commit messages and author and committer information.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetDifferences&lt;/a&gt;, which returns information about the differences in a valid commit specifier (such as a branch, tag, HEAD, commit ID, or other fully qualified reference).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Merges, by calling the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;BatchDescribeMergeConflicts&lt;/a&gt;, which returns information about conflicts in a merge between commits in a repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateUnreferencedMergeCommit&lt;/a&gt;, which creates an unreferenced commit between two branches or commits for the purpose of comparing them and identifying any potential conflicts.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DescribeMergeConflicts&lt;/a&gt;, which returns information about merge conflicts between the base, source, and destination versions of a file in a potential merge.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetMergeCommit&lt;/a&gt;, which returns information about the merge between a source and destination commit. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetMergeConflicts&lt;/a&gt;, which returns information about merge conflicts between the source and destination branch in a pull request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetMergeOptions&lt;/a&gt;, which returns information about the available merge options between two branches or commit specifiers.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;MergeBranchesByFastForward&lt;/a&gt;, which merges two branches using the fast-forward merge option.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;MergeBranchesBySquash&lt;/a&gt;, which merges two branches using the squash merge option.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;MergeBranchesByThreeWay&lt;/a&gt;, which merges two branches using the three-way merge option.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Pull requests, by calling the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreatePullRequest&lt;/a&gt;, which creates a pull request in a specified repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreatePullRequestApprovalRule&lt;/a&gt;, which creates an approval rule for a specified pull request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DeletePullRequestApprovalRule&lt;/a&gt;, which deletes an approval rule for a specified pull request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DescribePullRequestEvents&lt;/a&gt;, which returns information about one or more pull request events.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;EvaluatePullRequestApprovalRules&lt;/a&gt;, which evaluates whether a pull request has met all the conditions specified in its associated approval rules.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetCommentsForPullRequest&lt;/a&gt;, which returns information about comments on a specified pull request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetPullRequest&lt;/a&gt;, which returns information about a specified pull request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetPullRequestApprovalStates&lt;/a&gt;, which returns information about the approval states for a specified pull request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetPullRequestOverrideState&lt;/a&gt;, which returns information about whether approval rules have been set aside (overriden) for a pull request, and if so, the Amazon Resource Name (ARN) of the user or identity that overrode the rules and their requirements for the pull request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListPullRequests&lt;/a&gt;, which lists all pull requests for a repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;MergePullRequestByFastForward&lt;/a&gt;, which merges the source destination branch of a pull request into the specified destination branch for that pull request using the fast-forward merge option.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;MergePullRequestBySquash&lt;/a&gt;, which merges the source destination branch of a pull request into the specified destination branch for that pull request using the squash merge option.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;MergePullRequestByThreeWay&lt;/a&gt;. which merges the source destination branch of a pull request into the specified destination branch for that pull request using the three-way merge option.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;OverridePullRequestApprovalRules&lt;/a&gt;, which sets aside all approval rule requirements for a pull request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;PostCommentForPullRequest&lt;/a&gt;, which posts a comment to a pull request at the specified line, file, or request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UpdatePullRequestApprovalRuleContent&lt;/a&gt;, which updates the structure of an approval rule for a pull request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UpdatePullRequestApprovalState&lt;/a&gt;, which updates the state of an approval on a pull request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UpdatePullRequestDescription&lt;/a&gt;, which updates the description of a pull request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UpdatePullRequestStatus&lt;/a&gt;, which updates the status of a pull request.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UpdatePullRequestTitle&lt;/a&gt;, which updates the title of a pull request.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Approval rule templates, by calling the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;AssociateApprovalRuleTemplateWithRepository&lt;/a&gt;, which associates a template with a specified repository. After the template is associated with a repository, AWS CodeCommit creates approval rules that match the template conditions on every pull request created in the specified repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;BatchAssociateApprovalRuleTemplateWithRepositories&lt;/a&gt;, which associates a template with one or more specified repositories. After the template is associated with a repository, AWS CodeCommit creates approval rules that match the template conditions on every pull request created in the specified repositories.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;BatchDisassociateApprovalRuleTemplateFromRepositories&lt;/a&gt;, which removes the association between a template and specified repositories so that approval rules based on the template are not automatically created when pull requests are created in those repositories.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateApprovalRuleTemplate&lt;/a&gt;, which creates a template for approval rules that can then be associated with one or more repositories in your AWS account.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DeleteApprovalRuleTemplate&lt;/a&gt;, which deletes the specified template. It does not remove approval rules on pull requests already created with the template.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DisassociateApprovalRuleTemplateFromRepository&lt;/a&gt;, which removes the association between a template and a repository so that approval rules based on the template are not automatically created when pull requests are created in the specified repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetApprovalRuleTemplate&lt;/a&gt;, which returns information about an approval rule template.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListApprovalRuleTemplates&lt;/a&gt;, which lists all approval rule templates in the AWS Region in your AWS account.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListAssociatedApprovalRuleTemplatesForRepository&lt;/a&gt;, which lists all approval rule templates that are associated with a specified repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListRepositoriesForApprovalRuleTemplate&lt;/a&gt;, which lists all repositories associated with the specified approval rule template.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UpdateApprovalRuleTemplateDescription&lt;/a&gt;, which updates the description of an approval rule template.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UpdateApprovalRuleTemplateName&lt;/a&gt;, which updates the name of an approval rule template.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UpdateApprovalRuleTemplateContent&lt;/a&gt;, which updates the content of an approval rule template.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Comments in a repository, by calling the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;DeleteCommentContent&lt;/a&gt;, which deletes the content of a comment on a commit in a repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetComment&lt;/a&gt;, which returns information about a comment on a commit.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetCommentReactions&lt;/a&gt;, which returns information about emoji reactions to comments.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetCommentsForComparedCommit&lt;/a&gt;, which returns information about comments on the comparison between two commit specifiers in a repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;PostCommentForComparedCommit&lt;/a&gt;, which creates a comment on the comparison between two commit specifiers in a repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;PostCommentReply&lt;/a&gt;, which creates a reply to a comment.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;PutCommentReaction&lt;/a&gt;, which creates or updates an emoji reaction to a comment.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UpdateComment&lt;/a&gt;, which updates the content of a comment on a commit in a repository.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Tags used to tag resources in AWS CodeCommit (not Git tags), by calling the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ListTagsForResource&lt;/a&gt;, which gets information about AWS tags for a specified Amazon Resource Name (ARN) in AWS CodeCommit.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;TagResource&lt;/a&gt;, which adds or updates tags for a resource in AWS CodeCommit.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;UntagResource&lt;/a&gt;, which removes tags for a resource in AWS CodeCommit.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Triggers, by calling the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;GetRepositoryTriggers&lt;/a&gt;, which returns information about triggers configured for a repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;PutRepositoryTriggers&lt;/a&gt;, which replaces all triggers for a repository and can be used to create or delete triggers.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;TestRepositoryTriggers&lt;/a&gt;, which tests the functionality of a repository trigger by sending data to the trigger target.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For information about how to use AWS CodeCommit, see the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html\&quot;&gt;AWS CodeCommit User Guide&lt;/a&gt;.&lt;/p&gt;
    """
)

