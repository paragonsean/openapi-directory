# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_pull_request_approval_rule_content_output_approval_rule import UpdatePullRequestApprovalRuleContentOutputApprovalRule
from openapi_server import util


class UpdatePullRequestApprovalRuleContentOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approval_rule: UpdatePullRequestApprovalRuleContentOutputApprovalRule=None):
        """UpdatePullRequestApprovalRuleContentOutput - a model defined in OpenAPI

        :param approval_rule: The approval_rule of this UpdatePullRequestApprovalRuleContentOutput.
        """
        self.openapi_types = {
            'approval_rule': UpdatePullRequestApprovalRuleContentOutputApprovalRule
        }

        self.attribute_map = {
            'approval_rule': 'approvalRule'
        }

        self._approval_rule = approval_rule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdatePullRequestApprovalRuleContentOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdatePullRequestApprovalRuleContentOutput of this UpdatePullRequestApprovalRuleContentOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approval_rule(self):
        """Gets the approval_rule of this UpdatePullRequestApprovalRuleContentOutput.


        :return: The approval_rule of this UpdatePullRequestApprovalRuleContentOutput.
        :rtype: UpdatePullRequestApprovalRuleContentOutputApprovalRule
        """
        return self._approval_rule

    @approval_rule.setter
    def approval_rule(self, approval_rule):
        """Sets the approval_rule of this UpdatePullRequestApprovalRuleContentOutput.


        :param approval_rule: The approval_rule of this UpdatePullRequestApprovalRuleContentOutput.
        :type approval_rule: UpdatePullRequestApprovalRuleContentOutputApprovalRule
        """
        if approval_rule is None:
            raise ValueError("Invalid value for `approval_rule`, must not be `None`")

        self._approval_rule = approval_rule
