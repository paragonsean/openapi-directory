# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RepositoryTriggerExecutionFailure(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, trigger: str=None, failure_message: str=None):
        """RepositoryTriggerExecutionFailure - a model defined in OpenAPI

        :param trigger: The trigger of this RepositoryTriggerExecutionFailure.
        :param failure_message: The failure_message of this RepositoryTriggerExecutionFailure.
        """
        self.openapi_types = {
            'trigger': str,
            'failure_message': str
        }

        self.attribute_map = {
            'trigger': 'trigger',
            'failure_message': 'failureMessage'
        }

        self._trigger = trigger
        self._failure_message = failure_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RepositoryTriggerExecutionFailure':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RepositoryTriggerExecutionFailure of this RepositoryTriggerExecutionFailure.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def trigger(self):
        """Gets the trigger of this RepositoryTriggerExecutionFailure.


        :return: The trigger of this RepositoryTriggerExecutionFailure.
        :rtype: str
        """
        return self._trigger

    @trigger.setter
    def trigger(self, trigger):
        """Sets the trigger of this RepositoryTriggerExecutionFailure.


        :param trigger: The trigger of this RepositoryTriggerExecutionFailure.
        :type trigger: str
        """

        self._trigger = trigger

    @property
    def failure_message(self):
        """Gets the failure_message of this RepositoryTriggerExecutionFailure.


        :return: The failure_message of this RepositoryTriggerExecutionFailure.
        :rtype: str
        """
        return self._failure_message

    @failure_message.setter
    def failure_message(self, failure_message):
        """Sets the failure_message of this RepositoryTriggerExecutionFailure.


        :param failure_message: The failure_message of this RepositoryTriggerExecutionFailure.
        :type failure_message: str
        """

        self._failure_message = failure_message
