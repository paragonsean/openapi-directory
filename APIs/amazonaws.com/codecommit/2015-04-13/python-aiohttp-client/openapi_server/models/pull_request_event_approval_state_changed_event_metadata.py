# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.approval_state import ApprovalState
from openapi_server import util


class PullRequestEventApprovalStateChangedEventMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, revision_id: str=None, approval_status: ApprovalState=None):
        """PullRequestEventApprovalStateChangedEventMetadata - a model defined in OpenAPI

        :param revision_id: The revision_id of this PullRequestEventApprovalStateChangedEventMetadata.
        :param approval_status: The approval_status of this PullRequestEventApprovalStateChangedEventMetadata.
        """
        self.openapi_types = {
            'revision_id': str,
            'approval_status': ApprovalState
        }

        self.attribute_map = {
            'revision_id': 'revisionId',
            'approval_status': 'approvalStatus'
        }

        self._revision_id = revision_id
        self._approval_status = approval_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PullRequestEventApprovalStateChangedEventMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PullRequestEvent_approvalStateChangedEventMetadata of this PullRequestEventApprovalStateChangedEventMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def revision_id(self):
        """Gets the revision_id of this PullRequestEventApprovalStateChangedEventMetadata.


        :return: The revision_id of this PullRequestEventApprovalStateChangedEventMetadata.
        :rtype: str
        """
        return self._revision_id

    @revision_id.setter
    def revision_id(self, revision_id):
        """Sets the revision_id of this PullRequestEventApprovalStateChangedEventMetadata.


        :param revision_id: The revision_id of this PullRequestEventApprovalStateChangedEventMetadata.
        :type revision_id: str
        """

        self._revision_id = revision_id

    @property
    def approval_status(self):
        """Gets the approval_status of this PullRequestEventApprovalStateChangedEventMetadata.


        :return: The approval_status of this PullRequestEventApprovalStateChangedEventMetadata.
        :rtype: ApprovalState
        """
        return self._approval_status

    @approval_status.setter
    def approval_status(self, approval_status):
        """Sets the approval_status of this PullRequestEventApprovalStateChangedEventMetadata.


        :param approval_status: The approval_status of this PullRequestEventApprovalStateChangedEventMetadata.
        :type approval_status: ApprovalState
        """

        self._approval_status = approval_status
