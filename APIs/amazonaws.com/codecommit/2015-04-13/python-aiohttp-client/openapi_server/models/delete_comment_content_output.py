# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delete_comment_content_output_comment import DeleteCommentContentOutputComment
from openapi_server import util


class DeleteCommentContentOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment: DeleteCommentContentOutputComment=None):
        """DeleteCommentContentOutput - a model defined in OpenAPI

        :param comment: The comment of this DeleteCommentContentOutput.
        """
        self.openapi_types = {
            'comment': DeleteCommentContentOutputComment
        }

        self.attribute_map = {
            'comment': 'comment'
        }

        self._comment = comment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteCommentContentOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteCommentContentOutput of this DeleteCommentContentOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment(self):
        """Gets the comment of this DeleteCommentContentOutput.


        :return: The comment of this DeleteCommentContentOutput.
        :rtype: DeleteCommentContentOutputComment
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this DeleteCommentContentOutput.


        :param comment: The comment of this DeleteCommentContentOutput.
        :type comment: DeleteCommentContentOutputComment
        """

        self._comment = comment
