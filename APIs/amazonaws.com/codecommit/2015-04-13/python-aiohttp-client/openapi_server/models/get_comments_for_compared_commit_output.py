# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCommentsForComparedCommitOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comments_for_compared_commit_data: List=None, next_token: str=None):
        """GetCommentsForComparedCommitOutput - a model defined in OpenAPI

        :param comments_for_compared_commit_data: The comments_for_compared_commit_data of this GetCommentsForComparedCommitOutput.
        :param next_token: The next_token of this GetCommentsForComparedCommitOutput.
        """
        self.openapi_types = {
            'comments_for_compared_commit_data': List,
            'next_token': str
        }

        self.attribute_map = {
            'comments_for_compared_commit_data': 'commentsForComparedCommitData',
            'next_token': 'nextToken'
        }

        self._comments_for_compared_commit_data = comments_for_compared_commit_data
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCommentsForComparedCommitOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetCommentsForComparedCommitOutput of this GetCommentsForComparedCommitOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comments_for_compared_commit_data(self):
        """Gets the comments_for_compared_commit_data of this GetCommentsForComparedCommitOutput.


        :return: The comments_for_compared_commit_data of this GetCommentsForComparedCommitOutput.
        :rtype: List
        """
        return self._comments_for_compared_commit_data

    @comments_for_compared_commit_data.setter
    def comments_for_compared_commit_data(self, comments_for_compared_commit_data):
        """Sets the comments_for_compared_commit_data of this GetCommentsForComparedCommitOutput.


        :param comments_for_compared_commit_data: The comments_for_compared_commit_data of this GetCommentsForComparedCommitOutput.
        :type comments_for_compared_commit_data: List
        """

        self._comments_for_compared_commit_data = comments_for_compared_commit_data

    @property
    def next_token(self):
        """Gets the next_token of this GetCommentsForComparedCommitOutput.


        :return: The next_token of this GetCommentsForComparedCommitOutput.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this GetCommentsForComparedCommitOutput.


        :param next_token: The next_token of this GetCommentsForComparedCommitOutput.
        :type next_token: str
        """

        self._next_token = next_token
