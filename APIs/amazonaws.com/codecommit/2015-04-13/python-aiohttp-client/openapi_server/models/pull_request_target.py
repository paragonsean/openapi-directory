# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pull_request_target_merge_metadata import PullRequestTargetMergeMetadata
from openapi_server import util


class PullRequestTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, repository_name: str=None, source_reference: str=None, destination_reference: str=None, destination_commit: str=None, source_commit: str=None, merge_base: str=None, merge_metadata: PullRequestTargetMergeMetadata=None):
        """PullRequestTarget - a model defined in OpenAPI

        :param repository_name: The repository_name of this PullRequestTarget.
        :param source_reference: The source_reference of this PullRequestTarget.
        :param destination_reference: The destination_reference of this PullRequestTarget.
        :param destination_commit: The destination_commit of this PullRequestTarget.
        :param source_commit: The source_commit of this PullRequestTarget.
        :param merge_base: The merge_base of this PullRequestTarget.
        :param merge_metadata: The merge_metadata of this PullRequestTarget.
        """
        self.openapi_types = {
            'repository_name': str,
            'source_reference': str,
            'destination_reference': str,
            'destination_commit': str,
            'source_commit': str,
            'merge_base': str,
            'merge_metadata': PullRequestTargetMergeMetadata
        }

        self.attribute_map = {
            'repository_name': 'repositoryName',
            'source_reference': 'sourceReference',
            'destination_reference': 'destinationReference',
            'destination_commit': 'destinationCommit',
            'source_commit': 'sourceCommit',
            'merge_base': 'mergeBase',
            'merge_metadata': 'mergeMetadata'
        }

        self._repository_name = repository_name
        self._source_reference = source_reference
        self._destination_reference = destination_reference
        self._destination_commit = destination_commit
        self._source_commit = source_commit
        self._merge_base = merge_base
        self._merge_metadata = merge_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PullRequestTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PullRequestTarget of this PullRequestTarget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def repository_name(self):
        """Gets the repository_name of this PullRequestTarget.


        :return: The repository_name of this PullRequestTarget.
        :rtype: str
        """
        return self._repository_name

    @repository_name.setter
    def repository_name(self, repository_name):
        """Sets the repository_name of this PullRequestTarget.


        :param repository_name: The repository_name of this PullRequestTarget.
        :type repository_name: str
        """

        self._repository_name = repository_name

    @property
    def source_reference(self):
        """Gets the source_reference of this PullRequestTarget.


        :return: The source_reference of this PullRequestTarget.
        :rtype: str
        """
        return self._source_reference

    @source_reference.setter
    def source_reference(self, source_reference):
        """Sets the source_reference of this PullRequestTarget.


        :param source_reference: The source_reference of this PullRequestTarget.
        :type source_reference: str
        """

        self._source_reference = source_reference

    @property
    def destination_reference(self):
        """Gets the destination_reference of this PullRequestTarget.


        :return: The destination_reference of this PullRequestTarget.
        :rtype: str
        """
        return self._destination_reference

    @destination_reference.setter
    def destination_reference(self, destination_reference):
        """Sets the destination_reference of this PullRequestTarget.


        :param destination_reference: The destination_reference of this PullRequestTarget.
        :type destination_reference: str
        """

        self._destination_reference = destination_reference

    @property
    def destination_commit(self):
        """Gets the destination_commit of this PullRequestTarget.


        :return: The destination_commit of this PullRequestTarget.
        :rtype: str
        """
        return self._destination_commit

    @destination_commit.setter
    def destination_commit(self, destination_commit):
        """Sets the destination_commit of this PullRequestTarget.


        :param destination_commit: The destination_commit of this PullRequestTarget.
        :type destination_commit: str
        """

        self._destination_commit = destination_commit

    @property
    def source_commit(self):
        """Gets the source_commit of this PullRequestTarget.


        :return: The source_commit of this PullRequestTarget.
        :rtype: str
        """
        return self._source_commit

    @source_commit.setter
    def source_commit(self, source_commit):
        """Sets the source_commit of this PullRequestTarget.


        :param source_commit: The source_commit of this PullRequestTarget.
        :type source_commit: str
        """

        self._source_commit = source_commit

    @property
    def merge_base(self):
        """Gets the merge_base of this PullRequestTarget.


        :return: The merge_base of this PullRequestTarget.
        :rtype: str
        """
        return self._merge_base

    @merge_base.setter
    def merge_base(self, merge_base):
        """Sets the merge_base of this PullRequestTarget.


        :param merge_base: The merge_base of this PullRequestTarget.
        :type merge_base: str
        """

        self._merge_base = merge_base

    @property
    def merge_metadata(self):
        """Gets the merge_metadata of this PullRequestTarget.


        :return: The merge_metadata of this PullRequestTarget.
        :rtype: PullRequestTargetMergeMetadata
        """
        return self._merge_metadata

    @merge_metadata.setter
    def merge_metadata(self, merge_metadata):
        """Sets the merge_metadata of this PullRequestTarget.


        :param merge_metadata: The merge_metadata of this PullRequestTarget.
        :type merge_metadata: PullRequestTargetMergeMetadata
        """

        self._merge_metadata = merge_metadata
