# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.change_type_enum import ChangeTypeEnum
from openapi_server.models.difference_after_blob import DifferenceAfterBlob
from openapi_server.models.difference_before_blob import DifferenceBeforeBlob
from openapi_server import util


class Difference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, before_blob: DifferenceBeforeBlob=None, after_blob: DifferenceAfterBlob=None, change_type: ChangeTypeEnum=None):
        """Difference - a model defined in OpenAPI

        :param before_blob: The before_blob of this Difference.
        :param after_blob: The after_blob of this Difference.
        :param change_type: The change_type of this Difference.
        """
        self.openapi_types = {
            'before_blob': DifferenceBeforeBlob,
            'after_blob': DifferenceAfterBlob,
            'change_type': ChangeTypeEnum
        }

        self.attribute_map = {
            'before_blob': 'beforeBlob',
            'after_blob': 'afterBlob',
            'change_type': 'changeType'
        }

        self._before_blob = before_blob
        self._after_blob = after_blob
        self._change_type = change_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Difference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Difference of this Difference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def before_blob(self):
        """Gets the before_blob of this Difference.


        :return: The before_blob of this Difference.
        :rtype: DifferenceBeforeBlob
        """
        return self._before_blob

    @before_blob.setter
    def before_blob(self, before_blob):
        """Sets the before_blob of this Difference.


        :param before_blob: The before_blob of this Difference.
        :type before_blob: DifferenceBeforeBlob
        """

        self._before_blob = before_blob

    @property
    def after_blob(self):
        """Gets the after_blob of this Difference.


        :return: The after_blob of this Difference.
        :rtype: DifferenceAfterBlob
        """
        return self._after_blob

    @after_blob.setter
    def after_blob(self, after_blob):
        """Sets the after_blob of this Difference.


        :param after_blob: The after_blob of this Difference.
        :type after_blob: DifferenceAfterBlob
        """

        self._after_blob = after_blob

    @property
    def change_type(self):
        """Gets the change_type of this Difference.


        :return: The change_type of this Difference.
        :rtype: ChangeTypeEnum
        """
        return self._change_type

    @change_type.setter
    def change_type(self, change_type):
        """Sets the change_type of this Difference.


        :param change_type: The change_type of this Difference.
        :type change_type: ChangeTypeEnum
        """

        self._change_type = change_type
