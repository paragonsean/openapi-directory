# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PostCommentReplyOutputComment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment_id: str=None, content: str=None, in_reply_to: str=None, creation_date: datetime=None, last_modified_date: datetime=None, author_arn: str=None, deleted: bool=None, client_request_token: str=None, caller_reactions: List=None, reaction_counts: Dict=None):
        """PostCommentReplyOutputComment - a model defined in OpenAPI

        :param comment_id: The comment_id of this PostCommentReplyOutputComment.
        :param content: The content of this PostCommentReplyOutputComment.
        :param in_reply_to: The in_reply_to of this PostCommentReplyOutputComment.
        :param creation_date: The creation_date of this PostCommentReplyOutputComment.
        :param last_modified_date: The last_modified_date of this PostCommentReplyOutputComment.
        :param author_arn: The author_arn of this PostCommentReplyOutputComment.
        :param deleted: The deleted of this PostCommentReplyOutputComment.
        :param client_request_token: The client_request_token of this PostCommentReplyOutputComment.
        :param caller_reactions: The caller_reactions of this PostCommentReplyOutputComment.
        :param reaction_counts: The reaction_counts of this PostCommentReplyOutputComment.
        """
        self.openapi_types = {
            'comment_id': str,
            'content': str,
            'in_reply_to': str,
            'creation_date': datetime,
            'last_modified_date': datetime,
            'author_arn': str,
            'deleted': bool,
            'client_request_token': str,
            'caller_reactions': List,
            'reaction_counts': Dict
        }

        self.attribute_map = {
            'comment_id': 'commentId',
            'content': 'content',
            'in_reply_to': 'inReplyTo',
            'creation_date': 'creationDate',
            'last_modified_date': 'lastModifiedDate',
            'author_arn': 'authorArn',
            'deleted': 'deleted',
            'client_request_token': 'clientRequestToken',
            'caller_reactions': 'callerReactions',
            'reaction_counts': 'reactionCounts'
        }

        self._comment_id = comment_id
        self._content = content
        self._in_reply_to = in_reply_to
        self._creation_date = creation_date
        self._last_modified_date = last_modified_date
        self._author_arn = author_arn
        self._deleted = deleted
        self._client_request_token = client_request_token
        self._caller_reactions = caller_reactions
        self._reaction_counts = reaction_counts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostCommentReplyOutputComment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PostCommentReplyOutput_comment of this PostCommentReplyOutputComment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment_id(self):
        """Gets the comment_id of this PostCommentReplyOutputComment.


        :return: The comment_id of this PostCommentReplyOutputComment.
        :rtype: str
        """
        return self._comment_id

    @comment_id.setter
    def comment_id(self, comment_id):
        """Sets the comment_id of this PostCommentReplyOutputComment.


        :param comment_id: The comment_id of this PostCommentReplyOutputComment.
        :type comment_id: str
        """

        self._comment_id = comment_id

    @property
    def content(self):
        """Gets the content of this PostCommentReplyOutputComment.


        :return: The content of this PostCommentReplyOutputComment.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this PostCommentReplyOutputComment.


        :param content: The content of this PostCommentReplyOutputComment.
        :type content: str
        """

        self._content = content

    @property
    def in_reply_to(self):
        """Gets the in_reply_to of this PostCommentReplyOutputComment.


        :return: The in_reply_to of this PostCommentReplyOutputComment.
        :rtype: str
        """
        return self._in_reply_to

    @in_reply_to.setter
    def in_reply_to(self, in_reply_to):
        """Sets the in_reply_to of this PostCommentReplyOutputComment.


        :param in_reply_to: The in_reply_to of this PostCommentReplyOutputComment.
        :type in_reply_to: str
        """

        self._in_reply_to = in_reply_to

    @property
    def creation_date(self):
        """Gets the creation_date of this PostCommentReplyOutputComment.


        :return: The creation_date of this PostCommentReplyOutputComment.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this PostCommentReplyOutputComment.


        :param creation_date: The creation_date of this PostCommentReplyOutputComment.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def last_modified_date(self):
        """Gets the last_modified_date of this PostCommentReplyOutputComment.


        :return: The last_modified_date of this PostCommentReplyOutputComment.
        :rtype: datetime
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """Sets the last_modified_date of this PostCommentReplyOutputComment.


        :param last_modified_date: The last_modified_date of this PostCommentReplyOutputComment.
        :type last_modified_date: datetime
        """

        self._last_modified_date = last_modified_date

    @property
    def author_arn(self):
        """Gets the author_arn of this PostCommentReplyOutputComment.


        :return: The author_arn of this PostCommentReplyOutputComment.
        :rtype: str
        """
        return self._author_arn

    @author_arn.setter
    def author_arn(self, author_arn):
        """Sets the author_arn of this PostCommentReplyOutputComment.


        :param author_arn: The author_arn of this PostCommentReplyOutputComment.
        :type author_arn: str
        """

        self._author_arn = author_arn

    @property
    def deleted(self):
        """Gets the deleted of this PostCommentReplyOutputComment.


        :return: The deleted of this PostCommentReplyOutputComment.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this PostCommentReplyOutputComment.


        :param deleted: The deleted of this PostCommentReplyOutputComment.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def client_request_token(self):
        """Gets the client_request_token of this PostCommentReplyOutputComment.


        :return: The client_request_token of this PostCommentReplyOutputComment.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this PostCommentReplyOutputComment.


        :param client_request_token: The client_request_token of this PostCommentReplyOutputComment.
        :type client_request_token: str
        """

        self._client_request_token = client_request_token

    @property
    def caller_reactions(self):
        """Gets the caller_reactions of this PostCommentReplyOutputComment.


        :return: The caller_reactions of this PostCommentReplyOutputComment.
        :rtype: List
        """
        return self._caller_reactions

    @caller_reactions.setter
    def caller_reactions(self, caller_reactions):
        """Sets the caller_reactions of this PostCommentReplyOutputComment.


        :param caller_reactions: The caller_reactions of this PostCommentReplyOutputComment.
        :type caller_reactions: List
        """

        self._caller_reactions = caller_reactions

    @property
    def reaction_counts(self):
        """Gets the reaction_counts of this PostCommentReplyOutputComment.


        :return: The reaction_counts of this PostCommentReplyOutputComment.
        :rtype: Dict
        """
        return self._reaction_counts

    @reaction_counts.setter
    def reaction_counts(self, reaction_counts):
        """Sets the reaction_counts of this PostCommentReplyOutputComment.


        :param reaction_counts: The reaction_counts of this PostCommentReplyOutputComment.
        :type reaction_counts: Dict
        """

        self._reaction_counts = reaction_counts
