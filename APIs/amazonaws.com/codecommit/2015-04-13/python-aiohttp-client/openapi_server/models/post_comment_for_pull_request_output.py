# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.post_comment_for_compared_commit_output_comment import PostCommentForComparedCommitOutputComment
from openapi_server.models.post_comment_for_pull_request_output_location import PostCommentForPullRequestOutputLocation
from openapi_server import util


class PostCommentForPullRequestOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, repository_name: str=None, pull_request_id: str=None, before_commit_id: str=None, after_commit_id: str=None, before_blob_id: str=None, after_blob_id: str=None, location: PostCommentForPullRequestOutputLocation=None, comment: PostCommentForComparedCommitOutputComment=None):
        """PostCommentForPullRequestOutput - a model defined in OpenAPI

        :param repository_name: The repository_name of this PostCommentForPullRequestOutput.
        :param pull_request_id: The pull_request_id of this PostCommentForPullRequestOutput.
        :param before_commit_id: The before_commit_id of this PostCommentForPullRequestOutput.
        :param after_commit_id: The after_commit_id of this PostCommentForPullRequestOutput.
        :param before_blob_id: The before_blob_id of this PostCommentForPullRequestOutput.
        :param after_blob_id: The after_blob_id of this PostCommentForPullRequestOutput.
        :param location: The location of this PostCommentForPullRequestOutput.
        :param comment: The comment of this PostCommentForPullRequestOutput.
        """
        self.openapi_types = {
            'repository_name': str,
            'pull_request_id': str,
            'before_commit_id': str,
            'after_commit_id': str,
            'before_blob_id': str,
            'after_blob_id': str,
            'location': PostCommentForPullRequestOutputLocation,
            'comment': PostCommentForComparedCommitOutputComment
        }

        self.attribute_map = {
            'repository_name': 'repositoryName',
            'pull_request_id': 'pullRequestId',
            'before_commit_id': 'beforeCommitId',
            'after_commit_id': 'afterCommitId',
            'before_blob_id': 'beforeBlobId',
            'after_blob_id': 'afterBlobId',
            'location': 'location',
            'comment': 'comment'
        }

        self._repository_name = repository_name
        self._pull_request_id = pull_request_id
        self._before_commit_id = before_commit_id
        self._after_commit_id = after_commit_id
        self._before_blob_id = before_blob_id
        self._after_blob_id = after_blob_id
        self._location = location
        self._comment = comment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostCommentForPullRequestOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PostCommentForPullRequestOutput of this PostCommentForPullRequestOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def repository_name(self):
        """Gets the repository_name of this PostCommentForPullRequestOutput.


        :return: The repository_name of this PostCommentForPullRequestOutput.
        :rtype: str
        """
        return self._repository_name

    @repository_name.setter
    def repository_name(self, repository_name):
        """Sets the repository_name of this PostCommentForPullRequestOutput.


        :param repository_name: The repository_name of this PostCommentForPullRequestOutput.
        :type repository_name: str
        """

        self._repository_name = repository_name

    @property
    def pull_request_id(self):
        """Gets the pull_request_id of this PostCommentForPullRequestOutput.


        :return: The pull_request_id of this PostCommentForPullRequestOutput.
        :rtype: str
        """
        return self._pull_request_id

    @pull_request_id.setter
    def pull_request_id(self, pull_request_id):
        """Sets the pull_request_id of this PostCommentForPullRequestOutput.


        :param pull_request_id: The pull_request_id of this PostCommentForPullRequestOutput.
        :type pull_request_id: str
        """

        self._pull_request_id = pull_request_id

    @property
    def before_commit_id(self):
        """Gets the before_commit_id of this PostCommentForPullRequestOutput.


        :return: The before_commit_id of this PostCommentForPullRequestOutput.
        :rtype: str
        """
        return self._before_commit_id

    @before_commit_id.setter
    def before_commit_id(self, before_commit_id):
        """Sets the before_commit_id of this PostCommentForPullRequestOutput.


        :param before_commit_id: The before_commit_id of this PostCommentForPullRequestOutput.
        :type before_commit_id: str
        """

        self._before_commit_id = before_commit_id

    @property
    def after_commit_id(self):
        """Gets the after_commit_id of this PostCommentForPullRequestOutput.


        :return: The after_commit_id of this PostCommentForPullRequestOutput.
        :rtype: str
        """
        return self._after_commit_id

    @after_commit_id.setter
    def after_commit_id(self, after_commit_id):
        """Sets the after_commit_id of this PostCommentForPullRequestOutput.


        :param after_commit_id: The after_commit_id of this PostCommentForPullRequestOutput.
        :type after_commit_id: str
        """

        self._after_commit_id = after_commit_id

    @property
    def before_blob_id(self):
        """Gets the before_blob_id of this PostCommentForPullRequestOutput.


        :return: The before_blob_id of this PostCommentForPullRequestOutput.
        :rtype: str
        """
        return self._before_blob_id

    @before_blob_id.setter
    def before_blob_id(self, before_blob_id):
        """Sets the before_blob_id of this PostCommentForPullRequestOutput.


        :param before_blob_id: The before_blob_id of this PostCommentForPullRequestOutput.
        :type before_blob_id: str
        """

        self._before_blob_id = before_blob_id

    @property
    def after_blob_id(self):
        """Gets the after_blob_id of this PostCommentForPullRequestOutput.


        :return: The after_blob_id of this PostCommentForPullRequestOutput.
        :rtype: str
        """
        return self._after_blob_id

    @after_blob_id.setter
    def after_blob_id(self, after_blob_id):
        """Sets the after_blob_id of this PostCommentForPullRequestOutput.


        :param after_blob_id: The after_blob_id of this PostCommentForPullRequestOutput.
        :type after_blob_id: str
        """

        self._after_blob_id = after_blob_id

    @property
    def location(self):
        """Gets the location of this PostCommentForPullRequestOutput.


        :return: The location of this PostCommentForPullRequestOutput.
        :rtype: PostCommentForPullRequestOutputLocation
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this PostCommentForPullRequestOutput.


        :param location: The location of this PostCommentForPullRequestOutput.
        :type location: PostCommentForPullRequestOutputLocation
        """

        self._location = location

    @property
    def comment(self):
        """Gets the comment of this PostCommentForPullRequestOutput.


        :return: The comment of this PostCommentForPullRequestOutput.
        :rtype: PostCommentForComparedCommitOutputComment
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this PostCommentForPullRequestOutput.


        :param comment: The comment of this PostCommentForPullRequestOutput.
        :type comment: PostCommentForComparedCommitOutputComment
        """

        self._comment = comment
