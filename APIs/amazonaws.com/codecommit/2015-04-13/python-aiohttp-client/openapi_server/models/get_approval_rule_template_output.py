# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_approval_rule_template_output_approval_rule_template import GetApprovalRuleTemplateOutputApprovalRuleTemplate
from openapi_server import util


class GetApprovalRuleTemplateOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approval_rule_template: GetApprovalRuleTemplateOutputApprovalRuleTemplate=None):
        """GetApprovalRuleTemplateOutput - a model defined in OpenAPI

        :param approval_rule_template: The approval_rule_template of this GetApprovalRuleTemplateOutput.
        """
        self.openapi_types = {
            'approval_rule_template': GetApprovalRuleTemplateOutputApprovalRuleTemplate
        }

        self.attribute_map = {
            'approval_rule_template': 'approvalRuleTemplate'
        }

        self._approval_rule_template = approval_rule_template

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetApprovalRuleTemplateOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetApprovalRuleTemplateOutput of this GetApprovalRuleTemplateOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approval_rule_template(self):
        """Gets the approval_rule_template of this GetApprovalRuleTemplateOutput.


        :return: The approval_rule_template of this GetApprovalRuleTemplateOutput.
        :rtype: GetApprovalRuleTemplateOutputApprovalRuleTemplate
        """
        return self._approval_rule_template

    @approval_rule_template.setter
    def approval_rule_template(self, approval_rule_template):
        """Sets the approval_rule_template of this GetApprovalRuleTemplateOutput.


        :param approval_rule_template: The approval_rule_template of this GetApprovalRuleTemplateOutput.
        :type approval_rule_template: GetApprovalRuleTemplateOutputApprovalRuleTemplate
        """
        if approval_rule_template is None:
            raise ValueError("Invalid value for `approval_rule_template`, must not be `None`")

        self._approval_rule_template = approval_rule_template
