# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conflict_conflict_metadata import ConflictConflictMetadata
from openapi_server import util


class Conflict(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conflict_metadata: ConflictConflictMetadata=None, merge_hunks: List=None):
        """Conflict - a model defined in OpenAPI

        :param conflict_metadata: The conflict_metadata of this Conflict.
        :param merge_hunks: The merge_hunks of this Conflict.
        """
        self.openapi_types = {
            'conflict_metadata': ConflictConflictMetadata,
            'merge_hunks': List
        }

        self.attribute_map = {
            'conflict_metadata': 'conflictMetadata',
            'merge_hunks': 'mergeHunks'
        }

        self._conflict_metadata = conflict_metadata
        self._merge_hunks = merge_hunks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Conflict':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Conflict of this Conflict.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conflict_metadata(self):
        """Gets the conflict_metadata of this Conflict.


        :return: The conflict_metadata of this Conflict.
        :rtype: ConflictConflictMetadata
        """
        return self._conflict_metadata

    @conflict_metadata.setter
    def conflict_metadata(self, conflict_metadata):
        """Sets the conflict_metadata of this Conflict.


        :param conflict_metadata: The conflict_metadata of this Conflict.
        :type conflict_metadata: ConflictConflictMetadata
        """

        self._conflict_metadata = conflict_metadata

    @property
    def merge_hunks(self):
        """Gets the merge_hunks of this Conflict.


        :return: The merge_hunks of this Conflict.
        :rtype: List
        """
        return self._merge_hunks

    @merge_hunks.setter
    def merge_hunks(self, merge_hunks):
        """Sets the merge_hunks of this Conflict.


        :param merge_hunks: The merge_hunks of this Conflict.
        :type merge_hunks: List
        """

        self._merge_hunks = merge_hunks
