# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.evaluate_pull_request_approval_rules_output_evaluation import EvaluatePullRequestApprovalRulesOutputEvaluation
from openapi_server import util


class EvaluatePullRequestApprovalRulesOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, evaluation: EvaluatePullRequestApprovalRulesOutputEvaluation=None):
        """EvaluatePullRequestApprovalRulesOutput - a model defined in OpenAPI

        :param evaluation: The evaluation of this EvaluatePullRequestApprovalRulesOutput.
        """
        self.openapi_types = {
            'evaluation': EvaluatePullRequestApprovalRulesOutputEvaluation
        }

        self.attribute_map = {
            'evaluation': 'evaluation'
        }

        self._evaluation = evaluation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EvaluatePullRequestApprovalRulesOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EvaluatePullRequestApprovalRulesOutput of this EvaluatePullRequestApprovalRulesOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def evaluation(self):
        """Gets the evaluation of this EvaluatePullRequestApprovalRulesOutput.


        :return: The evaluation of this EvaluatePullRequestApprovalRulesOutput.
        :rtype: EvaluatePullRequestApprovalRulesOutputEvaluation
        """
        return self._evaluation

    @evaluation.setter
    def evaluation(self, evaluation):
        """Sets the evaluation of this EvaluatePullRequestApprovalRulesOutput.


        :param evaluation: The evaluation of this EvaluatePullRequestApprovalRulesOutput.
        :type evaluation: EvaluatePullRequestApprovalRulesOutputEvaluation
        """
        if evaluation is None:
            raise ValueError("Invalid value for `evaluation`, must not be `None`")

        self._evaluation = evaluation
