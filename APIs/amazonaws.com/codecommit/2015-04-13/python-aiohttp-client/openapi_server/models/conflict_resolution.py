# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConflictResolution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, replace_contents: List=None, delete_files: List=None, set_file_modes: List=None):
        """ConflictResolution - a model defined in OpenAPI

        :param replace_contents: The replace_contents of this ConflictResolution.
        :param delete_files: The delete_files of this ConflictResolution.
        :param set_file_modes: The set_file_modes of this ConflictResolution.
        """
        self.openapi_types = {
            'replace_contents': List,
            'delete_files': List,
            'set_file_modes': List
        }

        self.attribute_map = {
            'replace_contents': 'replaceContents',
            'delete_files': 'deleteFiles',
            'set_file_modes': 'setFileModes'
        }

        self._replace_contents = replace_contents
        self._delete_files = delete_files
        self._set_file_modes = set_file_modes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConflictResolution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConflictResolution of this ConflictResolution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def replace_contents(self):
        """Gets the replace_contents of this ConflictResolution.


        :return: The replace_contents of this ConflictResolution.
        :rtype: List
        """
        return self._replace_contents

    @replace_contents.setter
    def replace_contents(self, replace_contents):
        """Sets the replace_contents of this ConflictResolution.


        :param replace_contents: The replace_contents of this ConflictResolution.
        :type replace_contents: List
        """

        self._replace_contents = replace_contents

    @property
    def delete_files(self):
        """Gets the delete_files of this ConflictResolution.


        :return: The delete_files of this ConflictResolution.
        :rtype: List
        """
        return self._delete_files

    @delete_files.setter
    def delete_files(self, delete_files):
        """Sets the delete_files of this ConflictResolution.


        :param delete_files: The delete_files of this ConflictResolution.
        :type delete_files: List
        """

        self._delete_files = delete_files

    @property
    def set_file_modes(self):
        """Gets the set_file_modes of this ConflictResolution.


        :return: The set_file_modes of this ConflictResolution.
        :rtype: List
        """
        return self._set_file_modes

    @set_file_modes.setter
    def set_file_modes(self, set_file_modes):
        """Sets the set_file_modes of this ConflictResolution.


        :param set_file_modes: The set_file_modes of this ConflictResolution.
        :type set_file_modes: List
        """

        self._set_file_modes = set_file_modes
