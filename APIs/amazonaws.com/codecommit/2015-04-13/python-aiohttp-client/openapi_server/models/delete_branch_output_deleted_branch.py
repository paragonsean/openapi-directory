# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteBranchOutputDeletedBranch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, branch_name: str=None, commit_id: str=None):
        """DeleteBranchOutputDeletedBranch - a model defined in OpenAPI

        :param branch_name: The branch_name of this DeleteBranchOutputDeletedBranch.
        :param commit_id: The commit_id of this DeleteBranchOutputDeletedBranch.
        """
        self.openapi_types = {
            'branch_name': str,
            'commit_id': str
        }

        self.attribute_map = {
            'branch_name': 'branchName',
            'commit_id': 'commitId'
        }

        self._branch_name = branch_name
        self._commit_id = commit_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteBranchOutputDeletedBranch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteBranchOutput_deletedBranch of this DeleteBranchOutputDeletedBranch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def branch_name(self):
        """Gets the branch_name of this DeleteBranchOutputDeletedBranch.


        :return: The branch_name of this DeleteBranchOutputDeletedBranch.
        :rtype: str
        """
        return self._branch_name

    @branch_name.setter
    def branch_name(self, branch_name):
        """Sets the branch_name of this DeleteBranchOutputDeletedBranch.


        :param branch_name: The branch_name of this DeleteBranchOutputDeletedBranch.
        :type branch_name: str
        """

        self._branch_name = branch_name

    @property
    def commit_id(self):
        """Gets the commit_id of this DeleteBranchOutputDeletedBranch.


        :return: The commit_id of this DeleteBranchOutputDeletedBranch.
        :rtype: str
        """
        return self._commit_id

    @commit_id.setter
    def commit_id(self, commit_id):
        """Sets the commit_id of this DeleteBranchOutputDeletedBranch.


        :param commit_id: The commit_id of this DeleteBranchOutputDeletedBranch.
        :type commit_id: str
        """

        self._commit_id = commit_id
