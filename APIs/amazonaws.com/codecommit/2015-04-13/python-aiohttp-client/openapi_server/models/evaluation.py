# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Evaluation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approved: bool=None, overridden: bool=None, approval_rules_satisfied: List=None, approval_rules_not_satisfied: List=None):
        """Evaluation - a model defined in OpenAPI

        :param approved: The approved of this Evaluation.
        :param overridden: The overridden of this Evaluation.
        :param approval_rules_satisfied: The approval_rules_satisfied of this Evaluation.
        :param approval_rules_not_satisfied: The approval_rules_not_satisfied of this Evaluation.
        """
        self.openapi_types = {
            'approved': bool,
            'overridden': bool,
            'approval_rules_satisfied': List,
            'approval_rules_not_satisfied': List
        }

        self.attribute_map = {
            'approved': 'approved',
            'overridden': 'overridden',
            'approval_rules_satisfied': 'approvalRulesSatisfied',
            'approval_rules_not_satisfied': 'approvalRulesNotSatisfied'
        }

        self._approved = approved
        self._overridden = overridden
        self._approval_rules_satisfied = approval_rules_satisfied
        self._approval_rules_not_satisfied = approval_rules_not_satisfied

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Evaluation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Evaluation of this Evaluation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approved(self):
        """Gets the approved of this Evaluation.


        :return: The approved of this Evaluation.
        :rtype: bool
        """
        return self._approved

    @approved.setter
    def approved(self, approved):
        """Sets the approved of this Evaluation.


        :param approved: The approved of this Evaluation.
        :type approved: bool
        """

        self._approved = approved

    @property
    def overridden(self):
        """Gets the overridden of this Evaluation.


        :return: The overridden of this Evaluation.
        :rtype: bool
        """
        return self._overridden

    @overridden.setter
    def overridden(self, overridden):
        """Sets the overridden of this Evaluation.


        :param overridden: The overridden of this Evaluation.
        :type overridden: bool
        """

        self._overridden = overridden

    @property
    def approval_rules_satisfied(self):
        """Gets the approval_rules_satisfied of this Evaluation.


        :return: The approval_rules_satisfied of this Evaluation.
        :rtype: List
        """
        return self._approval_rules_satisfied

    @approval_rules_satisfied.setter
    def approval_rules_satisfied(self, approval_rules_satisfied):
        """Sets the approval_rules_satisfied of this Evaluation.


        :param approval_rules_satisfied: The approval_rules_satisfied of this Evaluation.
        :type approval_rules_satisfied: List
        """

        self._approval_rules_satisfied = approval_rules_satisfied

    @property
    def approval_rules_not_satisfied(self):
        """Gets the approval_rules_not_satisfied of this Evaluation.


        :return: The approval_rules_not_satisfied of this Evaluation.
        :rtype: List
        """
        return self._approval_rules_not_satisfied

    @approval_rules_not_satisfied.setter
    def approval_rules_not_satisfied(self, approval_rules_not_satisfied):
        """Sets the approval_rules_not_satisfied of this Evaluation.


        :param approval_rules_not_satisfied: The approval_rules_not_satisfied of this Evaluation.
        :type approval_rules_not_satisfied: List
        """

        self._approval_rules_not_satisfied = approval_rules_not_satisfied
