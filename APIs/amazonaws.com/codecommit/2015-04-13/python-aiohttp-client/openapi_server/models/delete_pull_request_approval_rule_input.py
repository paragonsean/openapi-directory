# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeletePullRequestApprovalRuleInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pull_request_id: str=None, approval_rule_name: str=None):
        """DeletePullRequestApprovalRuleInput - a model defined in OpenAPI

        :param pull_request_id: The pull_request_id of this DeletePullRequestApprovalRuleInput.
        :param approval_rule_name: The approval_rule_name of this DeletePullRequestApprovalRuleInput.
        """
        self.openapi_types = {
            'pull_request_id': str,
            'approval_rule_name': str
        }

        self.attribute_map = {
            'pull_request_id': 'pullRequestId',
            'approval_rule_name': 'approvalRuleName'
        }

        self._pull_request_id = pull_request_id
        self._approval_rule_name = approval_rule_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeletePullRequestApprovalRuleInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeletePullRequestApprovalRuleInput of this DeletePullRequestApprovalRuleInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pull_request_id(self):
        """Gets the pull_request_id of this DeletePullRequestApprovalRuleInput.


        :return: The pull_request_id of this DeletePullRequestApprovalRuleInput.
        :rtype: str
        """
        return self._pull_request_id

    @pull_request_id.setter
    def pull_request_id(self, pull_request_id):
        """Sets the pull_request_id of this DeletePullRequestApprovalRuleInput.


        :param pull_request_id: The pull_request_id of this DeletePullRequestApprovalRuleInput.
        :type pull_request_id: str
        """
        if pull_request_id is None:
            raise ValueError("Invalid value for `pull_request_id`, must not be `None`")

        self._pull_request_id = pull_request_id

    @property
    def approval_rule_name(self):
        """Gets the approval_rule_name of this DeletePullRequestApprovalRuleInput.


        :return: The approval_rule_name of this DeletePullRequestApprovalRuleInput.
        :rtype: str
        """
        return self._approval_rule_name

    @approval_rule_name.setter
    def approval_rule_name(self, approval_rule_name):
        """Sets the approval_rule_name of this DeletePullRequestApprovalRuleInput.


        :param approval_rule_name: The approval_rule_name of this DeletePullRequestApprovalRuleInput.
        :type approval_rule_name: str
        """
        if approval_rule_name is None:
            raise ValueError("Invalid value for `approval_rule_name`, must not be `None`")

        self._approval_rule_name = approval_rule_name
