/*
 * AWS Elemental MediaPackage v2
 * <note> <p>This guide is intended for creating AWS Elemental MediaPackage resources in MediaPackage Version 2 (v2) starting from May 2023. To get started with MediaPackage v2, create your MediaPackage resources. There isn't an automated process to migrate your resources from MediaPackage v1 to MediaPackage v2. </p> <p>The names of the entities that you use to access this API, like URLs and ARNs, all have the versioning information added, like \"v2\", to distinguish from the prior version. If you used MediaPackage prior to this release, you can't use the MediaPackage v2 CLI or the MediaPackage v2 API to access any MediaPackage v1 resources.</p> <p>If you created resources in MediaPackage v1, use video on demand (VOD) workflows, and aren't looking to migrate to MediaPackage v2 yet, see the <a href=\"https://docs.aws.amazon.com/mediapackage/latest/apireference/what-is.html\">MediaPackage v1 Live API Reference</a>.</p> </note> <p>This is the AWS Elemental MediaPackage v2 Live REST API Reference. It describes all the MediaPackage API operations for live content in detail, and provides sample requests, responses, and errors for the supported web services protocols.</p> <p>We assume that you have the IAM permissions that you need to use MediaPackage via the REST API. We also assume that you are familiar with the features and operations of MediaPackage, as described in the AWS Elemental MediaPackage User Guide.</p>
 *
 * The version of the OpenAPI document: 2022-12-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateHlsManifestConfiguration;
import org.openapitools.client.model.CreateLowLatencyHlsManifestConfiguration;
import org.openapitools.client.model.CreateOriginEndpointRequestSegment;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateOriginEndpointRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:24:03.443122-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateOriginEndpointRequest {
  /**
   * The type of container attached to this origin endpoint. A container type is a file format that encapsulates one or more media streams, such as audio and video, into a single file. 
   */
  @JsonAdapter(ContainerTypeEnum.Adapter.class)
  public enum ContainerTypeEnum {
    TS("TS"),
    
    CMAF("CMAF");

    private String value;

    ContainerTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ContainerTypeEnum fromValue(String value) {
      for (ContainerTypeEnum b : ContainerTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ContainerTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ContainerTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ContainerTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ContainerTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ContainerTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CONTAINER_TYPE = "ContainerType";
  @SerializedName(SERIALIZED_NAME_CONTAINER_TYPE)
  private ContainerTypeEnum containerType;

  public static final String SERIALIZED_NAME_SEGMENT = "Segment";
  @SerializedName(SERIALIZED_NAME_SEGMENT)
  private CreateOriginEndpointRequestSegment segment;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_STARTOVER_WINDOW_SECONDS = "StartoverWindowSeconds";
  @SerializedName(SERIALIZED_NAME_STARTOVER_WINDOW_SECONDS)
  private Integer startoverWindowSeconds;

  public static final String SERIALIZED_NAME_HLS_MANIFESTS = "HlsManifests";
  @SerializedName(SERIALIZED_NAME_HLS_MANIFESTS)
  private List<CreateHlsManifestConfiguration> hlsManifests = new ArrayList<>();

  public static final String SERIALIZED_NAME_LOW_LATENCY_HLS_MANIFESTS = "LowLatencyHlsManifests";
  @SerializedName(SERIALIZED_NAME_LOW_LATENCY_HLS_MANIFESTS)
  private List<CreateLowLatencyHlsManifestConfiguration> lowLatencyHlsManifests = new ArrayList<>();

  public UpdateOriginEndpointRequest() {
  }

  public UpdateOriginEndpointRequest containerType(ContainerTypeEnum containerType) {
    this.containerType = containerType;
    return this;
  }

  /**
   * The type of container attached to this origin endpoint. A container type is a file format that encapsulates one or more media streams, such as audio and video, into a single file. 
   * @return containerType
   */
  @javax.annotation.Nonnull
  public ContainerTypeEnum getContainerType() {
    return containerType;
  }

  public void setContainerType(ContainerTypeEnum containerType) {
    this.containerType = containerType;
  }


  public UpdateOriginEndpointRequest segment(CreateOriginEndpointRequestSegment segment) {
    this.segment = segment;
    return this;
  }

  /**
   * Get segment
   * @return segment
   */
  @javax.annotation.Nullable
  public CreateOriginEndpointRequestSegment getSegment() {
    return segment;
  }

  public void setSegment(CreateOriginEndpointRequestSegment segment) {
    this.segment = segment;
  }


  public UpdateOriginEndpointRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Any descriptive information that you want to add to the origin endpoint for future identification purposes.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateOriginEndpointRequest startoverWindowSeconds(Integer startoverWindowSeconds) {
    this.startoverWindowSeconds = startoverWindowSeconds;
    return this;
  }

  /**
   * The size of the window (in seconds) to create a window of the live stream that&#39;s available for on-demand viewing. Viewers can start-over or catch-up on content that falls within the window. The maximum startover window is 1,209,600 seconds (14 days).
   * minimum: 60
   * maximum: 1209600
   * @return startoverWindowSeconds
   */
  @javax.annotation.Nullable
  public Integer getStartoverWindowSeconds() {
    return startoverWindowSeconds;
  }

  public void setStartoverWindowSeconds(Integer startoverWindowSeconds) {
    this.startoverWindowSeconds = startoverWindowSeconds;
  }


  public UpdateOriginEndpointRequest hlsManifests(List<CreateHlsManifestConfiguration> hlsManifests) {
    this.hlsManifests = hlsManifests;
    return this;
  }

  public UpdateOriginEndpointRequest addHlsManifestsItem(CreateHlsManifestConfiguration hlsManifestsItem) {
    if (this.hlsManifests == null) {
      this.hlsManifests = new ArrayList<>();
    }
    this.hlsManifests.add(hlsManifestsItem);
    return this;
  }

  /**
   * An HTTP live streaming (HLS) manifest configuration.
   * @return hlsManifests
   */
  @javax.annotation.Nullable
  public List<CreateHlsManifestConfiguration> getHlsManifests() {
    return hlsManifests;
  }

  public void setHlsManifests(List<CreateHlsManifestConfiguration> hlsManifests) {
    this.hlsManifests = hlsManifests;
  }


  public UpdateOriginEndpointRequest lowLatencyHlsManifests(List<CreateLowLatencyHlsManifestConfiguration> lowLatencyHlsManifests) {
    this.lowLatencyHlsManifests = lowLatencyHlsManifests;
    return this;
  }

  public UpdateOriginEndpointRequest addLowLatencyHlsManifestsItem(CreateLowLatencyHlsManifestConfiguration lowLatencyHlsManifestsItem) {
    if (this.lowLatencyHlsManifests == null) {
      this.lowLatencyHlsManifests = new ArrayList<>();
    }
    this.lowLatencyHlsManifests.add(lowLatencyHlsManifestsItem);
    return this;
  }

  /**
   * A low-latency HLS manifest configuration.
   * @return lowLatencyHlsManifests
   */
  @javax.annotation.Nullable
  public List<CreateLowLatencyHlsManifestConfiguration> getLowLatencyHlsManifests() {
    return lowLatencyHlsManifests;
  }

  public void setLowLatencyHlsManifests(List<CreateLowLatencyHlsManifestConfiguration> lowLatencyHlsManifests) {
    this.lowLatencyHlsManifests = lowLatencyHlsManifests;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateOriginEndpointRequest updateOriginEndpointRequest = (UpdateOriginEndpointRequest) o;
    return Objects.equals(this.containerType, updateOriginEndpointRequest.containerType) &&
        Objects.equals(this.segment, updateOriginEndpointRequest.segment) &&
        Objects.equals(this.description, updateOriginEndpointRequest.description) &&
        Objects.equals(this.startoverWindowSeconds, updateOriginEndpointRequest.startoverWindowSeconds) &&
        Objects.equals(this.hlsManifests, updateOriginEndpointRequest.hlsManifests) &&
        Objects.equals(this.lowLatencyHlsManifests, updateOriginEndpointRequest.lowLatencyHlsManifests);
  }

  @Override
  public int hashCode() {
    return Objects.hash(containerType, segment, description, startoverWindowSeconds, hlsManifests, lowLatencyHlsManifests);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateOriginEndpointRequest {\n");
    sb.append("    containerType: ").append(toIndentedString(containerType)).append("\n");
    sb.append("    segment: ").append(toIndentedString(segment)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    startoverWindowSeconds: ").append(toIndentedString(startoverWindowSeconds)).append("\n");
    sb.append("    hlsManifests: ").append(toIndentedString(hlsManifests)).append("\n");
    sb.append("    lowLatencyHlsManifests: ").append(toIndentedString(lowLatencyHlsManifests)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ContainerType");
    openapiFields.add("Segment");
    openapiFields.add("Description");
    openapiFields.add("StartoverWindowSeconds");
    openapiFields.add("HlsManifests");
    openapiFields.add("LowLatencyHlsManifests");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ContainerType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateOriginEndpointRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateOriginEndpointRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateOriginEndpointRequest is not found in the empty JSON string", UpdateOriginEndpointRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateOriginEndpointRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateOriginEndpointRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateOriginEndpointRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("ContainerType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ContainerType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ContainerType").toString()));
      }
      // validate the required field `ContainerType`
      ContainerTypeEnum.validateJsonElement(jsonObj.get("ContainerType"));
      // validate the optional field `Segment`
      if (jsonObj.get("Segment") != null && !jsonObj.get("Segment").isJsonNull()) {
        CreateOriginEndpointRequestSegment.validateJsonElement(jsonObj.get("Segment"));
      }
      if ((jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) && !jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      if (jsonObj.get("HlsManifests") != null && !jsonObj.get("HlsManifests").isJsonNull()) {
        JsonArray jsonArrayhlsManifests = jsonObj.getAsJsonArray("HlsManifests");
        if (jsonArrayhlsManifests != null) {
          // ensure the json data is an array
          if (!jsonObj.get("HlsManifests").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `HlsManifests` to be an array in the JSON string but got `%s`", jsonObj.get("HlsManifests").toString()));
          }

          // validate the optional field `HlsManifests` (array)
          for (int i = 0; i < jsonArrayhlsManifests.size(); i++) {
            CreateHlsManifestConfiguration.validateJsonElement(jsonArrayhlsManifests.get(i));
          };
        }
      }
      if (jsonObj.get("LowLatencyHlsManifests") != null && !jsonObj.get("LowLatencyHlsManifests").isJsonNull()) {
        JsonArray jsonArraylowLatencyHlsManifests = jsonObj.getAsJsonArray("LowLatencyHlsManifests");
        if (jsonArraylowLatencyHlsManifests != null) {
          // ensure the json data is an array
          if (!jsonObj.get("LowLatencyHlsManifests").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `LowLatencyHlsManifests` to be an array in the JSON string but got `%s`", jsonObj.get("LowLatencyHlsManifests").toString()));
          }

          // validate the optional field `LowLatencyHlsManifests` (array)
          for (int i = 0; i < jsonArraylowLatencyHlsManifests.size(); i++) {
            CreateLowLatencyHlsManifestConfiguration.validateJsonElement(jsonArraylowLatencyHlsManifests.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateOriginEndpointRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateOriginEndpointRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateOriginEndpointRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateOriginEndpointRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateOriginEndpointRequest>() {
           @Override
           public void write(JsonWriter out, UpdateOriginEndpointRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateOriginEndpointRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateOriginEndpointRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateOriginEndpointRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateOriginEndpointRequest
   */
  public static UpdateOriginEndpointRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateOriginEndpointRequest.class);
  }

  /**
   * Convert an instance of UpdateOriginEndpointRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

