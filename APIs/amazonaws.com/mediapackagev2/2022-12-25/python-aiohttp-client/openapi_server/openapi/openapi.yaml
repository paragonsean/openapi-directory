openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<note> <p>This guide is intended for creating AWS Elemental MediaPackage\
    \ resources in MediaPackage Version 2 (v2) starting from May 2023. To get started\
    \ with MediaPackage v2, create your MediaPackage resources. There isn't an automated\
    \ process to migrate your resources from MediaPackage v1 to MediaPackage v2. </p>\
    \ <p>The names of the entities that you use to access this API, like URLs and\
    \ ARNs, all have the versioning information added, like \"v2\", to distinguish\
    \ from the prior version. If you used MediaPackage prior to this release, you\
    \ can't use the MediaPackage v2 CLI or the MediaPackage v2 API to access any MediaPackage\
    \ v1 resources.</p> <p>If you created resources in MediaPackage v1, use video\
    \ on demand (VOD) workflows, and aren't looking to migrate to MediaPackage v2\
    \ yet, see the <a href=\"https://docs.aws.amazon.com/mediapackage/latest/apireference/what-is.html\"\
    >MediaPackage v1 Live API Reference</a>.</p> </note> <p>This is the AWS Elemental\
    \ MediaPackage v2 Live REST API Reference. It describes all the MediaPackage API\
    \ operations for live content in detail, and provides sample requests, responses,\
    \ and errors for the supported web services protocols.</p> <p>We assume that you\
    \ have the IAM permissions that you need to use MediaPackage via the REST API.\
    \ We also assume that you are familiar with the features and operations of MediaPackage,\
    \ as described in the AWS Elemental MediaPackage User Guide.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Elemental MediaPackage v2
  version: 2022-12-25
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: mediapackagev2
  x-aws-signingName: mediapackagev2
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediapackagev2-2022-12-25.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/mediapackagev2/
servers:
- description: The mediapackagev2 multi-region endpoint
  url: "http://mediapackagev2.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The mediapackagev2 multi-region endpoint
  url: "https://mediapackagev2.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The mediapackagev2 endpoint for China (Beijing) and China (Ningxia)
  url: "http://mediapackagev2.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The mediapackagev2 endpoint for China (Beijing) and China (Ningxia)
  url: "https://mediapackagev2.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /channelGroup:
    get:
      description: "Retrieves all channel groups that are configured in AWS Elemental\
        \ MediaPackage, including the channels and origin endpoints that are associated\
        \ with it."
      operationId: list_channel_groups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The pagination token from the GET list request. Use the token
          to fetch the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: 'Create a channel group to group your channels and origin endpoints.
        A channel group is the top-level resource that consists of channels and origin
        endpoints that are associated with it and that provides predictable URLs for
        stream delivery. All channels and origin endpoints within the channel group
        are guaranteed to share the DNS. You can create only one channel group with
        each request. '
      operationId: create_channel_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A unique, case-sensitive token that you provide to ensure the\
          \ idempotency of the request."
        explode: false
        in: header
        name: x-amzn-client-token
        required: false
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[\\S]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannelGroup_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /channelGroup/{ChannelGroupName}:
    delete:
      description: "Delete a channel group. You must delete the channel group's channels\
        \ and origin endpoints before you can delete the channel group. If you delete\
        \ a channel group, you'll lose access to the egress domain and will have to\
        \ create a new channel group to replace it."
      operationId: delete_channel_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Retrieves the specified channel group that's configured in AWS\
        \ Elemental MediaPackage, including the channels and origin endpoints that\
        \ are associated with it."
      operationId: get_channel_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: <p>Update the specified channel group. You can edit the description
        on a channel group for easier identification later from the AWS Elemental
        MediaPackage console. You can't edit the name of the channel group.</p> <p>Any
        edits you make that impact the video output may not be reflected for a few
        minutes.</p>
      operationId: update_channel_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelGroup_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /channelGroup/{ChannelGroupName}/channel:
    get:
      description: "Retrieves all channels in a specific channel group that are configured\
        \ in AWS Elemental MediaPackage, including the origin endpoints that are associated\
        \ with it."
      operationId: list_channels
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: The maximum number of results to return in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The pagination token from the GET list request. Use the token
          to fetch the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Create a channel to start receiving content streams. The channel\
        \ represents the input to MediaPackage for incoming live content from an encoder\
        \ such as AWS Elemental MediaLive. The channel receives content, and after\
        \ packaging it, outputs it through an origin endpoint to downstream devices\
        \ (such as video players or CDNs) that request the content. You can create\
        \ only one channel with each request. We recommend that you spread out channels\
        \ between channel groups, such as putting redundant channels in the same AWS\
        \ Region in different channel groups."
      operationId: create_channel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "A unique, case-sensitive token that you provide to ensure the\
          \ idempotency of the request."
        explode: false
        in: header
        name: x-amzn-client-token
        required: false
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[\\S]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannel_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /channelGroup/{ChannelGroupName}/channel/{ChannelName}/:
    delete:
      description: Delete a channel to stop AWS Elemental MediaPackage from receiving
        further content. You must delete the channel's origin endpoints before you
        can delete the channel.
      operationId: delete_channel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the channel. The name is the primary\
          \ identifier for the channel, and must be unique for your account in the\
          \ AWS Region and channel group."
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Retrieves the specified channel that's configured in AWS Elemental\
        \ MediaPackage, including the origin endpoints that are associated with it."
      operationId: get_channel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the channel. The name is the primary\
          \ identifier for the channel, and must be unique for your account in the\
          \ AWS Region and channel group. "
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "<p>Update the specified channel. You can edit if MediaPackage\
        \ sends ingest or egress access logs to the CloudWatch log group, if content\
        \ will be encrypted, the description on a channel, and your channel's policy\
        \ settings. You can't edit the name of the channel or CloudFront distribution\
        \ details.</p> <p>Any edits you make that impact the video output may not\
        \ be reflected for a few minutes.</p>"
      operationId: update_channel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the channel. The name is the primary\
          \ identifier for the channel, and must be unique for your account in the\
          \ AWS Region and channel group. "
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannel_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint:
    get:
      description: Retrieves all origin endpoints in a specific channel that are configured
        in AWS Elemental MediaPackage.
      operationId: list_origin_endpoints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the channel. The name is the primary\
          \ identifier for the channel, and must be unique for your account in the\
          \ AWS Region and channel group. "
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: The maximum number of results to return in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The pagination token from the GET list request. Use the token
          to fetch the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOriginEndpointsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "The endpoint is attached to a channel, and represents the output\
        \ of the live content. You can associate multiple endpoints to a single channel.\
        \ Each endpoint gives players and downstream CDNs (such as Amazon CloudFront)\
        \ access to the content for playback. Content can't be served from a channel\
        \ until it has an endpoint. You can create only one endpoint with each request. "
      operationId: create_origin_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the channel. The name is the primary\
          \ identifier for the channel, and must be unique for your account in the\
          \ AWS Region and channel group. "
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "A unique, case-sensitive token that you provide to ensure the\
          \ idempotency of the request."
        explode: false
        in: header
        name: x-amzn-client-token
        required: false
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[\\S]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOriginEndpoint_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOriginEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint/{OriginEndpointName}:
    delete:
      description: Origin endpoints can serve content until they're deleted. Delete
        the endpoint if it should no longer respond to playback requests. You must
        delete all endpoints from a channel before you can delete the channel.
      operationId: delete_origin_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the channel. The name is the primary\
          \ identifier for the channel, and must be unique for your account in the\
          \ AWS Region and channel group. "
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the origin endpoint. The name is the\
          \ primary identifier for the origin endpoint, and and must be unique for\
          \ your account in the AWS Region and channel. "
        explode: false
        in: path
        name: OriginEndpointName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOriginEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves the specified origin endpoint that's configured in AWS
        Elemental MediaPackage to obtain its playback URL and to view the packaging
        settings that it's currently using.
      operationId: get_origin_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the channel. The name is the primary\
          \ identifier for the channel, and must be unique for your account in the\
          \ AWS Region and channel group. "
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the origin endpoint. The name is the\
          \ primary identifier for the origin endpoint, and and must be unique for\
          \ your account in the AWS Region and channel. "
        explode: false
        in: path
        name: OriginEndpointName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOriginEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: <p>Update the specified origin endpoint. Edit the packaging preferences
        on an endpoint to optimize the viewing experience. You can't edit the name
        of the endpoint.</p> <p>Any edits you make that impact the video output may
        not be reflected for a few minutes.</p>
      operationId: update_origin_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the channel. The name is the primary\
          \ identifier for the channel, and must be unique for your account in the\
          \ AWS Region and channel group. "
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the origin endpoint. The name is the\
          \ primary identifier for the origin endpoint, and and must be unique for\
          \ your account in the AWS Region and channel. "
        explode: false
        in: path
        name: OriginEndpointName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOriginEndpoint_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOriginEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint/{OriginEndpointName}/policy:
    delete:
      description: Delete an origin endpoint policy.
      operationId: delete_origin_endpoint_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the channel. The name is the primary\
          \ identifier for the channel, and must be unique for your account in the\
          \ AWS Region and channel group. "
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the origin endpoint. The name is the\
          \ primary identifier for the origin endpoint, and and must be unique for\
          \ your account in the AWS Region and channel. "
        explode: false
        in: path
        name: OriginEndpointName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOriginEndpointPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves the specified origin endpoint policy that's configured
        in AWS Elemental MediaPackage.
      operationId: get_origin_endpoint_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the channel. The name is the primary\
          \ identifier for the channel, and must be unique for your account in the\
          \ AWS Region and channel group. "
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the origin endpoint. The name is the\
          \ primary identifier for the origin endpoint, and and must be unique for\
          \ your account in the AWS Region and channel. "
        explode: false
        in: path
        name: OriginEndpointName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOriginEndpointPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Attaches an IAM policy to the specified origin endpoint. You can
        attach only one policy with each request.
      operationId: put_origin_endpoint_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the channel. The name is the primary\
          \ identifier for the channel, and must be unique for your account in the\
          \ AWS Region and channel group. "
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the origin endpoint. The name is the\
          \ primary identifier for the origin endpoint, and and must be unique for\
          \ your account in the AWS Region and channel. "
        explode: false
        in: path
        name: OriginEndpointName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutOriginEndpointPolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutOriginEndpointPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /channelGroup/{ChannelGroupName}/channel/{ChannelName}/policy:
    delete:
      description: Delete a channel policy.
      operationId: delete_channel_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the channel. The name is the primary\
          \ identifier for the channel, and must be unique for your account in the\
          \ AWS Region and channel group."
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Retrieves the specified channel policy that's configured in AWS\
        \ Elemental MediaPackage. With policies, you can specify who has access to\
        \ AWS resources and what actions they can perform on those resources."
      operationId: get_channel_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the channel. The name is the primary\
          \ identifier for the channel, and must be unique for your account in the\
          \ AWS Region and channel group. "
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "Attaches an IAM policy to the specified channel. With policies,\
        \ you can specify who has access to AWS resources and what actions they can\
        \ perform on those resources. You can attach only one policy with each request."
      operationId: put_channel_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name that describes the channel group. The name is the primary\
          \ identifier for the channel group, and must be unique for your account\
          \ in the AWS Region."
        explode: false
        in: path
        name: ChannelGroupName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      - description: "The name that describes the channel. The name is the primary\
          \ identifier for the channel, and must be unique for your account in the\
          \ AWS Region and channel group. "
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutChannelPolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutChannelPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{ResourceArn}:
    get:
      description: Lists the tags assigned to a resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the CloudWatch resource that you want to view tags
          for.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Assigns one of more tags (key-value pairs) to the specified\
        \ MediaPackage resource.</p> <p>Tags can help you organize and categorize\
        \ your resources. You can also use them to scope user permissions, by granting\
        \ a user permission to access or change only resources with certain tag values.\
        \ You can use the TagResource operation with a resource that already has tags.\
        \ If you specify a new tag key for the resource, this tag is appended to the\
        \ list of tags associated with the resource. If you specify a tag key that\
        \ is already associated with the resource, the new tag value that you specify\
        \ replaces the previous value for that tag.</p>"
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the MediaPackage resource that you're adding tags
          to.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{ResourceArn}#tagKeys:
    delete:
      description: Removes one or more tags from the specified resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the MediaPackage resource that you're removing tags
          from.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          type: string
        style: simple
      - description: The list of tag keys to remove from the resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          type: array
        style: form
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateChannelResponse:
      example:
        ModifiedAt: ""
        ChannelName: ""
        Description: ""
        IngestEndpoints:
        - Id: ""
          Url: ""
        - Id: ""
          Url: ""
        CreatedAt: ""
        ChannelGroupName: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) associated with the resource.
          title: Arn
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel. The name is the primary\
              \ identifier for the channel, and must be unique for your account in\
              \ the AWS Region and channel group."
          title: ChannelName
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel group. The name is the\
              \ primary identifier for the channel group, and must be unique for your\
              \ account in the AWS Region."
          title: ChannelGroupName
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel was created.
          title: CreatedAt
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel was modified.
          title: ModifiedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description for your channel.
          title: Description
        IngestEndpoints:
          description: The list of ingest endpoints.
          items:
            $ref: '#/components/schemas/IngestEndpoint'
          title: IngestEndpoints
          type: array
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The comma-separated list of tag key:value pairs assigned
              to the channel.
          title: Tags
      required:
      - Arn
      - ChannelGroupName
      - ChannelName
      - CreatedAt
      - ModifiedAt
      title: CreateChannelResponse
      type: object
    TagValue:
      title: TagValue
      type: string
    ThrottlingException: {}
    ConflictException: {}
    InternalServerException: {}
    AccessDeniedException: {}
    ValidationException: {}
    ResourceNotFoundException: {}
    ServiceQuotaExceededException: {}
    CreateChannelGroupResponse:
      example:
        ModifiedAt: ""
        Description: ""
        CreatedAt: ""
        ChannelGroupName: ""
        Arn: ""
        Tags: ""
        EgressDomain: ""
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel group. The name is the\
              \ primary identifier for the channel group, and must be unique for your\
              \ account in the AWS Region."
          title: ChannelGroupName
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) associated with the resource.
          title: Arn
        EgressDomain:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The output domain where the source stream should be sent.
              Integrate the egress domain with a downstream CDN (such as Amazon CloudFront)
              or playback device.
          title: EgressDomain
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel group was created.
          title: CreatedAt
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel group was modified.
          title: ModifiedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description for your channel group.
          title: Description
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The comma-separated list of tag key:value pairs assigned
              to the channel group.
          title: Tags
      required:
      - Arn
      - ChannelGroupName
      - CreatedAt
      - EgressDomain
      - ModifiedAt
      title: CreateChannelGroupResponse
      type: object
    CreateOriginEndpointResponse:
      example:
        Description: ""
        LowLatencyHlsManifests: ""
        ContainerType: ""
        CreatedAt: ""
        HlsManifests: ""
        Segment:
          SegmentName: ""
          TsUseAudioRenditionGroup: ""
          IncludeIframeOnlyStreams: ""
          Scte:
            ScteFilter: ""
          TsIncludeDvbSubtitles: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              DrmSystems: ""
              ResourceId: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
            EncryptionMethod:
              CmafEncryptionMethod: ""
              TsEncryptionMethod: ""
        ModifiedAt: ""
        ChannelName: ""
        OriginEndpointName: ""
        ChannelGroupName: ""
        Arn: ""
        Tags: ""
        StartoverWindowSeconds: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) associated with the resource.
          title: Arn
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name that describes the channel group. The name is the\
              \ primary identifier for the channel group, and must be unique for your\
              \ account in the AWS Region."
          title: ChannelGroupName
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name that describes the channel. The name is the primary\
              \ identifier for the channel, and must be unique for your account in\
              \ the AWS Region and channel group."
          title: ChannelName
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name that describes the origin endpoint. The name is\
              \ the primary identifier for the origin endpoint, and and must be unique\
              \ for your account in the AWS Region and channel."
          title: OriginEndpointName
        ContainerType:
          allOf:
          - $ref: '#/components/schemas/ContainerType'
          - description: The type of container attached to this origin endpoint.
          title: ContainerType
        Segment:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Segment'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the origin endpoint was created.
          title: CreatedAt
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the origin endpoint was modified.
          title: ModifiedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: The description for your origin endpoint.
          title: Description
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The size of the window (in seconds) to create a window of
              the live stream that's available for on-demand viewing. Viewers can
              start-over or catch-up on content that falls within the window.
          title: StartoverWindowSeconds
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/GetHlsManifests'
          - description: An HTTP live streaming (HLS) manifest configuration.
          title: HlsManifests
        LowLatencyHlsManifests:
          allOf:
          - $ref: '#/components/schemas/GetLowLatencyHlsManifests'
          - description: A low-latency HLS manifest configuration.
          title: LowLatencyHlsManifests
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The comma-separated list of tag key:value pairs assigned
              to the origin endpoint.
          title: Tags
      required:
      - Arn
      - ChannelGroupName
      - ChannelName
      - ContainerType
      - CreatedAt
      - ModifiedAt
      - OriginEndpointName
      - Segment
      title: CreateOriginEndpointResponse
      type: object
    SegmentSegmentDurationSecondsInteger:
      maximum: 30
      minimum: 1
      type: integer
    SegmentSegmentNameString:
      maxLength: 256
      minLength: 1
      pattern: "[a-zA-Z0-9_-]+"
      type: string
    Boolean:
      type: boolean
    Scte:
      description: The SCTE configuration.
      properties:
        ScteFilter:
          allOf:
          - $ref: '#/components/schemas/ScteFilterList'
          - description: The SCTE-35 message types that you want to be treated as
              ad markers in the output.
          title: ScteFilter
      title: Scte
      type: object
    Encryption:
      description: The parameters for encrypting content.
      example:
        KeyRotationIntervalSeconds: ""
        ConstantInitializationVector: ""
        SpekeKeyProvider:
          DrmSystems: ""
          ResourceId: ""
          EncryptionContractConfiguration:
            PresetSpeke20Audio: ""
            PresetSpeke20Video: ""
          RoleArn: ""
          Url: ""
        EncryptionMethod:
          CmafEncryptionMethod: ""
          TsEncryptionMethod: ""
      properties:
        ConstantInitializationVector:
          allOf:
          - $ref: '#/components/schemas/EncryptionConstantInitializationVectorString'
          - description: "A 128-bit, 16-byte hex value represented by a 32-character\
              \ string, used in conjunction with the key for encrypting content. If\
              \ you don't specify a value, then MediaPackage creates the constant\
              \ initialization vector (IV)."
          title: ConstantInitializationVector
        EncryptionMethod:
          $ref: '#/components/schemas/Encryption_EncryptionMethod'
        KeyRotationIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyRotationIntervalSecondsInteger'
          - description: "<p>The frequency (in seconds) of key changes for live workflows,\
              \ in which content is streamed real time. The service retrieves content\
              \ keys before the live content begins streaming, and then retrieves\
              \ them as needed over the lifetime of the workflow. By default, key\
              \ rotation is set to 300 seconds (5 minutes), the minimum rotation interval,\
              \ which is equivalent to setting it to 300. If you don't enter an interval,\
              \ content keys aren't rotated.</p> <p>The following example setting\
              \ causes the service to rotate keys every thirty minutes: <code>1800</code>\
              \ </p>"
          title: KeyRotationIntervalSeconds
        SpekeKeyProvider:
          $ref: '#/components/schemas/Encryption_SpekeKeyProvider'
      required:
      - EncryptionMethod
      - SpekeKeyProvider
      title: Encryption
      type: object
    CreateHlsManifestConfiguration:
      description: Create an HTTP live streaming (HLS) manifest configuration.
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ManifestName'
          - description: "A short short string that's appended to the endpoint URL.\
              \ The manifest name creates a unique path to this endpoint. If you don't\
              \ enter a value, MediaPackage uses the default manifest name, index.\
              \ MediaPackage automatically inserts the format extension, such as .m3u8.\
              \ You can't use the same manifest name if you use HLS manifest and low-latency\
              \ HLS manifest. The manifestName on the HLSManifest object overrides\
              \ the manifestName you provided on the originEndpoint object."
          title: ManifestName
        ChildManifestName:
          allOf:
          - $ref: '#/components/schemas/ManifestName'
          - description: "A short string that's appended to the endpoint URL. The\
              \ child manifest name creates a unique path to this endpoint. If you\
              \ don't enter a value, MediaPackage uses the default manifest name,\
              \ index, with an added suffix to distinguish it from the manifest name.\
              \ The manifestName on the HLSManifest object overrides the manifestName\
              \ you provided on the originEndpoint object."
          title: ChildManifestName
        ScteHls:
          $ref: '#/components/schemas/ScteHls'
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/CreateHlsManifestConfigurationManifestWindowSecondsInteger'
          - description: The total duration (in seconds) of the manifest's content.
          title: ManifestWindowSeconds
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/CreateHlsManifestConfigurationProgramDateTimeIntervalSecondsInteger'
          - description: "<p>Inserts EXT-X-PROGRAM-DATE-TIME tags in the output manifest\
              \ at the interval that you specify. If you don't enter an interval,\
              \ EXT-X-PROGRAM-DATE-TIME tags aren't included in the manifest. The\
              \ tags sync the stream to the wall clock so that viewers can seek to\
              \ a specific time in the playback timeline on the player. ID3Timed metadata\
              \ messages generate every 5 seconds whenever the content is ingested.</p>\
              \ <p>Irrespective of this parameter, if any ID3Timed metadata is in\
              \ the HLS input, it is passed through to the HLS output.</p>"
          title: ProgramDateTimeIntervalSeconds
      required:
      - ManifestName
      title: CreateHlsManifestConfiguration
      type: object
    CreateLowLatencyHlsManifestConfiguration:
      description: Create a low-latency HTTP live streaming (HLS) manifest configuration.
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ManifestName'
          - description: "A short short string that's appended to the endpoint URL.\
              \ The manifest name creates a unique path to this endpoint. If you don't\
              \ enter a value, MediaPackage uses the default manifest name, index.\
              \ MediaPackage automatically inserts the format extension, such as .m3u8.\
              \ You can't use the same manifest name if you use HLS manifest and low-latency\
              \ HLS manifest. The manifestName on the HLSManifest object overrides\
              \ the manifestName you provided on the originEndpoint object."
          title: ManifestName
        ChildManifestName:
          allOf:
          - $ref: '#/components/schemas/ManifestName'
          - description: "A short string that's appended to the endpoint URL. The\
              \ child manifest name creates a unique path to this endpoint. If you\
              \ don't enter a value, MediaPackage uses the default manifest name,\
              \ index, with an added suffix to distinguish it from the manifest name.\
              \ The manifestName on the HLSManifest object overrides the manifestName\
              \ you provided on the originEndpoint object."
          title: ChildManifestName
        ScteHls:
          $ref: '#/components/schemas/ScteHls'
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/CreateLowLatencyHlsManifestConfigurationManifestWindowSecondsInteger'
          - description: The total duration (in seconds) of the manifest's content.
          title: ManifestWindowSeconds
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/CreateLowLatencyHlsManifestConfigurationProgramDateTimeIntervalSecondsInteger'
          - description: "<p>Inserts EXT-X-PROGRAM-DATE-TIME tags in the output manifest\
              \ at the interval that you specify. If you don't enter an interval,\
              \ EXT-X-PROGRAM-DATE-TIME tags aren't included in the manifest. The\
              \ tags sync the stream to the wall clock so that viewers can seek to\
              \ a specific time in the playback timeline on the player. ID3Timed metadata\
              \ messages generate every 5 seconds whenever the content is ingested.</p>\
              \ <p>Irrespective of this parameter, if any ID3Timed metadata is in\
              \ the HLS input, it is passed through to the HLS output.</p>"
          title: ProgramDateTimeIntervalSeconds
      required:
      - ManifestName
      title: CreateLowLatencyHlsManifestConfiguration
      type: object
    DeleteChannelResponse:
      properties: {}
      type: object
    DeleteChannelGroupResponse:
      properties: {}
      type: object
    DeleteChannelPolicyResponse:
      properties: {}
      type: object
    DeleteOriginEndpointResponse:
      properties: {}
      type: object
    DeleteOriginEndpointPolicyResponse:
      properties: {}
      type: object
    GetChannelResponse:
      example:
        ModifiedAt: ""
        ChannelName: ""
        Description: ""
        IngestEndpoints:
        - Id: ""
          Url: ""
        - Id: ""
          Url: ""
        CreatedAt: ""
        ChannelGroupName: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) associated with the resource.
          title: Arn
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel. The name is the primary\
              \ identifier for the channel, and must be unique for your account in\
              \ the AWS Region and channel group."
          title: ChannelName
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel group. The name is the\
              \ primary identifier for the channel group, and must be unique for your\
              \ account in the AWS Region."
          title: ChannelGroupName
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel was created.
          title: CreatedAt
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel was modified.
          title: ModifiedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description for your channel.
          title: Description
        IngestEndpoints:
          description: The list of ingest endpoints.
          items:
            $ref: '#/components/schemas/IngestEndpoint'
          title: IngestEndpoints
          type: array
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The comma-separated list of tag key:value pairs assigned
              to the channel.
          title: Tags
      required:
      - Arn
      - ChannelGroupName
      - ChannelName
      - CreatedAt
      - ModifiedAt
      title: GetChannelResponse
      type: object
    GetChannelGroupResponse:
      example:
        ModifiedAt: ""
        Description: ""
        CreatedAt: ""
        ChannelGroupName: ""
        Arn: ""
        Tags: ""
        EgressDomain: ""
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel group. The name is the\
              \ primary identifier for the channel group, and must be unique for your\
              \ account in the AWS Region."
          title: ChannelGroupName
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) associated with the resource.
          title: Arn
        EgressDomain:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The output domain where the source stream should be sent.
              Integrate the domain with a downstream CDN (such as Amazon CloudFront)
              or playback device.
          title: EgressDomain
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel group was created.
          title: CreatedAt
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel group was modified.
          title: ModifiedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description for your channel group.
          title: Description
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The comma-separated list of tag key:value pairs assigned
              to the channel group.
            xml:
              name: tags
          title: Tags
      required:
      - Arn
      - ChannelGroupName
      - CreatedAt
      - EgressDomain
      - ModifiedAt
      title: GetChannelGroupResponse
      type: object
    GetChannelPolicyResponse:
      example:
        Policy: ""
        ChannelName: ""
        ChannelGroupName: ""
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel group. The name is the\
              \ primary identifier for the channel group, and must be unique for your\
              \ account in the AWS Region."
          title: ChannelGroupName
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel. The name is the primary\
              \ identifier for the channel, and must be unique for your account in\
              \ the AWS Region and channel group."
          title: ChannelName
        Policy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The policy assigned to the channel.
          title: Policy
      required:
      - ChannelGroupName
      - ChannelName
      - Policy
      title: GetChannelPolicyResponse
      type: object
    GetOriginEndpointResponse:
      example:
        Description: ""
        LowLatencyHlsManifests: ""
        ContainerType: ""
        CreatedAt: ""
        HlsManifests: ""
        Segment:
          SegmentName: ""
          TsUseAudioRenditionGroup: ""
          IncludeIframeOnlyStreams: ""
          Scte:
            ScteFilter: ""
          TsIncludeDvbSubtitles: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              DrmSystems: ""
              ResourceId: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
            EncryptionMethod:
              CmafEncryptionMethod: ""
              TsEncryptionMethod: ""
        ModifiedAt: ""
        ChannelName: ""
        OriginEndpointName: ""
        ChannelGroupName: ""
        Arn: ""
        Tags: ""
        StartoverWindowSeconds: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) associated with the resource.
          title: Arn
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name that describes the channel group. The name is the\
              \ primary identifier for the channel group, and must be unique for your\
              \ account in the AWS Region."
          title: ChannelGroupName
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name that describes the channel. The name is the primary\
              \ identifier for the channel, and must be unique for your account in\
              \ the AWS Region and channel group."
          title: ChannelName
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name that describes the origin endpoint. The name is\
              \ the primary identifier for the origin endpoint, and and must be unique\
              \ for your account in the AWS Region and channel."
          title: OriginEndpointName
        ContainerType:
          allOf:
          - $ref: '#/components/schemas/ContainerType'
          - description: The type of container attached to this origin endpoint.
          title: ContainerType
        Segment:
          $ref: '#/components/schemas/Segment'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the origin endpoint was created.
          title: CreatedAt
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the origin endpoint was modified.
          title: ModifiedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: The description for your origin endpoint.
          title: Description
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The size of the window (in seconds) to create a window of
              the live stream that's available for on-demand viewing. Viewers can
              start-over or catch-up on content that falls within the window.
          title: StartoverWindowSeconds
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/GetHlsManifests'
          - description: An HTTP live streaming (HLS) manifest configuration.
          title: HlsManifests
        LowLatencyHlsManifests:
          allOf:
          - $ref: '#/components/schemas/GetLowLatencyHlsManifests'
          - description: A low-latency HLS manifest configuration.
          title: LowLatencyHlsManifests
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The comma-separated list of tag key:value pairs assigned
              to the origin endpoint.
          title: Tags
      required:
      - Arn
      - ChannelGroupName
      - ChannelName
      - ContainerType
      - CreatedAt
      - ModifiedAt
      - OriginEndpointName
      - Segment
      title: GetOriginEndpointResponse
      type: object
    GetOriginEndpointPolicyResponse:
      example:
        Policy: ""
        ChannelName: ""
        OriginEndpointName: ""
        ChannelGroupName: ""
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel group. The name is the\
              \ primary identifier for the channel group, and must be unique for your\
              \ account in the AWS Region."
          title: ChannelGroupName
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel. The name is the primary\
              \ identifier for the channel, and must be unique for your account in\
              \ the AWS Region and channel group."
          title: ChannelName
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the origin endpoint. The name is\
              \ the primary identifier for the origin endpoint, and and must be unique\
              \ for your account in the AWS Region and channel."
          title: OriginEndpointName
        Policy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The policy assigned to the origin endpoint.
          title: Policy
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - Policy
      title: GetOriginEndpointPolicyResponse
      type: object
    ListChannelGroupsResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/ChannelGroupsList'
          - description: The objects being returned.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token from the GET list request. Use the token
              to fetch the next page of results.
          title: NextToken
      title: ListChannelGroupsResponse
      type: object
    ListChannelsResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/ChannelList'
          - description: The objects being returned.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token from the GET list request.
          title: NextToken
      title: ListChannelsResponse
      type: object
    ListOriginEndpointsResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/OriginEndpointsList'
          - description: The objects being returned.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token from the GET list request. Use the token
              to fetch the next page of results.
          title: NextToken
      title: ListOriginEndpointsResponse
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: Contains a map of the key-value pairs for the resource tag
              or tags assigned to the resource.
            xml:
              name: tags
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    PutChannelPolicyResponse:
      properties: {}
      type: object
    PutOriginEndpointPolicyResponse:
      properties: {}
      type: object
    TagKey:
      title: TagKey
      type: string
    UpdateChannelResponse:
      example:
        ModifiedAt: ""
        ChannelName: ""
        Description: ""
        IngestEndpoints:
        - Id: ""
          Url: ""
        - Id: ""
          Url: ""
        CreatedAt: ""
        ChannelGroupName: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) associated with the resource.
          title: Arn
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel. The name is the primary\
              \ identifier for the channel, and must be unique for your account in\
              \ the AWS Region and channel group."
          title: ChannelName
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel group. The name is the\
              \ primary identifier for the channel group, and must be unique for your\
              \ account in the AWS Region."
          title: ChannelGroupName
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel was created.
          title: CreatedAt
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel was modified.
          title: ModifiedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description for your channel.
          title: Description
        IngestEndpoints:
          description: The list of ingest endpoints.
          items:
            $ref: '#/components/schemas/IngestEndpoint'
          title: IngestEndpoints
          type: array
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The comma-separated list of tag key:value pairs assigned
              to the channel.
            xml:
              name: tags
          title: Tags
      required:
      - Arn
      - ChannelGroupName
      - ChannelName
      - CreatedAt
      - ModifiedAt
      title: UpdateChannelResponse
      type: object
    UpdateChannelGroupResponse:
      example:
        ModifiedAt: ""
        Description: ""
        CreatedAt: ""
        ChannelGroupName: ""
        Arn: ""
        Tags: ""
        EgressDomain: ""
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel group. The name is the\
              \ primary identifier for the channel group, and must be unique for your\
              \ account in the AWS Region."
          title: ChannelGroupName
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) associated with the resource.
          title: Arn
        EgressDomain:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The output domain where the source stream is sent. Integrate
              the domain with a downstream CDN (such as Amazon CloudFront) or playback
              device.
          title: EgressDomain
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel group was created.
          title: CreatedAt
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel group was modified.
          title: ModifiedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description for your channel group.
          title: Description
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The comma-separated list of tag key:value pairs assigned
              to the channel group.
            xml:
              name: tags
          title: Tags
      required:
      - Arn
      - ChannelGroupName
      - CreatedAt
      - EgressDomain
      - ModifiedAt
      title: UpdateChannelGroupResponse
      type: object
    UpdateOriginEndpointResponse:
      example:
        Description: ""
        LowLatencyHlsManifests: ""
        ContainerType: ""
        CreatedAt: ""
        HlsManifests: ""
        Segment:
          SegmentName: ""
          TsUseAudioRenditionGroup: ""
          IncludeIframeOnlyStreams: ""
          Scte:
            ScteFilter: ""
          TsIncludeDvbSubtitles: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              DrmSystems: ""
              ResourceId: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
            EncryptionMethod:
              CmafEncryptionMethod: ""
              TsEncryptionMethod: ""
        ModifiedAt: ""
        ChannelName: ""
        OriginEndpointName: ""
        ChannelGroupName: ""
        Arn: ""
        Tags: ""
        StartoverWindowSeconds: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN associated with the resource.
          title: Arn
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name that describes the channel group. The name is the\
              \ primary identifier for the channel group, and must be unique for your\
              \ account in the AWS Region."
          title: ChannelGroupName
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name that describes the channel. The name is the primary\
              \ identifier for the channel, and must be unique for your account in\
              \ the AWS Region and channel group."
          title: ChannelName
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name that describes the origin endpoint. The name is\
              \ the primary identifier for the origin endpoint, and and must be unique\
              \ for your account in the AWS Region and channel."
          title: OriginEndpointName
        ContainerType:
          allOf:
          - $ref: '#/components/schemas/ContainerType'
          - description: The type of container attached to this origin endpoint.
          title: ContainerType
        Segment:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Segment'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the origin endpoint was created.
          title: CreatedAt
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the origin endpoint was modified.
          title: ModifiedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: The description of the origin endpoint.
          title: Description
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The size of the window (in seconds) to create a window of
              the live stream that's available for on-demand viewing. Viewers can
              start-over or catch-up on content that falls within the window.
          title: StartoverWindowSeconds
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/GetHlsManifests'
          - description: An HTTP live streaming (HLS) manifest configuration.
          title: HlsManifests
        LowLatencyHlsManifests:
          allOf:
          - $ref: '#/components/schemas/GetLowLatencyHlsManifests'
          - description: A low-latency HLS manifest configuration.
          title: LowLatencyHlsManifests
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The comma-separated list of tag key:value pairs assigned
              to the origin endpoint.
            xml:
              name: tags
          title: Tags
      required:
      - Arn
      - ChannelGroupName
      - ChannelName
      - ContainerType
      - CreatedAt
      - ModifiedAt
      - OriginEndpointName
      - Segment
      title: UpdateOriginEndpointResponse
      type: object
    AdMarkerHls:
      enum:
      - DATERANGE
      title: AdMarkerHls
      type: string
    String:
      type: string
    Timestamp:
      format: date-time
      type: string
    ChannelGroupListConfiguration:
      description: The configuration of the channel group.
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel group. The name is the\
              \ primary identifier for the channel group, and must be unique for your\
              \ account in the AWS Region."
          title: ChannelGroupName
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) associated with the resource.
          title: Arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel group was created.
          title: CreatedAt
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel group was modified.
          title: ModifiedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Any descriptive information that you want to add to the channel
              group for future identification purposes.
          title: Description
      required:
      - Arn
      - ChannelGroupName
      - CreatedAt
      - ModifiedAt
      title: ChannelGroupListConfiguration
      type: object
    ChannelGroupsList:
      items:
        $ref: '#/components/schemas/ChannelGroupListConfiguration'
      type: array
    ChannelListConfiguration:
      description: The configuration of the channel.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) associated with the resource.
          title: Arn
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel. The name is the primary\
              \ identifier for the channel, and must be unique for your account in\
              \ the AWS Region and channel group. "
          title: ChannelName
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name that describes the channel group. The name is the\
              \ primary identifier for the channel group, and must be unique for your\
              \ account in the AWS Region."
          title: ChannelGroupName
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel was created.
          title: CreatedAt
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the channel was modified.
          title: ModifiedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Any descriptive information that you want to add to the channel
              for future identification purposes.
          title: Description
      required:
      - Arn
      - ChannelGroupName
      - ChannelName
      - CreatedAt
      - ModifiedAt
      title: ChannelListConfiguration
      type: object
    ChannelList:
      items:
        $ref: '#/components/schemas/ChannelListConfiguration'
      type: array
    CmafEncryptionMethod:
      enum:
      - CENC
      - CBCS
      title: CmafEncryptionMethod
      type: string
    ContainerType:
      enum:
      - TS
      - CMAF
      title: ContainerType
      type: string
    ResourceName:
      maxLength: 256
      minLength: 1
      pattern: "[a-zA-Z0-9_-]+"
      type: string
    IdempotencyToken:
      maxLength: 256
      minLength: 1
      pattern: "[\\S]+"
      type: string
    ResourceDescription:
      maxLength: 1024
      minLength: 0
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      type: object
    CreateChannelGroupRequest:
      example:
        Description: ""
        ChannelGroupName: ""
        Tags: ""
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name that describes the channel group. The name is the\
              \ primary identifier for the channel group, and must be unique for your\
              \ account in the AWS Region. You can't use spaces in the name. You can't\
              \ change the name after you create the channel group."
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: Enter any descriptive text that helps you to identify the
              channel group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>A comma-separated list of tag key:value pairs that you\
              \ define. For example:</p> <p> <code>\"Key1\": \"Value1\",</code> </p>\
              \ <p> <code>\"Key2\": \"Value2\"</code> </p>"
            xml:
              name: tags
      required:
      - ChannelGroupName
      title: CreateChannelGroupRequest
      type: object
    CreateChannelRequest:
      example:
        ChannelName: ""
        Description: ""
        Tags: ""
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name that describes the channel. The name is the primary\
              \ identifier for the channel, and must be unique for your account in\
              \ the AWS Region and channel group. You can't change the name after\
              \ you create the channel."
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: Enter any descriptive text that helps you to identify the
              channel.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>A comma-separated list of tag key:value pairs that you\
              \ define. For example:</p> <p> <code>\"Key1\": \"Value1\",</code> </p>\
              \ <p> <code>\"Key2\": \"Value2\"</code> </p>"
            xml:
              name: tags
      required:
      - ChannelName
      title: CreateChannelRequest
      type: object
    IngestEndpointList:
      description: The list of ingest endpoints.
      items:
        $ref: '#/components/schemas/IngestEndpoint'
      title: IngestEndpoints
      type: array
    ManifestName:
      maxLength: 256
      minLength: 1
      pattern: "[a-zA-Z0-9-]+"
      type: string
    ScteHls:
      description: The SCTE configuration.
      properties:
        AdMarkerHls:
          allOf:
          - $ref: '#/components/schemas/AdMarkerHls'
          - description: "<p>Ad markers indicate when ads should be inserted during\
              \ playback. If you include ad markers in the content stream in your\
              \ upstream encoders, then you need to inform MediaPackage what to do\
              \ with the ad markers in the output. Choose what you want MediaPackage\
              \ to do with the ad markers.</p> <p>Value description: </p> <ul> <li>\
              \ <p>DATERANGE - Insert EXT-X-DATERANGE tags to signal ad and program\
              \ transition events in TS and CMAF manifests. If you use DATERANGE,\
              \ you must set a programDateTimeIntervalSeconds value of 1 or higher.\
              \ To learn more about DATERANGE, see <a href=\"http://docs.aws.amazon.com/mediapackage/latest/ug/scte-35-ad-marker-ext-x-daterange.html\"\
              >SCTE-35 Ad Marker EXT-X-DATERANGE</a>.</p> </li> </ul>"
          title: AdMarkerHls
      title: ScteHls
      type: object
    CreateHlsManifestConfigurationManifestWindowSecondsInteger:
      maximum: 900
      minimum: 30
      type: integer
    CreateHlsManifestConfigurationProgramDateTimeIntervalSecondsInteger:
      maximum: 1209600
      minimum: 1
      type: integer
    CreateHlsManifests:
      items:
        $ref: '#/components/schemas/CreateHlsManifestConfiguration'
      type: array
    CreateLowLatencyHlsManifestConfigurationManifestWindowSecondsInteger:
      maximum: 900
      minimum: 30
      type: integer
    CreateLowLatencyHlsManifestConfigurationProgramDateTimeIntervalSecondsInteger:
      maximum: 1209600
      minimum: 1
      type: integer
    CreateLowLatencyHlsManifests:
      items:
        $ref: '#/components/schemas/CreateLowLatencyHlsManifestConfiguration'
      type: array
    Segment:
      description: "The segment configuration, including the segment name, duration,\
        \ and other configuration values."
      example:
        SegmentName: ""
        TsUseAudioRenditionGroup: ""
        IncludeIframeOnlyStreams: ""
        Scte:
          ScteFilter: ""
        TsIncludeDvbSubtitles: ""
        SegmentDurationSeconds: ""
        Encryption:
          KeyRotationIntervalSeconds: ""
          ConstantInitializationVector: ""
          SpekeKeyProvider:
            DrmSystems: ""
            ResourceId: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
          EncryptionMethod:
            CmafEncryptionMethod: ""
            TsEncryptionMethod: ""
      properties:
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/SegmentSegmentDurationSecondsInteger'
          - description: "The duration (in seconds) of each segment. Enter a value\
              \ equal to, or a multiple of, the input segment duration. If the value\
              \ that you enter is different from the input segment duration, MediaPackage\
              \ rounds segments to the nearest multiple of the input segment duration."
          title: SegmentDurationSeconds
        SegmentName:
          allOf:
          - $ref: '#/components/schemas/SegmentSegmentNameString'
          - description: The name that describes the segment. The name is the base
              name of the segment used in all content manifests inside of the endpoint.
              You can't use spaces in the name.
          title: SegmentName
        TsUseAudioRenditionGroup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "When selected, MediaPackage bundles all audio tracks in\
              \ a rendition group. All other tracks in the stream can be used with\
              \ any audio rendition from the group."
          title: TsUseAudioRenditionGroup
        IncludeIframeOnlyStreams:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "When selected, the stream set includes an additional I-frame\
              \ only stream, along with the other tracks. If false, this extra stream\
              \ is not included. MediaPackage generates an I-frame only stream from\
              \ the first rendition in the manifest. The service inserts EXT-I-FRAMES-ONLY\
              \ tags in the output manifest, and then generates and includes an I-frames\
              \ only playlist in the stream. This playlist permits player functionality\
              \ like fast forward and rewind."
          title: IncludeIframeOnlyStreams
        TsIncludeDvbSubtitles:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "By default, MediaPackage excludes all digital video broadcasting\
              \ (DVB) subtitles from the output. When selected, MediaPackage passes\
              \ through DVB subtitles into the output."
          title: TsIncludeDvbSubtitles
        Scte:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_Segment_Scte'
        Encryption:
          $ref: '#/components/schemas/Encryption'
      title: Segment
      type: object
    CreateOriginEndpointRequestStartoverWindowSecondsInteger:
      maximum: 1209600
      minimum: 60
      type: integer
    CreateOriginEndpointRequest:
      example:
        Description: ""
        LowLatencyHlsManifests: ""
        ContainerType: ""
        OriginEndpointName: ""
        HlsManifests: ""
        Segment:
          SegmentName: ""
          TsUseAudioRenditionGroup: ""
          IncludeIframeOnlyStreams: ""
          Scte:
            ScteFilter: ""
          TsIncludeDvbSubtitles: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              DrmSystems: ""
              ResourceId: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
            EncryptionMethod:
              CmafEncryptionMethod: ""
              TsEncryptionMethod: ""
        Tags: ""
        StartoverWindowSeconds: ""
      properties:
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name that describes the origin endpoint. The name is\
              \ the primary identifier for the origin endpoint, and must be unique\
              \ for your account in the AWS Region and channel. You can't use spaces\
              \ in the name. You can't change the name after you create the endpoint."
        ContainerType:
          allOf:
          - $ref: '#/components/schemas/ContainerType'
          - description: "The type of container to attach to this origin endpoint.\
              \ A container type is a file format that encapsulates one or more media\
              \ streams, such as audio and video, into a single file. You can't change\
              \ the container type after you create the endpoint."
        Segment:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Segment'
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: Enter any descriptive text that helps you to identify the
              origin endpoint.
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/CreateOriginEndpointRequestStartoverWindowSecondsInteger'
          - description: "The size of the window (in seconds) to create a window of\
              \ the live stream that's available for on-demand viewing. Viewers can\
              \ start-over or catch-up on content that falls within the window. The\
              \ maximum startover window is 1,209,600 seconds (14 days)."
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/CreateHlsManifests'
          - description: An HTTP live streaming (HLS) manifest configuration.
        LowLatencyHlsManifests:
          allOf:
          - $ref: '#/components/schemas/CreateLowLatencyHlsManifests'
          - description: A low-latency HLS manifest configuration.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>A comma-separated list of tag key:value pairs that you\
              \ define. For example:</p> <p> <code>\"Key1\": \"Value1\",</code> </p>\
              \ <p> <code>\"Key2\": \"Value2\"</code> </p>"
      required:
      - ContainerType
      - OriginEndpointName
      title: CreateOriginEndpointRequest
      type: object
    Integer:
      type: integer
    GetHlsManifests:
      items:
        $ref: '#/components/schemas/GetHlsManifestConfiguration'
      type: array
    GetLowLatencyHlsManifests:
      items:
        $ref: '#/components/schemas/GetLowLatencyHlsManifestConfiguration'
      type: array
    DeleteChannelGroupRequest:
      properties: {}
      title: DeleteChannelGroupRequest
      type: object
    DeleteChannelPolicyRequest:
      properties: {}
      title: DeleteChannelPolicyRequest
      type: object
    DeleteChannelRequest:
      properties: {}
      title: DeleteChannelRequest
      type: object
    DeleteOriginEndpointPolicyRequest:
      properties: {}
      title: DeleteOriginEndpointPolicyRequest
      type: object
    DeleteOriginEndpointRequest:
      properties: {}
      title: DeleteOriginEndpointRequest
      type: object
    DrmSystem:
      enum:
      - CLEAR_KEY_AES_128
      - FAIRPLAY
      - PLAYREADY
      - WIDEVINE
      title: DrmSystem
      type: string
    EncryptionConstantInitializationVectorString:
      maxLength: 32
      minLength: 32
      pattern: "[0-9a-fA-F]+"
      type: string
    EncryptionMethod:
      description: The encryption type.
      properties:
        TsEncryptionMethod:
          allOf:
          - $ref: '#/components/schemas/TsEncryptionMethod'
          - description: The encryption method to use.
          title: TsEncryptionMethod
        CmafEncryptionMethod:
          allOf:
          - $ref: '#/components/schemas/CmafEncryptionMethod'
          - description: The encryption method to use.
          title: CmafEncryptionMethod
      title: EncryptionMethod
      type: object
    EncryptionKeyRotationIntervalSecondsInteger:
      maximum: 31536000
      minimum: 300
      type: integer
    SpekeKeyProvider:
      description: The parameters for the SPEKE key provider.
      properties:
        EncryptionContractConfiguration:
          $ref: '#/components/schemas/SpekeKeyProvider_EncryptionContractConfiguration'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/SpekeKeyProviderResourceIdString'
          - description: "<p>The unique identifier for the content. The service sends\
              \ this to the key server to identify the current endpoint. How unique\
              \ you make this depends on how fine-grained you want access controls\
              \ to be. The service does not permit you to use the same ID for two\
              \ simultaneous encryption processes. The resource ID is also known as\
              \ the content ID.</p> <p>The following example shows a resource ID:\
              \ <code>MovieNight20171126093045</code> </p>"
          title: ResourceId
        DrmSystems:
          allOf:
          - $ref: '#/components/schemas/SpekeKeyProviderDrmSystemsList'
          - description: The DRM solution provider you're using to protect your content
              during distribution.
          title: DrmSystems
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/SpekeKeyProviderRoleArnString'
          - description: "<p>The ARN for the IAM role granted by the key provider\
              \ that provides access to the key provider API. This role must have\
              \ a trust policy that allows MediaPackage to assume the role, and it\
              \ must have a sufficient permissions policy to allow access to the specific\
              \ key retrieval URL. Get this from your DRM solution provider.</p> <p>Valid\
              \ format: <code>arn:aws:iam::{accountID}:role/{name}</code>. The following\
              \ example shows a role ARN: <code>arn:aws:iam::444455556666:role/SpekeAccess</code>\
              \ </p>"
          title: RoleArn
        Url:
          allOf:
          - $ref: '#/components/schemas/SpekeKeyProviderUrlString'
          - description: "<p>The URL of the API Gateway proxy that you set up to talk\
              \ to your key server. The API Gateway proxy must reside in the same\
              \ AWS Region as MediaPackage and must start with https://.</p> <p>The\
              \ following example shows a URL: <code>https://1wm2dx1f33.execute-api.us-west-2.amazonaws.com/SpekeSample/copyProtection</code>\
              \ </p>"
          title: Url
      required:
      - DrmSystems
      - EncryptionContractConfiguration
      - ResourceId
      - RoleArn
      - Url
      title: SpekeKeyProvider
      type: object
    PresetSpeke20Audio:
      enum:
      - PRESET_AUDIO_1
      - PRESET_AUDIO_2
      - PRESET_AUDIO_3
      - SHARED
      - UNENCRYPTED
      title: PresetSpeke20Audio
      type: string
    PresetSpeke20Video:
      enum:
      - PRESET_VIDEO_1
      - PRESET_VIDEO_2
      - PRESET_VIDEO_3
      - PRESET_VIDEO_4
      - PRESET_VIDEO_5
      - PRESET_VIDEO_6
      - PRESET_VIDEO_7
      - PRESET_VIDEO_8
      - SHARED
      - UNENCRYPTED
      title: PresetSpeke20Video
      type: string
    EncryptionContractConfiguration:
      description: "Configure one or more content encryption keys for your endpoints\
        \ that use SPEKE Version 2.0. The encryption contract defines which content\
        \ keys are used to encrypt the audio and video tracks in your stream. To configure\
        \ the encryption contract, specify which audio and video encryption presets\
        \ to use."
      properties:
        PresetSpeke20Audio:
          allOf:
          - $ref: '#/components/schemas/PresetSpeke20Audio'
          - description: "<p>A collection of audio encryption presets.</p> <p>Value\
              \ description: </p> <ul> <li> <p>PRESET-AUDIO-1 - Use one content key\
              \ to encrypt all of the audio tracks in your stream.</p> </li> <li>\
              \ <p>PRESET-AUDIO-2 - Use one content key to encrypt all of the stereo\
              \ audio tracks and one content key to encrypt all of the multichannel\
              \ audio tracks.</p> </li> <li> <p>PRESET-AUDIO-3 - Use one content key\
              \ to encrypt all of the stereo audio tracks, one content key to encrypt\
              \ all of the multichannel audio tracks with 3 to 6 channels, and one\
              \ content key to encrypt all of the multichannel audio tracks with more\
              \ than 6 channels.</p> </li> <li> <p>SHARED - Use the same content key\
              \ for all of the audio and video tracks in your stream.</p> </li> <li>\
              \ <p>UNENCRYPTED - Don't encrypt any of the audio tracks in your stream.</p>\
              \ </li> </ul>"
          title: PresetSpeke20Audio
        PresetSpeke20Video:
          allOf:
          - $ref: '#/components/schemas/PresetSpeke20Video'
          - description: "<p>A collection of video encryption presets.</p> <p>Value\
              \ description: </p> <ul> <li> <p>PRESET-VIDEO-1 - Use one content key\
              \ to encrypt all of the video tracks in your stream.</p> </li> <li>\
              \ <p>PRESET-VIDEO-2 - Use one content key to encrypt all of the SD video\
              \ tracks and one content key for all HD and higher resolutions video\
              \ tracks.</p> </li> <li> <p>PRESET-VIDEO-3 - Use one content key to\
              \ encrypt all of the SD video tracks, one content key for HD video tracks\
              \ and one content key for all UHD video tracks.</p> </li> <li> <p>PRESET-VIDEO-4\
              \ - Use one content key to encrypt all of the SD video tracks, one content\
              \ key for HD video tracks, one content key for all UHD1 video tracks\
              \ and one content key for all UHD2 video tracks.</p> </li> <li> <p>PRESET-VIDEO-5\
              \ - Use one content key to encrypt all of the SD video tracks, one content\
              \ key for HD1 video tracks, one content key for HD2 video tracks, one\
              \ content key for all UHD1 video tracks and one content key for all\
              \ UHD2 video tracks.</p> </li> <li> <p>PRESET-VIDEO-6 - Use one content\
              \ key to encrypt all of the SD video tracks, one content key for HD1\
              \ video tracks, one content key for HD2 video tracks and one content\
              \ key for all UHD video tracks.</p> </li> <li> <p>PRESET-VIDEO-7 - Use\
              \ one content key to encrypt all of the SD+HD1 video tracks, one content\
              \ key for HD2 video tracks and one content key for all UHD video tracks.</p>\
              \ </li> <li> <p>PRESET-VIDEO-8 - Use one content key to encrypt all\
              \ of the SD+HD1 video tracks, one content key for HD2 video tracks,\
              \ one content key for all UHD1 video tracks and one content key for\
              \ all UHD2 video tracks.</p> </li> <li> <p>SHARED - Use the same content\
              \ key for all of the video and audio tracks in your stream.</p> </li>\
              \ <li> <p>UNENCRYPTED - Don't encrypt any of the video tracks in your\
              \ stream.</p> </li> </ul>"
          title: PresetSpeke20Video
      required:
      - PresetSpeke20Audio
      - PresetSpeke20Video
      title: EncryptionContractConfiguration
      type: object
    TsEncryptionMethod:
      enum:
      - AES_128
      - SAMPLE_AES
      title: TsEncryptionMethod
      type: string
    GetChannelGroupRequest:
      properties: {}
      title: GetChannelGroupRequest
      type: object
    GetChannelPolicyRequest:
      properties: {}
      title: GetChannelPolicyRequest
      type: object
    GetChannelRequest:
      properties: {}
      title: GetChannelRequest
      type: object
    GetHlsManifestConfiguration:
      description: Retrieve the HTTP live streaming (HLS) manifest configuration.
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "A short short string that's appended to the endpoint URL.\
              \ The manifest name creates a unique path to this endpoint. If you don't\
              \ enter a value, MediaPackage uses the default manifest name, index.\
              \ MediaPackage automatically inserts the format extension, such as .m3u8.\
              \ You can't use the same manifest name if you use HLS manifest and low-latency\
              \ HLS manifest. The manifestName on the HLSManifest object overrides\
              \ the manifestName you provided on the originEndpoint object."
          title: ManifestName
        Url:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The egress domain URL for stream delivery from MediaPackage.
          title: Url
        ChildManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "A short string that's appended to the endpoint URL. The\
              \ child manifest name creates a unique path to this endpoint. If you\
              \ don't enter a value, MediaPackage uses the default child manifest\
              \ name, index_1. The manifestName on the HLSManifest object overrides\
              \ the manifestName you provided on the originEndpoint object."
          title: ChildManifestName
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total duration (in seconds) of the manifest's content.
          title: ManifestWindowSeconds
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>Inserts EXT-X-PROGRAM-DATE-TIME tags in the output manifest\
              \ at the interval that you specify. If you don't enter an interval,\
              \ EXT-X-PROGRAM-DATE-TIME tags aren't included in the manifest. The\
              \ tags sync the stream to the wall clock so that viewers can seek to\
              \ a specific time in the playback timeline on the player. ID3Timed metadata\
              \ messages generate every 5 seconds whenever the content is ingested.</p>\
              \ <p>Irrespective of this parameter, if any ID3Timed metadata is in\
              \ the HLS input, it is passed through to the HLS output.</p>"
          title: ProgramDateTimeIntervalSeconds
        ScteHls:
          $ref: '#/components/schemas/ScteHls'
      required:
      - ManifestName
      - Url
      title: GetHlsManifestConfiguration
      type: object
    GetLowLatencyHlsManifestConfiguration:
      description: Retrieve the low-latency HTTP live streaming (HLS) manifest configuration.
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "A short short string that's appended to the endpoint URL.\
              \ The manifest name creates a unique path to this endpoint. If you don't\
              \ enter a value, MediaPackage uses the default manifest name, index.\
              \ MediaPackage automatically inserts the format extension, such as .m3u8.\
              \ You can't use the same manifest name if you use HLS manifest and low-latency\
              \ HLS manifest. The manifestName on the HLSManifest object overrides\
              \ the manifestName you provided on the originEndpoint object."
          title: ManifestName
        Url:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The egress domain URL for stream delivery from MediaPackage.
          title: Url
        ChildManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "A short string that's appended to the endpoint URL. The\
              \ child manifest name creates a unique path to this endpoint. If you\
              \ don't enter a value, MediaPackage uses the default child manifest\
              \ name, index_1. The manifestName on the HLSManifest object overrides\
              \ the manifestName you provided on the originEndpoint object."
          title: ChildManifestName
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total duration (in seconds) of the manifest's content.
          title: ManifestWindowSeconds
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>Inserts EXT-X-PROGRAM-DATE-TIME tags in the output manifest\
              \ at the interval that you specify. If you don't enter an interval,\
              \ EXT-X-PROGRAM-DATE-TIME tags aren't included in the manifest. The\
              \ tags sync the stream to the wall clock so that viewers can seek to\
              \ a specific time in the playback timeline on the player. ID3Timed metadata\
              \ messages generate every 5 seconds whenever the content is ingested.</p>\
              \ <p>Irrespective of this parameter, if any ID3Timed metadata is in\
              \ the HLS input, it is passed through to the HLS output.</p>"
          title: ProgramDateTimeIntervalSeconds
        ScteHls:
          $ref: '#/components/schemas/ScteHls'
      required:
      - ManifestName
      - Url
      title: GetLowLatencyHlsManifestConfiguration
      type: object
    GetOriginEndpointPolicyRequest:
      properties: {}
      title: GetOriginEndpointPolicyRequest
      type: object
    GetOriginEndpointRequest:
      properties: {}
      title: GetOriginEndpointRequest
      type: object
    IngestEndpoint:
      description: The ingest domain URL where the source stream should be sent.
      example:
        Id: ""
        Url: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The system-generated unique identifier for the IngestEndpoint.
          title: Id
        Url:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ingest domain URL where the source stream should be sent.
          title: Url
      title: IngestEndpoint
      type: object
    ListResourceMaxResults:
      maximum: 100
      minimum: 1
      type: integer
    ListChannelGroupsRequest:
      properties: {}
      title: ListChannelGroupsRequest
      type: object
    ListChannelsRequest:
      properties: {}
      title: ListChannelsRequest
      type: object
    ListHlsManifestConfiguration:
      description: List the HTTP live streaming (HLS) manifest configuration.
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "A short short string that's appended to the endpoint URL.\
              \ The manifest name creates a unique path to this endpoint. If you don't\
              \ enter a value, MediaPackage uses the default manifest name, index.\
              \ MediaPackage automatically inserts the format extension, such as .m3u8.\
              \ You can't use the same manifest name if you use HLS manifest and low-latency\
              \ HLS manifest. The manifestName on the HLSManifest object overrides\
              \ the manifestName you provided on the originEndpoint object."
          title: ManifestName
        ChildManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "A short string that's appended to the endpoint URL. The\
              \ child manifest name creates a unique path to this endpoint. If you\
              \ don't enter a value, MediaPackage uses the default child manifest\
              \ name, index_1. The manifestName on the HLSManifest object overrides\
              \ the manifestName you provided on the originEndpoint object."
          title: ChildManifestName
        Url:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The egress domain URL for stream delivery from MediaPackage.
          title: Url
      required:
      - ManifestName
      title: ListHlsManifestConfiguration
      type: object
    ListHlsManifests:
      items:
        $ref: '#/components/schemas/ListHlsManifestConfiguration'
      type: array
    ListLowLatencyHlsManifestConfiguration:
      description: List the low-latency HTTP live streaming (HLS) manifest configuration.
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "A short short string that's appended to the endpoint URL.\
              \ The manifest name creates a unique path to this endpoint. If you don't\
              \ enter a value, MediaPackage uses the default manifest name, index.\
              \ MediaPackage automatically inserts the format extension, such as .m3u8.\
              \ You can't use the same manifest name if you use HLS manifest and low-latency\
              \ HLS manifest. The manifestName on the HLSManifest object overrides\
              \ the manifestName you provided on the originEndpoint object."
          title: ManifestName
        ChildManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "A short string that's appended to the endpoint URL. The\
              \ child manifest name creates a unique path to this endpoint. If you\
              \ don't enter a value, MediaPackage uses the default child manifest\
              \ name, index_1. The manifestName on the HLSManifest object overrides\
              \ the manifestName you provided on the originEndpoint object."
          title: ChildManifestName
        Url:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The egress domain URL for stream delivery from MediaPackage.
          title: Url
      required:
      - ManifestName
      title: ListLowLatencyHlsManifestConfiguration
      type: object
    ListLowLatencyHlsManifests:
      items:
        $ref: '#/components/schemas/ListLowLatencyHlsManifestConfiguration'
      type: array
    ListOriginEndpointsRequest:
      properties: {}
      title: ListOriginEndpointsRequest
      type: object
    OriginEndpointsList:
      items:
        $ref: '#/components/schemas/OriginEndpointListConfiguration'
      type: array
    TagArn:
      type: string
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    OriginEndpointListConfiguration:
      description: The configuration of the origin endpoint.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) associated with the resource.
          title: Arn
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name that describes the channel group. The name is the\
              \ primary identifier for the channel group, and must be unique for your\
              \ account in the AWS Region."
          title: ChannelGroupName
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name that describes the channel. The name is the primary\
              \ identifier for the channel, and must be unique for your account in\
              \ the AWS Region and channel group. "
          title: ChannelName
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: "The name that describes the origin endpoint. The name is\
              \ the primary identifier for the origin endpoint, and and must be unique\
              \ for your account in the AWS Region and channel. "
          title: OriginEndpointName
        ContainerType:
          allOf:
          - $ref: '#/components/schemas/ContainerType'
          - description: "The type of container attached to this origin endpoint.\
              \ A container type is a file format that encapsulates one or more media\
              \ streams, such as audio and video, into a single file. "
          title: ContainerType
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: Any descriptive information that you want to add to the origin
              endpoint for future identification purposes.
          title: Description
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the origin endpoint was created.
          title: CreatedAt
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the origin endpoint was modified.
          title: ModifiedAt
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/ListHlsManifests'
          - description: An HTTP live streaming (HLS) manifest configuration.
          title: HlsManifests
        LowLatencyHlsManifests:
          allOf:
          - $ref: '#/components/schemas/ListLowLatencyHlsManifests'
          - description: A low-latency HLS manifest configuration.
          title: LowLatencyHlsManifests
      required:
      - Arn
      - ChannelGroupName
      - ChannelName
      - ContainerType
      - OriginEndpointName
      title: OriginEndpointListConfiguration
      type: object
    PolicyText:
      maxLength: 6144
      minLength: 0
      type: string
    PutChannelPolicyRequest:
      example:
        Policy: ""
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/PolicyText'
          - description: The policy to attach to the specified channel.
      required:
      - Policy
      title: PutChannelPolicyRequest
      type: object
    PutOriginEndpointPolicyRequest:
      example:
        Policy: ""
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/PolicyText'
          - description: The policy to attach to the specified origin endpoint.
      required:
      - Policy
      title: PutOriginEndpointPolicyRequest
      type: object
    ScteFilterList:
      items:
        $ref: '#/components/schemas/ScteFilter'
      maxItems: 100
      minItems: 0
      type: array
    ScteFilter:
      enum:
      - SPLICE_INSERT
      - BREAK
      - PROVIDER_ADVERTISEMENT
      - DISTRIBUTOR_ADVERTISEMENT
      - PROVIDER_PLACEMENT_OPPORTUNITY
      - DISTRIBUTOR_PLACEMENT_OPPORTUNITY
      - PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY
      - DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY
      - PROGRAM
      title: ScteFilter
      type: string
    SpekeKeyProviderResourceIdString:
      maxLength: 256
      minLength: 1
      pattern: "[0-9a-zA-Z_-]+"
      type: string
    SpekeKeyProviderDrmSystemsList:
      items:
        $ref: '#/components/schemas/DrmSystem'
      maxItems: 4
      minItems: 1
      type: array
    SpekeKeyProviderRoleArnString:
      maxLength: 2048
      minLength: 1
      type: string
    SpekeKeyProviderUrlString:
      maxLength: 1024
      minLength: 1
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: Contains a map of the key-value pairs for the resource tag
              or tags assigned to the resource.
            xml:
              name: tags
      required:
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateChannelGroupRequest:
      example:
        Description: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: Any descriptive information that you want to add to the channel
              group for future identification purposes.
      title: UpdateChannelGroupRequest
      type: object
    UpdateChannelRequest:
      example:
        Description: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: Any descriptive information that you want to add to the channel
              for future identification purposes.
      title: UpdateChannelRequest
      type: object
    UpdateOriginEndpointRequestStartoverWindowSecondsInteger:
      maximum: 1209600
      minimum: 60
      type: integer
    UpdateOriginEndpointRequest:
      example:
        Description: ""
        LowLatencyHlsManifests: ""
        ContainerType: ""
        HlsManifests: ""
        Segment:
          SegmentName: ""
          TsUseAudioRenditionGroup: ""
          IncludeIframeOnlyStreams: ""
          Scte:
            ScteFilter: ""
          TsIncludeDvbSubtitles: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              DrmSystems: ""
              ResourceId: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
            EncryptionMethod:
              CmafEncryptionMethod: ""
              TsEncryptionMethod: ""
        StartoverWindowSeconds: ""
      properties:
        ContainerType:
          allOf:
          - $ref: '#/components/schemas/ContainerType'
          - description: "The type of container attached to this origin endpoint.\
              \ A container type is a file format that encapsulates one or more media\
              \ streams, such as audio and video, into a single file. "
        Segment:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Segment'
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: Any descriptive information that you want to add to the origin
              endpoint for future identification purposes.
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/UpdateOriginEndpointRequestStartoverWindowSecondsInteger'
          - description: "The size of the window (in seconds) to create a window of\
              \ the live stream that's available for on-demand viewing. Viewers can\
              \ start-over or catch-up on content that falls within the window. The\
              \ maximum startover window is 1,209,600 seconds (14 days)."
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/CreateHlsManifests'
          - description: An HTTP live streaming (HLS) manifest configuration.
        LowLatencyHlsManifests:
          allOf:
          - $ref: '#/components/schemas/CreateLowLatencyHlsManifests'
          - description: A low-latency HLS manifest configuration.
      required:
      - ContainerType
      title: UpdateOriginEndpointRequest
      type: object
    CreateChannel_request:
      properties:
        ChannelName:
          description: "The name that describes the channel. The name is the primary\
            \ identifier for the channel, and must be unique for your account in the\
            \ AWS Region and channel group. You can't change the name after you create\
            \ the channel."
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          title: ChannelName
          type: string
        Description:
          description: Enter any descriptive text that helps you to identify the channel.
          maxLength: 1024
          minLength: 0
          title: Description
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "<p>A comma-separated list of tag key:value pairs that you\
            \ define. For example:</p> <p> <code>\"Key1\": \"Value1\",</code> </p>\
            \ <p> <code>\"Key2\": \"Value2\"</code> </p>"
          title: tags
          type: object
      required:
      - ChannelName
      title: CreateChannel_request
      type: object
    CreateChannelGroup_request:
      properties:
        ChannelGroupName:
          description: "The name that describes the channel group. The name is the\
            \ primary identifier for the channel group, and must be unique for your\
            \ account in the AWS Region. You can't use spaces in the name. You can't\
            \ change the name after you create the channel group."
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          title: ChannelGroupName
          type: string
        Description:
          description: Enter any descriptive text that helps you to identify the channel
            group.
          maxLength: 1024
          minLength: 0
          title: Description
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "<p>A comma-separated list of tag key:value pairs that you\
            \ define. For example:</p> <p> <code>\"Key1\": \"Value1\",</code> </p>\
            \ <p> <code>\"Key2\": \"Value2\"</code> </p>"
          title: tags
          type: object
      required:
      - ChannelGroupName
      title: CreateChannelGroup_request
      type: object
    CreateOriginEndpoint_request_Segment_Scte:
      allOf:
      - $ref: '#/components/schemas/Scte'
      - description: The SCTE configuration options in the segment settings.
      example:
        ScteFilter: ""
      title: CreateOriginEndpoint_request_Segment_Scte
    CreateOriginEndpoint_request_Segment:
      description: "The segment configuration, including the segment name, duration,\
        \ and other configuration values."
      properties:
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/SegmentSegmentDurationSecondsInteger'
          - description: "The duration (in seconds) of each segment. Enter a value\
              \ equal to, or a multiple of, the input segment duration. If the value\
              \ that you enter is different from the input segment duration, MediaPackage\
              \ rounds segments to the nearest multiple of the input segment duration."
          title: SegmentDurationSeconds
        SegmentName:
          allOf:
          - $ref: '#/components/schemas/SegmentSegmentNameString'
          - description: The name that describes the segment. The name is the base
              name of the segment used in all content manifests inside of the endpoint.
              You can't use spaces in the name.
          title: SegmentName
        TsUseAudioRenditionGroup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "When selected, MediaPackage bundles all audio tracks in\
              \ a rendition group. All other tracks in the stream can be used with\
              \ any audio rendition from the group."
          title: TsUseAudioRenditionGroup
        IncludeIframeOnlyStreams:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "When selected, the stream set includes an additional I-frame\
              \ only stream, along with the other tracks. If false, this extra stream\
              \ is not included. MediaPackage generates an I-frame only stream from\
              \ the first rendition in the manifest. The service inserts EXT-I-FRAMES-ONLY\
              \ tags in the output manifest, and then generates and includes an I-frames\
              \ only playlist in the stream. This playlist permits player functionality\
              \ like fast forward and rewind."
          title: IncludeIframeOnlyStreams
        TsIncludeDvbSubtitles:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "By default, MediaPackage excludes all digital video broadcasting\
              \ (DVB) subtitles from the output. When selected, MediaPackage passes\
              \ through DVB subtitles into the output."
          title: TsIncludeDvbSubtitles
        Scte:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_Segment_Scte'
        Encryption:
          $ref: '#/components/schemas/Encryption'
      title: CreateOriginEndpoint_request_Segment
      type: object
    CreateOriginEndpoint_request:
      properties:
        OriginEndpointName:
          description: "The name that describes the origin endpoint. The name is the\
            \ primary identifier for the origin endpoint, and must be unique for your\
            \ account in the AWS Region and channel. You can't use spaces in the name.\
            \ You can't change the name after you create the endpoint."
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          title: OriginEndpointName
          type: string
        ContainerType:
          description: "The type of container to attach to this origin endpoint. A\
            \ container type is a file format that encapsulates one or more media\
            \ streams, such as audio and video, into a single file. You can't change\
            \ the container type after you create the endpoint."
          enum:
          - TS
          - CMAF
          title: ContainerType
          type: string
        Segment:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_Segment'
        Description:
          description: Enter any descriptive text that helps you to identify the origin
            endpoint.
          maxLength: 1024
          minLength: 0
          title: Description
          type: string
        StartoverWindowSeconds:
          description: "The size of the window (in seconds) to create a window of\
            \ the live stream that's available for on-demand viewing. Viewers can\
            \ start-over or catch-up on content that falls within the window. The\
            \ maximum startover window is 1,209,600 seconds (14 days)."
          maximum: 1209600
          minimum: 60
          title: StartoverWindowSeconds
          type: integer
        HlsManifests:
          description: An HTTP live streaming (HLS) manifest configuration.
          items:
            $ref: '#/components/schemas/CreateHlsManifestConfiguration'
          title: HlsManifests
          type: array
        LowLatencyHlsManifests:
          description: A low-latency HLS manifest configuration.
          items:
            $ref: '#/components/schemas/CreateLowLatencyHlsManifestConfiguration'
          title: LowLatencyHlsManifests
          type: array
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "<p>A comma-separated list of tag key:value pairs that you\
            \ define. For example:</p> <p> <code>\"Key1\": \"Value1\",</code> </p>\
            \ <p> <code>\"Key2\": \"Value2\"</code> </p>"
          title: Tags
          type: object
      required:
      - ContainerType
      - OriginEndpointName
      title: CreateOriginEndpoint_request
      type: object
    UpdateChannel_request:
      properties:
        Description:
          description: Any descriptive information that you want to add to the channel
            for future identification purposes.
          maxLength: 1024
          minLength: 0
          title: Description
          type: string
      title: UpdateChannel_request
      type: object
    UpdateChannelGroup_request:
      properties:
        Description:
          description: Any descriptive information that you want to add to the channel
            group for future identification purposes.
          maxLength: 1024
          minLength: 0
          title: Description
          type: string
      title: UpdateChannelGroup_request
      type: object
    PutChannelPolicy_request:
      properties:
        Policy:
          description: The policy to attach to the specified channel.
          maxLength: 6144
          minLength: 0
          title: Policy
          type: string
      required:
      - Policy
      title: PutChannelPolicy_request
      type: object
    UpdateOriginEndpoint_request:
      properties:
        ContainerType:
          description: "The type of container attached to this origin endpoint. A\
            \ container type is a file format that encapsulates one or more media\
            \ streams, such as audio and video, into a single file. "
          enum:
          - TS
          - CMAF
          title: ContainerType
          type: string
        Segment:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_Segment'
        Description:
          description: Any descriptive information that you want to add to the origin
            endpoint for future identification purposes.
          maxLength: 1024
          minLength: 0
          title: Description
          type: string
        StartoverWindowSeconds:
          description: "The size of the window (in seconds) to create a window of\
            \ the live stream that's available for on-demand viewing. Viewers can\
            \ start-over or catch-up on content that falls within the window. The\
            \ maximum startover window is 1,209,600 seconds (14 days)."
          maximum: 1209600
          minimum: 60
          title: StartoverWindowSeconds
          type: integer
        HlsManifests:
          description: An HTTP live streaming (HLS) manifest configuration.
          items:
            $ref: '#/components/schemas/CreateHlsManifestConfiguration'
          title: HlsManifests
          type: array
        LowLatencyHlsManifests:
          description: A low-latency HLS manifest configuration.
          items:
            $ref: '#/components/schemas/CreateLowLatencyHlsManifestConfiguration'
          title: LowLatencyHlsManifests
          type: array
      required:
      - ContainerType
      title: UpdateOriginEndpoint_request
      type: object
    PutOriginEndpointPolicy_request:
      properties:
        Policy:
          description: The policy to attach to the specified origin endpoint.
          maxLength: 6144
          minLength: 0
          title: Policy
          type: string
      required:
      - Policy
      title: PutOriginEndpointPolicy_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Contains a map of the key-value pairs for the resource tag
            or tags assigned to the resource.
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    CreateOriginEndpointResponse_Segment:
      allOf:
      - $ref: '#/components/schemas/Segment'
      - description: "The segment configuration, including the segment name, duration,\
          \ and other configuration values."
      example:
        SegmentName: ""
        TsUseAudioRenditionGroup: ""
        IncludeIframeOnlyStreams: ""
        Scte:
          ScteFilter: ""
        TsIncludeDvbSubtitles: ""
        SegmentDurationSeconds: ""
        Encryption:
          KeyRotationIntervalSeconds: ""
          ConstantInitializationVector: ""
          SpekeKeyProvider:
            DrmSystems: ""
            ResourceId: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
          EncryptionMethod:
            CmafEncryptionMethod: ""
            TsEncryptionMethod: ""
      title: CreateOriginEndpointResponse_Segment
    Encryption_EncryptionMethod:
      allOf:
      - $ref: '#/components/schemas/EncryptionMethod'
      - description: The encryption method to use.
      example:
        CmafEncryptionMethod: ""
        TsEncryptionMethod: ""
      title: Encryption_EncryptionMethod
    Encryption_SpekeKeyProvider:
      allOf:
      - $ref: '#/components/schemas/SpekeKeyProvider'
      - description: The parameters for the SPEKE key provider.
      example:
        DrmSystems: ""
        ResourceId: ""
        EncryptionContractConfiguration:
          PresetSpeke20Audio: ""
          PresetSpeke20Video: ""
        RoleArn: ""
        Url: ""
      title: Encryption_SpekeKeyProvider
    SpekeKeyProvider_EncryptionContractConfiguration:
      allOf:
      - $ref: '#/components/schemas/EncryptionContractConfiguration'
      - description: "Configure one or more content encryption keys for your endpoints\
          \ that use SPEKE Version 2.0. The encryption contract defines which content\
          \ keys are used to encrypt the audio and video tracks in your stream. To\
          \ configure the encryption contract, specify which audio and video encryption\
          \ presets to use."
      example:
        PresetSpeke20Audio: ""
        PresetSpeke20Video: ""
      title: SpekeKeyProvider_EncryptionContractConfiguration
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
