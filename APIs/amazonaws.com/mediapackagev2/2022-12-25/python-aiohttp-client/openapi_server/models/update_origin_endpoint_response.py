# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.container_type import ContainerType
from openapi_server.models.create_origin_endpoint_response_segment import CreateOriginEndpointResponseSegment
from openapi_server import util


class UpdateOriginEndpointResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, channel_group_name: str=None, channel_name: str=None, origin_endpoint_name: str=None, container_type: ContainerType=None, segment: CreateOriginEndpointResponseSegment=None, created_at: datetime=None, modified_at: datetime=None, description: str=None, startover_window_seconds: int=None, hls_manifests: List=None, low_latency_hls_manifests: List=None, tags: Dict=None):
        """UpdateOriginEndpointResponse - a model defined in OpenAPI

        :param arn: The arn of this UpdateOriginEndpointResponse.
        :param channel_group_name: The channel_group_name of this UpdateOriginEndpointResponse.
        :param channel_name: The channel_name of this UpdateOriginEndpointResponse.
        :param origin_endpoint_name: The origin_endpoint_name of this UpdateOriginEndpointResponse.
        :param container_type: The container_type of this UpdateOriginEndpointResponse.
        :param segment: The segment of this UpdateOriginEndpointResponse.
        :param created_at: The created_at of this UpdateOriginEndpointResponse.
        :param modified_at: The modified_at of this UpdateOriginEndpointResponse.
        :param description: The description of this UpdateOriginEndpointResponse.
        :param startover_window_seconds: The startover_window_seconds of this UpdateOriginEndpointResponse.
        :param hls_manifests: The hls_manifests of this UpdateOriginEndpointResponse.
        :param low_latency_hls_manifests: The low_latency_hls_manifests of this UpdateOriginEndpointResponse.
        :param tags: The tags of this UpdateOriginEndpointResponse.
        """
        self.openapi_types = {
            'arn': str,
            'channel_group_name': str,
            'channel_name': str,
            'origin_endpoint_name': str,
            'container_type': ContainerType,
            'segment': CreateOriginEndpointResponseSegment,
            'created_at': datetime,
            'modified_at': datetime,
            'description': str,
            'startover_window_seconds': int,
            'hls_manifests': List,
            'low_latency_hls_manifests': List,
            'tags': Dict
        }

        self.attribute_map = {
            'arn': 'Arn',
            'channel_group_name': 'ChannelGroupName',
            'channel_name': 'ChannelName',
            'origin_endpoint_name': 'OriginEndpointName',
            'container_type': 'ContainerType',
            'segment': 'Segment',
            'created_at': 'CreatedAt',
            'modified_at': 'ModifiedAt',
            'description': 'Description',
            'startover_window_seconds': 'StartoverWindowSeconds',
            'hls_manifests': 'HlsManifests',
            'low_latency_hls_manifests': 'LowLatencyHlsManifests',
            'tags': 'Tags'
        }

        self._arn = arn
        self._channel_group_name = channel_group_name
        self._channel_name = channel_name
        self._origin_endpoint_name = origin_endpoint_name
        self._container_type = container_type
        self._segment = segment
        self._created_at = created_at
        self._modified_at = modified_at
        self._description = description
        self._startover_window_seconds = startover_window_seconds
        self._hls_manifests = hls_manifests
        self._low_latency_hls_manifests = low_latency_hls_manifests
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateOriginEndpointResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateOriginEndpointResponse of this UpdateOriginEndpointResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this UpdateOriginEndpointResponse.


        :return: The arn of this UpdateOriginEndpointResponse.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this UpdateOriginEndpointResponse.


        :param arn: The arn of this UpdateOriginEndpointResponse.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def channel_group_name(self):
        """Gets the channel_group_name of this UpdateOriginEndpointResponse.


        :return: The channel_group_name of this UpdateOriginEndpointResponse.
        :rtype: str
        """
        return self._channel_group_name

    @channel_group_name.setter
    def channel_group_name(self, channel_group_name):
        """Sets the channel_group_name of this UpdateOriginEndpointResponse.


        :param channel_group_name: The channel_group_name of this UpdateOriginEndpointResponse.
        :type channel_group_name: str
        """
        if channel_group_name is None:
            raise ValueError("Invalid value for `channel_group_name`, must not be `None`")

        self._channel_group_name = channel_group_name

    @property
    def channel_name(self):
        """Gets the channel_name of this UpdateOriginEndpointResponse.


        :return: The channel_name of this UpdateOriginEndpointResponse.
        :rtype: str
        """
        return self._channel_name

    @channel_name.setter
    def channel_name(self, channel_name):
        """Sets the channel_name of this UpdateOriginEndpointResponse.


        :param channel_name: The channel_name of this UpdateOriginEndpointResponse.
        :type channel_name: str
        """
        if channel_name is None:
            raise ValueError("Invalid value for `channel_name`, must not be `None`")

        self._channel_name = channel_name

    @property
    def origin_endpoint_name(self):
        """Gets the origin_endpoint_name of this UpdateOriginEndpointResponse.


        :return: The origin_endpoint_name of this UpdateOriginEndpointResponse.
        :rtype: str
        """
        return self._origin_endpoint_name

    @origin_endpoint_name.setter
    def origin_endpoint_name(self, origin_endpoint_name):
        """Sets the origin_endpoint_name of this UpdateOriginEndpointResponse.


        :param origin_endpoint_name: The origin_endpoint_name of this UpdateOriginEndpointResponse.
        :type origin_endpoint_name: str
        """
        if origin_endpoint_name is None:
            raise ValueError("Invalid value for `origin_endpoint_name`, must not be `None`")

        self._origin_endpoint_name = origin_endpoint_name

    @property
    def container_type(self):
        """Gets the container_type of this UpdateOriginEndpointResponse.


        :return: The container_type of this UpdateOriginEndpointResponse.
        :rtype: ContainerType
        """
        return self._container_type

    @container_type.setter
    def container_type(self, container_type):
        """Sets the container_type of this UpdateOriginEndpointResponse.


        :param container_type: The container_type of this UpdateOriginEndpointResponse.
        :type container_type: ContainerType
        """
        if container_type is None:
            raise ValueError("Invalid value for `container_type`, must not be `None`")

        self._container_type = container_type

    @property
    def segment(self):
        """Gets the segment of this UpdateOriginEndpointResponse.


        :return: The segment of this UpdateOriginEndpointResponse.
        :rtype: CreateOriginEndpointResponseSegment
        """
        return self._segment

    @segment.setter
    def segment(self, segment):
        """Sets the segment of this UpdateOriginEndpointResponse.


        :param segment: The segment of this UpdateOriginEndpointResponse.
        :type segment: CreateOriginEndpointResponseSegment
        """
        if segment is None:
            raise ValueError("Invalid value for `segment`, must not be `None`")

        self._segment = segment

    @property
    def created_at(self):
        """Gets the created_at of this UpdateOriginEndpointResponse.


        :return: The created_at of this UpdateOriginEndpointResponse.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this UpdateOriginEndpointResponse.


        :param created_at: The created_at of this UpdateOriginEndpointResponse.
        :type created_at: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")

        self._created_at = created_at

    @property
    def modified_at(self):
        """Gets the modified_at of this UpdateOriginEndpointResponse.


        :return: The modified_at of this UpdateOriginEndpointResponse.
        :rtype: datetime
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at):
        """Sets the modified_at of this UpdateOriginEndpointResponse.


        :param modified_at: The modified_at of this UpdateOriginEndpointResponse.
        :type modified_at: datetime
        """
        if modified_at is None:
            raise ValueError("Invalid value for `modified_at`, must not be `None`")

        self._modified_at = modified_at

    @property
    def description(self):
        """Gets the description of this UpdateOriginEndpointResponse.


        :return: The description of this UpdateOriginEndpointResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateOriginEndpointResponse.


        :param description: The description of this UpdateOriginEndpointResponse.
        :type description: str
        """

        self._description = description

    @property
    def startover_window_seconds(self):
        """Gets the startover_window_seconds of this UpdateOriginEndpointResponse.


        :return: The startover_window_seconds of this UpdateOriginEndpointResponse.
        :rtype: int
        """
        return self._startover_window_seconds

    @startover_window_seconds.setter
    def startover_window_seconds(self, startover_window_seconds):
        """Sets the startover_window_seconds of this UpdateOriginEndpointResponse.


        :param startover_window_seconds: The startover_window_seconds of this UpdateOriginEndpointResponse.
        :type startover_window_seconds: int
        """

        self._startover_window_seconds = startover_window_seconds

    @property
    def hls_manifests(self):
        """Gets the hls_manifests of this UpdateOriginEndpointResponse.


        :return: The hls_manifests of this UpdateOriginEndpointResponse.
        :rtype: List
        """
        return self._hls_manifests

    @hls_manifests.setter
    def hls_manifests(self, hls_manifests):
        """Sets the hls_manifests of this UpdateOriginEndpointResponse.


        :param hls_manifests: The hls_manifests of this UpdateOriginEndpointResponse.
        :type hls_manifests: List
        """

        self._hls_manifests = hls_manifests

    @property
    def low_latency_hls_manifests(self):
        """Gets the low_latency_hls_manifests of this UpdateOriginEndpointResponse.


        :return: The low_latency_hls_manifests of this UpdateOriginEndpointResponse.
        :rtype: List
        """
        return self._low_latency_hls_manifests

    @low_latency_hls_manifests.setter
    def low_latency_hls_manifests(self, low_latency_hls_manifests):
        """Sets the low_latency_hls_manifests of this UpdateOriginEndpointResponse.


        :param low_latency_hls_manifests: The low_latency_hls_manifests of this UpdateOriginEndpointResponse.
        :type low_latency_hls_manifests: List
        """

        self._low_latency_hls_manifests = low_latency_hls_manifests

    @property
    def tags(self):
        """Gets the tags of this UpdateOriginEndpointResponse.


        :return: The tags of this UpdateOriginEndpointResponse.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this UpdateOriginEndpointResponse.


        :param tags: The tags of this UpdateOriginEndpointResponse.
        :type tags: Dict
        """

        self._tags = tags
