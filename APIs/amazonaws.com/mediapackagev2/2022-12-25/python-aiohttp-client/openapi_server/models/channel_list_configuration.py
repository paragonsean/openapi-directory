# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChannelListConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, channel_name: str=None, channel_group_name: str=None, created_at: datetime=None, modified_at: datetime=None, description: str=None):
        """ChannelListConfiguration - a model defined in OpenAPI

        :param arn: The arn of this ChannelListConfiguration.
        :param channel_name: The channel_name of this ChannelListConfiguration.
        :param channel_group_name: The channel_group_name of this ChannelListConfiguration.
        :param created_at: The created_at of this ChannelListConfiguration.
        :param modified_at: The modified_at of this ChannelListConfiguration.
        :param description: The description of this ChannelListConfiguration.
        """
        self.openapi_types = {
            'arn': str,
            'channel_name': str,
            'channel_group_name': str,
            'created_at': datetime,
            'modified_at': datetime,
            'description': str
        }

        self.attribute_map = {
            'arn': 'Arn',
            'channel_name': 'ChannelName',
            'channel_group_name': 'ChannelGroupName',
            'created_at': 'CreatedAt',
            'modified_at': 'ModifiedAt',
            'description': 'Description'
        }

        self._arn = arn
        self._channel_name = channel_name
        self._channel_group_name = channel_group_name
        self._created_at = created_at
        self._modified_at = modified_at
        self._description = description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelListConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelListConfiguration of this ChannelListConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this ChannelListConfiguration.


        :return: The arn of this ChannelListConfiguration.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this ChannelListConfiguration.


        :param arn: The arn of this ChannelListConfiguration.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def channel_name(self):
        """Gets the channel_name of this ChannelListConfiguration.


        :return: The channel_name of this ChannelListConfiguration.
        :rtype: str
        """
        return self._channel_name

    @channel_name.setter
    def channel_name(self, channel_name):
        """Sets the channel_name of this ChannelListConfiguration.


        :param channel_name: The channel_name of this ChannelListConfiguration.
        :type channel_name: str
        """
        if channel_name is None:
            raise ValueError("Invalid value for `channel_name`, must not be `None`")

        self._channel_name = channel_name

    @property
    def channel_group_name(self):
        """Gets the channel_group_name of this ChannelListConfiguration.


        :return: The channel_group_name of this ChannelListConfiguration.
        :rtype: str
        """
        return self._channel_group_name

    @channel_group_name.setter
    def channel_group_name(self, channel_group_name):
        """Sets the channel_group_name of this ChannelListConfiguration.


        :param channel_group_name: The channel_group_name of this ChannelListConfiguration.
        :type channel_group_name: str
        """
        if channel_group_name is None:
            raise ValueError("Invalid value for `channel_group_name`, must not be `None`")

        self._channel_group_name = channel_group_name

    @property
    def created_at(self):
        """Gets the created_at of this ChannelListConfiguration.


        :return: The created_at of this ChannelListConfiguration.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ChannelListConfiguration.


        :param created_at: The created_at of this ChannelListConfiguration.
        :type created_at: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")

        self._created_at = created_at

    @property
    def modified_at(self):
        """Gets the modified_at of this ChannelListConfiguration.


        :return: The modified_at of this ChannelListConfiguration.
        :rtype: datetime
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at):
        """Sets the modified_at of this ChannelListConfiguration.


        :param modified_at: The modified_at of this ChannelListConfiguration.
        :type modified_at: datetime
        """
        if modified_at is None:
            raise ValueError("Invalid value for `modified_at`, must not be `None`")

        self._modified_at = modified_at

    @property
    def description(self):
        """Gets the description of this ChannelListConfiguration.


        :return: The description of this ChannelListConfiguration.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ChannelListConfiguration.


        :param description: The description of this ChannelListConfiguration.
        :type description: str
        """

        self._description = description
