# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_hls_manifest_configuration import CreateHlsManifestConfiguration
from openapi_server.models.create_low_latency_hls_manifest_configuration import CreateLowLatencyHlsManifestConfiguration
from openapi_server.models.create_origin_endpoint_request_segment import CreateOriginEndpointRequestSegment
import re
from openapi_server import util


class CreateOriginEndpointRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, origin_endpoint_name: str=None, container_type: str=None, segment: CreateOriginEndpointRequestSegment=None, description: str=None, startover_window_seconds: int=None, hls_manifests: List[CreateHlsManifestConfiguration]=None, low_latency_hls_manifests: List[CreateLowLatencyHlsManifestConfiguration]=None, tags: Dict[str, str]=None):
        """CreateOriginEndpointRequest - a model defined in OpenAPI

        :param origin_endpoint_name: The origin_endpoint_name of this CreateOriginEndpointRequest.
        :param container_type: The container_type of this CreateOriginEndpointRequest.
        :param segment: The segment of this CreateOriginEndpointRequest.
        :param description: The description of this CreateOriginEndpointRequest.
        :param startover_window_seconds: The startover_window_seconds of this CreateOriginEndpointRequest.
        :param hls_manifests: The hls_manifests of this CreateOriginEndpointRequest.
        :param low_latency_hls_manifests: The low_latency_hls_manifests of this CreateOriginEndpointRequest.
        :param tags: The tags of this CreateOriginEndpointRequest.
        """
        self.openapi_types = {
            'origin_endpoint_name': str,
            'container_type': str,
            'segment': CreateOriginEndpointRequestSegment,
            'description': str,
            'startover_window_seconds': int,
            'hls_manifests': List[CreateHlsManifestConfiguration],
            'low_latency_hls_manifests': List[CreateLowLatencyHlsManifestConfiguration],
            'tags': Dict[str, str]
        }

        self.attribute_map = {
            'origin_endpoint_name': 'OriginEndpointName',
            'container_type': 'ContainerType',
            'segment': 'Segment',
            'description': 'Description',
            'startover_window_seconds': 'StartoverWindowSeconds',
            'hls_manifests': 'HlsManifests',
            'low_latency_hls_manifests': 'LowLatencyHlsManifests',
            'tags': 'Tags'
        }

        self._origin_endpoint_name = origin_endpoint_name
        self._container_type = container_type
        self._segment = segment
        self._description = description
        self._startover_window_seconds = startover_window_seconds
        self._hls_manifests = hls_manifests
        self._low_latency_hls_manifests = low_latency_hls_manifests
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateOriginEndpointRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateOriginEndpoint_request of this CreateOriginEndpointRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def origin_endpoint_name(self):
        """Gets the origin_endpoint_name of this CreateOriginEndpointRequest.

        The name that describes the origin endpoint. The name is the primary identifier for the origin endpoint, and must be unique for your account in the AWS Region and channel. You can't use spaces in the name. You can't change the name after you create the endpoint.

        :return: The origin_endpoint_name of this CreateOriginEndpointRequest.
        :rtype: str
        """
        return self._origin_endpoint_name

    @origin_endpoint_name.setter
    def origin_endpoint_name(self, origin_endpoint_name):
        """Sets the origin_endpoint_name of this CreateOriginEndpointRequest.

        The name that describes the origin endpoint. The name is the primary identifier for the origin endpoint, and must be unique for your account in the AWS Region and channel. You can't use spaces in the name. You can't change the name after you create the endpoint.

        :param origin_endpoint_name: The origin_endpoint_name of this CreateOriginEndpointRequest.
        :type origin_endpoint_name: str
        """
        if origin_endpoint_name is None:
            raise ValueError("Invalid value for `origin_endpoint_name`, must not be `None`")
        if origin_endpoint_name is not None and len(origin_endpoint_name) > 256:
            raise ValueError("Invalid value for `origin_endpoint_name`, length must be less than or equal to `256`")
        if origin_endpoint_name is not None and len(origin_endpoint_name) < 1:
            raise ValueError("Invalid value for `origin_endpoint_name`, length must be greater than or equal to `1`")
        if origin_endpoint_name is not None and not re.search(r'[a-zA-Z0-9_-]+', origin_endpoint_name):
            raise ValueError("Invalid value for `origin_endpoint_name`, must be a follow pattern or equal to `/[a-zA-Z0-9_-]+/`")

        self._origin_endpoint_name = origin_endpoint_name

    @property
    def container_type(self):
        """Gets the container_type of this CreateOriginEndpointRequest.

        The type of container to attach to this origin endpoint. A container type is a file format that encapsulates one or more media streams, such as audio and video, into a single file. You can't change the container type after you create the endpoint.

        :return: The container_type of this CreateOriginEndpointRequest.
        :rtype: str
        """
        return self._container_type

    @container_type.setter
    def container_type(self, container_type):
        """Sets the container_type of this CreateOriginEndpointRequest.

        The type of container to attach to this origin endpoint. A container type is a file format that encapsulates one or more media streams, such as audio and video, into a single file. You can't change the container type after you create the endpoint.

        :param container_type: The container_type of this CreateOriginEndpointRequest.
        :type container_type: str
        """
        allowed_values = ["TS", "CMAF"]  # noqa: E501
        if container_type not in allowed_values:
            raise ValueError(
                "Invalid value for `container_type` ({0}), must be one of {1}"
                .format(container_type, allowed_values)
            )

        self._container_type = container_type

    @property
    def segment(self):
        """Gets the segment of this CreateOriginEndpointRequest.


        :return: The segment of this CreateOriginEndpointRequest.
        :rtype: CreateOriginEndpointRequestSegment
        """
        return self._segment

    @segment.setter
    def segment(self, segment):
        """Sets the segment of this CreateOriginEndpointRequest.


        :param segment: The segment of this CreateOriginEndpointRequest.
        :type segment: CreateOriginEndpointRequestSegment
        """

        self._segment = segment

    @property
    def description(self):
        """Gets the description of this CreateOriginEndpointRequest.

        Enter any descriptive text that helps you to identify the origin endpoint.

        :return: The description of this CreateOriginEndpointRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateOriginEndpointRequest.

        Enter any descriptive text that helps you to identify the origin endpoint.

        :param description: The description of this CreateOriginEndpointRequest.
        :type description: str
        """
        if description is not None and len(description) > 1024:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `1024`")
        if description is not None and len(description) < 0:
            raise ValueError("Invalid value for `description`, length must be greater than or equal to `0`")

        self._description = description

    @property
    def startover_window_seconds(self):
        """Gets the startover_window_seconds of this CreateOriginEndpointRequest.

        The size of the window (in seconds) to create a window of the live stream that's available for on-demand viewing. Viewers can start-over or catch-up on content that falls within the window. The maximum startover window is 1,209,600 seconds (14 days).

        :return: The startover_window_seconds of this CreateOriginEndpointRequest.
        :rtype: int
        """
        return self._startover_window_seconds

    @startover_window_seconds.setter
    def startover_window_seconds(self, startover_window_seconds):
        """Sets the startover_window_seconds of this CreateOriginEndpointRequest.

        The size of the window (in seconds) to create a window of the live stream that's available for on-demand viewing. Viewers can start-over or catch-up on content that falls within the window. The maximum startover window is 1,209,600 seconds (14 days).

        :param startover_window_seconds: The startover_window_seconds of this CreateOriginEndpointRequest.
        :type startover_window_seconds: int
        """
        if startover_window_seconds is not None and startover_window_seconds > 1209600:
            raise ValueError("Invalid value for `startover_window_seconds`, must be a value less than or equal to `1209600`")
        if startover_window_seconds is not None and startover_window_seconds < 60:
            raise ValueError("Invalid value for `startover_window_seconds`, must be a value greater than or equal to `60`")

        self._startover_window_seconds = startover_window_seconds

    @property
    def hls_manifests(self):
        """Gets the hls_manifests of this CreateOriginEndpointRequest.

        An HTTP live streaming (HLS) manifest configuration.

        :return: The hls_manifests of this CreateOriginEndpointRequest.
        :rtype: List[CreateHlsManifestConfiguration]
        """
        return self._hls_manifests

    @hls_manifests.setter
    def hls_manifests(self, hls_manifests):
        """Sets the hls_manifests of this CreateOriginEndpointRequest.

        An HTTP live streaming (HLS) manifest configuration.

        :param hls_manifests: The hls_manifests of this CreateOriginEndpointRequest.
        :type hls_manifests: List[CreateHlsManifestConfiguration]
        """

        self._hls_manifests = hls_manifests

    @property
    def low_latency_hls_manifests(self):
        """Gets the low_latency_hls_manifests of this CreateOriginEndpointRequest.

        A low-latency HLS manifest configuration.

        :return: The low_latency_hls_manifests of this CreateOriginEndpointRequest.
        :rtype: List[CreateLowLatencyHlsManifestConfiguration]
        """
        return self._low_latency_hls_manifests

    @low_latency_hls_manifests.setter
    def low_latency_hls_manifests(self, low_latency_hls_manifests):
        """Sets the low_latency_hls_manifests of this CreateOriginEndpointRequest.

        A low-latency HLS manifest configuration.

        :param low_latency_hls_manifests: The low_latency_hls_manifests of this CreateOriginEndpointRequest.
        :type low_latency_hls_manifests: List[CreateLowLatencyHlsManifestConfiguration]
        """

        self._low_latency_hls_manifests = low_latency_hls_manifests

    @property
    def tags(self):
        """Gets the tags of this CreateOriginEndpointRequest.

        <p>A comma-separated list of tag key:value pairs that you define. For example:</p> <p> <code>\"Key1\": \"Value1\",</code> </p> <p> <code>\"Key2\": \"Value2\"</code> </p>

        :return: The tags of this CreateOriginEndpointRequest.
        :rtype: Dict[str, str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateOriginEndpointRequest.

        <p>A comma-separated list of tag key:value pairs that you define. For example:</p> <p> <code>\"Key1\": \"Value1\",</code> </p> <p> <code>\"Key2\": \"Value2\"</code> </p>

        :param tags: The tags of this CreateOriginEndpointRequest.
        :type tags: Dict[str, str]
        """

        self._tags = tags
