# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_origin_endpoint_request_segment_scte import CreateOriginEndpointRequestSegmentScte
from openapi_server.models.encryption import Encryption
from openapi_server import util


class CreateOriginEndpointResponseSegment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, segment_duration_seconds: int=None, segment_name: str=None, ts_use_audio_rendition_group: bool=None, include_iframe_only_streams: bool=None, ts_include_dvb_subtitles: bool=None, scte: CreateOriginEndpointRequestSegmentScte=None, encryption: Encryption=None):
        """CreateOriginEndpointResponseSegment - a model defined in OpenAPI

        :param segment_duration_seconds: The segment_duration_seconds of this CreateOriginEndpointResponseSegment.
        :param segment_name: The segment_name of this CreateOriginEndpointResponseSegment.
        :param ts_use_audio_rendition_group: The ts_use_audio_rendition_group of this CreateOriginEndpointResponseSegment.
        :param include_iframe_only_streams: The include_iframe_only_streams of this CreateOriginEndpointResponseSegment.
        :param ts_include_dvb_subtitles: The ts_include_dvb_subtitles of this CreateOriginEndpointResponseSegment.
        :param scte: The scte of this CreateOriginEndpointResponseSegment.
        :param encryption: The encryption of this CreateOriginEndpointResponseSegment.
        """
        self.openapi_types = {
            'segment_duration_seconds': int,
            'segment_name': str,
            'ts_use_audio_rendition_group': bool,
            'include_iframe_only_streams': bool,
            'ts_include_dvb_subtitles': bool,
            'scte': CreateOriginEndpointRequestSegmentScte,
            'encryption': Encryption
        }

        self.attribute_map = {
            'segment_duration_seconds': 'SegmentDurationSeconds',
            'segment_name': 'SegmentName',
            'ts_use_audio_rendition_group': 'TsUseAudioRenditionGroup',
            'include_iframe_only_streams': 'IncludeIframeOnlyStreams',
            'ts_include_dvb_subtitles': 'TsIncludeDvbSubtitles',
            'scte': 'Scte',
            'encryption': 'Encryption'
        }

        self._segment_duration_seconds = segment_duration_seconds
        self._segment_name = segment_name
        self._ts_use_audio_rendition_group = ts_use_audio_rendition_group
        self._include_iframe_only_streams = include_iframe_only_streams
        self._ts_include_dvb_subtitles = ts_include_dvb_subtitles
        self._scte = scte
        self._encryption = encryption

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateOriginEndpointResponseSegment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateOriginEndpointResponse_Segment of this CreateOriginEndpointResponseSegment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def segment_duration_seconds(self):
        """Gets the segment_duration_seconds of this CreateOriginEndpointResponseSegment.


        :return: The segment_duration_seconds of this CreateOriginEndpointResponseSegment.
        :rtype: int
        """
        return self._segment_duration_seconds

    @segment_duration_seconds.setter
    def segment_duration_seconds(self, segment_duration_seconds):
        """Sets the segment_duration_seconds of this CreateOriginEndpointResponseSegment.


        :param segment_duration_seconds: The segment_duration_seconds of this CreateOriginEndpointResponseSegment.
        :type segment_duration_seconds: int
        """

        self._segment_duration_seconds = segment_duration_seconds

    @property
    def segment_name(self):
        """Gets the segment_name of this CreateOriginEndpointResponseSegment.


        :return: The segment_name of this CreateOriginEndpointResponseSegment.
        :rtype: str
        """
        return self._segment_name

    @segment_name.setter
    def segment_name(self, segment_name):
        """Sets the segment_name of this CreateOriginEndpointResponseSegment.


        :param segment_name: The segment_name of this CreateOriginEndpointResponseSegment.
        :type segment_name: str
        """

        self._segment_name = segment_name

    @property
    def ts_use_audio_rendition_group(self):
        """Gets the ts_use_audio_rendition_group of this CreateOriginEndpointResponseSegment.


        :return: The ts_use_audio_rendition_group of this CreateOriginEndpointResponseSegment.
        :rtype: bool
        """
        return self._ts_use_audio_rendition_group

    @ts_use_audio_rendition_group.setter
    def ts_use_audio_rendition_group(self, ts_use_audio_rendition_group):
        """Sets the ts_use_audio_rendition_group of this CreateOriginEndpointResponseSegment.


        :param ts_use_audio_rendition_group: The ts_use_audio_rendition_group of this CreateOriginEndpointResponseSegment.
        :type ts_use_audio_rendition_group: bool
        """

        self._ts_use_audio_rendition_group = ts_use_audio_rendition_group

    @property
    def include_iframe_only_streams(self):
        """Gets the include_iframe_only_streams of this CreateOriginEndpointResponseSegment.


        :return: The include_iframe_only_streams of this CreateOriginEndpointResponseSegment.
        :rtype: bool
        """
        return self._include_iframe_only_streams

    @include_iframe_only_streams.setter
    def include_iframe_only_streams(self, include_iframe_only_streams):
        """Sets the include_iframe_only_streams of this CreateOriginEndpointResponseSegment.


        :param include_iframe_only_streams: The include_iframe_only_streams of this CreateOriginEndpointResponseSegment.
        :type include_iframe_only_streams: bool
        """

        self._include_iframe_only_streams = include_iframe_only_streams

    @property
    def ts_include_dvb_subtitles(self):
        """Gets the ts_include_dvb_subtitles of this CreateOriginEndpointResponseSegment.


        :return: The ts_include_dvb_subtitles of this CreateOriginEndpointResponseSegment.
        :rtype: bool
        """
        return self._ts_include_dvb_subtitles

    @ts_include_dvb_subtitles.setter
    def ts_include_dvb_subtitles(self, ts_include_dvb_subtitles):
        """Sets the ts_include_dvb_subtitles of this CreateOriginEndpointResponseSegment.


        :param ts_include_dvb_subtitles: The ts_include_dvb_subtitles of this CreateOriginEndpointResponseSegment.
        :type ts_include_dvb_subtitles: bool
        """

        self._ts_include_dvb_subtitles = ts_include_dvb_subtitles

    @property
    def scte(self):
        """Gets the scte of this CreateOriginEndpointResponseSegment.


        :return: The scte of this CreateOriginEndpointResponseSegment.
        :rtype: CreateOriginEndpointRequestSegmentScte
        """
        return self._scte

    @scte.setter
    def scte(self, scte):
        """Sets the scte of this CreateOriginEndpointResponseSegment.


        :param scte: The scte of this CreateOriginEndpointResponseSegment.
        :type scte: CreateOriginEndpointRequestSegmentScte
        """

        self._scte = scte

    @property
    def encryption(self):
        """Gets the encryption of this CreateOriginEndpointResponseSegment.


        :return: The encryption of this CreateOriginEndpointResponseSegment.
        :rtype: Encryption
        """
        return self._encryption

    @encryption.setter
    def encryption(self, encryption):
        """Sets the encryption of this CreateOriginEndpointResponseSegment.


        :param encryption: The encryption of this CreateOriginEndpointResponseSegment.
        :type encryption: Encryption
        """

        self._encryption = encryption
