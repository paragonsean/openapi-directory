# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListHlsManifestConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, manifest_name: str=None, child_manifest_name: str=None, url: str=None):
        """ListHlsManifestConfiguration - a model defined in OpenAPI

        :param manifest_name: The manifest_name of this ListHlsManifestConfiguration.
        :param child_manifest_name: The child_manifest_name of this ListHlsManifestConfiguration.
        :param url: The url of this ListHlsManifestConfiguration.
        """
        self.openapi_types = {
            'manifest_name': str,
            'child_manifest_name': str,
            'url': str
        }

        self.attribute_map = {
            'manifest_name': 'ManifestName',
            'child_manifest_name': 'ChildManifestName',
            'url': 'Url'
        }

        self._manifest_name = manifest_name
        self._child_manifest_name = child_manifest_name
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListHlsManifestConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListHlsManifestConfiguration of this ListHlsManifestConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def manifest_name(self):
        """Gets the manifest_name of this ListHlsManifestConfiguration.


        :return: The manifest_name of this ListHlsManifestConfiguration.
        :rtype: str
        """
        return self._manifest_name

    @manifest_name.setter
    def manifest_name(self, manifest_name):
        """Sets the manifest_name of this ListHlsManifestConfiguration.


        :param manifest_name: The manifest_name of this ListHlsManifestConfiguration.
        :type manifest_name: str
        """
        if manifest_name is None:
            raise ValueError("Invalid value for `manifest_name`, must not be `None`")

        self._manifest_name = manifest_name

    @property
    def child_manifest_name(self):
        """Gets the child_manifest_name of this ListHlsManifestConfiguration.


        :return: The child_manifest_name of this ListHlsManifestConfiguration.
        :rtype: str
        """
        return self._child_manifest_name

    @child_manifest_name.setter
    def child_manifest_name(self, child_manifest_name):
        """Sets the child_manifest_name of this ListHlsManifestConfiguration.


        :param child_manifest_name: The child_manifest_name of this ListHlsManifestConfiguration.
        :type child_manifest_name: str
        """

        self._child_manifest_name = child_manifest_name

    @property
    def url(self):
        """Gets the url of this ListHlsManifestConfiguration.


        :return: The url of this ListHlsManifestConfiguration.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ListHlsManifestConfiguration.


        :param url: The url of this ListHlsManifestConfiguration.
        :type url: str
        """

        self._url = url
