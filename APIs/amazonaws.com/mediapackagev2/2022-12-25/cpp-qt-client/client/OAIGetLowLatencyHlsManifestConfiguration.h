/**
 * AWS Elemental MediaPackage v2
 * <note> <p>This guide is intended for creating AWS Elemental MediaPackage resources in MediaPackage Version 2 (v2) starting from May 2023. To get started with MediaPackage v2, create your MediaPackage resources. There isn't an automated process to migrate your resources from MediaPackage v1 to MediaPackage v2. </p> <p>The names of the entities that you use to access this API, like URLs and ARNs, all have the versioning information added, like \"v2\", to distinguish from the prior version. If you used MediaPackage prior to this release, you can't use the MediaPackage v2 CLI or the MediaPackage v2 API to access any MediaPackage v1 resources.</p> <p>If you created resources in MediaPackage v1, use video on demand (VOD) workflows, and aren't looking to migrate to MediaPackage v2 yet, see the <a href=\"https://docs.aws.amazon.com/mediapackage/latest/apireference/what-is.html\">MediaPackage v1 Live API Reference</a>.</p> </note> <p>This is the AWS Elemental MediaPackage v2 Live REST API Reference. It describes all the MediaPackage API operations for live content in detail, and provides sample requests, responses, and errors for the supported web services protocols.</p> <p>We assume that you have the IAM permissions that you need to use MediaPackage via the REST API. We also assume that you are familiar with the features and operations of MediaPackage, as described in the AWS Elemental MediaPackage User Guide.</p>
 *
 * The version of the OpenAPI document: 2022-12-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetLowLatencyHlsManifestConfiguration.h
 *
 * Retrieve the low-latency HTTP live streaming (HLS) manifest configuration.
 */

#ifndef OAIGetLowLatencyHlsManifestConfiguration_H
#define OAIGetLowLatencyHlsManifestConfiguration_H

#include <QJsonObject>

#include "OAIScteHls.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIScteHls;

class OAIGetLowLatencyHlsManifestConfiguration : public OAIObject {
public:
    OAIGetLowLatencyHlsManifestConfiguration();
    OAIGetLowLatencyHlsManifestConfiguration(QString json);
    ~OAIGetLowLatencyHlsManifestConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getManifestName() const;
    void setManifestName(const QString &manifest_name);
    bool is_manifest_name_Set() const;
    bool is_manifest_name_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getChildManifestName() const;
    void setChildManifestName(const QString &child_manifest_name);
    bool is_child_manifest_name_Set() const;
    bool is_child_manifest_name_Valid() const;

    qint32 getManifestWindowSeconds() const;
    void setManifestWindowSeconds(const qint32 &manifest_window_seconds);
    bool is_manifest_window_seconds_Set() const;
    bool is_manifest_window_seconds_Valid() const;

    qint32 getProgramDateTimeIntervalSeconds() const;
    void setProgramDateTimeIntervalSeconds(const qint32 &program_date_time_interval_seconds);
    bool is_program_date_time_interval_seconds_Set() const;
    bool is_program_date_time_interval_seconds_Valid() const;

    OAIScteHls getScteHls() const;
    void setScteHls(const OAIScteHls &scte_hls);
    bool is_scte_hls_Set() const;
    bool is_scte_hls_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_manifest_name;
    bool m_manifest_name_isSet;
    bool m_manifest_name_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_child_manifest_name;
    bool m_child_manifest_name_isSet;
    bool m_child_manifest_name_isValid;

    qint32 m_manifest_window_seconds;
    bool m_manifest_window_seconds_isSet;
    bool m_manifest_window_seconds_isValid;

    qint32 m_program_date_time_interval_seconds;
    bool m_program_date_time_interval_seconds_isSet;
    bool m_program_date_time_interval_seconds_isValid;

    OAIScteHls m_scte_hls;
    bool m_scte_hls_isSet;
    bool m_scte_hls_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetLowLatencyHlsManifestConfiguration)

#endif // OAIGetLowLatencyHlsManifestConfiguration_H
