/**
 * AWS Elemental MediaPackage v2
 * <note> <p>This guide is intended for creating AWS Elemental MediaPackage resources in MediaPackage Version 2 (v2) starting from May 2023. To get started with MediaPackage v2, create your MediaPackage resources. There isn't an automated process to migrate your resources from MediaPackage v1 to MediaPackage v2. </p> <p>The names of the entities that you use to access this API, like URLs and ARNs, all have the versioning information added, like \"v2\", to distinguish from the prior version. If you used MediaPackage prior to this release, you can't use the MediaPackage v2 CLI or the MediaPackage v2 API to access any MediaPackage v1 resources.</p> <p>If you created resources in MediaPackage v1, use video on demand (VOD) workflows, and aren't looking to migrate to MediaPackage v2 yet, see the <a href=\"https://docs.aws.amazon.com/mediapackage/latest/apireference/what-is.html\">MediaPackage v1 Live API Reference</a>.</p> </note> <p>This is the AWS Elemental MediaPackage v2 Live REST API Reference. It describes all the MediaPackage API operations for live content in detail, and provides sample requests, responses, and errors for the supported web services protocols.</p> <p>We assume that you have the IAM permissions that you need to use MediaPackage via the REST API. We also assume that you are familiar with the features and operations of MediaPackage, as described in the AWS Elemental MediaPackage User Guide.</p>
 *
 * The version of the OpenAPI document: 2022-12-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsElementalMediaPackageV2);
  }
}(this, function(expect, AwsElementalMediaPackageV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsElementalMediaPackageV2.GetOriginEndpointResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetOriginEndpointResponse', function() {
    it('should create an instance of GetOriginEndpointResponse', function() {
      // uncomment below and update the code to test GetOriginEndpointResponse
      //var instance = new AwsElementalMediaPackageV2.GetOriginEndpointResponse();
      //expect(instance).to.be.a(AwsElementalMediaPackageV2.GetOriginEndpointResponse);
    });

    it('should have the property arn (base name: "Arn")', function() {
      // uncomment below and update the code to test the property arn
      //var instance = new AwsElementalMediaPackageV2.GetOriginEndpointResponse();
      //expect(instance).to.be();
    });

    it('should have the property channelGroupName (base name: "ChannelGroupName")', function() {
      // uncomment below and update the code to test the property channelGroupName
      //var instance = new AwsElementalMediaPackageV2.GetOriginEndpointResponse();
      //expect(instance).to.be();
    });

    it('should have the property channelName (base name: "ChannelName")', function() {
      // uncomment below and update the code to test the property channelName
      //var instance = new AwsElementalMediaPackageV2.GetOriginEndpointResponse();
      //expect(instance).to.be();
    });

    it('should have the property originEndpointName (base name: "OriginEndpointName")', function() {
      // uncomment below and update the code to test the property originEndpointName
      //var instance = new AwsElementalMediaPackageV2.GetOriginEndpointResponse();
      //expect(instance).to.be();
    });

    it('should have the property containerType (base name: "ContainerType")', function() {
      // uncomment below and update the code to test the property containerType
      //var instance = new AwsElementalMediaPackageV2.GetOriginEndpointResponse();
      //expect(instance).to.be();
    });

    it('should have the property segment (base name: "Segment")', function() {
      // uncomment below and update the code to test the property segment
      //var instance = new AwsElementalMediaPackageV2.GetOriginEndpointResponse();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "CreatedAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new AwsElementalMediaPackageV2.GetOriginEndpointResponse();
      //expect(instance).to.be();
    });

    it('should have the property modifiedAt (base name: "ModifiedAt")', function() {
      // uncomment below and update the code to test the property modifiedAt
      //var instance = new AwsElementalMediaPackageV2.GetOriginEndpointResponse();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new AwsElementalMediaPackageV2.GetOriginEndpointResponse();
      //expect(instance).to.be();
    });

    it('should have the property startoverWindowSeconds (base name: "StartoverWindowSeconds")', function() {
      // uncomment below and update the code to test the property startoverWindowSeconds
      //var instance = new AwsElementalMediaPackageV2.GetOriginEndpointResponse();
      //expect(instance).to.be();
    });

    it('should have the property hlsManifests (base name: "HlsManifests")', function() {
      // uncomment below and update the code to test the property hlsManifests
      //var instance = new AwsElementalMediaPackageV2.GetOriginEndpointResponse();
      //expect(instance).to.be();
    });

    it('should have the property lowLatencyHlsManifests (base name: "LowLatencyHlsManifests")', function() {
      // uncomment below and update the code to test the property lowLatencyHlsManifests
      //var instance = new AwsElementalMediaPackageV2.GetOriginEndpointResponse();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AwsElementalMediaPackageV2.GetOriginEndpointResponse();
      //expect(instance).to.be();
    });

  });

}));
