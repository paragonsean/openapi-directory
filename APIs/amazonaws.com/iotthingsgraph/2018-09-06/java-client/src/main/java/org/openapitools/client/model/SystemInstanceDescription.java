/*
 * AWS IoT Things Graph
 * <fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards, such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services and defining how they interact at an abstract level.</p> <p>For more information about how AWS IoT Things Graph works, see the <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html\">User Guide</a>.</p> <p>The AWS IoT Things Graph service is discontinued.</p>
 *
 * The version of the OpenAPI document: 2018-09-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DefinitionDocument;
import org.openapitools.client.model.MetricsConfiguration;
import org.openapitools.client.model.SystemInstanceDescriptionSummary;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An object that contains a system instance definition and summary information.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:12.167227-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SystemInstanceDescription {
  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private SystemInstanceDescriptionSummary summary;

  public static final String SERIALIZED_NAME_DEFINITION = "definition";
  @SerializedName(SERIALIZED_NAME_DEFINITION)
  private DefinitionDocument definition;

  public static final String SERIALIZED_NAME_S3_BUCKET_NAME = "s3BucketName";
  @SerializedName(SERIALIZED_NAME_S3_BUCKET_NAME)
  private String s3BucketName;

  public static final String SERIALIZED_NAME_METRICS_CONFIGURATION = "metricsConfiguration";
  @SerializedName(SERIALIZED_NAME_METRICS_CONFIGURATION)
  private MetricsConfiguration metricsConfiguration;

  public static final String SERIALIZED_NAME_VALIDATED_NAMESPACE_VERSION = "validatedNamespaceVersion";
  @SerializedName(SERIALIZED_NAME_VALIDATED_NAMESPACE_VERSION)
  private Integer validatedNamespaceVersion;

  public static final String SERIALIZED_NAME_VALIDATED_DEPENDENCY_REVISIONS = "validatedDependencyRevisions";
  @SerializedName(SERIALIZED_NAME_VALIDATED_DEPENDENCY_REVISIONS)
  private List validatedDependencyRevisions;

  public static final String SERIALIZED_NAME_FLOW_ACTIONS_ROLE_ARN = "flowActionsRoleArn";
  @SerializedName(SERIALIZED_NAME_FLOW_ACTIONS_ROLE_ARN)
  private String flowActionsRoleArn;

  public SystemInstanceDescription() {
  }

  public SystemInstanceDescription summary(SystemInstanceDescriptionSummary summary) {
    this.summary = summary;
    return this;
  }

  /**
   * Get summary
   * @return summary
   */
  @javax.annotation.Nullable
  public SystemInstanceDescriptionSummary getSummary() {
    return summary;
  }

  public void setSummary(SystemInstanceDescriptionSummary summary) {
    this.summary = summary;
  }


  public SystemInstanceDescription definition(DefinitionDocument definition) {
    this.definition = definition;
    return this;
  }

  /**
   * Get definition
   * @return definition
   */
  @javax.annotation.Nullable
  public DefinitionDocument getDefinition() {
    return definition;
  }

  public void setDefinition(DefinitionDocument definition) {
    this.definition = definition;
  }


  public SystemInstanceDescription s3BucketName(String s3BucketName) {
    this.s3BucketName = s3BucketName;
    return this;
  }

  /**
   * Get s3BucketName
   * @return s3BucketName
   */
  @javax.annotation.Nullable
  public String getS3BucketName() {
    return s3BucketName;
  }

  public void setS3BucketName(String s3BucketName) {
    this.s3BucketName = s3BucketName;
  }


  public SystemInstanceDescription metricsConfiguration(MetricsConfiguration metricsConfiguration) {
    this.metricsConfiguration = metricsConfiguration;
    return this;
  }

  /**
   * Get metricsConfiguration
   * @return metricsConfiguration
   */
  @javax.annotation.Nullable
  public MetricsConfiguration getMetricsConfiguration() {
    return metricsConfiguration;
  }

  public void setMetricsConfiguration(MetricsConfiguration metricsConfiguration) {
    this.metricsConfiguration = metricsConfiguration;
  }


  public SystemInstanceDescription validatedNamespaceVersion(Integer validatedNamespaceVersion) {
    this.validatedNamespaceVersion = validatedNamespaceVersion;
    return this;
  }

  /**
   * Get validatedNamespaceVersion
   * @return validatedNamespaceVersion
   */
  @javax.annotation.Nullable
  public Integer getValidatedNamespaceVersion() {
    return validatedNamespaceVersion;
  }

  public void setValidatedNamespaceVersion(Integer validatedNamespaceVersion) {
    this.validatedNamespaceVersion = validatedNamespaceVersion;
  }


  public SystemInstanceDescription validatedDependencyRevisions(List validatedDependencyRevisions) {
    this.validatedDependencyRevisions = validatedDependencyRevisions;
    return this;
  }

  /**
   * Get validatedDependencyRevisions
   * @return validatedDependencyRevisions
   */
  @javax.annotation.Nullable
  public List getValidatedDependencyRevisions() {
    return validatedDependencyRevisions;
  }

  public void setValidatedDependencyRevisions(List validatedDependencyRevisions) {
    this.validatedDependencyRevisions = validatedDependencyRevisions;
  }


  public SystemInstanceDescription flowActionsRoleArn(String flowActionsRoleArn) {
    this.flowActionsRoleArn = flowActionsRoleArn;
    return this;
  }

  /**
   * Get flowActionsRoleArn
   * @return flowActionsRoleArn
   */
  @javax.annotation.Nullable
  public String getFlowActionsRoleArn() {
    return flowActionsRoleArn;
  }

  public void setFlowActionsRoleArn(String flowActionsRoleArn) {
    this.flowActionsRoleArn = flowActionsRoleArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemInstanceDescription systemInstanceDescription = (SystemInstanceDescription) o;
    return Objects.equals(this.summary, systemInstanceDescription.summary) &&
        Objects.equals(this.definition, systemInstanceDescription.definition) &&
        Objects.equals(this.s3BucketName, systemInstanceDescription.s3BucketName) &&
        Objects.equals(this.metricsConfiguration, systemInstanceDescription.metricsConfiguration) &&
        Objects.equals(this.validatedNamespaceVersion, systemInstanceDescription.validatedNamespaceVersion) &&
        Objects.equals(this.validatedDependencyRevisions, systemInstanceDescription.validatedDependencyRevisions) &&
        Objects.equals(this.flowActionsRoleArn, systemInstanceDescription.flowActionsRoleArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(summary, definition, s3BucketName, metricsConfiguration, validatedNamespaceVersion, validatedDependencyRevisions, flowActionsRoleArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemInstanceDescription {\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    definition: ").append(toIndentedString(definition)).append("\n");
    sb.append("    s3BucketName: ").append(toIndentedString(s3BucketName)).append("\n");
    sb.append("    metricsConfiguration: ").append(toIndentedString(metricsConfiguration)).append("\n");
    sb.append("    validatedNamespaceVersion: ").append(toIndentedString(validatedNamespaceVersion)).append("\n");
    sb.append("    validatedDependencyRevisions: ").append(toIndentedString(validatedDependencyRevisions)).append("\n");
    sb.append("    flowActionsRoleArn: ").append(toIndentedString(flowActionsRoleArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("summary");
    openapiFields.add("definition");
    openapiFields.add("s3BucketName");
    openapiFields.add("metricsConfiguration");
    openapiFields.add("validatedNamespaceVersion");
    openapiFields.add("validatedDependencyRevisions");
    openapiFields.add("flowActionsRoleArn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SystemInstanceDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SystemInstanceDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SystemInstanceDescription is not found in the empty JSON string", SystemInstanceDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SystemInstanceDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SystemInstanceDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `summary`
      if (jsonObj.get("summary") != null && !jsonObj.get("summary").isJsonNull()) {
        SystemInstanceDescriptionSummary.validateJsonElement(jsonObj.get("summary"));
      }
      // validate the optional field `definition`
      if (jsonObj.get("definition") != null && !jsonObj.get("definition").isJsonNull()) {
        DefinitionDocument.validateJsonElement(jsonObj.get("definition"));
      }
      // validate the optional field `s3BucketName`
      if (jsonObj.get("s3BucketName") != null && !jsonObj.get("s3BucketName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("s3BucketName"));
      }
      // validate the optional field `metricsConfiguration`
      if (jsonObj.get("metricsConfiguration") != null && !jsonObj.get("metricsConfiguration").isJsonNull()) {
        MetricsConfiguration.validateJsonElement(jsonObj.get("metricsConfiguration"));
      }
      // validate the optional field `validatedNamespaceVersion`
      if (jsonObj.get("validatedNamespaceVersion") != null && !jsonObj.get("validatedNamespaceVersion").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("validatedNamespaceVersion"));
      }
      // validate the optional field `validatedDependencyRevisions`
      if (jsonObj.get("validatedDependencyRevisions") != null && !jsonObj.get("validatedDependencyRevisions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("validatedDependencyRevisions"));
      }
      // validate the optional field `flowActionsRoleArn`
      if (jsonObj.get("flowActionsRoleArn") != null && !jsonObj.get("flowActionsRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("flowActionsRoleArn"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SystemInstanceDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SystemInstanceDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SystemInstanceDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SystemInstanceDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<SystemInstanceDescription>() {
           @Override
           public void write(JsonWriter out, SystemInstanceDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SystemInstanceDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SystemInstanceDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SystemInstanceDescription
   * @throws IOException if the JSON string is invalid with respect to SystemInstanceDescription
   */
  public static SystemInstanceDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SystemInstanceDescription.class);
  }

  /**
   * Convert an instance of SystemInstanceDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

