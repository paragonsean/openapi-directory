/*
 * AWS IoT Things Graph
 * <fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards, such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services and defining how they interact at an abstract level.</p> <p>For more information about how AWS IoT Things Graph works, see the <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html\">User Guide</a>.</p> <p>The AWS IoT Things Graph service is discontinued.</p>
 *
 * The version of the OpenAPI document: 2018-09-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets FlowExecutionEventType
 */
@JsonAdapter(FlowExecutionEventType.Adapter.class)
public enum FlowExecutionEventType {
  
  EXECUTION_STARTED("EXECUTION_STARTED"),
  
  EXECUTION_FAILED("EXECUTION_FAILED"),
  
  EXECUTION_ABORTED("EXECUTION_ABORTED"),
  
  EXECUTION_SUCCEEDED("EXECUTION_SUCCEEDED"),
  
  STEP_STARTED("STEP_STARTED"),
  
  STEP_FAILED("STEP_FAILED"),
  
  STEP_SUCCEEDED("STEP_SUCCEEDED"),
  
  ACTIVITY_SCHEDULED("ACTIVITY_SCHEDULED"),
  
  ACTIVITY_STARTED("ACTIVITY_STARTED"),
  
  ACTIVITY_FAILED("ACTIVITY_FAILED"),
  
  ACTIVITY_SUCCEEDED("ACTIVITY_SUCCEEDED"),
  
  START_FLOW_EXECUTION_TASK("START_FLOW_EXECUTION_TASK"),
  
  SCHEDULE_NEXT_READY_STEPS_TASK("SCHEDULE_NEXT_READY_STEPS_TASK"),
  
  THING_ACTION_TASK("THING_ACTION_TASK"),
  
  THING_ACTION_TASK_FAILED("THING_ACTION_TASK_FAILED"),
  
  THING_ACTION_TASK_SUCCEEDED("THING_ACTION_TASK_SUCCEEDED"),
  
  ACKNOWLEDGE_TASK_MESSAGE("ACKNOWLEDGE_TASK_MESSAGE");

  private String value;

  FlowExecutionEventType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static FlowExecutionEventType fromValue(String value) {
    for (FlowExecutionEventType b : FlowExecutionEventType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<FlowExecutionEventType> {
    @Override
    public void write(final JsonWriter jsonWriter, final FlowExecutionEventType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public FlowExecutionEventType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return FlowExecutionEventType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    FlowExecutionEventType.fromValue(value);
  }
}

