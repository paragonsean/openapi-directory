# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeNamespaceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, namespace_arn: str=None, namespace_name: str=None, tracking_namespace_name: str=None, tracking_namespace_version: int=None, namespace_version: int=None):
        """DescribeNamespaceResponse - a model defined in OpenAPI

        :param namespace_arn: The namespace_arn of this DescribeNamespaceResponse.
        :param namespace_name: The namespace_name of this DescribeNamespaceResponse.
        :param tracking_namespace_name: The tracking_namespace_name of this DescribeNamespaceResponse.
        :param tracking_namespace_version: The tracking_namespace_version of this DescribeNamespaceResponse.
        :param namespace_version: The namespace_version of this DescribeNamespaceResponse.
        """
        self.openapi_types = {
            'namespace_arn': str,
            'namespace_name': str,
            'tracking_namespace_name': str,
            'tracking_namespace_version': int,
            'namespace_version': int
        }

        self.attribute_map = {
            'namespace_arn': 'namespaceArn',
            'namespace_name': 'namespaceName',
            'tracking_namespace_name': 'trackingNamespaceName',
            'tracking_namespace_version': 'trackingNamespaceVersion',
            'namespace_version': 'namespaceVersion'
        }

        self._namespace_arn = namespace_arn
        self._namespace_name = namespace_name
        self._tracking_namespace_name = tracking_namespace_name
        self._tracking_namespace_version = tracking_namespace_version
        self._namespace_version = namespace_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeNamespaceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeNamespaceResponse of this DescribeNamespaceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def namespace_arn(self):
        """Gets the namespace_arn of this DescribeNamespaceResponse.


        :return: The namespace_arn of this DescribeNamespaceResponse.
        :rtype: str
        """
        return self._namespace_arn

    @namespace_arn.setter
    def namespace_arn(self, namespace_arn):
        """Sets the namespace_arn of this DescribeNamespaceResponse.


        :param namespace_arn: The namespace_arn of this DescribeNamespaceResponse.
        :type namespace_arn: str
        """

        self._namespace_arn = namespace_arn

    @property
    def namespace_name(self):
        """Gets the namespace_name of this DescribeNamespaceResponse.


        :return: The namespace_name of this DescribeNamespaceResponse.
        :rtype: str
        """
        return self._namespace_name

    @namespace_name.setter
    def namespace_name(self, namespace_name):
        """Sets the namespace_name of this DescribeNamespaceResponse.


        :param namespace_name: The namespace_name of this DescribeNamespaceResponse.
        :type namespace_name: str
        """

        self._namespace_name = namespace_name

    @property
    def tracking_namespace_name(self):
        """Gets the tracking_namespace_name of this DescribeNamespaceResponse.


        :return: The tracking_namespace_name of this DescribeNamespaceResponse.
        :rtype: str
        """
        return self._tracking_namespace_name

    @tracking_namespace_name.setter
    def tracking_namespace_name(self, tracking_namespace_name):
        """Sets the tracking_namespace_name of this DescribeNamespaceResponse.


        :param tracking_namespace_name: The tracking_namespace_name of this DescribeNamespaceResponse.
        :type tracking_namespace_name: str
        """

        self._tracking_namespace_name = tracking_namespace_name

    @property
    def tracking_namespace_version(self):
        """Gets the tracking_namespace_version of this DescribeNamespaceResponse.


        :return: The tracking_namespace_version of this DescribeNamespaceResponse.
        :rtype: int
        """
        return self._tracking_namespace_version

    @tracking_namespace_version.setter
    def tracking_namespace_version(self, tracking_namespace_version):
        """Sets the tracking_namespace_version of this DescribeNamespaceResponse.


        :param tracking_namespace_version: The tracking_namespace_version of this DescribeNamespaceResponse.
        :type tracking_namespace_version: int
        """

        self._tracking_namespace_version = tracking_namespace_version

    @property
    def namespace_version(self):
        """Gets the namespace_version of this DescribeNamespaceResponse.


        :return: The namespace_version of this DescribeNamespaceResponse.
        :rtype: int
        """
        return self._namespace_version

    @namespace_version.setter
    def namespace_version(self, namespace_version):
        """Sets the namespace_version of this DescribeNamespaceResponse.


        :param namespace_version: The namespace_version of this DescribeNamespaceResponse.
        :type namespace_version: int
        """

        self._namespace_version = namespace_version
