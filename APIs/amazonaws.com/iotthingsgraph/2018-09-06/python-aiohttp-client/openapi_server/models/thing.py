# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Thing(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, thing_arn: str=None, thing_name: str=None):
        """Thing - a model defined in OpenAPI

        :param thing_arn: The thing_arn of this Thing.
        :param thing_name: The thing_name of this Thing.
        """
        self.openapi_types = {
            'thing_arn': str,
            'thing_name': str
        }

        self.attribute_map = {
            'thing_arn': 'thingArn',
            'thing_name': 'thingName'
        }

        self._thing_arn = thing_arn
        self._thing_name = thing_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Thing':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Thing of this Thing.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def thing_arn(self):
        """Gets the thing_arn of this Thing.


        :return: The thing_arn of this Thing.
        :rtype: str
        """
        return self._thing_arn

    @thing_arn.setter
    def thing_arn(self, thing_arn):
        """Sets the thing_arn of this Thing.


        :param thing_arn: The thing_arn of this Thing.
        :type thing_arn: str
        """

        self._thing_arn = thing_arn

    @property
    def thing_name(self):
        """Gets the thing_name of this Thing.


        :return: The thing_name of this Thing.
        :rtype: str
        """
        return self._thing_name

    @thing_name.setter
    def thing_name(self, thing_name):
        """Sets the thing_name of this Thing.


        :param thing_name: The thing_name of this Thing.
        :type thing_name: str
        """

        self._thing_name = thing_name
