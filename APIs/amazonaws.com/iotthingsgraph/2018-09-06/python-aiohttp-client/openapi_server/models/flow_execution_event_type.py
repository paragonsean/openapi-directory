# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FlowExecutionEventType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    EXECUTION_STARTED = 'EXECUTION_STARTED'
    EXECUTION_FAILED = 'EXECUTION_FAILED'
    EXECUTION_ABORTED = 'EXECUTION_ABORTED'
    EXECUTION_SUCCEEDED = 'EXECUTION_SUCCEEDED'
    STEP_STARTED = 'STEP_STARTED'
    STEP_FAILED = 'STEP_FAILED'
    STEP_SUCCEEDED = 'STEP_SUCCEEDED'
    ACTIVITY_SCHEDULED = 'ACTIVITY_SCHEDULED'
    ACTIVITY_STARTED = 'ACTIVITY_STARTED'
    ACTIVITY_FAILED = 'ACTIVITY_FAILED'
    ACTIVITY_SUCCEEDED = 'ACTIVITY_SUCCEEDED'
    START_FLOW_EXECUTION_TASK = 'START_FLOW_EXECUTION_TASK'
    SCHEDULE_NEXT_READY_STEPS_TASK = 'SCHEDULE_NEXT_READY_STEPS_TASK'
    THING_ACTION_TASK = 'THING_ACTION_TASK'
    THING_ACTION_TASK_FAILED = 'THING_ACTION_TASK_FAILED'
    THING_ACTION_TASK_SUCCEEDED = 'THING_ACTION_TASK_SUCCEEDED'
    ACKNOWLEDGE_TASK_MESSAGE = 'ACKNOWLEDGE_TASK_MESSAGE'

    def __init__(self):
        """FlowExecutionEventType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlowExecutionEventType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FlowExecutionEventType of this FlowExecutionEventType.
        """
        return util.deserialize_model(dikt, cls)
