# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.upload_status import UploadStatus
from openapi_server import util


class GetUploadStatusResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, upload_id: str=None, upload_status: UploadStatus=None, namespace_arn: str=None, namespace_name: str=None, namespace_version: int=None, failure_reason: List=None, created_date: datetime=None):
        """GetUploadStatusResponse - a model defined in OpenAPI

        :param upload_id: The upload_id of this GetUploadStatusResponse.
        :param upload_status: The upload_status of this GetUploadStatusResponse.
        :param namespace_arn: The namespace_arn of this GetUploadStatusResponse.
        :param namespace_name: The namespace_name of this GetUploadStatusResponse.
        :param namespace_version: The namespace_version of this GetUploadStatusResponse.
        :param failure_reason: The failure_reason of this GetUploadStatusResponse.
        :param created_date: The created_date of this GetUploadStatusResponse.
        """
        self.openapi_types = {
            'upload_id': str,
            'upload_status': UploadStatus,
            'namespace_arn': str,
            'namespace_name': str,
            'namespace_version': int,
            'failure_reason': List,
            'created_date': datetime
        }

        self.attribute_map = {
            'upload_id': 'uploadId',
            'upload_status': 'uploadStatus',
            'namespace_arn': 'namespaceArn',
            'namespace_name': 'namespaceName',
            'namespace_version': 'namespaceVersion',
            'failure_reason': 'failureReason',
            'created_date': 'createdDate'
        }

        self._upload_id = upload_id
        self._upload_status = upload_status
        self._namespace_arn = namespace_arn
        self._namespace_name = namespace_name
        self._namespace_version = namespace_version
        self._failure_reason = failure_reason
        self._created_date = created_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetUploadStatusResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetUploadStatusResponse of this GetUploadStatusResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def upload_id(self):
        """Gets the upload_id of this GetUploadStatusResponse.


        :return: The upload_id of this GetUploadStatusResponse.
        :rtype: str
        """
        return self._upload_id

    @upload_id.setter
    def upload_id(self, upload_id):
        """Sets the upload_id of this GetUploadStatusResponse.


        :param upload_id: The upload_id of this GetUploadStatusResponse.
        :type upload_id: str
        """
        if upload_id is None:
            raise ValueError("Invalid value for `upload_id`, must not be `None`")

        self._upload_id = upload_id

    @property
    def upload_status(self):
        """Gets the upload_status of this GetUploadStatusResponse.


        :return: The upload_status of this GetUploadStatusResponse.
        :rtype: UploadStatus
        """
        return self._upload_status

    @upload_status.setter
    def upload_status(self, upload_status):
        """Sets the upload_status of this GetUploadStatusResponse.


        :param upload_status: The upload_status of this GetUploadStatusResponse.
        :type upload_status: UploadStatus
        """
        if upload_status is None:
            raise ValueError("Invalid value for `upload_status`, must not be `None`")

        self._upload_status = upload_status

    @property
    def namespace_arn(self):
        """Gets the namespace_arn of this GetUploadStatusResponse.


        :return: The namespace_arn of this GetUploadStatusResponse.
        :rtype: str
        """
        return self._namespace_arn

    @namespace_arn.setter
    def namespace_arn(self, namespace_arn):
        """Sets the namespace_arn of this GetUploadStatusResponse.


        :param namespace_arn: The namespace_arn of this GetUploadStatusResponse.
        :type namespace_arn: str
        """

        self._namespace_arn = namespace_arn

    @property
    def namespace_name(self):
        """Gets the namespace_name of this GetUploadStatusResponse.


        :return: The namespace_name of this GetUploadStatusResponse.
        :rtype: str
        """
        return self._namespace_name

    @namespace_name.setter
    def namespace_name(self, namespace_name):
        """Sets the namespace_name of this GetUploadStatusResponse.


        :param namespace_name: The namespace_name of this GetUploadStatusResponse.
        :type namespace_name: str
        """

        self._namespace_name = namespace_name

    @property
    def namespace_version(self):
        """Gets the namespace_version of this GetUploadStatusResponse.


        :return: The namespace_version of this GetUploadStatusResponse.
        :rtype: int
        """
        return self._namespace_version

    @namespace_version.setter
    def namespace_version(self, namespace_version):
        """Sets the namespace_version of this GetUploadStatusResponse.


        :param namespace_version: The namespace_version of this GetUploadStatusResponse.
        :type namespace_version: int
        """

        self._namespace_version = namespace_version

    @property
    def failure_reason(self):
        """Gets the failure_reason of this GetUploadStatusResponse.


        :return: The failure_reason of this GetUploadStatusResponse.
        :rtype: List
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this GetUploadStatusResponse.


        :param failure_reason: The failure_reason of this GetUploadStatusResponse.
        :type failure_reason: List
        """

        self._failure_reason = failure_reason

    @property
    def created_date(self):
        """Gets the created_date of this GetUploadStatusResponse.


        :return: The created_date of this GetUploadStatusResponse.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this GetUploadStatusResponse.


        :param created_date: The created_date of this GetUploadStatusResponse.
        :type created_date: datetime
        """
        if created_date is None:
            raise ValueError("Invalid value for `created_date`, must not be `None`")

        self._created_date = created_date
