# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.flow_execution_event_type import FlowExecutionEventType
from openapi_server import util


class FlowExecutionMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message_id: str=None, event_type: FlowExecutionEventType=None, timestamp: datetime=None, payload: str=None):
        """FlowExecutionMessage - a model defined in OpenAPI

        :param message_id: The message_id of this FlowExecutionMessage.
        :param event_type: The event_type of this FlowExecutionMessage.
        :param timestamp: The timestamp of this FlowExecutionMessage.
        :param payload: The payload of this FlowExecutionMessage.
        """
        self.openapi_types = {
            'message_id': str,
            'event_type': FlowExecutionEventType,
            'timestamp': datetime,
            'payload': str
        }

        self.attribute_map = {
            'message_id': 'messageId',
            'event_type': 'eventType',
            'timestamp': 'timestamp',
            'payload': 'payload'
        }

        self._message_id = message_id
        self._event_type = event_type
        self._timestamp = timestamp
        self._payload = payload

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlowExecutionMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FlowExecutionMessage of this FlowExecutionMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message_id(self):
        """Gets the message_id of this FlowExecutionMessage.


        :return: The message_id of this FlowExecutionMessage.
        :rtype: str
        """
        return self._message_id

    @message_id.setter
    def message_id(self, message_id):
        """Sets the message_id of this FlowExecutionMessage.


        :param message_id: The message_id of this FlowExecutionMessage.
        :type message_id: str
        """

        self._message_id = message_id

    @property
    def event_type(self):
        """Gets the event_type of this FlowExecutionMessage.


        :return: The event_type of this FlowExecutionMessage.
        :rtype: FlowExecutionEventType
        """
        return self._event_type

    @event_type.setter
    def event_type(self, event_type):
        """Sets the event_type of this FlowExecutionMessage.


        :param event_type: The event_type of this FlowExecutionMessage.
        :type event_type: FlowExecutionEventType
        """

        self._event_type = event_type

    @property
    def timestamp(self):
        """Gets the timestamp of this FlowExecutionMessage.


        :return: The timestamp of this FlowExecutionMessage.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this FlowExecutionMessage.


        :param timestamp: The timestamp of this FlowExecutionMessage.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def payload(self):
        """Gets the payload of this FlowExecutionMessage.


        :return: The payload of this FlowExecutionMessage.
        :rtype: str
        """
        return self._payload

    @payload.setter
    def payload(self, payload):
        """Sets the payload of this FlowExecutionMessage.


        :param payload: The payload of this FlowExecutionMessage.
        :type payload: str
        """

        self._payload = payload
