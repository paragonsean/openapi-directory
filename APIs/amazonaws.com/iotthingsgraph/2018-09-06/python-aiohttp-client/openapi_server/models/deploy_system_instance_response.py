# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deploy_system_instance_response_summary import DeploySystemInstanceResponseSummary
from openapi_server import util


class DeploySystemInstanceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, summary: DeploySystemInstanceResponseSummary=None, greengrass_deployment_id: str=None):
        """DeploySystemInstanceResponse - a model defined in OpenAPI

        :param summary: The summary of this DeploySystemInstanceResponse.
        :param greengrass_deployment_id: The greengrass_deployment_id of this DeploySystemInstanceResponse.
        """
        self.openapi_types = {
            'summary': DeploySystemInstanceResponseSummary,
            'greengrass_deployment_id': str
        }

        self.attribute_map = {
            'summary': 'summary',
            'greengrass_deployment_id': 'greengrassDeploymentId'
        }

        self._summary = summary
        self._greengrass_deployment_id = greengrass_deployment_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploySystemInstanceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploySystemInstanceResponse of this DeploySystemInstanceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def summary(self):
        """Gets the summary of this DeploySystemInstanceResponse.


        :return: The summary of this DeploySystemInstanceResponse.
        :rtype: DeploySystemInstanceResponseSummary
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this DeploySystemInstanceResponse.


        :param summary: The summary of this DeploySystemInstanceResponse.
        :type summary: DeploySystemInstanceResponseSummary
        """
        if summary is None:
            raise ValueError("Invalid value for `summary`, must not be `None`")

        self._summary = summary

    @property
    def greengrass_deployment_id(self):
        """Gets the greengrass_deployment_id of this DeploySystemInstanceResponse.


        :return: The greengrass_deployment_id of this DeploySystemInstanceResponse.
        :rtype: str
        """
        return self._greengrass_deployment_id

    @greengrass_deployment_id.setter
    def greengrass_deployment_id(self, greengrass_deployment_id):
        """Sets the greengrass_deployment_id of this DeploySystemInstanceResponse.


        :param greengrass_deployment_id: The greengrass_deployment_id of this DeploySystemInstanceResponse.
        :type greengrass_deployment_id: str
        """

        self._greengrass_deployment_id = greengrass_deployment_id
