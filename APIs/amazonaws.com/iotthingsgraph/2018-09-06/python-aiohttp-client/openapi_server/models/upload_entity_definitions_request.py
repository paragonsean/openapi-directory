# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.upload_entity_definitions_request_document import UploadEntityDefinitionsRequestDocument
from openapi_server import util


class UploadEntityDefinitionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, document: UploadEntityDefinitionsRequestDocument=None, sync_with_public_namespace: bool=None, deprecate_existing_entities: bool=None):
        """UploadEntityDefinitionsRequest - a model defined in OpenAPI

        :param document: The document of this UploadEntityDefinitionsRequest.
        :param sync_with_public_namespace: The sync_with_public_namespace of this UploadEntityDefinitionsRequest.
        :param deprecate_existing_entities: The deprecate_existing_entities of this UploadEntityDefinitionsRequest.
        """
        self.openapi_types = {
            'document': UploadEntityDefinitionsRequestDocument,
            'sync_with_public_namespace': bool,
            'deprecate_existing_entities': bool
        }

        self.attribute_map = {
            'document': 'document',
            'sync_with_public_namespace': 'syncWithPublicNamespace',
            'deprecate_existing_entities': 'deprecateExistingEntities'
        }

        self._document = document
        self._sync_with_public_namespace = sync_with_public_namespace
        self._deprecate_existing_entities = deprecate_existing_entities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UploadEntityDefinitionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UploadEntityDefinitionsRequest of this UploadEntityDefinitionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document(self):
        """Gets the document of this UploadEntityDefinitionsRequest.


        :return: The document of this UploadEntityDefinitionsRequest.
        :rtype: UploadEntityDefinitionsRequestDocument
        """
        return self._document

    @document.setter
    def document(self, document):
        """Sets the document of this UploadEntityDefinitionsRequest.


        :param document: The document of this UploadEntityDefinitionsRequest.
        :type document: UploadEntityDefinitionsRequestDocument
        """

        self._document = document

    @property
    def sync_with_public_namespace(self):
        """Gets the sync_with_public_namespace of this UploadEntityDefinitionsRequest.


        :return: The sync_with_public_namespace of this UploadEntityDefinitionsRequest.
        :rtype: bool
        """
        return self._sync_with_public_namespace

    @sync_with_public_namespace.setter
    def sync_with_public_namespace(self, sync_with_public_namespace):
        """Sets the sync_with_public_namespace of this UploadEntityDefinitionsRequest.


        :param sync_with_public_namespace: The sync_with_public_namespace of this UploadEntityDefinitionsRequest.
        :type sync_with_public_namespace: bool
        """

        self._sync_with_public_namespace = sync_with_public_namespace

    @property
    def deprecate_existing_entities(self):
        """Gets the deprecate_existing_entities of this UploadEntityDefinitionsRequest.


        :return: The deprecate_existing_entities of this UploadEntityDefinitionsRequest.
        :rtype: bool
        """
        return self._deprecate_existing_entities

    @deprecate_existing_entities.setter
    def deprecate_existing_entities(self, deprecate_existing_entities):
        """Sets the deprecate_existing_entities of this UploadEntityDefinitionsRequest.


        :param deprecate_existing_entities: The deprecate_existing_entities of this UploadEntityDefinitionsRequest.
        :type deprecate_existing_entities: bool
        """

        self._deprecate_existing_entities = deprecate_existing_entities
