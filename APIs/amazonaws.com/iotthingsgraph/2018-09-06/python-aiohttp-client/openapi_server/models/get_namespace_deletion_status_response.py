# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.namespace_deletion_status import NamespaceDeletionStatus
from openapi_server.models.namespace_deletion_status_error_codes import NamespaceDeletionStatusErrorCodes
from openapi_server import util


class GetNamespaceDeletionStatusResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, namespace_arn: str=None, namespace_name: str=None, status: NamespaceDeletionStatus=None, error_code: NamespaceDeletionStatusErrorCodes=None, error_message: str=None):
        """GetNamespaceDeletionStatusResponse - a model defined in OpenAPI

        :param namespace_arn: The namespace_arn of this GetNamespaceDeletionStatusResponse.
        :param namespace_name: The namespace_name of this GetNamespaceDeletionStatusResponse.
        :param status: The status of this GetNamespaceDeletionStatusResponse.
        :param error_code: The error_code of this GetNamespaceDeletionStatusResponse.
        :param error_message: The error_message of this GetNamespaceDeletionStatusResponse.
        """
        self.openapi_types = {
            'namespace_arn': str,
            'namespace_name': str,
            'status': NamespaceDeletionStatus,
            'error_code': NamespaceDeletionStatusErrorCodes,
            'error_message': str
        }

        self.attribute_map = {
            'namespace_arn': 'namespaceArn',
            'namespace_name': 'namespaceName',
            'status': 'status',
            'error_code': 'errorCode',
            'error_message': 'errorMessage'
        }

        self._namespace_arn = namespace_arn
        self._namespace_name = namespace_name
        self._status = status
        self._error_code = error_code
        self._error_message = error_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNamespaceDeletionStatusResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetNamespaceDeletionStatusResponse of this GetNamespaceDeletionStatusResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def namespace_arn(self):
        """Gets the namespace_arn of this GetNamespaceDeletionStatusResponse.


        :return: The namespace_arn of this GetNamespaceDeletionStatusResponse.
        :rtype: str
        """
        return self._namespace_arn

    @namespace_arn.setter
    def namespace_arn(self, namespace_arn):
        """Sets the namespace_arn of this GetNamespaceDeletionStatusResponse.


        :param namespace_arn: The namespace_arn of this GetNamespaceDeletionStatusResponse.
        :type namespace_arn: str
        """

        self._namespace_arn = namespace_arn

    @property
    def namespace_name(self):
        """Gets the namespace_name of this GetNamespaceDeletionStatusResponse.


        :return: The namespace_name of this GetNamespaceDeletionStatusResponse.
        :rtype: str
        """
        return self._namespace_name

    @namespace_name.setter
    def namespace_name(self, namespace_name):
        """Sets the namespace_name of this GetNamespaceDeletionStatusResponse.


        :param namespace_name: The namespace_name of this GetNamespaceDeletionStatusResponse.
        :type namespace_name: str
        """

        self._namespace_name = namespace_name

    @property
    def status(self):
        """Gets the status of this GetNamespaceDeletionStatusResponse.


        :return: The status of this GetNamespaceDeletionStatusResponse.
        :rtype: NamespaceDeletionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetNamespaceDeletionStatusResponse.


        :param status: The status of this GetNamespaceDeletionStatusResponse.
        :type status: NamespaceDeletionStatus
        """

        self._status = status

    @property
    def error_code(self):
        """Gets the error_code of this GetNamespaceDeletionStatusResponse.


        :return: The error_code of this GetNamespaceDeletionStatusResponse.
        :rtype: NamespaceDeletionStatusErrorCodes
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this GetNamespaceDeletionStatusResponse.


        :param error_code: The error_code of this GetNamespaceDeletionStatusResponse.
        :type error_code: NamespaceDeletionStatusErrorCodes
        """

        self._error_code = error_code

    @property
    def error_message(self):
        """Gets the error_message of this GetNamespaceDeletionStatusResponse.


        :return: The error_message of this GetNamespaceDeletionStatusResponse.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this GetNamespaceDeletionStatusResponse.


        :param error_message: The error_message of this GetNamespaceDeletionStatusResponse.
        :type error_message: str
        """

        self._error_message = error_message
