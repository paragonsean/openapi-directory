# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.flow_execution_status import FlowExecutionStatus
from openapi_server import util


class FlowExecutionSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, flow_execution_id: str=None, status: FlowExecutionStatus=None, system_instance_id: str=None, flow_template_id: str=None, created_at: datetime=None, updated_at: datetime=None):
        """FlowExecutionSummary - a model defined in OpenAPI

        :param flow_execution_id: The flow_execution_id of this FlowExecutionSummary.
        :param status: The status of this FlowExecutionSummary.
        :param system_instance_id: The system_instance_id of this FlowExecutionSummary.
        :param flow_template_id: The flow_template_id of this FlowExecutionSummary.
        :param created_at: The created_at of this FlowExecutionSummary.
        :param updated_at: The updated_at of this FlowExecutionSummary.
        """
        self.openapi_types = {
            'flow_execution_id': str,
            'status': FlowExecutionStatus,
            'system_instance_id': str,
            'flow_template_id': str,
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'flow_execution_id': 'flowExecutionId',
            'status': 'status',
            'system_instance_id': 'systemInstanceId',
            'flow_template_id': 'flowTemplateId',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt'
        }

        self._flow_execution_id = flow_execution_id
        self._status = status
        self._system_instance_id = system_instance_id
        self._flow_template_id = flow_template_id
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlowExecutionSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FlowExecutionSummary of this FlowExecutionSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def flow_execution_id(self):
        """Gets the flow_execution_id of this FlowExecutionSummary.


        :return: The flow_execution_id of this FlowExecutionSummary.
        :rtype: str
        """
        return self._flow_execution_id

    @flow_execution_id.setter
    def flow_execution_id(self, flow_execution_id):
        """Sets the flow_execution_id of this FlowExecutionSummary.


        :param flow_execution_id: The flow_execution_id of this FlowExecutionSummary.
        :type flow_execution_id: str
        """

        self._flow_execution_id = flow_execution_id

    @property
    def status(self):
        """Gets the status of this FlowExecutionSummary.


        :return: The status of this FlowExecutionSummary.
        :rtype: FlowExecutionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this FlowExecutionSummary.


        :param status: The status of this FlowExecutionSummary.
        :type status: FlowExecutionStatus
        """

        self._status = status

    @property
    def system_instance_id(self):
        """Gets the system_instance_id of this FlowExecutionSummary.


        :return: The system_instance_id of this FlowExecutionSummary.
        :rtype: str
        """
        return self._system_instance_id

    @system_instance_id.setter
    def system_instance_id(self, system_instance_id):
        """Sets the system_instance_id of this FlowExecutionSummary.


        :param system_instance_id: The system_instance_id of this FlowExecutionSummary.
        :type system_instance_id: str
        """

        self._system_instance_id = system_instance_id

    @property
    def flow_template_id(self):
        """Gets the flow_template_id of this FlowExecutionSummary.


        :return: The flow_template_id of this FlowExecutionSummary.
        :rtype: str
        """
        return self._flow_template_id

    @flow_template_id.setter
    def flow_template_id(self, flow_template_id):
        """Sets the flow_template_id of this FlowExecutionSummary.


        :param flow_template_id: The flow_template_id of this FlowExecutionSummary.
        :type flow_template_id: str
        """

        self._flow_template_id = flow_template_id

    @property
    def created_at(self):
        """Gets the created_at of this FlowExecutionSummary.


        :return: The created_at of this FlowExecutionSummary.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this FlowExecutionSummary.


        :param created_at: The created_at of this FlowExecutionSummary.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this FlowExecutionSummary.


        :return: The updated_at of this FlowExecutionSummary.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this FlowExecutionSummary.


        :param updated_at: The updated_at of this FlowExecutionSummary.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
