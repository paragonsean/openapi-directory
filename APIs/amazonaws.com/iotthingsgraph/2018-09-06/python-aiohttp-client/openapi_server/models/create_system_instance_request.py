# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.definition_document import DefinitionDocument
from openapi_server.models.deployment_target import DeploymentTarget
from openapi_server.models.metrics_configuration import MetricsConfiguration
from openapi_server import util


class CreateSystemInstanceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tags: List=None, definition: DefinitionDocument=None, target: DeploymentTarget=None, greengrass_group_name: str=None, s3_bucket_name: str=None, metrics_configuration: MetricsConfiguration=None, flow_actions_role_arn: str=None):
        """CreateSystemInstanceRequest - a model defined in OpenAPI

        :param tags: The tags of this CreateSystemInstanceRequest.
        :param definition: The definition of this CreateSystemInstanceRequest.
        :param target: The target of this CreateSystemInstanceRequest.
        :param greengrass_group_name: The greengrass_group_name of this CreateSystemInstanceRequest.
        :param s3_bucket_name: The s3_bucket_name of this CreateSystemInstanceRequest.
        :param metrics_configuration: The metrics_configuration of this CreateSystemInstanceRequest.
        :param flow_actions_role_arn: The flow_actions_role_arn of this CreateSystemInstanceRequest.
        """
        self.openapi_types = {
            'tags': List,
            'definition': DefinitionDocument,
            'target': DeploymentTarget,
            'greengrass_group_name': str,
            's3_bucket_name': str,
            'metrics_configuration': MetricsConfiguration,
            'flow_actions_role_arn': str
        }

        self.attribute_map = {
            'tags': 'tags',
            'definition': 'definition',
            'target': 'target',
            'greengrass_group_name': 'greengrassGroupName',
            's3_bucket_name': 's3BucketName',
            'metrics_configuration': 'metricsConfiguration',
            'flow_actions_role_arn': 'flowActionsRoleArn'
        }

        self._tags = tags
        self._definition = definition
        self._target = target
        self._greengrass_group_name = greengrass_group_name
        self._s3_bucket_name = s3_bucket_name
        self._metrics_configuration = metrics_configuration
        self._flow_actions_role_arn = flow_actions_role_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateSystemInstanceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateSystemInstanceRequest of this CreateSystemInstanceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tags(self):
        """Gets the tags of this CreateSystemInstanceRequest.


        :return: The tags of this CreateSystemInstanceRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateSystemInstanceRequest.


        :param tags: The tags of this CreateSystemInstanceRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def definition(self):
        """Gets the definition of this CreateSystemInstanceRequest.


        :return: The definition of this CreateSystemInstanceRequest.
        :rtype: DefinitionDocument
        """
        return self._definition

    @definition.setter
    def definition(self, definition):
        """Sets the definition of this CreateSystemInstanceRequest.


        :param definition: The definition of this CreateSystemInstanceRequest.
        :type definition: DefinitionDocument
        """
        if definition is None:
            raise ValueError("Invalid value for `definition`, must not be `None`")

        self._definition = definition

    @property
    def target(self):
        """Gets the target of this CreateSystemInstanceRequest.


        :return: The target of this CreateSystemInstanceRequest.
        :rtype: DeploymentTarget
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this CreateSystemInstanceRequest.


        :param target: The target of this CreateSystemInstanceRequest.
        :type target: DeploymentTarget
        """
        if target is None:
            raise ValueError("Invalid value for `target`, must not be `None`")

        self._target = target

    @property
    def greengrass_group_name(self):
        """Gets the greengrass_group_name of this CreateSystemInstanceRequest.


        :return: The greengrass_group_name of this CreateSystemInstanceRequest.
        :rtype: str
        """
        return self._greengrass_group_name

    @greengrass_group_name.setter
    def greengrass_group_name(self, greengrass_group_name):
        """Sets the greengrass_group_name of this CreateSystemInstanceRequest.


        :param greengrass_group_name: The greengrass_group_name of this CreateSystemInstanceRequest.
        :type greengrass_group_name: str
        """

        self._greengrass_group_name = greengrass_group_name

    @property
    def s3_bucket_name(self):
        """Gets the s3_bucket_name of this CreateSystemInstanceRequest.


        :return: The s3_bucket_name of this CreateSystemInstanceRequest.
        :rtype: str
        """
        return self._s3_bucket_name

    @s3_bucket_name.setter
    def s3_bucket_name(self, s3_bucket_name):
        """Sets the s3_bucket_name of this CreateSystemInstanceRequest.


        :param s3_bucket_name: The s3_bucket_name of this CreateSystemInstanceRequest.
        :type s3_bucket_name: str
        """

        self._s3_bucket_name = s3_bucket_name

    @property
    def metrics_configuration(self):
        """Gets the metrics_configuration of this CreateSystemInstanceRequest.


        :return: The metrics_configuration of this CreateSystemInstanceRequest.
        :rtype: MetricsConfiguration
        """
        return self._metrics_configuration

    @metrics_configuration.setter
    def metrics_configuration(self, metrics_configuration):
        """Sets the metrics_configuration of this CreateSystemInstanceRequest.


        :param metrics_configuration: The metrics_configuration of this CreateSystemInstanceRequest.
        :type metrics_configuration: MetricsConfiguration
        """

        self._metrics_configuration = metrics_configuration

    @property
    def flow_actions_role_arn(self):
        """Gets the flow_actions_role_arn of this CreateSystemInstanceRequest.


        :return: The flow_actions_role_arn of this CreateSystemInstanceRequest.
        :rtype: str
        """
        return self._flow_actions_role_arn

    @flow_actions_role_arn.setter
    def flow_actions_role_arn(self, flow_actions_role_arn):
        """Sets the flow_actions_role_arn of this CreateSystemInstanceRequest.


        :param flow_actions_role_arn: The flow_actions_role_arn of this CreateSystemInstanceRequest.
        :type flow_actions_role_arn: str
        """

        self._flow_actions_role_arn = flow_actions_role_arn
