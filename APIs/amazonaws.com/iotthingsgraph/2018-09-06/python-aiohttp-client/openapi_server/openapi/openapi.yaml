openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph\
    \ provides an integrated set of tools that enable developers to connect devices\
    \ and services that use different standards, such as units of measure and communication\
    \ protocols. AWS IoT Things Graph makes it possible to build IoT applications\
    \ with little to no code by connecting devices and services and defining how they\
    \ interact at an abstract level.</p> <p>For more information about how AWS IoT\
    \ Things Graph works, see the <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html\"\
    >User Guide</a>.</p> <p>The AWS IoT Things Graph service is discontinued.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS IoT Things Graph
  version: 2018-09-06
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: iotthingsgraph
  x-aws-signingName: iotthingsgraph
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotthingsgraph-2018-09-06.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/iotthingsgraph/
servers:
- description: The AWS IoT Things Graph multi-region endpoint
  url: "http://iotthingsgraph.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS IoT Things Graph multi-region endpoint
  url: "https://iotthingsgraph.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS IoT Things Graph endpoint for China (Beijing) and China (Ningxia)
  url: "http://iotthingsgraph.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS IoT Things Graph endpoint for China (Beijing) and China (Ningxia)
  url: "https://iotthingsgraph.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=IotThingsGraphFrontEndService.AssociateEntityToThing:
    post:
      deprecated: true
      description: "<p>Associates a device with a concrete thing that is in the user's\
        \ registry.</p> <p>A thing can be associated with only one device at a time.\
        \ If you associate a thing with a new device id, its previous association\
        \ will be removed.</p>"
      operationId: associate_entity_to_thing
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.AssociateEntityToThing
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateEntityToThingRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateEntityToThingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.CreateFlowTemplate:
    post:
      deprecated: true
      description: Creates a workflow template. Workflows can be created only in the
        user's namespace. (The public namespace contains only entities.) The workflow
        can contain only entities in the specified namespace. The workflow is validated
        against the entities in the latest version of the user's namespace unless
        another namespace version is specified in the request.
      operationId: create_flow_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.CreateFlowTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFlowTemplateRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFlowTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.CreateSystemInstance:
    post:
      deprecated: true
      description: "<p>Creates a system instance. </p> <p>This action validates the\
        \ system instance, prepares the deployment-related resources. For Greengrass\
        \ deployments, it updates the Greengrass group that is specified by the <code>greengrassGroupName</code>\
        \ parameter. It also adds a file to the S3 bucket specified by the <code>s3BucketName</code>\
        \ parameter. You need to call <code>DeploySystemInstance</code> after running\
        \ this action.</p> <p>For Greengrass deployments, since this action modifies\
        \ and adds resources to a Greengrass group and an S3 bucket on the caller's\
        \ behalf, the calling identity must have write permissions to both the specified\
        \ Greengrass group and S3 bucket. Otherwise, the call will fail with an authorization\
        \ error.</p> <p>For cloud deployments, this action requires a <code>flowActionsRoleArn</code>\
        \ value. This is an IAM role that has permissions to access AWS services,\
        \ such as AWS Lambda and AWS IoT, that the flow uses when it executes.</p>\
        \ <p>If the definition document doesn't specify a version of the user's namespace,\
        \ the latest version will be used by default.</p>"
      operationId: create_system_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.CreateSystemInstance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSystemInstanceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSystemInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.CreateSystemTemplate:
    post:
      deprecated: true
      description: Creates a system. The system is validated against the entities
        in the latest version of the user's namespace unless another namespace version
        is specified in the request.
      operationId: create_system_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.CreateSystemTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSystemTemplateRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSystemTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.DeleteFlowTemplate:
    post:
      deprecated: true
      description: Deletes a workflow. Any new system or deployment that contains
        this workflow will fail to update or deploy. Existing deployments that contain
        the workflow will continue to run (since they use a snapshot of the workflow
        taken at the time of deployment).
      operationId: delete_flow_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.DeleteFlowTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFlowTemplateRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFlowTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.DeleteNamespace:
    post:
      deprecated: true
      description: Deletes the specified namespace. This action deletes all of the
        entities in the namespace. Delete the systems and flows that use entities
        in the namespace before performing this action. This action takes no request
        parameters.
      operationId: delete_namespace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.DeleteNamespace
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteNamespaceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNamespaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.DeleteSystemInstance:
    post:
      deprecated: true
      description: "<p>Deletes a system instance. Only system instances that have\
        \ never been deployed, or that have been undeployed can be deleted.</p> <p>Users\
        \ can create a new system instance that has the same ID as a deleted system\
        \ instance.</p>"
      operationId: delete_system_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.DeleteSystemInstance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSystemInstanceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSystemInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.DeleteSystemTemplate:
    post:
      deprecated: true
      description: Deletes a system. New deployments can't contain the system after
        its deletion. Existing deployments that contain the system will continue to
        work because they use a snapshot of the system that is taken when it is deployed.
      operationId: delete_system_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.DeleteSystemTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSystemTemplateRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSystemTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.DeploySystemInstance:
    post:
      deprecated: true
      description: "<p> <b>Greengrass and Cloud Deployments</b> </p> <p>Deploys the\
        \ system instance to the target specified in <code>CreateSystemInstance</code>.\
        \ </p> <p> <b>Greengrass Deployments</b> </p> <p>If the system or any workflows\
        \ and entities have been updated before this action is called, then the deployment\
        \ will create a new Amazon Simple Storage Service resource file and then deploy\
        \ it.</p> <p>Since this action creates a Greengrass deployment on the caller's\
        \ behalf, the calling identity must have write permissions to the specified\
        \ Greengrass group. Otherwise, the call will fail with an authorization error.</p>\
        \ <p>For information about the artifacts that get added to your Greengrass\
        \ core device when you use this API, see <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-greengrass.html\"\
        >AWS IoT Things Graph and AWS IoT Greengrass</a>.</p>"
      operationId: deploy_system_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.DeploySystemInstance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploySystemInstanceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploySystemInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.DeprecateFlowTemplate:
    post:
      deprecated: true
      description: "Deprecates the specified workflow. This action marks the workflow\
        \ for deletion. Deprecated flows can't be deployed, but existing deployments\
        \ will continue to run."
      operationId: deprecate_flow_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.DeprecateFlowTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeprecateFlowTemplateRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecateFlowTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.DeprecateSystemTemplate:
    post:
      deprecated: true
      description: Deprecates the specified system.
      operationId: deprecate_system_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.DeprecateSystemTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeprecateSystemTemplateRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecateSystemTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.DescribeNamespace:
    post:
      deprecated: true
      description: Gets the latest version of the user's namespace and the public
        version that it is tracking.
      operationId: describe_namespace
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.DescribeNamespace
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeNamespaceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeNamespaceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.DissociateEntityFromThing:
    post:
      deprecated: true
      description: Dissociates a device entity from a concrete thing. The action takes
        only the type of the entity that you need to dissociate because only one entity
        of a particular type can be associated with a thing.
      operationId: dissociate_entity_from_thing
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.DissociateEntityFromThing
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DissociateEntityFromThingRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DissociateEntityFromThingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetEntities:
    post:
      deprecated: true
      description: "<p>Gets definitions of the specified entities. Uses the latest\
        \ version of the user's namespace by default. This API returns the following\
        \ TDM entities.</p> <ul> <li> <p>Properties</p> </li> <li> <p>States</p> </li>\
        \ <li> <p>Events</p> </li> <li> <p>Actions</p> </li> <li> <p>Capabilities</p>\
        \ </li> <li> <p>Mappings</p> </li> <li> <p>Devices</p> </li> <li> <p>Device\
        \ Models</p> </li> <li> <p>Services</p> </li> </ul> <p>This action doesn't\
        \ return definitions for systems, flows, and deployments.</p>"
      operationId: get_entities
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.GetEntities
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEntitiesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEntitiesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetFlowTemplate:
    post:
      deprecated: true
      description: Gets the latest version of the <code>DefinitionDocument</code>
        and <code>FlowTemplateSummary</code> for the specified workflow.
      operationId: get_flow_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.GetFlowTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFlowTemplateRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFlowTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetFlowTemplateRevisions:
    post:
      deprecated: true
      description: "Gets revisions of the specified workflow. Only the last 100 revisions\
        \ are stored. If the workflow has been deprecated, this action will return\
        \ revisions that occurred before the deprecation. This action won't work for\
        \ workflows that have been deleted."
      operationId: get_flow_template_revisions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.GetFlowTemplateRevisions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFlowTemplateRevisionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFlowTemplateRevisionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetNamespaceDeletionStatus:
    post:
      deprecated: true
      description: Gets the status of a namespace deletion task.
      operationId: get_namespace_deletion_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.GetNamespaceDeletionStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetNamespaceDeletionStatusRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNamespaceDeletionStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetSystemInstance:
    post:
      deprecated: true
      description: Gets a system instance.
      operationId: get_system_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.GetSystemInstance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSystemInstanceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetSystemTemplate:
    post:
      deprecated: true
      description: Gets a system.
      operationId: get_system_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.GetSystemTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSystemTemplateRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetSystemTemplateRevisions:
    post:
      deprecated: true
      description: "Gets revisions made to the specified system template. Only the\
        \ previous 100 revisions are stored. If the system has been deprecated, this\
        \ action will return the revisions that occurred before its deprecation. This\
        \ action won't work with systems that have been deleted."
      operationId: get_system_template_revisions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.GetSystemTemplateRevisions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSystemTemplateRevisionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemTemplateRevisionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.GetUploadStatus:
    post:
      deprecated: true
      description: Gets the status of the specified upload.
      operationId: get_upload_status
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.GetUploadStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUploadStatusRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUploadStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.ListFlowExecutionMessages:
    post:
      deprecated: true
      description: Returns a list of objects that contain information about events
        in a flow execution.
      operationId: list_flow_execution_messages
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.ListFlowExecutionMessages
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFlowExecutionMessagesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFlowExecutionMessagesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.ListTagsForResource:
    post:
      deprecated: true
      description: Lists all tags on an AWS IoT Things Graph resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.SearchEntities:
    post:
      deprecated: true
      description: Searches for entities of the specified type. You can search for
        entities in your namespace and the public namespace that you're tracking.
      operationId: search_entities
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.SearchEntities
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntitiesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchEntitiesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.SearchFlowExecutions:
    post:
      deprecated: true
      description: Searches for AWS IoT Things Graph workflow execution instances.
      operationId: search_flow_executions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.SearchFlowExecutions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchFlowExecutionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchFlowExecutionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.SearchFlowTemplates:
    post:
      deprecated: true
      description: Searches for summary information about workflows.
      operationId: search_flow_templates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.SearchFlowTemplates
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchFlowTemplatesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchFlowTemplatesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.SearchSystemInstances:
    post:
      deprecated: true
      description: Searches for system instances in the user's account.
      operationId: search_system_instances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.SearchSystemInstances
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSystemInstancesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSystemInstancesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.SearchSystemTemplates:
    post:
      deprecated: true
      description: Searches for summary information about systems in the user's account.
        You can filter by the ID of a workflow to return only systems that use the
        specified workflow.
      operationId: search_system_templates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.SearchSystemTemplates
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSystemTemplatesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSystemTemplatesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.SearchThings:
    post:
      deprecated: true
      description: "<p>Searches for things associated with the specified entity. You\
        \ can search by both device and device model.</p> <p>For example, if two different\
        \ devices, camera1 and camera2, implement the camera device model, the user\
        \ can associate thing1 to camera1 and thing2 to camera2. <code>SearchThings(camera2)</code>\
        \ will return only thing2, but <code>SearchThings(camera)</code> will return\
        \ both thing1 and thing2.</p> <p>This action searches for exact matches and\
        \ doesn't perform partial text matching.</p>"
      operationId: search_things
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.SearchThings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchThingsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchThingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.TagResource:
    post:
      deprecated: true
      description: Creates a tag for the specified resource.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.UndeploySystemInstance:
    post:
      deprecated: true
      description: Removes a system instance from its target (Cloud or Greengrass).
      operationId: undeploy_system_instance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.UndeploySystemInstance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeploySystemInstanceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UndeploySystemInstanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.UntagResource:
    post:
      deprecated: true
      description: Removes a tag from the specified resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.UpdateFlowTemplate:
    post:
      deprecated: true
      description: "Updates the specified workflow. All deployed systems and system\
        \ instances that use the workflow will see the changes in the flow when it\
        \ is redeployed. If you don't want this behavior, copy the workflow (creating\
        \ a new workflow with a different ID), and update the copy. The workflow can\
        \ contain only entities in the specified namespace. "
      operationId: update_flow_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.UpdateFlowTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFlowTemplateRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.UpdateSystemTemplate:
    post:
      deprecated: true
      description: Updates the specified system. You don't need to run this action
        after updating a workflow. Any deployment that uses the system will see the
        changes in the system when it is redeployed.
      operationId: update_system_template
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.UpdateSystemTemplate
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSystemTemplateRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSystemTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=IotThingsGraphFrontEndService.UploadEntityDefinitions:
    post:
      deprecated: true
      description: "<p>Asynchronously uploads one or more entity definitions to the\
        \ user's namespace. The <code>document</code> parameter is required if <code>syncWithPublicNamespace</code>\
        \ and <code>deleteExistingEntites</code> are false. If the <code>syncWithPublicNamespace</code>\
        \ parameter is set to <code>true</code>, the user's namespace will synchronize\
        \ with the latest version of the public namespace. If <code>deprecateExistingEntities</code>\
        \ is set to true, all entities in the latest version will be deleted before\
        \ the new <code>DefinitionDocument</code> is uploaded.</p> <p>When a user\
        \ uploads entity definitions for the first time, the service creates a new\
        \ namespace for the user. The new namespace tracks the public namespace. Currently\
        \ users can have only one namespace. The namespace version increments whenever\
        \ a user uploads entity definitions that are backwards-incompatible and whenever\
        \ a user sets the <code>syncWithPublicNamespace</code> parameter or the <code>deprecateExistingEntities</code>\
        \ parameter to <code>true</code>.</p> <p>The IDs for all of the entities should\
        \ be in URN format. Each entity must be in the user's namespace. Users can't\
        \ create entities in the public namespace, but entity definitions can refer\
        \ to entities in the public namespace.</p> <p>Valid entities are <code>Device</code>,\
        \ <code>DeviceModel</code>, <code>Service</code>, <code>Capability</code>,\
        \ <code>State</code>, <code>Action</code>, <code>Event</code>, <code>Property</code>,\
        \ <code>Mapping</code>, <code>Enum</code>. </p>"
      operationId: upload_entity_definitions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - IotThingsGraphFrontEndService.UploadEntityDefinitions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadEntityDefinitionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadEntityDefinitionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssociateEntityToThingResponse:
      properties: {}
      type: object
    AssociateEntityToThingRequest:
      example:
        namespaceVersion: ""
        thingName: ""
        entityId: ""
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          - description: The name of the thing to which the entity is to be associated.
          title: thingName
        entityId:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: <p>The ID of the device to be associated with the thing.</p>
              <p>The ID should be in the following format.</p> <p> <code>urn:tdm:REGION/ACCOUNT
              ID/default:device:DEVICENAME</code> </p>
          title: entityId
        namespaceVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the user's namespace. Defaults to the latest
              version of the user's namespace.
          title: namespaceVersion
      required:
      - entityId
      - thingName
      title: AssociateEntityToThingRequest
      type: object
    InvalidRequestException: {}
    ResourceNotFoundException: {}
    InternalFailureException: {}
    ThrottlingException: {}
    CreateFlowTemplateResponse:
      example:
        summary:
          createdAt: ""
          revisionNumber: ""
          id: ""
          arn: ""
      properties:
        summary:
          $ref: '#/components/schemas/CreateFlowTemplateResponse_summary'
      title: CreateFlowTemplateResponse
      type: object
    CreateFlowTemplateRequest:
      example:
        definition:
          language: ""
          text: ""
        compatibleNamespaceVersion: ""
      properties:
        definition:
          $ref: '#/components/schemas/CreateFlowTemplateRequest_definition'
        compatibleNamespaceVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: "<p>The namespace version in which the workflow is to be\
              \ created.</p> <p>If no value is specified, the latest version is used\
              \ by default.</p>"
          title: compatibleNamespaceVersion
      required:
      - definition
      title: CreateFlowTemplateRequest
      type: object
    ResourceAlreadyExistsException: {}
    LimitExceededException: {}
    CreateSystemInstanceResponse:
      example:
        summary:
          greengrassGroupName: ""
          createdAt: ""
          greengrassGroupVersionId: ""
          id: ""
          arn: ""
          greengrassGroupId: ""
          status: ""
          target: ""
          updatedAt: ""
      properties:
        summary:
          $ref: '#/components/schemas/CreateSystemInstanceResponse_summary'
      title: CreateSystemInstanceResponse
      type: object
    CreateSystemInstanceRequest:
      example:
        greengrassGroupName: ""
        metricsConfiguration:
          metricRuleRoleArn: ""
          cloudMetricEnabled: ""
        s3BucketName: ""
        flowActionsRoleArn: ""
        definition:
          language: ""
          text: ""
        tags: ""
        target: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "Metadata, consisting of key-value pairs, that can be used\
              \ to categorize your system instances."
          title: tags
        definition:
          $ref: '#/components/schemas/DefinitionDocument'
        target:
          allOf:
          - $ref: '#/components/schemas/DeploymentTarget'
          - description: The target type of the deployment. Valid values are <code>GREENGRASS</code>
              and <code>CLOUD</code>.
          title: target
        greengrassGroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The name of the Greengrass group where the system instance
              will be deployed. This value is required if the value of the <code>target</code>
              parameter is <code>GREENGRASS</code>.
          title: greengrassGroupName
        s3BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: The name of the Amazon Simple Storage Service bucket that
              will be used to store and deploy the system instance's resource file.
              This value is required if the value of the <code>target</code> parameter
              is <code>GREENGRASS</code>.
          title: s3BucketName
        metricsConfiguration:
          $ref: '#/components/schemas/MetricsConfiguration'
        flowActionsRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the IAM role that AWS IoT Things Graph will assume
              when it executes the flow. This role must have read and write access
              to AWS Lambda and AWS IoT and any other AWS services that the flow uses
              when it executes. This value is required if the value of the <code>target</code>
              parameter is <code>CLOUD</code>.
          title: flowActionsRoleArn
      required:
      - definition
      - target
      title: CreateSystemInstanceRequest
      type: object
    CreateSystemTemplateResponse:
      example:
        summary:
          createdAt: ""
          revisionNumber: ""
          id: ""
          arn: ""
      properties:
        summary:
          $ref: '#/components/schemas/CreateSystemTemplateResponse_summary'
      title: CreateSystemTemplateResponse
      type: object
    CreateSystemTemplateRequest:
      example:
        definition:
          language: ""
          text: ""
        compatibleNamespaceVersion: ""
      properties:
        definition:
          $ref: '#/components/schemas/CreateSystemTemplateRequest_definition'
        compatibleNamespaceVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: "<p>The namespace version in which the system is to be created.</p>\
              \ <p>If no value is specified, the latest version is used by default.</p>"
          title: compatibleNamespaceVersion
      required:
      - definition
      title: CreateSystemTemplateRequest
      type: object
    DeleteFlowTemplateResponse:
      properties: {}
      type: object
    DeleteFlowTemplateRequest:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: <p>The ID of the workflow to be deleted.</p> <p>The ID should
              be in the following format.</p> <p> <code>urn:tdm:REGION/ACCOUNT ID/default:workflow:WORKFLOWNAME</code>
              </p>
          title: id
      required:
      - id
      title: DeleteFlowTemplateRequest
      type: object
    ResourceInUseException: {}
    DeleteNamespaceResponse:
      example:
        namespaceArn: ""
        namespaceName: ""
      properties:
        namespaceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the namespace to be deleted.
          title: namespaceArn
        namespaceName:
          allOf:
          - $ref: '#/components/schemas/NamespaceName'
          - description: The name of the namespace to be deleted.
          title: namespaceName
      title: DeleteNamespaceResponse
      type: object
    DeleteNamespaceRequest:
      properties: {}
      title: DeleteNamespaceRequest
      type: object
    DeleteSystemInstanceResponse:
      properties: {}
      type: object
    DeleteSystemInstanceRequest:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: The ID of the system instance to be deleted.
          title: id
      title: DeleteSystemInstanceRequest
      type: object
    DeleteSystemTemplateResponse:
      properties: {}
      type: object
    DeleteSystemTemplateRequest:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: <p>The ID of the system to be deleted.</p> <p>The ID should
              be in the following format.</p> <p> <code>urn:tdm:REGION/ACCOUNT ID/default:system:SYSTEMNAME</code>
              </p>
          title: id
      required:
      - id
      title: DeleteSystemTemplateRequest
      type: object
    DeploySystemInstanceResponse:
      example:
        summary:
          greengrassGroupName: ""
          createdAt: ""
          greengrassGroupVersionId: ""
          id: ""
          arn: ""
          greengrassGroupId: ""
          status: ""
          target: ""
          updatedAt: ""
        greengrassDeploymentId: ""
      properties:
        summary:
          $ref: '#/components/schemas/DeploySystemInstanceResponse_summary'
        greengrassDeploymentId:
          allOf:
          - $ref: '#/components/schemas/GreengrassDeploymentId'
          - description: The ID of the Greengrass deployment used to deploy the system
              instance.
          title: greengrassDeploymentId
      required:
      - summary
      title: DeploySystemInstanceResponse
      type: object
    DeploySystemInstanceRequest:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: <p>The ID of the system instance. This value is returned
              by the <code>CreateSystemInstance</code> action.</p> <p>The ID should
              be in the following format.</p> <p> <code>urn:tdm:REGION/ACCOUNT ID/default:deployment:DEPLOYMENTNAME</code>
              </p>
          title: id
      title: DeploySystemInstanceRequest
      type: object
    DeprecateFlowTemplateResponse:
      properties: {}
      type: object
    DeprecateFlowTemplateRequest:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: <p>The ID of the workflow to be deleted.</p> <p>The ID should
              be in the following format.</p> <p> <code>urn:tdm:REGION/ACCOUNT ID/default:workflow:WORKFLOWNAME</code>
              </p>
          title: id
      required:
      - id
      title: DeprecateFlowTemplateRequest
      type: object
    DeprecateSystemTemplateResponse:
      properties: {}
      type: object
    DeprecateSystemTemplateRequest:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: <p>The ID of the system to delete.</p> <p>The ID should be
              in the following format.</p> <p> <code>urn:tdm:REGION/ACCOUNT ID/default:system:SYSTEMNAME</code>
              </p>
          title: id
      required:
      - id
      title: DeprecateSystemTemplateRequest
      type: object
    DescribeNamespaceResponse:
      example:
        trackingNamespaceName: ""
        namespaceVersion: ""
        namespaceArn: ""
        namespaceName: ""
        trackingNamespaceVersion: ""
      properties:
        namespaceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the namespace.
          title: namespaceArn
        namespaceName:
          allOf:
          - $ref: '#/components/schemas/NamespaceName'
          - description: The name of the namespace.
          title: namespaceName
        trackingNamespaceName:
          allOf:
          - $ref: '#/components/schemas/NamespaceName'
          - description: The name of the public namespace that the latest namespace
              version is tracking.
          title: trackingNamespaceName
        trackingNamespaceVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the public namespace that the latest version
              is tracking.
          title: trackingNamespaceVersion
        namespaceVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the user's namespace to describe.
          title: namespaceVersion
      title: DescribeNamespaceResponse
      type: object
    DescribeNamespaceRequest:
      example:
        namespaceName: ""
      properties:
        namespaceName:
          allOf:
          - $ref: '#/components/schemas/NamespaceName'
          - description: The name of the user's namespace. Set this to <code>aws</code>
              to get the public namespace.
          title: namespaceName
      title: DescribeNamespaceRequest
      type: object
    DissociateEntityFromThingResponse:
      properties: {}
      type: object
    DissociateEntityFromThingRequest:
      example:
        entityType: ""
        thingName: ""
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          - description: The name of the thing to disassociate.
          title: thingName
        entityType:
          allOf:
          - $ref: '#/components/schemas/EntityType'
          - description: The entity type from which to disassociate the thing.
          title: entityType
      required:
      - entityType
      - thingName
      title: DissociateEntityFromThingRequest
      type: object
    GetEntitiesResponse:
      example:
        descriptions: ""
      properties:
        descriptions:
          allOf:
          - $ref: '#/components/schemas/EntityDescriptions'
          - description: An array of descriptions for the specified entities.
          title: descriptions
      title: GetEntitiesResponse
      type: object
    GetEntitiesRequest:
      example:
        namespaceVersion: ""
        ids: ""
      properties:
        ids:
          allOf:
          - $ref: '#/components/schemas/Urns'
          - description: <p>An array of entity IDs.</p> <p>The IDs should be in the
              following format.</p> <p> <code>urn:tdm:REGION/ACCOUNT ID/default:device:DEVICENAME</code>
              </p>
          title: ids
        namespaceVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the user's namespace. Defaults to the latest
              version of the user's namespace.
          title: namespaceVersion
      required:
      - ids
      title: GetEntitiesRequest
      type: object
    GetFlowTemplateResponse:
      example:
        description:
          summary:
            createdAt: ""
            revisionNumber: ""
            id: ""
            arn: ""
          definition:
            language: ""
            text: ""
          validatedNamespaceVersion: ""
      properties:
        description:
          $ref: '#/components/schemas/GetFlowTemplateResponse_description'
      title: GetFlowTemplateResponse
      type: object
    GetFlowTemplateRequest:
      example:
        revisionNumber: ""
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: <p>The ID of the workflow.</p> <p>The ID should be in the
              following format.</p> <p> <code>urn:tdm:REGION/ACCOUNT ID/default:workflow:WORKFLOWNAME</code>
              </p>
          title: id
        revisionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The number of the workflow revision to retrieve.
          title: revisionNumber
      required:
      - id
      title: GetFlowTemplateRequest
      type: object
    GetFlowTemplateRevisionsResponse:
      example:
        nextToken: ""
        summaries: ""
      properties:
        summaries:
          allOf:
          - $ref: '#/components/schemas/FlowTemplateSummaries'
          - description: An array of objects that provide summary data about each
              revision.
          title: summaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string to specify as <code>nextToken</code> when you
              request the next page of results.
          title: nextToken
      title: GetFlowTemplateRevisionsResponse
      type: object
    GetFlowTemplateRevisionsRequest:
      example:
        nextToken: ""
        maxResults: ""
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: <p>The ID of the workflow.</p> <p>The ID should be in the
              following format.</p> <p> <code>urn:tdm:REGION/ACCOUNT ID/default:workflow:WORKFLOWNAME</code>
              </p>
          title: id
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string that specifies the next page of results. Use this
              when you're paginating results.
          title: nextToken
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in the response.
          title: maxResults
      required:
      - id
      title: GetFlowTemplateRevisionsRequest
      type: object
    GetNamespaceDeletionStatusResponse:
      example:
        namespaceArn: ""
        errorMessage: ""
        errorCode: ""
        namespaceName: ""
        status: ""
      properties:
        namespaceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the namespace that is being deleted.
          title: namespaceArn
        namespaceName:
          allOf:
          - $ref: '#/components/schemas/NamespaceName'
          - description: The name of the namespace that is being deleted.
          title: namespaceName
        status:
          allOf:
          - $ref: '#/components/schemas/NamespaceDeletionStatus'
          - description: The status of the deletion request.
          title: status
        errorCode:
          allOf:
          - $ref: '#/components/schemas/NamespaceDeletionStatusErrorCodes'
          - description: An error code returned by the namespace deletion task.
          title: errorCode
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An error code returned by the namespace deletion task.
          title: errorMessage
      title: GetNamespaceDeletionStatusResponse
      type: object
    GetNamespaceDeletionStatusRequest:
      properties: {}
      title: GetNamespaceDeletionStatusRequest
      type: object
    GetSystemInstanceResponse:
      example:
        description:
          summary:
            greengrassGroupName: ""
            createdAt: ""
            greengrassGroupVersionId: ""
            id: ""
            arn: ""
            greengrassGroupId: ""
            status: ""
            target: ""
            updatedAt: ""
          metricsConfiguration:
            metricRuleRoleArn: ""
            cloudMetricEnabled: ""
          validatedDependencyRevisions: ""
          s3BucketName: ""
          flowActionsRoleArn: ""
          definition:
            language: ""
            text: ""
          validatedNamespaceVersion: ""
      properties:
        description:
          $ref: '#/components/schemas/GetSystemInstanceResponse_description'
      title: GetSystemInstanceResponse
      type: object
    GetSystemInstanceRequest:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: <p>The ID of the system deployment instance. This value is
              returned by <code>CreateSystemInstance</code>.</p> <p>The ID should
              be in the following format.</p> <p> <code>urn:tdm:REGION/ACCOUNT ID/default:deployment:DEPLOYMENTNAME</code>
              </p>
          title: id
      required:
      - id
      title: GetSystemInstanceRequest
      type: object
    GetSystemTemplateResponse:
      example:
        description:
          summary:
            createdAt: ""
            revisionNumber: ""
            id: ""
            arn: ""
          definition:
            language: ""
            text: ""
          validatedNamespaceVersion: ""
      properties:
        description:
          $ref: '#/components/schemas/GetSystemTemplateResponse_description'
      title: GetSystemTemplateResponse
      type: object
    GetSystemTemplateRequest:
      example:
        revisionNumber: ""
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: <p>The ID of the system to get. This ID must be in the user's
              namespace.</p> <p>The ID should be in the following format.</p> <p>
              <code>urn:tdm:REGION/ACCOUNT ID/default:system:SYSTEMNAME</code> </p>
          title: id
        revisionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The number that specifies the revision of the system to get.
          title: revisionNumber
      required:
      - id
      title: GetSystemTemplateRequest
      type: object
    GetSystemTemplateRevisionsResponse:
      example:
        nextToken: ""
        summaries: ""
      properties:
        summaries:
          allOf:
          - $ref: '#/components/schemas/SystemTemplateSummaries'
          - description: An array of objects that contain summary data about the system
              template revisions.
          title: summaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'The string to specify as <code>nextToken</code> when you
              request the next page of results. '
          title: nextToken
      title: GetSystemTemplateRevisionsResponse
      type: object
    GetSystemTemplateRevisionsRequest:
      example:
        nextToken: ""
        maxResults: ""
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: <p>The ID of the system template.</p> <p>The ID should be
              in the following format.</p> <p> <code>urn:tdm:REGION/ACCOUNT ID/default:system:SYSTEMNAME</code>
              </p>
          title: id
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string that specifies the next page of results. Use this
              when you're paginating results.
          title: nextToken
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in the response.
          title: maxResults
      required:
      - id
      title: GetSystemTemplateRevisionsRequest
      type: object
    GetUploadStatusResponse:
      example:
        createdDate: ""
        uploadId: ""
        namespaceVersion: ""
        failureReason: ""
        namespaceArn: ""
        uploadStatus: ""
        namespaceName: ""
      properties:
        uploadId:
          allOf:
          - $ref: '#/components/schemas/UploadId'
          - description: The ID of the upload.
          title: uploadId
        uploadStatus:
          allOf:
          - $ref: '#/components/schemas/UploadStatus'
          - description: The status of the upload. The initial status is <code>IN_PROGRESS</code>.
              The response show all validation failures if the upload fails.
          title: uploadStatus
        namespaceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the upload.
          title: namespaceArn
        namespaceName:
          allOf:
          - $ref: '#/components/schemas/NamespaceName'
          - description: The name of the upload's namespace.
          title: namespaceName
        namespaceVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the user's namespace. Defaults to the latest
              version of the user's namespace.
          title: namespaceVersion
        failureReason:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: The reason for an upload failure.
          title: failureReason
        createdDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date at which the upload was created.
          title: createdDate
      required:
      - createdDate
      - uploadId
      - uploadStatus
      title: GetUploadStatusResponse
      type: object
    GetUploadStatusRequest:
      example:
        uploadId: ""
      properties:
        uploadId:
          allOf:
          - $ref: '#/components/schemas/UploadId'
          - description: The ID of the upload. This value is returned by the <code>UploadEntityDefinitions</code>
              action.
          title: uploadId
      required:
      - uploadId
      title: GetUploadStatusRequest
      type: object
    ListFlowExecutionMessagesResponse:
      example:
        nextToken: ""
        messages: ""
      properties:
        messages:
          allOf:
          - $ref: '#/components/schemas/FlowExecutionMessages'
          - description: A list of objects that contain information about events in
              the specified flow execution.
          title: messages
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'The string to specify as <code>nextToken</code> when you
              request the next page of results. '
          title: nextToken
      title: ListFlowExecutionMessagesResponse
      type: object
    ListFlowExecutionMessagesRequest:
      example:
        nextToken: ""
        maxResults: ""
        flowExecutionId: ""
      properties:
        flowExecutionId:
          allOf:
          - $ref: '#/components/schemas/FlowExecutionId'
          - description: The ID of the flow execution.
          title: flowExecutionId
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string that specifies the next page of results. Use this
              when you're paginating results.
          title: nextToken
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in the response.
          title: maxResults
      required:
      - flowExecutionId
      title: ListFlowExecutionMessagesRequest
      type: object
    ListTagsForResourceResponse:
      example:
        nextToken: ""
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: List of tags returned by the <code>ListTagsForResource</code>
              operation.
          title: tags
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token that specifies the next page of results to return.
          title: nextToken
      title: ListTagsForResourceResponse
      type: object
    ListTagsForResourceRequest:
      example:
        maxResults: ""
        nextToken: ""
        resourceArn: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of tags to return.
          title: maxResults
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the resource whose tags
              are to be returned.
          title: resourceArn
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token that specifies the next page of results to return.
          title: nextToken
      required:
      - resourceArn
      title: ListTagsForResourceRequest
      type: object
    SearchEntitiesResponse:
      example:
        nextToken: ""
        descriptions: ""
      properties:
        descriptions:
          allOf:
          - $ref: '#/components/schemas/EntityDescriptions'
          - description: An array of descriptions for each entity returned in the
              search result.
          title: descriptions
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string to specify as <code>nextToken</code> when you
              request the next page of results.
          title: nextToken
      title: SearchEntitiesResponse
      type: object
    SearchEntitiesRequest:
      example:
        nextToken: ""
        maxResults: ""
        namespaceVersion: ""
        entityTypes: ""
        filters: ""
      properties:
        entityTypes:
          allOf:
          - $ref: '#/components/schemas/EntityTypes'
          - description: The entity types for which to search.
          title: entityTypes
        filters:
          allOf:
          - $ref: '#/components/schemas/EntityFilters'
          - description: "<p>Optional filter to apply to the search. Valid filters\
              \ are <code>NAME</code> <code>NAMESPACE</code>, <code>SEMANTIC_TYPE_PATH</code>\
              \ and <code>REFERENCED_ENTITY_ID</code>. <code>REFERENCED_ENTITY_ID</code>\
              \ filters on entities that are used by the entity in the result set.\
              \ For example, you can filter on the ID of a property that is used in\
              \ a state.</p> <p>Multiple filters function as OR criteria in the query.\
              \ Multiple values passed inside the filter function as AND criteria.</p>"
          title: filters
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string that specifies the next page of results. Use this
              when you're paginating results.
          title: nextToken
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in the response.
          title: maxResults
        namespaceVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the user's namespace. Defaults to the latest
              version of the user's namespace.
          title: namespaceVersion
      required:
      - entityTypes
      title: SearchEntitiesRequest
      type: object
    SearchFlowExecutionsResponse:
      example:
        nextToken: ""
        summaries: ""
      properties:
        summaries:
          allOf:
          - $ref: '#/components/schemas/FlowExecutionSummaries'
          - description: An array of objects that contain summary information about
              each workflow execution in the result set.
          title: summaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string to specify as <code>nextToken</code> when you
              request the next page of results.
          title: nextToken
      title: SearchFlowExecutionsResponse
      type: object
    SearchFlowExecutionsRequest:
      example:
        nextToken: ""
        maxResults: ""
        systemInstanceId: ""
        flowExecutionId: ""
        startTime: ""
        endTime: ""
      properties:
        systemInstanceId:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: The ID of the system instance that contains the flow.
          title: systemInstanceId
        flowExecutionId:
          allOf:
          - $ref: '#/components/schemas/FlowExecutionId'
          - description: The ID of a flow execution.
          title: flowExecutionId
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time of the earliest flow execution to return.
          title: startTime
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time of the latest flow execution to return.
          title: endTime
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string that specifies the next page of results. Use this
              when you're paginating results.
          title: nextToken
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in the response.
          title: maxResults
      required:
      - systemInstanceId
      title: SearchFlowExecutionsRequest
      type: object
    SearchFlowTemplatesResponse:
      example:
        nextToken: ""
        summaries: ""
      properties:
        summaries:
          allOf:
          - $ref: '#/components/schemas/FlowTemplateSummaries'
          - description: An array of objects that contain summary information about
              each workflow in the result set.
          title: summaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string to specify as <code>nextToken</code> when you
              request the next page of results.
          title: nextToken
      title: SearchFlowTemplatesResponse
      type: object
    SearchFlowTemplatesRequest:
      example:
        nextToken: ""
        maxResults: ""
        filters: ""
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/FlowTemplateFilters'
          - description: An array of objects that limit the result set. The only valid
              filter is <code>DEVICE_MODEL_ID</code>.
          title: filters
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string that specifies the next page of results. Use this
              when you're paginating results.
          title: nextToken
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in the response.
          title: maxResults
      title: SearchFlowTemplatesRequest
      type: object
    SearchSystemInstancesResponse:
      example:
        nextToken: ""
        summaries: ""
      properties:
        summaries:
          allOf:
          - $ref: '#/components/schemas/SystemInstanceSummaries'
          - description: An array of objects that contain summary data abour the system
              instances in the result set.
          title: summaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'The string to specify as <code>nextToken</code> when you
              request the next page of results. '
          title: nextToken
      title: SearchSystemInstancesResponse
      type: object
    SearchSystemInstancesRequest:
      example:
        nextToken: ""
        maxResults: ""
        filters: ""
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/SystemInstanceFilters'
          - description: "<p>Optional filter to apply to the search. Valid filters\
              \ are <code>SYSTEM_TEMPLATE_ID</code>, <code>STATUS</code>, and <code>GREENGRASS_GROUP_NAME</code>.</p>\
              \ <p>Multiple filters function as OR criteria in the query. Multiple\
              \ values passed inside the filter function as AND criteria.</p>"
          title: filters
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string that specifies the next page of results. Use this
              when you're paginating results.
          title: nextToken
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in the response.
          title: maxResults
      title: SearchSystemInstancesRequest
      type: object
    SearchSystemTemplatesResponse:
      example:
        nextToken: ""
        summaries: ""
      properties:
        summaries:
          allOf:
          - $ref: '#/components/schemas/SystemTemplateSummaries'
          - description: An array of objects that contain summary information about
              each system deployment in the result set.
          title: summaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string to specify as <code>nextToken</code> when you
              request the next page of results.
          title: nextToken
      title: SearchSystemTemplatesResponse
      type: object
    SearchSystemTemplatesRequest:
      example:
        nextToken: ""
        maxResults: ""
        filters: ""
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/SystemTemplateFilters'
          - description: An array of filters that limit the result set. The only valid
              filter is <code>FLOW_TEMPLATE_ID</code>.
          title: filters
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string that specifies the next page of results. Use this
              when you're paginating results.
          title: nextToken
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in the response.
          title: maxResults
      title: SearchSystemTemplatesRequest
      type: object
    SearchThingsResponse:
      example:
        nextToken: ""
        things: ""
      properties:
        things:
          allOf:
          - $ref: '#/components/schemas/Things'
          - description: An array of things in the result set.
          title: things
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string to specify as <code>nextToken</code> when you
              request the next page of results.
          title: nextToken
      title: SearchThingsResponse
      type: object
    SearchThingsRequest:
      example:
        nextToken: ""
        maxResults: ""
        namespaceVersion: ""
        entityId: ""
      properties:
        entityId:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: <p>The ID of the entity to which the things are associated.</p>
              <p>The IDs should be in the following format.</p> <p> <code>urn:tdm:REGION/ACCOUNT
              ID/default:device:DEVICENAME</code> </p>
          title: entityId
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The string that specifies the next page of results. Use this
              when you're paginating results.
          title: nextToken
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in the response.
          title: maxResults
        namespaceVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the user's namespace. Defaults to the latest
              version of the user's namespace.
          title: namespaceVersion
      required:
      - entityId
      title: SearchThingsRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        resourceArn: ""
        tags: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the resource whose tags
              are returned.
          title: resourceArn
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of tags to add to the resource.&gt;
          title: tags
      required:
      - resourceArn
      - tags
      title: TagResourceRequest
      type: object
    UndeploySystemInstanceResponse:
      example:
        summary:
          greengrassGroupName: ""
          createdAt: ""
          greengrassGroupVersionId: ""
          id: ""
          arn: ""
          greengrassGroupId: ""
          status: ""
          target: ""
          updatedAt: ""
      properties:
        summary:
          $ref: '#/components/schemas/UndeploySystemInstanceResponse_summary'
      title: UndeploySystemInstanceResponse
      type: object
    UndeploySystemInstanceRequest:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: The ID of the system instance to remove from its target.
          title: id
      title: UndeploySystemInstanceRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        tagKeys: ""
        resourceArn: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the resource whose tags
              are to be removed.
          title: resourceArn
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: "<p>A list of tag key names to remove from the resource.\
              \ You don't specify the value. Both the key and its associated value\
              \ are removed. </p> <p>This parameter to the API requires a JSON text\
              \ string argument. For information on how to format a JSON parameter\
              \ for the various command line tool environments, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters.html#cli-using-param-json\"\
              >Using JSON for Parameters</a> in the <i>AWS CLI User Guide</i>. </p>"
          title: tagKeys
      required:
      - resourceArn
      - tagKeys
      title: UntagResourceRequest
      type: object
    UpdateFlowTemplateResponse:
      example:
        summary:
          createdAt: ""
          revisionNumber: ""
          id: ""
          arn: ""
      properties:
        summary:
          $ref: '#/components/schemas/UpdateFlowTemplateResponse_summary'
      title: UpdateFlowTemplateResponse
      type: object
    UpdateFlowTemplateRequest:
      example:
        definition:
          language: ""
          text: ""
        id: ""
        compatibleNamespaceVersion: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: <p>The ID of the workflow to be updated.</p> <p>The ID should
              be in the following format.</p> <p> <code>urn:tdm:REGION/ACCOUNT ID/default:workflow:WORKFLOWNAME</code>
              </p>
          title: id
        definition:
          $ref: '#/components/schemas/UpdateFlowTemplateRequest_definition'
        compatibleNamespaceVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: "<p>The version of the user's namespace.</p> <p>If no value\
              \ is specified, the latest version is used by default. Use the <code>GetFlowTemplateRevisions</code>\
              \ if you want to find earlier revisions of the flow to update.</p>"
          title: compatibleNamespaceVersion
      required:
      - definition
      - id
      title: UpdateFlowTemplateRequest
      type: object
    UpdateSystemTemplateResponse:
      example:
        summary:
          createdAt: ""
          revisionNumber: ""
          id: ""
          arn: ""
      properties:
        summary:
          $ref: '#/components/schemas/UpdateSystemTemplateResponse_summary'
      title: UpdateSystemTemplateResponse
      type: object
    UpdateSystemTemplateRequest:
      example:
        definition:
          language: ""
          text: ""
        id: ""
        compatibleNamespaceVersion: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: <p>The ID of the system to be updated.</p> <p>The ID should
              be in the following format.</p> <p> <code>urn:tdm:REGION/ACCOUNT ID/default:system:SYSTEMNAME</code>
              </p>
          title: id
        definition:
          $ref: '#/components/schemas/UpdateSystemTemplateRequest_definition'
        compatibleNamespaceVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: "<p>The version of the user's namespace. Defaults to the\
              \ latest version of the user's namespace.</p> <p>If no value is specified,\
              \ the latest version is used by default.</p>"
          title: compatibleNamespaceVersion
      required:
      - definition
      - id
      title: UpdateSystemTemplateRequest
      type: object
    UploadEntityDefinitionsResponse:
      example:
        uploadId: ""
      properties:
        uploadId:
          allOf:
          - $ref: '#/components/schemas/UploadId'
          - description: The ID that specifies the upload action. You can use this
              to track the status of the upload.
          title: uploadId
      required:
      - uploadId
      title: UploadEntityDefinitionsResponse
      type: object
    UploadEntityDefinitionsRequest:
      example:
        deprecateExistingEntities: ""
        document:
          language: ""
          text: ""
        syncWithPublicNamespace: ""
      properties:
        document:
          $ref: '#/components/schemas/UploadEntityDefinitionsRequest_document'
        syncWithPublicNamespace:
          allOf:
          - $ref: '#/components/schemas/SyncWithPublicNamespace'
          - description: "A Boolean that specifies whether to synchronize with the\
              \ latest version of the public namespace. If set to <code>true</code>,\
              \ the upload will create a new namespace version."
          title: syncWithPublicNamespace
        deprecateExistingEntities:
          allOf:
          - $ref: '#/components/schemas/DeprecateExistingEntities'
          - description: "A Boolean that specifies whether to deprecate all entities\
              \ in the latest version before uploading the new <code>DefinitionDocument</code>.\
              \ If set to <code>true</code>, the upload will create a new namespace\
              \ version."
          title: deprecateExistingEntities
      title: UploadEntityDefinitionsRequest
      type: object
    Arn:
      type: string
    ThingName:
      maxLength: 128
      minLength: 1
      pattern: "[a-zA-Z0-9:_-]+"
      type: string
    Urn:
      maxLength: 160
      pattern: "^urn:tdm:(([a-z]{2}-(gov-)?[a-z]{4,9}-[0-9]{1,3}/[0-9]+/)*[\\p{Alnum}_]+(/[\\\
        p{Alnum}_]+)*):([\\p{Alpha}]*):([\\p{Alnum}_]+(/[\\p{Alnum}_]+)*)$"
      title: Urn
      type: string
    Version:
      type: integer
    DefinitionDocument:
      description: 'A document that defines an entity. '
      example:
        language: ""
        text: ""
      properties:
        language:
          allOf:
          - $ref: '#/components/schemas/DefinitionLanguage'
          - description: The language used to define the entity. <code>GRAPHQL</code>
              is the only valid value.
          title: language
        text:
          allOf:
          - $ref: '#/components/schemas/DefinitionText'
          - description: The GraphQL text that defines the entity.
          title: text
      required:
      - language
      - text
      title: DefinitionDocument
      type: object
    FlowTemplateSummary:
      description: An object that contains summary information about a workflow.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: The ID of the workflow.
          title: id
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the workflow.
          title: arn
        revisionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The revision number of the workflow.
          title: revisionNumber
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date when the workflow was created.
          title: createdAt
      title: FlowTemplateSummary
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      minItems: 0
      type: array
    DeploymentTarget:
      enum:
      - GREENGRASS
      - CLOUD
      title: DeploymentTarget
      type: string
    GroupName:
      type: string
    S3BucketName:
      type: string
    MetricsConfiguration:
      description: "An object that specifies whether cloud metrics are collected in\
        \ a deployment and, if so, what role is used to collect metrics."
      example:
        metricRuleRoleArn: ""
        cloudMetricEnabled: ""
      properties:
        cloudMetricEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: A Boolean that specifies whether cloud metrics are collected.
          title: cloudMetricEnabled
        metricRuleRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the role that is used to collect cloud metrics.
          title: metricRuleRoleArn
      title: MetricsConfiguration
      type: object
    RoleArn:
      maxLength: 2048
      minLength: 20
      type: string
    SystemInstanceSummary:
      description: An object that contains summary information about a system instance.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: The ID of the system instance.
          title: id
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the system instance.
          title: arn
        status:
          allOf:
          - $ref: '#/components/schemas/SystemInstanceDeploymentStatus'
          - description: The status of the system instance.
          title: status
        target:
          allOf:
          - $ref: '#/components/schemas/DeploymentTarget'
          - description: The target of the system instance.
          title: target
        greengrassGroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The ID of the Greengrass group where the system instance
              is deployed.
          title: greengrassGroupName
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date when the system instance was created.
          title: createdAt
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The date and time when the system instance was last updated.'
          title: updatedAt
        greengrassGroupId:
          allOf:
          - $ref: '#/components/schemas/GreengrassGroupId'
          - description: The ID of the Greengrass group where the system instance
              is deployed.
          title: greengrassGroupId
        greengrassGroupVersionId:
          allOf:
          - $ref: '#/components/schemas/GreengrassGroupVersionId'
          - description: The version of the Greengrass group where the system instance
              is deployed.
          title: greengrassGroupVersionId
      title: SystemInstanceSummary
      type: object
    SystemTemplateSummary:
      description: An object that contains information about a system.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: The ID of the system.
          title: id
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the system.
          title: arn
        revisionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The revision number of the system.
          title: revisionNumber
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date when the system was created.
          title: createdAt
      title: SystemTemplateSummary
      type: object
    DefinitionLanguage:
      enum:
      - GRAPHQL
      title: DefinitionLanguage
      type: string
    DefinitionText:
      maxLength: 1048576
      type: string
    NamespaceName:
      maxLength: 128
      type: string
    DependencyRevision:
      description: An object that contains the ID and revision number of a workflow
        or system that is part of a deployment.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: The ID of the workflow or system.
          title: id
        revisionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The revision number of the workflow or system.
          title: revisionNumber
      title: DependencyRevision
      type: object
    DependencyRevisions:
      items:
        $ref: '#/components/schemas/DependencyRevision'
      type: array
    GreengrassDeploymentId:
      type: string
    DeprecateExistingEntities:
      type: boolean
    EntityType:
      enum:
      - DEVICE
      - SERVICE
      - DEVICE_MODEL
      - CAPABILITY
      - STATE
      - ACTION
      - EVENT
      - PROPERTY
      - MAPPING
      - ENUM
      title: EntityType
      type: string
    Enabled:
      type: boolean
    Timestamp:
      format: date-time
      type: string
    EntityDescription:
      description: Describes the properties of an entity.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: The entity ID.
          title: id
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The entity ARN.
          title: arn
        type:
          allOf:
          - $ref: '#/components/schemas/EntityType'
          - description: The entity type.
          title: type
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the entity was created.
          title: createdAt
        definition:
          $ref: '#/components/schemas/EntityDescription_definition'
      title: EntityDescription
      type: object
    EntityDescriptions:
      items:
        $ref: '#/components/schemas/EntityDescription'
      type: array
    EntityFilterName:
      enum:
      - NAME
      - NAMESPACE
      - SEMANTIC_TYPE_PATH
      - REFERENCED_ENTITY_ID
      title: EntityFilterName
      type: string
    EntityFilterValues:
      items:
        $ref: '#/components/schemas/EntityFilterValue'
      type: array
    EntityFilter:
      description: An object that filters an entity search. Multiple filters function
        as OR criteria in the search. For example a search that includes a <code>NAMESPACE</code>
        and a <code>REFERENCED_ENTITY_ID</code> filter searches for entities in the
        specified namespace that use the entity specified by the value of <code>REFERENCED_ENTITY_ID</code>.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/EntityFilterName'
          - description: "The name of the entity search filter field. <code>REFERENCED_ENTITY_ID</code>\
              \ filters on entities that are used by the entity in the result set.\
              \ For example, you can filter on the ID of a property that is used in\
              \ a state."
          title: name
        value:
          allOf:
          - $ref: '#/components/schemas/EntityFilterValues'
          - description: An array of string values for the search filter field. Multiple
              values function as AND criteria in the search.
          title: value
      title: EntityFilter
      type: object
    EntityFilterValue:
      title: EntityFilterValue
      type: string
    EntityFilters:
      items:
        $ref: '#/components/schemas/EntityFilter'
      type: array
    EntityTypes:
      items:
        $ref: '#/components/schemas/EntityType'
      type: array
    FlowExecutionEventType:
      enum:
      - EXECUTION_STARTED
      - EXECUTION_FAILED
      - EXECUTION_ABORTED
      - EXECUTION_SUCCEEDED
      - STEP_STARTED
      - STEP_FAILED
      - STEP_SUCCEEDED
      - ACTIVITY_SCHEDULED
      - ACTIVITY_STARTED
      - ACTIVITY_FAILED
      - ACTIVITY_SUCCEEDED
      - START_FLOW_EXECUTION_TASK
      - SCHEDULE_NEXT_READY_STEPS_TASK
      - THING_ACTION_TASK
      - THING_ACTION_TASK_FAILED
      - THING_ACTION_TASK_SUCCEEDED
      - ACKNOWLEDGE_TASK_MESSAGE
      title: FlowExecutionEventType
      type: string
    FlowExecutionId:
      type: string
    FlowExecutionMessageId:
      type: string
    FlowExecutionMessagePayload:
      type: string
    FlowExecutionMessage:
      description: An object that contains information about a flow event.
      properties:
        messageId:
          allOf:
          - $ref: '#/components/schemas/FlowExecutionMessageId'
          - description: The unique identifier of the message.
          title: messageId
        eventType:
          allOf:
          - $ref: '#/components/schemas/FlowExecutionEventType'
          - description: The type of flow event .
          title: eventType
        timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the message was last updated.
          title: timestamp
        payload:
          allOf:
          - $ref: '#/components/schemas/FlowExecutionMessagePayload'
          - description: A string containing information about the flow event.
          title: payload
      title: FlowExecutionMessage
      type: object
    FlowExecutionMessages:
      items:
        $ref: '#/components/schemas/FlowExecutionMessage'
      type: array
    FlowExecutionStatus:
      enum:
      - RUNNING
      - ABORTED
      - SUCCEEDED
      - FAILED
      title: FlowExecutionStatus
      type: string
    FlowExecutionSummary:
      description: An object that contains summary information about a flow execution.
      properties:
        flowExecutionId:
          allOf:
          - $ref: '#/components/schemas/FlowExecutionId'
          - description: The ID of the flow execution.
          title: flowExecutionId
        status:
          allOf:
          - $ref: '#/components/schemas/FlowExecutionStatus'
          - description: The current status of the flow execution.
          title: status
        systemInstanceId:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: The ID of the system instance that contains the flow.
          title: systemInstanceId
        flowTemplateId:
          allOf:
          - $ref: '#/components/schemas/Urn'
          - description: The ID of the flow.
          title: flowTemplateId
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the flow execution summary was created.
          title: createdAt
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time when the flow execution summary was last
              updated.
          title: updatedAt
      title: FlowExecutionSummary
      type: object
    FlowExecutionSummaries:
      items:
        $ref: '#/components/schemas/FlowExecutionSummary'
      type: array
    FlowTemplateDescription:
      description: An object that contains a workflow's definition and summary information.
      properties:
        summary:
          $ref: '#/components/schemas/FlowTemplateDescription_summary'
        definition:
          $ref: '#/components/schemas/FlowTemplateDescription_definition'
        validatedNamespaceVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the user's namespace against which the workflow
              was validated. Use this value in your system instance.
          title: validatedNamespaceVersion
      title: FlowTemplateDescription
      type: object
    FlowTemplateFilterName:
      enum:
      - DEVICE_MODEL_ID
      title: FlowTemplateFilterName
      type: string
    FlowTemplateFilterValues:
      items:
        $ref: '#/components/schemas/FlowTemplateFilterValue'
      type: array
    FlowTemplateFilter:
      description: An object that filters a workflow search.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/FlowTemplateFilterName'
          - description: The name of the search filter field.
          title: name
        value:
          allOf:
          - $ref: '#/components/schemas/FlowTemplateFilterValues'
          - description: An array of string values for the search filter field. Multiple
              values function as AND criteria in the search.
          title: value
      required:
      - name
      - value
      title: FlowTemplateFilter
      type: object
    FlowTemplateFilterValue:
      pattern: "^urn:tdm:(([a-z]{2}-(gov-)?[a-z]{4,9}-[0-9]{1,3}/[0-9]+/)*[\\p{Alnum}_]+(/[\\\
        p{Alnum}_]+)*):([\\p{Alpha}]*):([\\p{Alnum}_]+(/[\\p{Alnum}_]+)*)$"
      title: FlowTemplateFilterValue
      type: string
    FlowTemplateFilters:
      items:
        $ref: '#/components/schemas/FlowTemplateFilter'
      type: array
    FlowTemplateSummaries:
      items:
        $ref: '#/components/schemas/FlowTemplateSummary'
      type: array
    Urns:
      items:
        $ref: '#/components/schemas/Urn'
      maxItems: 25
      minItems: 0
      type: array
    NextToken:
      type: string
    MaxResults:
      maximum: 250
      minimum: 1
      type: integer
    NamespaceDeletionStatus:
      enum:
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      title: NamespaceDeletionStatus
      type: string
    NamespaceDeletionStatusErrorCodes:
      enum:
      - VALIDATION_FAILED
      title: NamespaceDeletionStatusErrorCodes
      type: string
    String:
      title: String
      type: string
    SystemInstanceDescription:
      description: An object that contains a system instance definition and summary
        information.
      properties:
        summary:
          $ref: '#/components/schemas/SystemInstanceDescription_summary'
        definition:
          $ref: '#/components/schemas/DefinitionDocument'
        s3BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: The Amazon Simple Storage Service bucket where information
              about a system instance is stored.
          title: s3BucketName
        metricsConfiguration:
          $ref: '#/components/schemas/MetricsConfiguration'
        validatedNamespaceVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the user's namespace against which the system
              instance was validated.
          title: validatedNamespaceVersion
        validatedDependencyRevisions:
          allOf:
          - $ref: '#/components/schemas/DependencyRevisions'
          - description: A list of objects that contain all of the IDs and revision
              numbers of workflows and systems that are used in a system instance.
          title: validatedDependencyRevisions
        flowActionsRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The AWS Identity and Access Management (IAM) role that AWS
              IoT Things Graph assumes during flow execution in a cloud deployment.
              This role must have read and write permissionss to AWS Lambda and AWS
              IoT and to any other AWS services that the flow uses.
          title: flowActionsRoleArn
      title: SystemInstanceDescription
      type: object
    SystemTemplateDescription:
      description: An object that contains a system's definition document and summary
        information.
      properties:
        summary:
          $ref: '#/components/schemas/SystemTemplateDescription_summary'
        definition:
          $ref: '#/components/schemas/SystemTemplateDescription_definition'
        validatedNamespaceVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The namespace version against which the system was validated.
              Use this value in your system instance.
          title: validatedNamespaceVersion
      title: SystemTemplateDescription
      type: object
    SystemTemplateSummaries:
      items:
        $ref: '#/components/schemas/SystemTemplateSummary'
      type: array
    UploadId:
      maxLength: 40
      minLength: 1
      type: string
    UploadStatus:
      enum:
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      title: UploadStatus
      type: string
    StringList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    GreengrassGroupId:
      type: string
    GreengrassGroupVersionId:
      type: string
    ResourceArn:
      maxLength: 2048
      minLength: 1
      type: string
    SystemInstanceFilters:
      items:
        $ref: '#/components/schemas/SystemInstanceFilter'
      type: array
    SystemInstanceSummaries:
      items:
        $ref: '#/components/schemas/SystemInstanceSummary'
      type: array
    SystemTemplateFilters:
      items:
        $ref: '#/components/schemas/SystemTemplateFilter'
      type: array
    Things:
      items:
        $ref: '#/components/schemas/Thing'
      type: array
    SyncWithPublicNamespace:
      type: boolean
    SystemInstanceDeploymentStatus:
      enum:
      - NOT_DEPLOYED
      - BOOTSTRAP
      - DEPLOY_IN_PROGRESS
      - DEPLOYED_IN_TARGET
      - UNDEPLOY_IN_PROGRESS
      - FAILED
      - PENDING_DELETE
      - DELETED_IN_TARGET
      title: SystemInstanceDeploymentStatus
      type: string
    SystemInstanceFilterName:
      enum:
      - SYSTEM_TEMPLATE_ID
      - STATUS
      - GREENGRASS_GROUP_NAME
      title: SystemInstanceFilterName
      type: string
    SystemInstanceFilterValues:
      items:
        $ref: '#/components/schemas/SystemInstanceFilterValue'
      type: array
    SystemInstanceFilter:
      description: An object that filters a system instance search. Multiple filters
        function as OR criteria in the search. For example a search that includes
        a GREENGRASS_GROUP_NAME and a STATUS filter searches for system instances
        in the specified Greengrass group that have the specified status.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/SystemInstanceFilterName'
          - description: The name of the search filter field.
          title: name
        value:
          allOf:
          - $ref: '#/components/schemas/SystemInstanceFilterValues'
          - description: 'An array of string values for the search filter field. Multiple
              values function as AND criteria in the search. '
          title: value
      title: SystemInstanceFilter
      type: object
    SystemInstanceFilterValue:
      title: SystemInstanceFilterValue
      type: string
    SystemTemplateFilterName:
      enum:
      - FLOW_TEMPLATE_ID
      title: SystemTemplateFilterName
      type: string
    SystemTemplateFilterValues:
      items:
        $ref: '#/components/schemas/SystemTemplateFilterValue'
      type: array
    SystemTemplateFilter:
      description: An object that filters a system search.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/SystemTemplateFilterName'
          - description: The name of the system search filter field.
          title: name
        value:
          allOf:
          - $ref: '#/components/schemas/SystemTemplateFilterValues'
          - description: An array of string values for the search filter field. Multiple
              values function as AND criteria in the search.
          title: value
      required:
      - name
      - value
      title: SystemTemplateFilter
      type: object
    SystemTemplateFilterValue:
      pattern: "^urn:tdm:(([a-z]{2}-(gov-)?[a-z]{4,9}-[0-9]{1,3}/[0-9]+/)*[\\p{Alnum}_]+(/[\\\
        p{Alnum}_]+)*):([\\p{Alpha}]*):([\\p{Alnum}_]+(/[\\p{Alnum}_]+)*)$"
      title: SystemTemplateFilterValue
      type: string
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      title: TagKey
      type: string
    TagValue:
      maxLength: 256
      minLength: 1
      type: string
    Tag:
      description: Metadata assigned to an AWS IoT Things Graph resource consisting
        of a key-value pair.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The required name of the tag. The string value can be from
              1 to 128 Unicode characters in length.
          title: key
        value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The optional value of the tag. The string value can be from
              1 to 256 Unicode characters in length.
          title: value
      required:
      - key
      - value
      title: Tag
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    ThingArn:
      type: string
    Thing:
      description: An AWS IoT thing.
      properties:
        thingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          - description: The ARN of the thing.
          title: thingArn
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          - description: The name of the thing.
          title: thingName
      title: Thing
      type: object
    CreateFlowTemplateResponse_summary:
      allOf:
      - $ref: '#/components/schemas/FlowTemplateSummary'
      - description: The summary object that describes the created workflow.
      example:
        createdAt: ""
        revisionNumber: ""
        id: ""
        arn: ""
      title: CreateFlowTemplateResponse_summary
    CreateFlowTemplateRequest_definition:
      allOf:
      - $ref: '#/components/schemas/DefinitionDocument'
      - description: The workflow <code>DefinitionDocument</code>.
      example:
        language: ""
        text: ""
      title: CreateFlowTemplateRequest_definition
    CreateSystemInstanceResponse_summary:
      allOf:
      - $ref: '#/components/schemas/SystemInstanceSummary'
      - description: The summary object that describes the new system instance.
      example:
        greengrassGroupName: ""
        createdAt: ""
        greengrassGroupVersionId: ""
        id: ""
        arn: ""
        greengrassGroupId: ""
        status: ""
        target: ""
        updatedAt: ""
      title: CreateSystemInstanceResponse_summary
    CreateSystemTemplateResponse_summary:
      allOf:
      - $ref: '#/components/schemas/SystemTemplateSummary'
      - description: The summary object that describes the created system.
      example:
        createdAt: ""
        revisionNumber: ""
        id: ""
        arn: ""
      title: CreateSystemTemplateResponse_summary
    CreateSystemTemplateRequest_definition:
      allOf:
      - $ref: '#/components/schemas/DefinitionDocument'
      - description: The <code>DefinitionDocument</code> used to create the system.
      example:
        language: ""
        text: ""
      title: CreateSystemTemplateRequest_definition
    DeploySystemInstanceResponse_summary:
      allOf:
      - $ref: '#/components/schemas/SystemInstanceSummary'
      - description: 'An object that contains summary information about a system instance
          that was deployed. '
      example:
        greengrassGroupName: ""
        createdAt: ""
        greengrassGroupVersionId: ""
        id: ""
        arn: ""
        greengrassGroupId: ""
        status: ""
        target: ""
        updatedAt: ""
      title: DeploySystemInstanceResponse_summary
    GetFlowTemplateResponse_description:
      allOf:
      - $ref: '#/components/schemas/FlowTemplateDescription'
      - description: The object that describes the specified workflow.
      example:
        summary:
          createdAt: ""
          revisionNumber: ""
          id: ""
          arn: ""
        definition:
          language: ""
          text: ""
        validatedNamespaceVersion: ""
      title: GetFlowTemplateResponse_description
    GetSystemInstanceResponse_description:
      allOf:
      - $ref: '#/components/schemas/SystemInstanceDescription'
      - description: An object that describes the system instance.
      example:
        summary:
          greengrassGroupName: ""
          createdAt: ""
          greengrassGroupVersionId: ""
          id: ""
          arn: ""
          greengrassGroupId: ""
          status: ""
          target: ""
          updatedAt: ""
        metricsConfiguration:
          metricRuleRoleArn: ""
          cloudMetricEnabled: ""
        validatedDependencyRevisions: ""
        s3BucketName: ""
        flowActionsRoleArn: ""
        definition:
          language: ""
          text: ""
        validatedNamespaceVersion: ""
      title: GetSystemInstanceResponse_description
    GetSystemTemplateResponse_description:
      allOf:
      - $ref: '#/components/schemas/SystemTemplateDescription'
      - description: An object that contains summary data about the system.
      example:
        summary:
          createdAt: ""
          revisionNumber: ""
          id: ""
          arn: ""
        definition:
          language: ""
          text: ""
        validatedNamespaceVersion: ""
      title: GetSystemTemplateResponse_description
    UndeploySystemInstanceResponse_summary:
      allOf:
      - $ref: '#/components/schemas/SystemInstanceSummary'
      - description: An object that contains summary information about the system
          instance that was removed from its target.
      example:
        greengrassGroupName: ""
        createdAt: ""
        greengrassGroupVersionId: ""
        id: ""
        arn: ""
        greengrassGroupId: ""
        status: ""
        target: ""
        updatedAt: ""
      title: UndeploySystemInstanceResponse_summary
    UpdateFlowTemplateResponse_summary:
      allOf:
      - $ref: '#/components/schemas/FlowTemplateSummary'
      - description: An object containing summary information about the updated workflow.
      example:
        createdAt: ""
        revisionNumber: ""
        id: ""
        arn: ""
      title: UpdateFlowTemplateResponse_summary
    UpdateFlowTemplateRequest_definition:
      allOf:
      - $ref: '#/components/schemas/DefinitionDocument'
      - description: The <code>DefinitionDocument</code> that contains the updated
          workflow definition.
      example:
        language: ""
        text: ""
      title: UpdateFlowTemplateRequest_definition
    UpdateSystemTemplateResponse_summary:
      allOf:
      - $ref: '#/components/schemas/SystemTemplateSummary'
      - description: An object containing summary information about the updated system.
      example:
        createdAt: ""
        revisionNumber: ""
        id: ""
        arn: ""
      title: UpdateSystemTemplateResponse_summary
    UpdateSystemTemplateRequest_definition:
      allOf:
      - $ref: '#/components/schemas/DefinitionDocument'
      - description: The <code>DefinitionDocument</code> that contains the updated
          system definition.
      example:
        language: ""
        text: ""
      title: UpdateSystemTemplateRequest_definition
    UploadEntityDefinitionsRequest_document:
      allOf:
      - $ref: '#/components/schemas/DefinitionDocument'
      - description: The <code>DefinitionDocument</code> that defines the updated
          entities.
      example:
        language: ""
        text: ""
      title: UploadEntityDefinitionsRequest_document
    EntityDescription_definition:
      allOf:
      - $ref: '#/components/schemas/DefinitionDocument'
      - description: The definition document of the entity.
      title: EntityDescription_definition
    FlowTemplateDescription_summary:
      allOf:
      - $ref: '#/components/schemas/FlowTemplateSummary'
      - description: An object that contains summary information about a workflow.
      example:
        createdAt: ""
        revisionNumber: ""
        id: ""
        arn: ""
      title: FlowTemplateDescription_summary
    FlowTemplateDescription_definition:
      allOf:
      - $ref: '#/components/schemas/DefinitionDocument'
      - description: A workflow's definition document.
      example:
        language: ""
        text: ""
      title: FlowTemplateDescription_definition
    SystemInstanceDescription_summary:
      allOf:
      - $ref: '#/components/schemas/SystemInstanceSummary'
      - description: An object that contains summary information about a system instance.
      example:
        greengrassGroupName: ""
        createdAt: ""
        greengrassGroupVersionId: ""
        id: ""
        arn: ""
        greengrassGroupId: ""
        status: ""
        target: ""
        updatedAt: ""
      title: SystemInstanceDescription_summary
    SystemTemplateDescription_summary:
      allOf:
      - $ref: '#/components/schemas/SystemTemplateSummary'
      - description: An object that contains summary information about a system.
      example:
        createdAt: ""
        revisionNumber: ""
        id: ""
        arn: ""
      title: SystemTemplateDescription_summary
    SystemTemplateDescription_definition:
      allOf:
      - $ref: '#/components/schemas/DefinitionDocument'
      - description: The definition document of a system.
      example:
        language: ""
        text: ""
      title: SystemTemplateDescription_definition
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
