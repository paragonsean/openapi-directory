/**
 * AWS IoT Things Graph
 * <fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards, such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services and defining how they interact at an abstract level.</p> <p>For more information about how AWS IoT Things Graph works, see the <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html\">User Guide</a>.</p> <p>The AWS IoT Things Graph service is discontinued.</p>
 *
 * The version of the OpenAPI document: 2018-09-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetSystemInstanceResponse_description.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetSystemInstanceResponse_description::OAIGetSystemInstanceResponse_description(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetSystemInstanceResponse_description::OAIGetSystemInstanceResponse_description() {
    this->initializeModel();
}

OAIGetSystemInstanceResponse_description::~OAIGetSystemInstanceResponse_description() {}

void OAIGetSystemInstanceResponse_description::initializeModel() {

    m_summary_isSet = false;
    m_summary_isValid = false;

    m_definition_isSet = false;
    m_definition_isValid = false;

    m_s3_bucket_name_isSet = false;
    m_s3_bucket_name_isValid = false;

    m_metrics_configuration_isSet = false;
    m_metrics_configuration_isValid = false;

    m_validated_namespace_version_isSet = false;
    m_validated_namespace_version_isValid = false;

    m_validated_dependency_revisions_isSet = false;
    m_validated_dependency_revisions_isValid = false;

    m_flow_actions_role_arn_isSet = false;
    m_flow_actions_role_arn_isValid = false;
}

void OAIGetSystemInstanceResponse_description::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetSystemInstanceResponse_description::fromJsonObject(QJsonObject json) {

    m_summary_isValid = ::OpenAPI::fromJsonValue(m_summary, json[QString("summary")]);
    m_summary_isSet = !json[QString("summary")].isNull() && m_summary_isValid;

    m_definition_isValid = ::OpenAPI::fromJsonValue(m_definition, json[QString("definition")]);
    m_definition_isSet = !json[QString("definition")].isNull() && m_definition_isValid;

    m_s3_bucket_name_isValid = ::OpenAPI::fromJsonValue(m_s3_bucket_name, json[QString("s3BucketName")]);
    m_s3_bucket_name_isSet = !json[QString("s3BucketName")].isNull() && m_s3_bucket_name_isValid;

    m_metrics_configuration_isValid = ::OpenAPI::fromJsonValue(m_metrics_configuration, json[QString("metricsConfiguration")]);
    m_metrics_configuration_isSet = !json[QString("metricsConfiguration")].isNull() && m_metrics_configuration_isValid;

    m_validated_namespace_version_isValid = ::OpenAPI::fromJsonValue(m_validated_namespace_version, json[QString("validatedNamespaceVersion")]);
    m_validated_namespace_version_isSet = !json[QString("validatedNamespaceVersion")].isNull() && m_validated_namespace_version_isValid;

    m_validated_dependency_revisions_isValid = ::OpenAPI::fromJsonValue(m_validated_dependency_revisions, json[QString("validatedDependencyRevisions")]);
    m_validated_dependency_revisions_isSet = !json[QString("validatedDependencyRevisions")].isNull() && m_validated_dependency_revisions_isValid;

    m_flow_actions_role_arn_isValid = ::OpenAPI::fromJsonValue(m_flow_actions_role_arn, json[QString("flowActionsRoleArn")]);
    m_flow_actions_role_arn_isSet = !json[QString("flowActionsRoleArn")].isNull() && m_flow_actions_role_arn_isValid;
}

QString OAIGetSystemInstanceResponse_description::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetSystemInstanceResponse_description::asJsonObject() const {
    QJsonObject obj;
    if (m_summary.isSet()) {
        obj.insert(QString("summary"), ::OpenAPI::toJsonValue(m_summary));
    }
    if (m_definition.isSet()) {
        obj.insert(QString("definition"), ::OpenAPI::toJsonValue(m_definition));
    }
    if (m_s3_bucket_name_isSet) {
        obj.insert(QString("s3BucketName"), ::OpenAPI::toJsonValue(m_s3_bucket_name));
    }
    if (m_metrics_configuration.isSet()) {
        obj.insert(QString("metricsConfiguration"), ::OpenAPI::toJsonValue(m_metrics_configuration));
    }
    if (m_validated_namespace_version_isSet) {
        obj.insert(QString("validatedNamespaceVersion"), ::OpenAPI::toJsonValue(m_validated_namespace_version));
    }
    if (m_validated_dependency_revisions.isSet()) {
        obj.insert(QString("validatedDependencyRevisions"), ::OpenAPI::toJsonValue(m_validated_dependency_revisions));
    }
    if (m_flow_actions_role_arn_isSet) {
        obj.insert(QString("flowActionsRoleArn"), ::OpenAPI::toJsonValue(m_flow_actions_role_arn));
    }
    return obj;
}

OAISystemInstanceDescription_summary OAIGetSystemInstanceResponse_description::getSummary() const {
    return m_summary;
}
void OAIGetSystemInstanceResponse_description::setSummary(const OAISystemInstanceDescription_summary &summary) {
    m_summary = summary;
    m_summary_isSet = true;
}

bool OAIGetSystemInstanceResponse_description::is_summary_Set() const{
    return m_summary_isSet;
}

bool OAIGetSystemInstanceResponse_description::is_summary_Valid() const{
    return m_summary_isValid;
}

OAIDefinitionDocument OAIGetSystemInstanceResponse_description::getDefinition() const {
    return m_definition;
}
void OAIGetSystemInstanceResponse_description::setDefinition(const OAIDefinitionDocument &definition) {
    m_definition = definition;
    m_definition_isSet = true;
}

bool OAIGetSystemInstanceResponse_description::is_definition_Set() const{
    return m_definition_isSet;
}

bool OAIGetSystemInstanceResponse_description::is_definition_Valid() const{
    return m_definition_isValid;
}

QString OAIGetSystemInstanceResponse_description::getS3BucketName() const {
    return m_s3_bucket_name;
}
void OAIGetSystemInstanceResponse_description::setS3BucketName(const QString &s3_bucket_name) {
    m_s3_bucket_name = s3_bucket_name;
    m_s3_bucket_name_isSet = true;
}

bool OAIGetSystemInstanceResponse_description::is_s3_bucket_name_Set() const{
    return m_s3_bucket_name_isSet;
}

bool OAIGetSystemInstanceResponse_description::is_s3_bucket_name_Valid() const{
    return m_s3_bucket_name_isValid;
}

OAIMetricsConfiguration OAIGetSystemInstanceResponse_description::getMetricsConfiguration() const {
    return m_metrics_configuration;
}
void OAIGetSystemInstanceResponse_description::setMetricsConfiguration(const OAIMetricsConfiguration &metrics_configuration) {
    m_metrics_configuration = metrics_configuration;
    m_metrics_configuration_isSet = true;
}

bool OAIGetSystemInstanceResponse_description::is_metrics_configuration_Set() const{
    return m_metrics_configuration_isSet;
}

bool OAIGetSystemInstanceResponse_description::is_metrics_configuration_Valid() const{
    return m_metrics_configuration_isValid;
}

qint32 OAIGetSystemInstanceResponse_description::getValidatedNamespaceVersion() const {
    return m_validated_namespace_version;
}
void OAIGetSystemInstanceResponse_description::setValidatedNamespaceVersion(const qint32 &validated_namespace_version) {
    m_validated_namespace_version = validated_namespace_version;
    m_validated_namespace_version_isSet = true;
}

bool OAIGetSystemInstanceResponse_description::is_validated_namespace_version_Set() const{
    return m_validated_namespace_version_isSet;
}

bool OAIGetSystemInstanceResponse_description::is_validated_namespace_version_Valid() const{
    return m_validated_namespace_version_isValid;
}

QList OAIGetSystemInstanceResponse_description::getValidatedDependencyRevisions() const {
    return m_validated_dependency_revisions;
}
void OAIGetSystemInstanceResponse_description::setValidatedDependencyRevisions(const QList &validated_dependency_revisions) {
    m_validated_dependency_revisions = validated_dependency_revisions;
    m_validated_dependency_revisions_isSet = true;
}

bool OAIGetSystemInstanceResponse_description::is_validated_dependency_revisions_Set() const{
    return m_validated_dependency_revisions_isSet;
}

bool OAIGetSystemInstanceResponse_description::is_validated_dependency_revisions_Valid() const{
    return m_validated_dependency_revisions_isValid;
}

QString OAIGetSystemInstanceResponse_description::getFlowActionsRoleArn() const {
    return m_flow_actions_role_arn;
}
void OAIGetSystemInstanceResponse_description::setFlowActionsRoleArn(const QString &flow_actions_role_arn) {
    m_flow_actions_role_arn = flow_actions_role_arn;
    m_flow_actions_role_arn_isSet = true;
}

bool OAIGetSystemInstanceResponse_description::is_flow_actions_role_arn_Set() const{
    return m_flow_actions_role_arn_isSet;
}

bool OAIGetSystemInstanceResponse_description::is_flow_actions_role_arn_Valid() const{
    return m_flow_actions_role_arn_isValid;
}

bool OAIGetSystemInstanceResponse_description::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_bucket_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_validated_namespace_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validated_dependency_revisions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_flow_actions_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetSystemInstanceResponse_description::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
