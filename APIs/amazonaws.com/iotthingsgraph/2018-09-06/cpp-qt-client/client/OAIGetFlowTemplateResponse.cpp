/**
 * AWS IoT Things Graph
 * <fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards, such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services and defining how they interact at an abstract level.</p> <p>For more information about how AWS IoT Things Graph works, see the <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html\">User Guide</a>.</p> <p>The AWS IoT Things Graph service is discontinued.</p>
 *
 * The version of the OpenAPI document: 2018-09-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetFlowTemplateResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetFlowTemplateResponse::OAIGetFlowTemplateResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetFlowTemplateResponse::OAIGetFlowTemplateResponse() {
    this->initializeModel();
}

OAIGetFlowTemplateResponse::~OAIGetFlowTemplateResponse() {}

void OAIGetFlowTemplateResponse::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;
}

void OAIGetFlowTemplateResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetFlowTemplateResponse::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;
}

QString OAIGetFlowTemplateResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetFlowTemplateResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_description.isSet()) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    return obj;
}

OAIGetFlowTemplateResponse_description OAIGetFlowTemplateResponse::getDescription() const {
    return m_description;
}
void OAIGetFlowTemplateResponse::setDescription(const OAIGetFlowTemplateResponse_description &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGetFlowTemplateResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGetFlowTemplateResponse::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIGetFlowTemplateResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetFlowTemplateResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
