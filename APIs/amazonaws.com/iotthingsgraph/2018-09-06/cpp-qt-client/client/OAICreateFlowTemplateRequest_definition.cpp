/**
 * AWS IoT Things Graph
 * <fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards, such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services and defining how they interact at an abstract level.</p> <p>For more information about how AWS IoT Things Graph works, see the <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html\">User Guide</a>.</p> <p>The AWS IoT Things Graph service is discontinued.</p>
 *
 * The version of the OpenAPI document: 2018-09-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateFlowTemplateRequest_definition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateFlowTemplateRequest_definition::OAICreateFlowTemplateRequest_definition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateFlowTemplateRequest_definition::OAICreateFlowTemplateRequest_definition() {
    this->initializeModel();
}

OAICreateFlowTemplateRequest_definition::~OAICreateFlowTemplateRequest_definition() {}

void OAICreateFlowTemplateRequest_definition::initializeModel() {

    m_language_isSet = false;
    m_language_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAICreateFlowTemplateRequest_definition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateFlowTemplateRequest_definition::fromJsonObject(QJsonObject json) {

    m_language_isValid = ::OpenAPI::fromJsonValue(m_language, json[QString("language")]);
    m_language_isSet = !json[QString("language")].isNull() && m_language_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAICreateFlowTemplateRequest_definition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateFlowTemplateRequest_definition::asJsonObject() const {
    QJsonObject obj;
    if (m_language.isSet()) {
        obj.insert(QString("language"), ::OpenAPI::toJsonValue(m_language));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

OAIDefinitionLanguage OAICreateFlowTemplateRequest_definition::getLanguage() const {
    return m_language;
}
void OAICreateFlowTemplateRequest_definition::setLanguage(const OAIDefinitionLanguage &language) {
    m_language = language;
    m_language_isSet = true;
}

bool OAICreateFlowTemplateRequest_definition::is_language_Set() const{
    return m_language_isSet;
}

bool OAICreateFlowTemplateRequest_definition::is_language_Valid() const{
    return m_language_isValid;
}

QString OAICreateFlowTemplateRequest_definition::getText() const {
    return m_text;
}
void OAICreateFlowTemplateRequest_definition::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAICreateFlowTemplateRequest_definition::is_text_Set() const{
    return m_text_isSet;
}

bool OAICreateFlowTemplateRequest_definition::is_text_Valid() const{
    return m_text_isValid;
}

bool OAICreateFlowTemplateRequest_definition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_language.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateFlowTemplateRequest_definition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_language_isValid && m_text_isValid && true;
}

} // namespace OpenAPI
