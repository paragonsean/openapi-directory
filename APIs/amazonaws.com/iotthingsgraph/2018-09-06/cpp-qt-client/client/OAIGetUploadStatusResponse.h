/**
 * AWS IoT Things Graph
 * <fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards, such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services and defining how they interact at an abstract level.</p> <p>For more information about how AWS IoT Things Graph works, see the <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html\">User Guide</a>.</p> <p>The AWS IoT Things Graph service is discontinued.</p>
 *
 * The version of the OpenAPI document: 2018-09-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetUploadStatusResponse.h
 *
 * 
 */

#ifndef OAIGetUploadStatusResponse_H
#define OAIGetUploadStatusResponse_H

#include <QJsonObject>

#include "OAIUploadStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetUploadStatusResponse : public OAIObject {
public:
    OAIGetUploadStatusResponse();
    OAIGetUploadStatusResponse(QString json);
    ~OAIGetUploadStatusResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getUploadId() const;
    void setUploadId(const QString &upload_id);
    bool is_upload_id_Set() const;
    bool is_upload_id_Valid() const;

    OAIUploadStatus getUploadStatus() const;
    void setUploadStatus(const OAIUploadStatus &upload_status);
    bool is_upload_status_Set() const;
    bool is_upload_status_Valid() const;

    QString getNamespaceArn() const;
    void setNamespaceArn(const QString &namespace_arn);
    bool is_namespace_arn_Set() const;
    bool is_namespace_arn_Valid() const;

    QString getNamespaceName() const;
    void setNamespaceName(const QString &namespace_name);
    bool is_namespace_name_Set() const;
    bool is_namespace_name_Valid() const;

    qint32 getNamespaceVersion() const;
    void setNamespaceVersion(const qint32 &namespace_version);
    bool is_namespace_version_Set() const;
    bool is_namespace_version_Valid() const;

    QList getFailureReason() const;
    void setFailureReason(const QList &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    QDateTime getCreatedDate() const;
    void setCreatedDate(const QDateTime &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_upload_id;
    bool m_upload_id_isSet;
    bool m_upload_id_isValid;

    OAIUploadStatus m_upload_status;
    bool m_upload_status_isSet;
    bool m_upload_status_isValid;

    QString m_namespace_arn;
    bool m_namespace_arn_isSet;
    bool m_namespace_arn_isValid;

    QString m_namespace_name;
    bool m_namespace_name_isSet;
    bool m_namespace_name_isValid;

    qint32 m_namespace_version;
    bool m_namespace_version_isSet;
    bool m_namespace_version_isValid;

    QList m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    QDateTime m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetUploadStatusResponse)

#endif // OAIGetUploadStatusResponse_H
