/**
 * AWS IoT Things Graph
 * <fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards, such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services and defining how they interact at an abstract level.</p> <p>For more information about how AWS IoT Things Graph works, see the <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html\">User Guide</a>.</p> <p>The AWS IoT Things Graph service is discontinued.</p>
 *
 * The version of the OpenAPI document: 2018-09-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINamespaceDeletionStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINamespaceDeletionStatus::OAINamespaceDeletionStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINamespaceDeletionStatus::OAINamespaceDeletionStatus() {
    this->initializeModel();
}

OAINamespaceDeletionStatus::~OAINamespaceDeletionStatus() {}

void OAINamespaceDeletionStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAINamespaceDeletionStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAINamespaceDeletionStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("IN_PROGRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAINamespaceDeletionStatus::IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SUCCEEDED", Qt::CaseInsensitive) == 0) {
        m_value = eOAINamespaceDeletionStatus::SUCCEEDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAINamespaceDeletionStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAINamespaceDeletionStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAINamespaceDeletionStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAINamespaceDeletionStatus::IN_PROGRESS:
            val = "IN_PROGRESS";
            break;
        case eOAINamespaceDeletionStatus::SUCCEEDED:
            val = "SUCCEEDED";
            break;
        case eOAINamespaceDeletionStatus::FAILED:
            val = "FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAINamespaceDeletionStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAINamespaceDeletionStatus::eOAINamespaceDeletionStatus OAINamespaceDeletionStatus::getValue() const {
    return m_value;
}

void OAINamespaceDeletionStatus::setValue(const OAINamespaceDeletionStatus::eOAINamespaceDeletionStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAINamespaceDeletionStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAINamespaceDeletionStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
