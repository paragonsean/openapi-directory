/**
 * AWS IoT Things Graph
 * <fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards, such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services and defining how they interact at an abstract level.</p> <p>For more information about how AWS IoT Things Graph works, see the <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html\">User Guide</a>.</p> <p>The AWS IoT Things Graph service is discontinued.</p>
 *
 * The version of the OpenAPI document: 2018-09-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDissociateEntityFromThingRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDissociateEntityFromThingRequest::OAIDissociateEntityFromThingRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDissociateEntityFromThingRequest::OAIDissociateEntityFromThingRequest() {
    this->initializeModel();
}

OAIDissociateEntityFromThingRequest::~OAIDissociateEntityFromThingRequest() {}

void OAIDissociateEntityFromThingRequest::initializeModel() {

    m_thing_name_isSet = false;
    m_thing_name_isValid = false;

    m_entity_type_isSet = false;
    m_entity_type_isValid = false;
}

void OAIDissociateEntityFromThingRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDissociateEntityFromThingRequest::fromJsonObject(QJsonObject json) {

    m_thing_name_isValid = ::OpenAPI::fromJsonValue(m_thing_name, json[QString("thingName")]);
    m_thing_name_isSet = !json[QString("thingName")].isNull() && m_thing_name_isValid;

    m_entity_type_isValid = ::OpenAPI::fromJsonValue(m_entity_type, json[QString("entityType")]);
    m_entity_type_isSet = !json[QString("entityType")].isNull() && m_entity_type_isValid;
}

QString OAIDissociateEntityFromThingRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDissociateEntityFromThingRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_thing_name_isSet) {
        obj.insert(QString("thingName"), ::OpenAPI::toJsonValue(m_thing_name));
    }
    if (m_entity_type.isSet()) {
        obj.insert(QString("entityType"), ::OpenAPI::toJsonValue(m_entity_type));
    }
    return obj;
}

QString OAIDissociateEntityFromThingRequest::getThingName() const {
    return m_thing_name;
}
void OAIDissociateEntityFromThingRequest::setThingName(const QString &thing_name) {
    m_thing_name = thing_name;
    m_thing_name_isSet = true;
}

bool OAIDissociateEntityFromThingRequest::is_thing_name_Set() const{
    return m_thing_name_isSet;
}

bool OAIDissociateEntityFromThingRequest::is_thing_name_Valid() const{
    return m_thing_name_isValid;
}

OAIEntityType OAIDissociateEntityFromThingRequest::getEntityType() const {
    return m_entity_type;
}
void OAIDissociateEntityFromThingRequest::setEntityType(const OAIEntityType &entity_type) {
    m_entity_type = entity_type;
    m_entity_type_isSet = true;
}

bool OAIDissociateEntityFromThingRequest::is_entity_type_Set() const{
    return m_entity_type_isSet;
}

bool OAIDissociateEntityFromThingRequest::is_entity_type_Valid() const{
    return m_entity_type_isValid;
}

bool OAIDissociateEntityFromThingRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_thing_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDissociateEntityFromThingRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_thing_name_isValid && m_entity_type_isValid && true;
}

} // namespace OpenAPI
