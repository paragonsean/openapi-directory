/**
 * AWS IoT Things Graph
 * <fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards, such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services and defining how they interact at an abstract level.</p> <p>For more information about how AWS IoT Things Graph works, see the <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html\">User Guide</a>.</p> <p>The AWS IoT Things Graph service is discontinued.</p>
 *
 * The version of the OpenAPI document: 2018-09-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeploySystemInstanceResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeploySystemInstanceResponse::OAIDeploySystemInstanceResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeploySystemInstanceResponse::OAIDeploySystemInstanceResponse() {
    this->initializeModel();
}

OAIDeploySystemInstanceResponse::~OAIDeploySystemInstanceResponse() {}

void OAIDeploySystemInstanceResponse::initializeModel() {

    m_summary_isSet = false;
    m_summary_isValid = false;

    m_greengrass_deployment_id_isSet = false;
    m_greengrass_deployment_id_isValid = false;
}

void OAIDeploySystemInstanceResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeploySystemInstanceResponse::fromJsonObject(QJsonObject json) {

    m_summary_isValid = ::OpenAPI::fromJsonValue(m_summary, json[QString("summary")]);
    m_summary_isSet = !json[QString("summary")].isNull() && m_summary_isValid;

    m_greengrass_deployment_id_isValid = ::OpenAPI::fromJsonValue(m_greengrass_deployment_id, json[QString("greengrassDeploymentId")]);
    m_greengrass_deployment_id_isSet = !json[QString("greengrassDeploymentId")].isNull() && m_greengrass_deployment_id_isValid;
}

QString OAIDeploySystemInstanceResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeploySystemInstanceResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_summary.isSet()) {
        obj.insert(QString("summary"), ::OpenAPI::toJsonValue(m_summary));
    }
    if (m_greengrass_deployment_id_isSet) {
        obj.insert(QString("greengrassDeploymentId"), ::OpenAPI::toJsonValue(m_greengrass_deployment_id));
    }
    return obj;
}

OAIDeploySystemInstanceResponse_summary OAIDeploySystemInstanceResponse::getSummary() const {
    return m_summary;
}
void OAIDeploySystemInstanceResponse::setSummary(const OAIDeploySystemInstanceResponse_summary &summary) {
    m_summary = summary;
    m_summary_isSet = true;
}

bool OAIDeploySystemInstanceResponse::is_summary_Set() const{
    return m_summary_isSet;
}

bool OAIDeploySystemInstanceResponse::is_summary_Valid() const{
    return m_summary_isValid;
}

QString OAIDeploySystemInstanceResponse::getGreengrassDeploymentId() const {
    return m_greengrass_deployment_id;
}
void OAIDeploySystemInstanceResponse::setGreengrassDeploymentId(const QString &greengrass_deployment_id) {
    m_greengrass_deployment_id = greengrass_deployment_id;
    m_greengrass_deployment_id_isSet = true;
}

bool OAIDeploySystemInstanceResponse::is_greengrass_deployment_id_Set() const{
    return m_greengrass_deployment_id_isSet;
}

bool OAIDeploySystemInstanceResponse::is_greengrass_deployment_id_Valid() const{
    return m_greengrass_deployment_id_isValid;
}

bool OAIDeploySystemInstanceResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_greengrass_deployment_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeploySystemInstanceResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_summary_isValid && true;
}

} // namespace OpenAPI
