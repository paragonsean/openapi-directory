/**
 * AWS IoT Things Graph
 * <fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards, such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services and defining how they interact at an abstract level.</p> <p>For more information about how AWS IoT Things Graph works, see the <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html\">User Guide</a>.</p> <p>The AWS IoT Things Graph service is discontinued.</p>
 *
 * The version of the OpenAPI document: 2018-09-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFlowExecutionSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFlowExecutionSummary::OAIFlowExecutionSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFlowExecutionSummary::OAIFlowExecutionSummary() {
    this->initializeModel();
}

OAIFlowExecutionSummary::~OAIFlowExecutionSummary() {}

void OAIFlowExecutionSummary::initializeModel() {

    m_flow_execution_id_isSet = false;
    m_flow_execution_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_system_instance_id_isSet = false;
    m_system_instance_id_isValid = false;

    m_flow_template_id_isSet = false;
    m_flow_template_id_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAIFlowExecutionSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFlowExecutionSummary::fromJsonObject(QJsonObject json) {

    m_flow_execution_id_isValid = ::OpenAPI::fromJsonValue(m_flow_execution_id, json[QString("flowExecutionId")]);
    m_flow_execution_id_isSet = !json[QString("flowExecutionId")].isNull() && m_flow_execution_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_system_instance_id_isValid = ::OpenAPI::fromJsonValue(m_system_instance_id, json[QString("systemInstanceId")]);
    m_system_instance_id_isSet = !json[QString("systemInstanceId")].isNull() && m_system_instance_id_isValid;

    m_flow_template_id_isValid = ::OpenAPI::fromJsonValue(m_flow_template_id, json[QString("flowTemplateId")]);
    m_flow_template_id_isSet = !json[QString("flowTemplateId")].isNull() && m_flow_template_id_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updatedAt")]);
    m_updated_at_isSet = !json[QString("updatedAt")].isNull() && m_updated_at_isValid;
}

QString OAIFlowExecutionSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFlowExecutionSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_flow_execution_id_isSet) {
        obj.insert(QString("flowExecutionId"), ::OpenAPI::toJsonValue(m_flow_execution_id));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_system_instance_id_isSet) {
        obj.insert(QString("systemInstanceId"), ::OpenAPI::toJsonValue(m_system_instance_id));
    }
    if (m_flow_template_id_isSet) {
        obj.insert(QString("flowTemplateId"), ::OpenAPI::toJsonValue(m_flow_template_id));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updatedAt"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

QString OAIFlowExecutionSummary::getFlowExecutionId() const {
    return m_flow_execution_id;
}
void OAIFlowExecutionSummary::setFlowExecutionId(const QString &flow_execution_id) {
    m_flow_execution_id = flow_execution_id;
    m_flow_execution_id_isSet = true;
}

bool OAIFlowExecutionSummary::is_flow_execution_id_Set() const{
    return m_flow_execution_id_isSet;
}

bool OAIFlowExecutionSummary::is_flow_execution_id_Valid() const{
    return m_flow_execution_id_isValid;
}

OAIFlowExecutionStatus OAIFlowExecutionSummary::getStatus() const {
    return m_status;
}
void OAIFlowExecutionSummary::setStatus(const OAIFlowExecutionStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIFlowExecutionSummary::is_status_Set() const{
    return m_status_isSet;
}

bool OAIFlowExecutionSummary::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIFlowExecutionSummary::getSystemInstanceId() const {
    return m_system_instance_id;
}
void OAIFlowExecutionSummary::setSystemInstanceId(const QString &system_instance_id) {
    m_system_instance_id = system_instance_id;
    m_system_instance_id_isSet = true;
}

bool OAIFlowExecutionSummary::is_system_instance_id_Set() const{
    return m_system_instance_id_isSet;
}

bool OAIFlowExecutionSummary::is_system_instance_id_Valid() const{
    return m_system_instance_id_isValid;
}

QString OAIFlowExecutionSummary::getFlowTemplateId() const {
    return m_flow_template_id;
}
void OAIFlowExecutionSummary::setFlowTemplateId(const QString &flow_template_id) {
    m_flow_template_id = flow_template_id;
    m_flow_template_id_isSet = true;
}

bool OAIFlowExecutionSummary::is_flow_template_id_Set() const{
    return m_flow_template_id_isSet;
}

bool OAIFlowExecutionSummary::is_flow_template_id_Valid() const{
    return m_flow_template_id_isValid;
}

QDateTime OAIFlowExecutionSummary::getCreatedAt() const {
    return m_created_at;
}
void OAIFlowExecutionSummary::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIFlowExecutionSummary::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIFlowExecutionSummary::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QDateTime OAIFlowExecutionSummary::getUpdatedAt() const {
    return m_updated_at;
}
void OAIFlowExecutionSummary::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIFlowExecutionSummary::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIFlowExecutionSummary::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAIFlowExecutionSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_flow_execution_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flow_template_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFlowExecutionSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
