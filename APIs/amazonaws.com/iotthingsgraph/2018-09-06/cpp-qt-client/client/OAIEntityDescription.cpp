/**
 * AWS IoT Things Graph
 * <fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards, such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services and defining how they interact at an abstract level.</p> <p>For more information about how AWS IoT Things Graph works, see the <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html\">User Guide</a>.</p> <p>The AWS IoT Things Graph service is discontinued.</p>
 *
 * The version of the OpenAPI document: 2018-09-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEntityDescription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEntityDescription::OAIEntityDescription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEntityDescription::OAIEntityDescription() {
    this->initializeModel();
}

OAIEntityDescription::~OAIEntityDescription() {}

void OAIEntityDescription::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_definition_isSet = false;
    m_definition_isValid = false;
}

void OAIEntityDescription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEntityDescription::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_definition_isValid = ::OpenAPI::fromJsonValue(m_definition, json[QString("definition")]);
    m_definition_isSet = !json[QString("definition")].isNull() && m_definition_isValid;
}

QString OAIEntityDescription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEntityDescription::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_definition.isSet()) {
        obj.insert(QString("definition"), ::OpenAPI::toJsonValue(m_definition));
    }
    return obj;
}

QString OAIEntityDescription::getId() const {
    return m_id;
}
void OAIEntityDescription::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIEntityDescription::is_id_Set() const{
    return m_id_isSet;
}

bool OAIEntityDescription::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIEntityDescription::getArn() const {
    return m_arn;
}
void OAIEntityDescription::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIEntityDescription::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIEntityDescription::is_arn_Valid() const{
    return m_arn_isValid;
}

OAIEntityType OAIEntityDescription::getType() const {
    return m_type;
}
void OAIEntityDescription::setType(const OAIEntityType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIEntityDescription::is_type_Set() const{
    return m_type_isSet;
}

bool OAIEntityDescription::is_type_Valid() const{
    return m_type_isValid;
}

QDateTime OAIEntityDescription::getCreatedAt() const {
    return m_created_at;
}
void OAIEntityDescription::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIEntityDescription::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIEntityDescription::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAIEntityDescription_definition OAIEntityDescription::getDefinition() const {
    return m_definition;
}
void OAIEntityDescription::setDefinition(const OAIEntityDescription_definition &definition) {
    m_definition = definition;
    m_definition_isSet = true;
}

bool OAIEntityDescription::is_definition_Set() const{
    return m_definition_isSet;
}

bool OAIEntityDescription::is_definition_Valid() const{
    return m_definition_isValid;
}

bool OAIEntityDescription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_definition.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEntityDescription::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
