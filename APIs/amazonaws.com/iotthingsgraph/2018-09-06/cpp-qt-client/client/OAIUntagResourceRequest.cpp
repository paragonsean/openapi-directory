/**
 * AWS IoT Things Graph
 * <fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards, such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services and defining how they interact at an abstract level.</p> <p>For more information about how AWS IoT Things Graph works, see the <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html\">User Guide</a>.</p> <p>The AWS IoT Things Graph service is discontinued.</p>
 *
 * The version of the OpenAPI document: 2018-09-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUntagResourceRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUntagResourceRequest::OAIUntagResourceRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUntagResourceRequest::OAIUntagResourceRequest() {
    this->initializeModel();
}

OAIUntagResourceRequest::~OAIUntagResourceRequest() {}

void OAIUntagResourceRequest::initializeModel() {

    m_resource_arn_isSet = false;
    m_resource_arn_isValid = false;

    m_tag_keys_isSet = false;
    m_tag_keys_isValid = false;
}

void OAIUntagResourceRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUntagResourceRequest::fromJsonObject(QJsonObject json) {

    m_resource_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_arn, json[QString("resourceArn")]);
    m_resource_arn_isSet = !json[QString("resourceArn")].isNull() && m_resource_arn_isValid;

    m_tag_keys_isValid = ::OpenAPI::fromJsonValue(m_tag_keys, json[QString("tagKeys")]);
    m_tag_keys_isSet = !json[QString("tagKeys")].isNull() && m_tag_keys_isValid;
}

QString OAIUntagResourceRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUntagResourceRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_arn_isSet) {
        obj.insert(QString("resourceArn"), ::OpenAPI::toJsonValue(m_resource_arn));
    }
    if (m_tag_keys.isSet()) {
        obj.insert(QString("tagKeys"), ::OpenAPI::toJsonValue(m_tag_keys));
    }
    return obj;
}

QString OAIUntagResourceRequest::getResourceArn() const {
    return m_resource_arn;
}
void OAIUntagResourceRequest::setResourceArn(const QString &resource_arn) {
    m_resource_arn = resource_arn;
    m_resource_arn_isSet = true;
}

bool OAIUntagResourceRequest::is_resource_arn_Set() const{
    return m_resource_arn_isSet;
}

bool OAIUntagResourceRequest::is_resource_arn_Valid() const{
    return m_resource_arn_isValid;
}

QList OAIUntagResourceRequest::getTagKeys() const {
    return m_tag_keys;
}
void OAIUntagResourceRequest::setTagKeys(const QList &tag_keys) {
    m_tag_keys = tag_keys;
    m_tag_keys_isSet = true;
}

bool OAIUntagResourceRequest::is_tag_keys_Set() const{
    return m_tag_keys_isSet;
}

bool OAIUntagResourceRequest::is_tag_keys_Valid() const{
    return m_tag_keys_isValid;
}

bool OAIUntagResourceRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_keys.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUntagResourceRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_resource_arn_isValid && m_tag_keys_isValid && true;
}

} // namespace OpenAPI
