/**
 * AWS IoT Things Graph
 * <fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards, such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services and defining how they interact at an abstract level.</p> <p>For more information about how AWS IoT Things Graph works, see the <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html\">User Guide</a>.</p> <p>The AWS IoT Things Graph service is discontinued.</p>
 *
 * The version of the OpenAPI document: 2018-09-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMetricsConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMetricsConfiguration::OAIMetricsConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMetricsConfiguration::OAIMetricsConfiguration() {
    this->initializeModel();
}

OAIMetricsConfiguration::~OAIMetricsConfiguration() {}

void OAIMetricsConfiguration::initializeModel() {

    m_cloud_metric_enabled_isSet = false;
    m_cloud_metric_enabled_isValid = false;

    m_metric_rule_role_arn_isSet = false;
    m_metric_rule_role_arn_isValid = false;
}

void OAIMetricsConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMetricsConfiguration::fromJsonObject(QJsonObject json) {

    m_cloud_metric_enabled_isValid = ::OpenAPI::fromJsonValue(m_cloud_metric_enabled, json[QString("cloudMetricEnabled")]);
    m_cloud_metric_enabled_isSet = !json[QString("cloudMetricEnabled")].isNull() && m_cloud_metric_enabled_isValid;

    m_metric_rule_role_arn_isValid = ::OpenAPI::fromJsonValue(m_metric_rule_role_arn, json[QString("metricRuleRoleArn")]);
    m_metric_rule_role_arn_isSet = !json[QString("metricRuleRoleArn")].isNull() && m_metric_rule_role_arn_isValid;
}

QString OAIMetricsConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMetricsConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_cloud_metric_enabled_isSet) {
        obj.insert(QString("cloudMetricEnabled"), ::OpenAPI::toJsonValue(m_cloud_metric_enabled));
    }
    if (m_metric_rule_role_arn_isSet) {
        obj.insert(QString("metricRuleRoleArn"), ::OpenAPI::toJsonValue(m_metric_rule_role_arn));
    }
    return obj;
}

bool OAIMetricsConfiguration::getCloudMetricEnabled() const {
    return m_cloud_metric_enabled;
}
void OAIMetricsConfiguration::setCloudMetricEnabled(const bool &cloud_metric_enabled) {
    m_cloud_metric_enabled = cloud_metric_enabled;
    m_cloud_metric_enabled_isSet = true;
}

bool OAIMetricsConfiguration::is_cloud_metric_enabled_Set() const{
    return m_cloud_metric_enabled_isSet;
}

bool OAIMetricsConfiguration::is_cloud_metric_enabled_Valid() const{
    return m_cloud_metric_enabled_isValid;
}

QString OAIMetricsConfiguration::getMetricRuleRoleArn() const {
    return m_metric_rule_role_arn;
}
void OAIMetricsConfiguration::setMetricRuleRoleArn(const QString &metric_rule_role_arn) {
    m_metric_rule_role_arn = metric_rule_role_arn;
    m_metric_rule_role_arn_isSet = true;
}

bool OAIMetricsConfiguration::is_metric_rule_role_arn_Set() const{
    return m_metric_rule_role_arn_isSet;
}

bool OAIMetricsConfiguration::is_metric_rule_role_arn_Valid() const{
    return m_metric_rule_role_arn_isValid;
}

bool OAIMetricsConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cloud_metric_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_rule_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMetricsConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
