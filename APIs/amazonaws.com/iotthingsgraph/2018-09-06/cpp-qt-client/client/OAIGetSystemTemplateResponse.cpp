/**
 * AWS IoT Things Graph
 * <fullname>AWS IoT Things Graph</fullname> <p>AWS IoT Things Graph provides an integrated set of tools that enable developers to connect devices and services that use different standards, such as units of measure and communication protocols. AWS IoT Things Graph makes it possible to build IoT applications with little to no code by connecting devices and services and defining how they interact at an abstract level.</p> <p>For more information about how AWS IoT Things Graph works, see the <a href=\"https://docs.aws.amazon.com/thingsgraph/latest/ug/iot-tg-whatis.html\">User Guide</a>.</p> <p>The AWS IoT Things Graph service is discontinued.</p>
 *
 * The version of the OpenAPI document: 2018-09-06
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetSystemTemplateResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetSystemTemplateResponse::OAIGetSystemTemplateResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetSystemTemplateResponse::OAIGetSystemTemplateResponse() {
    this->initializeModel();
}

OAIGetSystemTemplateResponse::~OAIGetSystemTemplateResponse() {}

void OAIGetSystemTemplateResponse::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;
}

void OAIGetSystemTemplateResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetSystemTemplateResponse::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;
}

QString OAIGetSystemTemplateResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetSystemTemplateResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_description.isSet()) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    return obj;
}

OAIGetSystemTemplateResponse_description OAIGetSystemTemplateResponse::getDescription() const {
    return m_description;
}
void OAIGetSystemTemplateResponse::setDescription(const OAIGetSystemTemplateResponse_description &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGetSystemTemplateResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGetSystemTemplateResponse::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIGetSystemTemplateResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetSystemTemplateResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
