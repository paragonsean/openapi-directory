/**
 * Amazon CodeGuru Reviewer
 * <p>This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommends fixes in your Java and Python code.</p> <p>By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the <i> <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\">Amazon CodeGuru Reviewer User Guide</a>.</i> </p> <p>To improve the security of your CodeGuru Reviewer API calls, you can establish a private connection between your VPC and CodeGuru Reviewer by creating an <i>interface VPC endpoint</i>. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html\">CodeGuru Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-09-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AnalysisType from './model/AnalysisType';
import AssociateRepositoryRequest from './model/AssociateRepositoryRequest';
import AssociateRepositoryRequestKMSKeyDetails from './model/AssociateRepositoryRequestKMSKeyDetails';
import AssociateRepositoryRequestRepository from './model/AssociateRepositoryRequestRepository';
import AssociateRepositoryRequestRepositoryBitbucket from './model/AssociateRepositoryRequestRepositoryBitbucket';
import AssociateRepositoryRequestRepositoryCodeCommit from './model/AssociateRepositoryRequestRepositoryCodeCommit';
import AssociateRepositoryRequestRepositoryGitHubEnterpriseServer from './model/AssociateRepositoryRequestRepositoryGitHubEnterpriseServer';
import AssociateRepositoryResponse from './model/AssociateRepositoryResponse';
import AssociateRepositoryResponseRepositoryAssociation from './model/AssociateRepositoryResponseRepositoryAssociation';
import BranchDiffSourceCodeType from './model/BranchDiffSourceCodeType';
import CodeArtifacts from './model/CodeArtifacts';
import CodeCommitRepository from './model/CodeCommitRepository';
import CodeReview from './model/CodeReview';
import CodeReviewMetrics from './model/CodeReviewMetrics';
import CodeReviewSourceCodeType from './model/CodeReviewSourceCodeType';
import CodeReviewSummary from './model/CodeReviewSummary';
import CodeReviewSummaryMetricsSummary from './model/CodeReviewSummaryMetricsSummary';
import CodeReviewType from './model/CodeReviewType';
import CommitDiffSourceCodeType from './model/CommitDiffSourceCodeType';
import ConfigFileState from './model/ConfigFileState';
import CreateCodeReviewRequest from './model/CreateCodeReviewRequest';
import CreateCodeReviewRequestType from './model/CreateCodeReviewRequestType';
import CreateCodeReviewRequestTypeRepositoryAnalysis from './model/CreateCodeReviewRequestTypeRepositoryAnalysis';
import CreateCodeReviewResponse from './model/CreateCodeReviewResponse';
import DescribeCodeReviewResponse from './model/DescribeCodeReviewResponse';
import DescribeCodeReviewResponseCodeReview from './model/DescribeCodeReviewResponseCodeReview';
import DescribeRecommendationFeedbackResponse from './model/DescribeRecommendationFeedbackResponse';
import DescribeRecommendationFeedbackResponseRecommendationFeedback from './model/DescribeRecommendationFeedbackResponseRecommendationFeedback';
import DescribeRepositoryAssociationResponse from './model/DescribeRepositoryAssociationResponse';
import DisassociateRepositoryResponse from './model/DisassociateRepositoryResponse';
import DisassociateRepositoryResponseRepositoryAssociation from './model/DisassociateRepositoryResponseRepositoryAssociation';
import EncryptionOption from './model/EncryptionOption';
import EventInfo from './model/EventInfo';
import JobState from './model/JobState';
import KMSKeyDetails from './model/KMSKeyDetails';
import ListCodeReviewsResponse from './model/ListCodeReviewsResponse';
import ListRecommendationFeedbackResponse from './model/ListRecommendationFeedbackResponse';
import ListRecommendationsResponse from './model/ListRecommendationsResponse';
import ListRepositoryAssociationsResponse from './model/ListRepositoryAssociationsResponse';
import ListTagsForResourceResponse from './model/ListTagsForResourceResponse';
import Metrics from './model/Metrics';
import MetricsSummary from './model/MetricsSummary';
import ProviderType from './model/ProviderType';
import PutRecommendationFeedbackRequest from './model/PutRecommendationFeedbackRequest';
import Reaction from './model/Reaction';
import RecommendationCategory from './model/RecommendationCategory';
import RecommendationFeedback from './model/RecommendationFeedback';
import RecommendationFeedbackSummary from './model/RecommendationFeedbackSummary';
import RecommendationSummary from './model/RecommendationSummary';
import RecommendationSummaryRuleMetadata from './model/RecommendationSummaryRuleMetadata';
import Repository from './model/Repository';
import RepositoryAnalysis from './model/RepositoryAnalysis';
import RepositoryAnalysisRepositoryHead from './model/RepositoryAnalysisRepositoryHead';
import RepositoryAssociation from './model/RepositoryAssociation';
import RepositoryAssociationState from './model/RepositoryAssociationState';
import RepositoryAssociationSummary from './model/RepositoryAssociationSummary';
import RepositoryHeadSourceCodeType from './model/RepositoryHeadSourceCodeType';
import RequestMetadata from './model/RequestMetadata';
import RequestMetadataEventInfo from './model/RequestMetadataEventInfo';
import RuleMetadata from './model/RuleMetadata';
import S3BucketRepository from './model/S3BucketRepository';
import S3BucketRepositoryDetails from './model/S3BucketRepositoryDetails';
import S3Repository from './model/S3Repository';
import S3RepositoryDetails from './model/S3RepositoryDetails';
import S3RepositoryDetailsCodeArtifacts from './model/S3RepositoryDetailsCodeArtifacts';
import Severity from './model/Severity';
import SourceCodeType from './model/SourceCodeType';
import SourceCodeTypeBranchDiff from './model/SourceCodeTypeBranchDiff';
import SourceCodeTypeCommitDiff from './model/SourceCodeTypeCommitDiff';
import SourceCodeTypeRequestMetadata from './model/SourceCodeTypeRequestMetadata';
import SourceCodeTypeS3BucketRepository from './model/SourceCodeTypeS3BucketRepository';
import TagResourceRequest from './model/TagResourceRequest';
import ThirdPartySourceRepository from './model/ThirdPartySourceRepository';
import Type from './model/Type';
import VendorName from './model/VendorName';
import DefaultApi from './api/DefaultApi';


/**
* &lt;p&gt;This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommends fixes in your Java and Python code.&lt;/p&gt; &lt;p&gt;By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the &lt;i&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\&quot;&gt;Amazon CodeGuru Reviewer User Guide&lt;/a&gt;.&lt;/i&gt; &lt;/p&gt; &lt;p&gt;To improve the security of your CodeGuru Reviewer API calls, you can establish a private connection between your VPC and CodeGuru Reviewer by creating an &lt;i&gt;interface VPC endpoint&lt;/i&gt;. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html\&quot;&gt;CodeGuru Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)&lt;/a&gt; in the &lt;i&gt;Amazon CodeGuru Reviewer User Guide&lt;/i&gt;.&lt;/p&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AmazonCodeGuruReviewer = require('index'); // See note below*.
* var xxxSvc = new AmazonCodeGuruReviewer.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AmazonCodeGuruReviewer.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AmazonCodeGuruReviewer.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AmazonCodeGuruReviewer.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2019-09-19
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AnalysisType model constructor.
     * @property {module:model/AnalysisType}
     */
    AnalysisType,

    /**
     * The AssociateRepositoryRequest model constructor.
     * @property {module:model/AssociateRepositoryRequest}
     */
    AssociateRepositoryRequest,

    /**
     * The AssociateRepositoryRequestKMSKeyDetails model constructor.
     * @property {module:model/AssociateRepositoryRequestKMSKeyDetails}
     */
    AssociateRepositoryRequestKMSKeyDetails,

    /**
     * The AssociateRepositoryRequestRepository model constructor.
     * @property {module:model/AssociateRepositoryRequestRepository}
     */
    AssociateRepositoryRequestRepository,

    /**
     * The AssociateRepositoryRequestRepositoryBitbucket model constructor.
     * @property {module:model/AssociateRepositoryRequestRepositoryBitbucket}
     */
    AssociateRepositoryRequestRepositoryBitbucket,

    /**
     * The AssociateRepositoryRequestRepositoryCodeCommit model constructor.
     * @property {module:model/AssociateRepositoryRequestRepositoryCodeCommit}
     */
    AssociateRepositoryRequestRepositoryCodeCommit,

    /**
     * The AssociateRepositoryRequestRepositoryGitHubEnterpriseServer model constructor.
     * @property {module:model/AssociateRepositoryRequestRepositoryGitHubEnterpriseServer}
     */
    AssociateRepositoryRequestRepositoryGitHubEnterpriseServer,

    /**
     * The AssociateRepositoryResponse model constructor.
     * @property {module:model/AssociateRepositoryResponse}
     */
    AssociateRepositoryResponse,

    /**
     * The AssociateRepositoryResponseRepositoryAssociation model constructor.
     * @property {module:model/AssociateRepositoryResponseRepositoryAssociation}
     */
    AssociateRepositoryResponseRepositoryAssociation,

    /**
     * The BranchDiffSourceCodeType model constructor.
     * @property {module:model/BranchDiffSourceCodeType}
     */
    BranchDiffSourceCodeType,

    /**
     * The CodeArtifacts model constructor.
     * @property {module:model/CodeArtifacts}
     */
    CodeArtifacts,

    /**
     * The CodeCommitRepository model constructor.
     * @property {module:model/CodeCommitRepository}
     */
    CodeCommitRepository,

    /**
     * The CodeReview model constructor.
     * @property {module:model/CodeReview}
     */
    CodeReview,

    /**
     * The CodeReviewMetrics model constructor.
     * @property {module:model/CodeReviewMetrics}
     */
    CodeReviewMetrics,

    /**
     * The CodeReviewSourceCodeType model constructor.
     * @property {module:model/CodeReviewSourceCodeType}
     */
    CodeReviewSourceCodeType,

    /**
     * The CodeReviewSummary model constructor.
     * @property {module:model/CodeReviewSummary}
     */
    CodeReviewSummary,

    /**
     * The CodeReviewSummaryMetricsSummary model constructor.
     * @property {module:model/CodeReviewSummaryMetricsSummary}
     */
    CodeReviewSummaryMetricsSummary,

    /**
     * The CodeReviewType model constructor.
     * @property {module:model/CodeReviewType}
     */
    CodeReviewType,

    /**
     * The CommitDiffSourceCodeType model constructor.
     * @property {module:model/CommitDiffSourceCodeType}
     */
    CommitDiffSourceCodeType,

    /**
     * The ConfigFileState model constructor.
     * @property {module:model/ConfigFileState}
     */
    ConfigFileState,

    /**
     * The CreateCodeReviewRequest model constructor.
     * @property {module:model/CreateCodeReviewRequest}
     */
    CreateCodeReviewRequest,

    /**
     * The CreateCodeReviewRequestType model constructor.
     * @property {module:model/CreateCodeReviewRequestType}
     */
    CreateCodeReviewRequestType,

    /**
     * The CreateCodeReviewRequestTypeRepositoryAnalysis model constructor.
     * @property {module:model/CreateCodeReviewRequestTypeRepositoryAnalysis}
     */
    CreateCodeReviewRequestTypeRepositoryAnalysis,

    /**
     * The CreateCodeReviewResponse model constructor.
     * @property {module:model/CreateCodeReviewResponse}
     */
    CreateCodeReviewResponse,

    /**
     * The DescribeCodeReviewResponse model constructor.
     * @property {module:model/DescribeCodeReviewResponse}
     */
    DescribeCodeReviewResponse,

    /**
     * The DescribeCodeReviewResponseCodeReview model constructor.
     * @property {module:model/DescribeCodeReviewResponseCodeReview}
     */
    DescribeCodeReviewResponseCodeReview,

    /**
     * The DescribeRecommendationFeedbackResponse model constructor.
     * @property {module:model/DescribeRecommendationFeedbackResponse}
     */
    DescribeRecommendationFeedbackResponse,

    /**
     * The DescribeRecommendationFeedbackResponseRecommendationFeedback model constructor.
     * @property {module:model/DescribeRecommendationFeedbackResponseRecommendationFeedback}
     */
    DescribeRecommendationFeedbackResponseRecommendationFeedback,

    /**
     * The DescribeRepositoryAssociationResponse model constructor.
     * @property {module:model/DescribeRepositoryAssociationResponse}
     */
    DescribeRepositoryAssociationResponse,

    /**
     * The DisassociateRepositoryResponse model constructor.
     * @property {module:model/DisassociateRepositoryResponse}
     */
    DisassociateRepositoryResponse,

    /**
     * The DisassociateRepositoryResponseRepositoryAssociation model constructor.
     * @property {module:model/DisassociateRepositoryResponseRepositoryAssociation}
     */
    DisassociateRepositoryResponseRepositoryAssociation,

    /**
     * The EncryptionOption model constructor.
     * @property {module:model/EncryptionOption}
     */
    EncryptionOption,

    /**
     * The EventInfo model constructor.
     * @property {module:model/EventInfo}
     */
    EventInfo,

    /**
     * The JobState model constructor.
     * @property {module:model/JobState}
     */
    JobState,

    /**
     * The KMSKeyDetails model constructor.
     * @property {module:model/KMSKeyDetails}
     */
    KMSKeyDetails,

    /**
     * The ListCodeReviewsResponse model constructor.
     * @property {module:model/ListCodeReviewsResponse}
     */
    ListCodeReviewsResponse,

    /**
     * The ListRecommendationFeedbackResponse model constructor.
     * @property {module:model/ListRecommendationFeedbackResponse}
     */
    ListRecommendationFeedbackResponse,

    /**
     * The ListRecommendationsResponse model constructor.
     * @property {module:model/ListRecommendationsResponse}
     */
    ListRecommendationsResponse,

    /**
     * The ListRepositoryAssociationsResponse model constructor.
     * @property {module:model/ListRepositoryAssociationsResponse}
     */
    ListRepositoryAssociationsResponse,

    /**
     * The ListTagsForResourceResponse model constructor.
     * @property {module:model/ListTagsForResourceResponse}
     */
    ListTagsForResourceResponse,

    /**
     * The Metrics model constructor.
     * @property {module:model/Metrics}
     */
    Metrics,

    /**
     * The MetricsSummary model constructor.
     * @property {module:model/MetricsSummary}
     */
    MetricsSummary,

    /**
     * The ProviderType model constructor.
     * @property {module:model/ProviderType}
     */
    ProviderType,

    /**
     * The PutRecommendationFeedbackRequest model constructor.
     * @property {module:model/PutRecommendationFeedbackRequest}
     */
    PutRecommendationFeedbackRequest,

    /**
     * The Reaction model constructor.
     * @property {module:model/Reaction}
     */
    Reaction,

    /**
     * The RecommendationCategory model constructor.
     * @property {module:model/RecommendationCategory}
     */
    RecommendationCategory,

    /**
     * The RecommendationFeedback model constructor.
     * @property {module:model/RecommendationFeedback}
     */
    RecommendationFeedback,

    /**
     * The RecommendationFeedbackSummary model constructor.
     * @property {module:model/RecommendationFeedbackSummary}
     */
    RecommendationFeedbackSummary,

    /**
     * The RecommendationSummary model constructor.
     * @property {module:model/RecommendationSummary}
     */
    RecommendationSummary,

    /**
     * The RecommendationSummaryRuleMetadata model constructor.
     * @property {module:model/RecommendationSummaryRuleMetadata}
     */
    RecommendationSummaryRuleMetadata,

    /**
     * The Repository model constructor.
     * @property {module:model/Repository}
     */
    Repository,

    /**
     * The RepositoryAnalysis model constructor.
     * @property {module:model/RepositoryAnalysis}
     */
    RepositoryAnalysis,

    /**
     * The RepositoryAnalysisRepositoryHead model constructor.
     * @property {module:model/RepositoryAnalysisRepositoryHead}
     */
    RepositoryAnalysisRepositoryHead,

    /**
     * The RepositoryAssociation model constructor.
     * @property {module:model/RepositoryAssociation}
     */
    RepositoryAssociation,

    /**
     * The RepositoryAssociationState model constructor.
     * @property {module:model/RepositoryAssociationState}
     */
    RepositoryAssociationState,

    /**
     * The RepositoryAssociationSummary model constructor.
     * @property {module:model/RepositoryAssociationSummary}
     */
    RepositoryAssociationSummary,

    /**
     * The RepositoryHeadSourceCodeType model constructor.
     * @property {module:model/RepositoryHeadSourceCodeType}
     */
    RepositoryHeadSourceCodeType,

    /**
     * The RequestMetadata model constructor.
     * @property {module:model/RequestMetadata}
     */
    RequestMetadata,

    /**
     * The RequestMetadataEventInfo model constructor.
     * @property {module:model/RequestMetadataEventInfo}
     */
    RequestMetadataEventInfo,

    /**
     * The RuleMetadata model constructor.
     * @property {module:model/RuleMetadata}
     */
    RuleMetadata,

    /**
     * The S3BucketRepository model constructor.
     * @property {module:model/S3BucketRepository}
     */
    S3BucketRepository,

    /**
     * The S3BucketRepositoryDetails model constructor.
     * @property {module:model/S3BucketRepositoryDetails}
     */
    S3BucketRepositoryDetails,

    /**
     * The S3Repository model constructor.
     * @property {module:model/S3Repository}
     */
    S3Repository,

    /**
     * The S3RepositoryDetails model constructor.
     * @property {module:model/S3RepositoryDetails}
     */
    S3RepositoryDetails,

    /**
     * The S3RepositoryDetailsCodeArtifacts model constructor.
     * @property {module:model/S3RepositoryDetailsCodeArtifacts}
     */
    S3RepositoryDetailsCodeArtifacts,

    /**
     * The Severity model constructor.
     * @property {module:model/Severity}
     */
    Severity,

    /**
     * The SourceCodeType model constructor.
     * @property {module:model/SourceCodeType}
     */
    SourceCodeType,

    /**
     * The SourceCodeTypeBranchDiff model constructor.
     * @property {module:model/SourceCodeTypeBranchDiff}
     */
    SourceCodeTypeBranchDiff,

    /**
     * The SourceCodeTypeCommitDiff model constructor.
     * @property {module:model/SourceCodeTypeCommitDiff}
     */
    SourceCodeTypeCommitDiff,

    /**
     * The SourceCodeTypeRequestMetadata model constructor.
     * @property {module:model/SourceCodeTypeRequestMetadata}
     */
    SourceCodeTypeRequestMetadata,

    /**
     * The SourceCodeTypeS3BucketRepository model constructor.
     * @property {module:model/SourceCodeTypeS3BucketRepository}
     */
    SourceCodeTypeS3BucketRepository,

    /**
     * The TagResourceRequest model constructor.
     * @property {module:model/TagResourceRequest}
     */
    TagResourceRequest,

    /**
     * The ThirdPartySourceRepository model constructor.
     * @property {module:model/ThirdPartySourceRepository}
     */
    ThirdPartySourceRepository,

    /**
     * The Type model constructor.
     * @property {module:model/Type}
     */
    Type,

    /**
     * The VendorName model constructor.
     * @property {module:model/VendorName}
     */
    VendorName,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
