# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecommendationFeedbackSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recommendation_id: str=None, reactions: List=None, user_id: str=None):
        """RecommendationFeedbackSummary - a model defined in OpenAPI

        :param recommendation_id: The recommendation_id of this RecommendationFeedbackSummary.
        :param reactions: The reactions of this RecommendationFeedbackSummary.
        :param user_id: The user_id of this RecommendationFeedbackSummary.
        """
        self.openapi_types = {
            'recommendation_id': str,
            'reactions': List,
            'user_id': str
        }

        self.attribute_map = {
            'recommendation_id': 'RecommendationId',
            'reactions': 'Reactions',
            'user_id': 'UserId'
        }

        self._recommendation_id = recommendation_id
        self._reactions = reactions
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendationFeedbackSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommendationFeedbackSummary of this RecommendationFeedbackSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recommendation_id(self):
        """Gets the recommendation_id of this RecommendationFeedbackSummary.


        :return: The recommendation_id of this RecommendationFeedbackSummary.
        :rtype: str
        """
        return self._recommendation_id

    @recommendation_id.setter
    def recommendation_id(self, recommendation_id):
        """Sets the recommendation_id of this RecommendationFeedbackSummary.


        :param recommendation_id: The recommendation_id of this RecommendationFeedbackSummary.
        :type recommendation_id: str
        """

        self._recommendation_id = recommendation_id

    @property
    def reactions(self):
        """Gets the reactions of this RecommendationFeedbackSummary.


        :return: The reactions of this RecommendationFeedbackSummary.
        :rtype: List
        """
        return self._reactions

    @reactions.setter
    def reactions(self, reactions):
        """Sets the reactions of this RecommendationFeedbackSummary.


        :param reactions: The reactions of this RecommendationFeedbackSummary.
        :type reactions: List
        """

        self._reactions = reactions

    @property
    def user_id(self):
        """Gets the user_id of this RecommendationFeedbackSummary.


        :return: The user_id of this RecommendationFeedbackSummary.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this RecommendationFeedbackSummary.


        :param user_id: The user_id of this RecommendationFeedbackSummary.
        :type user_id: str
        """

        self._user_id = user_id
