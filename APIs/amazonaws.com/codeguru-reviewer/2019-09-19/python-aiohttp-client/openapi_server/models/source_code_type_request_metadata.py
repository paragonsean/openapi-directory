# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.request_metadata_event_info import RequestMetadataEventInfo
from openapi_server.models.vendor_name import VendorName
from openapi_server import util


class SourceCodeTypeRequestMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, request_id: str=None, requester: str=None, event_info: RequestMetadataEventInfo=None, vendor_name: VendorName=None):
        """SourceCodeTypeRequestMetadata - a model defined in OpenAPI

        :param request_id: The request_id of this SourceCodeTypeRequestMetadata.
        :param requester: The requester of this SourceCodeTypeRequestMetadata.
        :param event_info: The event_info of this SourceCodeTypeRequestMetadata.
        :param vendor_name: The vendor_name of this SourceCodeTypeRequestMetadata.
        """
        self.openapi_types = {
            'request_id': str,
            'requester': str,
            'event_info': RequestMetadataEventInfo,
            'vendor_name': VendorName
        }

        self.attribute_map = {
            'request_id': 'RequestId',
            'requester': 'Requester',
            'event_info': 'EventInfo',
            'vendor_name': 'VendorName'
        }

        self._request_id = request_id
        self._requester = requester
        self._event_info = event_info
        self._vendor_name = vendor_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceCodeTypeRequestMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceCodeType_RequestMetadata of this SourceCodeTypeRequestMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request_id(self):
        """Gets the request_id of this SourceCodeTypeRequestMetadata.


        :return: The request_id of this SourceCodeTypeRequestMetadata.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this SourceCodeTypeRequestMetadata.


        :param request_id: The request_id of this SourceCodeTypeRequestMetadata.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def requester(self):
        """Gets the requester of this SourceCodeTypeRequestMetadata.


        :return: The requester of this SourceCodeTypeRequestMetadata.
        :rtype: str
        """
        return self._requester

    @requester.setter
    def requester(self, requester):
        """Sets the requester of this SourceCodeTypeRequestMetadata.


        :param requester: The requester of this SourceCodeTypeRequestMetadata.
        :type requester: str
        """

        self._requester = requester

    @property
    def event_info(self):
        """Gets the event_info of this SourceCodeTypeRequestMetadata.


        :return: The event_info of this SourceCodeTypeRequestMetadata.
        :rtype: RequestMetadataEventInfo
        """
        return self._event_info

    @event_info.setter
    def event_info(self, event_info):
        """Sets the event_info of this SourceCodeTypeRequestMetadata.


        :param event_info: The event_info of this SourceCodeTypeRequestMetadata.
        :type event_info: RequestMetadataEventInfo
        """

        self._event_info = event_info

    @property
    def vendor_name(self):
        """Gets the vendor_name of this SourceCodeTypeRequestMetadata.


        :return: The vendor_name of this SourceCodeTypeRequestMetadata.
        :rtype: VendorName
        """
        return self._vendor_name

    @vendor_name.setter
    def vendor_name(self, vendor_name):
        """Sets the vendor_name of this SourceCodeTypeRequestMetadata.


        :param vendor_name: The vendor_name of this SourceCodeTypeRequestMetadata.
        :type vendor_name: VendorName
        """

        self._vendor_name = vendor_name
