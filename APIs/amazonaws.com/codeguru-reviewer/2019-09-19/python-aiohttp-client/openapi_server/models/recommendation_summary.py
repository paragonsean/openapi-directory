# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.recommendation_category import RecommendationCategory
from openapi_server.models.recommendation_summary_rule_metadata import RecommendationSummaryRuleMetadata
from openapi_server.models.severity import Severity
from openapi_server import util


class RecommendationSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_path: str=None, recommendation_id: str=None, start_line: int=None, end_line: int=None, description: str=None, recommendation_category: RecommendationCategory=None, rule_metadata: RecommendationSummaryRuleMetadata=None, severity: Severity=None):
        """RecommendationSummary - a model defined in OpenAPI

        :param file_path: The file_path of this RecommendationSummary.
        :param recommendation_id: The recommendation_id of this RecommendationSummary.
        :param start_line: The start_line of this RecommendationSummary.
        :param end_line: The end_line of this RecommendationSummary.
        :param description: The description of this RecommendationSummary.
        :param recommendation_category: The recommendation_category of this RecommendationSummary.
        :param rule_metadata: The rule_metadata of this RecommendationSummary.
        :param severity: The severity of this RecommendationSummary.
        """
        self.openapi_types = {
            'file_path': str,
            'recommendation_id': str,
            'start_line': int,
            'end_line': int,
            'description': str,
            'recommendation_category': RecommendationCategory,
            'rule_metadata': RecommendationSummaryRuleMetadata,
            'severity': Severity
        }

        self.attribute_map = {
            'file_path': 'FilePath',
            'recommendation_id': 'RecommendationId',
            'start_line': 'StartLine',
            'end_line': 'EndLine',
            'description': 'Description',
            'recommendation_category': 'RecommendationCategory',
            'rule_metadata': 'RuleMetadata',
            'severity': 'Severity'
        }

        self._file_path = file_path
        self._recommendation_id = recommendation_id
        self._start_line = start_line
        self._end_line = end_line
        self._description = description
        self._recommendation_category = recommendation_category
        self._rule_metadata = rule_metadata
        self._severity = severity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendationSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommendationSummary of this RecommendationSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_path(self):
        """Gets the file_path of this RecommendationSummary.


        :return: The file_path of this RecommendationSummary.
        :rtype: str
        """
        return self._file_path

    @file_path.setter
    def file_path(self, file_path):
        """Sets the file_path of this RecommendationSummary.


        :param file_path: The file_path of this RecommendationSummary.
        :type file_path: str
        """

        self._file_path = file_path

    @property
    def recommendation_id(self):
        """Gets the recommendation_id of this RecommendationSummary.


        :return: The recommendation_id of this RecommendationSummary.
        :rtype: str
        """
        return self._recommendation_id

    @recommendation_id.setter
    def recommendation_id(self, recommendation_id):
        """Sets the recommendation_id of this RecommendationSummary.


        :param recommendation_id: The recommendation_id of this RecommendationSummary.
        :type recommendation_id: str
        """

        self._recommendation_id = recommendation_id

    @property
    def start_line(self):
        """Gets the start_line of this RecommendationSummary.


        :return: The start_line of this RecommendationSummary.
        :rtype: int
        """
        return self._start_line

    @start_line.setter
    def start_line(self, start_line):
        """Sets the start_line of this RecommendationSummary.


        :param start_line: The start_line of this RecommendationSummary.
        :type start_line: int
        """

        self._start_line = start_line

    @property
    def end_line(self):
        """Gets the end_line of this RecommendationSummary.


        :return: The end_line of this RecommendationSummary.
        :rtype: int
        """
        return self._end_line

    @end_line.setter
    def end_line(self, end_line):
        """Sets the end_line of this RecommendationSummary.


        :param end_line: The end_line of this RecommendationSummary.
        :type end_line: int
        """

        self._end_line = end_line

    @property
    def description(self):
        """Gets the description of this RecommendationSummary.


        :return: The description of this RecommendationSummary.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RecommendationSummary.


        :param description: The description of this RecommendationSummary.
        :type description: str
        """

        self._description = description

    @property
    def recommendation_category(self):
        """Gets the recommendation_category of this RecommendationSummary.


        :return: The recommendation_category of this RecommendationSummary.
        :rtype: RecommendationCategory
        """
        return self._recommendation_category

    @recommendation_category.setter
    def recommendation_category(self, recommendation_category):
        """Sets the recommendation_category of this RecommendationSummary.


        :param recommendation_category: The recommendation_category of this RecommendationSummary.
        :type recommendation_category: RecommendationCategory
        """

        self._recommendation_category = recommendation_category

    @property
    def rule_metadata(self):
        """Gets the rule_metadata of this RecommendationSummary.


        :return: The rule_metadata of this RecommendationSummary.
        :rtype: RecommendationSummaryRuleMetadata
        """
        return self._rule_metadata

    @rule_metadata.setter
    def rule_metadata(self, rule_metadata):
        """Sets the rule_metadata of this RecommendationSummary.


        :param rule_metadata: The rule_metadata of this RecommendationSummary.
        :type rule_metadata: RecommendationSummaryRuleMetadata
        """

        self._rule_metadata = rule_metadata

    @property
    def severity(self):
        """Gets the severity of this RecommendationSummary.


        :return: The severity of this RecommendationSummary.
        :rtype: Severity
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this RecommendationSummary.


        :param severity: The severity of this RecommendationSummary.
        :type severity: Severity
        """

        self._severity = severity
