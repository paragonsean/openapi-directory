# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.s3_bucket_repository_details import S3BucketRepositoryDetails
from openapi_server import util


class S3BucketRepository(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, details: S3BucketRepositoryDetails=None):
        """S3BucketRepository - a model defined in OpenAPI

        :param name: The name of this S3BucketRepository.
        :param details: The details of this S3BucketRepository.
        """
        self.openapi_types = {
            'name': str,
            'details': S3BucketRepositoryDetails
        }

        self.attribute_map = {
            'name': 'Name',
            'details': 'Details'
        }

        self._name = name
        self._details = details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'S3BucketRepository':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The S3BucketRepository of this S3BucketRepository.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this S3BucketRepository.


        :return: The name of this S3BucketRepository.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this S3BucketRepository.


        :param name: The name of this S3BucketRepository.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def details(self):
        """Gets the details of this S3BucketRepository.


        :return: The details of this S3BucketRepository.
        :rtype: S3BucketRepositoryDetails
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this S3BucketRepository.


        :param details: The details of this S3BucketRepository.
        :type details: S3BucketRepositoryDetails
        """

        self._details = details
