# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecommendationCategory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    AWSBESTPRACTICES = 'AWSBestPractices'
    AWSCLOUDFORMATIONISSUES = 'AWSCloudFormationIssues'
    DUPLICATECODE = 'DuplicateCode'
    CODEMAINTENANCEISSUES = 'CodeMaintenanceIssues'
    CONCURRENCYISSUES = 'ConcurrencyIssues'
    INPUTVALIDATIONS = 'InputValidations'
    PYTHONBESTPRACTICES = 'PythonBestPractices'
    JAVABESTPRACTICES = 'JavaBestPractices'
    RESOURCELEAKS = 'ResourceLeaks'
    SECURITYISSUES = 'SecurityIssues'
    CODEINCONSISTENCIES = 'CodeInconsistencies'

    def __init__(self):
        """RecommendationCategory - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendationCategory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommendationCategory of this RecommendationCategory.
        """
        return util.deserialize_model(dikt, cls)
