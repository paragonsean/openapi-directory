# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.s3_repository_details_code_artifacts import S3RepositoryDetailsCodeArtifacts
from openapi_server import util


class S3BucketRepositoryDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket_name: str=None, code_artifacts: S3RepositoryDetailsCodeArtifacts=None):
        """S3BucketRepositoryDetails - a model defined in OpenAPI

        :param bucket_name: The bucket_name of this S3BucketRepositoryDetails.
        :param code_artifacts: The code_artifacts of this S3BucketRepositoryDetails.
        """
        self.openapi_types = {
            'bucket_name': str,
            'code_artifacts': S3RepositoryDetailsCodeArtifacts
        }

        self.attribute_map = {
            'bucket_name': 'BucketName',
            'code_artifacts': 'CodeArtifacts'
        }

        self._bucket_name = bucket_name
        self._code_artifacts = code_artifacts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'S3BucketRepositoryDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The S3BucketRepository_Details of this S3BucketRepositoryDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket_name(self):
        """Gets the bucket_name of this S3BucketRepositoryDetails.


        :return: The bucket_name of this S3BucketRepositoryDetails.
        :rtype: str
        """
        return self._bucket_name

    @bucket_name.setter
    def bucket_name(self, bucket_name):
        """Sets the bucket_name of this S3BucketRepositoryDetails.


        :param bucket_name: The bucket_name of this S3BucketRepositoryDetails.
        :type bucket_name: str
        """

        self._bucket_name = bucket_name

    @property
    def code_artifacts(self):
        """Gets the code_artifacts of this S3BucketRepositoryDetails.


        :return: The code_artifacts of this S3BucketRepositoryDetails.
        :rtype: S3RepositoryDetailsCodeArtifacts
        """
        return self._code_artifacts

    @code_artifacts.setter
    def code_artifacts(self, code_artifacts):
        """Sets the code_artifacts of this S3BucketRepositoryDetails.


        :param code_artifacts: The code_artifacts of this S3BucketRepositoryDetails.
        :type code_artifacts: S3RepositoryDetailsCodeArtifacts
        """

        self._code_artifacts = code_artifacts
