# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RuleMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule_id: str=None, rule_name: str=None, short_description: str=None, long_description: str=None, rule_tags: List=None):
        """RuleMetadata - a model defined in OpenAPI

        :param rule_id: The rule_id of this RuleMetadata.
        :param rule_name: The rule_name of this RuleMetadata.
        :param short_description: The short_description of this RuleMetadata.
        :param long_description: The long_description of this RuleMetadata.
        :param rule_tags: The rule_tags of this RuleMetadata.
        """
        self.openapi_types = {
            'rule_id': str,
            'rule_name': str,
            'short_description': str,
            'long_description': str,
            'rule_tags': List
        }

        self.attribute_map = {
            'rule_id': 'RuleId',
            'rule_name': 'RuleName',
            'short_description': 'ShortDescription',
            'long_description': 'LongDescription',
            'rule_tags': 'RuleTags'
        }

        self._rule_id = rule_id
        self._rule_name = rule_name
        self._short_description = short_description
        self._long_description = long_description
        self._rule_tags = rule_tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RuleMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RuleMetadata of this RuleMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule_id(self):
        """Gets the rule_id of this RuleMetadata.


        :return: The rule_id of this RuleMetadata.
        :rtype: str
        """
        return self._rule_id

    @rule_id.setter
    def rule_id(self, rule_id):
        """Sets the rule_id of this RuleMetadata.


        :param rule_id: The rule_id of this RuleMetadata.
        :type rule_id: str
        """

        self._rule_id = rule_id

    @property
    def rule_name(self):
        """Gets the rule_name of this RuleMetadata.


        :return: The rule_name of this RuleMetadata.
        :rtype: str
        """
        return self._rule_name

    @rule_name.setter
    def rule_name(self, rule_name):
        """Sets the rule_name of this RuleMetadata.


        :param rule_name: The rule_name of this RuleMetadata.
        :type rule_name: str
        """

        self._rule_name = rule_name

    @property
    def short_description(self):
        """Gets the short_description of this RuleMetadata.


        :return: The short_description of this RuleMetadata.
        :rtype: str
        """
        return self._short_description

    @short_description.setter
    def short_description(self, short_description):
        """Sets the short_description of this RuleMetadata.


        :param short_description: The short_description of this RuleMetadata.
        :type short_description: str
        """

        self._short_description = short_description

    @property
    def long_description(self):
        """Gets the long_description of this RuleMetadata.


        :return: The long_description of this RuleMetadata.
        :rtype: str
        """
        return self._long_description

    @long_description.setter
    def long_description(self, long_description):
        """Sets the long_description of this RuleMetadata.


        :param long_description: The long_description of this RuleMetadata.
        :type long_description: str
        """

        self._long_description = long_description

    @property
    def rule_tags(self):
        """Gets the rule_tags of this RuleMetadata.


        :return: The rule_tags of this RuleMetadata.
        :rtype: List
        """
        return self._rule_tags

    @rule_tags.setter
    def rule_tags(self, rule_tags):
        """Sets the rule_tags of this RuleMetadata.


        :param rule_tags: The rule_tags of this RuleMetadata.
        :type rule_tags: List
        """

        self._rule_tags = rule_tags
