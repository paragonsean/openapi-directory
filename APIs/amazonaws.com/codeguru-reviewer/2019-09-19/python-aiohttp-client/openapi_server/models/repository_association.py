# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.associate_repository_request_kms_key_details import AssociateRepositoryRequestKMSKeyDetails
from openapi_server.models.provider_type import ProviderType
from openapi_server.models.repository_association_state import RepositoryAssociationState
from openapi_server.models.s3_repository_details import S3RepositoryDetails
from openapi_server import util


class RepositoryAssociation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, association_id: str=None, association_arn: str=None, connection_arn: str=None, name: str=None, owner: str=None, provider_type: ProviderType=None, state: RepositoryAssociationState=None, state_reason: str=None, last_updated_time_stamp: datetime=None, created_time_stamp: datetime=None, kms_key_details: AssociateRepositoryRequestKMSKeyDetails=None, s3_repository_details: S3RepositoryDetails=None):
        """RepositoryAssociation - a model defined in OpenAPI

        :param association_id: The association_id of this RepositoryAssociation.
        :param association_arn: The association_arn of this RepositoryAssociation.
        :param connection_arn: The connection_arn of this RepositoryAssociation.
        :param name: The name of this RepositoryAssociation.
        :param owner: The owner of this RepositoryAssociation.
        :param provider_type: The provider_type of this RepositoryAssociation.
        :param state: The state of this RepositoryAssociation.
        :param state_reason: The state_reason of this RepositoryAssociation.
        :param last_updated_time_stamp: The last_updated_time_stamp of this RepositoryAssociation.
        :param created_time_stamp: The created_time_stamp of this RepositoryAssociation.
        :param kms_key_details: The kms_key_details of this RepositoryAssociation.
        :param s3_repository_details: The s3_repository_details of this RepositoryAssociation.
        """
        self.openapi_types = {
            'association_id': str,
            'association_arn': str,
            'connection_arn': str,
            'name': str,
            'owner': str,
            'provider_type': ProviderType,
            'state': RepositoryAssociationState,
            'state_reason': str,
            'last_updated_time_stamp': datetime,
            'created_time_stamp': datetime,
            'kms_key_details': AssociateRepositoryRequestKMSKeyDetails,
            's3_repository_details': S3RepositoryDetails
        }

        self.attribute_map = {
            'association_id': 'AssociationId',
            'association_arn': 'AssociationArn',
            'connection_arn': 'ConnectionArn',
            'name': 'Name',
            'owner': 'Owner',
            'provider_type': 'ProviderType',
            'state': 'State',
            'state_reason': 'StateReason',
            'last_updated_time_stamp': 'LastUpdatedTimeStamp',
            'created_time_stamp': 'CreatedTimeStamp',
            'kms_key_details': 'KMSKeyDetails',
            's3_repository_details': 'S3RepositoryDetails'
        }

        self._association_id = association_id
        self._association_arn = association_arn
        self._connection_arn = connection_arn
        self._name = name
        self._owner = owner
        self._provider_type = provider_type
        self._state = state
        self._state_reason = state_reason
        self._last_updated_time_stamp = last_updated_time_stamp
        self._created_time_stamp = created_time_stamp
        self._kms_key_details = kms_key_details
        self._s3_repository_details = s3_repository_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RepositoryAssociation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RepositoryAssociation of this RepositoryAssociation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def association_id(self):
        """Gets the association_id of this RepositoryAssociation.


        :return: The association_id of this RepositoryAssociation.
        :rtype: str
        """
        return self._association_id

    @association_id.setter
    def association_id(self, association_id):
        """Sets the association_id of this RepositoryAssociation.


        :param association_id: The association_id of this RepositoryAssociation.
        :type association_id: str
        """

        self._association_id = association_id

    @property
    def association_arn(self):
        """Gets the association_arn of this RepositoryAssociation.


        :return: The association_arn of this RepositoryAssociation.
        :rtype: str
        """
        return self._association_arn

    @association_arn.setter
    def association_arn(self, association_arn):
        """Sets the association_arn of this RepositoryAssociation.


        :param association_arn: The association_arn of this RepositoryAssociation.
        :type association_arn: str
        """

        self._association_arn = association_arn

    @property
    def connection_arn(self):
        """Gets the connection_arn of this RepositoryAssociation.


        :return: The connection_arn of this RepositoryAssociation.
        :rtype: str
        """
        return self._connection_arn

    @connection_arn.setter
    def connection_arn(self, connection_arn):
        """Sets the connection_arn of this RepositoryAssociation.


        :param connection_arn: The connection_arn of this RepositoryAssociation.
        :type connection_arn: str
        """

        self._connection_arn = connection_arn

    @property
    def name(self):
        """Gets the name of this RepositoryAssociation.


        :return: The name of this RepositoryAssociation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RepositoryAssociation.


        :param name: The name of this RepositoryAssociation.
        :type name: str
        """

        self._name = name

    @property
    def owner(self):
        """Gets the owner of this RepositoryAssociation.


        :return: The owner of this RepositoryAssociation.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this RepositoryAssociation.


        :param owner: The owner of this RepositoryAssociation.
        :type owner: str
        """

        self._owner = owner

    @property
    def provider_type(self):
        """Gets the provider_type of this RepositoryAssociation.


        :return: The provider_type of this RepositoryAssociation.
        :rtype: ProviderType
        """
        return self._provider_type

    @provider_type.setter
    def provider_type(self, provider_type):
        """Sets the provider_type of this RepositoryAssociation.


        :param provider_type: The provider_type of this RepositoryAssociation.
        :type provider_type: ProviderType
        """

        self._provider_type = provider_type

    @property
    def state(self):
        """Gets the state of this RepositoryAssociation.


        :return: The state of this RepositoryAssociation.
        :rtype: RepositoryAssociationState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this RepositoryAssociation.


        :param state: The state of this RepositoryAssociation.
        :type state: RepositoryAssociationState
        """

        self._state = state

    @property
    def state_reason(self):
        """Gets the state_reason of this RepositoryAssociation.


        :return: The state_reason of this RepositoryAssociation.
        :rtype: str
        """
        return self._state_reason

    @state_reason.setter
    def state_reason(self, state_reason):
        """Sets the state_reason of this RepositoryAssociation.


        :param state_reason: The state_reason of this RepositoryAssociation.
        :type state_reason: str
        """

        self._state_reason = state_reason

    @property
    def last_updated_time_stamp(self):
        """Gets the last_updated_time_stamp of this RepositoryAssociation.


        :return: The last_updated_time_stamp of this RepositoryAssociation.
        :rtype: datetime
        """
        return self._last_updated_time_stamp

    @last_updated_time_stamp.setter
    def last_updated_time_stamp(self, last_updated_time_stamp):
        """Sets the last_updated_time_stamp of this RepositoryAssociation.


        :param last_updated_time_stamp: The last_updated_time_stamp of this RepositoryAssociation.
        :type last_updated_time_stamp: datetime
        """

        self._last_updated_time_stamp = last_updated_time_stamp

    @property
    def created_time_stamp(self):
        """Gets the created_time_stamp of this RepositoryAssociation.


        :return: The created_time_stamp of this RepositoryAssociation.
        :rtype: datetime
        """
        return self._created_time_stamp

    @created_time_stamp.setter
    def created_time_stamp(self, created_time_stamp):
        """Sets the created_time_stamp of this RepositoryAssociation.


        :param created_time_stamp: The created_time_stamp of this RepositoryAssociation.
        :type created_time_stamp: datetime
        """

        self._created_time_stamp = created_time_stamp

    @property
    def kms_key_details(self):
        """Gets the kms_key_details of this RepositoryAssociation.


        :return: The kms_key_details of this RepositoryAssociation.
        :rtype: AssociateRepositoryRequestKMSKeyDetails
        """
        return self._kms_key_details

    @kms_key_details.setter
    def kms_key_details(self, kms_key_details):
        """Sets the kms_key_details of this RepositoryAssociation.


        :param kms_key_details: The kms_key_details of this RepositoryAssociation.
        :type kms_key_details: AssociateRepositoryRequestKMSKeyDetails
        """

        self._kms_key_details = kms_key_details

    @property
    def s3_repository_details(self):
        """Gets the s3_repository_details of this RepositoryAssociation.


        :return: The s3_repository_details of this RepositoryAssociation.
        :rtype: S3RepositoryDetails
        """
        return self._s3_repository_details

    @s3_repository_details.setter
    def s3_repository_details(self, s3_repository_details):
        """Sets the s3_repository_details of this RepositoryAssociation.


        :param s3_repository_details: The s3_repository_details of this RepositoryAssociation.
        :type s3_repository_details: S3RepositoryDetails
        """

        self._s3_repository_details = s3_repository_details
