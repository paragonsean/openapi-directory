openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>This section provides documentation for the Amazon CodeGuru Reviewer\
    \ API operations. CodeGuru Reviewer is a service that uses program analysis and\
    \ machine learning to detect potential defects that are difficult for developers\
    \ to find and recommends fixes in your Java and Python code.</p> <p>By proactively\
    \ detecting and providing recommendations for addressing code defects and implementing\
    \ best practices, CodeGuru Reviewer improves the overall quality and maintainability\
    \ of your code base during the code review stage. For more information about CodeGuru\
    \ Reviewer, see the <i> <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\"\
    >Amazon CodeGuru Reviewer User Guide</a>.</i> </p> <p>To improve the security\
    \ of your CodeGuru Reviewer API calls, you can establish a private connection\
    \ between your VPC and CodeGuru Reviewer by creating an <i>interface VPC endpoint</i>.\
    \ For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html\"\
    >CodeGuru Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)</a>\
    \ in the <i>Amazon CodeGuru Reviewer User Guide</i>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon CodeGuru Reviewer
  version: 2019-09-19
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: codeguru-reviewer
  x-aws-signingName: codeguru-reviewer
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codeguru-reviewer-2019-09-19.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/codeguru-reviewer/
servers:
- description: The CodeGuruReviewer multi-region endpoint
  url: "http://codeguru-reviewer.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The CodeGuruReviewer multi-region endpoint
  url: "https://codeguru-reviewer.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The CodeGuruReviewer endpoint for China (Beijing) and China (Ningxia)
  url: "http://codeguru-reviewer.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The CodeGuruReviewer endpoint for China (Beijing) and China (Ningxia)
  url: "https://codeguru-reviewer.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /associations:
    get:
      description: "Returns a list of <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html\"\
        >RepositoryAssociationSummary</a> objects that contain summary information\
        \ about a repository association. You can filter the returned list by <a href=\"\
        https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-ProviderType\"\
        >ProviderType</a>, <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-Name\"\
        >Name</a>, <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-State\"\
        >State</a>, and <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-Owner\"\
        >Owner</a>."
      operationId: list_repository_associations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: List of provider types to use as a filter.
        explode: true
        in: query
        name: ProviderType
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ProviderType'
          maxItems: 3
          minItems: 1
          type: array
        style: form
      - description: "<p>List of repository association states to use as a filter.</p>\
          \ <p>The valid repository association states are:</p> <ul> <li> <p> <b>Associated</b>:\
          \ The repository association is complete.</p> </li> <li> <p> <b>Associating</b>:\
          \ CodeGuru Reviewer is:</p> <ul> <li> <p>Setting up pull request notifications.\
          \ This is required for pull requests to trigger a CodeGuru Reviewer review.</p>\
          \ <note> <p>If your repository <code>ProviderType</code> is <code>GitHub</code>,\
          \ <code>GitHub Enterprise Server</code>, or <code>Bitbucket</code>, CodeGuru\
          \ Reviewer creates webhooks in your repository to trigger CodeGuru Reviewer\
          \ reviews. If you delete these webhooks, reviews of code in your repository\
          \ cannot be triggered.</p> </note> </li> <li> <p>Setting up source code\
          \ access. This is required for CodeGuru Reviewer to securely clone code\
          \ in your repository.</p> </li> </ul> </li> <li> <p> <b>Failed</b>: The\
          \ repository failed to associate or disassociate.</p> </li> <li> <p> <b>Disassociating</b>:\
          \ CodeGuru Reviewer is removing the repository's pull request notifications\
          \ and source code access.</p> </li> <li> <p> <b>Disassociated</b>: CodeGuru\
          \ Reviewer successfully disassociated the repository. You can create a new\
          \ association with this repository if you want to review source code in\
          \ it later. You can control access to code reviews created in anassociated\
          \ repository with tags after it has been disassociated. For more information,\
          \ see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/auth-and-access-control-using-tags.html\"\
          >Using tags to control access to associated repositories</a> in the <i>Amazon\
          \ CodeGuru Reviewer User Guide</i>.</p> </li> </ul>"
        explode: true
        in: query
        name: State
        required: false
        schema:
          items:
            $ref: '#/components/schemas/RepositoryAssociationState'
          maxItems: 5
          minItems: 1
          type: array
        style: form
      - description: List of repository names to use as a filter.
        explode: true
        in: query
        name: Name
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Name'
          maxItems: 3
          minItems: 1
          type: array
        style: form
      - description: "List of owners to use as a filter. For Amazon Web Services CodeCommit,\
          \ it is the name of the CodeCommit account that was used to associate the\
          \ repository. For other repository source providers, such as Bitbucket and\
          \ GitHub Enterprise Server, this is name of the account that was used to\
          \ associate the repository. "
        explode: true
        in: query
        name: Owner
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Owner'
          maxItems: 3
          minItems: 1
          type: array
        style: form
      - description: "The maximum number of repository association results returned\
          \ by <code>ListRepositoryAssociations</code> in paginated output. When this\
          \ parameter is used, <code>ListRepositoryAssociations</code> only returns\
          \ <code>maxResults</code> results in a single page with a <code>nextToken</code>\
          \ response element. The remaining results of the initial request can be\
          \ seen by sending another <code>ListRepositoryAssociations</code> request\
          \ with the returned <code>nextToken</code> value. This value can be between\
          \ 1 and 100. If this parameter is not used, <code>ListRepositoryAssociations</code>\
          \ returns up to 100 results and a <code>nextToken</code> value if applicable. "
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: <p>The <code>nextToken</code> value returned from a previous
          paginated <code>ListRepositoryAssociations</code> request where <code>maxResults</code>
          was used and the results exceeded the value of that parameter. Pagination
          continues from the end of the previous results that returned the <code>nextToken</code>
          value. </p> <note> <p>Treat this token as an opaque identifier that is only
          used to retrieve the next items in a list and not for other programmatic
          purposes.</p> </note>
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoryAssociationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Use to associate an Amazon Web Services CodeCommit repository\
        \ or a repository managed by Amazon Web Services CodeStar Connections with\
        \ Amazon CodeGuru Reviewer. When you associate a repository, CodeGuru Reviewer\
        \ reviews source code changes in the repository's pull requests and provides\
        \ automatic recommendations. You can view recommendations using the CodeGuru\
        \ Reviewer console. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/recommendations.html\"\
        >Recommendations in Amazon CodeGuru Reviewer</a> in the <i>Amazon CodeGuru\
        \ Reviewer User Guide.</i> </p> <p>If you associate a CodeCommit or S3 repository,\
        \ it must be in the same Amazon Web Services Region and Amazon Web Services\
        \ account where its CodeGuru Reviewer code reviews are configured.</p> <p>Bitbucket\
        \ and GitHub Enterprise Server repositories are managed by Amazon Web Services\
        \ CodeStar Connections to connect to CodeGuru Reviewer. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/getting-started-associate-repository.html\"\
        >Associate a repository</a> in the <i>Amazon CodeGuru Reviewer User Guide.</i>\
        \ </p> <note> <p>You cannot use the CodeGuru Reviewer SDK or the Amazon Web\
        \ Services CLI to associate a GitHub repository with Amazon CodeGuru Reviewer.\
        \ To associate a GitHub repository, use the console. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/getting-started-with-guru.html\"\
        >Getting started with CodeGuru Reviewer</a> in the <i>CodeGuru Reviewer User\
        \ Guide.</i> </p> </note>"
      operationId: associate_repository
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateRepository_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateRepositoryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /associations/{AssociationArn}:
    delete:
      description: Removes the association between Amazon CodeGuru Reviewer and a
        repository.
      operationId: disassociate_repository
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
          object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>.
        explode: false
        in: path
        name: AssociationArn
        required: true
        schema:
          maxLength: 1600
          minLength: 1
          pattern: "^arn:aws[^:\\s]*:codeguru-reviewer:[^:\\s]+:[\\d]{12}:association:[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateRepositoryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Returns a <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
        object that contains information about the requested repository association.
      operationId: describe_repository_association
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
          object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>.
        explode: false
        in: path
        name: AssociationArn
        required: true
        schema:
          maxLength: 1600
          minLength: 1
          pattern: "^arn:aws[^:\\s]*:codeguru-reviewer:[^:\\s]+:[\\d]{12}:association:[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRepositoryAssociationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /codereviews:
    post:
      description: Use to create a code review with a <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReviewType.html">CodeReviewType</a>
        of <code>RepositoryAnalysis</code>. This type of code review analyzes all
        code under a specified branch in an associated repository. <code>PullRequest</code>
        code reviews are automatically triggered by a pull request.
      operationId: create_code_review
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCodeReview_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCodeReviewResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /codereviews#Type:
    get:
      description: Lists all the code reviews that the customer has created in the
        past 90 days.
      operationId: list_code_reviews
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "List of provider types for filtering that needs to be applied\
          \ before displaying the result. For example, <code>providerTypes=[GitHub]</code>\
          \ lists code reviews from GitHub."
        explode: true
        in: query
        name: ProviderTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ProviderType'
          maxItems: 3
          minItems: 1
          type: array
        style: form
      - description: "<p>List of states for filtering that needs to be applied before\
          \ displaying the result. For example, <code>states=[Pending]</code> lists\
          \ code reviews in the Pending state.</p> <p>The valid code review states\
          \ are:</p> <ul> <li> <p> <code>Completed</code>: The code review is complete.</p>\
          \ </li> <li> <p> <code>Pending</code>: The code review started and has not\
          \ completed or failed.</p> </li> <li> <p> <code>Failed</code>: The code\
          \ review failed.</p> </li> <li> <p> <code>Deleting</code>: The code review\
          \ is being deleted.</p> </li> </ul>"
        explode: true
        in: query
        name: States
        required: false
        schema:
          items:
            $ref: '#/components/schemas/JobState'
          maxItems: 3
          minItems: 1
          type: array
        style: form
      - description: List of repository names for filtering that needs to be applied
          before displaying the result.
        explode: true
        in: query
        name: RepositoryNames
        required: false
        schema:
          items:
            $ref: '#/components/schemas/Name'
          maxItems: 100
          minItems: 1
          type: array
        style: form
      - description: The type of code reviews to list in the response.
        explode: true
        in: query
        name: Type
        required: true
        schema:
          enum:
          - PullRequest
          - RepositoryAnalysis
          type: string
        style: form
      - description: The maximum number of results that are returned per call. The
          default is 100.
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "If <code>nextToken</code> is returned, there are more results\
          \ available. The value of <code>nextToken</code> is a unique pagination\
          \ token for each page. Make the call again using the returned token to retrieve\
          \ the next page. Keep all other arguments unchanged."
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCodeReviewsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /codereviews/{CodeReviewArn}:
    get:
      description: Returns the metadata associated with the code review along with
        its status.
      operationId: describe_code_review
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">CodeReview</a>
          object. '
        explode: false
        in: path
        name: CodeReviewArn
        required: true
        schema:
          maxLength: 1600
          minLength: 1
          pattern: "^arn:aws[^:\\s]*:codeguru-reviewer:[^:\\s]+:[\\d]{12}:[a-z-]+:[\\\
            w-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCodeReviewResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /codereviews/{CodeReviewArn}/Recommendations:
    get:
      description: Returns the list of all recommendations for a completed code review.
      operationId: list_recommendations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: The maximum number of results that are returned per call. The
          default is 100.
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 300
          minimum: 1
          type: integer
        style: form
      - description: 'The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">CodeReview</a>
          object. '
        explode: false
        in: path
        name: CodeReviewArn
        required: true
        schema:
          maxLength: 1600
          minLength: 1
          pattern: "^arn:aws[^:\\s]*:codeguru-reviewer:[^:\\s]+:[\\d]{12}:[a-z-]+:[\\\
            w-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecommendationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /feedback:
    put:
      description: Stores customer feedback for a CodeGuru Reviewer recommendation.
        When this API is called again with different reactions the previous feedback
        is overwritten.
      operationId: put_recommendation_feedback
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRecommendationFeedback_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRecommendationFeedbackResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /feedback/{CodeReviewArn}#RecommendationId:
    get:
      description: Describes the customer feedback for a CodeGuru Reviewer recommendation.
      operationId: describe_recommendation_feedback
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">CodeReview</a>
          object. '
        explode: false
        in: path
        name: CodeReviewArn
        required: true
        schema:
          maxLength: 1600
          minLength: 1
          pattern: "^arn:aws[^:\\s]*:codeguru-reviewer:[^:\\s]+:[\\d]{12}:[a-z-]+:[\\\
            w-]+$"
          type: string
        style: simple
      - description: The recommendation ID that can be used to track the provided
          recommendations and then to collect the feedback.
        explode: true
        in: query
        name: RecommendationId
        required: true
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: form
      - description: "<p>Optional parameter to describe the feedback for a given user.\
          \ If this is not supplied, it defaults to the user making the request.</p>\
          \ <p> The <code>UserId</code> is an IAM principal that can be specified\
          \ as an Amazon Web Services account ID or an Amazon Resource Name (ARN).\
          \ For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#Principal_specifying\"\
          > Specifying a Principal</a> in the <i>Amazon Web Services Identity and\
          \ Access Management User Guide</i>.</p>"
        explode: true
        in: query
        name: UserId
        required: false
        schema:
          maxLength: 256
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRecommendationFeedbackResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /feedback/{CodeReviewArn}/RecommendationFeedback:
    get:
      description: Returns a list of <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RecommendationFeedbackSummary.html">RecommendationFeedbackSummary</a>
        objects that contain customer recommendation feedback for all CodeGuru Reviewer
        users.
      operationId: list_recommendation_feedback
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "If <code>nextToken</code> is returned, there are more results\
          \ available. The value of <code>nextToken</code> is a unique pagination\
          \ token for each page. Make the call again using the returned token to retrieve\
          \ the next page. Keep all other arguments unchanged."
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: The maximum number of results that are returned per call. The
          default is 100.
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: 'The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">CodeReview</a>
          object. '
        explode: false
        in: path
        name: CodeReviewArn
        required: true
        schema:
          maxLength: 1600
          minLength: 1
          pattern: "^arn:aws[^:\\s]*:codeguru-reviewer:[^:\\s]+:[\\d]{12}:[a-z-]+:[\\\
            w-]+$"
          type: string
        style: simple
      - description: "<p>An Amazon Web Services user's account ID or Amazon Resource\
          \ Name (ARN). Use this ID to query the recommendation feedback for a code\
          \ review from that user.</p> <p> The <code>UserId</code> is an IAM principal\
          \ that can be specified as an Amazon Web Services account ID or an Amazon\
          \ Resource Name (ARN). For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#Principal_specifying\"\
          > Specifying a Principal</a> in the <i>Amazon Web Services Identity and\
          \ Access Management User Guide</i>.</p>"
        explode: true
        in: query
        name: UserIds
        required: false
        schema:
          items:
            $ref: '#/components/schemas/UserId'
          maxItems: 100
          minItems: 1
          type: array
        style: form
      - description: Used to query the recommendation feedback for a given recommendation.
        explode: true
        in: query
        name: RecommendationIds
        required: false
        schema:
          items:
            $ref: '#/components/schemas/RecommendationId'
          maxItems: 100
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecommendationFeedbackResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /tags/{resourceArn}:
    get:
      description: Returns the list of tags associated with an associated repository
        resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
          object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 1
          pattern: "^arn:aws[^:\\s]*:codeguru-reviewer:[^:\\s]+:[\\d]{12}:association:[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Adds one or more tags to an associated repository.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
          object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 1
          pattern: "^arn:aws[^:\\s]*:codeguru-reviewer:[^:\\s]+:[\\d]{12}:association:[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Removes a tag from an associated repository.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
          object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1600
          minLength: 1
          pattern: "^arn:aws[^:\\s]*:codeguru-reviewer:[^:\\s]+:[\\d]{12}:association:[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          type: string
        style: simple
      - description: A list of the keys for each tag you want to remove from an associated
          repository.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AssociateRepositoryResponse:
      example:
        RepositoryAssociation:
          AssociationArn: ""
          Owner: ""
          LastUpdatedTimeStamp: ""
          CreatedTimeStamp: ""
          State: ""
          StateReason: ""
          ConnectionArn: ""
          ProviderType: ""
          AssociationId: ""
          Name: ""
          KMSKeyDetails:
            KMSKeyId: ""
            EncryptionOption: ""
          S3RepositoryDetails:
            BucketName: ""
            CodeArtifacts:
              BuildArtifactsObjectKey: ""
              SourceCodeArtifactsObjectKey: ""
        Tags: ""
      properties:
        RepositoryAssociation:
          $ref: '#/components/schemas/AssociateRepositoryResponse_RepositoryAssociation'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>An array of key-value pairs used to tag an associated\
              \ repository. A tag is a custom attribute label with two parts:</p>\
              \ <ul> <li> <p>A <i>tag key</i> (for example, <code>CostCenter</code>,\
              \ <code>Environment</code>, <code>Project</code>, or <code>Secret</code>).\
              \ Tag keys are case sensitive.</p> </li> <li> <p>An optional field known\
              \ as a <i>tag value</i> (for example, <code>111122223333</code>, <code>Production</code>,\
              \ or a team name). Omitting the tag value is the same as using an empty\
              \ string. Like tag keys, tag values are case sensitive.</p> </li> </ul>"
          title: Tags
      title: AssociateRepositoryResponse
      type: object
    CodeCommitRepository:
      description: Information about an Amazon Web Services CodeCommit repository.
        The CodeCommit repository must be in the same Amazon Web Services Region and
        Amazon Web Services account where its CodeGuru Reviewer code reviews are configured.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "The name of the Amazon Web Services CodeCommit repository.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/codecommit/latest/APIReference/API_GetRepository.html#CodeCommit-GetRepository-request-repositoryName\"\
              >repositoryName</a> in the <i>Amazon Web Services CodeCommit API Reference</i>."
          title: Name
      required:
      - Name
      title: CodeCommitRepository
      type: object
    ThirdPartySourceRepository:
      description: Information about a third-party source repository connected to
        CodeGuru Reviewer.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the third party source repository.
          title: Name
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: "The Amazon Resource Name (ARN) of an Amazon Web Services\
              \ CodeStar Connections connection. Its format is <code>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</code>.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/codestar-connections/latest/APIReference/API_Connection.html\"\
              >Connection</a> in the <i>Amazon Web Services CodeStar Connections API\
              \ Reference</i>."
          title: ConnectionArn
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: "The owner of the repository. For a GitHub, GitHub Enterprise,\
              \ or Bitbucket repository, this is the username for the account that\
              \ owns the repository. For an S3 repository, this can be the username\
              \ or Amazon Web Services account ID "
          title: Owner
      required:
      - ConnectionArn
      - Name
      - Owner
      title: ThirdPartySourceRepository
      type: object
    S3Repository:
      description: Information about a repository in an S3 bucket.
      example:
        BucketName: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the repository in the S3 bucket.
          title: Name
        BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: 'The name of the S3 bucket used for associating a new S3
              repository. It must begin with <code>codeguru-reviewer-</code>. '
          title: BucketName
      required:
      - BucketName
      - Name
      title: S3Repository
      type: object
    TagValue:
      maxLength: 256
      title: TagValue
      type: string
    KMSKeyId:
      maxLength: 2048
      minLength: 1
      pattern: "[a-zA-Z0-9-]+"
      type: string
    EncryptionOption:
      enum:
      - AWS_OWNED_CMK
      - CUSTOMER_MANAGED_CMK
      title: EncryptionOption
      type: string
    InternalServerException: {}
    ValidationException: {}
    AccessDeniedException: {}
    ConflictException: {}
    ThrottlingException: {}
    CreateCodeReviewResponse:
      example:
        CodeReview:
          AssociationArn: ""
          Owner: ""
          LastUpdatedTimeStamp: ""
          CreatedTimeStamp: ""
          SourceCodeType:
            CommitDiff:
              DestinationCommit: ""
              SourceCommit: ""
              MergeBaseCommit: ""
            BranchDiff:
              DestinationBranchName: ""
              SourceBranchName: ""
            RepositoryHead:
              BranchName: ""
            S3BucketRepository:
              Details:
                BucketName: ""
                CodeArtifacts:
                  BuildArtifactsObjectKey: ""
                  SourceCodeArtifactsObjectKey: ""
              Name: ""
            RequestMetadata:
              Requester: ""
              VendorName: ""
              RequestId: ""
              EventInfo:
                State: ""
                Name: ""
          RepositoryName: ""
          ConfigFileState: ""
          CodeReviewArn: ""
          PullRequestId: ""
          Name: ""
          Type: ""
          Metrics:
            MeteredLinesOfCodeCount: ""
            SuppressedLinesOfCodeCount: ""
            FindingsCount: ""
          State: ""
          StateReason: ""
          ProviderType: ""
          AnalysisTypes: ""
      properties:
        CodeReview:
          $ref: '#/components/schemas/CodeReview'
      title: CreateCodeReviewResponse
      type: object
    RepositoryAnalysis:
      description: A code review type that analyzes all code under a specified branch
        in an associated repository. The associated repository is specified using
        its ARN when you call <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CreateCodeReview">CreateCodeReview</a>.
      properties:
        RepositoryHead:
          $ref: '#/components/schemas/RepositoryAnalysis_RepositoryHead'
        SourceCodeType:
          $ref: '#/components/schemas/SourceCodeType'
      title: RepositoryAnalysis
      type: object
    AnalysisTypes:
      items:
        $ref: '#/components/schemas/AnalysisType'
      type: array
    ResourceNotFoundException: {}
    DescribeCodeReviewResponse:
      example:
        CodeReview:
          AssociationArn: ""
          Owner: ""
          LastUpdatedTimeStamp: ""
          CreatedTimeStamp: ""
          SourceCodeType:
            CommitDiff:
              DestinationCommit: ""
              SourceCommit: ""
              MergeBaseCommit: ""
            BranchDiff:
              DestinationBranchName: ""
              SourceBranchName: ""
            RepositoryHead:
              BranchName: ""
            S3BucketRepository:
              Details:
                BucketName: ""
                CodeArtifacts:
                  BuildArtifactsObjectKey: ""
                  SourceCodeArtifactsObjectKey: ""
              Name: ""
            RequestMetadata:
              Requester: ""
              VendorName: ""
              RequestId: ""
              EventInfo:
                State: ""
                Name: ""
          RepositoryName: ""
          ConfigFileState: ""
          CodeReviewArn: ""
          PullRequestId: ""
          Name: ""
          Type: ""
          Metrics:
            MeteredLinesOfCodeCount: ""
            SuppressedLinesOfCodeCount: ""
            FindingsCount: ""
          State: ""
          StateReason: ""
          ProviderType: ""
          AnalysisTypes: ""
      properties:
        CodeReview:
          $ref: '#/components/schemas/DescribeCodeReviewResponse_CodeReview'
      title: DescribeCodeReviewResponse
      type: object
    DescribeRecommendationFeedbackResponse:
      example:
        RecommendationFeedback:
          LastUpdatedTimeStamp: ""
          CreatedTimeStamp: ""
          UserId: ""
          RecommendationId: ""
          Reactions: ""
          CodeReviewArn: ""
      properties:
        RecommendationFeedback:
          $ref: '#/components/schemas/DescribeRecommendationFeedbackResponse_RecommendationFeedback'
      title: DescribeRecommendationFeedbackResponse
      type: object
    DescribeRepositoryAssociationResponse:
      example:
        RepositoryAssociation:
          AssociationArn: ""
          Owner: ""
          LastUpdatedTimeStamp: ""
          CreatedTimeStamp: ""
          State: ""
          StateReason: ""
          ConnectionArn: ""
          ProviderType: ""
          AssociationId: ""
          Name: ""
          KMSKeyDetails:
            KMSKeyId: ""
            EncryptionOption: ""
          S3RepositoryDetails:
            BucketName: ""
            CodeArtifacts:
              BuildArtifactsObjectKey: ""
              SourceCodeArtifactsObjectKey: ""
        Tags: ""
      properties:
        RepositoryAssociation:
          $ref: '#/components/schemas/AssociateRepositoryResponse_RepositoryAssociation'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>An array of key-value pairs used to tag an associated\
              \ repository. A tag is a custom attribute label with two parts:</p>\
              \ <ul> <li> <p>A <i>tag key</i> (for example, <code>CostCenter</code>,\
              \ <code>Environment</code>, <code>Project</code>, or <code>Secret</code>).\
              \ Tag keys are case sensitive.</p> </li> <li> <p>An optional field known\
              \ as a <i>tag value</i> (for example, <code>111122223333</code>, <code>Production</code>,\
              \ or a team name). Omitting the tag value is the same as using an empty\
              \ string. Like tag keys, tag values are case sensitive.</p> </li> </ul>"
          title: Tags
      title: DescribeRepositoryAssociationResponse
      type: object
    NotFoundException: {}
    DisassociateRepositoryResponse:
      example:
        RepositoryAssociation:
          AssociationArn: ""
          Owner: ""
          LastUpdatedTimeStamp: ""
          CreatedTimeStamp: ""
          State: ""
          StateReason: ""
          ConnectionArn: ""
          ProviderType: ""
          AssociationId: ""
          Name: ""
          KMSKeyDetails:
            KMSKeyId: ""
            EncryptionOption: ""
          S3RepositoryDetails:
            BucketName: ""
            CodeArtifacts:
              BuildArtifactsObjectKey: ""
              SourceCodeArtifactsObjectKey: ""
        Tags: ""
      properties:
        RepositoryAssociation:
          $ref: '#/components/schemas/DisassociateRepositoryResponse_RepositoryAssociation'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>An array of key-value pairs used to tag an associated\
              \ repository. A tag is a custom attribute label with two parts:</p>\
              \ <ul> <li> <p>A <i>tag key</i> (for example, <code>CostCenter</code>,\
              \ <code>Environment</code>, <code>Project</code>, or <code>Secret</code>).\
              \ Tag keys are case sensitive.</p> </li> <li> <p>An optional field known\
              \ as a <i>tag value</i> (for example, <code>111122223333</code>, <code>Production</code>,\
              \ or a team name). Omitting the tag value is the same as using an empty\
              \ string. Like tag keys, tag values are case sensitive.</p> </li> </ul>"
          title: Tags
      title: DisassociateRepositoryResponse
      type: object
    ListCodeReviewsResponse:
      example:
        NextToken: ""
        CodeReviewSummaries: ""
      properties:
        CodeReviewSummaries:
          allOf:
          - $ref: '#/components/schemas/CodeReviewSummaries'
          - description: A list of code reviews that meet the criteria of the request.
          title: CodeReviewSummaries
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: Pagination token.
          title: NextToken
      title: ListCodeReviewsResponse
      type: object
    ProviderType:
      enum:
      - CodeCommit
      - GitHub
      - Bitbucket
      - GitHubEnterpriseServer
      - S3Bucket
      title: ProviderType
      type: string
    JobState:
      enum:
      - Completed
      - Pending
      - Failed
      - Deleting
      title: JobState
      type: string
    Name:
      maxLength: 100
      minLength: 1
      pattern: "^\\S[\\w.-]*$"
      title: Name
      type: string
    ListRecommendationFeedbackResponse:
      example:
        RecommendationFeedbackSummaries: ""
        NextToken: ""
      properties:
        RecommendationFeedbackSummaries:
          allOf:
          - $ref: '#/components/schemas/RecommendationFeedbackSummaries'
          - description: Recommendation feedback summaries corresponding to the code
              review ARN.
          title: RecommendationFeedbackSummaries
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If <code>nextToken</code> is returned, there are more results\
              \ available. The value of <code>nextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged."
          title: NextToken
      title: ListRecommendationFeedbackResponse
      type: object
    UserId:
      maxLength: 256
      minLength: 1
      title: UserId
      type: string
    RecommendationId:
      maxLength: 64
      minLength: 1
      title: RecommendationId
      type: string
    ListRecommendationsResponse:
      example:
        NextToken: ""
        RecommendationSummaries: ""
      properties:
        RecommendationSummaries:
          allOf:
          - $ref: '#/components/schemas/RecommendationSummaries'
          - description: List of recommendations for the requested code review.
          title: RecommendationSummaries
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: Pagination token.
          title: NextToken
      title: ListRecommendationsResponse
      type: object
    ListRepositoryAssociationsResponse:
      example:
        RepositoryAssociationSummaries: ""
        NextToken: ""
      properties:
        RepositoryAssociationSummaries:
          allOf:
          - $ref: '#/components/schemas/RepositoryAssociationSummaries'
          - description: A list of repository associations that meet the criteria
              of the request.
          title: RepositoryAssociationSummaries
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The <code>nextToken</code> value to include in a future\
              \ <code>ListRecommendations</code> request. When the results of a <code>ListRecommendations</code>\
              \ request exceed <code>maxResults</code>, this value can be used to\
              \ retrieve the next page of results. This value is <code>null</code>\
              \ when there are no more results to return. "
          title: NextToken
      title: ListRepositoryAssociationsResponse
      type: object
    RepositoryAssociationState:
      enum:
      - Associated
      - Associating
      - Failed
      - Disassociating
      - Disassociated
      title: RepositoryAssociationState
      type: string
    Owner:
      maxLength: 100
      minLength: 1
      pattern: ^\S(.*\S)?$
      title: Owner
      type: string
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>An array of key-value pairs used to tag an associated\
              \ repository. A tag is a custom attribute label with two parts:</p>\
              \ <ul> <li> <p>A <i>tag key</i> (for example, <code>CostCenter</code>,\
              \ <code>Environment</code>, <code>Project</code>, or <code>Secret</code>).\
              \ Tag keys are case sensitive.</p> </li> <li> <p>An optional field known\
              \ as a <i>tag value</i> (for example, <code>111122223333</code>, <code>Production</code>,\
              \ or a team name). Omitting the tag value is the same as using an empty\
              \ string. Like tag keys, tag values are case sensitive.</p> </li> </ul>"
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    PutRecommendationFeedbackResponse:
      properties: {}
      type: object
    Reaction:
      enum:
      - ThumbsUp
      - ThumbsDown
      title: Reaction
      type: string
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      title: TagKey
      type: string
    AnalysisType:
      enum:
      - Security
      - CodeQuality
      title: AnalysisType
      type: string
    Arn:
      maxLength: 1600
      minLength: 1
      pattern: "^arn:aws[^:\\s]*:codeguru-reviewer:[^:\\s]+:[\\d]{12}:[a-z-]+:[\\\
        w-]+$"
      type: string
    Repository:
      description: "Information about an associated Amazon Web Services CodeCommit\
        \ repository or an associated repository that is managed by Amazon Web Services\
        \ CodeStar Connections (for example, Bitbucket). This <code>Repository</code>\
        \ object is not used if your source code is in an associated GitHub repository."
      properties:
        CodeCommit:
          $ref: '#/components/schemas/AssociateRepository_request_Repository_CodeCommit'
        Bitbucket:
          $ref: '#/components/schemas/AssociateRepository_request_Repository_Bitbucket'
        GitHubEnterpriseServer:
          $ref: '#/components/schemas/AssociateRepository_request_Repository_GitHubEnterpriseServer'
        S3Bucket:
          $ref: '#/components/schemas/S3Repository'
      title: Repository
      type: object
    ClientRequestToken:
      maxLength: 64
      minLength: 1
      pattern: "^[\\w-]+$"
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 1
      type: object
    KMSKeyDetails:
      description: <p>An object that contains:</p> <ul> <li> <p>The encryption option
        for a repository association. It is either owned by Amazon Web Services Key
        Management Service (KMS) (<code>AWS_OWNED_CMK</code>) or customer managed
        (<code>CUSTOMER_MANAGED_CMK</code>).</p> </li> <li> <p>The ID of the Amazon
        Web Services KMS key that is associated with a repository association.</p>
        </li> </ul>
      properties:
        KMSKeyId:
          allOf:
          - $ref: '#/components/schemas/KMSKeyId'
          - description: The ID of the Amazon Web Services KMS key that is associated
              with a repository association.
          title: KMSKeyId
        EncryptionOption:
          allOf:
          - $ref: '#/components/schemas/EncryptionOption'
          - description: The encryption option for a repository association. It is
              either owned by Amazon Web Services Key Management Service (KMS) (<code>AWS_OWNED_CMK</code>)
              or customer managed (<code>CUSTOMER_MANAGED_CMK</code>).
          title: EncryptionOption
      title: KMSKeyDetails
      type: object
    AssociateRepositoryRequest:
      example:
        ClientRequestToken: ""
        Repository:
          GitHubEnterpriseServer:
            Owner: ""
            ConnectionArn: ""
            Name: ""
          S3Bucket:
            BucketName: ""
            Name: ""
          CodeCommit:
            Name: ""
          Bitbucket:
            Owner: ""
            ConnectionArn: ""
            Name: ""
        Tags: ""
        KMSKeyDetails:
          KMSKeyId: ""
          EncryptionOption: ""
      properties:
        Repository:
          $ref: '#/components/schemas/AssociateRepositoryRequest_Repository'
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: Amazon CodeGuru Reviewer uses this value to prevent the accidental
              creation of duplicate repository associations if there are failures
              and retries.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>An array of key-value pairs used to tag an associated\
              \ repository. A tag is a custom attribute label with two parts:</p>\
              \ <ul> <li> <p>A <i>tag key</i> (for example, <code>CostCenter</code>,\
              \ <code>Environment</code>, <code>Project</code>, or <code>Secret</code>).\
              \ Tag keys are case sensitive.</p> </li> <li> <p>An optional field known\
              \ as a <i>tag value</i> (for example, <code>111122223333</code>, <code>Production</code>,\
              \ or a team name). Omitting the tag value is the same as using an empty\
              \ string. Like tag keys, tag values are case sensitive.</p> </li> </ul>"
        KMSKeyDetails:
          $ref: '#/components/schemas/AssociateRepositoryRequest_KMSKeyDetails'
      required:
      - Repository
      title: AssociateRepositoryRequest
      type: object
    RepositoryAssociation:
      description: Information about a repository association. The <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_DescribeRepositoryAssociation.html">DescribeRepositoryAssociation</a>
        operation returns a <code>RepositoryAssociation</code> object.
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          - description: The ID of the repository association.
          title: AssociationId
        AssociationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) identifying the repository
              association.
          title: AssociationArn
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: "The Amazon Resource Name (ARN) of an Amazon Web Services\
              \ CodeStar Connections connection. Its format is <code>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</code>.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/codestar-connections/latest/APIReference/API_Connection.html\"\
              >Connection</a> in the <i>Amazon Web Services CodeStar Connections API\
              \ Reference</i>."
          title: ConnectionArn
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the repository.
          title: Name
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: "The owner of the repository. For an Amazon Web Services\
              \ CodeCommit repository, this is the Amazon Web Services account ID\
              \ of the account that owns the repository. For a GitHub, GitHub Enterprise\
              \ Server, or Bitbucket repository, this is the username for the account\
              \ that owns the repository. For an S3 repository, it can be the username\
              \ or Amazon Web Services account ID."
          title: Owner
        ProviderType:
          allOf:
          - $ref: '#/components/schemas/ProviderType'
          - description: The provider type of the repository association.
          title: ProviderType
        State:
          allOf:
          - $ref: '#/components/schemas/RepositoryAssociationState'
          - description: "<p>The state of the repository association.</p> <p>The valid\
              \ repository association states are:</p> <ul> <li> <p> <b>Associated</b>:\
              \ The repository association is complete.</p> </li> <li> <p> <b>Associating</b>:\
              \ CodeGuru Reviewer is:</p> <ul> <li> <p>Setting up pull request notifications.\
              \ This is required for pull requests to trigger a CodeGuru Reviewer\
              \ review.</p> <note> <p>If your repository <code>ProviderType</code>\
              \ is <code>GitHub</code>, <code>GitHub Enterprise Server</code>, or\
              \ <code>Bitbucket</code>, CodeGuru Reviewer creates webhooks in your\
              \ repository to trigger CodeGuru Reviewer reviews. If you delete these\
              \ webhooks, reviews of code in your repository cannot be triggered.</p>\
              \ </note> </li> <li> <p>Setting up source code access. This is required\
              \ for CodeGuru Reviewer to securely clone code in your repository.</p>\
              \ </li> </ul> </li> <li> <p> <b>Failed</b>: The repository failed to\
              \ associate or disassociate.</p> </li> <li> <p> <b>Disassociating</b>:\
              \ CodeGuru Reviewer is removing the repository's pull request notifications\
              \ and source code access.</p> </li> <li> <p> <b>Disassociated</b>: CodeGuru\
              \ Reviewer successfully disassociated the repository. You can create\
              \ a new association with this repository if you want to review source\
              \ code in it later. You can control access to code reviews created in\
              \ anassociated repository with tags after it has been disassociated.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/auth-and-access-control-using-tags.html\"\
              >Using tags to control access to associated repositories</a> in the\
              \ <i>Amazon CodeGuru Reviewer User Guide</i>.</p> </li> </ul>"
          title: State
        StateReason:
          allOf:
          - $ref: '#/components/schemas/StateReason'
          - description: A description of why the repository association is in the
              current state.
          title: StateReason
        LastUpdatedTimeStamp:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: "The time, in milliseconds since the epoch, when the repository\
              \ association was last updated."
          title: LastUpdatedTimeStamp
        CreatedTimeStamp:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: "The time, in milliseconds since the epoch, when the repository\
              \ association was created."
          title: CreatedTimeStamp
        KMSKeyDetails:
          $ref: '#/components/schemas/AssociateRepositoryRequest_KMSKeyDetails'
        S3RepositoryDetails:
          $ref: '#/components/schemas/S3RepositoryDetails'
      title: RepositoryAssociation
      type: object
    AssociationArn:
      maxLength: 1600
      minLength: 1
      pattern: "^arn:aws[^:\\s]*:codeguru-reviewer:[^:\\s]+:[\\d]{12}:association:[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
      type: string
    AssociationId:
      maxLength: 64
      minLength: 1
      type: string
    BranchName:
      maxLength: 256
      minLength: 1
      type: string
    BranchDiffSourceCodeType:
      description: A type of <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType">SourceCodeType</a>
        that specifies a code diff between a source and destination branch in an associated
        repository.
      properties:
        SourceBranchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          - description: The source branch for a diff in an associated repository.
          title: SourceBranchName
        DestinationBranchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          - description: The destination branch for a diff in an associated repository.
          title: DestinationBranchName
      required:
      - DestinationBranchName
      - SourceBranchName
      title: BranchDiffSourceCodeType
      type: object
    BuildArtifactsObjectKey:
      maxLength: 1024
      minLength: 1
      pattern: ^\S(.*\S)?$
      type: string
    SourceCodeArtifactsObjectKey:
      maxLength: 1024
      minLength: 1
      pattern: ^\S(.*\S)?$
      type: string
    CodeArtifacts:
      description: <p>Code artifacts are source code artifacts and build artifacts
        used in a repository analysis or a pull request review.</p> <ul> <li> <p>Source
        code artifacts are source code files in a Git repository that are compressed
        into a .zip file.</p> </li> <li> <p>Build artifacts are .jar or .class files
        that are compressed in a .zip file.</p> </li> </ul>
      properties:
        SourceCodeArtifactsObjectKey:
          allOf:
          - $ref: '#/components/schemas/SourceCodeArtifactsObjectKey'
          - description: The S3 object key for a source code .zip file. This is required
              for all code reviews.
          title: SourceCodeArtifactsObjectKey
        BuildArtifactsObjectKey:
          allOf:
          - $ref: '#/components/schemas/BuildArtifactsObjectKey'
          - description: "The S3 object key for a build artifacts .zip file that contains\
              \ .jar or .class files. This is required for a code review with security\
              \ analysis. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/working-with-cicd.html\"\
              >Create code reviews with GitHub Actions</a> in the <i>Amazon CodeGuru\
              \ Reviewer User Guide</i>."
          title: BuildArtifactsObjectKey
      required:
      - SourceCodeArtifactsObjectKey
      title: CodeArtifacts
      type: object
    StateReason:
      maxLength: 256
      minLength: 0
      type: string
    TimeStamp:
      format: date-time
      type: string
    Type:
      enum:
      - PullRequest
      - RepositoryAnalysis
      title: Type
      type: string
    PullRequestId:
      maxLength: 64
      minLength: 1
      type: string
    SourceCodeType:
      description: Specifies the source code that is analyzed in a code review.
      example:
        CommitDiff:
          DestinationCommit: ""
          SourceCommit: ""
          MergeBaseCommit: ""
        BranchDiff:
          DestinationBranchName: ""
          SourceBranchName: ""
        RepositoryHead:
          BranchName: ""
        S3BucketRepository:
          Details:
            BucketName: ""
            CodeArtifacts:
              BuildArtifactsObjectKey: ""
              SourceCodeArtifactsObjectKey: ""
          Name: ""
        RequestMetadata:
          Requester: ""
          VendorName: ""
          RequestId: ""
          EventInfo:
            State: ""
            Name: ""
      properties:
        CommitDiff:
          $ref: '#/components/schemas/SourceCodeType_CommitDiff'
        RepositoryHead:
          $ref: '#/components/schemas/RepositoryHeadSourceCodeType'
        BranchDiff:
          $ref: '#/components/schemas/SourceCodeType_BranchDiff'
        S3BucketRepository:
          $ref: '#/components/schemas/SourceCodeType_S3BucketRepository'
        RequestMetadata:
          $ref: '#/components/schemas/SourceCodeType_RequestMetadata'
      title: SourceCodeType
      type: object
    Metrics:
      description: Information about the statistics from the code review.
      properties:
        MeteredLinesOfCodeCount:
          allOf:
          - $ref: '#/components/schemas/LinesOfCodeCount'
          - description: ' <code>MeteredLinesOfCodeCount</code> is the number of lines
              of code in the repository where the code review happened. This does
              not include non-code lines such as comments and blank lines.'
          title: MeteredLinesOfCodeCount
        SuppressedLinesOfCodeCount:
          allOf:
          - $ref: '#/components/schemas/LinesOfCodeCount'
          - description: ' <code>SuppressedLinesOfCodeCount</code> is the number of
              lines of code in the repository where the code review happened that
              CodeGuru Reviewer did not analyze. The lines suppressed in the analysis
              is based on the <code>excludeFiles</code> variable in the <code>aws-codeguru-reviewer.yml</code>
              file. This number does not include non-code lines such as comments and
              blank lines. '
          title: SuppressedLinesOfCodeCount
        FindingsCount:
          allOf:
          - $ref: '#/components/schemas/FindingsCount'
          - description: Total number of recommendations found in the code review.
          title: FindingsCount
      title: Metrics
      type: object
    ConfigFileState:
      enum:
      - Present
      - Absent
      - PresentWithErrors
      title: ConfigFileState
      type: string
    CodeReview:
      description: Information about a code review. A code review belongs to the associated
        repository that contains the reviewed code.
      example:
        AssociationArn: ""
        Owner: ""
        LastUpdatedTimeStamp: ""
        CreatedTimeStamp: ""
        SourceCodeType:
          CommitDiff:
            DestinationCommit: ""
            SourceCommit: ""
            MergeBaseCommit: ""
          BranchDiff:
            DestinationBranchName: ""
            SourceBranchName: ""
          RepositoryHead:
            BranchName: ""
          S3BucketRepository:
            Details:
              BucketName: ""
              CodeArtifacts:
                BuildArtifactsObjectKey: ""
                SourceCodeArtifactsObjectKey: ""
            Name: ""
          RequestMetadata:
            Requester: ""
            VendorName: ""
            RequestId: ""
            EventInfo:
              State: ""
              Name: ""
        RepositoryName: ""
        ConfigFileState: ""
        CodeReviewArn: ""
        PullRequestId: ""
        Name: ""
        Type: ""
        Metrics:
          MeteredLinesOfCodeCount: ""
          SuppressedLinesOfCodeCount: ""
          FindingsCount: ""
        State: ""
        StateReason: ""
        ProviderType: ""
        AnalysisTypes: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the code review.
          title: Name
        CodeReviewArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">CodeReview</a>
              object. '
          title: CodeReviewArn
        RepositoryName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the repository.
          title: RepositoryName
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: "The owner of the repository. For an Amazon Web Services\
              \ CodeCommit repository, this is the Amazon Web Services account ID\
              \ of the account that owns the repository. For a GitHub, GitHub Enterprise\
              \ Server, or Bitbucket repository, this is the username for the account\
              \ that owns the repository. For an S3 repository, it can be the username\
              \ or Amazon Web Services account ID."
          title: Owner
        ProviderType:
          allOf:
          - $ref: '#/components/schemas/ProviderType'
          - description: "The type of repository that contains the reviewed code (for\
              \ example, GitHub or Bitbucket)."
          title: ProviderType
        State:
          allOf:
          - $ref: '#/components/schemas/JobState'
          - description: "<p>The valid code review states are:</p> <ul> <li> <p> <code>Completed</code>:\
              \ The code review is complete.</p> </li> <li> <p> <code>Pending</code>:\
              \ The code review started and has not completed or failed.</p> </li>\
              \ <li> <p> <code>Failed</code>: The code review failed.</p> </li> <li>\
              \ <p> <code>Deleting</code>: The code review is being deleted.</p> </li>\
              \ </ul>"
          title: State
        StateReason:
          allOf:
          - $ref: '#/components/schemas/StateReason'
          - description: The reason for the state of the code review.
          title: StateReason
        CreatedTimeStamp:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: "The time, in milliseconds since the epoch, when the code\
              \ review was created."
          title: CreatedTimeStamp
        LastUpdatedTimeStamp:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: "The time, in milliseconds since the epoch, when the code\
              \ review was last updated."
          title: LastUpdatedTimeStamp
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - description: The type of code review.
          title: Type
        PullRequestId:
          allOf:
          - $ref: '#/components/schemas/PullRequestId'
          - description: The pull request ID for the code review.
          title: PullRequestId
        SourceCodeType:
          $ref: '#/components/schemas/CodeReview_SourceCodeType'
        AssociationArn:
          allOf:
          - $ref: '#/components/schemas/AssociationArn'
          - description: The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
              that contains the reviewed source code. You can retrieve associated
              repository ARNs by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>.
          title: AssociationArn
        Metrics:
          $ref: '#/components/schemas/CodeReview_Metrics'
        AnalysisTypes:
          allOf:
          - $ref: '#/components/schemas/AnalysisTypes'
          - description: "The types of analysis performed during a repository analysis\
              \ or a pull request review. You can specify either <code>Security</code>,\
              \ <code>CodeQuality</code>, or both."
          title: AnalysisTypes
        ConfigFileState:
          allOf:
          - $ref: '#/components/schemas/ConfigFileState'
          - description: "The state of the <code>aws-codeguru-reviewer.yml</code>\
              \ configuration file that allows the configuration of the CodeGuru Reviewer\
              \ analysis. The file either exists, doesn't exist, or exists with errors\
              \ at the root directory of your repository."
          title: ConfigFileState
      title: CodeReview
      type: object
    CodeReviewName:
      maxLength: 100
      minLength: 1
      pattern: "[a-zA-Z0-9-_]*"
      type: string
    CodeReviewSummary:
      description: Information about the summary of the code review.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the code review.
          title: Name
        CodeReviewArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">CodeReview</a>
              object. '
          title: CodeReviewArn
        RepositoryName:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the repository.
          title: RepositoryName
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: "The owner of the repository. For an Amazon Web Services\
              \ CodeCommit repository, this is the Amazon Web Services account ID\
              \ of the account that owns the repository. For a GitHub, GitHub Enterprise\
              \ Server, or Bitbucket repository, this is the username for the account\
              \ that owns the repository. For an S3 repository, it can be the username\
              \ or Amazon Web Services account ID."
          title: Owner
        ProviderType:
          allOf:
          - $ref: '#/components/schemas/ProviderType'
          - description: The provider type of the repository association.
          title: ProviderType
        State:
          allOf:
          - $ref: '#/components/schemas/JobState'
          - description: "<p>The state of the code review.</p> <p>The valid code review\
              \ states are:</p> <ul> <li> <p> <code>Completed</code>: The code review\
              \ is complete.</p> </li> <li> <p> <code>Pending</code>: The code review\
              \ started and has not completed or failed.</p> </li> <li> <p> <code>Failed</code>:\
              \ The code review failed.</p> </li> <li> <p> <code>Deleting</code>:\
              \ The code review is being deleted.</p> </li> </ul>"
          title: State
        CreatedTimeStamp:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: "The time, in milliseconds since the epoch, when the code\
              \ review was created."
          title: CreatedTimeStamp
        LastUpdatedTimeStamp:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: "The time, in milliseconds since the epoch, when the code\
              \ review was last updated."
          title: LastUpdatedTimeStamp
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - description: The type of the code review.
          title: Type
        PullRequestId:
          allOf:
          - $ref: '#/components/schemas/PullRequestId'
          - description: The pull request ID for the code review.
          title: PullRequestId
        MetricsSummary:
          $ref: '#/components/schemas/CodeReviewSummary_MetricsSummary'
        SourceCodeType:
          $ref: '#/components/schemas/SourceCodeType'
      title: CodeReviewSummary
      type: object
    CodeReviewSummaries:
      items:
        $ref: '#/components/schemas/CodeReviewSummary'
      type: array
    MetricsSummary:
      description: Information about metrics summaries.
      properties:
        MeteredLinesOfCodeCount:
          allOf:
          - $ref: '#/components/schemas/LinesOfCodeCount'
          - description: "Lines of code metered in the code review. For the initial\
              \ code review pull request and all subsequent revisions, this includes\
              \ all lines of code in the files added to the pull request. In subsequent\
              \ revisions, for files that already existed in the pull request, this\
              \ includes only the changed lines of code. In both cases, this does\
              \ not include non-code lines such as comments and import statements.\
              \ For example, if you submit a pull request containing 5 files, each\
              \ with 500 lines of code, and in a subsequent revision you added a new\
              \ file with 200 lines of code, and also modified a total of 25 lines\
              \ across the initial 5 files, <code>MeteredLinesOfCodeCount</code> includes\
              \ the first 5 files (5 * 500 = 2,500 lines), the new file (200 lines)\
              \ and the 25 changed lines of code for a total of 2,725 lines of code."
          title: MeteredLinesOfCodeCount
        SuppressedLinesOfCodeCount:
          allOf:
          - $ref: '#/components/schemas/LinesOfCodeCount'
          - description: "Lines of code suppressed in the code review based on the\
              \ <code>excludeFiles</code> element in the <code>aws-codeguru-reviewer.yml</code>\
              \ file. For full repository analyses, this number includes all lines\
              \ of code in the files that are suppressed. For pull requests, this\
              \ number only includes the <i>changed</i> lines of code that are suppressed.\
              \ In both cases, this number does not include non-code lines such as\
              \ comments and import statements. For example, if you initiate a full\
              \ repository analysis on a repository containing 5 files, each file\
              \ with 100 lines of code, and 2 files are listed as excluded in the\
              \ <code>aws-codeguru-reviewer.yml</code> file, then <code>SuppressedLinesOfCodeCount</code>\
              \ returns 200 (2 * 100) as the total number of lines of code suppressed.\
              \ However, if you submit a pull request for the same repository, then\
              \ <code>SuppressedLinesOfCodeCount</code> only includes the lines in\
              \ the 2 files that changed. If only 1 of the 2 files changed in the\
              \ pull request, then <code>SuppressedLinesOfCodeCount</code> returns\
              \ 100 (1 * 100) as the total number of lines of code suppressed."
          title: SuppressedLinesOfCodeCount
        FindingsCount:
          allOf:
          - $ref: '#/components/schemas/FindingsCount'
          - description: Total number of recommendations found in the code review.
          title: FindingsCount
      title: MetricsSummary
      type: object
    CodeReviewType:
      description: <p>The type of a code review. There are two code review types:</p>
        <ul> <li> <p> <code>PullRequest</code> - A code review that is automatically
        triggered by a pull request on an associated repository.</p> </li> <li> <p>
        <code>RepositoryAnalysis</code> - A code review that analyzes all code under
        a specified branch in an associated repository. The associated repository
        is specified using its ARN in <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CreateCodeReview">CreateCodeReview</a>.</p>
        </li> </ul>
      properties:
        RepositoryAnalysis:
          $ref: '#/components/schemas/CreateCodeReview_request_Type_RepositoryAnalysis'
        AnalysisTypes:
          allOf:
          - $ref: '#/components/schemas/AnalysisTypes'
          - description: "They types of analysis performed during a repository analysis\
              \ or a pull request review. You can specify either <code>Security</code>,\
              \ <code>CodeQuality</code>, or both."
          title: AnalysisTypes
      required:
      - RepositoryAnalysis
      title: CodeReviewType
      type: object
    CommitId:
      maxLength: 64
      minLength: 6
      type: string
    CommitDiffSourceCodeType:
      description: A type of <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType">SourceCodeType</a>
        that specifies the commit diff for a pull request on an associated repository.
        The <code>SourceCommit</code> and <code>DestinationCommit</code> fields are
        required to do a pull request code review.
      properties:
        SourceCommit:
          allOf:
          - $ref: '#/components/schemas/CommitId'
          - description: The SHA of the source commit used to generate a commit diff.
              This field is required for a pull request code review.
          title: SourceCommit
        DestinationCommit:
          allOf:
          - $ref: '#/components/schemas/CommitId'
          - description: The SHA of the destination commit used to generate a commit
              diff. This field is required for a pull request code review.
          title: DestinationCommit
        MergeBaseCommit:
          allOf:
          - $ref: '#/components/schemas/CommitId'
          - description: The SHA of the merge base of a commit.
          title: MergeBaseCommit
      title: CommitDiffSourceCodeType
      type: object
    ConnectionArn:
      maxLength: 256
      minLength: 0
      pattern: "arn:aws(-[\\w]+)*:.+:.+:[0-9]{12}:.+"
      type: string
    CreateCodeReviewRequest:
      example:
        ClientRequestToken: ""
        Type:
          RepositoryAnalysis:
            RepositoryHead:
              BranchName: ""
            SourceCodeType:
              CommitDiff:
                DestinationCommit: ""
                SourceCommit: ""
                MergeBaseCommit: ""
              BranchDiff:
                DestinationBranchName: ""
                SourceBranchName: ""
              RepositoryHead:
                BranchName: ""
              S3BucketRepository:
                Details:
                  BucketName: ""
                  CodeArtifacts:
                    BuildArtifactsObjectKey: ""
                    SourceCodeArtifactsObjectKey: ""
                Name: ""
              RequestMetadata:
                Requester: ""
                VendorName: ""
                RequestId: ""
                EventInfo:
                  State: ""
                  Name: ""
          AnalysisTypes: ""
        RepositoryAssociationArn: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CodeReviewName'
          - description: The name of the code review. The name of each code review
              in your Amazon Web Services account must be unique.
        RepositoryAssociationArn:
          allOf:
          - $ref: '#/components/schemas/AssociationArn'
          - description: <p>The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
              object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>.</p>
              <p>A code review can only be created on an associated repository. This
              is the ARN of the associated repository.</p>
        Type:
          $ref: '#/components/schemas/CreateCodeReviewRequest_Type'
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: Amazon CodeGuru Reviewer uses this value to prevent the accidental
              creation of duplicate code reviews if there are failures and retries.
      required:
      - Name
      - RepositoryAssociationArn
      - Type
      title: CreateCodeReviewRequest
      type: object
    DescribeCodeReviewRequest:
      properties: {}
      title: DescribeCodeReviewRequest
      type: object
    DescribeRecommendationFeedbackRequest:
      properties: {}
      title: DescribeRecommendationFeedbackRequest
      type: object
    RecommendationFeedback:
      description: Information about the recommendation feedback.
      properties:
        CodeReviewArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">CodeReview</a>
              object. '
          title: CodeReviewArn
        RecommendationId:
          allOf:
          - $ref: '#/components/schemas/RecommendationId'
          - description: The recommendation ID that can be used to track the provided
              recommendations. Later on it can be used to collect the feedback.
          title: RecommendationId
        Reactions:
          allOf:
          - $ref: '#/components/schemas/Reactions'
          - description: List for storing reactions. Reactions are utf-8 text code
              for emojis. You can send an empty list to clear off all your feedback.
          title: Reactions
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: "<p>The ID of the user that made the API call.</p> <p> The\
              \ <code>UserId</code> is an IAM principal that can be specified as an\
              \ Amazon Web Services account ID or an Amazon Resource Name (ARN). For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#Principal_specifying\"\
              > Specifying a Principal</a> in the <i>Amazon Web Services Identity\
              \ and Access Management User Guide</i>.</p>"
          title: UserId
        CreatedTimeStamp:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: The time at which the feedback was created.
          title: CreatedTimeStamp
        LastUpdatedTimeStamp:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: The time at which the feedback was last updated.
          title: LastUpdatedTimeStamp
      title: RecommendationFeedback
      type: object
    DescribeRepositoryAssociationRequest:
      properties: {}
      title: DescribeRepositoryAssociationRequest
      type: object
    DisassociateRepositoryRequest:
      properties: {}
      title: DisassociateRepositoryRequest
      type: object
    EventName:
      maxLength: 32
      minLength: 1
      pattern: "^[ \\-A-Z_a-z]+$"
      type: string
    EventState:
      maxLength: 32
      minLength: 1
      pattern: "^[ \\-A-Z_a-z]+$"
      type: string
    EventInfo:
      description: "Information about an event. The event might be a push, pull request,\
        \ scheduled request, or another type of event."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventName'
          - description: "The name of the event. The possible names are <code>pull_request</code>,\
              \ <code>workflow_dispatch</code>, <code>schedule</code>, and <code>push</code> "
          title: Name
        State:
          allOf:
          - $ref: '#/components/schemas/EventState'
          - description: "The state of an event. The state might be open, closed,\
              \ or another state."
          title: State
      title: EventInfo
      type: object
    FilePath:
      maxLength: 1024
      minLength: 1
      type: string
    FindingsCount:
      type: integer
    JobStates:
      items:
        $ref: '#/components/schemas/JobState'
      maxItems: 3
      minItems: 1
      type: array
    LineNumber:
      type: integer
    LinesOfCodeCount:
      type: integer
    ListCodeReviewsMaxResults:
      maximum: 100
      minimum: 1
      type: integer
    ProviderTypes:
      items:
        $ref: '#/components/schemas/ProviderType'
      maxItems: 3
      minItems: 1
      type: array
    RepositoryNames:
      items:
        $ref: '#/components/schemas/Name'
      maxItems: 100
      minItems: 1
      type: array
    NextToken:
      maxLength: 2048
      minLength: 1
      type: string
    ListCodeReviewsRequest:
      properties: {}
      title: ListCodeReviewsRequest
      type: object
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    UserIds:
      items:
        $ref: '#/components/schemas/UserId'
      maxItems: 100
      minItems: 1
      type: array
    RecommendationIds:
      items:
        $ref: '#/components/schemas/RecommendationId'
      maxItems: 100
      minItems: 1
      type: array
    ListRecommendationFeedbackRequest:
      properties: {}
      title: ListRecommendationFeedbackRequest
      type: object
    RecommendationFeedbackSummaries:
      items:
        $ref: '#/components/schemas/RecommendationFeedbackSummary'
      type: array
    ListRecommendationsMaxResults:
      maximum: 300
      minimum: 1
      type: integer
    ListRecommendationsRequest:
      properties: {}
      title: ListRecommendationsRequest
      type: object
    RecommendationSummaries:
      items:
        $ref: '#/components/schemas/RecommendationSummary'
      type: array
    RepositoryAssociationStates:
      items:
        $ref: '#/components/schemas/RepositoryAssociationState'
      maxItems: 5
      minItems: 1
      type: array
    Names:
      items:
        $ref: '#/components/schemas/Name'
      maxItems: 3
      minItems: 1
      type: array
    Owners:
      items:
        $ref: '#/components/schemas/Owner'
      maxItems: 3
      minItems: 1
      type: array
    ListRepositoryAssociationsRequest:
      properties: {}
      title: ListRepositoryAssociationsRequest
      type: object
    RepositoryAssociationSummaries:
      items:
        $ref: '#/components/schemas/RepositoryAssociationSummary'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    LongDescription:
      maxLength: 1000
      minLength: 1
      pattern: ^\S(.*\S)?$
      type: string
    Reactions:
      items:
        $ref: '#/components/schemas/Reaction'
      maxItems: 1
      minItems: 0
      type: array
    PutRecommendationFeedbackRequest:
      example:
        RecommendationId: ""
        Reactions: ""
        CodeReviewArn: ""
      properties:
        CodeReviewArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">CodeReview</a>
              object. '
        RecommendationId:
          allOf:
          - $ref: '#/components/schemas/RecommendationId'
          - description: The recommendation ID that can be used to track the provided
              recommendations and then to collect the feedback.
        Reactions:
          allOf:
          - $ref: '#/components/schemas/Reactions'
          - description: List for storing reactions. Reactions are utf-8 text code
              for emojis. If you send an empty list it clears all your feedback.
      required:
      - CodeReviewArn
      - Reactions
      - RecommendationId
      title: PutRecommendationFeedbackRequest
      type: object
    RecommendationCategory:
      enum:
      - AWSBestPractices
      - AWSCloudFormationIssues
      - DuplicateCode
      - CodeMaintenanceIssues
      - ConcurrencyIssues
      - InputValidations
      - PythonBestPractices
      - JavaBestPractices
      - ResourceLeaks
      - SecurityIssues
      - CodeInconsistencies
      title: RecommendationCategory
      type: string
    RecommendationFeedbackSummary:
      description: Information about recommendation feedback summaries.
      properties:
        RecommendationId:
          allOf:
          - $ref: '#/components/schemas/RecommendationId'
          - description: The recommendation ID that can be used to track the provided
              recommendations. Later on it can be used to collect the feedback.
          title: RecommendationId
        Reactions:
          allOf:
          - $ref: '#/components/schemas/Reactions'
          - description: List for storing reactions. Reactions are utf-8 text code
              for emojis.
          title: Reactions
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          - description: "<p>The ID of the user that gave the feedback.</p> <p> The\
              \ <code>UserId</code> is an IAM principal that can be specified as an\
              \ Amazon Web Services account ID or an Amazon Resource Name (ARN). For\
              \ more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#Principal_specifying\"\
              > Specifying a Principal</a> in the <i>Amazon Web Services Identity\
              \ and Access Management User Guide</i>.</p>"
          title: UserId
      title: RecommendationFeedbackSummary
      type: object
    RecommendationSummary:
      description: Information about recommendations.
      properties:
        FilePath:
          allOf:
          - $ref: '#/components/schemas/FilePath'
          - description: Name of the file on which a recommendation is provided.
          title: FilePath
        RecommendationId:
          allOf:
          - $ref: '#/components/schemas/RecommendationId'
          - description: The recommendation ID that can be used to track the provided
              recommendations. Later on it can be used to collect the feedback.
          title: RecommendationId
        StartLine:
          allOf:
          - $ref: '#/components/schemas/LineNumber'
          - description: Start line from where the recommendation is applicable in
              the source commit or source branch.
          title: StartLine
        EndLine:
          allOf:
          - $ref: '#/components/schemas/LineNumber'
          - description: Last line where the recommendation is applicable in the source
              commit or source branch. For a single line comment the start line and
              end line values are the same.
          title: EndLine
        Description:
          allOf:
          - $ref: '#/components/schemas/Text'
          - description: A description of the recommendation generated by CodeGuru
              Reviewer for the lines of code between the start line and the end line.
          title: Description
        RecommendationCategory:
          allOf:
          - $ref: '#/components/schemas/RecommendationCategory'
          - description: The type of a recommendation.
          title: RecommendationCategory
        RuleMetadata:
          $ref: '#/components/schemas/RecommendationSummary_RuleMetadata'
        Severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          - description: The severity of the issue in the code that generated this
              recommendation.
          title: Severity
      title: RecommendationSummary
      type: object
    Text:
      maxLength: 5000
      minLength: 1
      type: string
    RuleMetadata:
      description: "Metadata about a rule. Rule metadata includes an ID, a name, a\
        \ list of tags, and a short and long description. CodeGuru Reviewer uses rules\
        \ to analyze code. A rule's recommendation is included in analysis results\
        \ if code is detected that violates the rule."
      properties:
        RuleId:
          allOf:
          - $ref: '#/components/schemas/RuleId'
          - description: The ID of the rule.
          title: RuleId
        RuleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the rule.
          title: RuleName
        ShortDescription:
          allOf:
          - $ref: '#/components/schemas/ShortDescription'
          - description: A short description of the rule.
          title: ShortDescription
        LongDescription:
          allOf:
          - $ref: '#/components/schemas/LongDescription'
          - description: A long description of the rule.
          title: LongDescription
        RuleTags:
          allOf:
          - $ref: '#/components/schemas/RuleTags'
          - description: Tags that are associated with the rule.
          title: RuleTags
      title: RuleMetadata
      type: object
    Severity:
      enum:
      - Info
      - Low
      - Medium
      - High
      - Critical
      title: Severity
      type: string
    RepositoryHeadSourceCodeType:
      description: A <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType">SourceCodeType</a>
        that specifies the tip of a branch in an associated repository.
      example:
        BranchName: ""
      properties:
        BranchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          - description: The name of the branch in an associated repository. The <code>RepositoryHeadSourceCodeType</code>
              specifies the tip of this branch.
          title: BranchName
      required:
      - BranchName
      title: RepositoryHeadSourceCodeType
      type: object
    S3RepositoryDetails:
      description: Specifies the name of an S3 bucket and a <code>CodeArtifacts</code>
        object that contains the S3 object keys for a source code .zip file and for
        a build artifacts .zip file that contains .jar or .class files.
      example:
        BucketName: ""
        CodeArtifacts:
          BuildArtifactsObjectKey: ""
          SourceCodeArtifactsObjectKey: ""
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: 'The name of the S3 bucket used for associating a new S3
              repository. It must begin with <code>codeguru-reviewer-</code>. '
          title: BucketName
        CodeArtifacts:
          $ref: '#/components/schemas/S3RepositoryDetails_CodeArtifacts'
      title: S3RepositoryDetails
      type: object
    RepositoryAssociationSummary:
      description: Summary information about a repository association. The <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>
        operation returns a list of <code>RepositoryAssociationSummary</code> objects.
      properties:
        AssociationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
              object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>.
          title: AssociationArn
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: "The Amazon Resource Name (ARN) of an Amazon Web Services\
              \ CodeStar Connections connection. Its format is <code>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</code>.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/codestar-connections/latest/APIReference/API_Connection.html\"\
              >Connection</a> in the <i>Amazon Web Services CodeStar Connections API\
              \ Reference</i>."
          title: ConnectionArn
        LastUpdatedTimeStamp:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: "The time, in milliseconds since the epoch, since the repository\
              \ association was last updated."
          title: LastUpdatedTimeStamp
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          - description: The repository association ID.
          title: AssociationId
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the repository association.
          title: Name
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: "The owner of the repository. For an Amazon Web Services\
              \ CodeCommit repository, this is the Amazon Web Services account ID\
              \ of the account that owns the repository. For a GitHub, GitHub Enterprise\
              \ Server, or Bitbucket repository, this is the username for the account\
              \ that owns the repository. For an S3 repository, it can be the username\
              \ or Amazon Web Services account ID."
          title: Owner
        ProviderType:
          allOf:
          - $ref: '#/components/schemas/ProviderType'
          - description: The provider type of the repository association.
          title: ProviderType
        State:
          allOf:
          - $ref: '#/components/schemas/RepositoryAssociationState'
          - description: "<p>The state of the repository association.</p> <p>The valid\
              \ repository association states are:</p> <ul> <li> <p> <b>Associated</b>:\
              \ The repository association is complete.</p> </li> <li> <p> <b>Associating</b>:\
              \ CodeGuru Reviewer is:</p> <ul> <li> <p>Setting up pull request notifications.\
              \ This is required for pull requests to trigger a CodeGuru Reviewer\
              \ review.</p> <note> <p>If your repository <code>ProviderType</code>\
              \ is <code>GitHub</code>, <code>GitHub Enterprise Server</code>, or\
              \ <code>Bitbucket</code>, CodeGuru Reviewer creates webhooks in your\
              \ repository to trigger CodeGuru Reviewer reviews. If you delete these\
              \ webhooks, reviews of code in your repository cannot be triggered.</p>\
              \ </note> </li> <li> <p>Setting up source code access. This is required\
              \ for CodeGuru Reviewer to securely clone code in your repository.</p>\
              \ </li> </ul> </li> <li> <p> <b>Failed</b>: The repository failed to\
              \ associate or disassociate.</p> </li> <li> <p> <b>Disassociating</b>:\
              \ CodeGuru Reviewer is removing the repository's pull request notifications\
              \ and source code access.</p> </li> <li> <p> <b>Disassociated</b>: CodeGuru\
              \ Reviewer successfully disassociated the repository. You can create\
              \ a new association with this repository if you want to review source\
              \ code in it later. You can control access to code reviews created in\
              \ anassociated repository with tags after it has been disassociated.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/auth-and-access-control-using-tags.html\"\
              >Using tags to control access to associated repositories</a> in the\
              \ <i>Amazon CodeGuru Reviewer User Guide</i>.</p> </li> </ul>"
          title: State
      title: RepositoryAssociationSummary
      type: object
    RequestId:
      maxLength: 64
      minLength: 1
      type: string
    Requester:
      maxLength: 100
      minLength: 1
      pattern: ^\S(.*\S)?$
      type: string
    VendorName:
      enum:
      - GitHub
      - GitLab
      - NativeS3
      title: VendorName
      type: string
    RequestMetadata:
      description: Metadata that is associated with a code review. This applies to
        both pull request and repository analysis code reviews.
      properties:
        RequestId:
          allOf:
          - $ref: '#/components/schemas/RequestId'
          - description: The ID of the request. This is required for a pull request
              code review.
          title: RequestId
        Requester:
          allOf:
          - $ref: '#/components/schemas/Requester'
          - description: "An identifier, such as a name or account ID, that is associated\
              \ with the requester. The <code>Requester</code> is used to capture\
              \ the <code>author/actor</code> name of the event request."
          title: Requester
        EventInfo:
          $ref: '#/components/schemas/RequestMetadata_EventInfo'
        VendorName:
          allOf:
          - $ref: '#/components/schemas/VendorName'
          - description: "The name of the repository vendor used to upload code to\
              \ an S3 bucket for a CI/CD code review. For example, if code and artifacts\
              \ are uploaded to an S3 bucket for a CI/CD code review by GitHub scripts\
              \ from a GitHub repository, then the repository association's <code>ProviderType</code>\
              \ is <code>S3Bucket</code> and the CI/CD repository vendor name is GitHub.\
              \ For more information, see the definition for <code>ProviderType</code>\
              \ in <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html\"\
              >RepositoryAssociation</a>."
          title: VendorName
      title: RequestMetadata
      type: object
    RuleId:
      maxLength: 64
      minLength: 1
      pattern: "^\\S+\\/[a-zA-Z0-9-]+@v\\d+\\.\\d+$"
      type: string
    RuleName:
      maxLength: 100
      minLength: 1
      pattern: ^\S(.*\S)?$
      type: string
    ShortDescription:
      maxLength: 200
      minLength: 1
      pattern: ^\S(.*\S)?$
      type: string
    RuleTags:
      items:
        $ref: '#/components/schemas/RuleTag'
      maxItems: 20
      minItems: 1
      type: array
    RuleTag:
      maxLength: 50
      minLength: 1
      pattern: ^\S(.*\S)?$
      title: RuleTag
      type: string
    S3BucketName:
      maxLength: 63
      minLength: 3
      pattern: ^\S(.*\S)?$
      type: string
    S3BucketRepository:
      description: Information about an associated repository in an S3 bucket. The
        associated repository contains a source code .zip file and a build artifacts
        .zip file that contains .jar or .class files.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the repository when the <code>ProviderType</code>
              is <code>S3Bucket</code>.
          title: Name
        Details:
          $ref: '#/components/schemas/S3BucketRepository_Details'
      required:
      - Name
      title: S3BucketRepository
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>An array of key-value pairs used to tag an associated\
              \ repository. A tag is a custom attribute label with two parts:</p>\
              \ <ul> <li> <p>A <i>tag key</i> (for example, <code>CostCenter</code>,\
              \ <code>Environment</code>, <code>Project</code>, or <code>Secret</code>).\
              \ Tag keys are case sensitive.</p> </li> <li> <p>An optional field known\
              \ as a <i>tag value</i> (for example, <code>111122223333</code>, <code>Production</code>,\
              \ or a team name). Omitting the tag value is the same as using an empty\
              \ string. Like tag keys, tag values are case sensitive.</p> </li> </ul>"
      required:
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    AssociateRepository_request_Repository_CodeCommit:
      allOf:
      - $ref: '#/components/schemas/CodeCommitRepository'
      - description: Information about an Amazon Web Services CodeCommit repository.
      example:
        Name: ""
      title: AssociateRepository_request_Repository_CodeCommit
    AssociateRepository_request_Repository_Bitbucket:
      allOf:
      - $ref: '#/components/schemas/ThirdPartySourceRepository'
      - description: ' Information about a Bitbucket repository. '
      example:
        Owner: ""
        ConnectionArn: ""
        Name: ""
      title: AssociateRepository_request_Repository_Bitbucket
    AssociateRepository_request_Repository_GitHubEnterpriseServer:
      allOf:
      - $ref: '#/components/schemas/ThirdPartySourceRepository'
      - description: Information about a GitHub Enterprise Server repository.
      example:
        Owner: ""
        ConnectionArn: ""
        Name: ""
      title: AssociateRepository_request_Repository_GitHubEnterpriseServer
    AssociateRepository_request_Repository:
      description: "Information about an associated Amazon Web Services CodeCommit\
        \ repository or an associated repository that is managed by Amazon Web Services\
        \ CodeStar Connections (for example, Bitbucket). This <code>Repository</code>\
        \ object is not used if your source code is in an associated GitHub repository."
      properties:
        CodeCommit:
          $ref: '#/components/schemas/AssociateRepository_request_Repository_CodeCommit'
        Bitbucket:
          $ref: '#/components/schemas/AssociateRepository_request_Repository_Bitbucket'
        GitHubEnterpriseServer:
          $ref: '#/components/schemas/AssociateRepository_request_Repository_GitHubEnterpriseServer'
        S3Bucket:
          $ref: '#/components/schemas/S3Repository'
      title: AssociateRepository_request_Repository
      type: object
    AssociateRepository_request_KMSKeyDetails:
      description: <p>An object that contains:</p> <ul> <li> <p>The encryption option
        for a repository association. It is either owned by Amazon Web Services Key
        Management Service (KMS) (<code>AWS_OWNED_CMK</code>) or customer managed
        (<code>CUSTOMER_MANAGED_CMK</code>).</p> </li> <li> <p>The ID of the Amazon
        Web Services KMS key that is associated with a repository association.</p>
        </li> </ul>
      properties:
        KMSKeyId:
          allOf:
          - $ref: '#/components/schemas/KMSKeyId'
          - description: The ID of the Amazon Web Services KMS key that is associated
              with a repository association.
          title: KMSKeyId
        EncryptionOption:
          allOf:
          - $ref: '#/components/schemas/EncryptionOption'
          - description: The encryption option for a repository association. It is
              either owned by Amazon Web Services Key Management Service (KMS) (<code>AWS_OWNED_CMK</code>)
              or customer managed (<code>CUSTOMER_MANAGED_CMK</code>).
          title: EncryptionOption
      title: AssociateRepository_request_KMSKeyDetails
      type: object
    AssociateRepository_request:
      properties:
        Repository:
          $ref: '#/components/schemas/AssociateRepository_request_Repository'
        ClientRequestToken:
          description: Amazon CodeGuru Reviewer uses this value to prevent the accidental
            creation of duplicate repository associations if there are failures and
            retries.
          maxLength: 64
          minLength: 1
          pattern: "^[\\w-]+$"
          title: ClientRequestToken
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "<p>An array of key-value pairs used to tag an associated repository.\
            \ A tag is a custom attribute label with two parts:</p> <ul> <li> <p>A\
            \ <i>tag key</i> (for example, <code>CostCenter</code>, <code>Environment</code>,\
            \ <code>Project</code>, or <code>Secret</code>). Tag keys are case sensitive.</p>\
            \ </li> <li> <p>An optional field known as a <i>tag value</i> (for example,\
            \ <code>111122223333</code>, <code>Production</code>, or a team name).\
            \ Omitting the tag value is the same as using an empty string. Like tag\
            \ keys, tag values are case sensitive.</p> </li> </ul>"
          maxProperties: 50
          minProperties: 1
          title: Tags
          type: object
        KMSKeyDetails:
          $ref: '#/components/schemas/AssociateRepository_request_KMSKeyDetails'
      required:
      - Repository
      title: AssociateRepository_request
      type: object
    CreateCodeReview_request_Type_RepositoryAnalysis:
      allOf:
      - $ref: '#/components/schemas/RepositoryAnalysis'
      - description: A code review that analyzes all code under a specified branch
          in an associated repository. The associated repository is specified using
          its ARN in <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CreateCodeReview">CreateCodeReview</a>.
      example:
        RepositoryHead:
          BranchName: ""
        SourceCodeType:
          CommitDiff:
            DestinationCommit: ""
            SourceCommit: ""
            MergeBaseCommit: ""
          BranchDiff:
            DestinationBranchName: ""
            SourceBranchName: ""
          RepositoryHead:
            BranchName: ""
          S3BucketRepository:
            Details:
              BucketName: ""
              CodeArtifacts:
                BuildArtifactsObjectKey: ""
                SourceCodeArtifactsObjectKey: ""
            Name: ""
          RequestMetadata:
            Requester: ""
            VendorName: ""
            RequestId: ""
            EventInfo:
              State: ""
              Name: ""
      title: CreateCodeReview_request_Type_RepositoryAnalysis
    CreateCodeReview_request_Type:
      description: <p>The type of a code review. There are two code review types:</p>
        <ul> <li> <p> <code>PullRequest</code> - A code review that is automatically
        triggered by a pull request on an associated repository.</p> </li> <li> <p>
        <code>RepositoryAnalysis</code> - A code review that analyzes all code under
        a specified branch in an associated repository. The associated repository
        is specified using its ARN in <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CreateCodeReview">CreateCodeReview</a>.</p>
        </li> </ul>
      properties:
        RepositoryAnalysis:
          $ref: '#/components/schemas/CreateCodeReview_request_Type_RepositoryAnalysis'
        AnalysisTypes:
          allOf:
          - $ref: '#/components/schemas/AnalysisTypes'
          - description: "They types of analysis performed during a repository analysis\
              \ or a pull request review. You can specify either <code>Security</code>,\
              \ <code>CodeQuality</code>, or both."
          title: AnalysisTypes
      title: CreateCodeReview_request_Type
      type: object
    CreateCodeReview_request:
      properties:
        Name:
          description: The name of the code review. The name of each code review in
            your Amazon Web Services account must be unique.
          maxLength: 100
          minLength: 1
          pattern: "[a-zA-Z0-9-_]*"
          title: Name
          type: string
        RepositoryAssociationArn:
          description: <p>The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
            object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>.</p>
            <p>A code review can only be created on an associated repository. This
            is the ARN of the associated repository.</p>
          maxLength: 1600
          minLength: 1
          pattern: "^arn:aws[^:\\s]*:codeguru-reviewer:[^:\\s]+:[\\d]{12}:association:[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          title: RepositoryAssociationArn
          type: string
        Type:
          $ref: '#/components/schemas/CreateCodeReview_request_Type'
        ClientRequestToken:
          description: Amazon CodeGuru Reviewer uses this value to prevent the accidental
            creation of duplicate code reviews if there are failures and retries.
          maxLength: 64
          minLength: 1
          pattern: "^[\\w-]+$"
          title: ClientRequestToken
          type: string
      required:
      - Name
      - RepositoryAssociationArn
      - Type
      title: CreateCodeReview_request
      type: object
    TagResource_request:
      properties:
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "<p>An array of key-value pairs used to tag an associated repository.\
            \ A tag is a custom attribute label with two parts:</p> <ul> <li> <p>A\
            \ <i>tag key</i> (for example, <code>CostCenter</code>, <code>Environment</code>,\
            \ <code>Project</code>, or <code>Secret</code>). Tag keys are case sensitive.</p>\
            \ </li> <li> <p>An optional field known as a <i>tag value</i> (for example,\
            \ <code>111122223333</code>, <code>Production</code>, or a team name).\
            \ Omitting the tag value is the same as using an empty string. Like tag\
            \ keys, tag values are case sensitive.</p> </li> </ul>"
          maxProperties: 50
          minProperties: 1
          title: Tags
          type: object
      required:
      - Tags
      title: TagResource_request
      type: object
    PutRecommendationFeedback_request:
      properties:
        CodeReviewArn:
          description: 'The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">CodeReview</a>
            object. '
          maxLength: 1600
          minLength: 1
          pattern: "^arn:aws[^:\\s]*:codeguru-reviewer:[^:\\s]+:[\\d]{12}:[a-z-]+:[\\\
            w-]+$"
          title: CodeReviewArn
          type: string
        RecommendationId:
          description: The recommendation ID that can be used to track the provided
            recommendations and then to collect the feedback.
          maxLength: 64
          minLength: 1
          title: RecommendationId
          type: string
        Reactions:
          description: List for storing reactions. Reactions are utf-8 text code for
            emojis. If you send an empty list it clears all your feedback.
          items:
            $ref: '#/components/schemas/Reaction'
          maxItems: 1
          minItems: 0
          title: Reactions
          type: array
      required:
      - CodeReviewArn
      - Reactions
      - RecommendationId
      title: PutRecommendationFeedback_request
      type: object
    AssociateRepositoryResponse_RepositoryAssociation:
      allOf:
      - $ref: '#/components/schemas/RepositoryAssociation'
      - description: Information about the repository association.
      example:
        AssociationArn: ""
        Owner: ""
        LastUpdatedTimeStamp: ""
        CreatedTimeStamp: ""
        State: ""
        StateReason: ""
        ConnectionArn: ""
        ProviderType: ""
        AssociationId: ""
        Name: ""
        KMSKeyDetails:
          KMSKeyId: ""
          EncryptionOption: ""
        S3RepositoryDetails:
          BucketName: ""
          CodeArtifacts:
            BuildArtifactsObjectKey: ""
            SourceCodeArtifactsObjectKey: ""
      title: AssociateRepositoryResponse_RepositoryAssociation
    RepositoryAnalysis_RepositoryHead:
      allOf:
      - $ref: '#/components/schemas/RepositoryHeadSourceCodeType'
      - description: A <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType">SourceCodeType</a>
          that specifies the tip of a branch in an associated repository.
      example:
        BranchName: ""
      title: RepositoryAnalysis_RepositoryHead
    DescribeCodeReviewResponse_CodeReview:
      allOf:
      - $ref: '#/components/schemas/CodeReview'
      - description: Information about the code review.
      example:
        AssociationArn: ""
        Owner: ""
        LastUpdatedTimeStamp: ""
        CreatedTimeStamp: ""
        SourceCodeType:
          CommitDiff:
            DestinationCommit: ""
            SourceCommit: ""
            MergeBaseCommit: ""
          BranchDiff:
            DestinationBranchName: ""
            SourceBranchName: ""
          RepositoryHead:
            BranchName: ""
          S3BucketRepository:
            Details:
              BucketName: ""
              CodeArtifacts:
                BuildArtifactsObjectKey: ""
                SourceCodeArtifactsObjectKey: ""
            Name: ""
          RequestMetadata:
            Requester: ""
            VendorName: ""
            RequestId: ""
            EventInfo:
              State: ""
              Name: ""
        RepositoryName: ""
        ConfigFileState: ""
        CodeReviewArn: ""
        PullRequestId: ""
        Name: ""
        Type: ""
        Metrics:
          MeteredLinesOfCodeCount: ""
          SuppressedLinesOfCodeCount: ""
          FindingsCount: ""
        State: ""
        StateReason: ""
        ProviderType: ""
        AnalysisTypes: ""
      title: DescribeCodeReviewResponse_CodeReview
    DescribeRecommendationFeedbackResponse_RecommendationFeedback:
      allOf:
      - $ref: '#/components/schemas/RecommendationFeedback'
      - description: The recommendation feedback given by the user.
      example:
        LastUpdatedTimeStamp: ""
        CreatedTimeStamp: ""
        UserId: ""
        RecommendationId: ""
        Reactions: ""
        CodeReviewArn: ""
      title: DescribeRecommendationFeedbackResponse_RecommendationFeedback
    DisassociateRepositoryResponse_RepositoryAssociation:
      allOf:
      - $ref: '#/components/schemas/RepositoryAssociation'
      - description: Information about the disassociated repository.
      example:
        AssociationArn: ""
        Owner: ""
        LastUpdatedTimeStamp: ""
        CreatedTimeStamp: ""
        State: ""
        StateReason: ""
        ConnectionArn: ""
        ProviderType: ""
        AssociationId: ""
        Name: ""
        KMSKeyDetails:
          KMSKeyId: ""
          EncryptionOption: ""
        S3RepositoryDetails:
          BucketName: ""
          CodeArtifacts:
            BuildArtifactsObjectKey: ""
            SourceCodeArtifactsObjectKey: ""
      title: DisassociateRepositoryResponse_RepositoryAssociation
    AssociateRepositoryRequest_Repository:
      allOf:
      - $ref: '#/components/schemas/Repository'
      - description: The repository to associate.
      example:
        GitHubEnterpriseServer:
          Owner: ""
          ConnectionArn: ""
          Name: ""
        S3Bucket:
          BucketName: ""
          Name: ""
        CodeCommit:
          Name: ""
        Bitbucket:
          Owner: ""
          ConnectionArn: ""
          Name: ""
      title: AssociateRepositoryRequest_Repository
    AssociateRepositoryRequest_KMSKeyDetails:
      allOf:
      - $ref: '#/components/schemas/KMSKeyDetails'
      - description: <p>A <code>KMSKeyDetails</code> object that contains:</p> <ul>
          <li> <p>The encryption option for this repository association. It is either
          owned by Amazon Web Services Key Management Service (KMS) (<code>AWS_OWNED_CMK</code>)
          or customer managed (<code>CUSTOMER_MANAGED_CMK</code>).</p> </li> <li>
          <p>The ID of the Amazon Web Services KMS key that is associated with this
          repository association.</p> </li> </ul>
      example:
        KMSKeyId: ""
        EncryptionOption: ""
      title: AssociateRepositoryRequest_KMSKeyDetails
    SourceCodeType_CommitDiff:
      allOf:
      - $ref: '#/components/schemas/CommitDiffSourceCodeType'
      - description: A <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType">SourceCodeType</a>
          that specifies a commit diff created by a pull request on an associated
          repository.
      example:
        DestinationCommit: ""
        SourceCommit: ""
        MergeBaseCommit: ""
      title: SourceCodeType_CommitDiff
    SourceCodeType_BranchDiff:
      allOf:
      - $ref: '#/components/schemas/BranchDiffSourceCodeType'
      - description: A type of <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType">SourceCodeType</a>
          that specifies a source branch name and a destination branch name in an
          associated repository.
      example:
        DestinationBranchName: ""
        SourceBranchName: ""
      title: SourceCodeType_BranchDiff
    SourceCodeType_S3BucketRepository:
      allOf:
      - $ref: '#/components/schemas/S3BucketRepository'
      - description: "Information about an associated repository in an S3 bucket that\
          \ includes its name and an <code>S3RepositoryDetails</code> object. The\
          \ <code>S3RepositoryDetails</code> object includes the name of an S3 bucket,\
          \ an S3 key for a source code .zip file, and an S3 key for a build artifacts\
          \ .zip file. <code>S3BucketRepository</code> is required in <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType\"\
          >SourceCodeType</a> for <code>S3BucketRepository</code> based code reviews."
      example:
        Details:
          BucketName: ""
          CodeArtifacts:
            BuildArtifactsObjectKey: ""
            SourceCodeArtifactsObjectKey: ""
        Name: ""
      title: SourceCodeType_S3BucketRepository
    SourceCodeType_RequestMetadata:
      allOf:
      - $ref: '#/components/schemas/RequestMetadata'
      - description: "Metadata that is associated with a code review. This applies\
          \ to any type of code review supported by CodeGuru Reviewer. The <code>RequestMetadaa</code>\
          \ field captures any event metadata. For example, it might capture metadata\
          \ associated with an event trigger, such as a push or a pull request."
      example:
        Requester: ""
        VendorName: ""
        RequestId: ""
        EventInfo:
          State: ""
          Name: ""
      title: SourceCodeType_RequestMetadata
    CodeReview_SourceCodeType:
      allOf:
      - $ref: '#/components/schemas/SourceCodeType'
      - description: The type of the source code for the code review.
      example:
        CommitDiff:
          DestinationCommit: ""
          SourceCommit: ""
          MergeBaseCommit: ""
        BranchDiff:
          DestinationBranchName: ""
          SourceBranchName: ""
        RepositoryHead:
          BranchName: ""
        S3BucketRepository:
          Details:
            BucketName: ""
            CodeArtifacts:
              BuildArtifactsObjectKey: ""
              SourceCodeArtifactsObjectKey: ""
          Name: ""
        RequestMetadata:
          Requester: ""
          VendorName: ""
          RequestId: ""
          EventInfo:
            State: ""
            Name: ""
      title: CodeReview_SourceCodeType
    CodeReview_Metrics:
      allOf:
      - $ref: '#/components/schemas/Metrics'
      - description: The statistics from the code review.
      example:
        MeteredLinesOfCodeCount: ""
        SuppressedLinesOfCodeCount: ""
        FindingsCount: ""
      title: CodeReview_Metrics
    CodeReviewSummary_MetricsSummary:
      allOf:
      - $ref: '#/components/schemas/MetricsSummary'
      - description: The statistics from the code review.
      title: CodeReviewSummary_MetricsSummary
    CreateCodeReviewRequest_Type:
      allOf:
      - $ref: '#/components/schemas/CodeReviewType'
      - description: The type of code review to create. This is specified using a
          <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReviewType.html">CodeReviewType</a>
          object. You can create a code review only of type <code>RepositoryAnalysis</code>.
      example:
        RepositoryAnalysis:
          RepositoryHead:
            BranchName: ""
          SourceCodeType:
            CommitDiff:
              DestinationCommit: ""
              SourceCommit: ""
              MergeBaseCommit: ""
            BranchDiff:
              DestinationBranchName: ""
              SourceBranchName: ""
            RepositoryHead:
              BranchName: ""
            S3BucketRepository:
              Details:
                BucketName: ""
                CodeArtifacts:
                  BuildArtifactsObjectKey: ""
                  SourceCodeArtifactsObjectKey: ""
              Name: ""
            RequestMetadata:
              Requester: ""
              VendorName: ""
              RequestId: ""
              EventInfo:
                State: ""
                Name: ""
        AnalysisTypes: ""
      title: CreateCodeReviewRequest_Type
    RecommendationSummary_RuleMetadata:
      allOf:
      - $ref: '#/components/schemas/RuleMetadata'
      - description: "Metadata about a rule. Rule metadata includes an ID, a name,\
          \ a list of tags, and a short and long description. CodeGuru Reviewer uses\
          \ rules to analyze code. A rule's recommendation is included in analysis\
          \ results if code is detected that violates the rule."
      title: RecommendationSummary_RuleMetadata
    S3RepositoryDetails_CodeArtifacts:
      allOf:
      - $ref: '#/components/schemas/CodeArtifacts'
      - description: A <code>CodeArtifacts</code> object. The <code>CodeArtifacts</code>
          object includes the S3 object key for a source code .zip file and for a
          build artifacts .zip file that contains .jar or .class files.
      example:
        BuildArtifactsObjectKey: ""
        SourceCodeArtifactsObjectKey: ""
      title: S3RepositoryDetails_CodeArtifacts
    RequestMetadata_EventInfo:
      allOf:
      - $ref: '#/components/schemas/EventInfo'
      - description: Information about the event associated with a code review.
      example:
        State: ""
        Name: ""
      title: RequestMetadata_EventInfo
    S3BucketRepository_Details:
      allOf:
      - $ref: '#/components/schemas/S3RepositoryDetails'
      - description: An <code>S3RepositoryDetails</code> object that specifies the
          name of an S3 bucket and a <code>CodeArtifacts</code> object. The <code>CodeArtifacts</code>
          object includes the S3 object keys for a source code .zip file and for a
          build artifacts .zip file.
      example:
        BucketName: ""
        CodeArtifacts:
          BuildArtifactsObjectKey: ""
          SourceCodeArtifactsObjectKey: ""
      title: S3BucketRepository_Details
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
