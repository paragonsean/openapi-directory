/**
 * Amazon CodeGuru Reviewer
 * <p>This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommends fixes in your Java and Python code.</p> <p>By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the <i> <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\">Amazon CodeGuru Reviewer User Guide</a>.</i> </p> <p>To improve the security of your CodeGuru Reviewer API calls, you can establish a private connection between your VPC and CodeGuru Reviewer by creating an <i>interface VPC endpoint</i>. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html\">CodeGuru Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-09-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIS3RepositoryDetails.h
 *
 * Specifies the name of an S3 bucket and a &lt;code&gt;CodeArtifacts&lt;/code&gt; object that contains the S3 object keys for a source code .zip file and for a build artifacts .zip file that contains .jar or .class files.
 */

#ifndef OAIS3RepositoryDetails_H
#define OAIS3RepositoryDetails_H

#include <QJsonObject>

#include "OAIS3RepositoryDetails_CodeArtifacts.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIS3RepositoryDetails_CodeArtifacts;

class OAIS3RepositoryDetails : public OAIObject {
public:
    OAIS3RepositoryDetails();
    OAIS3RepositoryDetails(QString json);
    ~OAIS3RepositoryDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBucketName() const;
    void setBucketName(const QString &bucket_name);
    bool is_bucket_name_Set() const;
    bool is_bucket_name_Valid() const;

    OAIS3RepositoryDetails_CodeArtifacts getCodeArtifacts() const;
    void setCodeArtifacts(const OAIS3RepositoryDetails_CodeArtifacts &code_artifacts);
    bool is_code_artifacts_Set() const;
    bool is_code_artifacts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bucket_name;
    bool m_bucket_name_isSet;
    bool m_bucket_name_isValid;

    OAIS3RepositoryDetails_CodeArtifacts m_code_artifacts;
    bool m_code_artifacts_isSet;
    bool m_code_artifacts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIS3RepositoryDetails)

#endif // OAIS3RepositoryDetails_H
