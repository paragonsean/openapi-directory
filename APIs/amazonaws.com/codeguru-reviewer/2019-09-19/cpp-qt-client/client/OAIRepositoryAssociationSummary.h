/**
 * Amazon CodeGuru Reviewer
 * <p>This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommends fixes in your Java and Python code.</p> <p>By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the <i> <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\">Amazon CodeGuru Reviewer User Guide</a>.</i> </p> <p>To improve the security of your CodeGuru Reviewer API calls, you can establish a private connection between your VPC and CodeGuru Reviewer by creating an <i>interface VPC endpoint</i>. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html\">CodeGuru Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-09-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRepositoryAssociationSummary.h
 *
 * Summary information about a repository association. The &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html\&quot;&gt;ListRepositoryAssociations&lt;/a&gt; operation returns a list of &lt;code&gt;RepositoryAssociationSummary&lt;/code&gt; objects.
 */

#ifndef OAIRepositoryAssociationSummary_H
#define OAIRepositoryAssociationSummary_H

#include <QJsonObject>

#include "OAIProviderType.h"
#include "OAIRepositoryAssociationState.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRepositoryAssociationSummary : public OAIObject {
public:
    OAIRepositoryAssociationSummary();
    OAIRepositoryAssociationSummary(QString json);
    ~OAIRepositoryAssociationSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssociationArn() const;
    void setAssociationArn(const QString &association_arn);
    bool is_association_arn_Set() const;
    bool is_association_arn_Valid() const;

    QString getConnectionArn() const;
    void setConnectionArn(const QString &connection_arn);
    bool is_connection_arn_Set() const;
    bool is_connection_arn_Valid() const;

    QDateTime getLastUpdatedTimeStamp() const;
    void setLastUpdatedTimeStamp(const QDateTime &last_updated_time_stamp);
    bool is_last_updated_time_stamp_Set() const;
    bool is_last_updated_time_stamp_Valid() const;

    QString getAssociationId() const;
    void setAssociationId(const QString &association_id);
    bool is_association_id_Set() const;
    bool is_association_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOwner() const;
    void setOwner(const QString &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    OAIProviderType getProviderType() const;
    void setProviderType(const OAIProviderType &provider_type);
    bool is_provider_type_Set() const;
    bool is_provider_type_Valid() const;

    OAIRepositoryAssociationState getState() const;
    void setState(const OAIRepositoryAssociationState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_association_arn;
    bool m_association_arn_isSet;
    bool m_association_arn_isValid;

    QString m_connection_arn;
    bool m_connection_arn_isSet;
    bool m_connection_arn_isValid;

    QDateTime m_last_updated_time_stamp;
    bool m_last_updated_time_stamp_isSet;
    bool m_last_updated_time_stamp_isValid;

    QString m_association_id;
    bool m_association_id_isSet;
    bool m_association_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    OAIProviderType m_provider_type;
    bool m_provider_type_isSet;
    bool m_provider_type_isValid;

    OAIRepositoryAssociationState m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRepositoryAssociationSummary)

#endif // OAIRepositoryAssociationSummary_H
