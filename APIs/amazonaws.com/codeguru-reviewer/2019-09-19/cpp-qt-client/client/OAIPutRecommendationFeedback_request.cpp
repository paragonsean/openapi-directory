/**
 * Amazon CodeGuru Reviewer
 * <p>This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommends fixes in your Java and Python code.</p> <p>By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the <i> <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\">Amazon CodeGuru Reviewer User Guide</a>.</i> </p> <p>To improve the security of your CodeGuru Reviewer API calls, you can establish a private connection between your VPC and CodeGuru Reviewer by creating an <i>interface VPC endpoint</i>. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html\">CodeGuru Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-09-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutRecommendationFeedback_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutRecommendationFeedback_request::OAIPutRecommendationFeedback_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutRecommendationFeedback_request::OAIPutRecommendationFeedback_request() {
    this->initializeModel();
}

OAIPutRecommendationFeedback_request::~OAIPutRecommendationFeedback_request() {}

void OAIPutRecommendationFeedback_request::initializeModel() {

    m_code_review_arn_isSet = false;
    m_code_review_arn_isValid = false;

    m_recommendation_id_isSet = false;
    m_recommendation_id_isValid = false;

    m_reactions_isSet = false;
    m_reactions_isValid = false;
}

void OAIPutRecommendationFeedback_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutRecommendationFeedback_request::fromJsonObject(QJsonObject json) {

    m_code_review_arn_isValid = ::OpenAPI::fromJsonValue(m_code_review_arn, json[QString("CodeReviewArn")]);
    m_code_review_arn_isSet = !json[QString("CodeReviewArn")].isNull() && m_code_review_arn_isValid;

    m_recommendation_id_isValid = ::OpenAPI::fromJsonValue(m_recommendation_id, json[QString("RecommendationId")]);
    m_recommendation_id_isSet = !json[QString("RecommendationId")].isNull() && m_recommendation_id_isValid;

    m_reactions_isValid = ::OpenAPI::fromJsonValue(m_reactions, json[QString("Reactions")]);
    m_reactions_isSet = !json[QString("Reactions")].isNull() && m_reactions_isValid;
}

QString OAIPutRecommendationFeedback_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutRecommendationFeedback_request::asJsonObject() const {
    QJsonObject obj;
    if (m_code_review_arn_isSet) {
        obj.insert(QString("CodeReviewArn"), ::OpenAPI::toJsonValue(m_code_review_arn));
    }
    if (m_recommendation_id_isSet) {
        obj.insert(QString("RecommendationId"), ::OpenAPI::toJsonValue(m_recommendation_id));
    }
    if (m_reactions.size() > 0) {
        obj.insert(QString("Reactions"), ::OpenAPI::toJsonValue(m_reactions));
    }
    return obj;
}

QString OAIPutRecommendationFeedback_request::getCodeReviewArn() const {
    return m_code_review_arn;
}
void OAIPutRecommendationFeedback_request::setCodeReviewArn(const QString &code_review_arn) {
    m_code_review_arn = code_review_arn;
    m_code_review_arn_isSet = true;
}

bool OAIPutRecommendationFeedback_request::is_code_review_arn_Set() const{
    return m_code_review_arn_isSet;
}

bool OAIPutRecommendationFeedback_request::is_code_review_arn_Valid() const{
    return m_code_review_arn_isValid;
}

QString OAIPutRecommendationFeedback_request::getRecommendationId() const {
    return m_recommendation_id;
}
void OAIPutRecommendationFeedback_request::setRecommendationId(const QString &recommendation_id) {
    m_recommendation_id = recommendation_id;
    m_recommendation_id_isSet = true;
}

bool OAIPutRecommendationFeedback_request::is_recommendation_id_Set() const{
    return m_recommendation_id_isSet;
}

bool OAIPutRecommendationFeedback_request::is_recommendation_id_Valid() const{
    return m_recommendation_id_isValid;
}

QList<OAIReaction> OAIPutRecommendationFeedback_request::getReactions() const {
    return m_reactions;
}
void OAIPutRecommendationFeedback_request::setReactions(const QList<OAIReaction> &reactions) {
    m_reactions = reactions;
    m_reactions_isSet = true;
}

bool OAIPutRecommendationFeedback_request::is_reactions_Set() const{
    return m_reactions_isSet;
}

bool OAIPutRecommendationFeedback_request::is_reactions_Valid() const{
    return m_reactions_isValid;
}

bool OAIPutRecommendationFeedback_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_review_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reactions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutRecommendationFeedback_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_code_review_arn_isValid && m_recommendation_id_isValid && m_reactions_isValid && true;
}

} // namespace OpenAPI
