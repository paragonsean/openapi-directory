/**
 * Amazon CodeGuru Reviewer
 * <p>This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommends fixes in your Java and Python code.</p> <p>By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the <i> <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\">Amazon CodeGuru Reviewer User Guide</a>.</i> </p> <p>To improve the security of your CodeGuru Reviewer API calls, you can establish a private connection between your VPC and CodeGuru Reviewer by creating an <i>interface VPC endpoint</i>. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html\">CodeGuru Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-09-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISourceCodeType_RequestMetadata.h
 *
 * 
 */

#ifndef OAISourceCodeType_RequestMetadata_H
#define OAISourceCodeType_RequestMetadata_H

#include <QJsonObject>

#include "OAIRequestMetadata_EventInfo.h"
#include "OAIVendorName.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRequestMetadata_EventInfo;

class OAISourceCodeType_RequestMetadata : public OAIObject {
public:
    OAISourceCodeType_RequestMetadata();
    OAISourceCodeType_RequestMetadata(QString json);
    ~OAISourceCodeType_RequestMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    QString getRequester() const;
    void setRequester(const QString &requester);
    bool is_requester_Set() const;
    bool is_requester_Valid() const;

    OAIRequestMetadata_EventInfo getEventInfo() const;
    void setEventInfo(const OAIRequestMetadata_EventInfo &event_info);
    bool is_event_info_Set() const;
    bool is_event_info_Valid() const;

    OAIVendorName getVendorName() const;
    void setVendorName(const OAIVendorName &vendor_name);
    bool is_vendor_name_Set() const;
    bool is_vendor_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    QString m_requester;
    bool m_requester_isSet;
    bool m_requester_isValid;

    OAIRequestMetadata_EventInfo m_event_info;
    bool m_event_info_isSet;
    bool m_event_info_isValid;

    OAIVendorName m_vendor_name;
    bool m_vendor_name_isSet;
    bool m_vendor_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISourceCodeType_RequestMetadata)

#endif // OAISourceCodeType_RequestMetadata_H
