/**
 * Amazon CodeGuru Reviewer
 * <p>This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommends fixes in your Java and Python code.</p> <p>By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the <i> <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\">Amazon CodeGuru Reviewer User Guide</a>.</i> </p> <p>To improve the security of your CodeGuru Reviewer API calls, you can establish a private connection between your VPC and CodeGuru Reviewer by creating an <i>interface VPC endpoint</i>. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html\">CodeGuru Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-09-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssociateRepositoryRequest_KMSKeyDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssociateRepositoryRequest_KMSKeyDetails::OAIAssociateRepositoryRequest_KMSKeyDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssociateRepositoryRequest_KMSKeyDetails::OAIAssociateRepositoryRequest_KMSKeyDetails() {
    this->initializeModel();
}

OAIAssociateRepositoryRequest_KMSKeyDetails::~OAIAssociateRepositoryRequest_KMSKeyDetails() {}

void OAIAssociateRepositoryRequest_KMSKeyDetails::initializeModel() {

    m_kms_key_id_isSet = false;
    m_kms_key_id_isValid = false;

    m_encryption_option_isSet = false;
    m_encryption_option_isValid = false;
}

void OAIAssociateRepositoryRequest_KMSKeyDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssociateRepositoryRequest_KMSKeyDetails::fromJsonObject(QJsonObject json) {

    m_kms_key_id_isValid = ::OpenAPI::fromJsonValue(m_kms_key_id, json[QString("KMSKeyId")]);
    m_kms_key_id_isSet = !json[QString("KMSKeyId")].isNull() && m_kms_key_id_isValid;

    m_encryption_option_isValid = ::OpenAPI::fromJsonValue(m_encryption_option, json[QString("EncryptionOption")]);
    m_encryption_option_isSet = !json[QString("EncryptionOption")].isNull() && m_encryption_option_isValid;
}

QString OAIAssociateRepositoryRequest_KMSKeyDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssociateRepositoryRequest_KMSKeyDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_kms_key_id_isSet) {
        obj.insert(QString("KMSKeyId"), ::OpenAPI::toJsonValue(m_kms_key_id));
    }
    if (m_encryption_option.isSet()) {
        obj.insert(QString("EncryptionOption"), ::OpenAPI::toJsonValue(m_encryption_option));
    }
    return obj;
}

QString OAIAssociateRepositoryRequest_KMSKeyDetails::getKmsKeyId() const {
    return m_kms_key_id;
}
void OAIAssociateRepositoryRequest_KMSKeyDetails::setKmsKeyId(const QString &kms_key_id) {
    m_kms_key_id = kms_key_id;
    m_kms_key_id_isSet = true;
}

bool OAIAssociateRepositoryRequest_KMSKeyDetails::is_kms_key_id_Set() const{
    return m_kms_key_id_isSet;
}

bool OAIAssociateRepositoryRequest_KMSKeyDetails::is_kms_key_id_Valid() const{
    return m_kms_key_id_isValid;
}

OAIEncryptionOption OAIAssociateRepositoryRequest_KMSKeyDetails::getEncryptionOption() const {
    return m_encryption_option;
}
void OAIAssociateRepositoryRequest_KMSKeyDetails::setEncryptionOption(const OAIEncryptionOption &encryption_option) {
    m_encryption_option = encryption_option;
    m_encryption_option_isSet = true;
}

bool OAIAssociateRepositoryRequest_KMSKeyDetails::is_encryption_option_Set() const{
    return m_encryption_option_isSet;
}

bool OAIAssociateRepositoryRequest_KMSKeyDetails::is_encryption_option_Valid() const{
    return m_encryption_option_isValid;
}

bool OAIAssociateRepositoryRequest_KMSKeyDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_kms_key_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_encryption_option.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssociateRepositoryRequest_KMSKeyDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
