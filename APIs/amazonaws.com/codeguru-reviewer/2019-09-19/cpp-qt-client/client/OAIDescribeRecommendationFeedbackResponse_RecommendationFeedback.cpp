/**
 * Amazon CodeGuru Reviewer
 * <p>This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommends fixes in your Java and Python code.</p> <p>By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the <i> <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\">Amazon CodeGuru Reviewer User Guide</a>.</i> </p> <p>To improve the security of your CodeGuru Reviewer API calls, you can establish a private connection between your VPC and CodeGuru Reviewer by creating an <i>interface VPC endpoint</i>. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html\">CodeGuru Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-09-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback() {
    this->initializeModel();
}

OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::~OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback() {}

void OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::initializeModel() {

    m_code_review_arn_isSet = false;
    m_code_review_arn_isValid = false;

    m_recommendation_id_isSet = false;
    m_recommendation_id_isValid = false;

    m_reactions_isSet = false;
    m_reactions_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_created_time_stamp_isSet = false;
    m_created_time_stamp_isValid = false;

    m_last_updated_time_stamp_isSet = false;
    m_last_updated_time_stamp_isValid = false;
}

void OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::fromJsonObject(QJsonObject json) {

    m_code_review_arn_isValid = ::OpenAPI::fromJsonValue(m_code_review_arn, json[QString("CodeReviewArn")]);
    m_code_review_arn_isSet = !json[QString("CodeReviewArn")].isNull() && m_code_review_arn_isValid;

    m_recommendation_id_isValid = ::OpenAPI::fromJsonValue(m_recommendation_id, json[QString("RecommendationId")]);
    m_recommendation_id_isSet = !json[QString("RecommendationId")].isNull() && m_recommendation_id_isValid;

    m_reactions_isValid = ::OpenAPI::fromJsonValue(m_reactions, json[QString("Reactions")]);
    m_reactions_isSet = !json[QString("Reactions")].isNull() && m_reactions_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("UserId")]);
    m_user_id_isSet = !json[QString("UserId")].isNull() && m_user_id_isValid;

    m_created_time_stamp_isValid = ::OpenAPI::fromJsonValue(m_created_time_stamp, json[QString("CreatedTimeStamp")]);
    m_created_time_stamp_isSet = !json[QString("CreatedTimeStamp")].isNull() && m_created_time_stamp_isValid;

    m_last_updated_time_stamp_isValid = ::OpenAPI::fromJsonValue(m_last_updated_time_stamp, json[QString("LastUpdatedTimeStamp")]);
    m_last_updated_time_stamp_isSet = !json[QString("LastUpdatedTimeStamp")].isNull() && m_last_updated_time_stamp_isValid;
}

QString OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::asJsonObject() const {
    QJsonObject obj;
    if (m_code_review_arn_isSet) {
        obj.insert(QString("CodeReviewArn"), ::OpenAPI::toJsonValue(m_code_review_arn));
    }
    if (m_recommendation_id_isSet) {
        obj.insert(QString("RecommendationId"), ::OpenAPI::toJsonValue(m_recommendation_id));
    }
    if (m_reactions.isSet()) {
        obj.insert(QString("Reactions"), ::OpenAPI::toJsonValue(m_reactions));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("UserId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_created_time_stamp_isSet) {
        obj.insert(QString("CreatedTimeStamp"), ::OpenAPI::toJsonValue(m_created_time_stamp));
    }
    if (m_last_updated_time_stamp_isSet) {
        obj.insert(QString("LastUpdatedTimeStamp"), ::OpenAPI::toJsonValue(m_last_updated_time_stamp));
    }
    return obj;
}

QString OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::getCodeReviewArn() const {
    return m_code_review_arn;
}
void OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::setCodeReviewArn(const QString &code_review_arn) {
    m_code_review_arn = code_review_arn;
    m_code_review_arn_isSet = true;
}

bool OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::is_code_review_arn_Set() const{
    return m_code_review_arn_isSet;
}

bool OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::is_code_review_arn_Valid() const{
    return m_code_review_arn_isValid;
}

QString OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::getRecommendationId() const {
    return m_recommendation_id;
}
void OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::setRecommendationId(const QString &recommendation_id) {
    m_recommendation_id = recommendation_id;
    m_recommendation_id_isSet = true;
}

bool OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::is_recommendation_id_Set() const{
    return m_recommendation_id_isSet;
}

bool OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::is_recommendation_id_Valid() const{
    return m_recommendation_id_isValid;
}

QList OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::getReactions() const {
    return m_reactions;
}
void OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::setReactions(const QList &reactions) {
    m_reactions = reactions;
    m_reactions_isSet = true;
}

bool OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::is_reactions_Set() const{
    return m_reactions_isSet;
}

bool OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::is_reactions_Valid() const{
    return m_reactions_isValid;
}

QString OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::getUserId() const {
    return m_user_id;
}
void OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QDateTime OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::getCreatedTimeStamp() const {
    return m_created_time_stamp;
}
void OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::setCreatedTimeStamp(const QDateTime &created_time_stamp) {
    m_created_time_stamp = created_time_stamp;
    m_created_time_stamp_isSet = true;
}

bool OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::is_created_time_stamp_Set() const{
    return m_created_time_stamp_isSet;
}

bool OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::is_created_time_stamp_Valid() const{
    return m_created_time_stamp_isValid;
}

QDateTime OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::getLastUpdatedTimeStamp() const {
    return m_last_updated_time_stamp;
}
void OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::setLastUpdatedTimeStamp(const QDateTime &last_updated_time_stamp) {
    m_last_updated_time_stamp = last_updated_time_stamp;
    m_last_updated_time_stamp_isSet = true;
}

bool OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::is_last_updated_time_stamp_Set() const{
    return m_last_updated_time_stamp_isSet;
}

bool OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::is_last_updated_time_stamp_Valid() const{
    return m_last_updated_time_stamp_isValid;
}

bool OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_review_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reactions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_time_stamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_time_stamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeRecommendationFeedbackResponse_RecommendationFeedback::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
