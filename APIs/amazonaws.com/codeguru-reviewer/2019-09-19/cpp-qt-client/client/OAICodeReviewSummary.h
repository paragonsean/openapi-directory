/**
 * Amazon CodeGuru Reviewer
 * <p>This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommends fixes in your Java and Python code.</p> <p>By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the <i> <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\">Amazon CodeGuru Reviewer User Guide</a>.</i> </p> <p>To improve the security of your CodeGuru Reviewer API calls, you can establish a private connection between your VPC and CodeGuru Reviewer by creating an <i>interface VPC endpoint</i>. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html\">CodeGuru Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-09-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICodeReviewSummary.h
 *
 * Information about the summary of the code review.
 */

#ifndef OAICodeReviewSummary_H
#define OAICodeReviewSummary_H

#include <QJsonObject>

#include "OAICodeReviewSummary_MetricsSummary.h"
#include "OAIJobState.h"
#include "OAIProviderType.h"
#include "OAISourceCodeType.h"
#include "OAIType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICodeReviewSummary_MetricsSummary;
class OAISourceCodeType;

class OAICodeReviewSummary : public OAIObject {
public:
    OAICodeReviewSummary();
    OAICodeReviewSummary(QString json);
    ~OAICodeReviewSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getCodeReviewArn() const;
    void setCodeReviewArn(const QString &code_review_arn);
    bool is_code_review_arn_Set() const;
    bool is_code_review_arn_Valid() const;

    QString getRepositoryName() const;
    void setRepositoryName(const QString &repository_name);
    bool is_repository_name_Set() const;
    bool is_repository_name_Valid() const;

    QString getOwner() const;
    void setOwner(const QString &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    OAIProviderType getProviderType() const;
    void setProviderType(const OAIProviderType &provider_type);
    bool is_provider_type_Set() const;
    bool is_provider_type_Valid() const;

    OAIJobState getState() const;
    void setState(const OAIJobState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QDateTime getCreatedTimeStamp() const;
    void setCreatedTimeStamp(const QDateTime &created_time_stamp);
    bool is_created_time_stamp_Set() const;
    bool is_created_time_stamp_Valid() const;

    QDateTime getLastUpdatedTimeStamp() const;
    void setLastUpdatedTimeStamp(const QDateTime &last_updated_time_stamp);
    bool is_last_updated_time_stamp_Set() const;
    bool is_last_updated_time_stamp_Valid() const;

    OAIType getType() const;
    void setType(const OAIType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getPullRequestId() const;
    void setPullRequestId(const QString &pull_request_id);
    bool is_pull_request_id_Set() const;
    bool is_pull_request_id_Valid() const;

    OAICodeReviewSummary_MetricsSummary getMetricsSummary() const;
    void setMetricsSummary(const OAICodeReviewSummary_MetricsSummary &metrics_summary);
    bool is_metrics_summary_Set() const;
    bool is_metrics_summary_Valid() const;

    OAISourceCodeType getSourceCodeType() const;
    void setSourceCodeType(const OAISourceCodeType &source_code_type);
    bool is_source_code_type_Set() const;
    bool is_source_code_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_code_review_arn;
    bool m_code_review_arn_isSet;
    bool m_code_review_arn_isValid;

    QString m_repository_name;
    bool m_repository_name_isSet;
    bool m_repository_name_isValid;

    QString m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    OAIProviderType m_provider_type;
    bool m_provider_type_isSet;
    bool m_provider_type_isValid;

    OAIJobState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QDateTime m_created_time_stamp;
    bool m_created_time_stamp_isSet;
    bool m_created_time_stamp_isValid;

    QDateTime m_last_updated_time_stamp;
    bool m_last_updated_time_stamp_isSet;
    bool m_last_updated_time_stamp_isValid;

    OAIType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_pull_request_id;
    bool m_pull_request_id_isSet;
    bool m_pull_request_id_isValid;

    OAICodeReviewSummary_MetricsSummary m_metrics_summary;
    bool m_metrics_summary_isSet;
    bool m_metrics_summary_isValid;

    OAISourceCodeType m_source_code_type;
    bool m_source_code_type_isSet;
    bool m_source_code_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICodeReviewSummary)

#endif // OAICodeReviewSummary_H
