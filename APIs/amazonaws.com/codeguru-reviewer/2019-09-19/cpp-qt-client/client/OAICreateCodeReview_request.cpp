/**
 * Amazon CodeGuru Reviewer
 * <p>This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommends fixes in your Java and Python code.</p> <p>By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the <i> <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\">Amazon CodeGuru Reviewer User Guide</a>.</i> </p> <p>To improve the security of your CodeGuru Reviewer API calls, you can establish a private connection between your VPC and CodeGuru Reviewer by creating an <i>interface VPC endpoint</i>. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html\">CodeGuru Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-09-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateCodeReview_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateCodeReview_request::OAICreateCodeReview_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateCodeReview_request::OAICreateCodeReview_request() {
    this->initializeModel();
}

OAICreateCodeReview_request::~OAICreateCodeReview_request() {}

void OAICreateCodeReview_request::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_repository_association_arn_isSet = false;
    m_repository_association_arn_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_client_request_token_isSet = false;
    m_client_request_token_isValid = false;
}

void OAICreateCodeReview_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateCodeReview_request::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_repository_association_arn_isValid = ::OpenAPI::fromJsonValue(m_repository_association_arn, json[QString("RepositoryAssociationArn")]);
    m_repository_association_arn_isSet = !json[QString("RepositoryAssociationArn")].isNull() && m_repository_association_arn_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_client_request_token_isValid = ::OpenAPI::fromJsonValue(m_client_request_token, json[QString("ClientRequestToken")]);
    m_client_request_token_isSet = !json[QString("ClientRequestToken")].isNull() && m_client_request_token_isValid;
}

QString OAICreateCodeReview_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateCodeReview_request::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_repository_association_arn_isSet) {
        obj.insert(QString("RepositoryAssociationArn"), ::OpenAPI::toJsonValue(m_repository_association_arn));
    }
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_client_request_token_isSet) {
        obj.insert(QString("ClientRequestToken"), ::OpenAPI::toJsonValue(m_client_request_token));
    }
    return obj;
}

QString OAICreateCodeReview_request::getName() const {
    return m_name;
}
void OAICreateCodeReview_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateCodeReview_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateCodeReview_request::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateCodeReview_request::getRepositoryAssociationArn() const {
    return m_repository_association_arn;
}
void OAICreateCodeReview_request::setRepositoryAssociationArn(const QString &repository_association_arn) {
    m_repository_association_arn = repository_association_arn;
    m_repository_association_arn_isSet = true;
}

bool OAICreateCodeReview_request::is_repository_association_arn_Set() const{
    return m_repository_association_arn_isSet;
}

bool OAICreateCodeReview_request::is_repository_association_arn_Valid() const{
    return m_repository_association_arn_isValid;
}

OAICreateCodeReview_request_Type OAICreateCodeReview_request::getType() const {
    return m_type;
}
void OAICreateCodeReview_request::setType(const OAICreateCodeReview_request_Type &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICreateCodeReview_request::is_type_Set() const{
    return m_type_isSet;
}

bool OAICreateCodeReview_request::is_type_Valid() const{
    return m_type_isValid;
}

QString OAICreateCodeReview_request::getClientRequestToken() const {
    return m_client_request_token;
}
void OAICreateCodeReview_request::setClientRequestToken(const QString &client_request_token) {
    m_client_request_token = client_request_token;
    m_client_request_token_isSet = true;
}

bool OAICreateCodeReview_request::is_client_request_token_Set() const{
    return m_client_request_token_isSet;
}

bool OAICreateCodeReview_request::is_client_request_token_Valid() const{
    return m_client_request_token_isValid;
}

bool OAICreateCodeReview_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repository_association_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_request_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateCodeReview_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_repository_association_arn_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
