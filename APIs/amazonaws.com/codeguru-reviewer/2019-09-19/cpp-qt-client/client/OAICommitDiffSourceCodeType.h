/**
 * Amazon CodeGuru Reviewer
 * <p>This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommends fixes in your Java and Python code.</p> <p>By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the <i> <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\">Amazon CodeGuru Reviewer User Guide</a>.</i> </p> <p>To improve the security of your CodeGuru Reviewer API calls, you can establish a private connection between your VPC and CodeGuru Reviewer by creating an <i>interface VPC endpoint</i>. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html\">CodeGuru Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-09-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICommitDiffSourceCodeType.h
 *
 * A type of &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType\&quot;&gt;SourceCodeType&lt;/a&gt; that specifies the commit diff for a pull request on an associated repository. The &lt;code&gt;SourceCommit&lt;/code&gt; and &lt;code&gt;DestinationCommit&lt;/code&gt; fields are required to do a pull request code review.
 */

#ifndef OAICommitDiffSourceCodeType_H
#define OAICommitDiffSourceCodeType_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICommitDiffSourceCodeType : public OAIObject {
public:
    OAICommitDiffSourceCodeType();
    OAICommitDiffSourceCodeType(QString json);
    ~OAICommitDiffSourceCodeType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSourceCommit() const;
    void setSourceCommit(const QString &source_commit);
    bool is_source_commit_Set() const;
    bool is_source_commit_Valid() const;

    QString getDestinationCommit() const;
    void setDestinationCommit(const QString &destination_commit);
    bool is_destination_commit_Set() const;
    bool is_destination_commit_Valid() const;

    QString getMergeBaseCommit() const;
    void setMergeBaseCommit(const QString &merge_base_commit);
    bool is_merge_base_commit_Set() const;
    bool is_merge_base_commit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_source_commit;
    bool m_source_commit_isSet;
    bool m_source_commit_isValid;

    QString m_destination_commit;
    bool m_destination_commit_isSet;
    bool m_destination_commit_isValid;

    QString m_merge_base_commit;
    bool m_merge_base_commit_isSet;
    bool m_merge_base_commit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICommitDiffSourceCodeType)

#endif // OAICommitDiffSourceCodeType_H
