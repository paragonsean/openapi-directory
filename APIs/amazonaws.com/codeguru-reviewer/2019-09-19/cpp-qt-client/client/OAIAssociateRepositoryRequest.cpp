/**
 * Amazon CodeGuru Reviewer
 * <p>This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommends fixes in your Java and Python code.</p> <p>By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the <i> <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\">Amazon CodeGuru Reviewer User Guide</a>.</i> </p> <p>To improve the security of your CodeGuru Reviewer API calls, you can establish a private connection between your VPC and CodeGuru Reviewer by creating an <i>interface VPC endpoint</i>. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html\">CodeGuru Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-09-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssociateRepositoryRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssociateRepositoryRequest::OAIAssociateRepositoryRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssociateRepositoryRequest::OAIAssociateRepositoryRequest() {
    this->initializeModel();
}

OAIAssociateRepositoryRequest::~OAIAssociateRepositoryRequest() {}

void OAIAssociateRepositoryRequest::initializeModel() {

    m_repository_isSet = false;
    m_repository_isValid = false;

    m_client_request_token_isSet = false;
    m_client_request_token_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_kms_key_details_isSet = false;
    m_kms_key_details_isValid = false;
}

void OAIAssociateRepositoryRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssociateRepositoryRequest::fromJsonObject(QJsonObject json) {

    m_repository_isValid = ::OpenAPI::fromJsonValue(m_repository, json[QString("Repository")]);
    m_repository_isSet = !json[QString("Repository")].isNull() && m_repository_isValid;

    m_client_request_token_isValid = ::OpenAPI::fromJsonValue(m_client_request_token, json[QString("ClientRequestToken")]);
    m_client_request_token_isSet = !json[QString("ClientRequestToken")].isNull() && m_client_request_token_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_kms_key_details_isValid = ::OpenAPI::fromJsonValue(m_kms_key_details, json[QString("KMSKeyDetails")]);
    m_kms_key_details_isSet = !json[QString("KMSKeyDetails")].isNull() && m_kms_key_details_isValid;
}

QString OAIAssociateRepositoryRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssociateRepositoryRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_repository.isSet()) {
        obj.insert(QString("Repository"), ::OpenAPI::toJsonValue(m_repository));
    }
    if (m_client_request_token_isSet) {
        obj.insert(QString("ClientRequestToken"), ::OpenAPI::toJsonValue(m_client_request_token));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_kms_key_details.isSet()) {
        obj.insert(QString("KMSKeyDetails"), ::OpenAPI::toJsonValue(m_kms_key_details));
    }
    return obj;
}

OAIAssociateRepositoryRequest_Repository OAIAssociateRepositoryRequest::getRepository() const {
    return m_repository;
}
void OAIAssociateRepositoryRequest::setRepository(const OAIAssociateRepositoryRequest_Repository &repository) {
    m_repository = repository;
    m_repository_isSet = true;
}

bool OAIAssociateRepositoryRequest::is_repository_Set() const{
    return m_repository_isSet;
}

bool OAIAssociateRepositoryRequest::is_repository_Valid() const{
    return m_repository_isValid;
}

QString OAIAssociateRepositoryRequest::getClientRequestToken() const {
    return m_client_request_token;
}
void OAIAssociateRepositoryRequest::setClientRequestToken(const QString &client_request_token) {
    m_client_request_token = client_request_token;
    m_client_request_token_isSet = true;
}

bool OAIAssociateRepositoryRequest::is_client_request_token_Set() const{
    return m_client_request_token_isSet;
}

bool OAIAssociateRepositoryRequest::is_client_request_token_Valid() const{
    return m_client_request_token_isValid;
}

QMap OAIAssociateRepositoryRequest::getTags() const {
    return m_tags;
}
void OAIAssociateRepositoryRequest::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIAssociateRepositoryRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIAssociateRepositoryRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

OAIAssociateRepositoryRequest_KMSKeyDetails OAIAssociateRepositoryRequest::getKmsKeyDetails() const {
    return m_kms_key_details;
}
void OAIAssociateRepositoryRequest::setKmsKeyDetails(const OAIAssociateRepositoryRequest_KMSKeyDetails &kms_key_details) {
    m_kms_key_details = kms_key_details;
    m_kms_key_details_isSet = true;
}

bool OAIAssociateRepositoryRequest::is_kms_key_details_Set() const{
    return m_kms_key_details_isSet;
}

bool OAIAssociateRepositoryRequest::is_kms_key_details_Valid() const{
    return m_kms_key_details_isValid;
}

bool OAIAssociateRepositoryRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_repository.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_request_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_kms_key_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssociateRepositoryRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_repository_isValid && true;
}

} // namespace OpenAPI
