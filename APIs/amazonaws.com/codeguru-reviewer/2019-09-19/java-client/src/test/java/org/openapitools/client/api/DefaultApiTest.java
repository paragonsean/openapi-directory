/*
 * Amazon CodeGuru Reviewer
 * <p>This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommends fixes in your Java and Python code.</p> <p>By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the <i> <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\">Amazon CodeGuru Reviewer User Guide</a>.</i> </p> <p>To improve the security of your CodeGuru Reviewer API calls, you can establish a private connection between your VPC and CodeGuru Reviewer by creating an <i>interface VPC endpoint</i>. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html\">CodeGuru Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-09-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AssociateRepositoryRequest;
import org.openapitools.client.model.AssociateRepositoryResponse;
import org.openapitools.client.model.CreateCodeReviewRequest;
import org.openapitools.client.model.CreateCodeReviewResponse;
import org.openapitools.client.model.DescribeCodeReviewResponse;
import org.openapitools.client.model.DescribeRecommendationFeedbackResponse;
import org.openapitools.client.model.DescribeRepositoryAssociationResponse;
import org.openapitools.client.model.DisassociateRepositoryResponse;
import org.openapitools.client.model.JobState;
import org.openapitools.client.model.ListCodeReviewsResponse;
import org.openapitools.client.model.ListRecommendationFeedbackResponse;
import org.openapitools.client.model.ListRecommendationsResponse;
import org.openapitools.client.model.ListRepositoryAssociationsResponse;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.ProviderType;
import org.openapitools.client.model.PutRecommendationFeedbackRequest;
import org.openapitools.client.model.RepositoryAssociationState;
import org.openapitools.client.model.TagResourceRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * &lt;p&gt;Use to associate an Amazon Web Services CodeCommit repository or a repository managed by Amazon Web Services CodeStar Connections with Amazon CodeGuru Reviewer. When you associate a repository, CodeGuru Reviewer reviews source code changes in the repository&#39;s pull requests and provides automatic recommendations. You can view recommendations using the CodeGuru Reviewer console. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/recommendations.html\&quot;&gt;Recommendations in Amazon CodeGuru Reviewer&lt;/a&gt; in the &lt;i&gt;Amazon CodeGuru Reviewer User Guide.&lt;/i&gt; &lt;/p&gt; &lt;p&gt;If you associate a CodeCommit or S3 repository, it must be in the same Amazon Web Services Region and Amazon Web Services account where its CodeGuru Reviewer code reviews are configured.&lt;/p&gt; &lt;p&gt;Bitbucket and GitHub Enterprise Server repositories are managed by Amazon Web Services CodeStar Connections to connect to CodeGuru Reviewer. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/getting-started-associate-repository.html\&quot;&gt;Associate a repository&lt;/a&gt; in the &lt;i&gt;Amazon CodeGuru Reviewer User Guide.&lt;/i&gt; &lt;/p&gt; &lt;note&gt; &lt;p&gt;You cannot use the CodeGuru Reviewer SDK or the Amazon Web Services CLI to associate a GitHub repository with Amazon CodeGuru Reviewer. To associate a GitHub repository, use the console. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/getting-started-with-guru.html\&quot;&gt;Getting started with CodeGuru Reviewer&lt;/a&gt; in the &lt;i&gt;CodeGuru Reviewer User Guide.&lt;/i&gt; &lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void associateRepositoryTest() throws ApiException {
        AssociateRepositoryRequest associateRepositoryRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        AssociateRepositoryResponse response = api.associateRepository(associateRepositoryRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Use to create a code review with a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReviewType.html\&quot;&gt;CodeReviewType&lt;/a&gt; of &lt;code&gt;RepositoryAnalysis&lt;/code&gt;. This type of code review analyzes all code under a specified branch in an associated repository. &lt;code&gt;PullRequest&lt;/code&gt; code reviews are automatically triggered by a pull request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCodeReviewTest() throws ApiException {
        CreateCodeReviewRequest createCodeReviewRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateCodeReviewResponse response = api.createCodeReview(createCodeReviewRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns the metadata associated with the code review along with its status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeCodeReviewTest() throws ApiException {
        String codeReviewArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeCodeReviewResponse response = api.describeCodeReview(codeReviewArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes the customer feedback for a CodeGuru Reviewer recommendation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeRecommendationFeedbackTest() throws ApiException {
        String codeReviewArn = null;
        String recommendationId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String userId = null;
        DescribeRecommendationFeedbackResponse response = api.describeRecommendationFeedback(codeReviewArn, recommendationId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, userId);
        // TODO: test validations
    }

    /**
     * Returns a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html\&quot;&gt;RepositoryAssociation&lt;/a&gt; object that contains information about the requested repository association.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeRepositoryAssociationTest() throws ApiException {
        String associationArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeRepositoryAssociationResponse response = api.describeRepositoryAssociation(associationArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes the association between Amazon CodeGuru Reviewer and a repository.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void disassociateRepositoryTest() throws ApiException {
        String associationArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DisassociateRepositoryResponse response = api.disassociateRepository(associationArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists all the code reviews that the customer has created in the past 90 days.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCodeReviewsTest() throws ApiException {
        String type = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<ProviderType> providerTypes = null;
        List<JobState> states = null;
        List<String> repositoryNames = null;
        Integer maxResults = null;
        String nextToken = null;
        ListCodeReviewsResponse response = api.listCodeReviews(type, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, providerTypes, states, repositoryNames, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns a list of &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RecommendationFeedbackSummary.html\&quot;&gt;RecommendationFeedbackSummary&lt;/a&gt; objects that contain customer recommendation feedback for all CodeGuru Reviewer users.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRecommendationFeedbackTest() throws ApiException {
        String codeReviewArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        List<String> userIds = null;
        List<String> recommendationIds = null;
        ListRecommendationFeedbackResponse response = api.listRecommendationFeedback(codeReviewArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults, userIds, recommendationIds);
        // TODO: test validations
    }

    /**
     * Returns the list of all recommendations for a completed code review.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRecommendationsTest() throws ApiException {
        String codeReviewArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        ListRecommendationsResponse response = api.listRecommendations(codeReviewArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     * Returns a list of &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html\&quot;&gt;RepositoryAssociationSummary&lt;/a&gt; objects that contain summary information about a repository association. You can filter the returned list by &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-ProviderType\&quot;&gt;ProviderType&lt;/a&gt;, &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-Name\&quot;&gt;Name&lt;/a&gt;, &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-State\&quot;&gt;State&lt;/a&gt;, and &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-Owner\&quot;&gt;Owner&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRepositoryAssociationsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        List<ProviderType> providerType = null;
        List<RepositoryAssociationState> state = null;
        List<String> name = null;
        List<String> owner = null;
        Integer maxResults = null;
        String nextToken = null;
        ListRepositoryAssociationsResponse response = api.listRepositoryAssociations(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, providerType, state, name, owner, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns the list of tags associated with an associated repository resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        String resourceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(resourceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Stores customer feedback for a CodeGuru Reviewer recommendation. When this API is called again with different reactions the previous feedback is overwritten.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putRecommendationFeedbackTest() throws ApiException {
        PutRecommendationFeedbackRequest putRecommendationFeedbackRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.putRecommendationFeedback(putRecommendationFeedbackRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Adds one or more tags to an associated repository.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String resourceArn = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.tagResource(resourceArn, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes a tag from an associated repository.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String resourceArn = null;
        List<String> tagKeys = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.untagResource(resourceArn, tagKeys, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
