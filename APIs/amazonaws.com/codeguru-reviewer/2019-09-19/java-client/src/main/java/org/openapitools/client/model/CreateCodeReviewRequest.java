/*
 * Amazon CodeGuru Reviewer
 * <p>This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommends fixes in your Java and Python code.</p> <p>By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the <i> <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\">Amazon CodeGuru Reviewer User Guide</a>.</i> </p> <p>To improve the security of your CodeGuru Reviewer API calls, you can establish a private connection between your VPC and CodeGuru Reviewer by creating an <i>interface VPC endpoint</i>. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html\">CodeGuru Reviewer and interface VPC endpoints (Amazon Web Services PrivateLink)</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-09-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateCodeReviewRequestType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateCodeReviewRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:28:00.218645-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateCodeReviewRequest {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_REPOSITORY_ASSOCIATION_ARN = "RepositoryAssociationArn";
  @SerializedName(SERIALIZED_NAME_REPOSITORY_ASSOCIATION_ARN)
  private String repositoryAssociationArn;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private CreateCodeReviewRequestType type;

  public static final String SERIALIZED_NAME_CLIENT_REQUEST_TOKEN = "ClientRequestToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUEST_TOKEN)
  private String clientRequestToken;

  public CreateCodeReviewRequest() {
  }

  public CreateCodeReviewRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the code review. The name of each code review in your Amazon Web Services account must be unique.
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateCodeReviewRequest repositoryAssociationArn(String repositoryAssociationArn) {
    this.repositoryAssociationArn = repositoryAssociationArn;
    return this;
  }

  /**
   * &lt;p&gt;The Amazon Resource Name (ARN) of the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html\&quot;&gt;RepositoryAssociation&lt;/a&gt; object. You can retrieve this ARN by calling &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html\&quot;&gt;ListRepositoryAssociations&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;A code review can only be created on an associated repository. This is the ARN of the associated repository.&lt;/p&gt;
   * @return repositoryAssociationArn
   */
  @javax.annotation.Nonnull
  public String getRepositoryAssociationArn() {
    return repositoryAssociationArn;
  }

  public void setRepositoryAssociationArn(String repositoryAssociationArn) {
    this.repositoryAssociationArn = repositoryAssociationArn;
  }


  public CreateCodeReviewRequest type(CreateCodeReviewRequestType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  public CreateCodeReviewRequestType getType() {
    return type;
  }

  public void setType(CreateCodeReviewRequestType type) {
    this.type = type;
  }


  public CreateCodeReviewRequest clientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
    return this;
  }

  /**
   * Amazon CodeGuru Reviewer uses this value to prevent the accidental creation of duplicate code reviews if there are failures and retries.
   * @return clientRequestToken
   */
  @javax.annotation.Nullable
  public String getClientRequestToken() {
    return clientRequestToken;
  }

  public void setClientRequestToken(String clientRequestToken) {
    this.clientRequestToken = clientRequestToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCodeReviewRequest createCodeReviewRequest = (CreateCodeReviewRequest) o;
    return Objects.equals(this.name, createCodeReviewRequest.name) &&
        Objects.equals(this.repositoryAssociationArn, createCodeReviewRequest.repositoryAssociationArn) &&
        Objects.equals(this.type, createCodeReviewRequest.type) &&
        Objects.equals(this.clientRequestToken, createCodeReviewRequest.clientRequestToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, repositoryAssociationArn, type, clientRequestToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCodeReviewRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    repositoryAssociationArn: ").append(toIndentedString(repositoryAssociationArn)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    clientRequestToken: ").append(toIndentedString(clientRequestToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("RepositoryAssociationArn");
    openapiFields.add("Type");
    openapiFields.add("ClientRequestToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Name");
    openapiRequiredFields.add("RepositoryAssociationArn");
    openapiRequiredFields.add("Type");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateCodeReviewRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateCodeReviewRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateCodeReviewRequest is not found in the empty JSON string", CreateCodeReviewRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateCodeReviewRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateCodeReviewRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateCodeReviewRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if (!jsonObj.get("RepositoryAssociationArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `RepositoryAssociationArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("RepositoryAssociationArn").toString()));
      }
      // validate the required field `Type`
      CreateCodeReviewRequestType.validateJsonElement(jsonObj.get("Type"));
      if ((jsonObj.get("ClientRequestToken") != null && !jsonObj.get("ClientRequestToken").isJsonNull()) && !jsonObj.get("ClientRequestToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ClientRequestToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ClientRequestToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateCodeReviewRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateCodeReviewRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateCodeReviewRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateCodeReviewRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateCodeReviewRequest>() {
           @Override
           public void write(JsonWriter out, CreateCodeReviewRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateCodeReviewRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateCodeReviewRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateCodeReviewRequest
   * @throws IOException if the JSON string is invalid with respect to CreateCodeReviewRequest
   */
  public static CreateCodeReviewRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateCodeReviewRequest.class);
  }

  /**
   * Convert an instance of CreateCodeReviewRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

