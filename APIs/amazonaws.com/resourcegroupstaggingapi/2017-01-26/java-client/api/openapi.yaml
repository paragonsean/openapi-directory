openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: <fullname>Resource Groups Tagging API</fullname>
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Resource Groups Tagging API
  version: 2017-01-26
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: resourcegroupstaggingapi
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/resourcegroupstaggingapi-2017-01-26.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/tagging/
servers:
- description: The AWS Resource Groups Tagging API multi-region endpoint
  url: "http://tagging.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Resource Groups Tagging API multi-region endpoint
  url: "https://tagging.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Resource Groups Tagging API endpoint for China (Beijing) and
    China (Ningxia)
  url: "http://tagging.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Resource Groups Tagging API endpoint for China (Beijing) and
    China (Ningxia)
  url: "https://tagging.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.DescribeReportCreation:
    post:
      description: <p>Describes the status of the <code>StartReportCreation</code>
        operation. </p> <p>You can call this operation only from the organization's
        management account and from the us-east-1 Region.</p>
      operationId: DescribeReportCreation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - ResourceGroupsTaggingAPI_20170126.DescribeReportCreation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeReportCreationInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReportCreationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
          description: ConstraintViolationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.GetComplianceSummary:
    post:
      description: "<p>Returns a table that shows counts of resources that are noncompliant\
        \ with their tag policies.</p> <p>For more information on tag policies, see\
        \ <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html\"\
        >Tag Policies</a> in the <i>Organizations User Guide.</i> </p> <p>You can\
        \ call this operation only from the organization's management account and\
        \ from the us-east-1 Region.</p> <p>This operation supports pagination, where\
        \ the response can be sent in multiple pages. You should check the <code>PaginationToken</code>\
        \ response parameter to determine if there are additional results available\
        \ to return. Repeat the query, passing the <code>PaginationToken</code> response\
        \ parameter value as an input to the next request until you recieve a <code>null</code>\
        \ value. A null value for <code>PaginationToken</code> indicates that there\
        \ are no more results waiting to be returned.</p>"
      operationId: GetComplianceSummary
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PaginationToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - ResourceGroupsTaggingAPI_20170126.GetComplianceSummary
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetComplianceSummaryInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetComplianceSummaryOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
          description: ConstraintViolationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.GetResources:
    post:
      description: "<p>Returns all the tagged or previously tagged resources that\
        \ are located in the specified Amazon Web Services Region for the account.</p>\
        \ <p>Depending on what information you want returned, you can also specify\
        \ the following:</p> <ul> <li> <p> <i>Filters</i> that specify what tags and\
        \ resource types you want returned. The response includes all tags that are\
        \ associated with the requested resources.</p> </li> <li> <p>Information about\
        \ compliance with the account's effective tag policy. For more information\
        \ on tag policies, see <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html\"\
        >Tag Policies</a> in the <i>Organizations User Guide.</i> </p> </li> </ul>\
        \ <p>This operation supports pagination, where the response can be sent in\
        \ multiple pages. You should check the <code>PaginationToken</code> response\
        \ parameter to determine if there are additional results available to return.\
        \ Repeat the query, passing the <code>PaginationToken</code> response parameter\
        \ value as an input to the next request until you recieve a <code>null</code>\
        \ value. A null value for <code>PaginationToken</code> indicates that there\
        \ are no more results waiting to be returned.</p>"
      operationId: GetResources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: ResourcesPerPage
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PaginationToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - ResourceGroupsTaggingAPI_20170126.GetResources
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResourcesInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationTokenExpiredException'
          description: PaginationTokenExpiredException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.GetTagKeys:
    post:
      description: "<p>Returns all tag keys currently in use in the specified Amazon\
        \ Web Services Region for the calling account.</p> <p>This operation supports\
        \ pagination, where the response can be sent in multiple pages. You should\
        \ check the <code>PaginationToken</code> response parameter to determine if\
        \ there are additional results available to return. Repeat the query, passing\
        \ the <code>PaginationToken</code> response parameter value as an input to\
        \ the next request until you recieve a <code>null</code> value. A null value\
        \ for <code>PaginationToken</code> indicates that there are no more results\
        \ waiting to be returned.</p>"
      operationId: GetTagKeys
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: PaginationToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - ResourceGroupsTaggingAPI_20170126.GetTagKeys
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTagKeysInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagKeysOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationTokenExpiredException'
          description: PaginationTokenExpiredException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.GetTagValues:
    post:
      description: "<p>Returns all tag values for the specified key that are used\
        \ in the specified Amazon Web Services Region for the calling account.</p>\
        \ <p>This operation supports pagination, where the response can be sent in\
        \ multiple pages. You should check the <code>PaginationToken</code> response\
        \ parameter to determine if there are additional results available to return.\
        \ Repeat the query, passing the <code>PaginationToken</code> response parameter\
        \ value as an input to the next request until you recieve a <code>null</code>\
        \ value. A null value for <code>PaginationToken</code> indicates that there\
        \ are no more results waiting to be returned.</p>"
      operationId: GetTagValues
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: PaginationToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - ResourceGroupsTaggingAPI_20170126.GetTagValues
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTagValuesInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagValuesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationTokenExpiredException'
          description: PaginationTokenExpiredException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.StartReportCreation:
    post:
      description: <p>Generates a report that lists all tagged resources in the accounts
        across your organization and tells whether each resource is compliant with
        the effective tag policy. Compliance data is refreshed daily. The report is
        generated asynchronously.</p> <p>The generated report is saved to the following
        location:</p> <p> <code>s3://example-bucket/AwsTagPolicies/o-exampleorgid/YYYY-MM-ddTHH:mm:ssZ/report.csv</code>
        </p> <p>You can call this operation only from the organization's management
        account and from the us-east-1 Region.</p>
      operationId: StartReportCreation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - ResourceGroupsTaggingAPI_20170126.StartReportCreation
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartReportCreationInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartReportCreationOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
          description: ConstraintViolationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.TagResources:
    post:
      description: "<p>Applies one or more tags to the specified resources. Note the\
        \ following:</p> <ul> <li> <p>Not all resources can have tags. For a list\
        \ of services with resources that support tagging using this operation, see\
        \ <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/supported-services.html\"\
        >Services that support the Resource Groups Tagging API</a>. If the resource\
        \ doesn't yet support this operation, the resource's service might support\
        \ tagging using its own API operations. For more information, refer to the\
        \ documentation for that service.</p> </li> <li> <p>Each resource can have\
        \ up to 50 tags. For other limits, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html#tag-conventions\"\
        >Tag Naming and Usage Conventions</a> in the <i>Amazon Web Services General\
        \ Reference.</i> </p> </li> <li> <p>You can only tag resources that are located\
        \ in the specified Amazon Web Services Region for the Amazon Web Services\
        \ account.</p> </li> <li> <p>To add tags to a resource, you need the necessary\
        \ permissions for the service that the resource belongs to as well as permissions\
        \ for adding tags. For more information, see the documentation for each service.</p>\
        \ </li> </ul> <important> <p>Do not store personally identifiable information\
        \ (PII) or other confidential or sensitive information in tags. We use tags\
        \ to provide you with billing and administration services. Tags are not intended\
        \ to be used for private or sensitive data.</p> </important> <p> <b>Minimum\
        \ permissions</b> </p> <p>In addition to the <code>tag:TagResources</code>\
        \ permission required by this operation, you must also have the tagging permission\
        \ defined by the service that created the resource. For example, to tag an\
        \ Amazon EC2 instance using the <code>TagResources</code> operation, you must\
        \ have both of the following permissions:</p> <ul> <li> <p> <code>tag:TagResource</code>\
        \ </p> </li> <li> <p> <code>ec2:CreateTags</code> </p> </li> </ul>"
      operationId: TagResources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - ResourceGroupsTaggingAPI_20170126.TagResources
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourcesInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourcesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.UntagResources:
    post:
      description: "<p>Removes the specified tags from the specified resources. When\
        \ you specify a tag key, the action removes both that key and its associated\
        \ value. The operation succeeds even if you attempt to remove tags from a\
        \ resource that were already removed. Note the following:</p> <ul> <li> <p>To\
        \ remove tags from a resource, you need the necessary permissions for the\
        \ service that the resource belongs to as well as permissions for removing\
        \ tags. For more information, see the documentation for the service whose\
        \ resource you want to untag.</p> </li> <li> <p>You can only tag resources\
        \ that are located in the specified Amazon Web Services Region for the calling\
        \ Amazon Web Services account.</p> </li> </ul> <p> <b>Minimum permissions</b>\
        \ </p> <p>In addition to the <code>tag:UntagResources</code> permission required\
        \ by this operation, you must also have the remove tags permission defined\
        \ by the service that created the resource. For example, to remove the tags\
        \ from an Amazon EC2 instance using the <code>UntagResources</code> operation,\
        \ you must have both of the following permissions:</p> <ul> <li> <p> <code>tag:UntagResource</code>\
        \ </p> </li> <li> <p> <code>ec2:DeleteTags</code> </p> </li> </ul>"
      operationId: UntagResources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - ResourceGroupsTaggingAPI_20170126.UntagResources
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourcesInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourcesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    DescribeReportCreationOutput:
      example:
        Status: ""
        ErrorMessage: ""
        S3Location: ""
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p>Reports the status of the operation.</p> <p>The operation
              status can be one of the following:</p> <ul> <li> <p> <code>RUNNING</code>
              - Report creation is in progress.</p> </li> <li> <p> <code>SUCCEEDED</code>
              - Report creation is complete. You can open the report from the Amazon
              S3 bucket that you specified when you ran <code>StartReportCreation</code>.</p>
              </li> <li> <p> <code>FAILED</code> - Report creation timed out or the
              Amazon S3 bucket is not accessible. </p> </li> <li> <p> <code>NO REPORT</code>
              - No report was generated in the last 90 days.</p> </li> </ul>
        S3Location:
          allOf:
          - $ref: '#/components/schemas/S3Location'
          - description: The path to the Amazon S3 bucket where the report was stored
              on creation.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: Details of the common errors that all operations return.
      type: object
    DescribeReportCreationInput:
      properties: {}
      title: DescribeReportCreationInput
      type: object
    ConstraintViolationException: {}
    InternalServiceException: {}
    InvalidParameterException: {}
    ThrottledException: {}
    GetComplianceSummaryOutput:
      example:
        SummaryList: ""
        PaginationToken: ""
      properties:
        SummaryList:
          allOf:
          - $ref: '#/components/schemas/SummaryList'
          - description: A table that shows counts of noncompliant resources.
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "A string that indicates that there is more data available\
              \ than this response contains. To receive the next part of the response,\
              \ specify this response value as the <code>PaginationToken</code> value\
              \ in the request for the next page."
      type: object
    GetComplianceSummaryInput:
      example:
        TargetIdFilters: ""
        GroupBy: ""
        MaxResults: ""
        TagKeyFilters: ""
        ResourceTypeFilters: ""
        PaginationToken: ""
        RegionFilters: ""
      properties:
        TargetIdFilters:
          allOf:
          - $ref: '#/components/schemas/TargetIdFilterList'
          - description: "Specifies target identifiers (usually, specific account\
              \ IDs) to limit the output by. If you use this parameter, the count\
              \ of returned noncompliant resources includes only resources with the\
              \ specified target IDs."
        RegionFilters:
          allOf:
          - $ref: '#/components/schemas/RegionFilterList'
          - description: "Specifies a list of Amazon Web Services Regions to limit\
              \ the output to. If you use this parameter, the count of returned noncompliant\
              \ resources includes only resources in the specified Regions."
        ResourceTypeFilters:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeFilterList'
          - description: "<p>Specifies that you want the response to include information\
              \ for only resources of the specified types. The format of each resource\
              \ type is <code>service[:resourceType]</code>. For example, specifying\
              \ a resource type of <code>ec2</code> returns all Amazon EC2 resources\
              \ (which includes EC2 instances). Specifying a resource type of <code>ec2:instance</code>\
              \ returns only EC2 instances.</p> <p>The string for each service name\
              \ and resource type is the same as that embedded in a resource's Amazon\
              \ Resource Name (ARN). Consult the <i> <a href=\"https://docs.aws.amazon.com/general/latest/gr/\"\
              >Amazon Web Services General Reference</a> </i> for the following:</p>\
              \ <ul> <li> <p>For a list of service name strings, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\"\
              >Amazon Web Services Service Namespaces</a>.</p> </li> <li> <p>For resource\
              \ type strings, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arns-syntax\"\
              >Example ARNs</a>.</p> </li> <li> <p>For more information about ARNs,\
              \ see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>.</p>\
              \ </li> </ul> <p>You can specify multiple resource types by using a\
              \ comma separated array. The array can include up to 100 items. Note\
              \ that the length constraint requirement applies to each resource type\
              \ filter. </p>"
        TagKeyFilters:
          allOf:
          - $ref: '#/components/schemas/TagKeyFilterList'
          - description: "Specifies that you want the response to include information\
              \ for only resources that have tags with the specified tag keys. If\
              \ you use this parameter, the count of returned noncompliant resources\
              \ includes only resources that have the specified tag keys."
        GroupBy:
          allOf:
          - $ref: '#/components/schemas/GroupBy'
          - description: "Specifies a list of attributes to group the counts of noncompliant\
              \ resources by. If supplied, the counts are sorted by those attributes."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsGetComplianceSummary'
          - description: "Specifies the maximum number of results to be returned in\
              \ each page. A query can return fewer than this maximum, even if there\
              \ are more results still to return. You should always check the <code>PaginationToken</code>\
              \ response value to see if there are more results. You can specify a\
              \ minimum of 1 and a maximum value of 100."
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Specifies a <code>PaginationToken</code> response value from
              a previous request to indicate that you want the next page of results.
              Leave this parameter empty in your initial request.
      title: GetComplianceSummaryInput
      type: object
    GetResourcesOutput:
      example:
        ResourceTagMappingList: ""
        PaginationToken: ""
      properties:
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "A string that indicates that there is more data available\
              \ than this response contains. To receive the next part of the response,\
              \ specify this response value as the <code>PaginationToken</code> value\
              \ in the request for the next page."
        ResourceTagMappingList:
          allOf:
          - $ref: '#/components/schemas/ResourceTagMappingList'
          - description: A list of resource ARNs and the tags (keys and values) associated
              with each.
      type: object
    GetResourcesInput:
      example:
        TagsPerPage: ""
        TagFilters: ""
        ResourceARNList: ""
        IncludeComplianceDetails: ""
        ResourceTypeFilters: ""
        ExcludeCompliantResources: ""
        PaginationToken: ""
        ResourcesPerPage: ""
      properties:
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Specifies a <code>PaginationToken</code> response value from
              a previous request to indicate that you want the next page of results.
              Leave this parameter empty in your initial request.
        TagFilters:
          allOf:
          - $ref: '#/components/schemas/TagFilterList'
          - description: "<p>Specifies a list of TagFilters (keys and values) to restrict\
              \ the output to only those resources that have tags with the specified\
              \ keys and, if included, the specified values. Each <code>TagFilter</code>\
              \ must contain a key with values optional. A request can include up\
              \ to 50 keys, and each key can include up to 20 values. </p> <p>Note\
              \ the following when deciding how to use TagFilters:</p> <ul> <li> <p>If\
              \ you <i>don't</i> specify a <code>TagFilter</code>, the response includes\
              \ all resources that are currently tagged or ever had a tag. Resources\
              \ that currently don't have tags are shown with an empty tag set, like\
              \ this: <code>\"Tags\": []</code>.</p> </li> <li> <p>If you specify\
              \ more than one filter in a single request, the response returns only\
              \ those resources that satisfy all filters.</p> </li> <li> <p>If you\
              \ specify a filter that contains more than one value for a key, the\
              \ response returns resources that match <i>any</i> of the specified\
              \ values for that key.</p> </li> <li> <p>If you don't specify a value\
              \ for a key, the response returns all resources that are tagged with\
              \ that key, with any or no value.</p> <p>For example, for the following\
              \ filters: <code>filter1= {keyA,{value1}}</code>, <code>filter2={keyB,{value2,value3,value4}}</code>,\
              \ <code>filter3= {keyC}</code>:</p> <ul> <li> <p> <code>GetResources({filter1})</code>\
              \ returns resources tagged with <code>key1=value1</code> </p> </li>\
              \ <li> <p> <code>GetResources({filter2})</code> returns resources tagged\
              \ with <code>key2=value2</code> or <code>key2=value3</code> or <code>key2=value4</code>\
              \ </p> </li> <li> <p> <code>GetResources({filter3})</code> returns resources\
              \ tagged with any tag with the key <code>key3</code>, and with any or\
              \ no value</p> </li> <li> <p> <code>GetResources({filter1,filter2,filter3})</code>\
              \ returns resources tagged with <code>(key1=value1) and (key2=value2\
              \ or key2=value3 or key2=value4) and (key3, any or no value)</code>\
              \ </p> </li> </ul> </li> </ul>"
        ResourcesPerPage:
          allOf:
          - $ref: '#/components/schemas/ResourcesPerPage'
          - description: "Specifies the maximum number of results to be returned in\
              \ each page. A query can return fewer than this maximum, even if there\
              \ are more results still to return. You should always check the <code>PaginationToken</code>\
              \ response value to see if there are more results. You can specify a\
              \ minimum of 1 and a maximum value of 100."
        TagsPerPage:
          allOf:
          - $ref: '#/components/schemas/TagsPerPage'
          - description: "<p>Amazon Web Services recommends using <code>ResourcesPerPage</code>\
              \ instead of this parameter.</p> <p>A limit that restricts the number\
              \ of tags (key and value pairs) returned by <code>GetResources</code>\
              \ in paginated output. A resource with no tags is counted as having\
              \ one tag (one key and value pair).</p> <p> <code>GetResources</code>\
              \ does not split a resource and its associated tags across pages. If\
              \ the specified <code>TagsPerPage</code> would cause such a break, a\
              \ <code>PaginationToken</code> is returned in place of the affected\
              \ resource and its tags. Use that token in another request to get the\
              \ remaining data. For example, if you specify a <code>TagsPerPage</code>\
              \ of <code>100</code> and the account has 22 resources with 10 tags\
              \ each (meaning that each resource has 10 key and value pairs), the\
              \ output will consist of three pages. The first page displays the first\
              \ 10 resources, each with its 10 tags. The second page displays the\
              \ next 10 resources, each with its 10 tags. The third page displays\
              \ the remaining 2 resources, each with its 10 tags.</p> <p>You can set\
              \ <code>TagsPerPage</code> to a minimum of 100 items up to a maximum\
              \ of 500 items.</p>"
        ResourceTypeFilters:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeFilterList'
          - description: "<p>Specifies the resource types that you want included in\
              \ the response. The format of each resource type is <code>service[:resourceType]</code>.\
              \ For example, specifying a resource type of <code>ec2</code> returns\
              \ all Amazon EC2 resources (which includes EC2 instances). Specifying\
              \ a resource type of <code>ec2:instance</code> returns only EC2 instances.\
              \ </p> <p>The string for each service name and resource type is the\
              \ same as that embedded in a resource's Amazon Resource Name (ARN).\
              \ For the list of services whose resources you can use in this parameter,\
              \ see <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/supported-services.html\"\
              >Services that support the Resource Groups Tagging API</a>.</p> <p>You\
              \ can specify multiple resource types by using an array. The array can\
              \ include up to 100 items. Note that the length constraint requirement\
              \ applies to each resource type filter. For example, the following string\
              \ would limit the response to only Amazon EC2 instances, Amazon S3 buckets,\
              \ or any Audit Manager resource:</p> <p> <code>ec2:instance,s3:bucket,auditmanager</code>\
              \ </p>"
        IncludeComplianceDetails:
          allOf:
          - $ref: '#/components/schemas/IncludeComplianceDetails'
          - description: Specifies whether to include details regarding the compliance
              with the effective tag policy. Set this to <code>true</code> to determine
              whether resources are compliant with the tag policy and to get details.
        ExcludeCompliantResources:
          allOf:
          - $ref: '#/components/schemas/ExcludeCompliantResources'
          - description: <p>Specifies whether to exclude resources that are compliant
              with the tag policy. Set this to <code>true</code> if you are interested
              in retrieving information on noncompliant resources only.</p> <p>You
              can use this parameter only if the <code>IncludeComplianceDetails</code>
              parameter is also set to <code>true</code>.</p>
        ResourceARNList:
          allOf:
          - $ref: '#/components/schemas/ResourceARNListForGet'
          - description: "<p>Specifies a list of ARNs of resources for which you want\
              \ to retrieve tag data. You can't specify both this parameter and any\
              \ of the pagination parameters (<code>ResourcesPerPage</code>, <code>TagsPerPage</code>,\
              \ <code>PaginationToken</code>) in the same request. If you specify\
              \ both, you get an <code>Invalid Parameter</code> exception.</p> <p>If\
              \ a resource specified by this parameter doesn't exist, it doesn't generate\
              \ an error; it simply isn't included in the response.</p> <p>An ARN\
              \ (Amazon Resource Name) uniquely identifies a resource. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>\
              \ in the <i>Amazon Web Services General Reference</i>.</p>"
      title: GetResourcesInput
      type: object
    PaginationTokenExpiredException: {}
    GetTagKeysOutput:
      example:
        PaginationToken: ""
        TagKeys: ""
      properties:
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "A string that indicates that there is more data available\
              \ than this response contains. To receive the next part of the response,\
              \ specify this response value as the <code>PaginationToken</code> value\
              \ in the request for the next page."
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: A list of all tag keys in the Amazon Web Services account.
      type: object
    GetTagKeysInput:
      example:
        PaginationToken: ""
      properties:
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Specifies a <code>PaginationToken</code> response value from
              a previous request to indicate that you want the next page of results.
              Leave this parameter empty in your initial request.
      title: GetTagKeysInput
      type: object
    GetTagValuesOutput:
      example:
        PaginationToken: ""
        TagValues: ""
      properties:
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "A string that indicates that there is more data available\
              \ than this response contains. To receive the next part of the response,\
              \ specify this response value as the <code>PaginationToken</code> value\
              \ in the request for the next page."
        TagValues:
          allOf:
          - $ref: '#/components/schemas/TagValuesOutputList'
          - description: A list of all tag values for the specified key currently
              used in the specified Amazon Web Services Region for the calling account.
      type: object
    GetTagValuesInput:
      example:
        PaginationToken: ""
        Key: ""
      properties:
        PaginationToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Specifies a <code>PaginationToken</code> response value from
              a previous request to indicate that you want the next page of results.
              Leave this parameter empty in your initial request.
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: Specifies the tag key for which you want to list all existing
              values that are currently used in the specified Amazon Web Services
              Region for the calling account.
      required:
      - Key
      title: GetTagValuesInput
      type: object
    StartReportCreationOutput:
      properties: {}
      type: object
    StartReportCreationInput:
      example:
        S3Bucket: ""
      properties:
        S3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: "<p>The name of the Amazon S3 bucket where the report will\
              \ be stored; for example:</p> <p> <code>awsexamplebucket</code> </p>\
              \ <p>For more information on S3 bucket requirements, including an example\
              \ bucket policy, see the example S3 bucket policy on this page.</p>"
      required:
      - S3Bucket
      title: StartReportCreationInput
      type: object
    ConcurrentModificationException: {}
    TagResourcesOutput:
      example:
        FailedResourcesMap: ""
      properties:
        FailedResourcesMap:
          allOf:
          - $ref: '#/components/schemas/FailedResourcesMap'
          - description: "A map containing a key-value pair for each failed item that\
              \ couldn't be tagged. The key is the ARN of the failed resource. The\
              \ value is a <code>FailureInfo</code> object that contains an error\
              \ code, a status code, and an error message. If there are no errors,\
              \ the <code>FailedResourcesMap</code> is empty."
      type: object
    TagResourcesInput:
      example:
        ResourceARNList: ""
        Tags: ""
      properties:
        ResourceARNList:
          allOf:
          - $ref: '#/components/schemas/ResourceARNListForTagUntag'
          - description: "<p>Specifies the list of ARNs of the resources that you\
              \ want to apply tags to.</p> <p>An ARN (Amazon Resource Name) uniquely\
              \ identifies a resource. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>\
              \ in the <i>Amazon Web Services General Reference</i>.</p>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: Specifies a list of tags that you want to add to the specified
              resources. A tag consists of a key and a value that you define.
      required:
      - ResourceARNList
      - Tags
      title: TagResourcesInput
      type: object
    UntagResourcesOutput:
      example:
        FailedResourcesMap: ""
      properties:
        FailedResourcesMap:
          allOf:
          - $ref: '#/components/schemas/FailedResourcesMap'
          - description: "A map containing a key-value pair for each failed item that\
              \ couldn't be untagged. The key is the ARN of the failed resource. The\
              \ value is a <code>FailureInfo</code> object that contains an error\
              \ code, a status code, and an error message. If there are no errors,\
              \ the <code>FailedResourcesMap</code> is empty."
      type: object
    UntagResourcesInput:
      example:
        ResourceARNList: ""
        TagKeys: ""
      properties:
        ResourceARNList:
          allOf:
          - $ref: '#/components/schemas/ResourceARNListForTagUntag'
          - description: "<p>Specifies a list of ARNs of the resources that you want\
              \ to remove tags from.</p> <p>An ARN (Amazon Resource Name) uniquely\
              \ identifies a resource. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a>\
              \ in the <i>Amazon Web Services General Reference</i>.</p>"
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyListForUntag'
          - description: Specifies a list of tag keys that you want to remove from
              the specified resources.
      required:
      - ResourceARNList
      - TagKeys
      title: UntagResourcesInput
      type: object
    AmazonResourceType:
      maxLength: 256
      minLength: 0
      pattern: "[\\s\\S]*"
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    ComplianceStatus:
      type: boolean
    ComplianceDetails:
      description: "Information that shows whether a resource is compliant with the\
        \ effective tag policy, including details on any noncompliant tag keys."
      properties:
        NoncompliantKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: These tag keys on the resource are noncompliant with the
              effective tag policy.
        KeysWithNoncompliantValues:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: 'These are keys defined in the effective policy that are
              on the resource with either incorrect case treatment or noncompliant
              values. '
        ComplianceStatus:
          allOf:
          - $ref: '#/components/schemas/ComplianceStatus'
          - description: Whether a resource is compliant with the effective tag policy.
      type: object
    Status:
      type: string
    S3Location:
      type: string
    ErrorMessage:
      type: string
    ErrorCode:
      enum:
      - InternalServiceException
      - InvalidParameterException
      type: string
    ExcludeCompliantResources:
      type: boolean
    FailureInfo:
      description: "<p>Information about the errors that are returned for each failed\
        \ resource. This information can include <code>InternalServiceException</code>\
        \ and <code>InvalidParameterException</code> errors. It can also include any\
        \ valid error code returned by the Amazon Web Services service that hosts\
        \ the resource that the ARN key represents.</p> <p>The following are common\
        \ error codes that you might receive from other Amazon Web Services services:</p>\
        \ <ul> <li> <p> <b>InternalServiceException</b> – This can mean that the Resource\
        \ Groups Tagging API didn't receive a response from another Amazon Web Services\
        \ service. It can also mean that the resource type in the request is not supported\
        \ by the Resource Groups Tagging API. In these cases, it's safe to retry the\
        \ request and then call <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\"\
        >GetResources</a> to verify the changes.</p> </li> <li> <p> <b>AccessDeniedException</b>\
        \ – This can mean that you need permission to call the tagging operations\
        \ in the Amazon Web Services service that contains the resource. For example,\
        \ to use the Resource Groups Tagging API to tag a Amazon CloudWatch alarm\
        \ resource, you need permission to call both <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_TagResources.html\"\
        > <code>TagResources</code> </a> <i>and</i> <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_TagResource.html\"\
        > <code>TagResource</code> </a> in the CloudWatch API. </p> </li> </ul> <p>For\
        \ more information on errors that are generated from other Amazon Web Services\
        \ services, see the documentation for that service. </p>"
      properties:
        StatusCode:
          allOf:
          - $ref: '#/components/schemas/StatusCode'
          - description: The HTTP status code of the common error.
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: "The code of the common error. Valid values include <code>InternalServiceException</code>,\
              \ <code>InvalidParameterException</code>, and any valid error code returned\
              \ by the Amazon Web Services service that hosts the resource that you\
              \ want to tag."
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: The message of the common error.
      type: object
    FailedResourcesMap:
      additionalProperties:
        $ref: '#/components/schemas/FailureInfo'
      type: object
    StatusCode:
      type: integer
    TargetIdFilterList:
      items:
        $ref: '#/components/schemas/TargetId'
      maxItems: 100
      minItems: 1
      type: array
    RegionFilterList:
      items:
        $ref: '#/components/schemas/Region'
      maxItems: 100
      minItems: 1
      type: array
    ResourceTypeFilterList:
      items:
        $ref: '#/components/schemas/AmazonResourceType'
      type: array
    TagKeyFilterList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    GroupBy:
      items:
        $ref: '#/components/schemas/GroupByAttribute'
      type: array
    MaxResultsGetComplianceSummary:
      maximum: 1000
      minimum: 1
      type: integer
    PaginationToken:
      maxLength: 2048
      minLength: 0
      pattern: "[\\s\\S]*"
      type: string
    SummaryList:
      items:
        $ref: '#/components/schemas/Summary'
      type: array
    TagFilterList:
      items:
        $ref: '#/components/schemas/TagFilter'
      maxItems: 50
      minItems: 0
      type: array
    ResourcesPerPage:
      type: integer
    TagsPerPage:
      type: integer
    IncludeComplianceDetails:
      type: boolean
    ResourceARNListForGet:
      items:
        $ref: '#/components/schemas/ResourceARN'
      maxItems: 100
      minItems: 1
      type: array
    ResourceTagMappingList:
      items:
        $ref: '#/components/schemas/ResourceTagMapping'
      type: array
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "[\\s\\S]*"
      type: string
    TagValuesOutputList:
      items:
        $ref: '#/components/schemas/TagValue'
      type: array
    GroupByAttribute:
      enum:
      - TARGET_ID
      - REGION
      - RESOURCE_TYPE
      type: string
    LastUpdated:
      type: string
    NonCompliantResources:
      type: integer
    Region:
      maxLength: 256
      minLength: 1
      pattern: "[\\s\\S]*"
      type: string
    ResourceARN:
      maxLength: 1011
      minLength: 1
      pattern: "[\\s\\S]*"
      type: string
    ResourceARNListForTagUntag:
      items:
        $ref: '#/components/schemas/ResourceARN'
      maxItems: 20
      minItems: 1
      type: array
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    ResourceTagMapping:
      description: A list of resource ARNs and the tags (keys and values) that are
        associated with each.
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: The ARN of the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags that have been applied to one or more Amazon Web
              Services resources.
        ComplianceDetails:
          $ref: '#/components/schemas/ResourceTagMapping_ComplianceDetails'
      type: object
    S3Bucket:
      maxLength: 63
      minLength: 3
      pattern: "[a-z0-9.-]*"
      type: string
    TargetId:
      maxLength: 68
      minLength: 6
      pattern: "[a-zA-Z0-9-]*"
      type: string
    TargetIdType:
      enum:
      - ACCOUNT
      - OU
      - ROOT
      type: string
    Summary:
      description: A count of noncompliant resources.
      properties:
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/LastUpdated'
          - description: 'The timestamp that shows when this summary was generated
              in this Region. '
        TargetId:
          allOf:
          - $ref: '#/components/schemas/TargetId'
          - description: "The account identifier or the root identifier of the organization.\
              \ If you don't know the root ID, you can call the Organizations <a href=\"\
              https://docs.aws.amazon.com/organizations/latest/APIReference/API_ListRoots.html\"\
              >ListRoots</a> API."
        TargetIdType:
          allOf:
          - $ref: '#/components/schemas/TargetIdType'
          - description: "Whether the target is an account, an OU, or the organization\
              \ root."
        Region:
          allOf:
          - $ref: '#/components/schemas/Region'
          - description: The Amazon Web Services Region that the summary applies to.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceType'
          - description: The Amazon Web Services resource type.
        NonCompliantResources:
          allOf:
          - $ref: '#/components/schemas/NonCompliantResources'
          - description: The count of noncompliant resources.
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "[\\s\\S]*"
      type: string
    Tag:
      description: "The metadata that you apply to Amazon Web Services resources to\
        \ help you categorize and organize them. Each tag consists of a key and a\
        \ value, both of which you define. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
        >Tagging Amazon Web Services Resources</a> in the <i>Amazon Web Services General\
        \ Reference</i>."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: One part of a key-value pair that makes up a tag. A key is
              a general label that acts like a category for more specific tag values.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: One part of a key-value pair that make up a tag. A value
              acts as a descriptor within a tag category (key). The value can be empty
              or null.
      required:
      - Key
      - Value
      type: object
    TagValueList:
      items:
        $ref: '#/components/schemas/TagValue'
      maxItems: 20
      minItems: 0
      type: array
    TagFilter:
      description: A list of tags (keys and values) that are used to specify the associated
        resources.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: One part of a key-value pair that makes up a tag. A key is
              a general label that acts like a category for more specific tag values.
        Values:
          allOf:
          - $ref: '#/components/schemas/TagValueList'
          - description: One part of a key-value pair that make up a tag. A value
              acts as a descriptor within a tag category (key). The value can be empty
              or null.
      type: object
    TagKeyListForUntag:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 1
      type: object
    ResourceTagMapping_ComplianceDetails:
      allOf:
      - $ref: '#/components/schemas/ComplianceDetails'
      - description: "Information that shows whether a resource is compliant with\
          \ the effective tag policy, including details on any noncompliant tag keys."
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

