# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeReportCreationOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: str=None, s3_location: str=None, error_message: str=None):
        """DescribeReportCreationOutput - a model defined in OpenAPI

        :param status: The status of this DescribeReportCreationOutput.
        :param s3_location: The s3_location of this DescribeReportCreationOutput.
        :param error_message: The error_message of this DescribeReportCreationOutput.
        """
        self.openapi_types = {
            'status': str,
            's3_location': str,
            'error_message': str
        }

        self.attribute_map = {
            'status': 'Status',
            's3_location': 'S3Location',
            'error_message': 'ErrorMessage'
        }

        self._status = status
        self._s3_location = s3_location
        self._error_message = error_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeReportCreationOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeReportCreationOutput of this DescribeReportCreationOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this DescribeReportCreationOutput.


        :return: The status of this DescribeReportCreationOutput.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeReportCreationOutput.


        :param status: The status of this DescribeReportCreationOutput.
        :type status: str
        """

        self._status = status

    @property
    def s3_location(self):
        """Gets the s3_location of this DescribeReportCreationOutput.


        :return: The s3_location of this DescribeReportCreationOutput.
        :rtype: str
        """
        return self._s3_location

    @s3_location.setter
    def s3_location(self, s3_location):
        """Sets the s3_location of this DescribeReportCreationOutput.


        :param s3_location: The s3_location of this DescribeReportCreationOutput.
        :type s3_location: str
        """

        self._s3_location = s3_location

    @property
    def error_message(self):
        """Gets the error_message of this DescribeReportCreationOutput.


        :return: The error_message of this DescribeReportCreationOutput.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this DescribeReportCreationOutput.


        :param error_message: The error_message of this DescribeReportCreationOutput.
        :type error_message: str
        """

        self._error_message = error_message
