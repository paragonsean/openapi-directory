/**
 * AWS Resource Groups Tagging API
 * <fullname>Resource Groups Tagging API</fullname>
 *
 * The version of the OpenAPI document: 2017-01-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFailureInfo.h
 *
 * &lt;p&gt;Information about the errors that are returned for each failed resource. This information can include &lt;code&gt;InternalServiceException&lt;/code&gt; and &lt;code&gt;InvalidParameterException&lt;/code&gt; errors. It can also include any valid error code returned by the Amazon Web Services service that hosts the resource that the ARN key represents.&lt;/p&gt; &lt;p&gt;The following are common error codes that you might receive from other Amazon Web Services services:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;InternalServiceException&lt;/b&gt; – This can mean that the Resource Groups Tagging API didn&#39;t receive a response from another Amazon Web Services service. It can also mean that the resource type in the request is not supported by the Resource Groups Tagging API. In these cases, it&#39;s safe to retry the request and then call &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html\&quot;&gt;GetResources&lt;/a&gt; to verify the changes.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;AccessDeniedException&lt;/b&gt; – This can mean that you need permission to call the tagging operations in the Amazon Web Services service that contains the resource. For example, to use the Resource Groups Tagging API to tag a Amazon CloudWatch alarm resource, you need permission to call both &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_TagResources.html\&quot;&gt; &lt;code&gt;TagResources&lt;/code&gt; &lt;/a&gt; &lt;i&gt;and&lt;/i&gt; &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_TagResource.html\&quot;&gt; &lt;code&gt;TagResource&lt;/code&gt; &lt;/a&gt; in the CloudWatch API. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information on errors that are generated from other Amazon Web Services services, see the documentation for that service. &lt;/p&gt;
 */

#ifndef OAIFailureInfo_H
#define OAIFailureInfo_H

#include <QJsonObject>

#include "OAIErrorCode.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFailureInfo : public OAIObject {
public:
    OAIFailureInfo();
    OAIFailureInfo(QString json);
    ~OAIFailureInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getStatusCode() const;
    void setStatusCode(const qint32 &status_code);
    bool is_status_code_Set() const;
    bool is_status_code_Valid() const;

    OAIErrorCode getErrorCode() const;
    void setErrorCode(const OAIErrorCode &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_status_code;
    bool m_status_code_isSet;
    bool m_status_code_isValid;

    OAIErrorCode m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFailureInfo)

#endif // OAIFailureInfo_H
