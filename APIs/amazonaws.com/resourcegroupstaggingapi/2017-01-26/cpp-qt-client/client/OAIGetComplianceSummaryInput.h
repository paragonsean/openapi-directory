/**
 * AWS Resource Groups Tagging API
 * <fullname>Resource Groups Tagging API</fullname>
 *
 * The version of the OpenAPI document: 2017-01-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetComplianceSummaryInput.h
 *
 * 
 */

#ifndef OAIGetComplianceSummaryInput_H
#define OAIGetComplianceSummaryInput_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetComplianceSummaryInput : public OAIObject {
public:
    OAIGetComplianceSummaryInput();
    OAIGetComplianceSummaryInput(QString json);
    ~OAIGetComplianceSummaryInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getTargetIdFilters() const;
    void setTargetIdFilters(const QList &target_id_filters);
    bool is_target_id_filters_Set() const;
    bool is_target_id_filters_Valid() const;

    QList getRegionFilters() const;
    void setRegionFilters(const QList &region_filters);
    bool is_region_filters_Set() const;
    bool is_region_filters_Valid() const;

    QList getResourceTypeFilters() const;
    void setResourceTypeFilters(const QList &resource_type_filters);
    bool is_resource_type_filters_Set() const;
    bool is_resource_type_filters_Valid() const;

    QList getTagKeyFilters() const;
    void setTagKeyFilters(const QList &tag_key_filters);
    bool is_tag_key_filters_Set() const;
    bool is_tag_key_filters_Valid() const;

    QList getGroupBy() const;
    void setGroupBy(const QList &group_by);
    bool is_group_by_Set() const;
    bool is_group_by_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getPaginationToken() const;
    void setPaginationToken(const QString &pagination_token);
    bool is_pagination_token_Set() const;
    bool is_pagination_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_target_id_filters;
    bool m_target_id_filters_isSet;
    bool m_target_id_filters_isValid;

    QList m_region_filters;
    bool m_region_filters_isSet;
    bool m_region_filters_isValid;

    QList m_resource_type_filters;
    bool m_resource_type_filters_isSet;
    bool m_resource_type_filters_isValid;

    QList m_tag_key_filters;
    bool m_tag_key_filters_isSet;
    bool m_tag_key_filters_isValid;

    QList m_group_by;
    bool m_group_by_isSet;
    bool m_group_by_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_pagination_token;
    bool m_pagination_token_isSet;
    bool m_pagination_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetComplianceSummaryInput)

#endif // OAIGetComplianceSummaryInput_H
