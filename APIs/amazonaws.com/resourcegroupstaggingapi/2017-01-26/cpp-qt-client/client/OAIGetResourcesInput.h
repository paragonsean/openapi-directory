/**
 * AWS Resource Groups Tagging API
 * <fullname>Resource Groups Tagging API</fullname>
 *
 * The version of the OpenAPI document: 2017-01-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetResourcesInput.h
 *
 * 
 */

#ifndef OAIGetResourcesInput_H
#define OAIGetResourcesInput_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetResourcesInput : public OAIObject {
public:
    OAIGetResourcesInput();
    OAIGetResourcesInput(QString json);
    ~OAIGetResourcesInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPaginationToken() const;
    void setPaginationToken(const QString &pagination_token);
    bool is_pagination_token_Set() const;
    bool is_pagination_token_Valid() const;

    QList getTagFilters() const;
    void setTagFilters(const QList &tag_filters);
    bool is_tag_filters_Set() const;
    bool is_tag_filters_Valid() const;

    qint32 getResourcesPerPage() const;
    void setResourcesPerPage(const qint32 &resources_per_page);
    bool is_resources_per_page_Set() const;
    bool is_resources_per_page_Valid() const;

    qint32 getTagsPerPage() const;
    void setTagsPerPage(const qint32 &tags_per_page);
    bool is_tags_per_page_Set() const;
    bool is_tags_per_page_Valid() const;

    QList getResourceTypeFilters() const;
    void setResourceTypeFilters(const QList &resource_type_filters);
    bool is_resource_type_filters_Set() const;
    bool is_resource_type_filters_Valid() const;

    bool getIncludeComplianceDetails() const;
    void setIncludeComplianceDetails(const bool &include_compliance_details);
    bool is_include_compliance_details_Set() const;
    bool is_include_compliance_details_Valid() const;

    bool getExcludeCompliantResources() const;
    void setExcludeCompliantResources(const bool &exclude_compliant_resources);
    bool is_exclude_compliant_resources_Set() const;
    bool is_exclude_compliant_resources_Valid() const;

    QList getResourceArnList() const;
    void setResourceArnList(const QList &resource_arn_list);
    bool is_resource_arn_list_Set() const;
    bool is_resource_arn_list_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_pagination_token;
    bool m_pagination_token_isSet;
    bool m_pagination_token_isValid;

    QList m_tag_filters;
    bool m_tag_filters_isSet;
    bool m_tag_filters_isValid;

    qint32 m_resources_per_page;
    bool m_resources_per_page_isSet;
    bool m_resources_per_page_isValid;

    qint32 m_tags_per_page;
    bool m_tags_per_page_isSet;
    bool m_tags_per_page_isValid;

    QList m_resource_type_filters;
    bool m_resource_type_filters_isSet;
    bool m_resource_type_filters_isValid;

    bool m_include_compliance_details;
    bool m_include_compliance_details_isSet;
    bool m_include_compliance_details_isValid;

    bool m_exclude_compliant_resources;
    bool m_exclude_compliant_resources_isSet;
    bool m_exclude_compliant_resources_isValid;

    QList m_resource_arn_list;
    bool m_resource_arn_list_isSet;
    bool m_resource_arn_list_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetResourcesInput)

#endif // OAIGetResourcesInput_H
