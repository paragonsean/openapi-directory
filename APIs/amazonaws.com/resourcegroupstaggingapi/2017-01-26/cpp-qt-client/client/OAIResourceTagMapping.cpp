/**
 * AWS Resource Groups Tagging API
 * <fullname>Resource Groups Tagging API</fullname>
 *
 * The version of the OpenAPI document: 2017-01-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResourceTagMapping.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResourceTagMapping::OAIResourceTagMapping(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResourceTagMapping::OAIResourceTagMapping() {
    this->initializeModel();
}

OAIResourceTagMapping::~OAIResourceTagMapping() {}

void OAIResourceTagMapping::initializeModel() {

    m_resource_arn_isSet = false;
    m_resource_arn_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_compliance_details_isSet = false;
    m_compliance_details_isValid = false;
}

void OAIResourceTagMapping::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResourceTagMapping::fromJsonObject(QJsonObject json) {

    m_resource_arn_isValid = ::OpenAPI::fromJsonValue(m_resource_arn, json[QString("ResourceARN")]);
    m_resource_arn_isSet = !json[QString("ResourceARN")].isNull() && m_resource_arn_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_compliance_details_isValid = ::OpenAPI::fromJsonValue(m_compliance_details, json[QString("ComplianceDetails")]);
    m_compliance_details_isSet = !json[QString("ComplianceDetails")].isNull() && m_compliance_details_isValid;
}

QString OAIResourceTagMapping::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResourceTagMapping::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_arn_isSet) {
        obj.insert(QString("ResourceARN"), ::OpenAPI::toJsonValue(m_resource_arn));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_compliance_details.isSet()) {
        obj.insert(QString("ComplianceDetails"), ::OpenAPI::toJsonValue(m_compliance_details));
    }
    return obj;
}

QString OAIResourceTagMapping::getResourceArn() const {
    return m_resource_arn;
}
void OAIResourceTagMapping::setResourceArn(const QString &resource_arn) {
    m_resource_arn = resource_arn;
    m_resource_arn_isSet = true;
}

bool OAIResourceTagMapping::is_resource_arn_Set() const{
    return m_resource_arn_isSet;
}

bool OAIResourceTagMapping::is_resource_arn_Valid() const{
    return m_resource_arn_isValid;
}

QList OAIResourceTagMapping::getTags() const {
    return m_tags;
}
void OAIResourceTagMapping::setTags(const QList &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIResourceTagMapping::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIResourceTagMapping::is_tags_Valid() const{
    return m_tags_isValid;
}

OAIResourceTagMapping_ComplianceDetails OAIResourceTagMapping::getComplianceDetails() const {
    return m_compliance_details;
}
void OAIResourceTagMapping::setComplianceDetails(const OAIResourceTagMapping_ComplianceDetails &compliance_details) {
    m_compliance_details = compliance_details;
    m_compliance_details_isSet = true;
}

bool OAIResourceTagMapping::is_compliance_details_Set() const{
    return m_compliance_details_isSet;
}

bool OAIResourceTagMapping::is_compliance_details_Valid() const{
    return m_compliance_details_isValid;
}

bool OAIResourceTagMapping::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_compliance_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResourceTagMapping::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
