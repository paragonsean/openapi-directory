openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p> <b>Introduction</b> </p> <p>The Amazon Interactive Video Service\
    \ (IVS) API is REST compatible, using a standard HTTP API and an Amazon Web Services\
    \ EventBridge event stream for responses. JSON is used for both requests and responses,\
    \ including errors.</p> <p>The API is an Amazon Web Services regional service.\
    \ For a list of supported regions and Amazon IVS HTTPS service endpoints, see\
    \ the <a href=\"https://docs.aws.amazon.com/general/latest/gr/ivs.html\">Amazon\
    \ IVS page</a> in the <i>Amazon Web Services General Reference</i>.</p> <p> <i>\
    \ <b>All API request parameters and URLs are case sensitive. </b> </i> </p> <p>For\
    \ a summary of notable documentation changes in each release, see <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/doc-history.html\"\
    > Document History</a>.</p> <p> <b>Allowed Header Values</b> </p> <ul> <li> <p>\
    \ <code> <b>Accept:</b> </code> application/json</p> </li> <li> <p> <code> <b>Accept-Encoding:</b>\
    \ </code> gzip, deflate</p> </li> <li> <p> <code> <b>Content-Type:</b> </code>application/json</p>\
    \ </li> </ul> <p> <b>Resources</b> </p> <p>The following resources contain information\
    \ about your IVS live stream (see <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/getting-started.html\"\
    > Getting Started with Amazon IVS</a>):</p> <ul> <li> <p> <b>Channel</b> — Stores\
    \ configuration data related to your live stream. You first create a channel and\
    \ then use the channel’s stream key to start your live stream. See the Channel\
    \ endpoints for more information. </p> </li> <li> <p> <b>Stream key</b> — An identifier\
    \ assigned by Amazon IVS when you create a channel, which is then used to authorize\
    \ streaming. See the StreamKey endpoints for more information. <i> <b>Treat the\
    \ stream key like a secret, since it allows anyone to stream to the channel.</b>\
    \ </i> </p> </li> <li> <p> <b>Playback key pair</b> — Video playback may be restricted\
    \ using playback-authorization tokens, which use public-key encryption. A playback\
    \ key pair is the public-private pair of keys used to sign and validate the playback-authorization\
    \ token. See the PlaybackKeyPair endpoints for more information.</p> </li> <li>\
    \ <p> <b>Recording configuration</b> — Stores configuration related to recording\
    \ a live stream and where to store the recorded content. Multiple channels can\
    \ reference the same recording configuration. See the Recording Configuration\
    \ endpoints for more information.</p> </li> </ul> <p> <b>Tagging</b> </p> <p>A\
    \ <i>tag</i> is a metadata label that you assign to an Amazon Web Services resource.\
    \ A tag comprises a <i>key</i> and a <i>value</i>, both set by you. For example,\
    \ you might set a tag as <code>topic:nature</code> to label a particular video\
    \ category. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
    >Tagging Amazon Web Services Resources</a> for more information, including restrictions\
    \ that apply to tags and \"Tag naming limits and requirements\"; Amazon IVS has\
    \ no service-specific constraints beyond what is documented there.</p> <p>Tags\
    \ can help you identify and organize your Amazon Web Services resources. For example,\
    \ you can use the same tag for different resources to indicate that they are related.\
    \ You can also use tags to manage access (see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html\"\
    > Access Tags</a>). </p> <p>The Amazon IVS API has these tag-related endpoints:\
    \ <a>TagResource</a>, <a>UntagResource</a>, and <a>ListTagsForResource</a>. The\
    \ following resources support tagging: Channels, Stream Keys, Playback Key Pairs,\
    \ and Recording Configurations.</p> <p>At most 50 tags can be applied to a resource.\
    \ </p> <p> <b>Authentication versus Authorization</b> </p> <p>Note the differences\
    \ between these concepts:</p> <ul> <li> <p> <i>Authentication</i> is about verifying\
    \ identity. You need to be authenticated to sign Amazon IVS API requests.</p>\
    \ </li> <li> <p> <i>Authorization</i> is about granting permissions. Your IAM\
    \ roles need to have permissions for Amazon IVS API requests. In addition, authorization\
    \ is needed to view <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/private-channels.html\"\
    >Amazon IVS private channels</a>. (Private channels are channels that are enabled\
    \ for \"playback authorization.\")</p> </li> </ul> <p> <b>Authentication</b> </p>\
    \ <p>All Amazon IVS API requests must be authenticated with a signature. The Amazon\
    \ Web Services Command-Line Interface (CLI) and Amazon IVS Player SDKs take care\
    \ of signing the underlying API calls for you. However, if your application calls\
    \ the Amazon IVS API directly, it’s your responsibility to sign the requests.</p>\
    \ <p>You generate a signature using valid Amazon Web Services credentials that\
    \ have permission to perform the requested action. For example, you must sign\
    \ PutMetadata requests with a signature generated from a user account that has\
    \ the <code>ivs:PutMetadata</code> permission.</p> <p>For more information:</p>\
    \ <ul> <li> <p>Authentication and generating signatures — See <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html\"\
    >Authenticating Requests (Amazon Web Services Signature Version 4)</a> in the\
    \ <i>Amazon Web Services General Reference</i>.</p> </li> <li> <p>Managing Amazon\
    \ IVS permissions — See <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/security-iam.html\"\
    >Identity and Access Management</a> on the Security page of the <i>Amazon IVS\
    \ User Guide</i>.</p> </li> </ul> <p> <b>Amazon Resource Names (ARNs)</b> </p>\
    \ <p>ARNs uniquely identify AWS resources. An ARN is required when you need to\
    \ specify a resource unambiguously across all of AWS, such as in IAM policies\
    \ and API calls. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
    >Amazon Resource Names</a> in the <i>AWS General Reference</i>.</p> <p> <b>Channel\
    \ Endpoints</b> </p> <ul> <li> <p> <a>CreateChannel</a> — Creates a new channel\
    \ and an associated stream key to start streaming.</p> </li> <li> <p> <a>GetChannel</a>\
    \ — Gets the channel configuration for the specified channel ARN.</p> </li> <li>\
    \ <p> <a>BatchGetChannel</a> — Performs <a>GetChannel</a> on multiple ARNs simultaneously.</p>\
    \ </li> <li> <p> <a>ListChannels</a> — Gets summary information about all channels\
    \ in your account, in the Amazon Web Services region where the API request is\
    \ processed. This list can be filtered to match a specified name or recording-configuration\
    \ ARN. Filters are mutually exclusive and cannot be used together. If you try\
    \ to use both filters, you will get an error (409 Conflict Exception).</p> </li>\
    \ <li> <p> <a>UpdateChannel</a> — Updates a channel's configuration. This does\
    \ not affect an ongoing stream of this channel. You must stop and restart the\
    \ stream for the changes to take effect.</p> </li> <li> <p> <a>DeleteChannel</a>\
    \ — Deletes the specified channel.</p> </li> </ul> <p> <b>StreamKey Endpoints</b>\
    \ </p> <ul> <li> <p> <a>CreateStreamKey</a> — Creates a stream key, used to initiate\
    \ a stream, for the specified channel ARN.</p> </li> <li> <p> <a>GetStreamKey</a>\
    \ — Gets stream key information for the specified ARN.</p> </li> <li> <p> <a>BatchGetStreamKey</a>\
    \ — Performs <a>GetStreamKey</a> on multiple ARNs simultaneously.</p> </li> <li>\
    \ <p> <a>ListStreamKeys</a> — Gets summary information about stream keys for the\
    \ specified channel.</p> </li> <li> <p> <a>DeleteStreamKey</a> — Deletes the stream\
    \ key for the specified ARN, so it can no longer be used to stream.</p> </li>\
    \ </ul> <p> <b>Stream Endpoints</b> </p> <ul> <li> <p> <a>GetStream</a> — Gets\
    \ information about the active (live) stream on a specified channel.</p> </li>\
    \ <li> <p> <a>GetStreamSession</a> — Gets metadata on a specified stream.</p>\
    \ </li> <li> <p> <a>ListStreams</a> — Gets summary information about live streams\
    \ in your account, in the Amazon Web Services region where the API request is\
    \ processed.</p> </li> <li> <p> <a>ListStreamSessions</a> — Gets a summary of\
    \ current and previous streams for a specified channel in your account, in the\
    \ AWS region where the API request is processed.</p> </li> <li> <p> <a>StopStream</a>\
    \ — Disconnects the incoming RTMPS stream for the specified channel. Can be used\
    \ in conjunction with <a>DeleteStreamKey</a> to prevent further streaming to a\
    \ channel.</p> </li> <li> <p> <a>PutMetadata</a> — Inserts metadata into the active\
    \ stream of the specified channel. At most 5 requests per second per channel are\
    \ allowed, each with a maximum 1 KB payload. (If 5 TPS is not sufficient for your\
    \ needs, we recommend batching your data into a single PutMetadata call.) At most\
    \ 155 requests per second per account are allowed.</p> </li> </ul> <p> <b>Private\
    \ Channel Endpoints</b> </p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/private-channels.html\"\
    >Setting Up Private Channels</a> in the <i>Amazon IVS User Guide</i>.</p> <ul>\
    \ <li> <p> <a>ImportPlaybackKeyPair</a> — Imports the public portion of a new\
    \ key pair and returns its <code>arn</code> and <code>fingerprint</code>. The\
    \ <code>privateKey</code> can then be used to generate viewer authorization tokens,\
    \ to grant viewers access to private channels (channels enabled for playback authorization).</p>\
    \ </li> <li> <p> <a>GetPlaybackKeyPair</a> — Gets a specified playback authorization\
    \ key pair and returns the <code>arn</code> and <code>fingerprint</code>. The\
    \ <code>privateKey</code> held by the caller can be used to generate viewer authorization\
    \ tokens, to grant viewers access to private channels.</p> </li> <li> <p> <a>ListPlaybackKeyPairs</a>\
    \ — Gets summary information about playback key pairs.</p> </li> <li> <p> <a>DeletePlaybackKeyPair</a>\
    \ — Deletes a specified authorization key pair. This invalidates future viewer\
    \ tokens generated using the key pair’s <code>privateKey</code>.</p> </li> <li>\
    \ <p> <a>StartViewerSessionRevocation</a> — Starts the process of revoking the\
    \ viewer session associated with a specified channel ARN and viewer ID. Optionally,\
    \ you can provide a version to revoke viewer sessions less than and including\
    \ that version.</p> </li> <li> <p> <a>BatchStartViewerSessionRevocation</a> —\
    \ Performs <a>StartViewerSessionRevocation</a> on multiple channel ARN and viewer\
    \ ID pairs simultaneously.</p> </li> </ul> <p> <b>RecordingConfiguration Endpoints</b>\
    \ </p> <ul> <li> <p> <a>CreateRecordingConfiguration</a> — Creates a new recording\
    \ configuration, used to enable recording to Amazon S3.</p> </li> <li> <p> <a>GetRecordingConfiguration</a>\
    \ — Gets the recording-configuration metadata for the specified ARN.</p> </li>\
    \ <li> <p> <a>ListRecordingConfigurations</a> — Gets summary information about\
    \ all recording configurations in your account, in the Amazon Web Services region\
    \ where the API request is processed.</p> </li> <li> <p> <a>DeleteRecordingConfiguration</a>\
    \ — Deletes the recording configuration for the specified ARN.</p> </li> </ul>\
    \ <p> <b>Amazon Web Services Tags Endpoints</b> </p> <ul> <li> <p> <a>TagResource</a>\
    \ — Adds or updates tags for the Amazon Web Services resource with the specified\
    \ ARN.</p> </li> <li> <p> <a>UntagResource</a> — Removes tags from the resource\
    \ with the specified ARN.</p> </li> <li> <p> <a>ListTagsForResource</a> — Gets\
    \ information about Amazon Web Services tags for the specified ARN.</p> </li>\
    \ </ul>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Interactive Video Service
  version: 2020-07-14
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: ivs
  x-aws-signingName: ivs
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ivs-2020-07-14.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/ivs/
servers:
- description: The Amazon IVS multi-region endpoint
  url: "http://ivs.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon IVS multi-region endpoint
  url: "https://ivs.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon IVS endpoint for China (Beijing) and China (Ningxia)
  url: "http://ivs.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon IVS endpoint for China (Beijing) and China (Ningxia)
  url: "https://ivs.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /BatchGetChannel:
    post:
      description: Performs <a>GetChannel</a> on multiple ARNs simultaneously.
      operationId: BatchGetChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetChannelResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /BatchGetStreamKey:
    post:
      description: Performs <a>GetStreamKey</a> on multiple ARNs simultaneously.
      operationId: BatchGetStreamKey
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetStreamKey_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetStreamKeyResponse'
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /BatchStartViewerSessionRevocation:
    post:
      description: Performs <a>StartViewerSessionRevocation</a> on multiple channel
        ARN and viewer ID pairs simultaneously.
      operationId: BatchStartViewerSessionRevocation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchStartViewerSessionRevocation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStartViewerSessionRevocationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingVerification'
          description: PendingVerification
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /CreateChannel:
    post:
      description: Creates a new channel and an associated stream key to start streaming.
      operationId: CreateChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingVerification'
          description: PendingVerification
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /CreateRecordingConfiguration:
    post:
      description: "<p>Creates a new recording configuration, used to enable recording\
        \ to Amazon S3.</p> <p> <b>Known issue:</b> In the us-east-1 region, if you\
        \ use the Amazon Web Services CLI to create a recording configuration, it\
        \ returns success even if the S3 bucket is in a different region. In this\
        \ case, the <code>state</code> of the recording configuration is <code>CREATE_FAILED</code>\
        \ (instead of <code>ACTIVE</code>). (In other regions, the CLI correctly returns\
        \ failure if the bucket is in a different region.)</p> <p> <b>Workaround:</b>\
        \ Ensure that your S3 bucket is in the same region as the recording configuration.\
        \ If you create a recording configuration in a different region as your S3\
        \ bucket, delete that recording configuration and create a new one with an\
        \ S3 bucket from the correct region.</p>"
      operationId: CreateRecordingConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecordingConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRecordingConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingVerification'
          description: PendingVerification
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /CreateStreamKey:
    post:
      description: "<p>Creates a stream key, used to initiate a stream, for the specified\
        \ channel ARN.</p> <p>Note that <a>CreateChannel</a> creates a stream key.\
        \ If you subsequently use CreateStreamKey on the same channel, it will fail\
        \ because a stream key already exists and there is a limit of 1 stream key\
        \ per channel. To reset the stream key on a channel, use <a>DeleteStreamKey</a>\
        \ and then CreateStreamKey.</p>"
      operationId: CreateStreamKey
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStreamKey_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStreamKeyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingVerification'
          description: PendingVerification
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DeleteChannel:
    post:
      description: "<p>Deletes the specified channel and its associated stream keys.</p>\
        \ <p>If you try to delete a live channel, you will get an error (409 ConflictException).\
        \ To delete a channel that is live, call <a>StopStream</a>, wait for the Amazon\
        \ EventBridge \"Stream End\" event (to verify that the stream's state is no\
        \ longer Live), then call DeleteChannel. (See <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/eventbridge.html\"\
        > Using EventBridge with Amazon IVS</a>.) </p>"
      operationId: DeleteChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteChannel_request'
        required: true
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingVerification'
          description: PendingVerification
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DeletePlaybackKeyPair:
    post:
      description: "Deletes a specified authorization key pair. This invalidates future\
        \ viewer tokens generated using the key pair’s <code>privateKey</code>. For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/private-channels.html\"\
        >Setting Up Private Channels</a> in the <i>Amazon IVS User Guide</i>."
      operationId: DeletePlaybackKeyPair
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePlaybackKeyPair_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePlaybackKeyPairResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingVerification'
          description: PendingVerification
      x-content-type: application/json
      x-accepts:
      - application/json
  /DeleteRecordingConfiguration:
    post:
      description: "<p>Deletes the recording configuration for the specified ARN.</p>\
        \ <p>If you try to delete a recording configuration that is associated with\
        \ a channel, you will get an error (409 ConflictException). To avoid this,\
        \ for all channels that reference the recording configuration, first use <a>UpdateChannel</a>\
        \ to set the <code>recordingConfigurationArn</code> field to an empty string,\
        \ then use DeleteRecordingConfiguration.</p>"
      operationId: DeleteRecordingConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRecordingConfiguration_request'
        required: true
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /DeleteStreamKey:
    post:
      description: "Deletes the stream key for the specified ARN, so it can no longer\
        \ be used to stream."
      operationId: DeleteStreamKey
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteStreamKey_request'
        required: true
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingVerification'
          description: PendingVerification
      x-content-type: application/json
      x-accepts:
      - application/json
  /GetChannel:
    post:
      description: Gets the channel configuration for the specified channel ARN. See
        also <a>BatchGetChannel</a>.
      operationId: GetChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /GetPlaybackKeyPair:
    post:
      description: "Gets a specified playback authorization key pair and returns the\
        \ <code>arn</code> and <code>fingerprint</code>. The <code>privateKey</code>\
        \ held by the caller can be used to generate viewer authorization tokens,\
        \ to grant viewers access to private channels. For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/ivs/latest/userguide/private-channels.html\"\
        >Setting Up Private Channels</a> in the <i>Amazon IVS User Guide</i>."
      operationId: GetPlaybackKeyPair
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPlaybackKeyPair_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlaybackKeyPairResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /GetRecordingConfiguration:
    post:
      description: Gets the recording configuration for the specified ARN.
      operationId: GetRecordingConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRecordingConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecordingConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /GetStream:
    post:
      description: Gets information about the active (live) stream on a specified
        channel.
      operationId: GetStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetStream_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStreamResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelNotBroadcasting'
          description: ChannelNotBroadcasting
      x-content-type: application/json
      x-accepts:
      - application/json
  /GetStreamKey:
    post:
      description: Gets stream-key information for a specified ARN.
      operationId: GetStreamKey
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetStreamKey_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStreamKeyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /GetStreamSession:
    post:
      description: Gets metadata on a specified stream.
      operationId: GetStreamSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetStreamSession_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStreamSessionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ImportPlaybackKeyPair:
    post:
      description: "Imports the public portion of a new key pair and returns its <code>arn</code>\
        \ and <code>fingerprint</code>. The <code>privateKey</code> can then be used\
        \ to generate viewer authorization tokens, to grant viewers access to private\
        \ channels. For more information, see <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/private-channels.html\"\
        >Setting Up Private Channels</a> in the <i>Amazon IVS User Guide</i>."
      operationId: ImportPlaybackKeyPair
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportPlaybackKeyPair_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportPlaybackKeyPairResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingVerification'
          description: PendingVerification
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListChannels:
    post:
      description: "Gets summary information about all channels in your account, in\
        \ the Amazon Web Services region where the API request is processed. This\
        \ list can be filtered to match a specified name or recording-configuration\
        \ ARN. Filters are mutually exclusive and cannot be used together. If you\
        \ try to use both filters, you will get an error (409 ConflictException)."
      operationId: ListChannels
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListChannels_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListPlaybackKeyPairs:
    post:
      description: "Gets summary information about playback key pairs. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/private-channels.html\"\
        >Setting Up Private Channels</a> in the <i>Amazon IVS User Guide</i>."
      operationId: ListPlaybackKeyPairs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPlaybackKeyPairs_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPlaybackKeyPairsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListRecordingConfigurations:
    post:
      description: "Gets summary information about all recording configurations in\
        \ your account, in the Amazon Web Services region where the API request is\
        \ processed."
      operationId: ListRecordingConfigurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRecordingConfigurations_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecordingConfigurationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListStreamKeys:
    post:
      description: Gets summary information about stream keys for the specified channel.
      operationId: ListStreamKeys
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListStreamKeys_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamKeysResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListStreamSessions:
    post:
      description: "Gets a summary of current and previous streams for a specified\
        \ channel in your account, in the AWS region where the API request is processed."
      operationId: ListStreamSessions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListStreamSessions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamSessionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /ListStreams:
    post:
      description: "Gets summary information about live streams in your account, in\
        \ the Amazon Web Services region where the API request is processed."
      operationId: ListStreams
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListStreams_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: Gets information about Amazon Web Services tags for the specified
        ARN.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource to be retrieved. The ARN must be URL-encoded.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:[a-z-]/[a-zA-Z0-9-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
    post:
      description: Adds or updates tags for the Amazon Web Services resource with
        the specified ARN.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ARN of the resource for which tags are to be added or updated.
          The ARN must be URL-encoded.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:[a-z-]/[a-zA-Z0-9-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /PutMetadata:
    post:
      description: "Inserts metadata into the active stream of the specified channel.\
        \ At most 5 requests per second per channel are allowed, each with a maximum\
        \ 1 KB payload. (If 5 TPS is not sufficient for your needs, we recommend batching\
        \ your data into a single PutMetadata call.) At most 155 requests per second\
        \ per account are allowed. Also see <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/metadata.html\"\
        >Embedding Metadata within a Video Stream</a> in the <i>Amazon IVS User Guide</i>."
      operationId: PutMetadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMetadata_request'
        required: true
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelNotBroadcasting'
          description: ChannelNotBroadcasting
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /StartViewerSessionRevocation:
    post:
      description: "Starts the process of revoking the viewer session associated with\
        \ a specified channel ARN and viewer ID. Optionally, you can provide a version\
        \ to revoke viewer sessions less than and including that version. For instructions\
        \ on associating a viewer ID with a viewer session, see <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/private-channels.html\"\
        >Setting Up Private Channels</a>."
      operationId: StartViewerSessionRevocation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartViewerSessionRevocation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartViewerSessionRevocationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingVerification'
          description: PendingVerification
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /StopStream:
    post:
      description: "<p>Disconnects the incoming RTMPS stream for the specified channel.\
        \ Can be used in conjunction with <a>DeleteStreamKey</a> to prevent further\
        \ streaming to a channel.</p> <note> <p>Many streaming client-software libraries\
        \ automatically reconnect a dropped RTMPS session, so to stop the stream permanently,\
        \ you may want to first revoke the <code>streamKey</code> attached to the\
        \ channel.</p> </note>"
      operationId: StopStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopStream_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopStreamResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelNotBroadcasting'
          description: ChannelNotBroadcasting
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamUnavailable'
          description: StreamUnavailable
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Removes tags from the resource with the specified ARN.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ARN of the resource for which tags are to be removed. The ARN
          must be URL-encoded.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:[a-z-]/[a-zA-Z0-9-]+$"
          type: string
        style: simple
      - description: "Array of tags to be removed. Array of maps, each of the form\
          \ s<code>tring:string (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
          >Tagging Amazon Web Services Resources</a> for more information, including\
          \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
          ; Amazon IVS has no service-specific constraints beyond what is documented\
          \ there."
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-accepts:
      - application/json
  /UpdateChannel:
    post:
      description: "Updates a channel's configuration. Live channels cannot be updated.\
        \ You must stop the ongoing stream, update the channel, and restart the stream\
        \ for the changes to take effect."
      operationId: UpdateChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingVerification'
          description: PendingVerification
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BatchGetChannelResponse:
      example:
        channels: ""
        errors: ""
      properties:
        channels:
          allOf:
          - $ref: '#/components/schemas/Channels'
          - description: <p/>
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchErrors'
          - description: Each error object is related to a specific ARN in the request.
      type: object
    ChannelArn:
      maxLength: 128
      minLength: 1
      pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$"
      type: string
    BatchGetStreamKeyResponse:
      example:
        streamKeys: ""
        errors: ""
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchErrors'
          - description: <p/>
        streamKeys:
          allOf:
          - $ref: '#/components/schemas/StreamKeys'
          - description: <p/>
      type: object
    StreamKeyArn:
      maxLength: 128
      minLength: 1
      pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:stream-key/[a-zA-Z0-9-]+$"
      type: string
    BatchStartViewerSessionRevocationResponse:
      example:
        errors: ""
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchStartViewerSessionRevocationErrors'
          - description: Each error object is related to a specific <code>channelArn</code>
              and <code>viewerId</code> pair in the request.
      type: object
    BatchStartViewerSessionRevocationViewerSession:
      description: A viewer session to revoke in the call to <a>BatchStartViewerSessionRevocation</a>.
      properties:
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: The ARN of the channel associated with the viewer session
              to revoke.
        viewerId:
          allOf:
          - $ref: '#/components/schemas/ViewerId'
          - description: "The ID of the viewer associated with the viewer session\
              \ to revoke. Do not use this field for personally identifying, confidential,\
              \ or sensitive information."
        viewerSessionVersionsLessThanOrEqualTo:
          allOf:
          - $ref: '#/components/schemas/ViewerSessionVersion'
          - description: "An optional filter on which versions of the viewer session\
              \ to revoke. All versions less than or equal to the specified version\
              \ will be revoked. Default: 0."
      required:
      - channelArn
      - viewerId
      type: object
    AccessDeniedException: {}
    ValidationException: {}
    PendingVerification: {}
    ThrottlingException: {}
    CreateChannelResponse:
      example:
        streamKey:
          channelArn: ""
          arn: ""
          value: ""
          tags: ""
        channel:
          latencyMode: ""
          ingestEndpoint: ""
          insecureIngest: ""
          authorized: ""
          playbackUrl: ""
          name: ""
          preset: ""
          arn: ""
          type: ""
          recordingConfigurationArn: ""
          tags: ""
      properties:
        channel:
          $ref: '#/components/schemas/CreateChannelResponse_channel'
        streamKey:
          $ref: '#/components/schemas/CreateChannelResponse_streamKey'
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    ResourceNotFoundException: {}
    ServiceQuotaExceededException: {}
    CreateRecordingConfigurationResponse:
      example:
        recordingConfiguration:
          renditionConfiguration:
            renditions: ""
            renditionSelection: ""
          destinationConfiguration:
            s3:
              bucketName: ""
          recordingReconnectWindowSeconds: ""
          thumbnailConfiguration:
            storage: ""
            resolution: ""
            recordingMode: ""
            targetIntervalSeconds: ""
          name: ""
          state: ""
          arn: ""
          tags: ""
      properties:
        recordingConfiguration:
          $ref: '#/components/schemas/CreateRecordingConfigurationResponse_recordingConfiguration'
      type: object
    S3DestinationConfiguration:
      description: A complex type that describes an S3 location where recorded videos
        will be stored.
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/S3DestinationBucketName'
          - description: Location (S3 bucket name) where recorded videos will be stored.
      required:
      - bucketName
      type: object
    RenditionConfigurationRenditionSelection:
      enum:
      - ALL
      - NONE
      - CUSTOM
      type: string
    RenditionConfigurationRenditionList:
      items:
        $ref: '#/components/schemas/RenditionConfigurationRendition'
      type: array
    RecordingMode:
      enum:
      - DISABLED
      - INTERVAL
      type: string
    ThumbnailConfigurationResolution:
      enum:
      - FULL_HD
      - HD
      - SD
      - LOWEST_RESOLUTION
      type: string
    ThumbnailConfigurationStorageList:
      items:
        $ref: '#/components/schemas/ThumbnailConfigurationStorage'
      type: array
    TargetIntervalSeconds:
      maximum: 60
      minimum: 1
      type: integer
    InternalServerException: {}
    ConflictException: {}
    CreateStreamKeyResponse:
      example:
        streamKey:
          channelArn: ""
          arn: ""
          value: ""
          tags: ""
      properties:
        streamKey:
          $ref: '#/components/schemas/CreateStreamKeyResponse_streamKey'
      type: object
    DeletePlaybackKeyPairResponse:
      properties: {}
      type: object
    GetChannelResponse:
      example:
        channel:
          latencyMode: ""
          ingestEndpoint: ""
          insecureIngest: ""
          authorized: ""
          playbackUrl: ""
          name: ""
          preset: ""
          arn: ""
          type: ""
          recordingConfigurationArn: ""
          tags: ""
      properties:
        channel:
          $ref: '#/components/schemas/CreateChannelResponse_channel'
      type: object
    GetPlaybackKeyPairResponse:
      example:
        keyPair:
          fingerprint: ""
          name: ""
          arn: ""
          tags: ""
      properties:
        keyPair:
          $ref: '#/components/schemas/GetPlaybackKeyPairResponse_keyPair'
      type: object
    GetRecordingConfigurationResponse:
      example:
        recordingConfiguration:
          renditionConfiguration:
            renditions: ""
            renditionSelection: ""
          destinationConfiguration:
            s3:
              bucketName: ""
          recordingReconnectWindowSeconds: ""
          thumbnailConfiguration:
            storage: ""
            resolution: ""
            recordingMode: ""
            targetIntervalSeconds: ""
          name: ""
          state: ""
          arn: ""
          tags: ""
      properties:
        recordingConfiguration:
          $ref: '#/components/schemas/CreateRecordingConfigurationResponse_recordingConfiguration'
      type: object
    GetStreamResponse:
      example:
        stream:
          channelArn: ""
          streamId: ""
          playbackUrl: ""
          health: ""
          startTime: ""
          viewerCount: ""
          state: ""
      properties:
        stream:
          $ref: '#/components/schemas/GetStreamResponse_stream'
      type: object
    ChannelNotBroadcasting: {}
    GetStreamKeyResponse:
      example:
        streamKey:
          channelArn: ""
          arn: ""
          value: ""
          tags: ""
      properties:
        streamKey:
          $ref: '#/components/schemas/GetStreamKeyResponse_streamKey'
      type: object
    GetStreamSessionResponse:
      example:
        streamSession:
          streamId: ""
          truncatedEvents: ""
          channel:
            latencyMode: ""
            ingestEndpoint: ""
            insecureIngest: ""
            authorized: ""
            playbackUrl: ""
            name: ""
            preset: ""
            arn: ""
            type: ""
            recordingConfigurationArn: ""
            tags: ""
          ingestConfiguration:
            audio:
              codec: ""
              channels: ""
              targetBitrate: ""
              sampleRate: ""
            video:
              videoWidth: ""
              avcProfile: ""
              codec: ""
              targetBitrate: ""
              avcLevel: ""
              targetFramerate: ""
              encoder: ""
              videoHeight: ""
          startTime: ""
          endTime: ""
          recordingConfiguration:
            renditionConfiguration:
              renditions: ""
              renditionSelection: ""
            destinationConfiguration:
              s3:
                bucketName: ""
            recordingReconnectWindowSeconds: ""
            thumbnailConfiguration:
              storage: ""
              resolution: ""
              recordingMode: ""
              targetIntervalSeconds: ""
            name: ""
            state: ""
            arn: ""
            tags: ""
      properties:
        streamSession:
          $ref: '#/components/schemas/GetStreamSessionResponse_streamSession'
      type: object
    ImportPlaybackKeyPairResponse:
      example:
        keyPair:
          fingerprint: ""
          name: ""
          arn: ""
          tags: ""
      properties:
        keyPair:
          $ref: '#/components/schemas/ImportPlaybackKeyPairResponse_keyPair'
      type: object
    ListChannelsResponse:
      example:
        channels: ""
        nextToken: ""
      properties:
        channels:
          allOf:
          - $ref: '#/components/schemas/ChannelList'
          - description: List of the matching channels.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If there are more channels than <code>maxResults</code>,\
              \ use <code>nextToken</code> in the request to get the next set."
      required:
      - channels
      type: object
    ListPlaybackKeyPairsResponse:
      example:
        nextToken: ""
        keyPairs: ""
      properties:
        keyPairs:
          allOf:
          - $ref: '#/components/schemas/PlaybackKeyPairList'
          - description: List of key pairs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If there are more key pairs than <code>maxResults</code>,\
              \ use <code>nextToken</code> in the request to get the next set."
      required:
      - keyPairs
      type: object
    ListRecordingConfigurationsResponse:
      example:
        recordingConfigurations: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If there are more recording configurations than <code>maxResults</code>,\
              \ use <code>nextToken</code> in the request to get the next set."
        recordingConfigurations:
          allOf:
          - $ref: '#/components/schemas/RecordingConfigurationList'
          - description: List of the matching recording configurations.
      required:
      - recordingConfigurations
      type: object
    ListStreamKeysResponse:
      example:
        streamKeys: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If there are more stream keys than <code>maxResults</code>,\
              \ use <code>nextToken</code> in the request to get the next set."
        streamKeys:
          allOf:
          - $ref: '#/components/schemas/StreamKeyList'
          - description: List of stream keys.
      required:
      - streamKeys
      type: object
    ListStreamSessionsResponse:
      example:
        streamSessions: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If there are more streams than <code>maxResults</code>,\
              \ use <code>nextToken</code> in the request to get the next set."
        streamSessions:
          allOf:
          - $ref: '#/components/schemas/StreamSessionList'
          - description: List of stream sessions.
      required:
      - streamSessions
      type: object
    ListStreamsResponse:
      example:
        nextToken: ""
        streams: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If there are more streams than <code>maxResults</code>,\
              \ use <code>nextToken</code> in the request to get the next set."
        streams:
          allOf:
          - $ref: '#/components/schemas/StreamList'
          - description: List of streams.
      required:
      - streams
      type: object
    StreamHealth:
      enum:
      - HEALTHY
      - STARVING
      - UNKNOWN
      type: string
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Tags attached to the resource. Array of maps, each of the\
              \ form <code>string:string (key:value)</code>."
      required:
      - tags
      type: object
    StartViewerSessionRevocationResponse:
      properties: {}
      type: object
    StopStreamResponse:
      properties: {}
      type: object
    StreamUnavailable: {}
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    UpdateChannelResponse:
      example:
        channel:
          latencyMode: ""
          ingestEndpoint: ""
          insecureIngest: ""
          authorized: ""
          playbackUrl: ""
          name: ""
          preset: ""
          arn: ""
          type: ""
          recordingConfigurationArn: ""
          tags: ""
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
      type: object
    Integer:
      type: integer
    String:
      type: string
    AudioConfiguration:
      description: "Object specifying a stream’s audio configuration, as set up by\
        \ the broadcaster (usually in an encoder). This is part of the <a>IngestConfiguration</a>\
        \ object and used for monitoring stream health."
      properties:
        channels:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Number of audio channels.
        codec:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Codec used for the audio encoding.
        sampleRate:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Number of audio samples recorded per second.
        targetBitrate:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The expected ingest bitrate (bits per second). This is configured
              in the encoder.
      type: object
    ResourceArn:
      maxLength: 128
      minLength: 1
      pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:[a-z-]/[a-zA-Z0-9-]+$"
      type: string
    errorCode:
      type: string
    errorMessage:
      type: string
    BatchError:
      description: "Error related to a specific channel, specified by its ARN."
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: Channel ARN.
        code:
          allOf:
          - $ref: '#/components/schemas/errorCode'
          - description: Error code.
        message:
          allOf:
          - $ref: '#/components/schemas/errorMessage'
          - description: "Error message, determined by the application."
      type: object
    BatchErrors:
      items:
        $ref: '#/components/schemas/BatchError'
      type: array
    ChannelArnList:
      items:
        $ref: '#/components/schemas/ChannelArn'
      maxItems: 50
      minItems: 1
      type: array
    BatchGetChannelRequest:
      example:
        arns: ""
      properties:
        arns:
          allOf:
          - $ref: '#/components/schemas/ChannelArnList'
          - description: "Array of ARNs, one per channel."
      required:
      - arns
      title: BatchGetChannelRequest
      type: object
    Channels:
      items:
        $ref: '#/components/schemas/Channel'
      type: array
    StreamKeyArnList:
      items:
        $ref: '#/components/schemas/StreamKeyArn'
      maxItems: 50
      minItems: 1
      type: array
    BatchGetStreamKeyRequest:
      example:
        arns: ""
      properties:
        arns:
          allOf:
          - $ref: '#/components/schemas/StreamKeyArnList'
          - description: "Array of ARNs, one per stream key."
      required:
      - arns
      title: BatchGetStreamKeyRequest
      type: object
    StreamKeys:
      items:
        $ref: '#/components/schemas/StreamKey'
      type: array
    ViewerId:
      maxLength: 40
      minLength: 1
      type: string
    BatchStartViewerSessionRevocationError:
      description: Error for a request in the batch for BatchStartViewerSessionRevocation.
        Each error is related to a specific channel-ARN and viewer-ID pair.
      properties:
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: Channel ARN.
        code:
          allOf:
          - $ref: '#/components/schemas/errorCode'
          - description: Error code.
        message:
          allOf:
          - $ref: '#/components/schemas/errorMessage'
          - description: "Error message, determined by the application."
        viewerId:
          allOf:
          - $ref: '#/components/schemas/ViewerId'
          - description: The ID of the viewer session to revoke.
      required:
      - channelArn
      - viewerId
      type: object
    BatchStartViewerSessionRevocationErrors:
      items:
        $ref: '#/components/schemas/BatchStartViewerSessionRevocationError'
      type: array
    BatchStartViewerSessionRevocationViewerSessionList:
      items:
        $ref: '#/components/schemas/BatchStartViewerSessionRevocationViewerSession'
      maxItems: 20
      minItems: 1
      type: array
    BatchStartViewerSessionRevocationRequest:
      example:
        viewerSessions: ""
      properties:
        viewerSessions:
          allOf:
          - $ref: '#/components/schemas/BatchStartViewerSessionRevocationViewerSessionList'
          - description: "Array of viewer sessions, one per channel-ARN and viewer-ID\
              \ pair."
      required:
      - viewerSessions
      title: BatchStartViewerSessionRevocationRequest
      type: object
    ViewerSessionVersion:
      minimum: 0
      type: integer
    Boolean:
      type: boolean
    IsAuthorized:
      type: boolean
    IngestEndpoint:
      type: string
    InsecureIngest:
      type: boolean
    ChannelLatencyMode:
      enum:
      - NORMAL
      - LOW
      type: string
    ChannelName:
      maxLength: 128
      minLength: 0
      pattern: "^[a-zA-Z0-9-_]*$"
      type: string
    PlaybackURL:
      type: string
    TranscodePreset:
      enum:
      - HIGHER_BANDWIDTH_DELIVERY
      - CONSTRAINED_BANDWIDTH_DELIVERY
      type: string
    ChannelRecordingConfigurationArn:
      maxLength: 128
      minLength: 0
      pattern: "^$|^arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$"
      type: string
    Tags:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 0
      type: object
    ChannelType:
      enum:
      - BASIC
      - STANDARD
      - ADVANCED_SD
      - ADVANCED_HD
      type: string
    Channel:
      description: Object specifying a channel.
      example:
        latencyMode: ""
        ingestEndpoint: ""
        insecureIngest: ""
        authorized: ""
        playbackUrl: ""
        name: ""
        preset: ""
        arn: ""
        type: ""
        recordingConfigurationArn: ""
        tags: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: Channel ARN.
        authorized:
          allOf:
          - $ref: '#/components/schemas/IsAuthorized'
          - description: "Whether the channel is private (enabled for playback authorization).\
              \ Default: <code>false</code>."
        ingestEndpoint:
          allOf:
          - $ref: '#/components/schemas/IngestEndpoint'
          - description: "Channel ingest endpoint, part of the definition of an ingest\
              \ server, used when you set up streaming software."
        insecureIngest:
          allOf:
          - $ref: '#/components/schemas/InsecureIngest'
          - description: "Whether the channel allows insecure RTMP ingest. Default:\
              \ <code>false</code>."
        latencyMode:
          allOf:
          - $ref: '#/components/schemas/ChannelLatencyMode'
          - description: "Channel latency mode. Use <code>NORMAL</code> to broadcast\
              \ and deliver live video up to Full HD. Use <code>LOW</code> for near-real-time\
              \ interaction with viewers. Default: <code>LOW</code>. (Note: In the\
              \ Amazon IVS console, <code>LOW</code> and <code>NORMAL</code> correspond\
              \ to Ultra-low and Standard, respectively.)"
        name:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: Channel name.
        playbackUrl:
          allOf:
          - $ref: '#/components/schemas/PlaybackURL'
          - description: Channel playback URL.
        preset:
          allOf:
          - $ref: '#/components/schemas/TranscodePreset'
          - description: "Optional transcode preset for the channel. This is selectable\
              \ only for <code>ADVANCED_HD</code> and <code>ADVANCED_SD</code> channel\
              \ types. For those channel types, the default <code>preset</code> is\
              \ <code>HIGHER_BANDWIDTH_DELIVERY</code>. For other channel types (<code>BASIC</code>\
              \ and <code>STANDARD</code>), <code>preset</code> is the empty string\
              \ (<code>\"\"</code>)."
        recordingConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChannelRecordingConfigurationArn'
          - description: "Recording-configuration ARN. A value other than an empty\
              \ string indicates that recording is enabled. Default: \"\" (empty string,\
              \ recording is disabled)."
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Tags attached to the resource. Array of 1-50 maps, each\
              \ of the form <code>string:string (key:value)</code>. See <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
              \ Amazon Web Services Resources</a> for more information, including\
              \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
              ; Amazon IVS has no service-specific constraints beyond what is documented\
              \ there."
        type:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          - description: "<p>Channel type, which determines the allowable resolution\
              \ and bitrate. <i>If you exceed the allowable input resolution or bitrate,\
              \ the stream probably will disconnect immediately.</i> Some types generate\
              \ multiple qualities (renditions) from the original input; this automatically\
              \ gives viewers the best experience for their devices and network conditions.\
              \ Some types provide transcoded video; transcoding allows higher playback\
              \ quality across a range of download speeds. Default: <code>STANDARD</code>.\
              \ Valid values:</p> <ul> <li> <p> <code>BASIC</code>: Video is transmuxed:\
              \ Amazon IVS delivers the original input quality to viewers. The viewer’\
              s video-quality choice is limited to the original input. Input resolution\
              \ can be up to 1080p and bitrate can be up to 1.5 Mbps for 480p and\
              \ up to 3.5 Mbps for resolutions between 480p and 1080p. Original audio\
              \ is passed through.</p> </li> <li> <p> <code>STANDARD</code>: Video\
              \ is transcoded: multiple qualities are generated from the original\
              \ input, to automatically give viewers the best experience for their\
              \ devices and network conditions. Transcoding allows higher playback\
              \ quality across a range of download speeds. Resolution can be up to\
              \ 1080p and bitrate can be up to 8.5 Mbps. Audio is transcoded only\
              \ for renditions 360p and below; above that, audio is passed through.\
              \ This is the default when you create a channel.</p> </li> <li> <p>\
              \ <code>ADVANCED_SD</code>: Video is transcoded; multiple qualities\
              \ are generated from the original input, to automatically give viewers\
              \ the best experience for their devices and network conditions. Input\
              \ resolution can be up to 1080p and bitrate can be up to 8.5 Mbps; output\
              \ is capped at SD quality (480p). You can select an optional transcode\
              \ preset (see below). Audio for all renditions is transcoded, and an\
              \ audio-only rendition is available.</p> </li> <li> <p> <code>ADVANCED_HD</code>:\
              \ Video is transcoded; multiple qualities are generated from the original\
              \ input, to automatically give viewers the best experience for their\
              \ devices and network conditions. Input resolution can be up to 1080p\
              \ and bitrate can be up to 8.5 Mbps; output is capped at HD quality\
              \ (720p). You can select an optional transcode preset (see below). Audio\
              \ for all renditions is transcoded, and an audio-only rendition is available.</p>\
              \ </li> </ul> <p>Optional <i>transcode presets</i> (available for the\
              \ <code>ADVANCED</code> types) allow you to trade off available download\
              \ bandwidth and video quality, to optimize the viewing experience. There\
              \ are two presets:</p> <ul> <li> <p> <i>Constrained bandwidth delivery</i>\
              \ uses a lower bitrate for each quality level. Use it if you have low\
              \ download bandwidth and/or simple video content (e.g., talking heads)</p>\
              \ </li> <li> <p> <i>Higher bandwidth delivery</i> uses a higher bitrate\
              \ for each quality level. Use it if you have high download bandwidth\
              \ and/or complex video content (e.g., flashes and quick scene changes).</p>\
              \ </li> </ul>"
      type: object
    ChannelSummary:
      description: Summary information about a channel.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: Channel ARN.
        authorized:
          allOf:
          - $ref: '#/components/schemas/IsAuthorized'
          - description: "Whether the channel is private (enabled for playback authorization).\
              \ Default: <code>false</code>."
        insecureIngest:
          allOf:
          - $ref: '#/components/schemas/InsecureIngest'
          - description: "Whether the channel allows insecure RTMP ingest. Default:\
              \ <code>false</code>."
        latencyMode:
          allOf:
          - $ref: '#/components/schemas/ChannelLatencyMode'
          - description: "Channel latency mode. Use <code>NORMAL</code> to broadcast\
              \ and deliver live video up to Full HD. Use <code>LOW</code> for near-real-time\
              \ interaction with viewers. Default: <code>LOW</code>. (Note: In the\
              \ Amazon IVS console, <code>LOW</code> and <code>NORMAL</code> correspond\
              \ to Ultra-low and Standard, respectively.)"
        name:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: Channel name.
        preset:
          allOf:
          - $ref: '#/components/schemas/TranscodePreset'
          - description: "Optional transcode preset for the channel. This is selectable\
              \ only for <code>ADVANCED_HD</code> and <code>ADVANCED_SD</code> channel\
              \ types. For those channel types, the default <code>preset</code> is\
              \ <code>HIGHER_BANDWIDTH_DELIVERY</code>. For other channel types (<code>BASIC</code>\
              \ and <code>STANDARD</code>), <code>preset</code> is the empty string\
              \ (<code>\"\"</code>)."
        recordingConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChannelRecordingConfigurationArn'
          - description: "Recording-configuration ARN. A value other than an empty\
              \ string indicates that recording is enabled. Default: \"\" (empty string,\
              \ recording is disabled)."
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Tags attached to the resource. Array of 1-50 maps, each\
              \ of the form <code>string:string (key:value)</code>. See <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
              \ Amazon Web Services Resources</a> for more information, including\
              \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
              ; Amazon IVS has no service-specific constraints beyond what is documented\
              \ there."
        type:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          - description: "<p>Channel type, which determines the allowable resolution\
              \ and bitrate. <i>If you exceed the allowable input resolution or bitrate,\
              \ the stream probably will disconnect immediately.</i> Some types generate\
              \ multiple qualities (renditions) from the original input; this automatically\
              \ gives viewers the best experience for their devices and network conditions.\
              \ Some types provide transcoded video; transcoding allows higher playback\
              \ quality across a range of download speeds. Default: <code>STANDARD</code>.\
              \ Valid values:</p> <ul> <li> <p> <code>BASIC</code>: Video is transmuxed:\
              \ Amazon IVS delivers the original input quality to viewers. The viewer’\
              s video-quality choice is limited to the original input. Input resolution\
              \ can be up to 1080p and bitrate can be up to 1.5 Mbps for 480p and\
              \ up to 3.5 Mbps for resolutions between 480p and 1080p. Original audio\
              \ is passed through.</p> </li> <li> <p> <code>STANDARD</code>: Video\
              \ is transcoded: multiple qualities are generated from the original\
              \ input, to automatically give viewers the best experience for their\
              \ devices and network conditions. Transcoding allows higher playback\
              \ quality across a range of download speeds. Resolution can be up to\
              \ 1080p and bitrate can be up to 8.5 Mbps. Audio is transcoded only\
              \ for renditions 360p and below; above that, audio is passed through.\
              \ This is the default when you create a channel.</p> </li> <li> <p>\
              \ <code>ADVANCED_SD</code>: Video is transcoded; multiple qualities\
              \ are generated from the original input, to automatically give viewers\
              \ the best experience for their devices and network conditions. Input\
              \ resolution can be up to 1080p and bitrate can be up to 8.5 Mbps; output\
              \ is capped at SD quality (480p). You can select an optional transcode\
              \ preset (see below). Audio for all renditions is transcoded, and an\
              \ audio-only rendition is available.</p> </li> <li> <p> <code>ADVANCED_HD</code>:\
              \ Video is transcoded; multiple qualities are generated from the original\
              \ input, to automatically give viewers the best experience for their\
              \ devices and network conditions. Input resolution can be up to 1080p\
              \ and bitrate can be up to 8.5 Mbps; output is capped at HD quality\
              \ (720p). You can select an optional transcode preset (see below). Audio\
              \ for all renditions is transcoded, and an audio-only rendition is available.</p>\
              \ </li> </ul> <p>Optional <i>transcode presets</i> (available for the\
              \ <code>ADVANCED</code> types) allow you to trade off available download\
              \ bandwidth and video quality, to optimize the viewing experience. There\
              \ are two presets:</p> <ul> <li> <p> <i>Constrained bandwidth delivery</i>\
              \ uses a lower bitrate for each quality level. Use it if you have low\
              \ download bandwidth and/or simple video content (e.g., talking heads)</p>\
              \ </li> <li> <p> <i>Higher bandwidth delivery</i> uses a higher bitrate\
              \ for each quality level. Use it if you have high download bandwidth\
              \ and/or complex video content (e.g., flashes and quick scene changes).</p>\
              \ </li> </ul>"
      type: object
    ChannelList:
      items:
        $ref: '#/components/schemas/ChannelSummary'
      type: array
    CreateChannelRequest:
      example:
        latencyMode: ""
        insecureIngest: ""
        authorized: ""
        name: ""
        preset: ""
        type: ""
        recordingConfigurationArn: ""
        tags: ""
      properties:
        authorized:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Whether the channel is private (enabled for playback authorization).\
              \ Default: <code>false</code>."
        insecureIngest:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Whether the channel allows insecure RTMP ingest. Default:\
              \ <code>false</code>."
        latencyMode:
          allOf:
          - $ref: '#/components/schemas/ChannelLatencyMode'
          - description: "Channel latency mode. Use <code>NORMAL</code> to broadcast\
              \ and deliver live video up to Full HD. Use <code>LOW</code> for near-real-time\
              \ interaction with viewers. (Note: In the Amazon IVS console, <code>LOW</code>\
              \ and <code>NORMAL</code> correspond to Ultra-low and Standard, respectively.)\
              \ Default: <code>LOW</code>."
        name:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: Channel name.
        preset:
          allOf:
          - $ref: '#/components/schemas/TranscodePreset'
          - description: "Optional transcode preset for the channel. This is selectable\
              \ only for <code>ADVANCED_HD</code> and <code>ADVANCED_SD</code> channel\
              \ types. For those channel types, the default <code>preset</code> is\
              \ <code>HIGHER_BANDWIDTH_DELIVERY</code>. For other channel types (<code>BASIC</code>\
              \ and <code>STANDARD</code>), <code>preset</code> is the empty string\
              \ (<code>\"\"</code>)."
        recordingConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChannelRecordingConfigurationArn'
          - description: "Recording-configuration ARN. Default: \"\" (empty string,\
              \ recording is disabled)."
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Array of 1-50 maps, each of the form <code>string:string\
              \ (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
              >Tagging Amazon Web Services Resources</a> for more information, including\
              \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
              ; Amazon IVS has no service-specific constraints beyond what is documented\
              \ there."
        type:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          - description: "<p>Channel type, which determines the allowable resolution\
              \ and bitrate. <i>If you exceed the allowable input resolution or bitrate,\
              \ the stream probably will disconnect immediately.</i> Some types generate\
              \ multiple qualities (renditions) from the original input; this automatically\
              \ gives viewers the best experience for their devices and network conditions.\
              \ Some types provide transcoded video; transcoding allows higher playback\
              \ quality across a range of download speeds. Default: <code>STANDARD</code>.\
              \ Valid values:</p> <ul> <li> <p> <code>BASIC</code>: Video is transmuxed:\
              \ Amazon IVS delivers the original input quality to viewers. The viewer’\
              s video-quality choice is limited to the original input. Input resolution\
              \ can be up to 1080p and bitrate can be up to 1.5 Mbps for 480p and\
              \ up to 3.5 Mbps for resolutions between 480p and 1080p. Original audio\
              \ is passed through.</p> </li> <li> <p> <code>STANDARD</code>: Video\
              \ is transcoded: multiple qualities are generated from the original\
              \ input, to automatically give viewers the best experience for their\
              \ devices and network conditions. Transcoding allows higher playback\
              \ quality across a range of download speeds. Resolution can be up to\
              \ 1080p and bitrate can be up to 8.5 Mbps. Audio is transcoded only\
              \ for renditions 360p and below; above that, audio is passed through.\
              \ This is the default when you create a channel.</p> </li> <li> <p>\
              \ <code>ADVANCED_SD</code>: Video is transcoded; multiple qualities\
              \ are generated from the original input, to automatically give viewers\
              \ the best experience for their devices and network conditions. Input\
              \ resolution can be up to 1080p and bitrate can be up to 8.5 Mbps; output\
              \ is capped at SD quality (480p). You can select an optional transcode\
              \ preset (see below). Audio for all renditions is transcoded, and an\
              \ audio-only rendition is available.</p> </li> <li> <p> <code>ADVANCED_HD</code>:\
              \ Video is transcoded; multiple qualities are generated from the original\
              \ input, to automatically give viewers the best experience for their\
              \ devices and network conditions. Input resolution can be up to 1080p\
              \ and bitrate can be up to 8.5 Mbps; output is capped at HD quality\
              \ (720p). You can select an optional transcode preset (see below). Audio\
              \ for all renditions is transcoded, and an audio-only rendition is available.</p>\
              \ </li> </ul> <p>Optional <i>transcode presets</i> (available for the\
              \ <code>ADVANCED</code> types) allow you to trade off available download\
              \ bandwidth and video quality, to optimize the viewing experience. There\
              \ are two presets:</p> <ul> <li> <p> <i>Constrained bandwidth delivery</i>\
              \ uses a lower bitrate for each quality level. Use it if you have low\
              \ download bandwidth and/or simple video content (e.g., talking heads)</p>\
              \ </li> <li> <p> <i>Higher bandwidth delivery</i> uses a higher bitrate\
              \ for each quality level. Use it if you have high download bandwidth\
              \ and/or complex video content (e.g., flashes and quick scene changes).</p>\
              \ </li> </ul>"
      title: CreateChannelRequest
      type: object
    StreamKey:
      description: Object specifying a stream key.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/StreamKeyArn'
          - description: Stream-key ARN.
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: Channel ARN for the stream.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Tags attached to the resource. Array of 1-50 maps, each\
              \ of the form <code>string:string (key:value)</code>. See <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
              \ Amazon Web Services Resources</a> for more information, including\
              \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
              ; Amazon IVS has no service-specific constraints beyond what is documented\
              \ there."
        value:
          allOf:
          - $ref: '#/components/schemas/StreamKeyValue'
          - description: Stream-key value.
      type: object
    DestinationConfiguration:
      description: "A complex type that describes a location where recorded videos\
        \ will be stored. Each member represents a type of destination configuration.\
        \ For recording, you define one and only one type of destination configuration."
      properties:
        s3:
          $ref: '#/components/schemas/CreateRecordingConfiguration_request_destinationConfiguration_s3'
      type: object
    RecordingConfigurationName:
      maxLength: 128
      minLength: 0
      pattern: "^[a-zA-Z0-9-_]*$"
      type: string
    RecordingReconnectWindowSeconds:
      maximum: 300
      minimum: 0
      type: integer
    RenditionConfiguration:
      description: Object that describes which renditions should be recorded for a
        stream.
      properties:
        renditionSelection:
          allOf:
          - $ref: '#/components/schemas/RenditionConfigurationRenditionSelection'
          - description: "Indicates which set of renditions are recorded for a stream.\
              \ For <code>BASIC</code> channels, the <code>CUSTOM</code> value has\
              \ no effect. If <code>CUSTOM</code> is specified, a set of renditions\
              \ must be specified in the <code>renditions</code> field. Default: <code>ALL</code>."
        renditions:
          allOf:
          - $ref: '#/components/schemas/RenditionConfigurationRenditionList'
          - description: "Indicates which renditions are recorded for a stream, if\
              \ <code>renditionSelection</code> is <code>CUSTOM</code>; otherwise,\
              \ this field is irrelevant. The selected renditions are recorded if\
              \ they are available during the stream. If a selected rendition is unavailable,\
              \ the best available rendition is recorded. For details on the resolution\
              \ dimensions of each rendition, see <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/record-to-s3.html\"\
              >Auto-Record to Amazon S3</a>."
      type: object
    ThumbnailConfiguration:
      description: An object representing a configuration of thumbnails for recorded
        video.
      properties:
        recordingMode:
          allOf:
          - $ref: '#/components/schemas/RecordingMode'
          - description: "Thumbnail recording mode. Default: <code>INTERVAL</code>."
        resolution:
          allOf:
          - $ref: '#/components/schemas/ThumbnailConfigurationResolution'
          - description: "Indicates the desired resolution of recorded thumbnails.\
              \ Thumbnails are recorded at the selected resolution if the corresponding\
              \ rendition is available during the stream; otherwise, they are recorded\
              \ at source resolution. For more information about resolution values\
              \ and their corresponding height and width dimensions, see <a href=\"\
              https://docs.aws.amazon.com/ivs/latest/userguide/record-to-s3.html\"\
              >Auto-Record to Amazon S3</a>. Default: Null (source resolution is returned)."
        storage:
          allOf:
          - $ref: '#/components/schemas/ThumbnailConfigurationStorageList'
          - description: "Indicates the format in which thumbnails are recorded. <code>SEQUENTIAL</code>\
              \ records all generated thumbnails in a serial manner, to the media/thumbnails\
              \ directory. <code>LATEST</code> saves the latest thumbnail in media/latest_thumbnail/thumb.jpg\
              \ and overwrites it at the interval specified by <code>targetIntervalSeconds</code>.\
              \ You can enable both <code>SEQUENTIAL</code> and <code>LATEST</code>.\
              \ Default: <code>SEQUENTIAL</code>."
        targetIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/TargetIntervalSeconds'
          - description: "<p>The targeted thumbnail-generation interval in seconds.\
              \ This is configurable (and required) only if <code>recordingMode</code>\
              \ is <code>INTERVAL</code>. Default: 60.</p> <p> <b>Important:</b> For\
              \ the <code>BASIC</code> channel type, setting a value for <code>targetIntervalSeconds</code>\
              \ does not guarantee that thumbnails are generated at the specified\
              \ interval. For thumbnails to be generated at the <code>targetIntervalSeconds</code>\
              \ interval, the <code>IDR/Keyframe</code> value for the input video\
              \ must be less than the <code>targetIntervalSeconds</code> value. See\
              \ <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/streaming-config.html\"\
              > Amazon IVS Streaming Configuration</a> for information on setting\
              \ <code>IDR/Keyframe</code> to the recommended value in video-encoder\
              \ settings.</p>"
      type: object
    CreateRecordingConfigurationRequest:
      example:
        renditionConfiguration:
          renditions: ""
          renditionSelection: ""
        destinationConfiguration:
          s3:
            bucketName: ""
        recordingReconnectWindowSeconds: ""
        thumbnailConfiguration:
          storage: ""
          resolution: ""
          recordingMode: ""
          targetIntervalSeconds: ""
        name: ""
        tags: ""
      properties:
        destinationConfiguration:
          $ref: '#/components/schemas/CreateRecordingConfigurationRequest_destinationConfiguration'
        name:
          allOf:
          - $ref: '#/components/schemas/RecordingConfigurationName'
          - description: Recording-configuration name. The value does not need to
              be unique.
        recordingReconnectWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/RecordingReconnectWindowSeconds'
          - description: "If a broadcast disconnects and then reconnects within the\
              \ specified interval, the multiple streams will be considered a single\
              \ broadcast and merged together. Default: 0."
        renditionConfiguration:
          $ref: '#/components/schemas/CreateRecordingConfigurationRequest_renditionConfiguration'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Array of 1-50 maps, each of the form <code>string:string\
              \ (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
              >Tagging Amazon Web Services Resources</a> for more information, including\
              \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
              ; Amazon IVS has no service-specific constraints beyond what is documented\
              \ there."
        thumbnailConfiguration:
          $ref: '#/components/schemas/CreateRecordingConfigurationRequest_thumbnailConfiguration'
      required:
      - destinationConfiguration
      title: CreateRecordingConfigurationRequest
      type: object
    RecordingConfiguration:
      description: An object representing a configuration to record a channel stream.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/RecordingConfigurationArn'
          - description: Recording-configuration ARN.
        destinationConfiguration:
          $ref: '#/components/schemas/RecordingConfiguration_destinationConfiguration'
        name:
          allOf:
          - $ref: '#/components/schemas/RecordingConfigurationName'
          - description: Recording-configuration name. The value does not need to
              be unique.
        recordingReconnectWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/RecordingReconnectWindowSeconds'
          - description: "If a broadcast disconnects and then reconnects within the\
              \ specified interval, the multiple streams will be considered a single\
              \ broadcast and merged together. Default: 0."
        renditionConfiguration:
          $ref: '#/components/schemas/CreateRecordingConfigurationRequest_renditionConfiguration'
        state:
          allOf:
          - $ref: '#/components/schemas/RecordingConfigurationState'
          - description: "Indicates the current state of the recording configuration.\
              \ When the state is <code>ACTIVE</code>, the configuration is ready\
              \ for recording a channel stream."
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Tags attached to the resource. Array of 1-50 maps, each\
              \ of the form <code>string:string (key:value)</code>. See <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
              \ Amazon Web Services Resources</a> for more information, including\
              \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
              ; Amazon IVS has no service-specific constraints beyond what is documented\
              \ there."
        thumbnailConfiguration:
          $ref: '#/components/schemas/CreateRecordingConfigurationRequest_thumbnailConfiguration'
      required:
      - arn
      - destinationConfiguration
      - state
      type: object
    CreateStreamKeyRequest:
      example:
        channelArn: ""
        tags: ""
      properties:
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: ARN of the channel for which to create the stream key.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Array of 1-50 maps, each of the form <code>string:string\
              \ (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
              >Tagging Amazon Web Services Resources</a> for more information, including\
              \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
              ; Amazon IVS has no service-specific constraints beyond what is documented\
              \ there."
      required:
      - channelArn
      title: CreateStreamKeyRequest
      type: object
    DeleteChannelRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: ARN of the channel to be deleted.
      required:
      - arn
      title: DeleteChannelRequest
      type: object
    PlaybackKeyPairArn:
      maxLength: 128
      minLength: 1
      pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:playback-key/[a-zA-Z0-9-]+$"
      type: string
    DeletePlaybackKeyPairRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/PlaybackKeyPairArn'
          - description: ARN of the key pair to be deleted.
      required:
      - arn
      title: DeletePlaybackKeyPairRequest
      type: object
    RecordingConfigurationArn:
      maxLength: 128
      minLength: 0
      pattern: "^arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$"
      type: string
    DeleteRecordingConfigurationRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/RecordingConfigurationArn'
          - description: ARN of the recording configuration to be deleted.
      required:
      - arn
      title: DeleteRecordingConfigurationRequest
      type: object
    DeleteStreamKeyRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/StreamKeyArn'
          - description: ARN of the stream key to be deleted.
      required:
      - arn
      title: DeleteStreamKeyRequest
      type: object
    GetChannelRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: ARN of the channel for which the configuration is to be retrieved.
      required:
      - arn
      title: GetChannelRequest
      type: object
    GetPlaybackKeyPairRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/PlaybackKeyPairArn'
          - description: ARN of the key pair to be returned.
      required:
      - arn
      title: GetPlaybackKeyPairRequest
      type: object
    PlaybackKeyPair:
      description: A key pair used to sign and validate a playback authorization token.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/PlaybackKeyPairArn'
          - description: Key-pair ARN.
        fingerprint:
          allOf:
          - $ref: '#/components/schemas/PlaybackKeyPairFingerprint'
          - description: Key-pair identifier.
        name:
          allOf:
          - $ref: '#/components/schemas/PlaybackKeyPairName'
          - description: Playback-key-pair name. The value does not need to be unique.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Tags attached to the resource. Array of 1-50 maps, each\
              \ of the form <code>string:string (key:value)</code>. See <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
              \ Amazon Web Services Resources</a> for more information, including\
              \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
              ; Amazon IVS has no service-specific constraints beyond what is documented\
              \ there."
      type: object
    GetRecordingConfigurationRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/RecordingConfigurationArn'
          - description: ARN of the recording configuration to be retrieved.
      required:
      - arn
      title: GetRecordingConfigurationRequest
      type: object
    GetStreamKeyRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/StreamKeyArn'
          - description: ARN for the stream key to be retrieved.
      required:
      - arn
      title: GetStreamKeyRequest
      type: object
    GetStreamRequest:
      example:
        channelArn: ""
      properties:
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: Channel ARN for stream to be accessed.
      required:
      - channelArn
      title: GetStreamRequest
      type: object
    Stream:
      description: Specifies a live video stream that has been ingested and distributed.
      properties:
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: Channel ARN for the stream.
        health:
          allOf:
          - $ref: '#/components/schemas/StreamHealth'
          - description: The stream’s health.
        playbackUrl:
          allOf:
          - $ref: '#/components/schemas/PlaybackURL'
          - description: "URL of the master playlist, required by the video player\
              \ to play the HLS stream."
        startTime:
          allOf:
          - $ref: '#/components/schemas/StreamStartTime'
          - description: Time of the stream’s start. This is an ISO 8601 timestamp;
              <i>note that this is returned as a string</i>.
        state:
          allOf:
          - $ref: '#/components/schemas/StreamState'
          - description: "The stream’s state. Do not rely on the <code>OFFLINE</code>\
              \ state, as the API may not return it; instead, a \"NotBroadcasting\"\
              \ error will indicate that the stream is not live."
        streamId:
          allOf:
          - $ref: '#/components/schemas/StreamId'
          - description: Unique identifier for a live or previously live stream in
              the specified channel.
        viewerCount:
          allOf:
          - $ref: '#/components/schemas/StreamViewerCount'
          - description: "A count of concurrent views of the stream. Typically, a\
              \ new view appears in <code>viewerCount</code> within 15 seconds of\
              \ when video playback starts and a view is removed from <code>viewerCount</code>\
              \ within 1 minute of when video playback ends. A value of -1 indicates\
              \ that the request timed out; in this case, retry."
      type: object
    StreamId:
      maxLength: 26
      minLength: 26
      pattern: "^st-[a-zA-Z0-9]+$"
      type: string
    GetStreamSessionRequest:
      example:
        channelArn: ""
        streamId: ""
      properties:
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: ARN of the channel resource
        streamId:
          allOf:
          - $ref: '#/components/schemas/StreamId'
          - description: "Unique identifier for a live or previously live stream in\
              \ the specified channel. If no <code>streamId</code> is provided, this\
              \ returns the most recent stream session for the channel, if it exists."
      required:
      - channelArn
      title: GetStreamSessionRequest
      type: object
    StreamSession:
      description: "Object that captures the Amazon IVS configuration that the customer\
        \ provisioned, the ingest configurations that the broadcaster used, and the\
        \ most recent Amazon IVS stream events it encountered."
      properties:
        channel:
          $ref: '#/components/schemas/StreamSession_channel'
        endTime:
          allOf:
          - $ref: '#/components/schemas/Time'
          - description: "Time when the channel went offline. This is an ISO 8601\
              \ timestamp; <i>note that this is returned as a string</i>. For live\
              \ streams, this is <code>NULL</code>."
        ingestConfiguration:
          $ref: '#/components/schemas/StreamSession_ingestConfiguration'
        recordingConfiguration:
          $ref: '#/components/schemas/StreamSession_recordingConfiguration'
        startTime:
          allOf:
          - $ref: '#/components/schemas/Time'
          - description: Time when the channel went live. This is an ISO 8601 timestamp;
              <i>note that this is returned as a string</i>.
        streamId:
          allOf:
          - $ref: '#/components/schemas/StreamId'
          - description: Unique identifier for a live or previously live stream in
              the specified channel.
        truncatedEvents:
          allOf:
          - $ref: '#/components/schemas/StreamEvents'
          - description: "List of Amazon IVS events that the stream encountered. The\
              \ list is sorted by most recent events and contains up to 500 events.\
              \ For Amazon IVS events, see <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/eventbridge.html\"\
              >Using Amazon EventBridge with Amazon IVS</a>."
      type: object
    PlaybackKeyPairName:
      maxLength: 128
      minLength: 0
      pattern: "^[a-zA-Z0-9-_]*$"
      type: string
    PlaybackPublicKeyMaterial:
      type: string
    ImportPlaybackKeyPairRequest:
      example:
        publicKeyMaterial: ""
        name: ""
        tags: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/PlaybackKeyPairName'
          - description: Playback-key-pair name. The value does not need to be unique.
        publicKeyMaterial:
          allOf:
          - $ref: '#/components/schemas/PlaybackPublicKeyMaterial'
          - description: The public portion of a customer-generated key pair.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Any tags provided with the request are added to the playback\
              \ key pair tags. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
              >Tagging Amazon Web Services Resources</a> for more information, including\
              \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
              ; Amazon IVS has no service-specific constraints beyond what is documented\
              \ there."
      required:
      - publicKeyMaterial
      title: ImportPlaybackKeyPairRequest
      type: object
    VideoConfiguration:
      description: "Object specifying a stream’s video configuration, as set up by\
        \ the broadcaster (usually in an encoder). This is part of the <a>IngestConfiguration</a>\
        \ object and used for monitoring stream health."
      properties:
        avcLevel:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Indicates the degree of required decoder performance for\
              \ a profile. Normally this is set automatically by the encoder. For\
              \ details, see the H.264 specification."
        avcProfile:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Indicates to the decoder the requirements for decoding the\
              \ stream. For definitions of the valid values, see the H.264 specification."
        codec:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Codec used for the video encoding.
        encoder:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Software or hardware used to encode the video.
        targetBitrate:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The expected ingest bitrate (bits per second). This is configured
              in the encoder.
        targetFramerate:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The expected ingest framerate. This is configured in the
              encoder.
        videoHeight:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Video-resolution height in pixels.
        videoWidth:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Video-resolution width in pixels.
      type: object
    IngestConfiguration:
      description: "Object specifying the ingest configuration set up by the broadcaster,\
        \ usually in an encoder."
      properties:
        audio:
          $ref: '#/components/schemas/IngestConfiguration_audio'
        video:
          $ref: '#/components/schemas/IngestConfiguration_video'
      type: object
    MaxChannelResults:
      maximum: 100
      minimum: 1
      type: integer
    PaginationToken:
      maxLength: 1024
      minLength: 0
      pattern: "^[a-zA-Z0-9+/=_-]*$"
      type: string
    ListChannelsRequest:
      example:
        filterByName: ""
        maxResults: ""
        nextToken: ""
        filterByRecordingConfigurationArn: ""
      properties:
        filterByName:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: Filters the channel list to match the specified name.
        filterByRecordingConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChannelRecordingConfigurationArn'
          - description: Filters the channel list to match the specified recording-configuration
              ARN.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxChannelResults'
          - description: "Maximum number of channels to return. Default: 100."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The first channel to retrieve. This is used for pagination;
              see the <code>nextToken</code> response field.
      title: ListChannelsRequest
      type: object
    MaxPlaybackKeyPairResults:
      maximum: 100
      minimum: 1
      type: integer
    ListPlaybackKeyPairsRequest:
      example:
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxPlaybackKeyPairResults'
          - description: "Maximum number of key pairs to return. Default: your service\
              \ quota or 100, whichever is smaller."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The first key pair to retrieve. This is used for pagination;
              see the <code>nextToken</code> response field.
      title: ListPlaybackKeyPairsRequest
      type: object
    PlaybackKeyPairList:
      items:
        $ref: '#/components/schemas/PlaybackKeyPairSummary'
      type: array
    MaxRecordingConfigurationResults:
      maximum: 100
      minimum: 1
      type: integer
    ListRecordingConfigurationsRequest:
      example:
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxRecordingConfigurationResults'
          - description: "Maximum number of recording configurations to return. Default:\
              \ your service quota or 100, whichever is smaller. "
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The first recording configuration to retrieve. This is used
              for pagination; see the <code>nextToken</code> response field.
      title: ListRecordingConfigurationsRequest
      type: object
    RecordingConfigurationList:
      items:
        $ref: '#/components/schemas/RecordingConfigurationSummary'
      type: array
    MaxStreamKeyResults:
      maximum: 50
      minimum: 1
      type: integer
    ListStreamKeysRequest:
      example:
        channelArn: ""
        maxResults: ""
        nextToken: ""
      properties:
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: Channel ARN used to filter the list.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxStreamKeyResults'
          - description: "Maximum number of streamKeys to return. Default: 1."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The first stream key to retrieve. This is used for pagination;
              see the <code>nextToken</code> response field.
      required:
      - channelArn
      title: ListStreamKeysRequest
      type: object
    StreamKeyList:
      items:
        $ref: '#/components/schemas/StreamKeySummary'
      type: array
    MaxStreamResults:
      maximum: 100
      minimum: 1
      type: integer
    ListStreamSessionsRequest:
      example:
        channelArn: ""
        maxResults: ""
        nextToken: ""
      properties:
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: Channel ARN used to filter the list.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxStreamResults'
          - description: "Maximum number of streams to return. Default: 100."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The first stream to retrieve. This is used for pagination;
              see the <code>nextToken</code> response field.
      required:
      - channelArn
      title: ListStreamSessionsRequest
      type: object
    StreamSessionList:
      items:
        $ref: '#/components/schemas/StreamSessionSummary'
      type: array
    StreamFilters:
      description: Object specifying the stream attribute on which to filter.
      properties:
        health:
          allOf:
          - $ref: '#/components/schemas/StreamHealth'
          - description: The stream’s health.
      type: object
    ListStreamsRequest:
      example:
        maxResults: ""
        nextToken: ""
        filterBy:
          health: ""
      properties:
        filterBy:
          $ref: '#/components/schemas/ListStreamsRequest_filterBy'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxStreamResults'
          - description: "Maximum number of streams to return. Default: 100."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: The first stream to retrieve. This is used for pagination;
              see the <code>nextToken</code> response field.
      title: ListStreamsRequest
      type: object
    StreamList:
      items:
        $ref: '#/components/schemas/StreamSummary'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    PlaybackKeyPairFingerprint:
      type: string
    PlaybackKeyPairSummary:
      description: Summary information about a playback key pair.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/PlaybackKeyPairArn'
          - description: Key-pair ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/PlaybackKeyPairName'
          - description: Playback-key-pair name. The value does not need to be unique.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Tags attached to the resource. Array of 1-50 maps, each\
              \ of the form <code>string:string (key:value)</code>. See <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
              \ Amazon Web Services Resources</a> for more information, including\
              \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
              ; Amazon IVS has no service-specific constraints beyond what is documented\
              \ there."
      type: object
    StreamMetadata:
      format: password
      minLength: 1
      type: string
    PutMetadataRequest:
      example:
        metadata: ""
        channelArn: ""
      properties:
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: ARN of the channel into which metadata is inserted. This
              channel must have an active stream.
        metadata:
          allOf:
          - $ref: '#/components/schemas/StreamMetadata'
          - description: "Metadata to insert into the stream. Maximum: 1 KB per request."
      required:
      - channelArn
      - metadata
      title: PutMetadataRequest
      type: object
    RecordingConfigurationState:
      enum:
      - CREATING
      - CREATE_FAILED
      - ACTIVE
      type: string
    RecordingConfigurationSummary:
      description: Summary information about a RecordingConfiguration.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/RecordingConfigurationArn'
          - description: Recording-configuration ARN.
        destinationConfiguration:
          $ref: '#/components/schemas/RecordingConfiguration_destinationConfiguration'
        name:
          allOf:
          - $ref: '#/components/schemas/RecordingConfigurationName'
          - description: Recording-configuration name. The value does not need to
              be unique.
        state:
          allOf:
          - $ref: '#/components/schemas/RecordingConfigurationState'
          - description: "Indicates the current state of the recording configuration.\
              \ When the state is <code>ACTIVE</code>, the configuration is ready\
              \ for recording a channel stream."
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Tags attached to the resource. Array of 1-50 maps, each\
              \ of the form <code>string:string (key:value)</code>. See <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
              \ Amazon Web Services Resources</a> for more information, including\
              \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
              ; Amazon IVS has no service-specific constraints beyond what is documented\
              \ there."
      required:
      - arn
      - destinationConfiguration
      - state
      type: object
    RenditionConfigurationRendition:
      enum:
      - FULL_HD
      - HD
      - SD
      - LOWEST_RESOLUTION
      type: string
    S3DestinationBucketName:
      maxLength: 63
      minLength: 3
      pattern: "^[a-z0-9-.]+$"
      type: string
    StartViewerSessionRevocationRequest:
      example:
        viewerSessionVersionsLessThanOrEqualTo: ""
        channelArn: ""
        viewerId: ""
      properties:
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: The ARN of the channel associated with the viewer session
              to revoke.
        viewerId:
          allOf:
          - $ref: '#/components/schemas/ViewerId'
          - description: "The ID of the viewer associated with the viewer session\
              \ to revoke. Do not use this field for personally identifying, confidential,\
              \ or sensitive information."
        viewerSessionVersionsLessThanOrEqualTo:
          allOf:
          - $ref: '#/components/schemas/ViewerSessionVersion'
          - description: "An optional filter on which versions of the viewer session\
              \ to revoke. All versions less than or equal to the specified version\
              \ will be revoked. Default: 0."
      required:
      - channelArn
      - viewerId
      title: StartViewerSessionRevocationRequest
      type: object
    StopStreamRequest:
      example:
        channelArn: ""
      properties:
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: ARN of the channel for which the stream is to be stopped.
      required:
      - channelArn
      title: StopStreamRequest
      type: object
    StreamStartTime:
      format: date-time
      type: string
    StreamState:
      enum:
      - LIVE
      - OFFLINE
      type: string
    StreamViewerCount:
      type: integer
    Time:
      format: date-time
      type: string
    StreamEvent:
      description: "Object specifying a stream’s events. For a list of events, see\
        \ <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/eventbridge.html\"\
        >Using Amazon EventBridge with Amazon IVS</a>."
      properties:
        eventTime:
          allOf:
          - $ref: '#/components/schemas/Time'
          - description: Time when the event occurred. This is an ISO 8601 timestamp;
              <i>note that this is returned as a string</i>.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Name that identifies the stream event within a <code>type</code>.
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Logical group for certain events.
      type: object
    StreamEvents:
      items:
        $ref: '#/components/schemas/StreamEvent'
      maxItems: 500
      minItems: 0
      type: array
    StreamKeyValue:
      format: password
      type: string
    StreamKeySummary:
      description: Summary information about a stream key.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/StreamKeyArn'
          - description: Stream-key ARN.
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: Channel ARN for the stream.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Tags attached to the resource. Array of 1-50 maps, each\
              \ of the form <code>string:string (key:value)</code>. See <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
              \ Amazon Web Services Resources</a> for more information, including\
              \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
              ; Amazon IVS has no service-specific constraints beyond what is documented\
              \ there."
      type: object
    StreamSummary:
      description: Summary information about a stream.
      properties:
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: Channel ARN for the stream.
        health:
          allOf:
          - $ref: '#/components/schemas/StreamHealth'
          - description: The stream’s health.
        startTime:
          allOf:
          - $ref: '#/components/schemas/StreamStartTime'
          - description: 'Time of the stream’s start. This is an ISO 8601 timestamp;
              <i>note that this is returned as a string</i>. '
        state:
          allOf:
          - $ref: '#/components/schemas/StreamState'
          - description: "The stream’s state. Do not rely on the <code>OFFLINE</code>\
              \ state, as the API may not return it; instead, a \"NotBroadcasting\"\
              \ error will indicate that the stream is not live."
        streamId:
          allOf:
          - $ref: '#/components/schemas/StreamId'
          - description: Unique identifier for a live or previously live stream in
              the specified channel.
        viewerCount:
          allOf:
          - $ref: '#/components/schemas/StreamViewerCount'
          - description: "A count of concurrent views of the stream. Typically, a\
              \ new view appears in <code>viewerCount</code> within 15 seconds of\
              \ when video playback starts and a view is removed from <code>viewerCount</code>\
              \ within 1 minute of when video playback ends. A value of -1 indicates\
              \ that the request timed out; in this case, retry."
      type: object
    StreamSessionSummary:
      description: Summary information about a stream session.
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/Time'
          - description: "Time when the channel went offline. This is an ISO 8601\
              \ timestamp; <i>note that this is returned as a string</i>. For live\
              \ streams, this is <code>NULL</code>."
        hasErrorEvent:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If <code>true</code>, this stream encountered a quota breach\
              \ or failure."
        startTime:
          allOf:
          - $ref: '#/components/schemas/Time'
          - description: Time when the channel went live. This is an ISO 8601 timestamp;
              <i>note that this is returned as a string</i>.
        streamId:
          allOf:
          - $ref: '#/components/schemas/StreamId'
          - description: Unique identifier for a live or previously live stream in
              the specified channel.
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Array of tags to be added or updated. Array of maps, each\
              \ of the form <code>string:string (key:value)</code>. See <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
              \ Amazon Web Services Resources</a> for more information, including\
              \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
              ; Amazon IVS has no service-specific constraints beyond what is documented\
              \ there."
      required:
      - tags
      title: TagResourceRequest
      type: object
    ThumbnailConfigurationStorage:
      enum:
      - SEQUENTIAL
      - LATEST
      type: string
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateChannelRequest:
      example:
        latencyMode: ""
        insecureIngest: ""
        authorized: ""
        name: ""
        preset: ""
        arn: ""
        type: ""
        recordingConfigurationArn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          - description: ARN of the channel to be updated.
        authorized:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the channel is private (enabled for playback authorization).
        insecureIngest:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Whether the channel allows insecure RTMP ingest. Default:\
              \ <code>false</code>."
        latencyMode:
          allOf:
          - $ref: '#/components/schemas/ChannelLatencyMode'
          - description: "Channel latency mode. Use <code>NORMAL</code> to broadcast\
              \ and deliver live video up to Full HD. Use <code>LOW</code> for near-real-time\
              \ interaction with viewers. (Note: In the Amazon IVS console, <code>LOW</code>\
              \ and <code>NORMAL</code> correspond to Ultra-low and Standard, respectively.)"
        name:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          - description: Channel name.
        preset:
          allOf:
          - $ref: '#/components/schemas/TranscodePreset'
          - description: "Optional transcode preset for the channel. This is selectable\
              \ only for <code>ADVANCED_HD</code> and <code>ADVANCED_SD</code> channel\
              \ types. For those channel types, the default <code>preset</code> is\
              \ <code>HIGHER_BANDWIDTH_DELIVERY</code>. For other channel types (<code>BASIC</code>\
              \ and <code>STANDARD</code>), <code>preset</code> is the empty string\
              \ (<code>\"\"</code>)."
        recordingConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChannelRecordingConfigurationArn'
          - description: "Recording-configuration ARN. If this is set to an empty\
              \ string, recording is disabled. A value other than an empty string\
              \ indicates that recording is enabled"
        type:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          - description: "<p>Channel type, which determines the allowable resolution\
              \ and bitrate. <i>If you exceed the allowable input resolution or bitrate,\
              \ the stream probably will disconnect immediately.</i> Some types generate\
              \ multiple qualities (renditions) from the original input; this automatically\
              \ gives viewers the best experience for their devices and network conditions.\
              \ Some types provide transcoded video; transcoding allows higher playback\
              \ quality across a range of download speeds. Default: <code>STANDARD</code>.\
              \ Valid values:</p> <ul> <li> <p> <code>BASIC</code>: Video is transmuxed:\
              \ Amazon IVS delivers the original input quality to viewers. The viewer’\
              s video-quality choice is limited to the original input. Input resolution\
              \ can be up to 1080p and bitrate can be up to 1.5 Mbps for 480p and\
              \ up to 3.5 Mbps for resolutions between 480p and 1080p. Original audio\
              \ is passed through.</p> </li> <li> <p> <code>STANDARD</code>: Video\
              \ is transcoded: multiple qualities are generated from the original\
              \ input, to automatically give viewers the best experience for their\
              \ devices and network conditions. Transcoding allows higher playback\
              \ quality across a range of download speeds. Resolution can be up to\
              \ 1080p and bitrate can be up to 8.5 Mbps. Audio is transcoded only\
              \ for renditions 360p and below; above that, audio is passed through.\
              \ This is the default when you create a channel.</p> </li> <li> <p>\
              \ <code>ADVANCED_SD</code>: Video is transcoded; multiple qualities\
              \ are generated from the original input, to automatically give viewers\
              \ the best experience for their devices and network conditions. Input\
              \ resolution can be up to 1080p and bitrate can be up to 8.5 Mbps; output\
              \ is capped at SD quality (480p). You can select an optional transcode\
              \ preset (see below). Audio for all renditions is transcoded, and an\
              \ audio-only rendition is available.</p> </li> <li> <p> <code>ADVANCED_HD</code>:\
              \ Video is transcoded; multiple qualities are generated from the original\
              \ input, to automatically give viewers the best experience for their\
              \ devices and network conditions. Input resolution can be up to 1080p\
              \ and bitrate can be up to 8.5 Mbps; output is capped at HD quality\
              \ (720p). You can select an optional transcode preset (see below). Audio\
              \ for all renditions is transcoded, and an audio-only rendition is available.</p>\
              \ </li> </ul> <p>Optional <i>transcode presets</i> (available for the\
              \ <code>ADVANCED</code> types) allow you to trade off available download\
              \ bandwidth and video quality, to optimize the viewing experience. There\
              \ are two presets:</p> <ul> <li> <p> <i>Constrained bandwidth delivery</i>\
              \ uses a lower bitrate for each quality level. Use it if you have low\
              \ download bandwidth and/or simple video content (e.g., talking heads)</p>\
              \ </li> <li> <p> <i>Higher bandwidth delivery</i> uses a higher bitrate\
              \ for each quality level. Use it if you have high download bandwidth\
              \ and/or complex video content (e.g., flashes and quick scene changes).</p>\
              \ </li> </ul>"
      required:
      - arn
      title: UpdateChannelRequest
      type: object
    BatchGetChannel_request:
      properties:
        arns:
          description: "Array of ARNs, one per channel."
          items:
            $ref: '#/components/schemas/ChannelArn'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - arns
      type: object
    BatchGetStreamKey_request:
      properties:
        arns:
          description: "Array of ARNs, one per stream key."
          items:
            $ref: '#/components/schemas/StreamKeyArn'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - arns
      type: object
    BatchStartViewerSessionRevocation_request:
      properties:
        viewerSessions:
          description: "Array of viewer sessions, one per channel-ARN and viewer-ID\
            \ pair."
          items:
            $ref: '#/components/schemas/BatchStartViewerSessionRevocationViewerSession'
          maxItems: 20
          minItems: 1
          type: array
      required:
      - viewerSessions
      type: object
    CreateChannel_request:
      properties:
        authorized:
          description: "Whether the channel is private (enabled for playback authorization).\
            \ Default: <code>false</code>."
          type: boolean
        insecureIngest:
          description: "Whether the channel allows insecure RTMP ingest. Default:\
            \ <code>false</code>."
          type: boolean
        latencyMode:
          description: "Channel latency mode. Use <code>NORMAL</code> to broadcast\
            \ and deliver live video up to Full HD. Use <code>LOW</code> for near-real-time\
            \ interaction with viewers. (Note: In the Amazon IVS console, <code>LOW</code>\
            \ and <code>NORMAL</code> correspond to Ultra-low and Standard, respectively.)\
            \ Default: <code>LOW</code>."
          enum:
          - NORMAL
          - LOW
          type: string
        name:
          description: Channel name.
          maxLength: 128
          minLength: 0
          pattern: "^[a-zA-Z0-9-_]*$"
          type: string
        preset:
          description: "Optional transcode preset for the channel. This is selectable\
            \ only for <code>ADVANCED_HD</code> and <code>ADVANCED_SD</code> channel\
            \ types. For those channel types, the default <code>preset</code> is <code>HIGHER_BANDWIDTH_DELIVERY</code>.\
            \ For other channel types (<code>BASIC</code> and <code>STANDARD</code>),\
            \ <code>preset</code> is the empty string (<code>\"\"</code>)."
          enum:
          - HIGHER_BANDWIDTH_DELIVERY
          - CONSTRAINED_BANDWIDTH_DELIVERY
          type: string
        recordingConfigurationArn:
          description: "Recording-configuration ARN. Default: \"\" (empty string,\
            \ recording is disabled)."
          maxLength: 128
          minLength: 0
          pattern: "^$|^arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$"
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "Array of 1-50 maps, each of the form <code>string:string (key:value)</code>.\
            \ See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
            >Tagging Amazon Web Services Resources</a> for more information, including\
            \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
            ; Amazon IVS has no service-specific constraints beyond what is documented\
            \ there."
          maxProperties: 50
          minProperties: 0
          type: object
        type:
          description: "<p>Channel type, which determines the allowable resolution\
            \ and bitrate. <i>If you exceed the allowable input resolution or bitrate,\
            \ the stream probably will disconnect immediately.</i> Some types generate\
            \ multiple qualities (renditions) from the original input; this automatically\
            \ gives viewers the best experience for their devices and network conditions.\
            \ Some types provide transcoded video; transcoding allows higher playback\
            \ quality across a range of download speeds. Default: <code>STANDARD</code>.\
            \ Valid values:</p> <ul> <li> <p> <code>BASIC</code>: Video is transmuxed:\
            \ Amazon IVS delivers the original input quality to viewers. The viewer’\
            s video-quality choice is limited to the original input. Input resolution\
            \ can be up to 1080p and bitrate can be up to 1.5 Mbps for 480p and up\
            \ to 3.5 Mbps for resolutions between 480p and 1080p. Original audio is\
            \ passed through.</p> </li> <li> <p> <code>STANDARD</code>: Video is transcoded:\
            \ multiple qualities are generated from the original input, to automatically\
            \ give viewers the best experience for their devices and network conditions.\
            \ Transcoding allows higher playback quality across a range of download\
            \ speeds. Resolution can be up to 1080p and bitrate can be up to 8.5 Mbps.\
            \ Audio is transcoded only for renditions 360p and below; above that,\
            \ audio is passed through. This is the default when you create a channel.</p>\
            \ </li> <li> <p> <code>ADVANCED_SD</code>: Video is transcoded; multiple\
            \ qualities are generated from the original input, to automatically give\
            \ viewers the best experience for their devices and network conditions.\
            \ Input resolution can be up to 1080p and bitrate can be up to 8.5 Mbps;\
            \ output is capped at SD quality (480p). You can select an optional transcode\
            \ preset (see below). Audio for all renditions is transcoded, and an audio-only\
            \ rendition is available.</p> </li> <li> <p> <code>ADVANCED_HD</code>:\
            \ Video is transcoded; multiple qualities are generated from the original\
            \ input, to automatically give viewers the best experience for their devices\
            \ and network conditions. Input resolution can be up to 1080p and bitrate\
            \ can be up to 8.5 Mbps; output is capped at HD quality (720p). You can\
            \ select an optional transcode preset (see below). Audio for all renditions\
            \ is transcoded, and an audio-only rendition is available.</p> </li> </ul>\
            \ <p>Optional <i>transcode presets</i> (available for the <code>ADVANCED</code>\
            \ types) allow you to trade off available download bandwidth and video\
            \ quality, to optimize the viewing experience. There are two presets:</p>\
            \ <ul> <li> <p> <i>Constrained bandwidth delivery</i> uses a lower bitrate\
            \ for each quality level. Use it if you have low download bandwidth and/or\
            \ simple video content (e.g., talking heads)</p> </li> <li> <p> <i>Higher\
            \ bandwidth delivery</i> uses a higher bitrate for each quality level.\
            \ Use it if you have high download bandwidth and/or complex video content\
            \ (e.g., flashes and quick scene changes).</p> </li> </ul>"
          enum:
          - BASIC
          - STANDARD
          - ADVANCED_SD
          - ADVANCED_HD
          type: string
      type: object
    CreateRecordingConfiguration_request_destinationConfiguration_s3:
      allOf:
      - $ref: '#/components/schemas/S3DestinationConfiguration'
      - description: An S3 destination configuration where recorded videos will be
          stored.
      example:
        bucketName: ""
    CreateRecordingConfiguration_request_destinationConfiguration:
      description: "A complex type that describes a location where recorded videos\
        \ will be stored. Each member represents a type of destination configuration.\
        \ For recording, you define one and only one type of destination configuration."
      properties:
        s3:
          $ref: '#/components/schemas/CreateRecordingConfiguration_request_destinationConfiguration_s3'
      type: object
    CreateRecordingConfiguration_request_renditionConfiguration:
      description: Object that describes which renditions should be recorded for a
        stream.
      properties:
        renditionSelection:
          allOf:
          - $ref: '#/components/schemas/RenditionConfigurationRenditionSelection'
          - description: "Indicates which set of renditions are recorded for a stream.\
              \ For <code>BASIC</code> channels, the <code>CUSTOM</code> value has\
              \ no effect. If <code>CUSTOM</code> is specified, a set of renditions\
              \ must be specified in the <code>renditions</code> field. Default: <code>ALL</code>."
        renditions:
          allOf:
          - $ref: '#/components/schemas/RenditionConfigurationRenditionList'
          - description: "Indicates which renditions are recorded for a stream, if\
              \ <code>renditionSelection</code> is <code>CUSTOM</code>; otherwise,\
              \ this field is irrelevant. The selected renditions are recorded if\
              \ they are available during the stream. If a selected rendition is unavailable,\
              \ the best available rendition is recorded. For details on the resolution\
              \ dimensions of each rendition, see <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/record-to-s3.html\"\
              >Auto-Record to Amazon S3</a>."
      type: object
    CreateRecordingConfiguration_request_thumbnailConfiguration:
      description: An object representing a configuration of thumbnails for recorded
        video.
      properties:
        recordingMode:
          allOf:
          - $ref: '#/components/schemas/RecordingMode'
          - description: "Thumbnail recording mode. Default: <code>INTERVAL</code>."
        resolution:
          allOf:
          - $ref: '#/components/schemas/ThumbnailConfigurationResolution'
          - description: "Indicates the desired resolution of recorded thumbnails.\
              \ Thumbnails are recorded at the selected resolution if the corresponding\
              \ rendition is available during the stream; otherwise, they are recorded\
              \ at source resolution. For more information about resolution values\
              \ and their corresponding height and width dimensions, see <a href=\"\
              https://docs.aws.amazon.com/ivs/latest/userguide/record-to-s3.html\"\
              >Auto-Record to Amazon S3</a>. Default: Null (source resolution is returned)."
        storage:
          allOf:
          - $ref: '#/components/schemas/ThumbnailConfigurationStorageList'
          - description: "Indicates the format in which thumbnails are recorded. <code>SEQUENTIAL</code>\
              \ records all generated thumbnails in a serial manner, to the media/thumbnails\
              \ directory. <code>LATEST</code> saves the latest thumbnail in media/latest_thumbnail/thumb.jpg\
              \ and overwrites it at the interval specified by <code>targetIntervalSeconds</code>.\
              \ You can enable both <code>SEQUENTIAL</code> and <code>LATEST</code>.\
              \ Default: <code>SEQUENTIAL</code>."
        targetIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/TargetIntervalSeconds'
          - description: "<p>The targeted thumbnail-generation interval in seconds.\
              \ This is configurable (and required) only if <code>recordingMode</code>\
              \ is <code>INTERVAL</code>. Default: 60.</p> <p> <b>Important:</b> For\
              \ the <code>BASIC</code> channel type, setting a value for <code>targetIntervalSeconds</code>\
              \ does not guarantee that thumbnails are generated at the specified\
              \ interval. For thumbnails to be generated at the <code>targetIntervalSeconds</code>\
              \ interval, the <code>IDR/Keyframe</code> value for the input video\
              \ must be less than the <code>targetIntervalSeconds</code> value. See\
              \ <a href=\"https://docs.aws.amazon.com/ivs/latest/userguide/streaming-config.html\"\
              > Amazon IVS Streaming Configuration</a> for information on setting\
              \ <code>IDR/Keyframe</code> to the recommended value in video-encoder\
              \ settings.</p>"
      type: object
    CreateRecordingConfiguration_request:
      properties:
        destinationConfiguration:
          $ref: '#/components/schemas/CreateRecordingConfiguration_request_destinationConfiguration'
        name:
          description: Recording-configuration name. The value does not need to be
            unique.
          maxLength: 128
          minLength: 0
          pattern: "^[a-zA-Z0-9-_]*$"
          type: string
        recordingReconnectWindowSeconds:
          description: "If a broadcast disconnects and then reconnects within the\
            \ specified interval, the multiple streams will be considered a single\
            \ broadcast and merged together. Default: 0."
          maximum: 300
          minimum: 0
          type: integer
        renditionConfiguration:
          $ref: '#/components/schemas/CreateRecordingConfiguration_request_renditionConfiguration'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "Array of 1-50 maps, each of the form <code>string:string (key:value)</code>.\
            \ See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
            >Tagging Amazon Web Services Resources</a> for more information, including\
            \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
            ; Amazon IVS has no service-specific constraints beyond what is documented\
            \ there."
          maxProperties: 50
          minProperties: 0
          type: object
        thumbnailConfiguration:
          $ref: '#/components/schemas/CreateRecordingConfiguration_request_thumbnailConfiguration'
      required:
      - destinationConfiguration
      type: object
    CreateStreamKey_request:
      properties:
        channelArn:
          description: ARN of the channel for which to create the stream key.
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$"
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "Array of 1-50 maps, each of the form <code>string:string (key:value)</code>.\
            \ See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
            >Tagging Amazon Web Services Resources</a> for more information, including\
            \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
            ; Amazon IVS has no service-specific constraints beyond what is documented\
            \ there."
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - channelArn
      type: object
    DeleteChannel_request:
      properties:
        arn:
          description: ARN of the channel to be deleted.
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$"
          type: string
      required:
      - arn
      type: object
    DeletePlaybackKeyPair_request:
      properties:
        arn:
          description: ARN of the key pair to be deleted.
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:playback-key/[a-zA-Z0-9-]+$"
          type: string
      required:
      - arn
      type: object
    DeleteRecordingConfiguration_request:
      properties:
        arn:
          description: ARN of the recording configuration to be deleted.
          maxLength: 128
          minLength: 0
          pattern: "^arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$"
          type: string
      required:
      - arn
      type: object
    DeleteStreamKey_request:
      properties:
        arn:
          description: ARN of the stream key to be deleted.
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:stream-key/[a-zA-Z0-9-]+$"
          type: string
      required:
      - arn
      type: object
    GetChannel_request:
      properties:
        arn:
          description: ARN of the channel for which the configuration is to be retrieved.
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$"
          type: string
      required:
      - arn
      type: object
    GetPlaybackKeyPair_request:
      properties:
        arn:
          description: ARN of the key pair to be returned.
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:playback-key/[a-zA-Z0-9-]+$"
          type: string
      required:
      - arn
      type: object
    GetRecordingConfiguration_request:
      properties:
        arn:
          description: ARN of the recording configuration to be retrieved.
          maxLength: 128
          minLength: 0
          pattern: "^arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$"
          type: string
      required:
      - arn
      type: object
    GetStream_request:
      properties:
        channelArn:
          description: Channel ARN for stream to be accessed.
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$"
          type: string
      required:
      - channelArn
      type: object
    GetStreamKey_request:
      properties:
        arn:
          description: ARN for the stream key to be retrieved.
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:stream-key/[a-zA-Z0-9-]+$"
          type: string
      required:
      - arn
      type: object
    GetStreamSession_request:
      properties:
        channelArn:
          description: ARN of the channel resource
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$"
          type: string
        streamId:
          description: "Unique identifier for a live or previously live stream in\
            \ the specified channel. If no <code>streamId</code> is provided, this\
            \ returns the most recent stream session for the channel, if it exists."
          maxLength: 26
          minLength: 26
          pattern: "^st-[a-zA-Z0-9]+$"
          type: string
      required:
      - channelArn
      type: object
    ImportPlaybackKeyPair_request:
      properties:
        name:
          description: Playback-key-pair name. The value does not need to be unique.
          maxLength: 128
          minLength: 0
          pattern: "^[a-zA-Z0-9-_]*$"
          type: string
        publicKeyMaterial:
          description: The public portion of a customer-generated key pair.
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "Any tags provided with the request are added to the playback\
            \ key pair tags. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
            >Tagging Amazon Web Services Resources</a> for more information, including\
            \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
            ; Amazon IVS has no service-specific constraints beyond what is documented\
            \ there."
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - publicKeyMaterial
      type: object
    ListChannels_request:
      properties:
        filterByName:
          description: Filters the channel list to match the specified name.
          maxLength: 128
          minLength: 0
          pattern: "^[a-zA-Z0-9-_]*$"
          type: string
        filterByRecordingConfigurationArn:
          description: Filters the channel list to match the specified recording-configuration
            ARN.
          maxLength: 128
          minLength: 0
          pattern: "^$|^arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$"
          type: string
        maxResults:
          description: "Maximum number of channels to return. Default: 100."
          maximum: 100
          minimum: 1
          type: integer
        nextToken:
          description: The first channel to retrieve. This is used for pagination;
            see the <code>nextToken</code> response field.
          maxLength: 1024
          minLength: 0
          pattern: "^[a-zA-Z0-9+/=_-]*$"
          type: string
      type: object
    ListPlaybackKeyPairs_request:
      properties:
        maxResults:
          description: "Maximum number of key pairs to return. Default: your service\
            \ quota or 100, whichever is smaller."
          maximum: 100
          minimum: 1
          type: integer
        nextToken:
          description: The first key pair to retrieve. This is used for pagination;
            see the <code>nextToken</code> response field.
          maxLength: 1024
          minLength: 0
          pattern: "^[a-zA-Z0-9+/=_-]*$"
          type: string
      type: object
    ListRecordingConfigurations_request:
      properties:
        maxResults:
          description: "Maximum number of recording configurations to return. Default:\
            \ your service quota or 100, whichever is smaller. "
          maximum: 100
          minimum: 1
          type: integer
        nextToken:
          description: The first recording configuration to retrieve. This is used
            for pagination; see the <code>nextToken</code> response field.
          maxLength: 1024
          minLength: 0
          pattern: "^[a-zA-Z0-9+/=_-]*$"
          type: string
      type: object
    ListStreamKeys_request:
      properties:
        channelArn:
          description: Channel ARN used to filter the list.
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$"
          type: string
        maxResults:
          description: "Maximum number of streamKeys to return. Default: 1."
          maximum: 50
          minimum: 1
          type: integer
        nextToken:
          description: The first stream key to retrieve. This is used for pagination;
            see the <code>nextToken</code> response field.
          maxLength: 1024
          minLength: 0
          pattern: "^[a-zA-Z0-9+/=_-]*$"
          type: string
      required:
      - channelArn
      type: object
    ListStreamSessions_request:
      properties:
        channelArn:
          description: Channel ARN used to filter the list.
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$"
          type: string
        maxResults:
          description: "Maximum number of streams to return. Default: 100."
          maximum: 100
          minimum: 1
          type: integer
        nextToken:
          description: The first stream to retrieve. This is used for pagination;
            see the <code>nextToken</code> response field.
          maxLength: 1024
          minLength: 0
          pattern: "^[a-zA-Z0-9+/=_-]*$"
          type: string
      required:
      - channelArn
      type: object
    ListStreams_request_filterBy:
      description: Object specifying the stream attribute on which to filter.
      properties:
        health:
          allOf:
          - $ref: '#/components/schemas/StreamHealth'
          - description: The stream’s health.
      type: object
    ListStreams_request:
      properties:
        filterBy:
          $ref: '#/components/schemas/ListStreams_request_filterBy'
        maxResults:
          description: "Maximum number of streams to return. Default: 100."
          maximum: 100
          minimum: 1
          type: integer
        nextToken:
          description: The first stream to retrieve. This is used for pagination;
            see the <code>nextToken</code> response field.
          maxLength: 1024
          minLength: 0
          pattern: "^[a-zA-Z0-9+/=_-]*$"
          type: string
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "Array of tags to be added or updated. Array of maps, each\
            \ of the form <code>string:string (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
            >Tagging Amazon Web Services Resources</a> for more information, including\
            \ restrictions that apply to tags and \"Tag naming limits and requirements\"\
            ; Amazon IVS has no service-specific constraints beyond what is documented\
            \ there."
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - tags
      type: object
    PutMetadata_request:
      properties:
        channelArn:
          description: ARN of the channel into which metadata is inserted. This channel
            must have an active stream.
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$"
          type: string
        metadata:
          description: "Metadata to insert into the stream. Maximum: 1 KB per request."
          format: password
          minLength: 1
          type: string
      required:
      - channelArn
      - metadata
      type: object
    StartViewerSessionRevocation_request:
      properties:
        channelArn:
          description: The ARN of the channel associated with the viewer session to
            revoke.
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$"
          type: string
        viewerId:
          description: "The ID of the viewer associated with the viewer session to\
            \ revoke. Do not use this field for personally identifying, confidential,\
            \ or sensitive information."
          maxLength: 40
          minLength: 1
          type: string
        viewerSessionVersionsLessThanOrEqualTo:
          description: "An optional filter on which versions of the viewer session\
            \ to revoke. All versions less than or equal to the specified version\
            \ will be revoked. Default: 0."
          minimum: 0
          type: integer
      required:
      - channelArn
      - viewerId
      type: object
    StopStream_request:
      properties:
        channelArn:
          description: ARN of the channel for which the stream is to be stopped.
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$"
          type: string
      required:
      - channelArn
      type: object
    UpdateChannel_request:
      properties:
        arn:
          description: ARN of the channel to be updated.
          maxLength: 128
          minLength: 1
          pattern: "^arn:aws:[is]vs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$"
          type: string
        authorized:
          description: Whether the channel is private (enabled for playback authorization).
          type: boolean
        insecureIngest:
          description: "Whether the channel allows insecure RTMP ingest. Default:\
            \ <code>false</code>."
          type: boolean
        latencyMode:
          description: "Channel latency mode. Use <code>NORMAL</code> to broadcast\
            \ and deliver live video up to Full HD. Use <code>LOW</code> for near-real-time\
            \ interaction with viewers. (Note: In the Amazon IVS console, <code>LOW</code>\
            \ and <code>NORMAL</code> correspond to Ultra-low and Standard, respectively.)"
          enum:
          - NORMAL
          - LOW
          type: string
        name:
          description: Channel name.
          maxLength: 128
          minLength: 0
          pattern: "^[a-zA-Z0-9-_]*$"
          type: string
        preset:
          description: "Optional transcode preset for the channel. This is selectable\
            \ only for <code>ADVANCED_HD</code> and <code>ADVANCED_SD</code> channel\
            \ types. For those channel types, the default <code>preset</code> is <code>HIGHER_BANDWIDTH_DELIVERY</code>.\
            \ For other channel types (<code>BASIC</code> and <code>STANDARD</code>),\
            \ <code>preset</code> is the empty string (<code>\"\"</code>)."
          enum:
          - HIGHER_BANDWIDTH_DELIVERY
          - CONSTRAINED_BANDWIDTH_DELIVERY
          type: string
        recordingConfigurationArn:
          description: "Recording-configuration ARN. If this is set to an empty string,\
            \ recording is disabled. A value other than an empty string indicates\
            \ that recording is enabled"
          maxLength: 128
          minLength: 0
          pattern: "^$|^arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$"
          type: string
        type:
          description: "<p>Channel type, which determines the allowable resolution\
            \ and bitrate. <i>If you exceed the allowable input resolution or bitrate,\
            \ the stream probably will disconnect immediately.</i> Some types generate\
            \ multiple qualities (renditions) from the original input; this automatically\
            \ gives viewers the best experience for their devices and network conditions.\
            \ Some types provide transcoded video; transcoding allows higher playback\
            \ quality across a range of download speeds. Default: <code>STANDARD</code>.\
            \ Valid values:</p> <ul> <li> <p> <code>BASIC</code>: Video is transmuxed:\
            \ Amazon IVS delivers the original input quality to viewers. The viewer’\
            s video-quality choice is limited to the original input. Input resolution\
            \ can be up to 1080p and bitrate can be up to 1.5 Mbps for 480p and up\
            \ to 3.5 Mbps for resolutions between 480p and 1080p. Original audio is\
            \ passed through.</p> </li> <li> <p> <code>STANDARD</code>: Video is transcoded:\
            \ multiple qualities are generated from the original input, to automatically\
            \ give viewers the best experience for their devices and network conditions.\
            \ Transcoding allows higher playback quality across a range of download\
            \ speeds. Resolution can be up to 1080p and bitrate can be up to 8.5 Mbps.\
            \ Audio is transcoded only for renditions 360p and below; above that,\
            \ audio is passed through. This is the default when you create a channel.</p>\
            \ </li> <li> <p> <code>ADVANCED_SD</code>: Video is transcoded; multiple\
            \ qualities are generated from the original input, to automatically give\
            \ viewers the best experience for their devices and network conditions.\
            \ Input resolution can be up to 1080p and bitrate can be up to 8.5 Mbps;\
            \ output is capped at SD quality (480p). You can select an optional transcode\
            \ preset (see below). Audio for all renditions is transcoded, and an audio-only\
            \ rendition is available.</p> </li> <li> <p> <code>ADVANCED_HD</code>:\
            \ Video is transcoded; multiple qualities are generated from the original\
            \ input, to automatically give viewers the best experience for their devices\
            \ and network conditions. Input resolution can be up to 1080p and bitrate\
            \ can be up to 8.5 Mbps; output is capped at HD quality (720p). You can\
            \ select an optional transcode preset (see below). Audio for all renditions\
            \ is transcoded, and an audio-only rendition is available.</p> </li> </ul>\
            \ <p>Optional <i>transcode presets</i> (available for the <code>ADVANCED</code>\
            \ types) allow you to trade off available download bandwidth and video\
            \ quality, to optimize the viewing experience. There are two presets:</p>\
            \ <ul> <li> <p> <i>Constrained bandwidth delivery</i> uses a lower bitrate\
            \ for each quality level. Use it if you have low download bandwidth and/or\
            \ simple video content (e.g., talking heads)</p> </li> <li> <p> <i>Higher\
            \ bandwidth delivery</i> uses a higher bitrate for each quality level.\
            \ Use it if you have high download bandwidth and/or complex video content\
            \ (e.g., flashes and quick scene changes).</p> </li> </ul>"
          enum:
          - BASIC
          - STANDARD
          - ADVANCED_SD
          - ADVANCED_HD
          type: string
      required:
      - arn
      type: object
    CreateChannelResponse_channel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      - description: <p/>
      example:
        latencyMode: ""
        ingestEndpoint: ""
        insecureIngest: ""
        authorized: ""
        playbackUrl: ""
        name: ""
        preset: ""
        arn: ""
        type: ""
        recordingConfigurationArn: ""
        tags: ""
    CreateChannelResponse_streamKey:
      allOf:
      - $ref: '#/components/schemas/StreamKey'
      - description: <p/>
      example:
        channelArn: ""
        arn: ""
        value: ""
        tags: ""
    CreateRecordingConfigurationResponse_recordingConfiguration:
      allOf:
      - $ref: '#/components/schemas/RecordingConfiguration'
      - description: <zonbook></zonbook><xhtml></xhtml>
      example:
        renditionConfiguration:
          renditions: ""
          renditionSelection: ""
        destinationConfiguration:
          s3:
            bucketName: ""
        recordingReconnectWindowSeconds: ""
        thumbnailConfiguration:
          storage: ""
          resolution: ""
          recordingMode: ""
          targetIntervalSeconds: ""
        name: ""
        state: ""
        arn: ""
        tags: ""
    CreateStreamKeyResponse_streamKey:
      allOf:
      - $ref: '#/components/schemas/StreamKey'
      - description: Stream key used to authenticate an RTMPS stream for ingestion.
      example:
        channelArn: ""
        arn: ""
        value: ""
        tags: ""
    GetPlaybackKeyPairResponse_keyPair:
      allOf:
      - $ref: '#/components/schemas/PlaybackKeyPair'
      - description: <zonbook></zonbook><xhtml></xhtml>
      example:
        fingerprint: ""
        name: ""
        arn: ""
        tags: ""
    GetStreamResponse_stream:
      allOf:
      - $ref: '#/components/schemas/Stream'
      - description: <p/>
      example:
        channelArn: ""
        streamId: ""
        playbackUrl: ""
        health: ""
        startTime: ""
        viewerCount: ""
        state: ""
    GetStreamKeyResponse_streamKey:
      allOf:
      - $ref: '#/components/schemas/StreamKey'
      - description: <zonbook></zonbook><xhtml></xhtml>
      example:
        channelArn: ""
        arn: ""
        value: ""
        tags: ""
    GetStreamSessionResponse_streamSession:
      allOf:
      - $ref: '#/components/schemas/StreamSession'
      - description: List of stream details.
      example:
        streamId: ""
        truncatedEvents: ""
        channel:
          latencyMode: ""
          ingestEndpoint: ""
          insecureIngest: ""
          authorized: ""
          playbackUrl: ""
          name: ""
          preset: ""
          arn: ""
          type: ""
          recordingConfigurationArn: ""
          tags: ""
        ingestConfiguration:
          audio:
            codec: ""
            channels: ""
            targetBitrate: ""
            sampleRate: ""
          video:
            videoWidth: ""
            avcProfile: ""
            codec: ""
            targetBitrate: ""
            avcLevel: ""
            targetFramerate: ""
            encoder: ""
            videoHeight: ""
        startTime: ""
        endTime: ""
        recordingConfiguration:
          renditionConfiguration:
            renditions: ""
            renditionSelection: ""
          destinationConfiguration:
            s3:
              bucketName: ""
          recordingReconnectWindowSeconds: ""
          thumbnailConfiguration:
            storage: ""
            resolution: ""
            recordingMode: ""
            targetIntervalSeconds: ""
          name: ""
          state: ""
          arn: ""
          tags: ""
    ImportPlaybackKeyPairResponse_keyPair:
      allOf:
      - $ref: '#/components/schemas/PlaybackKeyPair'
      - description: <p/>
      example:
        fingerprint: ""
        name: ""
        arn: ""
        tags: ""
    CreateRecordingConfigurationRequest_destinationConfiguration:
      allOf:
      - $ref: '#/components/schemas/DestinationConfiguration'
      - description: A complex type that contains a destination configuration for
          where recorded video will be stored.
      example:
        s3:
          bucketName: ""
    CreateRecordingConfigurationRequest_renditionConfiguration:
      allOf:
      - $ref: '#/components/schemas/RenditionConfiguration'
      - description: Object that describes which renditions should be recorded for
          a stream.
      example:
        renditions: ""
        renditionSelection: ""
    CreateRecordingConfigurationRequest_thumbnailConfiguration:
      allOf:
      - $ref: '#/components/schemas/ThumbnailConfiguration'
      - description: A complex type that allows you to enable/disable the recording
          of thumbnails for a live session and modify the interval at which thumbnails
          are generated for the live session.
      example:
        storage: ""
        resolution: ""
        recordingMode: ""
        targetIntervalSeconds: ""
    RecordingConfiguration_destinationConfiguration:
      allOf:
      - $ref: '#/components/schemas/DestinationConfiguration'
      - description: A complex type that contains information about where recorded
          video will be stored.
      example:
        s3:
          bucketName: ""
    StreamSession_channel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      - description: The properties of the channel at the time of going live.
      example:
        latencyMode: ""
        ingestEndpoint: ""
        insecureIngest: ""
        authorized: ""
        playbackUrl: ""
        name: ""
        preset: ""
        arn: ""
        type: ""
        recordingConfigurationArn: ""
        tags: ""
    StreamSession_ingestConfiguration:
      allOf:
      - $ref: '#/components/schemas/IngestConfiguration'
      - description: The properties of the incoming RTMP stream for the stream.
      example:
        audio:
          codec: ""
          channels: ""
          targetBitrate: ""
          sampleRate: ""
        video:
          videoWidth: ""
          avcProfile: ""
          codec: ""
          targetBitrate: ""
          avcLevel: ""
          targetFramerate: ""
          encoder: ""
          videoHeight: ""
    StreamSession_recordingConfiguration:
      allOf:
      - $ref: '#/components/schemas/RecordingConfiguration'
      - description: The properties of recording the live stream.
      example:
        renditionConfiguration:
          renditions: ""
          renditionSelection: ""
        destinationConfiguration:
          s3:
            bucketName: ""
        recordingReconnectWindowSeconds: ""
        thumbnailConfiguration:
          storage: ""
          resolution: ""
          recordingMode: ""
          targetIntervalSeconds: ""
        name: ""
        state: ""
        arn: ""
        tags: ""
    IngestConfiguration_audio:
      allOf:
      - $ref: '#/components/schemas/AudioConfiguration'
      - description: Encoder settings for audio.
      example:
        codec: ""
        channels: ""
        targetBitrate: ""
        sampleRate: ""
    IngestConfiguration_video:
      allOf:
      - $ref: '#/components/schemas/VideoConfiguration'
      - description: Encoder settings for video.
      example:
        videoWidth: ""
        avcProfile: ""
        codec: ""
        targetBitrate: ""
        avcLevel: ""
        targetFramerate: ""
        encoder: ""
        videoHeight: ""
    ListStreamsRequest_filterBy:
      allOf:
      - $ref: '#/components/schemas/StreamFilters'
      - description: Filters the stream list to match the specified criterion.
      example:
        health: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

