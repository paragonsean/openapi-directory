# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ingest_configuration_audio import IngestConfigurationAudio
from openapi_server.models.ingest_configuration_video import IngestConfigurationVideo
from openapi_server import util


class StreamSessionIngestConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio: IngestConfigurationAudio=None, video: IngestConfigurationVideo=None):
        """StreamSessionIngestConfiguration - a model defined in OpenAPI

        :param audio: The audio of this StreamSessionIngestConfiguration.
        :param video: The video of this StreamSessionIngestConfiguration.
        """
        self.openapi_types = {
            'audio': IngestConfigurationAudio,
            'video': IngestConfigurationVideo
        }

        self.attribute_map = {
            'audio': 'audio',
            'video': 'video'
        }

        self._audio = audio
        self._video = video

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamSessionIngestConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamSession_ingestConfiguration of this StreamSessionIngestConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio(self):
        """Gets the audio of this StreamSessionIngestConfiguration.


        :return: The audio of this StreamSessionIngestConfiguration.
        :rtype: IngestConfigurationAudio
        """
        return self._audio

    @audio.setter
    def audio(self, audio):
        """Sets the audio of this StreamSessionIngestConfiguration.


        :param audio: The audio of this StreamSessionIngestConfiguration.
        :type audio: IngestConfigurationAudio
        """

        self._audio = audio

    @property
    def video(self):
        """Gets the video of this StreamSessionIngestConfiguration.


        :return: The video of this StreamSessionIngestConfiguration.
        :rtype: IngestConfigurationVideo
        """
        return self._video

    @video.setter
    def video(self, video):
        """Sets the video of this StreamSessionIngestConfiguration.


        :param video: The video of this StreamSessionIngestConfiguration.
        :type video: IngestConfigurationVideo
        """

        self._video = video
