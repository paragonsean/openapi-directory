# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_start_viewer_session_revocation_viewer_session import BatchStartViewerSessionRevocationViewerSession
from openapi_server import util


class BatchStartViewerSessionRevocationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, viewer_sessions: List[BatchStartViewerSessionRevocationViewerSession]=None):
        """BatchStartViewerSessionRevocationRequest - a model defined in OpenAPI

        :param viewer_sessions: The viewer_sessions of this BatchStartViewerSessionRevocationRequest.
        """
        self.openapi_types = {
            'viewer_sessions': List[BatchStartViewerSessionRevocationViewerSession]
        }

        self.attribute_map = {
            'viewer_sessions': 'viewerSessions'
        }

        self._viewer_sessions = viewer_sessions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchStartViewerSessionRevocationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchStartViewerSessionRevocation_request of this BatchStartViewerSessionRevocationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def viewer_sessions(self):
        """Gets the viewer_sessions of this BatchStartViewerSessionRevocationRequest.

        Array of viewer sessions, one per channel-ARN and viewer-ID pair.

        :return: The viewer_sessions of this BatchStartViewerSessionRevocationRequest.
        :rtype: List[BatchStartViewerSessionRevocationViewerSession]
        """
        return self._viewer_sessions

    @viewer_sessions.setter
    def viewer_sessions(self, viewer_sessions):
        """Sets the viewer_sessions of this BatchStartViewerSessionRevocationRequest.

        Array of viewer sessions, one per channel-ARN and viewer-ID pair.

        :param viewer_sessions: The viewer_sessions of this BatchStartViewerSessionRevocationRequest.
        :type viewer_sessions: List[BatchStartViewerSessionRevocationViewerSession]
        """
        if viewer_sessions is None:
            raise ValueError("Invalid value for `viewer_sessions`, must not be `None`")
        if viewer_sessions is not None and len(viewer_sessions) > 20:
            raise ValueError("Invalid value for `viewer_sessions`, number of items must be less than or equal to `20`")
        if viewer_sessions is not None and len(viewer_sessions) < 1:
            raise ValueError("Invalid value for `viewer_sessions`, number of items must be greater than or equal to `1`")

        self._viewer_sessions = viewer_sessions
