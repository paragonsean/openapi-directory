# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchStartViewerSessionRevocationViewerSession(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_arn: str=None, viewer_id: str=None, viewer_session_versions_less_than_or_equal_to: int=None):
        """BatchStartViewerSessionRevocationViewerSession - a model defined in OpenAPI

        :param channel_arn: The channel_arn of this BatchStartViewerSessionRevocationViewerSession.
        :param viewer_id: The viewer_id of this BatchStartViewerSessionRevocationViewerSession.
        :param viewer_session_versions_less_than_or_equal_to: The viewer_session_versions_less_than_or_equal_to of this BatchStartViewerSessionRevocationViewerSession.
        """
        self.openapi_types = {
            'channel_arn': str,
            'viewer_id': str,
            'viewer_session_versions_less_than_or_equal_to': int
        }

        self.attribute_map = {
            'channel_arn': 'channelArn',
            'viewer_id': 'viewerId',
            'viewer_session_versions_less_than_or_equal_to': 'viewerSessionVersionsLessThanOrEqualTo'
        }

        self._channel_arn = channel_arn
        self._viewer_id = viewer_id
        self._viewer_session_versions_less_than_or_equal_to = viewer_session_versions_less_than_or_equal_to

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchStartViewerSessionRevocationViewerSession':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchStartViewerSessionRevocationViewerSession of this BatchStartViewerSessionRevocationViewerSession.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_arn(self):
        """Gets the channel_arn of this BatchStartViewerSessionRevocationViewerSession.


        :return: The channel_arn of this BatchStartViewerSessionRevocationViewerSession.
        :rtype: str
        """
        return self._channel_arn

    @channel_arn.setter
    def channel_arn(self, channel_arn):
        """Sets the channel_arn of this BatchStartViewerSessionRevocationViewerSession.


        :param channel_arn: The channel_arn of this BatchStartViewerSessionRevocationViewerSession.
        :type channel_arn: str
        """
        if channel_arn is None:
            raise ValueError("Invalid value for `channel_arn`, must not be `None`")

        self._channel_arn = channel_arn

    @property
    def viewer_id(self):
        """Gets the viewer_id of this BatchStartViewerSessionRevocationViewerSession.


        :return: The viewer_id of this BatchStartViewerSessionRevocationViewerSession.
        :rtype: str
        """
        return self._viewer_id

    @viewer_id.setter
    def viewer_id(self, viewer_id):
        """Sets the viewer_id of this BatchStartViewerSessionRevocationViewerSession.


        :param viewer_id: The viewer_id of this BatchStartViewerSessionRevocationViewerSession.
        :type viewer_id: str
        """
        if viewer_id is None:
            raise ValueError("Invalid value for `viewer_id`, must not be `None`")

        self._viewer_id = viewer_id

    @property
    def viewer_session_versions_less_than_or_equal_to(self):
        """Gets the viewer_session_versions_less_than_or_equal_to of this BatchStartViewerSessionRevocationViewerSession.


        :return: The viewer_session_versions_less_than_or_equal_to of this BatchStartViewerSessionRevocationViewerSession.
        :rtype: int
        """
        return self._viewer_session_versions_less_than_or_equal_to

    @viewer_session_versions_less_than_or_equal_to.setter
    def viewer_session_versions_less_than_or_equal_to(self, viewer_session_versions_less_than_or_equal_to):
        """Sets the viewer_session_versions_less_than_or_equal_to of this BatchStartViewerSessionRevocationViewerSession.


        :param viewer_session_versions_less_than_or_equal_to: The viewer_session_versions_less_than_or_equal_to of this BatchStartViewerSessionRevocationViewerSession.
        :type viewer_session_versions_less_than_or_equal_to: int
        """

        self._viewer_session_versions_less_than_or_equal_to = viewer_session_versions_less_than_or_equal_to
