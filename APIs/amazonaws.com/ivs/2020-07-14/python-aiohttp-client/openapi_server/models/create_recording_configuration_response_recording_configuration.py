# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_recording_configuration_request_rendition_configuration import CreateRecordingConfigurationRequestRenditionConfiguration
from openapi_server.models.create_recording_configuration_request_thumbnail_configuration import CreateRecordingConfigurationRequestThumbnailConfiguration
from openapi_server.models.recording_configuration_destination_configuration import RecordingConfigurationDestinationConfiguration
from openapi_server.models.recording_configuration_state import RecordingConfigurationState
from openapi_server import util


class CreateRecordingConfigurationResponseRecordingConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, destination_configuration: RecordingConfigurationDestinationConfiguration=None, name: str=None, recording_reconnect_window_seconds: int=None, rendition_configuration: CreateRecordingConfigurationRequestRenditionConfiguration=None, state: RecordingConfigurationState=None, tags: Dict=None, thumbnail_configuration: CreateRecordingConfigurationRequestThumbnailConfiguration=None):
        """CreateRecordingConfigurationResponseRecordingConfiguration - a model defined in OpenAPI

        :param arn: The arn of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :param destination_configuration: The destination_configuration of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :param name: The name of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :param recording_reconnect_window_seconds: The recording_reconnect_window_seconds of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :param rendition_configuration: The rendition_configuration of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :param state: The state of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :param tags: The tags of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :param thumbnail_configuration: The thumbnail_configuration of this CreateRecordingConfigurationResponseRecordingConfiguration.
        """
        self.openapi_types = {
            'arn': str,
            'destination_configuration': RecordingConfigurationDestinationConfiguration,
            'name': str,
            'recording_reconnect_window_seconds': int,
            'rendition_configuration': CreateRecordingConfigurationRequestRenditionConfiguration,
            'state': RecordingConfigurationState,
            'tags': Dict,
            'thumbnail_configuration': CreateRecordingConfigurationRequestThumbnailConfiguration
        }

        self.attribute_map = {
            'arn': 'arn',
            'destination_configuration': 'destinationConfiguration',
            'name': 'name',
            'recording_reconnect_window_seconds': 'recordingReconnectWindowSeconds',
            'rendition_configuration': 'renditionConfiguration',
            'state': 'state',
            'tags': 'tags',
            'thumbnail_configuration': 'thumbnailConfiguration'
        }

        self._arn = arn
        self._destination_configuration = destination_configuration
        self._name = name
        self._recording_reconnect_window_seconds = recording_reconnect_window_seconds
        self._rendition_configuration = rendition_configuration
        self._state = state
        self._tags = tags
        self._thumbnail_configuration = thumbnail_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateRecordingConfigurationResponseRecordingConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateRecordingConfigurationResponse_recordingConfiguration of this CreateRecordingConfigurationResponseRecordingConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :return: The arn of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :param arn: The arn of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def destination_configuration(self):
        """Gets the destination_configuration of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :return: The destination_configuration of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :rtype: RecordingConfigurationDestinationConfiguration
        """
        return self._destination_configuration

    @destination_configuration.setter
    def destination_configuration(self, destination_configuration):
        """Sets the destination_configuration of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :param destination_configuration: The destination_configuration of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :type destination_configuration: RecordingConfigurationDestinationConfiguration
        """
        if destination_configuration is None:
            raise ValueError("Invalid value for `destination_configuration`, must not be `None`")

        self._destination_configuration = destination_configuration

    @property
    def name(self):
        """Gets the name of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :return: The name of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :param name: The name of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :type name: str
        """

        self._name = name

    @property
    def recording_reconnect_window_seconds(self):
        """Gets the recording_reconnect_window_seconds of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :return: The recording_reconnect_window_seconds of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :rtype: int
        """
        return self._recording_reconnect_window_seconds

    @recording_reconnect_window_seconds.setter
    def recording_reconnect_window_seconds(self, recording_reconnect_window_seconds):
        """Sets the recording_reconnect_window_seconds of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :param recording_reconnect_window_seconds: The recording_reconnect_window_seconds of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :type recording_reconnect_window_seconds: int
        """

        self._recording_reconnect_window_seconds = recording_reconnect_window_seconds

    @property
    def rendition_configuration(self):
        """Gets the rendition_configuration of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :return: The rendition_configuration of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :rtype: CreateRecordingConfigurationRequestRenditionConfiguration
        """
        return self._rendition_configuration

    @rendition_configuration.setter
    def rendition_configuration(self, rendition_configuration):
        """Sets the rendition_configuration of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :param rendition_configuration: The rendition_configuration of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :type rendition_configuration: CreateRecordingConfigurationRequestRenditionConfiguration
        """

        self._rendition_configuration = rendition_configuration

    @property
    def state(self):
        """Gets the state of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :return: The state of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :rtype: RecordingConfigurationState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :param state: The state of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :type state: RecordingConfigurationState
        """
        if state is None:
            raise ValueError("Invalid value for `state`, must not be `None`")

        self._state = state

    @property
    def tags(self):
        """Gets the tags of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :return: The tags of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :param tags: The tags of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def thumbnail_configuration(self):
        """Gets the thumbnail_configuration of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :return: The thumbnail_configuration of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :rtype: CreateRecordingConfigurationRequestThumbnailConfiguration
        """
        return self._thumbnail_configuration

    @thumbnail_configuration.setter
    def thumbnail_configuration(self, thumbnail_configuration):
        """Sets the thumbnail_configuration of this CreateRecordingConfigurationResponseRecordingConfiguration.


        :param thumbnail_configuration: The thumbnail_configuration of this CreateRecordingConfigurationResponseRecordingConfiguration.
        :type thumbnail_configuration: CreateRecordingConfigurationRequestThumbnailConfiguration
        """

        self._thumbnail_configuration = thumbnail_configuration
