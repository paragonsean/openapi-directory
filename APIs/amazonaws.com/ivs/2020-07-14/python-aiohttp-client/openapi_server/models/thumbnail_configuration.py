# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.recording_mode import RecordingMode
from openapi_server.models.thumbnail_configuration_resolution import ThumbnailConfigurationResolution
from openapi_server import util


class ThumbnailConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recording_mode: RecordingMode=None, resolution: ThumbnailConfigurationResolution=None, storage: List=None, target_interval_seconds: int=None):
        """ThumbnailConfiguration - a model defined in OpenAPI

        :param recording_mode: The recording_mode of this ThumbnailConfiguration.
        :param resolution: The resolution of this ThumbnailConfiguration.
        :param storage: The storage of this ThumbnailConfiguration.
        :param target_interval_seconds: The target_interval_seconds of this ThumbnailConfiguration.
        """
        self.openapi_types = {
            'recording_mode': RecordingMode,
            'resolution': ThumbnailConfigurationResolution,
            'storage': List,
            'target_interval_seconds': int
        }

        self.attribute_map = {
            'recording_mode': 'recordingMode',
            'resolution': 'resolution',
            'storage': 'storage',
            'target_interval_seconds': 'targetIntervalSeconds'
        }

        self._recording_mode = recording_mode
        self._resolution = resolution
        self._storage = storage
        self._target_interval_seconds = target_interval_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ThumbnailConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ThumbnailConfiguration of this ThumbnailConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recording_mode(self):
        """Gets the recording_mode of this ThumbnailConfiguration.


        :return: The recording_mode of this ThumbnailConfiguration.
        :rtype: RecordingMode
        """
        return self._recording_mode

    @recording_mode.setter
    def recording_mode(self, recording_mode):
        """Sets the recording_mode of this ThumbnailConfiguration.


        :param recording_mode: The recording_mode of this ThumbnailConfiguration.
        :type recording_mode: RecordingMode
        """

        self._recording_mode = recording_mode

    @property
    def resolution(self):
        """Gets the resolution of this ThumbnailConfiguration.


        :return: The resolution of this ThumbnailConfiguration.
        :rtype: ThumbnailConfigurationResolution
        """
        return self._resolution

    @resolution.setter
    def resolution(self, resolution):
        """Sets the resolution of this ThumbnailConfiguration.


        :param resolution: The resolution of this ThumbnailConfiguration.
        :type resolution: ThumbnailConfigurationResolution
        """

        self._resolution = resolution

    @property
    def storage(self):
        """Gets the storage of this ThumbnailConfiguration.


        :return: The storage of this ThumbnailConfiguration.
        :rtype: List
        """
        return self._storage

    @storage.setter
    def storage(self, storage):
        """Sets the storage of this ThumbnailConfiguration.


        :param storage: The storage of this ThumbnailConfiguration.
        :type storage: List
        """

        self._storage = storage

    @property
    def target_interval_seconds(self):
        """Gets the target_interval_seconds of this ThumbnailConfiguration.


        :return: The target_interval_seconds of this ThumbnailConfiguration.
        :rtype: int
        """
        return self._target_interval_seconds

    @target_interval_seconds.setter
    def target_interval_seconds(self, target_interval_seconds):
        """Sets the target_interval_seconds of this ThumbnailConfiguration.


        :param target_interval_seconds: The target_interval_seconds of this ThumbnailConfiguration.
        :type target_interval_seconds: int
        """

        self._target_interval_seconds = target_interval_seconds
