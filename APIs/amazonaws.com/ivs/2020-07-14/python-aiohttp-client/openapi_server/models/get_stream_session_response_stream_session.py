# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stream_session_channel import StreamSessionChannel
from openapi_server.models.stream_session_ingest_configuration import StreamSessionIngestConfiguration
from openapi_server.models.stream_session_recording_configuration import StreamSessionRecordingConfiguration
from openapi_server import util


class GetStreamSessionResponseStreamSession(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel: StreamSessionChannel=None, end_time: datetime=None, ingest_configuration: StreamSessionIngestConfiguration=None, recording_configuration: StreamSessionRecordingConfiguration=None, start_time: datetime=None, stream_id: str=None, truncated_events: List=None):
        """GetStreamSessionResponseStreamSession - a model defined in OpenAPI

        :param channel: The channel of this GetStreamSessionResponseStreamSession.
        :param end_time: The end_time of this GetStreamSessionResponseStreamSession.
        :param ingest_configuration: The ingest_configuration of this GetStreamSessionResponseStreamSession.
        :param recording_configuration: The recording_configuration of this GetStreamSessionResponseStreamSession.
        :param start_time: The start_time of this GetStreamSessionResponseStreamSession.
        :param stream_id: The stream_id of this GetStreamSessionResponseStreamSession.
        :param truncated_events: The truncated_events of this GetStreamSessionResponseStreamSession.
        """
        self.openapi_types = {
            'channel': StreamSessionChannel,
            'end_time': datetime,
            'ingest_configuration': StreamSessionIngestConfiguration,
            'recording_configuration': StreamSessionRecordingConfiguration,
            'start_time': datetime,
            'stream_id': str,
            'truncated_events': List
        }

        self.attribute_map = {
            'channel': 'channel',
            'end_time': 'endTime',
            'ingest_configuration': 'ingestConfiguration',
            'recording_configuration': 'recordingConfiguration',
            'start_time': 'startTime',
            'stream_id': 'streamId',
            'truncated_events': 'truncatedEvents'
        }

        self._channel = channel
        self._end_time = end_time
        self._ingest_configuration = ingest_configuration
        self._recording_configuration = recording_configuration
        self._start_time = start_time
        self._stream_id = stream_id
        self._truncated_events = truncated_events

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetStreamSessionResponseStreamSession':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetStreamSessionResponse_streamSession of this GetStreamSessionResponseStreamSession.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel(self):
        """Gets the channel of this GetStreamSessionResponseStreamSession.


        :return: The channel of this GetStreamSessionResponseStreamSession.
        :rtype: StreamSessionChannel
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this GetStreamSessionResponseStreamSession.


        :param channel: The channel of this GetStreamSessionResponseStreamSession.
        :type channel: StreamSessionChannel
        """

        self._channel = channel

    @property
    def end_time(self):
        """Gets the end_time of this GetStreamSessionResponseStreamSession.


        :return: The end_time of this GetStreamSessionResponseStreamSession.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GetStreamSessionResponseStreamSession.


        :param end_time: The end_time of this GetStreamSessionResponseStreamSession.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def ingest_configuration(self):
        """Gets the ingest_configuration of this GetStreamSessionResponseStreamSession.


        :return: The ingest_configuration of this GetStreamSessionResponseStreamSession.
        :rtype: StreamSessionIngestConfiguration
        """
        return self._ingest_configuration

    @ingest_configuration.setter
    def ingest_configuration(self, ingest_configuration):
        """Sets the ingest_configuration of this GetStreamSessionResponseStreamSession.


        :param ingest_configuration: The ingest_configuration of this GetStreamSessionResponseStreamSession.
        :type ingest_configuration: StreamSessionIngestConfiguration
        """

        self._ingest_configuration = ingest_configuration

    @property
    def recording_configuration(self):
        """Gets the recording_configuration of this GetStreamSessionResponseStreamSession.


        :return: The recording_configuration of this GetStreamSessionResponseStreamSession.
        :rtype: StreamSessionRecordingConfiguration
        """
        return self._recording_configuration

    @recording_configuration.setter
    def recording_configuration(self, recording_configuration):
        """Sets the recording_configuration of this GetStreamSessionResponseStreamSession.


        :param recording_configuration: The recording_configuration of this GetStreamSessionResponseStreamSession.
        :type recording_configuration: StreamSessionRecordingConfiguration
        """

        self._recording_configuration = recording_configuration

    @property
    def start_time(self):
        """Gets the start_time of this GetStreamSessionResponseStreamSession.


        :return: The start_time of this GetStreamSessionResponseStreamSession.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GetStreamSessionResponseStreamSession.


        :param start_time: The start_time of this GetStreamSessionResponseStreamSession.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def stream_id(self):
        """Gets the stream_id of this GetStreamSessionResponseStreamSession.


        :return: The stream_id of this GetStreamSessionResponseStreamSession.
        :rtype: str
        """
        return self._stream_id

    @stream_id.setter
    def stream_id(self, stream_id):
        """Sets the stream_id of this GetStreamSessionResponseStreamSession.


        :param stream_id: The stream_id of this GetStreamSessionResponseStreamSession.
        :type stream_id: str
        """

        self._stream_id = stream_id

    @property
    def truncated_events(self):
        """Gets the truncated_events of this GetStreamSessionResponseStreamSession.


        :return: The truncated_events of this GetStreamSessionResponseStreamSession.
        :rtype: List
        """
        return self._truncated_events

    @truncated_events.setter
    def truncated_events(self, truncated_events):
        """Sets the truncated_events of this GetStreamSessionResponseStreamSession.


        :param truncated_events: The truncated_events of this GetStreamSessionResponseStreamSession.
        :type truncated_events: List
        """

        self._truncated_events = truncated_events
