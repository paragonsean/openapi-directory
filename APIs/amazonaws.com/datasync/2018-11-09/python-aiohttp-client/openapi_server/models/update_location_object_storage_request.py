# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.object_storage_server_protocol import ObjectStorageServerProtocol
from openapi_server import util


class UpdateLocationObjectStorageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location_arn: str=None, server_port: int=None, server_protocol: ObjectStorageServerProtocol=None, subdirectory: str=None, access_key: str=None, secret_key: str=None, agent_arns: List=None, server_certificate: str=None):
        """UpdateLocationObjectStorageRequest - a model defined in OpenAPI

        :param location_arn: The location_arn of this UpdateLocationObjectStorageRequest.
        :param server_port: The server_port of this UpdateLocationObjectStorageRequest.
        :param server_protocol: The server_protocol of this UpdateLocationObjectStorageRequest.
        :param subdirectory: The subdirectory of this UpdateLocationObjectStorageRequest.
        :param access_key: The access_key of this UpdateLocationObjectStorageRequest.
        :param secret_key: The secret_key of this UpdateLocationObjectStorageRequest.
        :param agent_arns: The agent_arns of this UpdateLocationObjectStorageRequest.
        :param server_certificate: The server_certificate of this UpdateLocationObjectStorageRequest.
        """
        self.openapi_types = {
            'location_arn': str,
            'server_port': int,
            'server_protocol': ObjectStorageServerProtocol,
            'subdirectory': str,
            'access_key': str,
            'secret_key': str,
            'agent_arns': List,
            'server_certificate': str
        }

        self.attribute_map = {
            'location_arn': 'LocationArn',
            'server_port': 'ServerPort',
            'server_protocol': 'ServerProtocol',
            'subdirectory': 'Subdirectory',
            'access_key': 'AccessKey',
            'secret_key': 'SecretKey',
            'agent_arns': 'AgentArns',
            'server_certificate': 'ServerCertificate'
        }

        self._location_arn = location_arn
        self._server_port = server_port
        self._server_protocol = server_protocol
        self._subdirectory = subdirectory
        self._access_key = access_key
        self._secret_key = secret_key
        self._agent_arns = agent_arns
        self._server_certificate = server_certificate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateLocationObjectStorageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateLocationObjectStorageRequest of this UpdateLocationObjectStorageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_arn(self):
        """Gets the location_arn of this UpdateLocationObjectStorageRequest.


        :return: The location_arn of this UpdateLocationObjectStorageRequest.
        :rtype: str
        """
        return self._location_arn

    @location_arn.setter
    def location_arn(self, location_arn):
        """Sets the location_arn of this UpdateLocationObjectStorageRequest.


        :param location_arn: The location_arn of this UpdateLocationObjectStorageRequest.
        :type location_arn: str
        """
        if location_arn is None:
            raise ValueError("Invalid value for `location_arn`, must not be `None`")

        self._location_arn = location_arn

    @property
    def server_port(self):
        """Gets the server_port of this UpdateLocationObjectStorageRequest.


        :return: The server_port of this UpdateLocationObjectStorageRequest.
        :rtype: int
        """
        return self._server_port

    @server_port.setter
    def server_port(self, server_port):
        """Sets the server_port of this UpdateLocationObjectStorageRequest.


        :param server_port: The server_port of this UpdateLocationObjectStorageRequest.
        :type server_port: int
        """

        self._server_port = server_port

    @property
    def server_protocol(self):
        """Gets the server_protocol of this UpdateLocationObjectStorageRequest.


        :return: The server_protocol of this UpdateLocationObjectStorageRequest.
        :rtype: ObjectStorageServerProtocol
        """
        return self._server_protocol

    @server_protocol.setter
    def server_protocol(self, server_protocol):
        """Sets the server_protocol of this UpdateLocationObjectStorageRequest.


        :param server_protocol: The server_protocol of this UpdateLocationObjectStorageRequest.
        :type server_protocol: ObjectStorageServerProtocol
        """

        self._server_protocol = server_protocol

    @property
    def subdirectory(self):
        """Gets the subdirectory of this UpdateLocationObjectStorageRequest.


        :return: The subdirectory of this UpdateLocationObjectStorageRequest.
        :rtype: str
        """
        return self._subdirectory

    @subdirectory.setter
    def subdirectory(self, subdirectory):
        """Sets the subdirectory of this UpdateLocationObjectStorageRequest.


        :param subdirectory: The subdirectory of this UpdateLocationObjectStorageRequest.
        :type subdirectory: str
        """

        self._subdirectory = subdirectory

    @property
    def access_key(self):
        """Gets the access_key of this UpdateLocationObjectStorageRequest.


        :return: The access_key of this UpdateLocationObjectStorageRequest.
        :rtype: str
        """
        return self._access_key

    @access_key.setter
    def access_key(self, access_key):
        """Sets the access_key of this UpdateLocationObjectStorageRequest.


        :param access_key: The access_key of this UpdateLocationObjectStorageRequest.
        :type access_key: str
        """

        self._access_key = access_key

    @property
    def secret_key(self):
        """Gets the secret_key of this UpdateLocationObjectStorageRequest.


        :return: The secret_key of this UpdateLocationObjectStorageRequest.
        :rtype: str
        """
        return self._secret_key

    @secret_key.setter
    def secret_key(self, secret_key):
        """Sets the secret_key of this UpdateLocationObjectStorageRequest.


        :param secret_key: The secret_key of this UpdateLocationObjectStorageRequest.
        :type secret_key: str
        """

        self._secret_key = secret_key

    @property
    def agent_arns(self):
        """Gets the agent_arns of this UpdateLocationObjectStorageRequest.


        :return: The agent_arns of this UpdateLocationObjectStorageRequest.
        :rtype: List
        """
        return self._agent_arns

    @agent_arns.setter
    def agent_arns(self, agent_arns):
        """Sets the agent_arns of this UpdateLocationObjectStorageRequest.


        :param agent_arns: The agent_arns of this UpdateLocationObjectStorageRequest.
        :type agent_arns: List
        """

        self._agent_arns = agent_arns

    @property
    def server_certificate(self):
        """Gets the server_certificate of this UpdateLocationObjectStorageRequest.


        :return: The server_certificate of this UpdateLocationObjectStorageRequest.
        :rtype: str
        """
        return self._server_certificate

    @server_certificate.setter
    def server_certificate(self, server_certificate):
        """Sets the server_certificate of this UpdateLocationObjectStorageRequest.


        :param server_certificate: The server_certificate of this UpdateLocationObjectStorageRequest.
        :type server_certificate: str
        """

        self._server_certificate = server_certificate
