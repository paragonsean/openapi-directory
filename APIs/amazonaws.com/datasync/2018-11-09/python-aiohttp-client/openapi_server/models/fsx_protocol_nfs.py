# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.nfs_mount_options import NfsMountOptions
from openapi_server import util


class FsxProtocolNfs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mount_options: NfsMountOptions=None):
        """FsxProtocolNfs - a model defined in OpenAPI

        :param mount_options: The mount_options of this FsxProtocolNfs.
        """
        self.openapi_types = {
            'mount_options': NfsMountOptions
        }

        self.attribute_map = {
            'mount_options': 'MountOptions'
        }

        self._mount_options = mount_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FsxProtocolNfs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FsxProtocolNfs of this FsxProtocolNfs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mount_options(self):
        """Gets the mount_options of this FsxProtocolNfs.


        :return: The mount_options of this FsxProtocolNfs.
        :rtype: NfsMountOptions
        """
        return self._mount_options

    @mount_options.setter
    def mount_options(self, mount_options):
        """Sets the mount_options of this FsxProtocolNfs.


        :param mount_options: The mount_options of this FsxProtocolNfs.
        :type mount_options: NfsMountOptions
        """

        self._mount_options = mount_options
