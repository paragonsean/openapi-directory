# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.p95_metrics_iops import P95MetricsIOPS
from openapi_server.models.p95_metrics_latency import P95MetricsLatency
from openapi_server.models.p95_metrics_throughput import P95MetricsThroughput
from openapi_server import util


class ResourceMetricsP95Metrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, iops: P95MetricsIOPS=None, throughput: P95MetricsThroughput=None, latency: P95MetricsLatency=None):
        """ResourceMetricsP95Metrics - a model defined in OpenAPI

        :param iops: The iops of this ResourceMetricsP95Metrics.
        :param throughput: The throughput of this ResourceMetricsP95Metrics.
        :param latency: The latency of this ResourceMetricsP95Metrics.
        """
        self.openapi_types = {
            'iops': P95MetricsIOPS,
            'throughput': P95MetricsThroughput,
            'latency': P95MetricsLatency
        }

        self.attribute_map = {
            'iops': 'IOPS',
            'throughput': 'Throughput',
            'latency': 'Latency'
        }

        self._iops = iops
        self._throughput = throughput
        self._latency = latency

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceMetricsP95Metrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceMetrics_P95Metrics of this ResourceMetricsP95Metrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def iops(self):
        """Gets the iops of this ResourceMetricsP95Metrics.


        :return: The iops of this ResourceMetricsP95Metrics.
        :rtype: P95MetricsIOPS
        """
        return self._iops

    @iops.setter
    def iops(self, iops):
        """Sets the iops of this ResourceMetricsP95Metrics.


        :param iops: The iops of this ResourceMetricsP95Metrics.
        :type iops: P95MetricsIOPS
        """

        self._iops = iops

    @property
    def throughput(self):
        """Gets the throughput of this ResourceMetricsP95Metrics.


        :return: The throughput of this ResourceMetricsP95Metrics.
        :rtype: P95MetricsThroughput
        """
        return self._throughput

    @throughput.setter
    def throughput(self, throughput):
        """Sets the throughput of this ResourceMetricsP95Metrics.


        :param throughput: The throughput of this ResourceMetricsP95Metrics.
        :type throughput: P95MetricsThroughput
        """

        self._throughput = throughput

    @property
    def latency(self):
        """Gets the latency of this ResourceMetricsP95Metrics.


        :return: The latency of this ResourceMetricsP95Metrics.
        :rtype: P95MetricsLatency
        """
        return self._latency

    @latency.setter
    def latency(self, latency):
        """Sets the latency of this ResourceMetricsP95Metrics.


        :param latency: The latency of this ResourceMetricsP95Metrics.
        :type latency: P95MetricsLatency
        """

        self._latency = latency
