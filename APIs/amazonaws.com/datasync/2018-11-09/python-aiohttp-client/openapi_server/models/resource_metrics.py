# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.discovery_resource_type import DiscoveryResourceType
from openapi_server.models.resource_metrics_capacity import ResourceMetricsCapacity
from openapi_server.models.resource_metrics_p95_metrics import ResourceMetricsP95Metrics
from openapi_server import util


class ResourceMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, timestamp: datetime=None, p95_metrics: ResourceMetricsP95Metrics=None, capacity: ResourceMetricsCapacity=None, resource_id: str=None, resource_type: DiscoveryResourceType=None):
        """ResourceMetrics - a model defined in OpenAPI

        :param timestamp: The timestamp of this ResourceMetrics.
        :param p95_metrics: The p95_metrics of this ResourceMetrics.
        :param capacity: The capacity of this ResourceMetrics.
        :param resource_id: The resource_id of this ResourceMetrics.
        :param resource_type: The resource_type of this ResourceMetrics.
        """
        self.openapi_types = {
            'timestamp': datetime,
            'p95_metrics': ResourceMetricsP95Metrics,
            'capacity': ResourceMetricsCapacity,
            'resource_id': str,
            'resource_type': DiscoveryResourceType
        }

        self.attribute_map = {
            'timestamp': 'Timestamp',
            'p95_metrics': 'P95Metrics',
            'capacity': 'Capacity',
            'resource_id': 'ResourceId',
            'resource_type': 'ResourceType'
        }

        self._timestamp = timestamp
        self._p95_metrics = p95_metrics
        self._capacity = capacity
        self._resource_id = resource_id
        self._resource_type = resource_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceMetrics of this ResourceMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def timestamp(self):
        """Gets the timestamp of this ResourceMetrics.


        :return: The timestamp of this ResourceMetrics.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this ResourceMetrics.


        :param timestamp: The timestamp of this ResourceMetrics.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def p95_metrics(self):
        """Gets the p95_metrics of this ResourceMetrics.


        :return: The p95_metrics of this ResourceMetrics.
        :rtype: ResourceMetricsP95Metrics
        """
        return self._p95_metrics

    @p95_metrics.setter
    def p95_metrics(self, p95_metrics):
        """Sets the p95_metrics of this ResourceMetrics.


        :param p95_metrics: The p95_metrics of this ResourceMetrics.
        :type p95_metrics: ResourceMetricsP95Metrics
        """

        self._p95_metrics = p95_metrics

    @property
    def capacity(self):
        """Gets the capacity of this ResourceMetrics.


        :return: The capacity of this ResourceMetrics.
        :rtype: ResourceMetricsCapacity
        """
        return self._capacity

    @capacity.setter
    def capacity(self, capacity):
        """Sets the capacity of this ResourceMetrics.


        :param capacity: The capacity of this ResourceMetrics.
        :type capacity: ResourceMetricsCapacity
        """

        self._capacity = capacity

    @property
    def resource_id(self):
        """Gets the resource_id of this ResourceMetrics.


        :return: The resource_id of this ResourceMetrics.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this ResourceMetrics.


        :param resource_id: The resource_id of this ResourceMetrics.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def resource_type(self):
        """Gets the resource_type of this ResourceMetrics.


        :return: The resource_type of this ResourceMetrics.
        :rtype: DiscoveryResourceType
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this ResourceMetrics.


        :param resource_type: The resource_type of this ResourceMetrics.
        :type resource_type: DiscoveryResourceType
        """

        self._resource_type = resource_type
