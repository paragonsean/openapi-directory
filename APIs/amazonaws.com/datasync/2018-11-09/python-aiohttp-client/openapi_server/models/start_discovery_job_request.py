# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartDiscoveryJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, storage_system_arn: str=None, collection_duration_minutes: int=None, client_token: str=None, tags: List=None):
        """StartDiscoveryJobRequest - a model defined in OpenAPI

        :param storage_system_arn: The storage_system_arn of this StartDiscoveryJobRequest.
        :param collection_duration_minutes: The collection_duration_minutes of this StartDiscoveryJobRequest.
        :param client_token: The client_token of this StartDiscoveryJobRequest.
        :param tags: The tags of this StartDiscoveryJobRequest.
        """
        self.openapi_types = {
            'storage_system_arn': str,
            'collection_duration_minutes': int,
            'client_token': str,
            'tags': List
        }

        self.attribute_map = {
            'storage_system_arn': 'StorageSystemArn',
            'collection_duration_minutes': 'CollectionDurationMinutes',
            'client_token': 'ClientToken',
            'tags': 'Tags'
        }

        self._storage_system_arn = storage_system_arn
        self._collection_duration_minutes = collection_duration_minutes
        self._client_token = client_token
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartDiscoveryJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartDiscoveryJobRequest of this StartDiscoveryJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def storage_system_arn(self):
        """Gets the storage_system_arn of this StartDiscoveryJobRequest.


        :return: The storage_system_arn of this StartDiscoveryJobRequest.
        :rtype: str
        """
        return self._storage_system_arn

    @storage_system_arn.setter
    def storage_system_arn(self, storage_system_arn):
        """Sets the storage_system_arn of this StartDiscoveryJobRequest.


        :param storage_system_arn: The storage_system_arn of this StartDiscoveryJobRequest.
        :type storage_system_arn: str
        """
        if storage_system_arn is None:
            raise ValueError("Invalid value for `storage_system_arn`, must not be `None`")

        self._storage_system_arn = storage_system_arn

    @property
    def collection_duration_minutes(self):
        """Gets the collection_duration_minutes of this StartDiscoveryJobRequest.


        :return: The collection_duration_minutes of this StartDiscoveryJobRequest.
        :rtype: int
        """
        return self._collection_duration_minutes

    @collection_duration_minutes.setter
    def collection_duration_minutes(self, collection_duration_minutes):
        """Sets the collection_duration_minutes of this StartDiscoveryJobRequest.


        :param collection_duration_minutes: The collection_duration_minutes of this StartDiscoveryJobRequest.
        :type collection_duration_minutes: int
        """
        if collection_duration_minutes is None:
            raise ValueError("Invalid value for `collection_duration_minutes`, must not be `None`")

        self._collection_duration_minutes = collection_duration_minutes

    @property
    def client_token(self):
        """Gets the client_token of this StartDiscoveryJobRequest.


        :return: The client_token of this StartDiscoveryJobRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this StartDiscoveryJobRequest.


        :param client_token: The client_token of this StartDiscoveryJobRequest.
        :type client_token: str
        """
        if client_token is None:
            raise ValueError("Invalid value for `client_token`, must not be `None`")

        self._client_token = client_token

    @property
    def tags(self):
        """Gets the tags of this StartDiscoveryJobRequest.


        :return: The tags of this StartDiscoveryJobRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this StartDiscoveryJobRequest.


        :param tags: The tags of this StartDiscoveryJobRequest.
        :type tags: List
        """

        self._tags = tags
