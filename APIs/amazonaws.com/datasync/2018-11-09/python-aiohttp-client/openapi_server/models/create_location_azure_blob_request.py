# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.azure_access_tier import AzureAccessTier
from openapi_server.models.azure_blob_authentication_type import AzureBlobAuthenticationType
from openapi_server.models.azure_blob_type import AzureBlobType
from openapi_server.models.create_location_azure_blob_request_sas_configuration import CreateLocationAzureBlobRequestSasConfiguration
from openapi_server import util


class CreateLocationAzureBlobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container_url: str=None, authentication_type: AzureBlobAuthenticationType=None, sas_configuration: CreateLocationAzureBlobRequestSasConfiguration=None, blob_type: AzureBlobType=None, access_tier: AzureAccessTier=None, subdirectory: str=None, agent_arns: List=None, tags: List=None):
        """CreateLocationAzureBlobRequest - a model defined in OpenAPI

        :param container_url: The container_url of this CreateLocationAzureBlobRequest.
        :param authentication_type: The authentication_type of this CreateLocationAzureBlobRequest.
        :param sas_configuration: The sas_configuration of this CreateLocationAzureBlobRequest.
        :param blob_type: The blob_type of this CreateLocationAzureBlobRequest.
        :param access_tier: The access_tier of this CreateLocationAzureBlobRequest.
        :param subdirectory: The subdirectory of this CreateLocationAzureBlobRequest.
        :param agent_arns: The agent_arns of this CreateLocationAzureBlobRequest.
        :param tags: The tags of this CreateLocationAzureBlobRequest.
        """
        self.openapi_types = {
            'container_url': str,
            'authentication_type': AzureBlobAuthenticationType,
            'sas_configuration': CreateLocationAzureBlobRequestSasConfiguration,
            'blob_type': AzureBlobType,
            'access_tier': AzureAccessTier,
            'subdirectory': str,
            'agent_arns': List,
            'tags': List
        }

        self.attribute_map = {
            'container_url': 'ContainerUrl',
            'authentication_type': 'AuthenticationType',
            'sas_configuration': 'SasConfiguration',
            'blob_type': 'BlobType',
            'access_tier': 'AccessTier',
            'subdirectory': 'Subdirectory',
            'agent_arns': 'AgentArns',
            'tags': 'Tags'
        }

        self._container_url = container_url
        self._authentication_type = authentication_type
        self._sas_configuration = sas_configuration
        self._blob_type = blob_type
        self._access_tier = access_tier
        self._subdirectory = subdirectory
        self._agent_arns = agent_arns
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateLocationAzureBlobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateLocationAzureBlobRequest of this CreateLocationAzureBlobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_url(self):
        """Gets the container_url of this CreateLocationAzureBlobRequest.


        :return: The container_url of this CreateLocationAzureBlobRequest.
        :rtype: str
        """
        return self._container_url

    @container_url.setter
    def container_url(self, container_url):
        """Sets the container_url of this CreateLocationAzureBlobRequest.


        :param container_url: The container_url of this CreateLocationAzureBlobRequest.
        :type container_url: str
        """
        if container_url is None:
            raise ValueError("Invalid value for `container_url`, must not be `None`")

        self._container_url = container_url

    @property
    def authentication_type(self):
        """Gets the authentication_type of this CreateLocationAzureBlobRequest.


        :return: The authentication_type of this CreateLocationAzureBlobRequest.
        :rtype: AzureBlobAuthenticationType
        """
        return self._authentication_type

    @authentication_type.setter
    def authentication_type(self, authentication_type):
        """Sets the authentication_type of this CreateLocationAzureBlobRequest.


        :param authentication_type: The authentication_type of this CreateLocationAzureBlobRequest.
        :type authentication_type: AzureBlobAuthenticationType
        """
        if authentication_type is None:
            raise ValueError("Invalid value for `authentication_type`, must not be `None`")

        self._authentication_type = authentication_type

    @property
    def sas_configuration(self):
        """Gets the sas_configuration of this CreateLocationAzureBlobRequest.


        :return: The sas_configuration of this CreateLocationAzureBlobRequest.
        :rtype: CreateLocationAzureBlobRequestSasConfiguration
        """
        return self._sas_configuration

    @sas_configuration.setter
    def sas_configuration(self, sas_configuration):
        """Sets the sas_configuration of this CreateLocationAzureBlobRequest.


        :param sas_configuration: The sas_configuration of this CreateLocationAzureBlobRequest.
        :type sas_configuration: CreateLocationAzureBlobRequestSasConfiguration
        """

        self._sas_configuration = sas_configuration

    @property
    def blob_type(self):
        """Gets the blob_type of this CreateLocationAzureBlobRequest.


        :return: The blob_type of this CreateLocationAzureBlobRequest.
        :rtype: AzureBlobType
        """
        return self._blob_type

    @blob_type.setter
    def blob_type(self, blob_type):
        """Sets the blob_type of this CreateLocationAzureBlobRequest.


        :param blob_type: The blob_type of this CreateLocationAzureBlobRequest.
        :type blob_type: AzureBlobType
        """

        self._blob_type = blob_type

    @property
    def access_tier(self):
        """Gets the access_tier of this CreateLocationAzureBlobRequest.


        :return: The access_tier of this CreateLocationAzureBlobRequest.
        :rtype: AzureAccessTier
        """
        return self._access_tier

    @access_tier.setter
    def access_tier(self, access_tier):
        """Sets the access_tier of this CreateLocationAzureBlobRequest.


        :param access_tier: The access_tier of this CreateLocationAzureBlobRequest.
        :type access_tier: AzureAccessTier
        """

        self._access_tier = access_tier

    @property
    def subdirectory(self):
        """Gets the subdirectory of this CreateLocationAzureBlobRequest.


        :return: The subdirectory of this CreateLocationAzureBlobRequest.
        :rtype: str
        """
        return self._subdirectory

    @subdirectory.setter
    def subdirectory(self, subdirectory):
        """Sets the subdirectory of this CreateLocationAzureBlobRequest.


        :param subdirectory: The subdirectory of this CreateLocationAzureBlobRequest.
        :type subdirectory: str
        """

        self._subdirectory = subdirectory

    @property
    def agent_arns(self):
        """Gets the agent_arns of this CreateLocationAzureBlobRequest.


        :return: The agent_arns of this CreateLocationAzureBlobRequest.
        :rtype: List
        """
        return self._agent_arns

    @agent_arns.setter
    def agent_arns(self, agent_arns):
        """Sets the agent_arns of this CreateLocationAzureBlobRequest.


        :param agent_arns: The agent_arns of this CreateLocationAzureBlobRequest.
        :type agent_arns: List
        """
        if agent_arns is None:
            raise ValueError("Invalid value for `agent_arns`, must not be `None`")

        self._agent_arns = agent_arns

    @property
    def tags(self):
        """Gets the tags of this CreateLocationAzureBlobRequest.


        :return: The tags of this CreateLocationAzureBlobRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateLocationAzureBlobRequest.


        :param tags: The tags of this CreateLocationAzureBlobRequest.
        :type tags: List
        """

        self._tags = tags
