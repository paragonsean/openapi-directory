# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateLocationNfsRequestOnPremConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_arns: List=None):
        """CreateLocationNfsRequestOnPremConfig - a model defined in OpenAPI

        :param agent_arns: The agent_arns of this CreateLocationNfsRequestOnPremConfig.
        """
        self.openapi_types = {
            'agent_arns': List
        }

        self.attribute_map = {
            'agent_arns': 'AgentArns'
        }

        self._agent_arns = agent_arns

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateLocationNfsRequestOnPremConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateLocationNfsRequest_OnPremConfig of this CreateLocationNfsRequestOnPremConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_arns(self):
        """Gets the agent_arns of this CreateLocationNfsRequestOnPremConfig.


        :return: The agent_arns of this CreateLocationNfsRequestOnPremConfig.
        :rtype: List
        """
        return self._agent_arns

    @agent_arns.setter
    def agent_arns(self, agent_arns):
        """Sets the agent_arns of this CreateLocationNfsRequestOnPremConfig.


        :param agent_arns: The agent_arns of this CreateLocationNfsRequestOnPremConfig.
        :type agent_arns: List
        """
        if agent_arns is None:
            raise ValueError("Invalid value for `agent_arns`, must not be `None`")

        self._agent_arns = agent_arns
