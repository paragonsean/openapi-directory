# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CancelTaskExecutionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, task_execution_arn: str=None):
        """CancelTaskExecutionRequest - a model defined in OpenAPI

        :param task_execution_arn: The task_execution_arn of this CancelTaskExecutionRequest.
        """
        self.openapi_types = {
            'task_execution_arn': str
        }

        self.attribute_map = {
            'task_execution_arn': 'TaskExecutionArn'
        }

        self._task_execution_arn = task_execution_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CancelTaskExecutionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CancelTaskExecutionRequest of this CancelTaskExecutionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def task_execution_arn(self):
        """Gets the task_execution_arn of this CancelTaskExecutionRequest.


        :return: The task_execution_arn of this CancelTaskExecutionRequest.
        :rtype: str
        """
        return self._task_execution_arn

    @task_execution_arn.setter
    def task_execution_arn(self, task_execution_arn):
        """Sets the task_execution_arn of this CancelTaskExecutionRequest.


        :param task_execution_arn: The task_execution_arn of this CancelTaskExecutionRequest.
        :type task_execution_arn: str
        """
        if task_execution_arn is None:
            raise ValueError("Invalid value for `task_execution_arn`, must not be `None`")

        self._task_execution_arn = task_execution_arn
