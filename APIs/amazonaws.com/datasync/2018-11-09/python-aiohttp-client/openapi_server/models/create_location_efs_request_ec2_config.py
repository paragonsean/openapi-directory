# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateLocationEfsRequestEc2Config(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subnet_arn: str=None, security_group_arns: List=None):
        """CreateLocationEfsRequestEc2Config - a model defined in OpenAPI

        :param subnet_arn: The subnet_arn of this CreateLocationEfsRequestEc2Config.
        :param security_group_arns: The security_group_arns of this CreateLocationEfsRequestEc2Config.
        """
        self.openapi_types = {
            'subnet_arn': str,
            'security_group_arns': List
        }

        self.attribute_map = {
            'subnet_arn': 'SubnetArn',
            'security_group_arns': 'SecurityGroupArns'
        }

        self._subnet_arn = subnet_arn
        self._security_group_arns = security_group_arns

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateLocationEfsRequestEc2Config':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateLocationEfsRequest_Ec2Config of this CreateLocationEfsRequestEc2Config.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subnet_arn(self):
        """Gets the subnet_arn of this CreateLocationEfsRequestEc2Config.


        :return: The subnet_arn of this CreateLocationEfsRequestEc2Config.
        :rtype: str
        """
        return self._subnet_arn

    @subnet_arn.setter
    def subnet_arn(self, subnet_arn):
        """Sets the subnet_arn of this CreateLocationEfsRequestEc2Config.


        :param subnet_arn: The subnet_arn of this CreateLocationEfsRequestEc2Config.
        :type subnet_arn: str
        """
        if subnet_arn is None:
            raise ValueError("Invalid value for `subnet_arn`, must not be `None`")

        self._subnet_arn = subnet_arn

    @property
    def security_group_arns(self):
        """Gets the security_group_arns of this CreateLocationEfsRequestEc2Config.


        :return: The security_group_arns of this CreateLocationEfsRequestEc2Config.
        :rtype: List
        """
        return self._security_group_arns

    @security_group_arns.setter
    def security_group_arns(self, security_group_arns):
        """Sets the security_group_arns of this CreateLocationEfsRequestEc2Config.


        :param security_group_arns: The security_group_arns of this CreateLocationEfsRequestEc2Config.
        :type security_group_arns: List
        """
        if security_group_arns is None:
            raise ValueError("Invalid value for `security_group_arns`, must not be `None`")

        self._security_group_arns = security_group_arns
