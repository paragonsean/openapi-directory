# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddStorageSystemRequestServerConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, server_hostname: str=None, server_port: int=None):
        """AddStorageSystemRequestServerConfiguration - a model defined in OpenAPI

        :param server_hostname: The server_hostname of this AddStorageSystemRequestServerConfiguration.
        :param server_port: The server_port of this AddStorageSystemRequestServerConfiguration.
        """
        self.openapi_types = {
            'server_hostname': str,
            'server_port': int
        }

        self.attribute_map = {
            'server_hostname': 'ServerHostname',
            'server_port': 'ServerPort'
        }

        self._server_hostname = server_hostname
        self._server_port = server_port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddStorageSystemRequestServerConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddStorageSystemRequest_ServerConfiguration of this AddStorageSystemRequestServerConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def server_hostname(self):
        """Gets the server_hostname of this AddStorageSystemRequestServerConfiguration.


        :return: The server_hostname of this AddStorageSystemRequestServerConfiguration.
        :rtype: str
        """
        return self._server_hostname

    @server_hostname.setter
    def server_hostname(self, server_hostname):
        """Sets the server_hostname of this AddStorageSystemRequestServerConfiguration.


        :param server_hostname: The server_hostname of this AddStorageSystemRequestServerConfiguration.
        :type server_hostname: str
        """
        if server_hostname is None:
            raise ValueError("Invalid value for `server_hostname`, must not be `None`")

        self._server_hostname = server_hostname

    @property
    def server_port(self):
        """Gets the server_port of this AddStorageSystemRequestServerConfiguration.


        :return: The server_port of this AddStorageSystemRequestServerConfiguration.
        :rtype: int
        """
        return self._server_port

    @server_port.setter
    def server_port(self, server_port):
        """Sets the server_port of this AddStorageSystemRequestServerConfiguration.


        :param server_port: The server_port of this AddStorageSystemRequestServerConfiguration.
        :type server_port: int
        """

        self._server_port = server_port
