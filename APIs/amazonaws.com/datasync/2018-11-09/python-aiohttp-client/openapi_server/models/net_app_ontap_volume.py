# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.net_app_ontap_volume_max_p95_performance import NetAppONTAPVolumeMaxP95Performance
from openapi_server.models.recommendation_status import RecommendationStatus
from openapi_server import util


class NetAppONTAPVolume(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, volume_name: str=None, resource_id: str=None, cifs_share_count: int=None, security_style: str=None, svm_uuid: str=None, svm_name: str=None, capacity_used: int=None, capacity_provisioned: int=None, logical_capacity_used: int=None, nfs_exported: bool=None, snapshot_capacity_used: int=None, max_p95_performance: NetAppONTAPVolumeMaxP95Performance=None, recommendations: List=None, recommendation_status: RecommendationStatus=None, lun_count: int=None):
        """NetAppONTAPVolume - a model defined in OpenAPI

        :param volume_name: The volume_name of this NetAppONTAPVolume.
        :param resource_id: The resource_id of this NetAppONTAPVolume.
        :param cifs_share_count: The cifs_share_count of this NetAppONTAPVolume.
        :param security_style: The security_style of this NetAppONTAPVolume.
        :param svm_uuid: The svm_uuid of this NetAppONTAPVolume.
        :param svm_name: The svm_name of this NetAppONTAPVolume.
        :param capacity_used: The capacity_used of this NetAppONTAPVolume.
        :param capacity_provisioned: The capacity_provisioned of this NetAppONTAPVolume.
        :param logical_capacity_used: The logical_capacity_used of this NetAppONTAPVolume.
        :param nfs_exported: The nfs_exported of this NetAppONTAPVolume.
        :param snapshot_capacity_used: The snapshot_capacity_used of this NetAppONTAPVolume.
        :param max_p95_performance: The max_p95_performance of this NetAppONTAPVolume.
        :param recommendations: The recommendations of this NetAppONTAPVolume.
        :param recommendation_status: The recommendation_status of this NetAppONTAPVolume.
        :param lun_count: The lun_count of this NetAppONTAPVolume.
        """
        self.openapi_types = {
            'volume_name': str,
            'resource_id': str,
            'cifs_share_count': int,
            'security_style': str,
            'svm_uuid': str,
            'svm_name': str,
            'capacity_used': int,
            'capacity_provisioned': int,
            'logical_capacity_used': int,
            'nfs_exported': bool,
            'snapshot_capacity_used': int,
            'max_p95_performance': NetAppONTAPVolumeMaxP95Performance,
            'recommendations': List,
            'recommendation_status': RecommendationStatus,
            'lun_count': int
        }

        self.attribute_map = {
            'volume_name': 'VolumeName',
            'resource_id': 'ResourceId',
            'cifs_share_count': 'CifsShareCount',
            'security_style': 'SecurityStyle',
            'svm_uuid': 'SvmUuid',
            'svm_name': 'SvmName',
            'capacity_used': 'CapacityUsed',
            'capacity_provisioned': 'CapacityProvisioned',
            'logical_capacity_used': 'LogicalCapacityUsed',
            'nfs_exported': 'NfsExported',
            'snapshot_capacity_used': 'SnapshotCapacityUsed',
            'max_p95_performance': 'MaxP95Performance',
            'recommendations': 'Recommendations',
            'recommendation_status': 'RecommendationStatus',
            'lun_count': 'LunCount'
        }

        self._volume_name = volume_name
        self._resource_id = resource_id
        self._cifs_share_count = cifs_share_count
        self._security_style = security_style
        self._svm_uuid = svm_uuid
        self._svm_name = svm_name
        self._capacity_used = capacity_used
        self._capacity_provisioned = capacity_provisioned
        self._logical_capacity_used = logical_capacity_used
        self._nfs_exported = nfs_exported
        self._snapshot_capacity_used = snapshot_capacity_used
        self._max_p95_performance = max_p95_performance
        self._recommendations = recommendations
        self._recommendation_status = recommendation_status
        self._lun_count = lun_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetAppONTAPVolume':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetAppONTAPVolume of this NetAppONTAPVolume.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def volume_name(self):
        """Gets the volume_name of this NetAppONTAPVolume.


        :return: The volume_name of this NetAppONTAPVolume.
        :rtype: str
        """
        return self._volume_name

    @volume_name.setter
    def volume_name(self, volume_name):
        """Sets the volume_name of this NetAppONTAPVolume.


        :param volume_name: The volume_name of this NetAppONTAPVolume.
        :type volume_name: str
        """

        self._volume_name = volume_name

    @property
    def resource_id(self):
        """Gets the resource_id of this NetAppONTAPVolume.


        :return: The resource_id of this NetAppONTAPVolume.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this NetAppONTAPVolume.


        :param resource_id: The resource_id of this NetAppONTAPVolume.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def cifs_share_count(self):
        """Gets the cifs_share_count of this NetAppONTAPVolume.


        :return: The cifs_share_count of this NetAppONTAPVolume.
        :rtype: int
        """
        return self._cifs_share_count

    @cifs_share_count.setter
    def cifs_share_count(self, cifs_share_count):
        """Sets the cifs_share_count of this NetAppONTAPVolume.


        :param cifs_share_count: The cifs_share_count of this NetAppONTAPVolume.
        :type cifs_share_count: int
        """

        self._cifs_share_count = cifs_share_count

    @property
    def security_style(self):
        """Gets the security_style of this NetAppONTAPVolume.


        :return: The security_style of this NetAppONTAPVolume.
        :rtype: str
        """
        return self._security_style

    @security_style.setter
    def security_style(self, security_style):
        """Sets the security_style of this NetAppONTAPVolume.


        :param security_style: The security_style of this NetAppONTAPVolume.
        :type security_style: str
        """

        self._security_style = security_style

    @property
    def svm_uuid(self):
        """Gets the svm_uuid of this NetAppONTAPVolume.


        :return: The svm_uuid of this NetAppONTAPVolume.
        :rtype: str
        """
        return self._svm_uuid

    @svm_uuid.setter
    def svm_uuid(self, svm_uuid):
        """Sets the svm_uuid of this NetAppONTAPVolume.


        :param svm_uuid: The svm_uuid of this NetAppONTAPVolume.
        :type svm_uuid: str
        """

        self._svm_uuid = svm_uuid

    @property
    def svm_name(self):
        """Gets the svm_name of this NetAppONTAPVolume.


        :return: The svm_name of this NetAppONTAPVolume.
        :rtype: str
        """
        return self._svm_name

    @svm_name.setter
    def svm_name(self, svm_name):
        """Sets the svm_name of this NetAppONTAPVolume.


        :param svm_name: The svm_name of this NetAppONTAPVolume.
        :type svm_name: str
        """

        self._svm_name = svm_name

    @property
    def capacity_used(self):
        """Gets the capacity_used of this NetAppONTAPVolume.


        :return: The capacity_used of this NetAppONTAPVolume.
        :rtype: int
        """
        return self._capacity_used

    @capacity_used.setter
    def capacity_used(self, capacity_used):
        """Sets the capacity_used of this NetAppONTAPVolume.


        :param capacity_used: The capacity_used of this NetAppONTAPVolume.
        :type capacity_used: int
        """

        self._capacity_used = capacity_used

    @property
    def capacity_provisioned(self):
        """Gets the capacity_provisioned of this NetAppONTAPVolume.


        :return: The capacity_provisioned of this NetAppONTAPVolume.
        :rtype: int
        """
        return self._capacity_provisioned

    @capacity_provisioned.setter
    def capacity_provisioned(self, capacity_provisioned):
        """Sets the capacity_provisioned of this NetAppONTAPVolume.


        :param capacity_provisioned: The capacity_provisioned of this NetAppONTAPVolume.
        :type capacity_provisioned: int
        """

        self._capacity_provisioned = capacity_provisioned

    @property
    def logical_capacity_used(self):
        """Gets the logical_capacity_used of this NetAppONTAPVolume.


        :return: The logical_capacity_used of this NetAppONTAPVolume.
        :rtype: int
        """
        return self._logical_capacity_used

    @logical_capacity_used.setter
    def logical_capacity_used(self, logical_capacity_used):
        """Sets the logical_capacity_used of this NetAppONTAPVolume.


        :param logical_capacity_used: The logical_capacity_used of this NetAppONTAPVolume.
        :type logical_capacity_used: int
        """

        self._logical_capacity_used = logical_capacity_used

    @property
    def nfs_exported(self):
        """Gets the nfs_exported of this NetAppONTAPVolume.


        :return: The nfs_exported of this NetAppONTAPVolume.
        :rtype: bool
        """
        return self._nfs_exported

    @nfs_exported.setter
    def nfs_exported(self, nfs_exported):
        """Sets the nfs_exported of this NetAppONTAPVolume.


        :param nfs_exported: The nfs_exported of this NetAppONTAPVolume.
        :type nfs_exported: bool
        """

        self._nfs_exported = nfs_exported

    @property
    def snapshot_capacity_used(self):
        """Gets the snapshot_capacity_used of this NetAppONTAPVolume.


        :return: The snapshot_capacity_used of this NetAppONTAPVolume.
        :rtype: int
        """
        return self._snapshot_capacity_used

    @snapshot_capacity_used.setter
    def snapshot_capacity_used(self, snapshot_capacity_used):
        """Sets the snapshot_capacity_used of this NetAppONTAPVolume.


        :param snapshot_capacity_used: The snapshot_capacity_used of this NetAppONTAPVolume.
        :type snapshot_capacity_used: int
        """

        self._snapshot_capacity_used = snapshot_capacity_used

    @property
    def max_p95_performance(self):
        """Gets the max_p95_performance of this NetAppONTAPVolume.


        :return: The max_p95_performance of this NetAppONTAPVolume.
        :rtype: NetAppONTAPVolumeMaxP95Performance
        """
        return self._max_p95_performance

    @max_p95_performance.setter
    def max_p95_performance(self, max_p95_performance):
        """Sets the max_p95_performance of this NetAppONTAPVolume.


        :param max_p95_performance: The max_p95_performance of this NetAppONTAPVolume.
        :type max_p95_performance: NetAppONTAPVolumeMaxP95Performance
        """

        self._max_p95_performance = max_p95_performance

    @property
    def recommendations(self):
        """Gets the recommendations of this NetAppONTAPVolume.


        :return: The recommendations of this NetAppONTAPVolume.
        :rtype: List
        """
        return self._recommendations

    @recommendations.setter
    def recommendations(self, recommendations):
        """Sets the recommendations of this NetAppONTAPVolume.


        :param recommendations: The recommendations of this NetAppONTAPVolume.
        :type recommendations: List
        """

        self._recommendations = recommendations

    @property
    def recommendation_status(self):
        """Gets the recommendation_status of this NetAppONTAPVolume.


        :return: The recommendation_status of this NetAppONTAPVolume.
        :rtype: RecommendationStatus
        """
        return self._recommendation_status

    @recommendation_status.setter
    def recommendation_status(self, recommendation_status):
        """Sets the recommendation_status of this NetAppONTAPVolume.


        :param recommendation_status: The recommendation_status of this NetAppONTAPVolume.
        :type recommendation_status: RecommendationStatus
        """

        self._recommendation_status = recommendation_status

    @property
    def lun_count(self):
        """Gets the lun_count of this NetAppONTAPVolume.


        :return: The lun_count of this NetAppONTAPVolume.
        :rtype: int
        """
        return self._lun_count

    @lun_count.setter
    def lun_count(self, lun_count):
        """Sets the lun_count of this NetAppONTAPVolume.


        :param lun_count: The lun_count of this NetAppONTAPVolume.
        :type lun_count: int
        """

        self._lun_count = lun_count
