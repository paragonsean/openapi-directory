# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.net_app_ontapsvm_max_p95_performance import NetAppONTAPSVMMaxP95Performance
from openapi_server.models.recommendation_status import RecommendationStatus
from openapi_server import util


class NetAppONTAPSVM(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_uuid: str=None, resource_id: str=None, svm_name: str=None, cifs_share_count: int=None, enabled_protocols: List=None, total_capacity_used: int=None, total_capacity_provisioned: int=None, total_logical_capacity_used: int=None, max_p95_performance: NetAppONTAPSVMMaxP95Performance=None, recommendations: List=None, nfs_exported_volumes: int=None, recommendation_status: RecommendationStatus=None, total_snapshot_capacity_used: int=None, lun_count: int=None):
        """NetAppONTAPSVM - a model defined in OpenAPI

        :param cluster_uuid: The cluster_uuid of this NetAppONTAPSVM.
        :param resource_id: The resource_id of this NetAppONTAPSVM.
        :param svm_name: The svm_name of this NetAppONTAPSVM.
        :param cifs_share_count: The cifs_share_count of this NetAppONTAPSVM.
        :param enabled_protocols: The enabled_protocols of this NetAppONTAPSVM.
        :param total_capacity_used: The total_capacity_used of this NetAppONTAPSVM.
        :param total_capacity_provisioned: The total_capacity_provisioned of this NetAppONTAPSVM.
        :param total_logical_capacity_used: The total_logical_capacity_used of this NetAppONTAPSVM.
        :param max_p95_performance: The max_p95_performance of this NetAppONTAPSVM.
        :param recommendations: The recommendations of this NetAppONTAPSVM.
        :param nfs_exported_volumes: The nfs_exported_volumes of this NetAppONTAPSVM.
        :param recommendation_status: The recommendation_status of this NetAppONTAPSVM.
        :param total_snapshot_capacity_used: The total_snapshot_capacity_used of this NetAppONTAPSVM.
        :param lun_count: The lun_count of this NetAppONTAPSVM.
        """
        self.openapi_types = {
            'cluster_uuid': str,
            'resource_id': str,
            'svm_name': str,
            'cifs_share_count': int,
            'enabled_protocols': List,
            'total_capacity_used': int,
            'total_capacity_provisioned': int,
            'total_logical_capacity_used': int,
            'max_p95_performance': NetAppONTAPSVMMaxP95Performance,
            'recommendations': List,
            'nfs_exported_volumes': int,
            'recommendation_status': RecommendationStatus,
            'total_snapshot_capacity_used': int,
            'lun_count': int
        }

        self.attribute_map = {
            'cluster_uuid': 'ClusterUuid',
            'resource_id': 'ResourceId',
            'svm_name': 'SvmName',
            'cifs_share_count': 'CifsShareCount',
            'enabled_protocols': 'EnabledProtocols',
            'total_capacity_used': 'TotalCapacityUsed',
            'total_capacity_provisioned': 'TotalCapacityProvisioned',
            'total_logical_capacity_used': 'TotalLogicalCapacityUsed',
            'max_p95_performance': 'MaxP95Performance',
            'recommendations': 'Recommendations',
            'nfs_exported_volumes': 'NfsExportedVolumes',
            'recommendation_status': 'RecommendationStatus',
            'total_snapshot_capacity_used': 'TotalSnapshotCapacityUsed',
            'lun_count': 'LunCount'
        }

        self._cluster_uuid = cluster_uuid
        self._resource_id = resource_id
        self._svm_name = svm_name
        self._cifs_share_count = cifs_share_count
        self._enabled_protocols = enabled_protocols
        self._total_capacity_used = total_capacity_used
        self._total_capacity_provisioned = total_capacity_provisioned
        self._total_logical_capacity_used = total_logical_capacity_used
        self._max_p95_performance = max_p95_performance
        self._recommendations = recommendations
        self._nfs_exported_volumes = nfs_exported_volumes
        self._recommendation_status = recommendation_status
        self._total_snapshot_capacity_used = total_snapshot_capacity_used
        self._lun_count = lun_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetAppONTAPSVM':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetAppONTAPSVM of this NetAppONTAPSVM.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_uuid(self):
        """Gets the cluster_uuid of this NetAppONTAPSVM.


        :return: The cluster_uuid of this NetAppONTAPSVM.
        :rtype: str
        """
        return self._cluster_uuid

    @cluster_uuid.setter
    def cluster_uuid(self, cluster_uuid):
        """Sets the cluster_uuid of this NetAppONTAPSVM.


        :param cluster_uuid: The cluster_uuid of this NetAppONTAPSVM.
        :type cluster_uuid: str
        """

        self._cluster_uuid = cluster_uuid

    @property
    def resource_id(self):
        """Gets the resource_id of this NetAppONTAPSVM.


        :return: The resource_id of this NetAppONTAPSVM.
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this NetAppONTAPSVM.


        :param resource_id: The resource_id of this NetAppONTAPSVM.
        :type resource_id: str
        """

        self._resource_id = resource_id

    @property
    def svm_name(self):
        """Gets the svm_name of this NetAppONTAPSVM.


        :return: The svm_name of this NetAppONTAPSVM.
        :rtype: str
        """
        return self._svm_name

    @svm_name.setter
    def svm_name(self, svm_name):
        """Sets the svm_name of this NetAppONTAPSVM.


        :param svm_name: The svm_name of this NetAppONTAPSVM.
        :type svm_name: str
        """

        self._svm_name = svm_name

    @property
    def cifs_share_count(self):
        """Gets the cifs_share_count of this NetAppONTAPSVM.


        :return: The cifs_share_count of this NetAppONTAPSVM.
        :rtype: int
        """
        return self._cifs_share_count

    @cifs_share_count.setter
    def cifs_share_count(self, cifs_share_count):
        """Sets the cifs_share_count of this NetAppONTAPSVM.


        :param cifs_share_count: The cifs_share_count of this NetAppONTAPSVM.
        :type cifs_share_count: int
        """

        self._cifs_share_count = cifs_share_count

    @property
    def enabled_protocols(self):
        """Gets the enabled_protocols of this NetAppONTAPSVM.


        :return: The enabled_protocols of this NetAppONTAPSVM.
        :rtype: List
        """
        return self._enabled_protocols

    @enabled_protocols.setter
    def enabled_protocols(self, enabled_protocols):
        """Sets the enabled_protocols of this NetAppONTAPSVM.


        :param enabled_protocols: The enabled_protocols of this NetAppONTAPSVM.
        :type enabled_protocols: List
        """

        self._enabled_protocols = enabled_protocols

    @property
    def total_capacity_used(self):
        """Gets the total_capacity_used of this NetAppONTAPSVM.


        :return: The total_capacity_used of this NetAppONTAPSVM.
        :rtype: int
        """
        return self._total_capacity_used

    @total_capacity_used.setter
    def total_capacity_used(self, total_capacity_used):
        """Sets the total_capacity_used of this NetAppONTAPSVM.


        :param total_capacity_used: The total_capacity_used of this NetAppONTAPSVM.
        :type total_capacity_used: int
        """

        self._total_capacity_used = total_capacity_used

    @property
    def total_capacity_provisioned(self):
        """Gets the total_capacity_provisioned of this NetAppONTAPSVM.


        :return: The total_capacity_provisioned of this NetAppONTAPSVM.
        :rtype: int
        """
        return self._total_capacity_provisioned

    @total_capacity_provisioned.setter
    def total_capacity_provisioned(self, total_capacity_provisioned):
        """Sets the total_capacity_provisioned of this NetAppONTAPSVM.


        :param total_capacity_provisioned: The total_capacity_provisioned of this NetAppONTAPSVM.
        :type total_capacity_provisioned: int
        """

        self._total_capacity_provisioned = total_capacity_provisioned

    @property
    def total_logical_capacity_used(self):
        """Gets the total_logical_capacity_used of this NetAppONTAPSVM.


        :return: The total_logical_capacity_used of this NetAppONTAPSVM.
        :rtype: int
        """
        return self._total_logical_capacity_used

    @total_logical_capacity_used.setter
    def total_logical_capacity_used(self, total_logical_capacity_used):
        """Sets the total_logical_capacity_used of this NetAppONTAPSVM.


        :param total_logical_capacity_used: The total_logical_capacity_used of this NetAppONTAPSVM.
        :type total_logical_capacity_used: int
        """

        self._total_logical_capacity_used = total_logical_capacity_used

    @property
    def max_p95_performance(self):
        """Gets the max_p95_performance of this NetAppONTAPSVM.


        :return: The max_p95_performance of this NetAppONTAPSVM.
        :rtype: NetAppONTAPSVMMaxP95Performance
        """
        return self._max_p95_performance

    @max_p95_performance.setter
    def max_p95_performance(self, max_p95_performance):
        """Sets the max_p95_performance of this NetAppONTAPSVM.


        :param max_p95_performance: The max_p95_performance of this NetAppONTAPSVM.
        :type max_p95_performance: NetAppONTAPSVMMaxP95Performance
        """

        self._max_p95_performance = max_p95_performance

    @property
    def recommendations(self):
        """Gets the recommendations of this NetAppONTAPSVM.


        :return: The recommendations of this NetAppONTAPSVM.
        :rtype: List
        """
        return self._recommendations

    @recommendations.setter
    def recommendations(self, recommendations):
        """Sets the recommendations of this NetAppONTAPSVM.


        :param recommendations: The recommendations of this NetAppONTAPSVM.
        :type recommendations: List
        """

        self._recommendations = recommendations

    @property
    def nfs_exported_volumes(self):
        """Gets the nfs_exported_volumes of this NetAppONTAPSVM.


        :return: The nfs_exported_volumes of this NetAppONTAPSVM.
        :rtype: int
        """
        return self._nfs_exported_volumes

    @nfs_exported_volumes.setter
    def nfs_exported_volumes(self, nfs_exported_volumes):
        """Sets the nfs_exported_volumes of this NetAppONTAPSVM.


        :param nfs_exported_volumes: The nfs_exported_volumes of this NetAppONTAPSVM.
        :type nfs_exported_volumes: int
        """

        self._nfs_exported_volumes = nfs_exported_volumes

    @property
    def recommendation_status(self):
        """Gets the recommendation_status of this NetAppONTAPSVM.


        :return: The recommendation_status of this NetAppONTAPSVM.
        :rtype: RecommendationStatus
        """
        return self._recommendation_status

    @recommendation_status.setter
    def recommendation_status(self, recommendation_status):
        """Sets the recommendation_status of this NetAppONTAPSVM.


        :param recommendation_status: The recommendation_status of this NetAppONTAPSVM.
        :type recommendation_status: RecommendationStatus
        """

        self._recommendation_status = recommendation_status

    @property
    def total_snapshot_capacity_used(self):
        """Gets the total_snapshot_capacity_used of this NetAppONTAPSVM.


        :return: The total_snapshot_capacity_used of this NetAppONTAPSVM.
        :rtype: int
        """
        return self._total_snapshot_capacity_used

    @total_snapshot_capacity_used.setter
    def total_snapshot_capacity_used(self, total_snapshot_capacity_used):
        """Sets the total_snapshot_capacity_used of this NetAppONTAPSVM.


        :param total_snapshot_capacity_used: The total_snapshot_capacity_used of this NetAppONTAPSVM.
        :type total_snapshot_capacity_used: int
        """

        self._total_snapshot_capacity_used = total_snapshot_capacity_used

    @property
    def lun_count(self):
        """Gets the lun_count of this NetAppONTAPSVM.


        :return: The lun_count of this NetAppONTAPSVM.
        :rtype: int
        """
        return self._lun_count

    @lun_count.setter
    def lun_count(self, lun_count):
        """Sets the lun_count of this NetAppONTAPSVM.


        :param lun_count: The lun_count of this NetAppONTAPSVM.
        :type lun_count: int
        """

        self._lun_count = lun_count
