# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.discovery_resource_type import DiscoveryResourceType
from openapi_server import util


class DescribeStorageSystemResourcesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, discovery_job_arn: str=None, resource_type: DiscoveryResourceType=None, resource_ids: List=None, filter: Dict=None, max_results: int=None, next_token: str=None):
        """DescribeStorageSystemResourcesRequest - a model defined in OpenAPI

        :param discovery_job_arn: The discovery_job_arn of this DescribeStorageSystemResourcesRequest.
        :param resource_type: The resource_type of this DescribeStorageSystemResourcesRequest.
        :param resource_ids: The resource_ids of this DescribeStorageSystemResourcesRequest.
        :param filter: The filter of this DescribeStorageSystemResourcesRequest.
        :param max_results: The max_results of this DescribeStorageSystemResourcesRequest.
        :param next_token: The next_token of this DescribeStorageSystemResourcesRequest.
        """
        self.openapi_types = {
            'discovery_job_arn': str,
            'resource_type': DiscoveryResourceType,
            'resource_ids': List,
            'filter': Dict,
            'max_results': int,
            'next_token': str
        }

        self.attribute_map = {
            'discovery_job_arn': 'DiscoveryJobArn',
            'resource_type': 'ResourceType',
            'resource_ids': 'ResourceIds',
            'filter': 'Filter',
            'max_results': 'MaxResults',
            'next_token': 'NextToken'
        }

        self._discovery_job_arn = discovery_job_arn
        self._resource_type = resource_type
        self._resource_ids = resource_ids
        self._filter = filter
        self._max_results = max_results
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeStorageSystemResourcesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeStorageSystemResourcesRequest of this DescribeStorageSystemResourcesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def discovery_job_arn(self):
        """Gets the discovery_job_arn of this DescribeStorageSystemResourcesRequest.


        :return: The discovery_job_arn of this DescribeStorageSystemResourcesRequest.
        :rtype: str
        """
        return self._discovery_job_arn

    @discovery_job_arn.setter
    def discovery_job_arn(self, discovery_job_arn):
        """Sets the discovery_job_arn of this DescribeStorageSystemResourcesRequest.


        :param discovery_job_arn: The discovery_job_arn of this DescribeStorageSystemResourcesRequest.
        :type discovery_job_arn: str
        """
        if discovery_job_arn is None:
            raise ValueError("Invalid value for `discovery_job_arn`, must not be `None`")

        self._discovery_job_arn = discovery_job_arn

    @property
    def resource_type(self):
        """Gets the resource_type of this DescribeStorageSystemResourcesRequest.


        :return: The resource_type of this DescribeStorageSystemResourcesRequest.
        :rtype: DiscoveryResourceType
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this DescribeStorageSystemResourcesRequest.


        :param resource_type: The resource_type of this DescribeStorageSystemResourcesRequest.
        :type resource_type: DiscoveryResourceType
        """
        if resource_type is None:
            raise ValueError("Invalid value for `resource_type`, must not be `None`")

        self._resource_type = resource_type

    @property
    def resource_ids(self):
        """Gets the resource_ids of this DescribeStorageSystemResourcesRequest.


        :return: The resource_ids of this DescribeStorageSystemResourcesRequest.
        :rtype: List
        """
        return self._resource_ids

    @resource_ids.setter
    def resource_ids(self, resource_ids):
        """Sets the resource_ids of this DescribeStorageSystemResourcesRequest.


        :param resource_ids: The resource_ids of this DescribeStorageSystemResourcesRequest.
        :type resource_ids: List
        """

        self._resource_ids = resource_ids

    @property
    def filter(self):
        """Gets the filter of this DescribeStorageSystemResourcesRequest.


        :return: The filter of this DescribeStorageSystemResourcesRequest.
        :rtype: Dict
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this DescribeStorageSystemResourcesRequest.


        :param filter: The filter of this DescribeStorageSystemResourcesRequest.
        :type filter: Dict
        """

        self._filter = filter

    @property
    def max_results(self):
        """Gets the max_results of this DescribeStorageSystemResourcesRequest.


        :return: The max_results of this DescribeStorageSystemResourcesRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this DescribeStorageSystemResourcesRequest.


        :param max_results: The max_results of this DescribeStorageSystemResourcesRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this DescribeStorageSystemResourcesRequest.


        :return: The next_token of this DescribeStorageSystemResourcesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeStorageSystemResourcesRequest.


        :param next_token: The next_token of this DescribeStorageSystemResourcesRequest.
        :type next_token: str
        """

        self._next_token = next_token
