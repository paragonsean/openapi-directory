# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_location_efs_request_ec2_config import CreateLocationEfsRequestEc2Config
from openapi_server.models.efs_in_transit_encryption import EfsInTransitEncryption
from openapi_server import util


class CreateLocationEfsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subdirectory: str=None, efs_filesystem_arn: str=None, ec2_config: CreateLocationEfsRequestEc2Config=None, tags: List=None, access_point_arn: str=None, file_system_access_role_arn: str=None, in_transit_encryption: EfsInTransitEncryption=None):
        """CreateLocationEfsRequest - a model defined in OpenAPI

        :param subdirectory: The subdirectory of this CreateLocationEfsRequest.
        :param efs_filesystem_arn: The efs_filesystem_arn of this CreateLocationEfsRequest.
        :param ec2_config: The ec2_config of this CreateLocationEfsRequest.
        :param tags: The tags of this CreateLocationEfsRequest.
        :param access_point_arn: The access_point_arn of this CreateLocationEfsRequest.
        :param file_system_access_role_arn: The file_system_access_role_arn of this CreateLocationEfsRequest.
        :param in_transit_encryption: The in_transit_encryption of this CreateLocationEfsRequest.
        """
        self.openapi_types = {
            'subdirectory': str,
            'efs_filesystem_arn': str,
            'ec2_config': CreateLocationEfsRequestEc2Config,
            'tags': List,
            'access_point_arn': str,
            'file_system_access_role_arn': str,
            'in_transit_encryption': EfsInTransitEncryption
        }

        self.attribute_map = {
            'subdirectory': 'Subdirectory',
            'efs_filesystem_arn': 'EfsFilesystemArn',
            'ec2_config': 'Ec2Config',
            'tags': 'Tags',
            'access_point_arn': 'AccessPointArn',
            'file_system_access_role_arn': 'FileSystemAccessRoleArn',
            'in_transit_encryption': 'InTransitEncryption'
        }

        self._subdirectory = subdirectory
        self._efs_filesystem_arn = efs_filesystem_arn
        self._ec2_config = ec2_config
        self._tags = tags
        self._access_point_arn = access_point_arn
        self._file_system_access_role_arn = file_system_access_role_arn
        self._in_transit_encryption = in_transit_encryption

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateLocationEfsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateLocationEfsRequest of this CreateLocationEfsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subdirectory(self):
        """Gets the subdirectory of this CreateLocationEfsRequest.


        :return: The subdirectory of this CreateLocationEfsRequest.
        :rtype: str
        """
        return self._subdirectory

    @subdirectory.setter
    def subdirectory(self, subdirectory):
        """Sets the subdirectory of this CreateLocationEfsRequest.


        :param subdirectory: The subdirectory of this CreateLocationEfsRequest.
        :type subdirectory: str
        """

        self._subdirectory = subdirectory

    @property
    def efs_filesystem_arn(self):
        """Gets the efs_filesystem_arn of this CreateLocationEfsRequest.


        :return: The efs_filesystem_arn of this CreateLocationEfsRequest.
        :rtype: str
        """
        return self._efs_filesystem_arn

    @efs_filesystem_arn.setter
    def efs_filesystem_arn(self, efs_filesystem_arn):
        """Sets the efs_filesystem_arn of this CreateLocationEfsRequest.


        :param efs_filesystem_arn: The efs_filesystem_arn of this CreateLocationEfsRequest.
        :type efs_filesystem_arn: str
        """
        if efs_filesystem_arn is None:
            raise ValueError("Invalid value for `efs_filesystem_arn`, must not be `None`")

        self._efs_filesystem_arn = efs_filesystem_arn

    @property
    def ec2_config(self):
        """Gets the ec2_config of this CreateLocationEfsRequest.


        :return: The ec2_config of this CreateLocationEfsRequest.
        :rtype: CreateLocationEfsRequestEc2Config
        """
        return self._ec2_config

    @ec2_config.setter
    def ec2_config(self, ec2_config):
        """Sets the ec2_config of this CreateLocationEfsRequest.


        :param ec2_config: The ec2_config of this CreateLocationEfsRequest.
        :type ec2_config: CreateLocationEfsRequestEc2Config
        """
        if ec2_config is None:
            raise ValueError("Invalid value for `ec2_config`, must not be `None`")

        self._ec2_config = ec2_config

    @property
    def tags(self):
        """Gets the tags of this CreateLocationEfsRequest.


        :return: The tags of this CreateLocationEfsRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateLocationEfsRequest.


        :param tags: The tags of this CreateLocationEfsRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def access_point_arn(self):
        """Gets the access_point_arn of this CreateLocationEfsRequest.


        :return: The access_point_arn of this CreateLocationEfsRequest.
        :rtype: str
        """
        return self._access_point_arn

    @access_point_arn.setter
    def access_point_arn(self, access_point_arn):
        """Sets the access_point_arn of this CreateLocationEfsRequest.


        :param access_point_arn: The access_point_arn of this CreateLocationEfsRequest.
        :type access_point_arn: str
        """

        self._access_point_arn = access_point_arn

    @property
    def file_system_access_role_arn(self):
        """Gets the file_system_access_role_arn of this CreateLocationEfsRequest.


        :return: The file_system_access_role_arn of this CreateLocationEfsRequest.
        :rtype: str
        """
        return self._file_system_access_role_arn

    @file_system_access_role_arn.setter
    def file_system_access_role_arn(self, file_system_access_role_arn):
        """Sets the file_system_access_role_arn of this CreateLocationEfsRequest.


        :param file_system_access_role_arn: The file_system_access_role_arn of this CreateLocationEfsRequest.
        :type file_system_access_role_arn: str
        """

        self._file_system_access_role_arn = file_system_access_role_arn

    @property
    def in_transit_encryption(self):
        """Gets the in_transit_encryption of this CreateLocationEfsRequest.


        :return: The in_transit_encryption of this CreateLocationEfsRequest.
        :rtype: EfsInTransitEncryption
        """
        return self._in_transit_encryption

    @in_transit_encryption.setter
    def in_transit_encryption(self, in_transit_encryption):
        """Sets the in_transit_encryption of this CreateLocationEfsRequest.


        :param in_transit_encryption: The in_transit_encryption of this CreateLocationEfsRequest.
        :type in_transit_encryption: EfsInTransitEncryption
        """

        self._in_transit_encryption = in_transit_encryption
