# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_storage_system_request_credentials import AddStorageSystemRequestCredentials
from openapi_server.models.add_storage_system_request_server_configuration import AddStorageSystemRequestServerConfiguration
from openapi_server.models.discovery_system_type import DiscoverySystemType
from openapi_server import util


class AddStorageSystemRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, server_configuration: AddStorageSystemRequestServerConfiguration=None, system_type: DiscoverySystemType=None, agent_arns: List=None, cloud_watch_log_group_arn: str=None, tags: List=None, name: str=None, client_token: str=None, credentials: AddStorageSystemRequestCredentials=None):
        """AddStorageSystemRequest - a model defined in OpenAPI

        :param server_configuration: The server_configuration of this AddStorageSystemRequest.
        :param system_type: The system_type of this AddStorageSystemRequest.
        :param agent_arns: The agent_arns of this AddStorageSystemRequest.
        :param cloud_watch_log_group_arn: The cloud_watch_log_group_arn of this AddStorageSystemRequest.
        :param tags: The tags of this AddStorageSystemRequest.
        :param name: The name of this AddStorageSystemRequest.
        :param client_token: The client_token of this AddStorageSystemRequest.
        :param credentials: The credentials of this AddStorageSystemRequest.
        """
        self.openapi_types = {
            'server_configuration': AddStorageSystemRequestServerConfiguration,
            'system_type': DiscoverySystemType,
            'agent_arns': List,
            'cloud_watch_log_group_arn': str,
            'tags': List,
            'name': str,
            'client_token': str,
            'credentials': AddStorageSystemRequestCredentials
        }

        self.attribute_map = {
            'server_configuration': 'ServerConfiguration',
            'system_type': 'SystemType',
            'agent_arns': 'AgentArns',
            'cloud_watch_log_group_arn': 'CloudWatchLogGroupArn',
            'tags': 'Tags',
            'name': 'Name',
            'client_token': 'ClientToken',
            'credentials': 'Credentials'
        }

        self._server_configuration = server_configuration
        self._system_type = system_type
        self._agent_arns = agent_arns
        self._cloud_watch_log_group_arn = cloud_watch_log_group_arn
        self._tags = tags
        self._name = name
        self._client_token = client_token
        self._credentials = credentials

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddStorageSystemRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddStorageSystemRequest of this AddStorageSystemRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def server_configuration(self):
        """Gets the server_configuration of this AddStorageSystemRequest.


        :return: The server_configuration of this AddStorageSystemRequest.
        :rtype: AddStorageSystemRequestServerConfiguration
        """
        return self._server_configuration

    @server_configuration.setter
    def server_configuration(self, server_configuration):
        """Sets the server_configuration of this AddStorageSystemRequest.


        :param server_configuration: The server_configuration of this AddStorageSystemRequest.
        :type server_configuration: AddStorageSystemRequestServerConfiguration
        """
        if server_configuration is None:
            raise ValueError("Invalid value for `server_configuration`, must not be `None`")

        self._server_configuration = server_configuration

    @property
    def system_type(self):
        """Gets the system_type of this AddStorageSystemRequest.


        :return: The system_type of this AddStorageSystemRequest.
        :rtype: DiscoverySystemType
        """
        return self._system_type

    @system_type.setter
    def system_type(self, system_type):
        """Sets the system_type of this AddStorageSystemRequest.


        :param system_type: The system_type of this AddStorageSystemRequest.
        :type system_type: DiscoverySystemType
        """
        if system_type is None:
            raise ValueError("Invalid value for `system_type`, must not be `None`")

        self._system_type = system_type

    @property
    def agent_arns(self):
        """Gets the agent_arns of this AddStorageSystemRequest.


        :return: The agent_arns of this AddStorageSystemRequest.
        :rtype: List
        """
        return self._agent_arns

    @agent_arns.setter
    def agent_arns(self, agent_arns):
        """Sets the agent_arns of this AddStorageSystemRequest.


        :param agent_arns: The agent_arns of this AddStorageSystemRequest.
        :type agent_arns: List
        """
        if agent_arns is None:
            raise ValueError("Invalid value for `agent_arns`, must not be `None`")

        self._agent_arns = agent_arns

    @property
    def cloud_watch_log_group_arn(self):
        """Gets the cloud_watch_log_group_arn of this AddStorageSystemRequest.


        :return: The cloud_watch_log_group_arn of this AddStorageSystemRequest.
        :rtype: str
        """
        return self._cloud_watch_log_group_arn

    @cloud_watch_log_group_arn.setter
    def cloud_watch_log_group_arn(self, cloud_watch_log_group_arn):
        """Sets the cloud_watch_log_group_arn of this AddStorageSystemRequest.


        :param cloud_watch_log_group_arn: The cloud_watch_log_group_arn of this AddStorageSystemRequest.
        :type cloud_watch_log_group_arn: str
        """

        self._cloud_watch_log_group_arn = cloud_watch_log_group_arn

    @property
    def tags(self):
        """Gets the tags of this AddStorageSystemRequest.


        :return: The tags of this AddStorageSystemRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this AddStorageSystemRequest.


        :param tags: The tags of this AddStorageSystemRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def name(self):
        """Gets the name of this AddStorageSystemRequest.


        :return: The name of this AddStorageSystemRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AddStorageSystemRequest.


        :param name: The name of this AddStorageSystemRequest.
        :type name: str
        """

        self._name = name

    @property
    def client_token(self):
        """Gets the client_token of this AddStorageSystemRequest.


        :return: The client_token of this AddStorageSystemRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this AddStorageSystemRequest.


        :param client_token: The client_token of this AddStorageSystemRequest.
        :type client_token: str
        """
        if client_token is None:
            raise ValueError("Invalid value for `client_token`, must not be `None`")

        self._client_token = client_token

    @property
    def credentials(self):
        """Gets the credentials of this AddStorageSystemRequest.


        :return: The credentials of this AddStorageSystemRequest.
        :rtype: AddStorageSystemRequestCredentials
        """
        return self._credentials

    @credentials.setter
    def credentials(self, credentials):
        """Sets the credentials of this AddStorageSystemRequest.


        :param credentials: The credentials of this AddStorageSystemRequest.
        :type credentials: AddStorageSystemRequestCredentials
        """
        if credentials is None:
            raise ValueError("Invalid value for `credentials`, must not be `None`")

        self._credentials = credentials
