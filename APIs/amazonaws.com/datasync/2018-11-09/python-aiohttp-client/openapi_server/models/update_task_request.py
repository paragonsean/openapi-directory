# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.options import Options
from openapi_server.models.update_task_request_schedule import UpdateTaskRequestSchedule
from openapi_server import util


class UpdateTaskRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, task_arn: str=None, options: Options=None, excludes: List=None, schedule: UpdateTaskRequestSchedule=None, name: str=None, cloud_watch_log_group_arn: str=None, includes: List=None):
        """UpdateTaskRequest - a model defined in OpenAPI

        :param task_arn: The task_arn of this UpdateTaskRequest.
        :param options: The options of this UpdateTaskRequest.
        :param excludes: The excludes of this UpdateTaskRequest.
        :param schedule: The schedule of this UpdateTaskRequest.
        :param name: The name of this UpdateTaskRequest.
        :param cloud_watch_log_group_arn: The cloud_watch_log_group_arn of this UpdateTaskRequest.
        :param includes: The includes of this UpdateTaskRequest.
        """
        self.openapi_types = {
            'task_arn': str,
            'options': Options,
            'excludes': List,
            'schedule': UpdateTaskRequestSchedule,
            'name': str,
            'cloud_watch_log_group_arn': str,
            'includes': List
        }

        self.attribute_map = {
            'task_arn': 'TaskArn',
            'options': 'Options',
            'excludes': 'Excludes',
            'schedule': 'Schedule',
            'name': 'Name',
            'cloud_watch_log_group_arn': 'CloudWatchLogGroupArn',
            'includes': 'Includes'
        }

        self._task_arn = task_arn
        self._options = options
        self._excludes = excludes
        self._schedule = schedule
        self._name = name
        self._cloud_watch_log_group_arn = cloud_watch_log_group_arn
        self._includes = includes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateTaskRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateTaskRequest of this UpdateTaskRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def task_arn(self):
        """Gets the task_arn of this UpdateTaskRequest.


        :return: The task_arn of this UpdateTaskRequest.
        :rtype: str
        """
        return self._task_arn

    @task_arn.setter
    def task_arn(self, task_arn):
        """Sets the task_arn of this UpdateTaskRequest.


        :param task_arn: The task_arn of this UpdateTaskRequest.
        :type task_arn: str
        """
        if task_arn is None:
            raise ValueError("Invalid value for `task_arn`, must not be `None`")

        self._task_arn = task_arn

    @property
    def options(self):
        """Gets the options of this UpdateTaskRequest.


        :return: The options of this UpdateTaskRequest.
        :rtype: Options
        """
        return self._options

    @options.setter
    def options(self, options):
        """Sets the options of this UpdateTaskRequest.


        :param options: The options of this UpdateTaskRequest.
        :type options: Options
        """

        self._options = options

    @property
    def excludes(self):
        """Gets the excludes of this UpdateTaskRequest.


        :return: The excludes of this UpdateTaskRequest.
        :rtype: List
        """
        return self._excludes

    @excludes.setter
    def excludes(self, excludes):
        """Sets the excludes of this UpdateTaskRequest.


        :param excludes: The excludes of this UpdateTaskRequest.
        :type excludes: List
        """

        self._excludes = excludes

    @property
    def schedule(self):
        """Gets the schedule of this UpdateTaskRequest.


        :return: The schedule of this UpdateTaskRequest.
        :rtype: UpdateTaskRequestSchedule
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this UpdateTaskRequest.


        :param schedule: The schedule of this UpdateTaskRequest.
        :type schedule: UpdateTaskRequestSchedule
        """

        self._schedule = schedule

    @property
    def name(self):
        """Gets the name of this UpdateTaskRequest.


        :return: The name of this UpdateTaskRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateTaskRequest.


        :param name: The name of this UpdateTaskRequest.
        :type name: str
        """

        self._name = name

    @property
    def cloud_watch_log_group_arn(self):
        """Gets the cloud_watch_log_group_arn of this UpdateTaskRequest.


        :return: The cloud_watch_log_group_arn of this UpdateTaskRequest.
        :rtype: str
        """
        return self._cloud_watch_log_group_arn

    @cloud_watch_log_group_arn.setter
    def cloud_watch_log_group_arn(self, cloud_watch_log_group_arn):
        """Sets the cloud_watch_log_group_arn of this UpdateTaskRequest.


        :param cloud_watch_log_group_arn: The cloud_watch_log_group_arn of this UpdateTaskRequest.
        :type cloud_watch_log_group_arn: str
        """

        self._cloud_watch_log_group_arn = cloud_watch_log_group_arn

    @property
    def includes(self):
        """Gets the includes of this UpdateTaskRequest.


        :return: The includes of this UpdateTaskRequest.
        :rtype: List
        """
        return self._includes

    @includes.setter
    def includes(self, includes):
        """Sets the includes of this UpdateTaskRequest.


        :param includes: The includes of this UpdateTaskRequest.
        :type includes: List
        """

        self._includes = includes
