# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateAgentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activation_key: str=None, agent_name: str=None, tags: List=None, vpc_endpoint_id: str=None, subnet_arns: List=None, security_group_arns: List=None):
        """CreateAgentRequest - a model defined in OpenAPI

        :param activation_key: The activation_key of this CreateAgentRequest.
        :param agent_name: The agent_name of this CreateAgentRequest.
        :param tags: The tags of this CreateAgentRequest.
        :param vpc_endpoint_id: The vpc_endpoint_id of this CreateAgentRequest.
        :param subnet_arns: The subnet_arns of this CreateAgentRequest.
        :param security_group_arns: The security_group_arns of this CreateAgentRequest.
        """
        self.openapi_types = {
            'activation_key': str,
            'agent_name': str,
            'tags': List,
            'vpc_endpoint_id': str,
            'subnet_arns': List,
            'security_group_arns': List
        }

        self.attribute_map = {
            'activation_key': 'ActivationKey',
            'agent_name': 'AgentName',
            'tags': 'Tags',
            'vpc_endpoint_id': 'VpcEndpointId',
            'subnet_arns': 'SubnetArns',
            'security_group_arns': 'SecurityGroupArns'
        }

        self._activation_key = activation_key
        self._agent_name = agent_name
        self._tags = tags
        self._vpc_endpoint_id = vpc_endpoint_id
        self._subnet_arns = subnet_arns
        self._security_group_arns = security_group_arns

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAgentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAgentRequest of this CreateAgentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activation_key(self):
        """Gets the activation_key of this CreateAgentRequest.


        :return: The activation_key of this CreateAgentRequest.
        :rtype: str
        """
        return self._activation_key

    @activation_key.setter
    def activation_key(self, activation_key):
        """Sets the activation_key of this CreateAgentRequest.


        :param activation_key: The activation_key of this CreateAgentRequest.
        :type activation_key: str
        """
        if activation_key is None:
            raise ValueError("Invalid value for `activation_key`, must not be `None`")

        self._activation_key = activation_key

    @property
    def agent_name(self):
        """Gets the agent_name of this CreateAgentRequest.


        :return: The agent_name of this CreateAgentRequest.
        :rtype: str
        """
        return self._agent_name

    @agent_name.setter
    def agent_name(self, agent_name):
        """Sets the agent_name of this CreateAgentRequest.


        :param agent_name: The agent_name of this CreateAgentRequest.
        :type agent_name: str
        """

        self._agent_name = agent_name

    @property
    def tags(self):
        """Gets the tags of this CreateAgentRequest.


        :return: The tags of this CreateAgentRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateAgentRequest.


        :param tags: The tags of this CreateAgentRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def vpc_endpoint_id(self):
        """Gets the vpc_endpoint_id of this CreateAgentRequest.


        :return: The vpc_endpoint_id of this CreateAgentRequest.
        :rtype: str
        """
        return self._vpc_endpoint_id

    @vpc_endpoint_id.setter
    def vpc_endpoint_id(self, vpc_endpoint_id):
        """Sets the vpc_endpoint_id of this CreateAgentRequest.


        :param vpc_endpoint_id: The vpc_endpoint_id of this CreateAgentRequest.
        :type vpc_endpoint_id: str
        """

        self._vpc_endpoint_id = vpc_endpoint_id

    @property
    def subnet_arns(self):
        """Gets the subnet_arns of this CreateAgentRequest.


        :return: The subnet_arns of this CreateAgentRequest.
        :rtype: List
        """
        return self._subnet_arns

    @subnet_arns.setter
    def subnet_arns(self, subnet_arns):
        """Sets the subnet_arns of this CreateAgentRequest.


        :param subnet_arns: The subnet_arns of this CreateAgentRequest.
        :type subnet_arns: List
        """

        self._subnet_arns = subnet_arns

    @property
    def security_group_arns(self):
        """Gets the security_group_arns of this CreateAgentRequest.


        :return: The security_group_arns of this CreateAgentRequest.
        :rtype: List
        """
        return self._security_group_arns

    @security_group_arns.setter
    def security_group_arns(self, security_group_arns):
        """Sets the security_group_arns of this CreateAgentRequest.


        :param security_group_arns: The security_group_arns of this CreateAgentRequest.
        :type security_group_arns: List
        """

        self._security_group_arns = security_group_arns
