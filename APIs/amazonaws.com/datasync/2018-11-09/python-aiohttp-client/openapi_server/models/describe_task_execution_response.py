# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_task_execution_response_result import DescribeTaskExecutionResponseResult
from openapi_server.models.options import Options
from openapi_server.models.task_execution_status import TaskExecutionStatus
from openapi_server import util


class DescribeTaskExecutionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, task_execution_arn: str=None, status: TaskExecutionStatus=None, options: Options=None, excludes: List=None, includes: List=None, start_time: datetime=None, estimated_files_to_transfer: int=None, estimated_bytes_to_transfer: int=None, files_transferred: int=None, bytes_written: int=None, bytes_transferred: int=None, result: DescribeTaskExecutionResponseResult=None, bytes_compressed: int=None):
        """DescribeTaskExecutionResponse - a model defined in OpenAPI

        :param task_execution_arn: The task_execution_arn of this DescribeTaskExecutionResponse.
        :param status: The status of this DescribeTaskExecutionResponse.
        :param options: The options of this DescribeTaskExecutionResponse.
        :param excludes: The excludes of this DescribeTaskExecutionResponse.
        :param includes: The includes of this DescribeTaskExecutionResponse.
        :param start_time: The start_time of this DescribeTaskExecutionResponse.
        :param estimated_files_to_transfer: The estimated_files_to_transfer of this DescribeTaskExecutionResponse.
        :param estimated_bytes_to_transfer: The estimated_bytes_to_transfer of this DescribeTaskExecutionResponse.
        :param files_transferred: The files_transferred of this DescribeTaskExecutionResponse.
        :param bytes_written: The bytes_written of this DescribeTaskExecutionResponse.
        :param bytes_transferred: The bytes_transferred of this DescribeTaskExecutionResponse.
        :param result: The result of this DescribeTaskExecutionResponse.
        :param bytes_compressed: The bytes_compressed of this DescribeTaskExecutionResponse.
        """
        self.openapi_types = {
            'task_execution_arn': str,
            'status': TaskExecutionStatus,
            'options': Options,
            'excludes': List,
            'includes': List,
            'start_time': datetime,
            'estimated_files_to_transfer': int,
            'estimated_bytes_to_transfer': int,
            'files_transferred': int,
            'bytes_written': int,
            'bytes_transferred': int,
            'result': DescribeTaskExecutionResponseResult,
            'bytes_compressed': int
        }

        self.attribute_map = {
            'task_execution_arn': 'TaskExecutionArn',
            'status': 'Status',
            'options': 'Options',
            'excludes': 'Excludes',
            'includes': 'Includes',
            'start_time': 'StartTime',
            'estimated_files_to_transfer': 'EstimatedFilesToTransfer',
            'estimated_bytes_to_transfer': 'EstimatedBytesToTransfer',
            'files_transferred': 'FilesTransferred',
            'bytes_written': 'BytesWritten',
            'bytes_transferred': 'BytesTransferred',
            'result': 'Result',
            'bytes_compressed': 'BytesCompressed'
        }

        self._task_execution_arn = task_execution_arn
        self._status = status
        self._options = options
        self._excludes = excludes
        self._includes = includes
        self._start_time = start_time
        self._estimated_files_to_transfer = estimated_files_to_transfer
        self._estimated_bytes_to_transfer = estimated_bytes_to_transfer
        self._files_transferred = files_transferred
        self._bytes_written = bytes_written
        self._bytes_transferred = bytes_transferred
        self._result = result
        self._bytes_compressed = bytes_compressed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeTaskExecutionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeTaskExecutionResponse of this DescribeTaskExecutionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def task_execution_arn(self):
        """Gets the task_execution_arn of this DescribeTaskExecutionResponse.


        :return: The task_execution_arn of this DescribeTaskExecutionResponse.
        :rtype: str
        """
        return self._task_execution_arn

    @task_execution_arn.setter
    def task_execution_arn(self, task_execution_arn):
        """Sets the task_execution_arn of this DescribeTaskExecutionResponse.


        :param task_execution_arn: The task_execution_arn of this DescribeTaskExecutionResponse.
        :type task_execution_arn: str
        """

        self._task_execution_arn = task_execution_arn

    @property
    def status(self):
        """Gets the status of this DescribeTaskExecutionResponse.


        :return: The status of this DescribeTaskExecutionResponse.
        :rtype: TaskExecutionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DescribeTaskExecutionResponse.


        :param status: The status of this DescribeTaskExecutionResponse.
        :type status: TaskExecutionStatus
        """

        self._status = status

    @property
    def options(self):
        """Gets the options of this DescribeTaskExecutionResponse.


        :return: The options of this DescribeTaskExecutionResponse.
        :rtype: Options
        """
        return self._options

    @options.setter
    def options(self, options):
        """Sets the options of this DescribeTaskExecutionResponse.


        :param options: The options of this DescribeTaskExecutionResponse.
        :type options: Options
        """

        self._options = options

    @property
    def excludes(self):
        """Gets the excludes of this DescribeTaskExecutionResponse.


        :return: The excludes of this DescribeTaskExecutionResponse.
        :rtype: List
        """
        return self._excludes

    @excludes.setter
    def excludes(self, excludes):
        """Sets the excludes of this DescribeTaskExecutionResponse.


        :param excludes: The excludes of this DescribeTaskExecutionResponse.
        :type excludes: List
        """

        self._excludes = excludes

    @property
    def includes(self):
        """Gets the includes of this DescribeTaskExecutionResponse.


        :return: The includes of this DescribeTaskExecutionResponse.
        :rtype: List
        """
        return self._includes

    @includes.setter
    def includes(self, includes):
        """Sets the includes of this DescribeTaskExecutionResponse.


        :param includes: The includes of this DescribeTaskExecutionResponse.
        :type includes: List
        """

        self._includes = includes

    @property
    def start_time(self):
        """Gets the start_time of this DescribeTaskExecutionResponse.


        :return: The start_time of this DescribeTaskExecutionResponse.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this DescribeTaskExecutionResponse.


        :param start_time: The start_time of this DescribeTaskExecutionResponse.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def estimated_files_to_transfer(self):
        """Gets the estimated_files_to_transfer of this DescribeTaskExecutionResponse.


        :return: The estimated_files_to_transfer of this DescribeTaskExecutionResponse.
        :rtype: int
        """
        return self._estimated_files_to_transfer

    @estimated_files_to_transfer.setter
    def estimated_files_to_transfer(self, estimated_files_to_transfer):
        """Sets the estimated_files_to_transfer of this DescribeTaskExecutionResponse.


        :param estimated_files_to_transfer: The estimated_files_to_transfer of this DescribeTaskExecutionResponse.
        :type estimated_files_to_transfer: int
        """

        self._estimated_files_to_transfer = estimated_files_to_transfer

    @property
    def estimated_bytes_to_transfer(self):
        """Gets the estimated_bytes_to_transfer of this DescribeTaskExecutionResponse.


        :return: The estimated_bytes_to_transfer of this DescribeTaskExecutionResponse.
        :rtype: int
        """
        return self._estimated_bytes_to_transfer

    @estimated_bytes_to_transfer.setter
    def estimated_bytes_to_transfer(self, estimated_bytes_to_transfer):
        """Sets the estimated_bytes_to_transfer of this DescribeTaskExecutionResponse.


        :param estimated_bytes_to_transfer: The estimated_bytes_to_transfer of this DescribeTaskExecutionResponse.
        :type estimated_bytes_to_transfer: int
        """

        self._estimated_bytes_to_transfer = estimated_bytes_to_transfer

    @property
    def files_transferred(self):
        """Gets the files_transferred of this DescribeTaskExecutionResponse.


        :return: The files_transferred of this DescribeTaskExecutionResponse.
        :rtype: int
        """
        return self._files_transferred

    @files_transferred.setter
    def files_transferred(self, files_transferred):
        """Sets the files_transferred of this DescribeTaskExecutionResponse.


        :param files_transferred: The files_transferred of this DescribeTaskExecutionResponse.
        :type files_transferred: int
        """

        self._files_transferred = files_transferred

    @property
    def bytes_written(self):
        """Gets the bytes_written of this DescribeTaskExecutionResponse.


        :return: The bytes_written of this DescribeTaskExecutionResponse.
        :rtype: int
        """
        return self._bytes_written

    @bytes_written.setter
    def bytes_written(self, bytes_written):
        """Sets the bytes_written of this DescribeTaskExecutionResponse.


        :param bytes_written: The bytes_written of this DescribeTaskExecutionResponse.
        :type bytes_written: int
        """

        self._bytes_written = bytes_written

    @property
    def bytes_transferred(self):
        """Gets the bytes_transferred of this DescribeTaskExecutionResponse.


        :return: The bytes_transferred of this DescribeTaskExecutionResponse.
        :rtype: int
        """
        return self._bytes_transferred

    @bytes_transferred.setter
    def bytes_transferred(self, bytes_transferred):
        """Sets the bytes_transferred of this DescribeTaskExecutionResponse.


        :param bytes_transferred: The bytes_transferred of this DescribeTaskExecutionResponse.
        :type bytes_transferred: int
        """

        self._bytes_transferred = bytes_transferred

    @property
    def result(self):
        """Gets the result of this DescribeTaskExecutionResponse.


        :return: The result of this DescribeTaskExecutionResponse.
        :rtype: DescribeTaskExecutionResponseResult
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this DescribeTaskExecutionResponse.


        :param result: The result of this DescribeTaskExecutionResponse.
        :type result: DescribeTaskExecutionResponseResult
        """

        self._result = result

    @property
    def bytes_compressed(self):
        """Gets the bytes_compressed of this DescribeTaskExecutionResponse.


        :return: The bytes_compressed of this DescribeTaskExecutionResponse.
        :rtype: int
        """
        return self._bytes_compressed

    @bytes_compressed.setter
    def bytes_compressed(self, bytes_compressed):
        """Sets the bytes_compressed of this DescribeTaskExecutionResponse.


        :param bytes_compressed: The bytes_compressed of this DescribeTaskExecutionResponse.
        :type bytes_compressed: int
        """

        self._bytes_compressed = bytes_compressed
