# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.smb_mount_options import SmbMountOptions
from openapi_server import util


class UpdateLocationSmbRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location_arn: str=None, subdirectory: str=None, user: str=None, domain: str=None, password: str=None, agent_arns: List=None, mount_options: SmbMountOptions=None):
        """UpdateLocationSmbRequest - a model defined in OpenAPI

        :param location_arn: The location_arn of this UpdateLocationSmbRequest.
        :param subdirectory: The subdirectory of this UpdateLocationSmbRequest.
        :param user: The user of this UpdateLocationSmbRequest.
        :param domain: The domain of this UpdateLocationSmbRequest.
        :param password: The password of this UpdateLocationSmbRequest.
        :param agent_arns: The agent_arns of this UpdateLocationSmbRequest.
        :param mount_options: The mount_options of this UpdateLocationSmbRequest.
        """
        self.openapi_types = {
            'location_arn': str,
            'subdirectory': str,
            'user': str,
            'domain': str,
            'password': str,
            'agent_arns': List,
            'mount_options': SmbMountOptions
        }

        self.attribute_map = {
            'location_arn': 'LocationArn',
            'subdirectory': 'Subdirectory',
            'user': 'User',
            'domain': 'Domain',
            'password': 'Password',
            'agent_arns': 'AgentArns',
            'mount_options': 'MountOptions'
        }

        self._location_arn = location_arn
        self._subdirectory = subdirectory
        self._user = user
        self._domain = domain
        self._password = password
        self._agent_arns = agent_arns
        self._mount_options = mount_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateLocationSmbRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateLocationSmbRequest of this UpdateLocationSmbRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location_arn(self):
        """Gets the location_arn of this UpdateLocationSmbRequest.


        :return: The location_arn of this UpdateLocationSmbRequest.
        :rtype: str
        """
        return self._location_arn

    @location_arn.setter
    def location_arn(self, location_arn):
        """Sets the location_arn of this UpdateLocationSmbRequest.


        :param location_arn: The location_arn of this UpdateLocationSmbRequest.
        :type location_arn: str
        """
        if location_arn is None:
            raise ValueError("Invalid value for `location_arn`, must not be `None`")

        self._location_arn = location_arn

    @property
    def subdirectory(self):
        """Gets the subdirectory of this UpdateLocationSmbRequest.


        :return: The subdirectory of this UpdateLocationSmbRequest.
        :rtype: str
        """
        return self._subdirectory

    @subdirectory.setter
    def subdirectory(self, subdirectory):
        """Sets the subdirectory of this UpdateLocationSmbRequest.


        :param subdirectory: The subdirectory of this UpdateLocationSmbRequest.
        :type subdirectory: str
        """

        self._subdirectory = subdirectory

    @property
    def user(self):
        """Gets the user of this UpdateLocationSmbRequest.


        :return: The user of this UpdateLocationSmbRequest.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this UpdateLocationSmbRequest.


        :param user: The user of this UpdateLocationSmbRequest.
        :type user: str
        """

        self._user = user

    @property
    def domain(self):
        """Gets the domain of this UpdateLocationSmbRequest.


        :return: The domain of this UpdateLocationSmbRequest.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this UpdateLocationSmbRequest.


        :param domain: The domain of this UpdateLocationSmbRequest.
        :type domain: str
        """

        self._domain = domain

    @property
    def password(self):
        """Gets the password of this UpdateLocationSmbRequest.


        :return: The password of this UpdateLocationSmbRequest.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this UpdateLocationSmbRequest.


        :param password: The password of this UpdateLocationSmbRequest.
        :type password: str
        """

        self._password = password

    @property
    def agent_arns(self):
        """Gets the agent_arns of this UpdateLocationSmbRequest.


        :return: The agent_arns of this UpdateLocationSmbRequest.
        :rtype: List
        """
        return self._agent_arns

    @agent_arns.setter
    def agent_arns(self, agent_arns):
        """Sets the agent_arns of this UpdateLocationSmbRequest.


        :param agent_arns: The agent_arns of this UpdateLocationSmbRequest.
        :type agent_arns: List
        """

        self._agent_arns = agent_arns

    @property
    def mount_options(self):
        """Gets the mount_options of this UpdateLocationSmbRequest.


        :return: The mount_options of this UpdateLocationSmbRequest.
        :rtype: SmbMountOptions
        """
        return self._mount_options

    @mount_options.setter
    def mount_options(self, mount_options):
        """Sets the mount_options of this UpdateLocationSmbRequest.


        :param mount_options: The mount_options of this UpdateLocationSmbRequest.
        :type mount_options: SmbMountOptions
        """

        self._mount_options = mount_options
