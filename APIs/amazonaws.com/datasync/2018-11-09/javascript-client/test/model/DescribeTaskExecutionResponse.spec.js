/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsDataSync);
  }
}(this, function(expect, AwsDataSync) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsDataSync.DescribeTaskExecutionResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DescribeTaskExecutionResponse', function() {
    it('should create an instance of DescribeTaskExecutionResponse', function() {
      // uncomment below and update the code to test DescribeTaskExecutionResponse
      //var instance = new AwsDataSync.DescribeTaskExecutionResponse();
      //expect(instance).to.be.a(AwsDataSync.DescribeTaskExecutionResponse);
    });

    it('should have the property taskExecutionArn (base name: "TaskExecutionArn")', function() {
      // uncomment below and update the code to test the property taskExecutionArn
      //var instance = new AwsDataSync.DescribeTaskExecutionResponse();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AwsDataSync.DescribeTaskExecutionResponse();
      //expect(instance).to.be();
    });

    it('should have the property options (base name: "Options")', function() {
      // uncomment below and update the code to test the property options
      //var instance = new AwsDataSync.DescribeTaskExecutionResponse();
      //expect(instance).to.be();
    });

    it('should have the property excludes (base name: "Excludes")', function() {
      // uncomment below and update the code to test the property excludes
      //var instance = new AwsDataSync.DescribeTaskExecutionResponse();
      //expect(instance).to.be();
    });

    it('should have the property includes (base name: "Includes")', function() {
      // uncomment below and update the code to test the property includes
      //var instance = new AwsDataSync.DescribeTaskExecutionResponse();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "StartTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instance = new AwsDataSync.DescribeTaskExecutionResponse();
      //expect(instance).to.be();
    });

    it('should have the property estimatedFilesToTransfer (base name: "EstimatedFilesToTransfer")', function() {
      // uncomment below and update the code to test the property estimatedFilesToTransfer
      //var instance = new AwsDataSync.DescribeTaskExecutionResponse();
      //expect(instance).to.be();
    });

    it('should have the property estimatedBytesToTransfer (base name: "EstimatedBytesToTransfer")', function() {
      // uncomment below and update the code to test the property estimatedBytesToTransfer
      //var instance = new AwsDataSync.DescribeTaskExecutionResponse();
      //expect(instance).to.be();
    });

    it('should have the property filesTransferred (base name: "FilesTransferred")', function() {
      // uncomment below and update the code to test the property filesTransferred
      //var instance = new AwsDataSync.DescribeTaskExecutionResponse();
      //expect(instance).to.be();
    });

    it('should have the property bytesWritten (base name: "BytesWritten")', function() {
      // uncomment below and update the code to test the property bytesWritten
      //var instance = new AwsDataSync.DescribeTaskExecutionResponse();
      //expect(instance).to.be();
    });

    it('should have the property bytesTransferred (base name: "BytesTransferred")', function() {
      // uncomment below and update the code to test the property bytesTransferred
      //var instance = new AwsDataSync.DescribeTaskExecutionResponse();
      //expect(instance).to.be();
    });

    it('should have the property result (base name: "Result")', function() {
      // uncomment below and update the code to test the property result
      //var instance = new AwsDataSync.DescribeTaskExecutionResponse();
      //expect(instance).to.be();
    });

    it('should have the property bytesCompressed (base name: "BytesCompressed")', function() {
      // uncomment below and update the code to test the property bytesCompressed
      //var instance = new AwsDataSync.DescribeTaskExecutionResponse();
      //expect(instance).to.be();
    });

  });

}));
