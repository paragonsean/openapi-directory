/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsDataSync);
  }
}(this, function(expect, AwsDataSync) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsDataSync.CreateLocationHdfsRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateLocationHdfsRequest', function() {
    it('should create an instance of CreateLocationHdfsRequest', function() {
      // uncomment below and update the code to test CreateLocationHdfsRequest
      //var instance = new AwsDataSync.CreateLocationHdfsRequest();
      //expect(instance).to.be.a(AwsDataSync.CreateLocationHdfsRequest);
    });

    it('should have the property subdirectory (base name: "Subdirectory")', function() {
      // uncomment below and update the code to test the property subdirectory
      //var instance = new AwsDataSync.CreateLocationHdfsRequest();
      //expect(instance).to.be();
    });

    it('should have the property nameNodes (base name: "NameNodes")', function() {
      // uncomment below and update the code to test the property nameNodes
      //var instance = new AwsDataSync.CreateLocationHdfsRequest();
      //expect(instance).to.be();
    });

    it('should have the property blockSize (base name: "BlockSize")', function() {
      // uncomment below and update the code to test the property blockSize
      //var instance = new AwsDataSync.CreateLocationHdfsRequest();
      //expect(instance).to.be();
    });

    it('should have the property replicationFactor (base name: "ReplicationFactor")', function() {
      // uncomment below and update the code to test the property replicationFactor
      //var instance = new AwsDataSync.CreateLocationHdfsRequest();
      //expect(instance).to.be();
    });

    it('should have the property kmsKeyProviderUri (base name: "KmsKeyProviderUri")', function() {
      // uncomment below and update the code to test the property kmsKeyProviderUri
      //var instance = new AwsDataSync.CreateLocationHdfsRequest();
      //expect(instance).to.be();
    });

    it('should have the property qopConfiguration (base name: "QopConfiguration")', function() {
      // uncomment below and update the code to test the property qopConfiguration
      //var instance = new AwsDataSync.CreateLocationHdfsRequest();
      //expect(instance).to.be();
    });

    it('should have the property authenticationType (base name: "AuthenticationType")', function() {
      // uncomment below and update the code to test the property authenticationType
      //var instance = new AwsDataSync.CreateLocationHdfsRequest();
      //expect(instance).to.be();
    });

    it('should have the property simpleUser (base name: "SimpleUser")', function() {
      // uncomment below and update the code to test the property simpleUser
      //var instance = new AwsDataSync.CreateLocationHdfsRequest();
      //expect(instance).to.be();
    });

    it('should have the property kerberosPrincipal (base name: "KerberosPrincipal")', function() {
      // uncomment below and update the code to test the property kerberosPrincipal
      //var instance = new AwsDataSync.CreateLocationHdfsRequest();
      //expect(instance).to.be();
    });

    it('should have the property kerberosKeytab (base name: "KerberosKeytab")', function() {
      // uncomment below and update the code to test the property kerberosKeytab
      //var instance = new AwsDataSync.CreateLocationHdfsRequest();
      //expect(instance).to.be();
    });

    it('should have the property kerberosKrb5Conf (base name: "KerberosKrb5Conf")', function() {
      // uncomment below and update the code to test the property kerberosKrb5Conf
      //var instance = new AwsDataSync.CreateLocationHdfsRequest();
      //expect(instance).to.be();
    });

    it('should have the property agentArns (base name: "AgentArns")', function() {
      // uncomment below and update the code to test the property agentArns
      //var instance = new AwsDataSync.CreateLocationHdfsRequest();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AwsDataSync.CreateLocationHdfsRequest();
      //expect(instance).to.be();
    });

  });

}));
