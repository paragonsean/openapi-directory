/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsDataSync);
  }
}(this, function(expect, AwsDataSync) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsDataSync.UpdateLocationObjectStorageRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UpdateLocationObjectStorageRequest', function() {
    it('should create an instance of UpdateLocationObjectStorageRequest', function() {
      // uncomment below and update the code to test UpdateLocationObjectStorageRequest
      //var instance = new AwsDataSync.UpdateLocationObjectStorageRequest();
      //expect(instance).to.be.a(AwsDataSync.UpdateLocationObjectStorageRequest);
    });

    it('should have the property locationArn (base name: "LocationArn")', function() {
      // uncomment below and update the code to test the property locationArn
      //var instance = new AwsDataSync.UpdateLocationObjectStorageRequest();
      //expect(instance).to.be();
    });

    it('should have the property serverPort (base name: "ServerPort")', function() {
      // uncomment below and update the code to test the property serverPort
      //var instance = new AwsDataSync.UpdateLocationObjectStorageRequest();
      //expect(instance).to.be();
    });

    it('should have the property serverProtocol (base name: "ServerProtocol")', function() {
      // uncomment below and update the code to test the property serverProtocol
      //var instance = new AwsDataSync.UpdateLocationObjectStorageRequest();
      //expect(instance).to.be();
    });

    it('should have the property subdirectory (base name: "Subdirectory")', function() {
      // uncomment below and update the code to test the property subdirectory
      //var instance = new AwsDataSync.UpdateLocationObjectStorageRequest();
      //expect(instance).to.be();
    });

    it('should have the property accessKey (base name: "AccessKey")', function() {
      // uncomment below and update the code to test the property accessKey
      //var instance = new AwsDataSync.UpdateLocationObjectStorageRequest();
      //expect(instance).to.be();
    });

    it('should have the property secretKey (base name: "SecretKey")', function() {
      // uncomment below and update the code to test the property secretKey
      //var instance = new AwsDataSync.UpdateLocationObjectStorageRequest();
      //expect(instance).to.be();
    });

    it('should have the property agentArns (base name: "AgentArns")', function() {
      // uncomment below and update the code to test the property agentArns
      //var instance = new AwsDataSync.UpdateLocationObjectStorageRequest();
      //expect(instance).to.be();
    });

    it('should have the property serverCertificate (base name: "ServerCertificate")', function() {
      // uncomment below and update the code to test the property serverCertificate
      //var instance = new AwsDataSync.UpdateLocationObjectStorageRequest();
      //expect(instance).to.be();
    });

  });

}));
