/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsDataSync);
  }
}(this, function(expect, AwsDataSync) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsDataSync.NetAppONTAPCluster();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NetAppONTAPCluster', function() {
    it('should create an instance of NetAppONTAPCluster', function() {
      // uncomment below and update the code to test NetAppONTAPCluster
      //var instance = new AwsDataSync.NetAppONTAPCluster();
      //expect(instance).to.be.a(AwsDataSync.NetAppONTAPCluster);
    });

    it('should have the property cifsShareCount (base name: "CifsShareCount")', function() {
      // uncomment below and update the code to test the property cifsShareCount
      //var instance = new AwsDataSync.NetAppONTAPCluster();
      //expect(instance).to.be();
    });

    it('should have the property nfsExportedVolumes (base name: "NfsExportedVolumes")', function() {
      // uncomment below and update the code to test the property nfsExportedVolumes
      //var instance = new AwsDataSync.NetAppONTAPCluster();
      //expect(instance).to.be();
    });

    it('should have the property resourceId (base name: "ResourceId")', function() {
      // uncomment below and update the code to test the property resourceId
      //var instance = new AwsDataSync.NetAppONTAPCluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterName (base name: "ClusterName")', function() {
      // uncomment below and update the code to test the property clusterName
      //var instance = new AwsDataSync.NetAppONTAPCluster();
      //expect(instance).to.be();
    });

    it('should have the property maxP95Performance (base name: "MaxP95Performance")', function() {
      // uncomment below and update the code to test the property maxP95Performance
      //var instance = new AwsDataSync.NetAppONTAPCluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterBlockStorageSize (base name: "ClusterBlockStorageSize")', function() {
      // uncomment below and update the code to test the property clusterBlockStorageSize
      //var instance = new AwsDataSync.NetAppONTAPCluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterBlockStorageUsed (base name: "ClusterBlockStorageUsed")', function() {
      // uncomment below and update the code to test the property clusterBlockStorageUsed
      //var instance = new AwsDataSync.NetAppONTAPCluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterBlockStorageLogicalUsed (base name: "ClusterBlockStorageLogicalUsed")', function() {
      // uncomment below and update the code to test the property clusterBlockStorageLogicalUsed
      //var instance = new AwsDataSync.NetAppONTAPCluster();
      //expect(instance).to.be();
    });

    it('should have the property recommendations (base name: "Recommendations")', function() {
      // uncomment below and update the code to test the property recommendations
      //var instance = new AwsDataSync.NetAppONTAPCluster();
      //expect(instance).to.be();
    });

    it('should have the property recommendationStatus (base name: "RecommendationStatus")', function() {
      // uncomment below and update the code to test the property recommendationStatus
      //var instance = new AwsDataSync.NetAppONTAPCluster();
      //expect(instance).to.be();
    });

    it('should have the property lunCount (base name: "LunCount")', function() {
      // uncomment below and update the code to test the property lunCount
      //var instance = new AwsDataSync.NetAppONTAPCluster();
      //expect(instance).to.be();
    });

    it('should have the property clusterCloudStorageUsed (base name: "ClusterCloudStorageUsed")', function() {
      // uncomment below and update the code to test the property clusterCloudStorageUsed
      //var instance = new AwsDataSync.NetAppONTAPCluster();
      //expect(instance).to.be();
    });

  });

}));
