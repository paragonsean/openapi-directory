/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsDataSync);
  }
}(this, function(expect, AwsDataSync) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsDataSync.DescribeLocationEfsResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DescribeLocationEfsResponse', function() {
    it('should create an instance of DescribeLocationEfsResponse', function() {
      // uncomment below and update the code to test DescribeLocationEfsResponse
      //var instance = new AwsDataSync.DescribeLocationEfsResponse();
      //expect(instance).to.be.a(AwsDataSync.DescribeLocationEfsResponse);
    });

    it('should have the property locationArn (base name: "LocationArn")', function() {
      // uncomment below and update the code to test the property locationArn
      //var instance = new AwsDataSync.DescribeLocationEfsResponse();
      //expect(instance).to.be();
    });

    it('should have the property locationUri (base name: "LocationUri")', function() {
      // uncomment below and update the code to test the property locationUri
      //var instance = new AwsDataSync.DescribeLocationEfsResponse();
      //expect(instance).to.be();
    });

    it('should have the property ec2Config (base name: "Ec2Config")', function() {
      // uncomment below and update the code to test the property ec2Config
      //var instance = new AwsDataSync.DescribeLocationEfsResponse();
      //expect(instance).to.be();
    });

    it('should have the property creationTime (base name: "CreationTime")', function() {
      // uncomment below and update the code to test the property creationTime
      //var instance = new AwsDataSync.DescribeLocationEfsResponse();
      //expect(instance).to.be();
    });

    it('should have the property accessPointArn (base name: "AccessPointArn")', function() {
      // uncomment below and update the code to test the property accessPointArn
      //var instance = new AwsDataSync.DescribeLocationEfsResponse();
      //expect(instance).to.be();
    });

    it('should have the property fileSystemAccessRoleArn (base name: "FileSystemAccessRoleArn")', function() {
      // uncomment below and update the code to test the property fileSystemAccessRoleArn
      //var instance = new AwsDataSync.DescribeLocationEfsResponse();
      //expect(instance).to.be();
    });

    it('should have the property inTransitEncryption (base name: "InTransitEncryption")', function() {
      // uncomment below and update the code to test the property inTransitEncryption
      //var instance = new AwsDataSync.DescribeLocationEfsResponse();
      //expect(instance).to.be();
    });

  });

}));
