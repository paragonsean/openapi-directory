/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsDataSync);
  }
}(this, function(expect, AwsDataSync) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsDataSync.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('addStorageSystem', function() {
      it('should call addStorageSystem successfully', function(done) {
        //uncomment below and update the code to test addStorageSystem
        //instance.addStorageSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelTaskExecution', function() {
      it('should call cancelTaskExecution successfully', function(done) {
        //uncomment below and update the code to test cancelTaskExecution
        //instance.cancelTaskExecution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAgent', function() {
      it('should call createAgent successfully', function(done) {
        //uncomment below and update the code to test createAgent
        //instance.createAgent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLocationAzureBlob', function() {
      it('should call createLocationAzureBlob successfully', function(done) {
        //uncomment below and update the code to test createLocationAzureBlob
        //instance.createLocationAzureBlob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLocationEfs', function() {
      it('should call createLocationEfs successfully', function(done) {
        //uncomment below and update the code to test createLocationEfs
        //instance.createLocationEfs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLocationFsxLustre', function() {
      it('should call createLocationFsxLustre successfully', function(done) {
        //uncomment below and update the code to test createLocationFsxLustre
        //instance.createLocationFsxLustre(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLocationFsxOntap', function() {
      it('should call createLocationFsxOntap successfully', function(done) {
        //uncomment below and update the code to test createLocationFsxOntap
        //instance.createLocationFsxOntap(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLocationFsxOpenZfs', function() {
      it('should call createLocationFsxOpenZfs successfully', function(done) {
        //uncomment below and update the code to test createLocationFsxOpenZfs
        //instance.createLocationFsxOpenZfs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLocationFsxWindows', function() {
      it('should call createLocationFsxWindows successfully', function(done) {
        //uncomment below and update the code to test createLocationFsxWindows
        //instance.createLocationFsxWindows(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLocationHdfs', function() {
      it('should call createLocationHdfs successfully', function(done) {
        //uncomment below and update the code to test createLocationHdfs
        //instance.createLocationHdfs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLocationNfs', function() {
      it('should call createLocationNfs successfully', function(done) {
        //uncomment below and update the code to test createLocationNfs
        //instance.createLocationNfs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLocationObjectStorage', function() {
      it('should call createLocationObjectStorage successfully', function(done) {
        //uncomment below and update the code to test createLocationObjectStorage
        //instance.createLocationObjectStorage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLocationS3', function() {
      it('should call createLocationS3 successfully', function(done) {
        //uncomment below and update the code to test createLocationS3
        //instance.createLocationS3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLocationSmb', function() {
      it('should call createLocationSmb successfully', function(done) {
        //uncomment below and update the code to test createLocationSmb
        //instance.createLocationSmb(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTask', function() {
      it('should call createTask successfully', function(done) {
        //uncomment below and update the code to test createTask
        //instance.createTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAgent', function() {
      it('should call deleteAgent successfully', function(done) {
        //uncomment below and update the code to test deleteAgent
        //instance.deleteAgent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLocation', function() {
      it('should call deleteLocation successfully', function(done) {
        //uncomment below and update the code to test deleteLocation
        //instance.deleteLocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTask', function() {
      it('should call deleteTask successfully', function(done) {
        //uncomment below and update the code to test deleteTask
        //instance.deleteTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAgent', function() {
      it('should call describeAgent successfully', function(done) {
        //uncomment below and update the code to test describeAgent
        //instance.describeAgent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeDiscoveryJob', function() {
      it('should call describeDiscoveryJob successfully', function(done) {
        //uncomment below and update the code to test describeDiscoveryJob
        //instance.describeDiscoveryJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLocationAzureBlob', function() {
      it('should call describeLocationAzureBlob successfully', function(done) {
        //uncomment below and update the code to test describeLocationAzureBlob
        //instance.describeLocationAzureBlob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLocationEfs', function() {
      it('should call describeLocationEfs successfully', function(done) {
        //uncomment below and update the code to test describeLocationEfs
        //instance.describeLocationEfs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLocationFsxLustre', function() {
      it('should call describeLocationFsxLustre successfully', function(done) {
        //uncomment below and update the code to test describeLocationFsxLustre
        //instance.describeLocationFsxLustre(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLocationFsxOntap', function() {
      it('should call describeLocationFsxOntap successfully', function(done) {
        //uncomment below and update the code to test describeLocationFsxOntap
        //instance.describeLocationFsxOntap(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLocationFsxOpenZfs', function() {
      it('should call describeLocationFsxOpenZfs successfully', function(done) {
        //uncomment below and update the code to test describeLocationFsxOpenZfs
        //instance.describeLocationFsxOpenZfs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLocationFsxWindows', function() {
      it('should call describeLocationFsxWindows successfully', function(done) {
        //uncomment below and update the code to test describeLocationFsxWindows
        //instance.describeLocationFsxWindows(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLocationHdfs', function() {
      it('should call describeLocationHdfs successfully', function(done) {
        //uncomment below and update the code to test describeLocationHdfs
        //instance.describeLocationHdfs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLocationNfs', function() {
      it('should call describeLocationNfs successfully', function(done) {
        //uncomment below and update the code to test describeLocationNfs
        //instance.describeLocationNfs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLocationObjectStorage', function() {
      it('should call describeLocationObjectStorage successfully', function(done) {
        //uncomment below and update the code to test describeLocationObjectStorage
        //instance.describeLocationObjectStorage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLocationS3', function() {
      it('should call describeLocationS3 successfully', function(done) {
        //uncomment below and update the code to test describeLocationS3
        //instance.describeLocationS3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLocationSmb', function() {
      it('should call describeLocationSmb successfully', function(done) {
        //uncomment below and update the code to test describeLocationSmb
        //instance.describeLocationSmb(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeStorageSystem', function() {
      it('should call describeStorageSystem successfully', function(done) {
        //uncomment below and update the code to test describeStorageSystem
        //instance.describeStorageSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeStorageSystemResourceMetrics', function() {
      it('should call describeStorageSystemResourceMetrics successfully', function(done) {
        //uncomment below and update the code to test describeStorageSystemResourceMetrics
        //instance.describeStorageSystemResourceMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeStorageSystemResources', function() {
      it('should call describeStorageSystemResources successfully', function(done) {
        //uncomment below and update the code to test describeStorageSystemResources
        //instance.describeStorageSystemResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeTask', function() {
      it('should call describeTask successfully', function(done) {
        //uncomment below and update the code to test describeTask
        //instance.describeTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeTaskExecution', function() {
      it('should call describeTaskExecution successfully', function(done) {
        //uncomment below and update the code to test describeTaskExecution
        //instance.describeTaskExecution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('generateRecommendations', function() {
      it('should call generateRecommendations successfully', function(done) {
        //uncomment below and update the code to test generateRecommendations
        //instance.generateRecommendations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAgents', function() {
      it('should call listAgents successfully', function(done) {
        //uncomment below and update the code to test listAgents
        //instance.listAgents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDiscoveryJobs', function() {
      it('should call listDiscoveryJobs successfully', function(done) {
        //uncomment below and update the code to test listDiscoveryJobs
        //instance.listDiscoveryJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLocations', function() {
      it('should call listLocations successfully', function(done) {
        //uncomment below and update the code to test listLocations
        //instance.listLocations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listStorageSystems', function() {
      it('should call listStorageSystems successfully', function(done) {
        //uncomment below and update the code to test listStorageSystems
        //instance.listStorageSystems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTaskExecutions', function() {
      it('should call listTaskExecutions successfully', function(done) {
        //uncomment below and update the code to test listTaskExecutions
        //instance.listTaskExecutions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTasks', function() {
      it('should call listTasks successfully', function(done) {
        //uncomment below and update the code to test listTasks
        //instance.listTasks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeStorageSystem', function() {
      it('should call removeStorageSystem successfully', function(done) {
        //uncomment below and update the code to test removeStorageSystem
        //instance.removeStorageSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startDiscoveryJob', function() {
      it('should call startDiscoveryJob successfully', function(done) {
        //uncomment below and update the code to test startDiscoveryJob
        //instance.startDiscoveryJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startTaskExecution', function() {
      it('should call startTaskExecution successfully', function(done) {
        //uncomment below and update the code to test startTaskExecution
        //instance.startTaskExecution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopDiscoveryJob', function() {
      it('should call stopDiscoveryJob successfully', function(done) {
        //uncomment below and update the code to test stopDiscoveryJob
        //instance.stopDiscoveryJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAgent', function() {
      it('should call updateAgent successfully', function(done) {
        //uncomment below and update the code to test updateAgent
        //instance.updateAgent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDiscoveryJob', function() {
      it('should call updateDiscoveryJob successfully', function(done) {
        //uncomment below and update the code to test updateDiscoveryJob
        //instance.updateDiscoveryJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLocationAzureBlob', function() {
      it('should call updateLocationAzureBlob successfully', function(done) {
        //uncomment below and update the code to test updateLocationAzureBlob
        //instance.updateLocationAzureBlob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLocationHdfs', function() {
      it('should call updateLocationHdfs successfully', function(done) {
        //uncomment below and update the code to test updateLocationHdfs
        //instance.updateLocationHdfs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLocationNfs', function() {
      it('should call updateLocationNfs successfully', function(done) {
        //uncomment below and update the code to test updateLocationNfs
        //instance.updateLocationNfs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLocationObjectStorage', function() {
      it('should call updateLocationObjectStorage successfully', function(done) {
        //uncomment below and update the code to test updateLocationObjectStorage
        //instance.updateLocationObjectStorage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLocationSmb', function() {
      it('should call updateLocationSmb successfully', function(done) {
        //uncomment below and update the code to test updateLocationSmb
        //instance.updateLocationSmb(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateStorageSystem', function() {
      it('should call updateStorageSystem successfully', function(done) {
        //uncomment below and update the code to test updateStorageSystem
        //instance.updateStorageSystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTask', function() {
      it('should call updateTask successfully', function(done) {
        //uncomment below and update the code to test updateTask
        //instance.updateTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTaskExecution', function() {
      it('should call updateTaskExecution successfully', function(done) {
        //uncomment below and update the code to test updateTaskExecution
        //instance.updateTaskExecution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
