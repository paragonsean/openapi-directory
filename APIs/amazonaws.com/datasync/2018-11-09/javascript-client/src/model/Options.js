/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Atime from './Atime';
import Gid from './Gid';
import LogLevel from './LogLevel';
import Mtime from './Mtime';
import ObjectTags from './ObjectTags';
import OverwriteMode from './OverwriteMode';
import PosixPermissions from './PosixPermissions';
import PreserveDeletedFiles from './PreserveDeletedFiles';
import PreserveDevices from './PreserveDevices';
import SmbSecurityDescriptorCopyFlags from './SmbSecurityDescriptorCopyFlags';
import TaskQueueing from './TaskQueueing';
import TransferMode from './TransferMode';
import Uid from './Uid';
import VerifyMode from './VerifyMode';

/**
 * The Options model module.
 * @module model/Options
 * @version 2018-11-09
 */
class Options {
    /**
     * Constructs a new <code>Options</code>.
     * &lt;p&gt;Configures your DataSync task settings. These options include how DataSync handles files, objects, and their associated metadata. You also can specify how DataSync verifies data integrity, set bandwidth limits for your task, among other options.&lt;/p&gt; &lt;p&gt;Each task setting has a default value. Unless you need to, you don&#39;t have to configure any of these &lt;code&gt;Options&lt;/code&gt; before starting your task.&lt;/p&gt;
     * @alias module:model/Options
     */
    constructor() { 
        
        Options.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Options</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Options} obj Optional instance to populate.
     * @return {module:model/Options} The populated <code>Options</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Options();

            if (data.hasOwnProperty('VerifyMode')) {
                obj['VerifyMode'] = ApiClient.convertToType(data['VerifyMode'], VerifyMode);
            }
            if (data.hasOwnProperty('OverwriteMode')) {
                obj['OverwriteMode'] = ApiClient.convertToType(data['OverwriteMode'], OverwriteMode);
            }
            if (data.hasOwnProperty('Atime')) {
                obj['Atime'] = ApiClient.convertToType(data['Atime'], Atime);
            }
            if (data.hasOwnProperty('Mtime')) {
                obj['Mtime'] = ApiClient.convertToType(data['Mtime'], Mtime);
            }
            if (data.hasOwnProperty('Uid')) {
                obj['Uid'] = ApiClient.convertToType(data['Uid'], Uid);
            }
            if (data.hasOwnProperty('Gid')) {
                obj['Gid'] = ApiClient.convertToType(data['Gid'], Gid);
            }
            if (data.hasOwnProperty('PreserveDeletedFiles')) {
                obj['PreserveDeletedFiles'] = ApiClient.convertToType(data['PreserveDeletedFiles'], PreserveDeletedFiles);
            }
            if (data.hasOwnProperty('PreserveDevices')) {
                obj['PreserveDevices'] = ApiClient.convertToType(data['PreserveDevices'], PreserveDevices);
            }
            if (data.hasOwnProperty('PosixPermissions')) {
                obj['PosixPermissions'] = ApiClient.convertToType(data['PosixPermissions'], PosixPermissions);
            }
            if (data.hasOwnProperty('BytesPerSecond')) {
                obj['BytesPerSecond'] = ApiClient.convertToType(data['BytesPerSecond'], 'Number');
            }
            if (data.hasOwnProperty('TaskQueueing')) {
                obj['TaskQueueing'] = ApiClient.convertToType(data['TaskQueueing'], TaskQueueing);
            }
            if (data.hasOwnProperty('LogLevel')) {
                obj['LogLevel'] = ApiClient.convertToType(data['LogLevel'], LogLevel);
            }
            if (data.hasOwnProperty('TransferMode')) {
                obj['TransferMode'] = ApiClient.convertToType(data['TransferMode'], TransferMode);
            }
            if (data.hasOwnProperty('SecurityDescriptorCopyFlags')) {
                obj['SecurityDescriptorCopyFlags'] = ApiClient.convertToType(data['SecurityDescriptorCopyFlags'], SmbSecurityDescriptorCopyFlags);
            }
            if (data.hasOwnProperty('ObjectTags')) {
                obj['ObjectTags'] = ApiClient.convertToType(data['ObjectTags'], ObjectTags);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Options</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Options</code>.
     */
    static validateJSON(data) {
        // validate the optional field `VerifyMode`
        if (data['VerifyMode']) { // data not null
          VerifyMode.validateJSON(data['VerifyMode']);
        }
        // validate the optional field `OverwriteMode`
        if (data['OverwriteMode']) { // data not null
          OverwriteMode.validateJSON(data['OverwriteMode']);
        }
        // validate the optional field `Atime`
        if (data['Atime']) { // data not null
          Atime.validateJSON(data['Atime']);
        }
        // validate the optional field `Mtime`
        if (data['Mtime']) { // data not null
          Mtime.validateJSON(data['Mtime']);
        }
        // validate the optional field `Uid`
        if (data['Uid']) { // data not null
          Uid.validateJSON(data['Uid']);
        }
        // validate the optional field `Gid`
        if (data['Gid']) { // data not null
          Gid.validateJSON(data['Gid']);
        }
        // validate the optional field `PreserveDeletedFiles`
        if (data['PreserveDeletedFiles']) { // data not null
          PreserveDeletedFiles.validateJSON(data['PreserveDeletedFiles']);
        }
        // validate the optional field `PreserveDevices`
        if (data['PreserveDevices']) { // data not null
          PreserveDevices.validateJSON(data['PreserveDevices']);
        }
        // validate the optional field `PosixPermissions`
        if (data['PosixPermissions']) { // data not null
          PosixPermissions.validateJSON(data['PosixPermissions']);
        }
        // validate the optional field `BytesPerSecond`
        if (data['BytesPerSecond']) { // data not null
          Number.validateJSON(data['BytesPerSecond']);
        }
        // validate the optional field `TaskQueueing`
        if (data['TaskQueueing']) { // data not null
          TaskQueueing.validateJSON(data['TaskQueueing']);
        }
        // validate the optional field `LogLevel`
        if (data['LogLevel']) { // data not null
          LogLevel.validateJSON(data['LogLevel']);
        }
        // validate the optional field `TransferMode`
        if (data['TransferMode']) { // data not null
          TransferMode.validateJSON(data['TransferMode']);
        }
        // validate the optional field `SecurityDescriptorCopyFlags`
        if (data['SecurityDescriptorCopyFlags']) { // data not null
          SmbSecurityDescriptorCopyFlags.validateJSON(data['SecurityDescriptorCopyFlags']);
        }
        // validate the optional field `ObjectTags`
        if (data['ObjectTags']) { // data not null
          ObjectTags.validateJSON(data['ObjectTags']);
        }

        return true;
    }


}



/**
 * @member {module:model/VerifyMode} VerifyMode
 */
Options.prototype['VerifyMode'] = undefined;

/**
 * @member {module:model/OverwriteMode} OverwriteMode
 */
Options.prototype['OverwriteMode'] = undefined;

/**
 * @member {module:model/Atime} Atime
 */
Options.prototype['Atime'] = undefined;

/**
 * @member {module:model/Mtime} Mtime
 */
Options.prototype['Mtime'] = undefined;

/**
 * @member {module:model/Uid} Uid
 */
Options.prototype['Uid'] = undefined;

/**
 * @member {module:model/Gid} Gid
 */
Options.prototype['Gid'] = undefined;

/**
 * @member {module:model/PreserveDeletedFiles} PreserveDeletedFiles
 */
Options.prototype['PreserveDeletedFiles'] = undefined;

/**
 * @member {module:model/PreserveDevices} PreserveDevices
 */
Options.prototype['PreserveDevices'] = undefined;

/**
 * @member {module:model/PosixPermissions} PosixPermissions
 */
Options.prototype['PosixPermissions'] = undefined;

/**
 * @member {Number} BytesPerSecond
 */
Options.prototype['BytesPerSecond'] = undefined;

/**
 * @member {module:model/TaskQueueing} TaskQueueing
 */
Options.prototype['TaskQueueing'] = undefined;

/**
 * @member {module:model/LogLevel} LogLevel
 */
Options.prototype['LogLevel'] = undefined;

/**
 * @member {module:model/TransferMode} TransferMode
 */
Options.prototype['TransferMode'] = undefined;

/**
 * @member {module:model/SmbSecurityDescriptorCopyFlags} SecurityDescriptorCopyFlags
 */
Options.prototype['SecurityDescriptorCopyFlags'] = undefined;

/**
 * @member {module:model/ObjectTags} ObjectTags
 */
Options.prototype['ObjectTags'] = undefined;






export default Options;

