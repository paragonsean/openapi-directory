/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.TaskExecutionStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a single entry in a list of task executions. &lt;code&gt;TaskExecutionListEntry&lt;/code&gt; returns an array that contains a list of specific invocations of a task when the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/datasync/latest/userguide/API_ListTaskExecutions.html\&quot;&gt;ListTaskExecutions&lt;/a&gt; operation is called.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TaskExecutionListEntry {
  public static final String SERIALIZED_NAME_TASK_EXECUTION_ARN = "TaskExecutionArn";
  @SerializedName(SERIALIZED_NAME_TASK_EXECUTION_ARN)
  private String taskExecutionArn;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private TaskExecutionStatus status;

  public TaskExecutionListEntry() {
  }

  public TaskExecutionListEntry taskExecutionArn(String taskExecutionArn) {
    this.taskExecutionArn = taskExecutionArn;
    return this;
  }

  /**
   * Get taskExecutionArn
   * @return taskExecutionArn
   */
  @javax.annotation.Nullable
  public String getTaskExecutionArn() {
    return taskExecutionArn;
  }

  public void setTaskExecutionArn(String taskExecutionArn) {
    this.taskExecutionArn = taskExecutionArn;
  }


  public TaskExecutionListEntry status(TaskExecutionStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public TaskExecutionStatus getStatus() {
    return status;
  }

  public void setStatus(TaskExecutionStatus status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskExecutionListEntry taskExecutionListEntry = (TaskExecutionListEntry) o;
    return Objects.equals(this.taskExecutionArn, taskExecutionListEntry.taskExecutionArn) &&
        Objects.equals(this.status, taskExecutionListEntry.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taskExecutionArn, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskExecutionListEntry {\n");
    sb.append("    taskExecutionArn: ").append(toIndentedString(taskExecutionArn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TaskExecutionArn");
    openapiFields.add("Status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TaskExecutionListEntry
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TaskExecutionListEntry.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaskExecutionListEntry is not found in the empty JSON string", TaskExecutionListEntry.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TaskExecutionListEntry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TaskExecutionListEntry` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `TaskExecutionArn`
      if (jsonObj.get("TaskExecutionArn") != null && !jsonObj.get("TaskExecutionArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TaskExecutionArn"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        TaskExecutionStatus.validateJsonElement(jsonObj.get("Status"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaskExecutionListEntry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaskExecutionListEntry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaskExecutionListEntry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaskExecutionListEntry.class));

       return (TypeAdapter<T>) new TypeAdapter<TaskExecutionListEntry>() {
           @Override
           public void write(JsonWriter out, TaskExecutionListEntry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TaskExecutionListEntry read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TaskExecutionListEntry given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TaskExecutionListEntry
   * @throws IOException if the JSON string is invalid with respect to TaskExecutionListEntry
   */
  public static TaskExecutionListEntry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaskExecutionListEntry.class);
  }

  /**
   * Convert an instance of TaskExecutionListEntry to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

