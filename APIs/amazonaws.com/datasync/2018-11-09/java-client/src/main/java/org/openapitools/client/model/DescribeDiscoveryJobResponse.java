/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DiscoveryJobStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeDiscoveryJobResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeDiscoveryJobResponse {
  public static final String SERIALIZED_NAME_STORAGE_SYSTEM_ARN = "StorageSystemArn";
  @SerializedName(SERIALIZED_NAME_STORAGE_SYSTEM_ARN)
  private String storageSystemArn;

  public static final String SERIALIZED_NAME_DISCOVERY_JOB_ARN = "DiscoveryJobArn";
  @SerializedName(SERIALIZED_NAME_DISCOVERY_JOB_ARN)
  private String discoveryJobArn;

  public static final String SERIALIZED_NAME_COLLECTION_DURATION_MINUTES = "CollectionDurationMinutes";
  @SerializedName(SERIALIZED_NAME_COLLECTION_DURATION_MINUTES)
  private Integer collectionDurationMinutes;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private DiscoveryJobStatus status;

  public static final String SERIALIZED_NAME_JOB_START_TIME = "JobStartTime";
  @SerializedName(SERIALIZED_NAME_JOB_START_TIME)
  private OffsetDateTime jobStartTime;

  public static final String SERIALIZED_NAME_JOB_END_TIME = "JobEndTime";
  @SerializedName(SERIALIZED_NAME_JOB_END_TIME)
  private OffsetDateTime jobEndTime;

  public DescribeDiscoveryJobResponse() {
  }

  public DescribeDiscoveryJobResponse storageSystemArn(String storageSystemArn) {
    this.storageSystemArn = storageSystemArn;
    return this;
  }

  /**
   * Get storageSystemArn
   * @return storageSystemArn
   */
  @javax.annotation.Nullable
  public String getStorageSystemArn() {
    return storageSystemArn;
  }

  public void setStorageSystemArn(String storageSystemArn) {
    this.storageSystemArn = storageSystemArn;
  }


  public DescribeDiscoveryJobResponse discoveryJobArn(String discoveryJobArn) {
    this.discoveryJobArn = discoveryJobArn;
    return this;
  }

  /**
   * Get discoveryJobArn
   * @return discoveryJobArn
   */
  @javax.annotation.Nullable
  public String getDiscoveryJobArn() {
    return discoveryJobArn;
  }

  public void setDiscoveryJobArn(String discoveryJobArn) {
    this.discoveryJobArn = discoveryJobArn;
  }


  public DescribeDiscoveryJobResponse collectionDurationMinutes(Integer collectionDurationMinutes) {
    this.collectionDurationMinutes = collectionDurationMinutes;
    return this;
  }

  /**
   * Get collectionDurationMinutes
   * @return collectionDurationMinutes
   */
  @javax.annotation.Nullable
  public Integer getCollectionDurationMinutes() {
    return collectionDurationMinutes;
  }

  public void setCollectionDurationMinutes(Integer collectionDurationMinutes) {
    this.collectionDurationMinutes = collectionDurationMinutes;
  }


  public DescribeDiscoveryJobResponse status(DiscoveryJobStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public DiscoveryJobStatus getStatus() {
    return status;
  }

  public void setStatus(DiscoveryJobStatus status) {
    this.status = status;
  }


  public DescribeDiscoveryJobResponse jobStartTime(OffsetDateTime jobStartTime) {
    this.jobStartTime = jobStartTime;
    return this;
  }

  /**
   * Get jobStartTime
   * @return jobStartTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getJobStartTime() {
    return jobStartTime;
  }

  public void setJobStartTime(OffsetDateTime jobStartTime) {
    this.jobStartTime = jobStartTime;
  }


  public DescribeDiscoveryJobResponse jobEndTime(OffsetDateTime jobEndTime) {
    this.jobEndTime = jobEndTime;
    return this;
  }

  /**
   * Get jobEndTime
   * @return jobEndTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getJobEndTime() {
    return jobEndTime;
  }

  public void setJobEndTime(OffsetDateTime jobEndTime) {
    this.jobEndTime = jobEndTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeDiscoveryJobResponse describeDiscoveryJobResponse = (DescribeDiscoveryJobResponse) o;
    return Objects.equals(this.storageSystemArn, describeDiscoveryJobResponse.storageSystemArn) &&
        Objects.equals(this.discoveryJobArn, describeDiscoveryJobResponse.discoveryJobArn) &&
        Objects.equals(this.collectionDurationMinutes, describeDiscoveryJobResponse.collectionDurationMinutes) &&
        Objects.equals(this.status, describeDiscoveryJobResponse.status) &&
        Objects.equals(this.jobStartTime, describeDiscoveryJobResponse.jobStartTime) &&
        Objects.equals(this.jobEndTime, describeDiscoveryJobResponse.jobEndTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storageSystemArn, discoveryJobArn, collectionDurationMinutes, status, jobStartTime, jobEndTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeDiscoveryJobResponse {\n");
    sb.append("    storageSystemArn: ").append(toIndentedString(storageSystemArn)).append("\n");
    sb.append("    discoveryJobArn: ").append(toIndentedString(discoveryJobArn)).append("\n");
    sb.append("    collectionDurationMinutes: ").append(toIndentedString(collectionDurationMinutes)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    jobStartTime: ").append(toIndentedString(jobStartTime)).append("\n");
    sb.append("    jobEndTime: ").append(toIndentedString(jobEndTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("StorageSystemArn");
    openapiFields.add("DiscoveryJobArn");
    openapiFields.add("CollectionDurationMinutes");
    openapiFields.add("Status");
    openapiFields.add("JobStartTime");
    openapiFields.add("JobEndTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeDiscoveryJobResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeDiscoveryJobResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeDiscoveryJobResponse is not found in the empty JSON string", DescribeDiscoveryJobResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeDiscoveryJobResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeDiscoveryJobResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `StorageSystemArn`
      if (jsonObj.get("StorageSystemArn") != null && !jsonObj.get("StorageSystemArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StorageSystemArn"));
      }
      // validate the optional field `DiscoveryJobArn`
      if (jsonObj.get("DiscoveryJobArn") != null && !jsonObj.get("DiscoveryJobArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DiscoveryJobArn"));
      }
      // validate the optional field `CollectionDurationMinutes`
      if (jsonObj.get("CollectionDurationMinutes") != null && !jsonObj.get("CollectionDurationMinutes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("CollectionDurationMinutes"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        DiscoveryJobStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `JobStartTime`
      if (jsonObj.get("JobStartTime") != null && !jsonObj.get("JobStartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("JobStartTime"));
      }
      // validate the optional field `JobEndTime`
      if (jsonObj.get("JobEndTime") != null && !jsonObj.get("JobEndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("JobEndTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeDiscoveryJobResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeDiscoveryJobResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeDiscoveryJobResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeDiscoveryJobResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeDiscoveryJobResponse>() {
           @Override
           public void write(JsonWriter out, DescribeDiscoveryJobResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeDiscoveryJobResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeDiscoveryJobResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeDiscoveryJobResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeDiscoveryJobResponse
   */
  public static DescribeDiscoveryJobResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeDiscoveryJobResponse.class);
  }

  /**
   * Convert an instance of DescribeDiscoveryJobResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

