/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DescribeLocationHdfsResponseQopConfiguration;
import org.openapitools.client.model.HdfsAuthenticationType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeLocationHdfsResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeLocationHdfsResponse {
  public static final String SERIALIZED_NAME_LOCATION_ARN = "LocationArn";
  @SerializedName(SERIALIZED_NAME_LOCATION_ARN)
  private String locationArn;

  public static final String SERIALIZED_NAME_LOCATION_URI = "LocationUri";
  @SerializedName(SERIALIZED_NAME_LOCATION_URI)
  private String locationUri;

  public static final String SERIALIZED_NAME_NAME_NODES = "NameNodes";
  @SerializedName(SERIALIZED_NAME_NAME_NODES)
  private List nameNodes;

  public static final String SERIALIZED_NAME_BLOCK_SIZE = "BlockSize";
  @SerializedName(SERIALIZED_NAME_BLOCK_SIZE)
  private Integer blockSize;

  public static final String SERIALIZED_NAME_REPLICATION_FACTOR = "ReplicationFactor";
  @SerializedName(SERIALIZED_NAME_REPLICATION_FACTOR)
  private Integer replicationFactor;

  public static final String SERIALIZED_NAME_KMS_KEY_PROVIDER_URI = "KmsKeyProviderUri";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_PROVIDER_URI)
  private String kmsKeyProviderUri;

  public static final String SERIALIZED_NAME_QOP_CONFIGURATION = "QopConfiguration";
  @SerializedName(SERIALIZED_NAME_QOP_CONFIGURATION)
  private DescribeLocationHdfsResponseQopConfiguration qopConfiguration;

  public static final String SERIALIZED_NAME_AUTHENTICATION_TYPE = "AuthenticationType";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_TYPE)
  private HdfsAuthenticationType authenticationType;

  public static final String SERIALIZED_NAME_SIMPLE_USER = "SimpleUser";
  @SerializedName(SERIALIZED_NAME_SIMPLE_USER)
  private String simpleUser;

  public static final String SERIALIZED_NAME_KERBEROS_PRINCIPAL = "KerberosPrincipal";
  @SerializedName(SERIALIZED_NAME_KERBEROS_PRINCIPAL)
  private String kerberosPrincipal;

  public static final String SERIALIZED_NAME_AGENT_ARNS = "AgentArns";
  @SerializedName(SERIALIZED_NAME_AGENT_ARNS)
  private List agentArns;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public DescribeLocationHdfsResponse() {
  }

  public DescribeLocationHdfsResponse locationArn(String locationArn) {
    this.locationArn = locationArn;
    return this;
  }

  /**
   * Get locationArn
   * @return locationArn
   */
  @javax.annotation.Nullable
  public String getLocationArn() {
    return locationArn;
  }

  public void setLocationArn(String locationArn) {
    this.locationArn = locationArn;
  }


  public DescribeLocationHdfsResponse locationUri(String locationUri) {
    this.locationUri = locationUri;
    return this;
  }

  /**
   * Get locationUri
   * @return locationUri
   */
  @javax.annotation.Nullable
  public String getLocationUri() {
    return locationUri;
  }

  public void setLocationUri(String locationUri) {
    this.locationUri = locationUri;
  }


  public DescribeLocationHdfsResponse nameNodes(List nameNodes) {
    this.nameNodes = nameNodes;
    return this;
  }

  /**
   * Get nameNodes
   * @return nameNodes
   */
  @javax.annotation.Nullable
  public List getNameNodes() {
    return nameNodes;
  }

  public void setNameNodes(List nameNodes) {
    this.nameNodes = nameNodes;
  }


  public DescribeLocationHdfsResponse blockSize(Integer blockSize) {
    this.blockSize = blockSize;
    return this;
  }

  /**
   * Get blockSize
   * @return blockSize
   */
  @javax.annotation.Nullable
  public Integer getBlockSize() {
    return blockSize;
  }

  public void setBlockSize(Integer blockSize) {
    this.blockSize = blockSize;
  }


  public DescribeLocationHdfsResponse replicationFactor(Integer replicationFactor) {
    this.replicationFactor = replicationFactor;
    return this;
  }

  /**
   * Get replicationFactor
   * @return replicationFactor
   */
  @javax.annotation.Nullable
  public Integer getReplicationFactor() {
    return replicationFactor;
  }

  public void setReplicationFactor(Integer replicationFactor) {
    this.replicationFactor = replicationFactor;
  }


  public DescribeLocationHdfsResponse kmsKeyProviderUri(String kmsKeyProviderUri) {
    this.kmsKeyProviderUri = kmsKeyProviderUri;
    return this;
  }

  /**
   * Get kmsKeyProviderUri
   * @return kmsKeyProviderUri
   */
  @javax.annotation.Nullable
  public String getKmsKeyProviderUri() {
    return kmsKeyProviderUri;
  }

  public void setKmsKeyProviderUri(String kmsKeyProviderUri) {
    this.kmsKeyProviderUri = kmsKeyProviderUri;
  }


  public DescribeLocationHdfsResponse qopConfiguration(DescribeLocationHdfsResponseQopConfiguration qopConfiguration) {
    this.qopConfiguration = qopConfiguration;
    return this;
  }

  /**
   * Get qopConfiguration
   * @return qopConfiguration
   */
  @javax.annotation.Nullable
  public DescribeLocationHdfsResponseQopConfiguration getQopConfiguration() {
    return qopConfiguration;
  }

  public void setQopConfiguration(DescribeLocationHdfsResponseQopConfiguration qopConfiguration) {
    this.qopConfiguration = qopConfiguration;
  }


  public DescribeLocationHdfsResponse authenticationType(HdfsAuthenticationType authenticationType) {
    this.authenticationType = authenticationType;
    return this;
  }

  /**
   * Get authenticationType
   * @return authenticationType
   */
  @javax.annotation.Nullable
  public HdfsAuthenticationType getAuthenticationType() {
    return authenticationType;
  }

  public void setAuthenticationType(HdfsAuthenticationType authenticationType) {
    this.authenticationType = authenticationType;
  }


  public DescribeLocationHdfsResponse simpleUser(String simpleUser) {
    this.simpleUser = simpleUser;
    return this;
  }

  /**
   * Get simpleUser
   * @return simpleUser
   */
  @javax.annotation.Nullable
  public String getSimpleUser() {
    return simpleUser;
  }

  public void setSimpleUser(String simpleUser) {
    this.simpleUser = simpleUser;
  }


  public DescribeLocationHdfsResponse kerberosPrincipal(String kerberosPrincipal) {
    this.kerberosPrincipal = kerberosPrincipal;
    return this;
  }

  /**
   * Get kerberosPrincipal
   * @return kerberosPrincipal
   */
  @javax.annotation.Nullable
  public String getKerberosPrincipal() {
    return kerberosPrincipal;
  }

  public void setKerberosPrincipal(String kerberosPrincipal) {
    this.kerberosPrincipal = kerberosPrincipal;
  }


  public DescribeLocationHdfsResponse agentArns(List agentArns) {
    this.agentArns = agentArns;
    return this;
  }

  /**
   * Get agentArns
   * @return agentArns
   */
  @javax.annotation.Nullable
  public List getAgentArns() {
    return agentArns;
  }

  public void setAgentArns(List agentArns) {
    this.agentArns = agentArns;
  }


  public DescribeLocationHdfsResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeLocationHdfsResponse describeLocationHdfsResponse = (DescribeLocationHdfsResponse) o;
    return Objects.equals(this.locationArn, describeLocationHdfsResponse.locationArn) &&
        Objects.equals(this.locationUri, describeLocationHdfsResponse.locationUri) &&
        Objects.equals(this.nameNodes, describeLocationHdfsResponse.nameNodes) &&
        Objects.equals(this.blockSize, describeLocationHdfsResponse.blockSize) &&
        Objects.equals(this.replicationFactor, describeLocationHdfsResponse.replicationFactor) &&
        Objects.equals(this.kmsKeyProviderUri, describeLocationHdfsResponse.kmsKeyProviderUri) &&
        Objects.equals(this.qopConfiguration, describeLocationHdfsResponse.qopConfiguration) &&
        Objects.equals(this.authenticationType, describeLocationHdfsResponse.authenticationType) &&
        Objects.equals(this.simpleUser, describeLocationHdfsResponse.simpleUser) &&
        Objects.equals(this.kerberosPrincipal, describeLocationHdfsResponse.kerberosPrincipal) &&
        Objects.equals(this.agentArns, describeLocationHdfsResponse.agentArns) &&
        Objects.equals(this.creationTime, describeLocationHdfsResponse.creationTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationArn, locationUri, nameNodes, blockSize, replicationFactor, kmsKeyProviderUri, qopConfiguration, authenticationType, simpleUser, kerberosPrincipal, agentArns, creationTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeLocationHdfsResponse {\n");
    sb.append("    locationArn: ").append(toIndentedString(locationArn)).append("\n");
    sb.append("    locationUri: ").append(toIndentedString(locationUri)).append("\n");
    sb.append("    nameNodes: ").append(toIndentedString(nameNodes)).append("\n");
    sb.append("    blockSize: ").append(toIndentedString(blockSize)).append("\n");
    sb.append("    replicationFactor: ").append(toIndentedString(replicationFactor)).append("\n");
    sb.append("    kmsKeyProviderUri: ").append(toIndentedString(kmsKeyProviderUri)).append("\n");
    sb.append("    qopConfiguration: ").append(toIndentedString(qopConfiguration)).append("\n");
    sb.append("    authenticationType: ").append(toIndentedString(authenticationType)).append("\n");
    sb.append("    simpleUser: ").append(toIndentedString(simpleUser)).append("\n");
    sb.append("    kerberosPrincipal: ").append(toIndentedString(kerberosPrincipal)).append("\n");
    sb.append("    agentArns: ").append(toIndentedString(agentArns)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("LocationArn");
    openapiFields.add("LocationUri");
    openapiFields.add("NameNodes");
    openapiFields.add("BlockSize");
    openapiFields.add("ReplicationFactor");
    openapiFields.add("KmsKeyProviderUri");
    openapiFields.add("QopConfiguration");
    openapiFields.add("AuthenticationType");
    openapiFields.add("SimpleUser");
    openapiFields.add("KerberosPrincipal");
    openapiFields.add("AgentArns");
    openapiFields.add("CreationTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeLocationHdfsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeLocationHdfsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeLocationHdfsResponse is not found in the empty JSON string", DescribeLocationHdfsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeLocationHdfsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeLocationHdfsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `LocationArn`
      if (jsonObj.get("LocationArn") != null && !jsonObj.get("LocationArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LocationArn"));
      }
      // validate the optional field `LocationUri`
      if (jsonObj.get("LocationUri") != null && !jsonObj.get("LocationUri").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LocationUri"));
      }
      // validate the optional field `NameNodes`
      if (jsonObj.get("NameNodes") != null && !jsonObj.get("NameNodes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("NameNodes"));
      }
      // validate the optional field `BlockSize`
      if (jsonObj.get("BlockSize") != null && !jsonObj.get("BlockSize").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("BlockSize"));
      }
      // validate the optional field `ReplicationFactor`
      if (jsonObj.get("ReplicationFactor") != null && !jsonObj.get("ReplicationFactor").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ReplicationFactor"));
      }
      // validate the optional field `KmsKeyProviderUri`
      if (jsonObj.get("KmsKeyProviderUri") != null && !jsonObj.get("KmsKeyProviderUri").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KmsKeyProviderUri"));
      }
      // validate the optional field `QopConfiguration`
      if (jsonObj.get("QopConfiguration") != null && !jsonObj.get("QopConfiguration").isJsonNull()) {
        DescribeLocationHdfsResponseQopConfiguration.validateJsonElement(jsonObj.get("QopConfiguration"));
      }
      // validate the optional field `AuthenticationType`
      if (jsonObj.get("AuthenticationType") != null && !jsonObj.get("AuthenticationType").isJsonNull()) {
        HdfsAuthenticationType.validateJsonElement(jsonObj.get("AuthenticationType"));
      }
      // validate the optional field `SimpleUser`
      if (jsonObj.get("SimpleUser") != null && !jsonObj.get("SimpleUser").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SimpleUser"));
      }
      // validate the optional field `KerberosPrincipal`
      if (jsonObj.get("KerberosPrincipal") != null && !jsonObj.get("KerberosPrincipal").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("KerberosPrincipal"));
      }
      // validate the optional field `AgentArns`
      if (jsonObj.get("AgentArns") != null && !jsonObj.get("AgentArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AgentArns"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeLocationHdfsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeLocationHdfsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeLocationHdfsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeLocationHdfsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeLocationHdfsResponse>() {
           @Override
           public void write(JsonWriter out, DescribeLocationHdfsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeLocationHdfsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeLocationHdfsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeLocationHdfsResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeLocationHdfsResponse
   */
  public static DescribeLocationHdfsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeLocationHdfsResponse.class);
  }

  /**
   * Convert an instance of DescribeLocationHdfsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

