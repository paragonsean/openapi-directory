/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NetAppONTAPSVMMaxP95Performance;
import org.openapitools.client.model.RecommendationStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The information that DataSync Discovery collects about a storage virtual machine (SVM) in your on-premises storage system.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NetAppONTAPSVM {
  public static final String SERIALIZED_NAME_CLUSTER_UUID = "ClusterUuid";
  @SerializedName(SERIALIZED_NAME_CLUSTER_UUID)
  private String clusterUuid;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "ResourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_SVM_NAME = "SvmName";
  @SerializedName(SERIALIZED_NAME_SVM_NAME)
  private String svmName;

  public static final String SERIALIZED_NAME_CIFS_SHARE_COUNT = "CifsShareCount";
  @SerializedName(SERIALIZED_NAME_CIFS_SHARE_COUNT)
  private Integer cifsShareCount;

  public static final String SERIALIZED_NAME_ENABLED_PROTOCOLS = "EnabledProtocols";
  @SerializedName(SERIALIZED_NAME_ENABLED_PROTOCOLS)
  private List enabledProtocols;

  public static final String SERIALIZED_NAME_TOTAL_CAPACITY_USED = "TotalCapacityUsed";
  @SerializedName(SERIALIZED_NAME_TOTAL_CAPACITY_USED)
  private Integer totalCapacityUsed;

  public static final String SERIALIZED_NAME_TOTAL_CAPACITY_PROVISIONED = "TotalCapacityProvisioned";
  @SerializedName(SERIALIZED_NAME_TOTAL_CAPACITY_PROVISIONED)
  private Integer totalCapacityProvisioned;

  public static final String SERIALIZED_NAME_TOTAL_LOGICAL_CAPACITY_USED = "TotalLogicalCapacityUsed";
  @SerializedName(SERIALIZED_NAME_TOTAL_LOGICAL_CAPACITY_USED)
  private Integer totalLogicalCapacityUsed;

  public static final String SERIALIZED_NAME_MAX_P95_PERFORMANCE = "MaxP95Performance";
  @SerializedName(SERIALIZED_NAME_MAX_P95_PERFORMANCE)
  private NetAppONTAPSVMMaxP95Performance maxP95Performance;

  public static final String SERIALIZED_NAME_RECOMMENDATIONS = "Recommendations";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATIONS)
  private List recommendations;

  public static final String SERIALIZED_NAME_NFS_EXPORTED_VOLUMES = "NfsExportedVolumes";
  @SerializedName(SERIALIZED_NAME_NFS_EXPORTED_VOLUMES)
  private Integer nfsExportedVolumes;

  public static final String SERIALIZED_NAME_RECOMMENDATION_STATUS = "RecommendationStatus";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATION_STATUS)
  private RecommendationStatus recommendationStatus;

  public static final String SERIALIZED_NAME_TOTAL_SNAPSHOT_CAPACITY_USED = "TotalSnapshotCapacityUsed";
  @SerializedName(SERIALIZED_NAME_TOTAL_SNAPSHOT_CAPACITY_USED)
  private Integer totalSnapshotCapacityUsed;

  public static final String SERIALIZED_NAME_LUN_COUNT = "LunCount";
  @SerializedName(SERIALIZED_NAME_LUN_COUNT)
  private Integer lunCount;

  public NetAppONTAPSVM() {
  }

  public NetAppONTAPSVM clusterUuid(String clusterUuid) {
    this.clusterUuid = clusterUuid;
    return this;
  }

  /**
   * Get clusterUuid
   * @return clusterUuid
   */
  @javax.annotation.Nullable
  public String getClusterUuid() {
    return clusterUuid;
  }

  public void setClusterUuid(String clusterUuid) {
    this.clusterUuid = clusterUuid;
  }


  public NetAppONTAPSVM resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nullable
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public NetAppONTAPSVM svmName(String svmName) {
    this.svmName = svmName;
    return this;
  }

  /**
   * Get svmName
   * @return svmName
   */
  @javax.annotation.Nullable
  public String getSvmName() {
    return svmName;
  }

  public void setSvmName(String svmName) {
    this.svmName = svmName;
  }


  public NetAppONTAPSVM cifsShareCount(Integer cifsShareCount) {
    this.cifsShareCount = cifsShareCount;
    return this;
  }

  /**
   * Get cifsShareCount
   * @return cifsShareCount
   */
  @javax.annotation.Nullable
  public Integer getCifsShareCount() {
    return cifsShareCount;
  }

  public void setCifsShareCount(Integer cifsShareCount) {
    this.cifsShareCount = cifsShareCount;
  }


  public NetAppONTAPSVM enabledProtocols(List enabledProtocols) {
    this.enabledProtocols = enabledProtocols;
    return this;
  }

  /**
   * Get enabledProtocols
   * @return enabledProtocols
   */
  @javax.annotation.Nullable
  public List getEnabledProtocols() {
    return enabledProtocols;
  }

  public void setEnabledProtocols(List enabledProtocols) {
    this.enabledProtocols = enabledProtocols;
  }


  public NetAppONTAPSVM totalCapacityUsed(Integer totalCapacityUsed) {
    this.totalCapacityUsed = totalCapacityUsed;
    return this;
  }

  /**
   * Get totalCapacityUsed
   * @return totalCapacityUsed
   */
  @javax.annotation.Nullable
  public Integer getTotalCapacityUsed() {
    return totalCapacityUsed;
  }

  public void setTotalCapacityUsed(Integer totalCapacityUsed) {
    this.totalCapacityUsed = totalCapacityUsed;
  }


  public NetAppONTAPSVM totalCapacityProvisioned(Integer totalCapacityProvisioned) {
    this.totalCapacityProvisioned = totalCapacityProvisioned;
    return this;
  }

  /**
   * Get totalCapacityProvisioned
   * @return totalCapacityProvisioned
   */
  @javax.annotation.Nullable
  public Integer getTotalCapacityProvisioned() {
    return totalCapacityProvisioned;
  }

  public void setTotalCapacityProvisioned(Integer totalCapacityProvisioned) {
    this.totalCapacityProvisioned = totalCapacityProvisioned;
  }


  public NetAppONTAPSVM totalLogicalCapacityUsed(Integer totalLogicalCapacityUsed) {
    this.totalLogicalCapacityUsed = totalLogicalCapacityUsed;
    return this;
  }

  /**
   * Get totalLogicalCapacityUsed
   * @return totalLogicalCapacityUsed
   */
  @javax.annotation.Nullable
  public Integer getTotalLogicalCapacityUsed() {
    return totalLogicalCapacityUsed;
  }

  public void setTotalLogicalCapacityUsed(Integer totalLogicalCapacityUsed) {
    this.totalLogicalCapacityUsed = totalLogicalCapacityUsed;
  }


  public NetAppONTAPSVM maxP95Performance(NetAppONTAPSVMMaxP95Performance maxP95Performance) {
    this.maxP95Performance = maxP95Performance;
    return this;
  }

  /**
   * Get maxP95Performance
   * @return maxP95Performance
   */
  @javax.annotation.Nullable
  public NetAppONTAPSVMMaxP95Performance getMaxP95Performance() {
    return maxP95Performance;
  }

  public void setMaxP95Performance(NetAppONTAPSVMMaxP95Performance maxP95Performance) {
    this.maxP95Performance = maxP95Performance;
  }


  public NetAppONTAPSVM recommendations(List recommendations) {
    this.recommendations = recommendations;
    return this;
  }

  /**
   * Get recommendations
   * @return recommendations
   */
  @javax.annotation.Nullable
  public List getRecommendations() {
    return recommendations;
  }

  public void setRecommendations(List recommendations) {
    this.recommendations = recommendations;
  }


  public NetAppONTAPSVM nfsExportedVolumes(Integer nfsExportedVolumes) {
    this.nfsExportedVolumes = nfsExportedVolumes;
    return this;
  }

  /**
   * Get nfsExportedVolumes
   * @return nfsExportedVolumes
   */
  @javax.annotation.Nullable
  public Integer getNfsExportedVolumes() {
    return nfsExportedVolumes;
  }

  public void setNfsExportedVolumes(Integer nfsExportedVolumes) {
    this.nfsExportedVolumes = nfsExportedVolumes;
  }


  public NetAppONTAPSVM recommendationStatus(RecommendationStatus recommendationStatus) {
    this.recommendationStatus = recommendationStatus;
    return this;
  }

  /**
   * Get recommendationStatus
   * @return recommendationStatus
   */
  @javax.annotation.Nullable
  public RecommendationStatus getRecommendationStatus() {
    return recommendationStatus;
  }

  public void setRecommendationStatus(RecommendationStatus recommendationStatus) {
    this.recommendationStatus = recommendationStatus;
  }


  public NetAppONTAPSVM totalSnapshotCapacityUsed(Integer totalSnapshotCapacityUsed) {
    this.totalSnapshotCapacityUsed = totalSnapshotCapacityUsed;
    return this;
  }

  /**
   * Get totalSnapshotCapacityUsed
   * @return totalSnapshotCapacityUsed
   */
  @javax.annotation.Nullable
  public Integer getTotalSnapshotCapacityUsed() {
    return totalSnapshotCapacityUsed;
  }

  public void setTotalSnapshotCapacityUsed(Integer totalSnapshotCapacityUsed) {
    this.totalSnapshotCapacityUsed = totalSnapshotCapacityUsed;
  }


  public NetAppONTAPSVM lunCount(Integer lunCount) {
    this.lunCount = lunCount;
    return this;
  }

  /**
   * Get lunCount
   * @return lunCount
   */
  @javax.annotation.Nullable
  public Integer getLunCount() {
    return lunCount;
  }

  public void setLunCount(Integer lunCount) {
    this.lunCount = lunCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetAppONTAPSVM netAppONTAPSVM = (NetAppONTAPSVM) o;
    return Objects.equals(this.clusterUuid, netAppONTAPSVM.clusterUuid) &&
        Objects.equals(this.resourceId, netAppONTAPSVM.resourceId) &&
        Objects.equals(this.svmName, netAppONTAPSVM.svmName) &&
        Objects.equals(this.cifsShareCount, netAppONTAPSVM.cifsShareCount) &&
        Objects.equals(this.enabledProtocols, netAppONTAPSVM.enabledProtocols) &&
        Objects.equals(this.totalCapacityUsed, netAppONTAPSVM.totalCapacityUsed) &&
        Objects.equals(this.totalCapacityProvisioned, netAppONTAPSVM.totalCapacityProvisioned) &&
        Objects.equals(this.totalLogicalCapacityUsed, netAppONTAPSVM.totalLogicalCapacityUsed) &&
        Objects.equals(this.maxP95Performance, netAppONTAPSVM.maxP95Performance) &&
        Objects.equals(this.recommendations, netAppONTAPSVM.recommendations) &&
        Objects.equals(this.nfsExportedVolumes, netAppONTAPSVM.nfsExportedVolumes) &&
        Objects.equals(this.recommendationStatus, netAppONTAPSVM.recommendationStatus) &&
        Objects.equals(this.totalSnapshotCapacityUsed, netAppONTAPSVM.totalSnapshotCapacityUsed) &&
        Objects.equals(this.lunCount, netAppONTAPSVM.lunCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterUuid, resourceId, svmName, cifsShareCount, enabledProtocols, totalCapacityUsed, totalCapacityProvisioned, totalLogicalCapacityUsed, maxP95Performance, recommendations, nfsExportedVolumes, recommendationStatus, totalSnapshotCapacityUsed, lunCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetAppONTAPSVM {\n");
    sb.append("    clusterUuid: ").append(toIndentedString(clusterUuid)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    svmName: ").append(toIndentedString(svmName)).append("\n");
    sb.append("    cifsShareCount: ").append(toIndentedString(cifsShareCount)).append("\n");
    sb.append("    enabledProtocols: ").append(toIndentedString(enabledProtocols)).append("\n");
    sb.append("    totalCapacityUsed: ").append(toIndentedString(totalCapacityUsed)).append("\n");
    sb.append("    totalCapacityProvisioned: ").append(toIndentedString(totalCapacityProvisioned)).append("\n");
    sb.append("    totalLogicalCapacityUsed: ").append(toIndentedString(totalLogicalCapacityUsed)).append("\n");
    sb.append("    maxP95Performance: ").append(toIndentedString(maxP95Performance)).append("\n");
    sb.append("    recommendations: ").append(toIndentedString(recommendations)).append("\n");
    sb.append("    nfsExportedVolumes: ").append(toIndentedString(nfsExportedVolumes)).append("\n");
    sb.append("    recommendationStatus: ").append(toIndentedString(recommendationStatus)).append("\n");
    sb.append("    totalSnapshotCapacityUsed: ").append(toIndentedString(totalSnapshotCapacityUsed)).append("\n");
    sb.append("    lunCount: ").append(toIndentedString(lunCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ClusterUuid");
    openapiFields.add("ResourceId");
    openapiFields.add("SvmName");
    openapiFields.add("CifsShareCount");
    openapiFields.add("EnabledProtocols");
    openapiFields.add("TotalCapacityUsed");
    openapiFields.add("TotalCapacityProvisioned");
    openapiFields.add("TotalLogicalCapacityUsed");
    openapiFields.add("MaxP95Performance");
    openapiFields.add("Recommendations");
    openapiFields.add("NfsExportedVolumes");
    openapiFields.add("RecommendationStatus");
    openapiFields.add("TotalSnapshotCapacityUsed");
    openapiFields.add("LunCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NetAppONTAPSVM
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NetAppONTAPSVM.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NetAppONTAPSVM is not found in the empty JSON string", NetAppONTAPSVM.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NetAppONTAPSVM.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NetAppONTAPSVM` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ClusterUuid`
      if (jsonObj.get("ClusterUuid") != null && !jsonObj.get("ClusterUuid").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterUuid"));
      }
      // validate the optional field `ResourceId`
      if (jsonObj.get("ResourceId") != null && !jsonObj.get("ResourceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceId"));
      }
      // validate the optional field `SvmName`
      if (jsonObj.get("SvmName") != null && !jsonObj.get("SvmName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SvmName"));
      }
      // validate the optional field `CifsShareCount`
      if (jsonObj.get("CifsShareCount") != null && !jsonObj.get("CifsShareCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("CifsShareCount"));
      }
      // validate the optional field `EnabledProtocols`
      if (jsonObj.get("EnabledProtocols") != null && !jsonObj.get("EnabledProtocols").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("EnabledProtocols"));
      }
      // validate the optional field `TotalCapacityUsed`
      if (jsonObj.get("TotalCapacityUsed") != null && !jsonObj.get("TotalCapacityUsed").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TotalCapacityUsed"));
      }
      // validate the optional field `TotalCapacityProvisioned`
      if (jsonObj.get("TotalCapacityProvisioned") != null && !jsonObj.get("TotalCapacityProvisioned").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TotalCapacityProvisioned"));
      }
      // validate the optional field `TotalLogicalCapacityUsed`
      if (jsonObj.get("TotalLogicalCapacityUsed") != null && !jsonObj.get("TotalLogicalCapacityUsed").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TotalLogicalCapacityUsed"));
      }
      // validate the optional field `MaxP95Performance`
      if (jsonObj.get("MaxP95Performance") != null && !jsonObj.get("MaxP95Performance").isJsonNull()) {
        NetAppONTAPSVMMaxP95Performance.validateJsonElement(jsonObj.get("MaxP95Performance"));
      }
      // validate the optional field `Recommendations`
      if (jsonObj.get("Recommendations") != null && !jsonObj.get("Recommendations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Recommendations"));
      }
      // validate the optional field `NfsExportedVolumes`
      if (jsonObj.get("NfsExportedVolumes") != null && !jsonObj.get("NfsExportedVolumes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NfsExportedVolumes"));
      }
      // validate the optional field `RecommendationStatus`
      if (jsonObj.get("RecommendationStatus") != null && !jsonObj.get("RecommendationStatus").isJsonNull()) {
        RecommendationStatus.validateJsonElement(jsonObj.get("RecommendationStatus"));
      }
      // validate the optional field `TotalSnapshotCapacityUsed`
      if (jsonObj.get("TotalSnapshotCapacityUsed") != null && !jsonObj.get("TotalSnapshotCapacityUsed").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TotalSnapshotCapacityUsed"));
      }
      // validate the optional field `LunCount`
      if (jsonObj.get("LunCount") != null && !jsonObj.get("LunCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("LunCount"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NetAppONTAPSVM.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NetAppONTAPSVM' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NetAppONTAPSVM> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NetAppONTAPSVM.class));

       return (TypeAdapter<T>) new TypeAdapter<NetAppONTAPSVM>() {
           @Override
           public void write(JsonWriter out, NetAppONTAPSVM value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NetAppONTAPSVM read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NetAppONTAPSVM given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NetAppONTAPSVM
   * @throws IOException if the JSON string is invalid with respect to NetAppONTAPSVM
   */
  public static NetAppONTAPSVM fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NetAppONTAPSVM.class);
  }

  /**
   * Convert an instance of NetAppONTAPSVM to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

