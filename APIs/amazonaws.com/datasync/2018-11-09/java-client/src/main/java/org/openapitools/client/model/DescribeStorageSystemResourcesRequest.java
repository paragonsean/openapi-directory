/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.DiscoveryResourceType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeStorageSystemResourcesRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeStorageSystemResourcesRequest {
  public static final String SERIALIZED_NAME_DISCOVERY_JOB_ARN = "DiscoveryJobArn";
  @SerializedName(SERIALIZED_NAME_DISCOVERY_JOB_ARN)
  private String discoveryJobArn;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "ResourceType";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private DiscoveryResourceType resourceType;

  public static final String SERIALIZED_NAME_RESOURCE_IDS = "ResourceIds";
  @SerializedName(SERIALIZED_NAME_RESOURCE_IDS)
  private List resourceIds;

  public static final String SERIALIZED_NAME_FILTER = "Filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private Map filter;

  public static final String SERIALIZED_NAME_MAX_RESULTS = "MaxResults";
  @SerializedName(SERIALIZED_NAME_MAX_RESULTS)
  private Integer maxResults;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public DescribeStorageSystemResourcesRequest() {
  }

  public DescribeStorageSystemResourcesRequest discoveryJobArn(String discoveryJobArn) {
    this.discoveryJobArn = discoveryJobArn;
    return this;
  }

  /**
   * Get discoveryJobArn
   * @return discoveryJobArn
   */
  @javax.annotation.Nonnull
  public String getDiscoveryJobArn() {
    return discoveryJobArn;
  }

  public void setDiscoveryJobArn(String discoveryJobArn) {
    this.discoveryJobArn = discoveryJobArn;
  }


  public DescribeStorageSystemResourcesRequest resourceType(DiscoveryResourceType resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Get resourceType
   * @return resourceType
   */
  @javax.annotation.Nonnull
  public DiscoveryResourceType getResourceType() {
    return resourceType;
  }

  public void setResourceType(DiscoveryResourceType resourceType) {
    this.resourceType = resourceType;
  }


  public DescribeStorageSystemResourcesRequest resourceIds(List resourceIds) {
    this.resourceIds = resourceIds;
    return this;
  }

  /**
   * Get resourceIds
   * @return resourceIds
   */
  @javax.annotation.Nullable
  public List getResourceIds() {
    return resourceIds;
  }

  public void setResourceIds(List resourceIds) {
    this.resourceIds = resourceIds;
  }


  public DescribeStorageSystemResourcesRequest filter(Map filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Get filter
   * @return filter
   */
  @javax.annotation.Nullable
  public Map getFilter() {
    return filter;
  }

  public void setFilter(Map filter) {
    this.filter = filter;
  }


  public DescribeStorageSystemResourcesRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

  /**
   * Get maxResults
   * @return maxResults
   */
  @javax.annotation.Nullable
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }


  public DescribeStorageSystemResourcesRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * Get nextToken
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeStorageSystemResourcesRequest describeStorageSystemResourcesRequest = (DescribeStorageSystemResourcesRequest) o;
    return Objects.equals(this.discoveryJobArn, describeStorageSystemResourcesRequest.discoveryJobArn) &&
        Objects.equals(this.resourceType, describeStorageSystemResourcesRequest.resourceType) &&
        Objects.equals(this.resourceIds, describeStorageSystemResourcesRequest.resourceIds) &&
        Objects.equals(this.filter, describeStorageSystemResourcesRequest.filter) &&
        Objects.equals(this.maxResults, describeStorageSystemResourcesRequest.maxResults) &&
        Objects.equals(this.nextToken, describeStorageSystemResourcesRequest.nextToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(discoveryJobArn, resourceType, resourceIds, filter, maxResults, nextToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeStorageSystemResourcesRequest {\n");
    sb.append("    discoveryJobArn: ").append(toIndentedString(discoveryJobArn)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    resourceIds: ").append(toIndentedString(resourceIds)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DiscoveryJobArn");
    openapiFields.add("ResourceType");
    openapiFields.add("ResourceIds");
    openapiFields.add("Filter");
    openapiFields.add("MaxResults");
    openapiFields.add("NextToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("DiscoveryJobArn");
    openapiRequiredFields.add("ResourceType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeStorageSystemResourcesRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeStorageSystemResourcesRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeStorageSystemResourcesRequest is not found in the empty JSON string", DescribeStorageSystemResourcesRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeStorageSystemResourcesRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeStorageSystemResourcesRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeStorageSystemResourcesRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `DiscoveryJobArn`
      String.validateJsonElement(jsonObj.get("DiscoveryJobArn"));
      // validate the required field `ResourceType`
      DiscoveryResourceType.validateJsonElement(jsonObj.get("ResourceType"));
      // validate the optional field `ResourceIds`
      if (jsonObj.get("ResourceIds") != null && !jsonObj.get("ResourceIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ResourceIds"));
      }
      // validate the optional field `Filter`
      if (jsonObj.get("Filter") != null && !jsonObj.get("Filter").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Filter"));
      }
      // validate the optional field `MaxResults`
      if (jsonObj.get("MaxResults") != null && !jsonObj.get("MaxResults").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxResults"));
      }
      // validate the optional field `NextToken`
      if (jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NextToken"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeStorageSystemResourcesRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeStorageSystemResourcesRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeStorageSystemResourcesRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeStorageSystemResourcesRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeStorageSystemResourcesRequest>() {
           @Override
           public void write(JsonWriter out, DescribeStorageSystemResourcesRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeStorageSystemResourcesRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeStorageSystemResourcesRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeStorageSystemResourcesRequest
   * @throws IOException if the JSON string is invalid with respect to DescribeStorageSystemResourcesRequest
   */
  public static DescribeStorageSystemResourcesRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeStorageSystemResourcesRequest.class);
  }

  /**
   * Convert an instance of DescribeStorageSystemResourcesRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

