/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AzureAccessTier;
import org.openapitools.client.model.AzureBlobAuthenticationType;
import org.openapitools.client.model.AzureBlobType;
import org.openapitools.client.model.CreateLocationAzureBlobRequestSasConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateLocationAzureBlobRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateLocationAzureBlobRequest {
  public static final String SERIALIZED_NAME_LOCATION_ARN = "LocationArn";
  @SerializedName(SERIALIZED_NAME_LOCATION_ARN)
  private String locationArn;

  public static final String SERIALIZED_NAME_SUBDIRECTORY = "Subdirectory";
  @SerializedName(SERIALIZED_NAME_SUBDIRECTORY)
  private String subdirectory;

  public static final String SERIALIZED_NAME_AUTHENTICATION_TYPE = "AuthenticationType";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_TYPE)
  private AzureBlobAuthenticationType authenticationType;

  public static final String SERIALIZED_NAME_SAS_CONFIGURATION = "SasConfiguration";
  @SerializedName(SERIALIZED_NAME_SAS_CONFIGURATION)
  private CreateLocationAzureBlobRequestSasConfiguration sasConfiguration;

  public static final String SERIALIZED_NAME_BLOB_TYPE = "BlobType";
  @SerializedName(SERIALIZED_NAME_BLOB_TYPE)
  private AzureBlobType blobType;

  public static final String SERIALIZED_NAME_ACCESS_TIER = "AccessTier";
  @SerializedName(SERIALIZED_NAME_ACCESS_TIER)
  private AzureAccessTier accessTier;

  public static final String SERIALIZED_NAME_AGENT_ARNS = "AgentArns";
  @SerializedName(SERIALIZED_NAME_AGENT_ARNS)
  private List agentArns;

  public UpdateLocationAzureBlobRequest() {
  }

  public UpdateLocationAzureBlobRequest locationArn(String locationArn) {
    this.locationArn = locationArn;
    return this;
  }

  /**
   * Get locationArn
   * @return locationArn
   */
  @javax.annotation.Nonnull
  public String getLocationArn() {
    return locationArn;
  }

  public void setLocationArn(String locationArn) {
    this.locationArn = locationArn;
  }


  public UpdateLocationAzureBlobRequest subdirectory(String subdirectory) {
    this.subdirectory = subdirectory;
    return this;
  }

  /**
   * Get subdirectory
   * @return subdirectory
   */
  @javax.annotation.Nullable
  public String getSubdirectory() {
    return subdirectory;
  }

  public void setSubdirectory(String subdirectory) {
    this.subdirectory = subdirectory;
  }


  public UpdateLocationAzureBlobRequest authenticationType(AzureBlobAuthenticationType authenticationType) {
    this.authenticationType = authenticationType;
    return this;
  }

  /**
   * Get authenticationType
   * @return authenticationType
   */
  @javax.annotation.Nullable
  public AzureBlobAuthenticationType getAuthenticationType() {
    return authenticationType;
  }

  public void setAuthenticationType(AzureBlobAuthenticationType authenticationType) {
    this.authenticationType = authenticationType;
  }


  public UpdateLocationAzureBlobRequest sasConfiguration(CreateLocationAzureBlobRequestSasConfiguration sasConfiguration) {
    this.sasConfiguration = sasConfiguration;
    return this;
  }

  /**
   * Get sasConfiguration
   * @return sasConfiguration
   */
  @javax.annotation.Nullable
  public CreateLocationAzureBlobRequestSasConfiguration getSasConfiguration() {
    return sasConfiguration;
  }

  public void setSasConfiguration(CreateLocationAzureBlobRequestSasConfiguration sasConfiguration) {
    this.sasConfiguration = sasConfiguration;
  }


  public UpdateLocationAzureBlobRequest blobType(AzureBlobType blobType) {
    this.blobType = blobType;
    return this;
  }

  /**
   * Get blobType
   * @return blobType
   */
  @javax.annotation.Nullable
  public AzureBlobType getBlobType() {
    return blobType;
  }

  public void setBlobType(AzureBlobType blobType) {
    this.blobType = blobType;
  }


  public UpdateLocationAzureBlobRequest accessTier(AzureAccessTier accessTier) {
    this.accessTier = accessTier;
    return this;
  }

  /**
   * Get accessTier
   * @return accessTier
   */
  @javax.annotation.Nullable
  public AzureAccessTier getAccessTier() {
    return accessTier;
  }

  public void setAccessTier(AzureAccessTier accessTier) {
    this.accessTier = accessTier;
  }


  public UpdateLocationAzureBlobRequest agentArns(List agentArns) {
    this.agentArns = agentArns;
    return this;
  }

  /**
   * Get agentArns
   * @return agentArns
   */
  @javax.annotation.Nullable
  public List getAgentArns() {
    return agentArns;
  }

  public void setAgentArns(List agentArns) {
    this.agentArns = agentArns;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateLocationAzureBlobRequest updateLocationAzureBlobRequest = (UpdateLocationAzureBlobRequest) o;
    return Objects.equals(this.locationArn, updateLocationAzureBlobRequest.locationArn) &&
        Objects.equals(this.subdirectory, updateLocationAzureBlobRequest.subdirectory) &&
        Objects.equals(this.authenticationType, updateLocationAzureBlobRequest.authenticationType) &&
        Objects.equals(this.sasConfiguration, updateLocationAzureBlobRequest.sasConfiguration) &&
        Objects.equals(this.blobType, updateLocationAzureBlobRequest.blobType) &&
        Objects.equals(this.accessTier, updateLocationAzureBlobRequest.accessTier) &&
        Objects.equals(this.agentArns, updateLocationAzureBlobRequest.agentArns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationArn, subdirectory, authenticationType, sasConfiguration, blobType, accessTier, agentArns);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateLocationAzureBlobRequest {\n");
    sb.append("    locationArn: ").append(toIndentedString(locationArn)).append("\n");
    sb.append("    subdirectory: ").append(toIndentedString(subdirectory)).append("\n");
    sb.append("    authenticationType: ").append(toIndentedString(authenticationType)).append("\n");
    sb.append("    sasConfiguration: ").append(toIndentedString(sasConfiguration)).append("\n");
    sb.append("    blobType: ").append(toIndentedString(blobType)).append("\n");
    sb.append("    accessTier: ").append(toIndentedString(accessTier)).append("\n");
    sb.append("    agentArns: ").append(toIndentedString(agentArns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("LocationArn");
    openapiFields.add("Subdirectory");
    openapiFields.add("AuthenticationType");
    openapiFields.add("SasConfiguration");
    openapiFields.add("BlobType");
    openapiFields.add("AccessTier");
    openapiFields.add("AgentArns");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("LocationArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateLocationAzureBlobRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateLocationAzureBlobRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateLocationAzureBlobRequest is not found in the empty JSON string", UpdateLocationAzureBlobRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateLocationAzureBlobRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateLocationAzureBlobRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateLocationAzureBlobRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `LocationArn`
      String.validateJsonElement(jsonObj.get("LocationArn"));
      // validate the optional field `Subdirectory`
      if (jsonObj.get("Subdirectory") != null && !jsonObj.get("Subdirectory").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Subdirectory"));
      }
      // validate the optional field `AuthenticationType`
      if (jsonObj.get("AuthenticationType") != null && !jsonObj.get("AuthenticationType").isJsonNull()) {
        AzureBlobAuthenticationType.validateJsonElement(jsonObj.get("AuthenticationType"));
      }
      // validate the optional field `SasConfiguration`
      if (jsonObj.get("SasConfiguration") != null && !jsonObj.get("SasConfiguration").isJsonNull()) {
        CreateLocationAzureBlobRequestSasConfiguration.validateJsonElement(jsonObj.get("SasConfiguration"));
      }
      // validate the optional field `BlobType`
      if (jsonObj.get("BlobType") != null && !jsonObj.get("BlobType").isJsonNull()) {
        AzureBlobType.validateJsonElement(jsonObj.get("BlobType"));
      }
      // validate the optional field `AccessTier`
      if (jsonObj.get("AccessTier") != null && !jsonObj.get("AccessTier").isJsonNull()) {
        AzureAccessTier.validateJsonElement(jsonObj.get("AccessTier"));
      }
      // validate the optional field `AgentArns`
      if (jsonObj.get("AgentArns") != null && !jsonObj.get("AgentArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AgentArns"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateLocationAzureBlobRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateLocationAzureBlobRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateLocationAzureBlobRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateLocationAzureBlobRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateLocationAzureBlobRequest>() {
           @Override
           public void write(JsonWriter out, UpdateLocationAzureBlobRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateLocationAzureBlobRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateLocationAzureBlobRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateLocationAzureBlobRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateLocationAzureBlobRequest
   */
  public static UpdateLocationAzureBlobRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateLocationAzureBlobRequest.class);
  }

  /**
   * Convert an instance of UpdateLocationAzureBlobRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

