/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateLocationFsxLustreRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateLocationFsxLustreRequest {
  public static final String SERIALIZED_NAME_FSX_FILESYSTEM_ARN = "FsxFilesystemArn";
  @SerializedName(SERIALIZED_NAME_FSX_FILESYSTEM_ARN)
  private String fsxFilesystemArn;

  public static final String SERIALIZED_NAME_SECURITY_GROUP_ARNS = "SecurityGroupArns";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUP_ARNS)
  private List securityGroupArns;

  public static final String SERIALIZED_NAME_SUBDIRECTORY = "Subdirectory";
  @SerializedName(SERIALIZED_NAME_SUBDIRECTORY)
  private String subdirectory;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public CreateLocationFsxLustreRequest() {
  }

  public CreateLocationFsxLustreRequest fsxFilesystemArn(String fsxFilesystemArn) {
    this.fsxFilesystemArn = fsxFilesystemArn;
    return this;
  }

  /**
   * Get fsxFilesystemArn
   * @return fsxFilesystemArn
   */
  @javax.annotation.Nonnull
  public String getFsxFilesystemArn() {
    return fsxFilesystemArn;
  }

  public void setFsxFilesystemArn(String fsxFilesystemArn) {
    this.fsxFilesystemArn = fsxFilesystemArn;
  }


  public CreateLocationFsxLustreRequest securityGroupArns(List securityGroupArns) {
    this.securityGroupArns = securityGroupArns;
    return this;
  }

  /**
   * Get securityGroupArns
   * @return securityGroupArns
   */
  @javax.annotation.Nonnull
  public List getSecurityGroupArns() {
    return securityGroupArns;
  }

  public void setSecurityGroupArns(List securityGroupArns) {
    this.securityGroupArns = securityGroupArns;
  }


  public CreateLocationFsxLustreRequest subdirectory(String subdirectory) {
    this.subdirectory = subdirectory;
    return this;
  }

  /**
   * Get subdirectory
   * @return subdirectory
   */
  @javax.annotation.Nullable
  public String getSubdirectory() {
    return subdirectory;
  }

  public void setSubdirectory(String subdirectory) {
    this.subdirectory = subdirectory;
  }


  public CreateLocationFsxLustreRequest tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateLocationFsxLustreRequest createLocationFsxLustreRequest = (CreateLocationFsxLustreRequest) o;
    return Objects.equals(this.fsxFilesystemArn, createLocationFsxLustreRequest.fsxFilesystemArn) &&
        Objects.equals(this.securityGroupArns, createLocationFsxLustreRequest.securityGroupArns) &&
        Objects.equals(this.subdirectory, createLocationFsxLustreRequest.subdirectory) &&
        Objects.equals(this.tags, createLocationFsxLustreRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fsxFilesystemArn, securityGroupArns, subdirectory, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateLocationFsxLustreRequest {\n");
    sb.append("    fsxFilesystemArn: ").append(toIndentedString(fsxFilesystemArn)).append("\n");
    sb.append("    securityGroupArns: ").append(toIndentedString(securityGroupArns)).append("\n");
    sb.append("    subdirectory: ").append(toIndentedString(subdirectory)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("FsxFilesystemArn");
    openapiFields.add("SecurityGroupArns");
    openapiFields.add("Subdirectory");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("FsxFilesystemArn");
    openapiRequiredFields.add("SecurityGroupArns");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateLocationFsxLustreRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateLocationFsxLustreRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateLocationFsxLustreRequest is not found in the empty JSON string", CreateLocationFsxLustreRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateLocationFsxLustreRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateLocationFsxLustreRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateLocationFsxLustreRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `FsxFilesystemArn`
      String.validateJsonElement(jsonObj.get("FsxFilesystemArn"));
      // validate the required field `SecurityGroupArns`
      List.validateJsonElement(jsonObj.get("SecurityGroupArns"));
      // validate the optional field `Subdirectory`
      if (jsonObj.get("Subdirectory") != null && !jsonObj.get("Subdirectory").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Subdirectory"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateLocationFsxLustreRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateLocationFsxLustreRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateLocationFsxLustreRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateLocationFsxLustreRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateLocationFsxLustreRequest>() {
           @Override
           public void write(JsonWriter out, CreateLocationFsxLustreRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateLocationFsxLustreRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateLocationFsxLustreRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateLocationFsxLustreRequest
   * @throws IOException if the JSON string is invalid with respect to CreateLocationFsxLustreRequest
   */
  public static CreateLocationFsxLustreRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateLocationFsxLustreRequest.class);
  }

  /**
   * Convert an instance of CreateLocationFsxLustreRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

