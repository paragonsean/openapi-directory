/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AddStorageSystemRequestCredentials;
import org.openapitools.client.model.UpdateStorageSystemRequestServerConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateStorageSystemRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateStorageSystemRequest {
  public static final String SERIALIZED_NAME_STORAGE_SYSTEM_ARN = "StorageSystemArn";
  @SerializedName(SERIALIZED_NAME_STORAGE_SYSTEM_ARN)
  private String storageSystemArn;

  public static final String SERIALIZED_NAME_SERVER_CONFIGURATION = "ServerConfiguration";
  @SerializedName(SERIALIZED_NAME_SERVER_CONFIGURATION)
  private UpdateStorageSystemRequestServerConfiguration serverConfiguration;

  public static final String SERIALIZED_NAME_AGENT_ARNS = "AgentArns";
  @SerializedName(SERIALIZED_NAME_AGENT_ARNS)
  private List agentArns;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CLOUD_WATCH_LOG_GROUP_ARN = "CloudWatchLogGroupArn";
  @SerializedName(SERIALIZED_NAME_CLOUD_WATCH_LOG_GROUP_ARN)
  private String cloudWatchLogGroupArn;

  public static final String SERIALIZED_NAME_CREDENTIALS = "Credentials";
  @SerializedName(SERIALIZED_NAME_CREDENTIALS)
  private AddStorageSystemRequestCredentials credentials;

  public UpdateStorageSystemRequest() {
  }

  public UpdateStorageSystemRequest storageSystemArn(String storageSystemArn) {
    this.storageSystemArn = storageSystemArn;
    return this;
  }

  /**
   * Get storageSystemArn
   * @return storageSystemArn
   */
  @javax.annotation.Nonnull
  public String getStorageSystemArn() {
    return storageSystemArn;
  }

  public void setStorageSystemArn(String storageSystemArn) {
    this.storageSystemArn = storageSystemArn;
  }


  public UpdateStorageSystemRequest serverConfiguration(UpdateStorageSystemRequestServerConfiguration serverConfiguration) {
    this.serverConfiguration = serverConfiguration;
    return this;
  }

  /**
   * Get serverConfiguration
   * @return serverConfiguration
   */
  @javax.annotation.Nullable
  public UpdateStorageSystemRequestServerConfiguration getServerConfiguration() {
    return serverConfiguration;
  }

  public void setServerConfiguration(UpdateStorageSystemRequestServerConfiguration serverConfiguration) {
    this.serverConfiguration = serverConfiguration;
  }


  public UpdateStorageSystemRequest agentArns(List agentArns) {
    this.agentArns = agentArns;
    return this;
  }

  /**
   * Get agentArns
   * @return agentArns
   */
  @javax.annotation.Nullable
  public List getAgentArns() {
    return agentArns;
  }

  public void setAgentArns(List agentArns) {
    this.agentArns = agentArns;
  }


  public UpdateStorageSystemRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public UpdateStorageSystemRequest cloudWatchLogGroupArn(String cloudWatchLogGroupArn) {
    this.cloudWatchLogGroupArn = cloudWatchLogGroupArn;
    return this;
  }

  /**
   * Get cloudWatchLogGroupArn
   * @return cloudWatchLogGroupArn
   */
  @javax.annotation.Nullable
  public String getCloudWatchLogGroupArn() {
    return cloudWatchLogGroupArn;
  }

  public void setCloudWatchLogGroupArn(String cloudWatchLogGroupArn) {
    this.cloudWatchLogGroupArn = cloudWatchLogGroupArn;
  }


  public UpdateStorageSystemRequest credentials(AddStorageSystemRequestCredentials credentials) {
    this.credentials = credentials;
    return this;
  }

  /**
   * Get credentials
   * @return credentials
   */
  @javax.annotation.Nullable
  public AddStorageSystemRequestCredentials getCredentials() {
    return credentials;
  }

  public void setCredentials(AddStorageSystemRequestCredentials credentials) {
    this.credentials = credentials;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateStorageSystemRequest updateStorageSystemRequest = (UpdateStorageSystemRequest) o;
    return Objects.equals(this.storageSystemArn, updateStorageSystemRequest.storageSystemArn) &&
        Objects.equals(this.serverConfiguration, updateStorageSystemRequest.serverConfiguration) &&
        Objects.equals(this.agentArns, updateStorageSystemRequest.agentArns) &&
        Objects.equals(this.name, updateStorageSystemRequest.name) &&
        Objects.equals(this.cloudWatchLogGroupArn, updateStorageSystemRequest.cloudWatchLogGroupArn) &&
        Objects.equals(this.credentials, updateStorageSystemRequest.credentials);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storageSystemArn, serverConfiguration, agentArns, name, cloudWatchLogGroupArn, credentials);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateStorageSystemRequest {\n");
    sb.append("    storageSystemArn: ").append(toIndentedString(storageSystemArn)).append("\n");
    sb.append("    serverConfiguration: ").append(toIndentedString(serverConfiguration)).append("\n");
    sb.append("    agentArns: ").append(toIndentedString(agentArns)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    cloudWatchLogGroupArn: ").append(toIndentedString(cloudWatchLogGroupArn)).append("\n");
    sb.append("    credentials: ").append(toIndentedString(credentials)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("StorageSystemArn");
    openapiFields.add("ServerConfiguration");
    openapiFields.add("AgentArns");
    openapiFields.add("Name");
    openapiFields.add("CloudWatchLogGroupArn");
    openapiFields.add("Credentials");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("StorageSystemArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateStorageSystemRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateStorageSystemRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateStorageSystemRequest is not found in the empty JSON string", UpdateStorageSystemRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateStorageSystemRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateStorageSystemRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateStorageSystemRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `StorageSystemArn`
      String.validateJsonElement(jsonObj.get("StorageSystemArn"));
      // validate the optional field `ServerConfiguration`
      if (jsonObj.get("ServerConfiguration") != null && !jsonObj.get("ServerConfiguration").isJsonNull()) {
        UpdateStorageSystemRequestServerConfiguration.validateJsonElement(jsonObj.get("ServerConfiguration"));
      }
      // validate the optional field `AgentArns`
      if (jsonObj.get("AgentArns") != null && !jsonObj.get("AgentArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AgentArns"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `CloudWatchLogGroupArn`
      if (jsonObj.get("CloudWatchLogGroupArn") != null && !jsonObj.get("CloudWatchLogGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CloudWatchLogGroupArn"));
      }
      // validate the optional field `Credentials`
      if (jsonObj.get("Credentials") != null && !jsonObj.get("Credentials").isJsonNull()) {
        AddStorageSystemRequestCredentials.validateJsonElement(jsonObj.get("Credentials"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateStorageSystemRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateStorageSystemRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateStorageSystemRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateStorageSystemRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateStorageSystemRequest>() {
           @Override
           public void write(JsonWriter out, UpdateStorageSystemRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateStorageSystemRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateStorageSystemRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateStorageSystemRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateStorageSystemRequest
   */
  public static UpdateStorageSystemRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateStorageSystemRequest.class);
  }

  /**
   * Convert an instance of UpdateStorageSystemRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

