/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.AgentStatus;
import org.openapitools.client.model.DescribeAgentResponsePrivateLinkConfig;
import org.openapitools.client.model.EndpointType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeAgentResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeAgentResponse {
  public static final String SERIALIZED_NAME_AGENT_ARN = "AgentArn";
  @SerializedName(SERIALIZED_NAME_AGENT_ARN)
  private String agentArn;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private AgentStatus status;

  public static final String SERIALIZED_NAME_LAST_CONNECTION_TIME = "LastConnectionTime";
  @SerializedName(SERIALIZED_NAME_LAST_CONNECTION_TIME)
  private OffsetDateTime lastConnectionTime;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_ENDPOINT_TYPE = "EndpointType";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_TYPE)
  private EndpointType endpointType;

  public static final String SERIALIZED_NAME_PRIVATE_LINK_CONFIG = "PrivateLinkConfig";
  @SerializedName(SERIALIZED_NAME_PRIVATE_LINK_CONFIG)
  private DescribeAgentResponsePrivateLinkConfig privateLinkConfig;

  public DescribeAgentResponse() {
  }

  public DescribeAgentResponse agentArn(String agentArn) {
    this.agentArn = agentArn;
    return this;
  }

  /**
   * Get agentArn
   * @return agentArn
   */
  @javax.annotation.Nullable
  public String getAgentArn() {
    return agentArn;
  }

  public void setAgentArn(String agentArn) {
    this.agentArn = agentArn;
  }


  public DescribeAgentResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public DescribeAgentResponse status(AgentStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public AgentStatus getStatus() {
    return status;
  }

  public void setStatus(AgentStatus status) {
    this.status = status;
  }


  public DescribeAgentResponse lastConnectionTime(OffsetDateTime lastConnectionTime) {
    this.lastConnectionTime = lastConnectionTime;
    return this;
  }

  /**
   * Get lastConnectionTime
   * @return lastConnectionTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastConnectionTime() {
    return lastConnectionTime;
  }

  public void setLastConnectionTime(OffsetDateTime lastConnectionTime) {
    this.lastConnectionTime = lastConnectionTime;
  }


  public DescribeAgentResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeAgentResponse endpointType(EndpointType endpointType) {
    this.endpointType = endpointType;
    return this;
  }

  /**
   * Get endpointType
   * @return endpointType
   */
  @javax.annotation.Nullable
  public EndpointType getEndpointType() {
    return endpointType;
  }

  public void setEndpointType(EndpointType endpointType) {
    this.endpointType = endpointType;
  }


  public DescribeAgentResponse privateLinkConfig(DescribeAgentResponsePrivateLinkConfig privateLinkConfig) {
    this.privateLinkConfig = privateLinkConfig;
    return this;
  }

  /**
   * Get privateLinkConfig
   * @return privateLinkConfig
   */
  @javax.annotation.Nullable
  public DescribeAgentResponsePrivateLinkConfig getPrivateLinkConfig() {
    return privateLinkConfig;
  }

  public void setPrivateLinkConfig(DescribeAgentResponsePrivateLinkConfig privateLinkConfig) {
    this.privateLinkConfig = privateLinkConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeAgentResponse describeAgentResponse = (DescribeAgentResponse) o;
    return Objects.equals(this.agentArn, describeAgentResponse.agentArn) &&
        Objects.equals(this.name, describeAgentResponse.name) &&
        Objects.equals(this.status, describeAgentResponse.status) &&
        Objects.equals(this.lastConnectionTime, describeAgentResponse.lastConnectionTime) &&
        Objects.equals(this.creationTime, describeAgentResponse.creationTime) &&
        Objects.equals(this.endpointType, describeAgentResponse.endpointType) &&
        Objects.equals(this.privateLinkConfig, describeAgentResponse.privateLinkConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentArn, name, status, lastConnectionTime, creationTime, endpointType, privateLinkConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeAgentResponse {\n");
    sb.append("    agentArn: ").append(toIndentedString(agentArn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lastConnectionTime: ").append(toIndentedString(lastConnectionTime)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    endpointType: ").append(toIndentedString(endpointType)).append("\n");
    sb.append("    privateLinkConfig: ").append(toIndentedString(privateLinkConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AgentArn");
    openapiFields.add("Name");
    openapiFields.add("Status");
    openapiFields.add("LastConnectionTime");
    openapiFields.add("CreationTime");
    openapiFields.add("EndpointType");
    openapiFields.add("PrivateLinkConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeAgentResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeAgentResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeAgentResponse is not found in the empty JSON string", DescribeAgentResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeAgentResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeAgentResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AgentArn`
      if (jsonObj.get("AgentArn") != null && !jsonObj.get("AgentArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AgentArn"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        AgentStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `LastConnectionTime`
      if (jsonObj.get("LastConnectionTime") != null && !jsonObj.get("LastConnectionTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastConnectionTime"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `EndpointType`
      if (jsonObj.get("EndpointType") != null && !jsonObj.get("EndpointType").isJsonNull()) {
        EndpointType.validateJsonElement(jsonObj.get("EndpointType"));
      }
      // validate the optional field `PrivateLinkConfig`
      if (jsonObj.get("PrivateLinkConfig") != null && !jsonObj.get("PrivateLinkConfig").isJsonNull()) {
        DescribeAgentResponsePrivateLinkConfig.validateJsonElement(jsonObj.get("PrivateLinkConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeAgentResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeAgentResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeAgentResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeAgentResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeAgentResponse>() {
           @Override
           public void write(JsonWriter out, DescribeAgentResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeAgentResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeAgentResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeAgentResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeAgentResponse
   */
  public static DescribeAgentResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeAgentResponse.class);
  }

  /**
   * Convert an instance of DescribeAgentResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

