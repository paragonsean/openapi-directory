/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AddStorageSystemRequestCredentials;
import org.openapitools.client.model.AddStorageSystemRequestServerConfiguration;
import org.openapitools.client.model.DiscoverySystemType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AddStorageSystemRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AddStorageSystemRequest {
  public static final String SERIALIZED_NAME_SERVER_CONFIGURATION = "ServerConfiguration";
  @SerializedName(SERIALIZED_NAME_SERVER_CONFIGURATION)
  private AddStorageSystemRequestServerConfiguration serverConfiguration;

  public static final String SERIALIZED_NAME_SYSTEM_TYPE = "SystemType";
  @SerializedName(SERIALIZED_NAME_SYSTEM_TYPE)
  private DiscoverySystemType systemType;

  public static final String SERIALIZED_NAME_AGENT_ARNS = "AgentArns";
  @SerializedName(SERIALIZED_NAME_AGENT_ARNS)
  private List agentArns;

  public static final String SERIALIZED_NAME_CLOUD_WATCH_LOG_GROUP_ARN = "CloudWatchLogGroupArn";
  @SerializedName(SERIALIZED_NAME_CLOUD_WATCH_LOG_GROUP_ARN)
  private String cloudWatchLogGroupArn;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CLIENT_TOKEN = "ClientToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOKEN)
  private String clientToken;

  public static final String SERIALIZED_NAME_CREDENTIALS = "Credentials";
  @SerializedName(SERIALIZED_NAME_CREDENTIALS)
  private AddStorageSystemRequestCredentials credentials;

  public AddStorageSystemRequest() {
  }

  public AddStorageSystemRequest serverConfiguration(AddStorageSystemRequestServerConfiguration serverConfiguration) {
    this.serverConfiguration = serverConfiguration;
    return this;
  }

  /**
   * Get serverConfiguration
   * @return serverConfiguration
   */
  @javax.annotation.Nonnull
  public AddStorageSystemRequestServerConfiguration getServerConfiguration() {
    return serverConfiguration;
  }

  public void setServerConfiguration(AddStorageSystemRequestServerConfiguration serverConfiguration) {
    this.serverConfiguration = serverConfiguration;
  }


  public AddStorageSystemRequest systemType(DiscoverySystemType systemType) {
    this.systemType = systemType;
    return this;
  }

  /**
   * Get systemType
   * @return systemType
   */
  @javax.annotation.Nonnull
  public DiscoverySystemType getSystemType() {
    return systemType;
  }

  public void setSystemType(DiscoverySystemType systemType) {
    this.systemType = systemType;
  }


  public AddStorageSystemRequest agentArns(List agentArns) {
    this.agentArns = agentArns;
    return this;
  }

  /**
   * Get agentArns
   * @return agentArns
   */
  @javax.annotation.Nonnull
  public List getAgentArns() {
    return agentArns;
  }

  public void setAgentArns(List agentArns) {
    this.agentArns = agentArns;
  }


  public AddStorageSystemRequest cloudWatchLogGroupArn(String cloudWatchLogGroupArn) {
    this.cloudWatchLogGroupArn = cloudWatchLogGroupArn;
    return this;
  }

  /**
   * Get cloudWatchLogGroupArn
   * @return cloudWatchLogGroupArn
   */
  @javax.annotation.Nullable
  public String getCloudWatchLogGroupArn() {
    return cloudWatchLogGroupArn;
  }

  public void setCloudWatchLogGroupArn(String cloudWatchLogGroupArn) {
    this.cloudWatchLogGroupArn = cloudWatchLogGroupArn;
  }


  public AddStorageSystemRequest tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public AddStorageSystemRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AddStorageSystemRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

  /**
   * Get clientToken
   * @return clientToken
   */
  @javax.annotation.Nonnull
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }


  public AddStorageSystemRequest credentials(AddStorageSystemRequestCredentials credentials) {
    this.credentials = credentials;
    return this;
  }

  /**
   * Get credentials
   * @return credentials
   */
  @javax.annotation.Nonnull
  public AddStorageSystemRequestCredentials getCredentials() {
    return credentials;
  }

  public void setCredentials(AddStorageSystemRequestCredentials credentials) {
    this.credentials = credentials;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddStorageSystemRequest addStorageSystemRequest = (AddStorageSystemRequest) o;
    return Objects.equals(this.serverConfiguration, addStorageSystemRequest.serverConfiguration) &&
        Objects.equals(this.systemType, addStorageSystemRequest.systemType) &&
        Objects.equals(this.agentArns, addStorageSystemRequest.agentArns) &&
        Objects.equals(this.cloudWatchLogGroupArn, addStorageSystemRequest.cloudWatchLogGroupArn) &&
        Objects.equals(this.tags, addStorageSystemRequest.tags) &&
        Objects.equals(this.name, addStorageSystemRequest.name) &&
        Objects.equals(this.clientToken, addStorageSystemRequest.clientToken) &&
        Objects.equals(this.credentials, addStorageSystemRequest.credentials);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serverConfiguration, systemType, agentArns, cloudWatchLogGroupArn, tags, name, clientToken, credentials);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddStorageSystemRequest {\n");
    sb.append("    serverConfiguration: ").append(toIndentedString(serverConfiguration)).append("\n");
    sb.append("    systemType: ").append(toIndentedString(systemType)).append("\n");
    sb.append("    agentArns: ").append(toIndentedString(agentArns)).append("\n");
    sb.append("    cloudWatchLogGroupArn: ").append(toIndentedString(cloudWatchLogGroupArn)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    credentials: ").append(toIndentedString(credentials)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ServerConfiguration");
    openapiFields.add("SystemType");
    openapiFields.add("AgentArns");
    openapiFields.add("CloudWatchLogGroupArn");
    openapiFields.add("Tags");
    openapiFields.add("Name");
    openapiFields.add("ClientToken");
    openapiFields.add("Credentials");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ServerConfiguration");
    openapiRequiredFields.add("SystemType");
    openapiRequiredFields.add("AgentArns");
    openapiRequiredFields.add("ClientToken");
    openapiRequiredFields.add("Credentials");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AddStorageSystemRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AddStorageSystemRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddStorageSystemRequest is not found in the empty JSON string", AddStorageSystemRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AddStorageSystemRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AddStorageSystemRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AddStorageSystemRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ServerConfiguration`
      AddStorageSystemRequestServerConfiguration.validateJsonElement(jsonObj.get("ServerConfiguration"));
      // validate the required field `SystemType`
      DiscoverySystemType.validateJsonElement(jsonObj.get("SystemType"));
      // validate the required field `AgentArns`
      List.validateJsonElement(jsonObj.get("AgentArns"));
      // validate the optional field `CloudWatchLogGroupArn`
      if (jsonObj.get("CloudWatchLogGroupArn") != null && !jsonObj.get("CloudWatchLogGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CloudWatchLogGroupArn"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the required field `ClientToken`
      String.validateJsonElement(jsonObj.get("ClientToken"));
      // validate the required field `Credentials`
      AddStorageSystemRequestCredentials.validateJsonElement(jsonObj.get("Credentials"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddStorageSystemRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddStorageSystemRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddStorageSystemRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddStorageSystemRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AddStorageSystemRequest>() {
           @Override
           public void write(JsonWriter out, AddStorageSystemRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AddStorageSystemRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AddStorageSystemRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AddStorageSystemRequest
   * @throws IOException if the JSON string is invalid with respect to AddStorageSystemRequest
   */
  public static AddStorageSystemRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddStorageSystemRequest.class);
  }

  /**
   * Convert an instance of AddStorageSystemRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

