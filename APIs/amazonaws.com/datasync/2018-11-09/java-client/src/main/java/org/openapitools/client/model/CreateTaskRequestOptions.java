/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Atime;
import org.openapitools.client.model.Gid;
import org.openapitools.client.model.LogLevel;
import org.openapitools.client.model.Mtime;
import org.openapitools.client.model.ObjectTags;
import org.openapitools.client.model.OverwriteMode;
import org.openapitools.client.model.PosixPermissions;
import org.openapitools.client.model.PreserveDeletedFiles;
import org.openapitools.client.model.PreserveDevices;
import org.openapitools.client.model.SmbSecurityDescriptorCopyFlags;
import org.openapitools.client.model.TaskQueueing;
import org.openapitools.client.model.TransferMode;
import org.openapitools.client.model.Uid;
import org.openapitools.client.model.VerifyMode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateTaskRequestOptions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateTaskRequestOptions {
  public static final String SERIALIZED_NAME_VERIFY_MODE = "VerifyMode";
  @SerializedName(SERIALIZED_NAME_VERIFY_MODE)
  private VerifyMode verifyMode;

  public static final String SERIALIZED_NAME_OVERWRITE_MODE = "OverwriteMode";
  @SerializedName(SERIALIZED_NAME_OVERWRITE_MODE)
  private OverwriteMode overwriteMode;

  public static final String SERIALIZED_NAME_ATIME = "Atime";
  @SerializedName(SERIALIZED_NAME_ATIME)
  private Atime atime;

  public static final String SERIALIZED_NAME_MTIME = "Mtime";
  @SerializedName(SERIALIZED_NAME_MTIME)
  private Mtime mtime;

  public static final String SERIALIZED_NAME_UID = "Uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private Uid uid;

  public static final String SERIALIZED_NAME_GID = "Gid";
  @SerializedName(SERIALIZED_NAME_GID)
  private Gid gid;

  public static final String SERIALIZED_NAME_PRESERVE_DELETED_FILES = "PreserveDeletedFiles";
  @SerializedName(SERIALIZED_NAME_PRESERVE_DELETED_FILES)
  private PreserveDeletedFiles preserveDeletedFiles;

  public static final String SERIALIZED_NAME_PRESERVE_DEVICES = "PreserveDevices";
  @SerializedName(SERIALIZED_NAME_PRESERVE_DEVICES)
  private PreserveDevices preserveDevices;

  public static final String SERIALIZED_NAME_POSIX_PERMISSIONS = "PosixPermissions";
  @SerializedName(SERIALIZED_NAME_POSIX_PERMISSIONS)
  private PosixPermissions posixPermissions;

  public static final String SERIALIZED_NAME_BYTES_PER_SECOND = "BytesPerSecond";
  @SerializedName(SERIALIZED_NAME_BYTES_PER_SECOND)
  private Integer bytesPerSecond;

  public static final String SERIALIZED_NAME_TASK_QUEUEING = "TaskQueueing";
  @SerializedName(SERIALIZED_NAME_TASK_QUEUEING)
  private TaskQueueing taskQueueing;

  public static final String SERIALIZED_NAME_LOG_LEVEL = "LogLevel";
  @SerializedName(SERIALIZED_NAME_LOG_LEVEL)
  private LogLevel logLevel;

  public static final String SERIALIZED_NAME_TRANSFER_MODE = "TransferMode";
  @SerializedName(SERIALIZED_NAME_TRANSFER_MODE)
  private TransferMode transferMode;

  public static final String SERIALIZED_NAME_SECURITY_DESCRIPTOR_COPY_FLAGS = "SecurityDescriptorCopyFlags";
  @SerializedName(SERIALIZED_NAME_SECURITY_DESCRIPTOR_COPY_FLAGS)
  private SmbSecurityDescriptorCopyFlags securityDescriptorCopyFlags;

  public static final String SERIALIZED_NAME_OBJECT_TAGS = "ObjectTags";
  @SerializedName(SERIALIZED_NAME_OBJECT_TAGS)
  private ObjectTags objectTags;

  public CreateTaskRequestOptions() {
  }

  public CreateTaskRequestOptions verifyMode(VerifyMode verifyMode) {
    this.verifyMode = verifyMode;
    return this;
  }

  /**
   * Get verifyMode
   * @return verifyMode
   */
  @javax.annotation.Nullable
  public VerifyMode getVerifyMode() {
    return verifyMode;
  }

  public void setVerifyMode(VerifyMode verifyMode) {
    this.verifyMode = verifyMode;
  }


  public CreateTaskRequestOptions overwriteMode(OverwriteMode overwriteMode) {
    this.overwriteMode = overwriteMode;
    return this;
  }

  /**
   * Get overwriteMode
   * @return overwriteMode
   */
  @javax.annotation.Nullable
  public OverwriteMode getOverwriteMode() {
    return overwriteMode;
  }

  public void setOverwriteMode(OverwriteMode overwriteMode) {
    this.overwriteMode = overwriteMode;
  }


  public CreateTaskRequestOptions atime(Atime atime) {
    this.atime = atime;
    return this;
  }

  /**
   * Get atime
   * @return atime
   */
  @javax.annotation.Nullable
  public Atime getAtime() {
    return atime;
  }

  public void setAtime(Atime atime) {
    this.atime = atime;
  }


  public CreateTaskRequestOptions mtime(Mtime mtime) {
    this.mtime = mtime;
    return this;
  }

  /**
   * Get mtime
   * @return mtime
   */
  @javax.annotation.Nullable
  public Mtime getMtime() {
    return mtime;
  }

  public void setMtime(Mtime mtime) {
    this.mtime = mtime;
  }


  public CreateTaskRequestOptions uid(Uid uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Get uid
   * @return uid
   */
  @javax.annotation.Nullable
  public Uid getUid() {
    return uid;
  }

  public void setUid(Uid uid) {
    this.uid = uid;
  }


  public CreateTaskRequestOptions gid(Gid gid) {
    this.gid = gid;
    return this;
  }

  /**
   * Get gid
   * @return gid
   */
  @javax.annotation.Nullable
  public Gid getGid() {
    return gid;
  }

  public void setGid(Gid gid) {
    this.gid = gid;
  }


  public CreateTaskRequestOptions preserveDeletedFiles(PreserveDeletedFiles preserveDeletedFiles) {
    this.preserveDeletedFiles = preserveDeletedFiles;
    return this;
  }

  /**
   * Get preserveDeletedFiles
   * @return preserveDeletedFiles
   */
  @javax.annotation.Nullable
  public PreserveDeletedFiles getPreserveDeletedFiles() {
    return preserveDeletedFiles;
  }

  public void setPreserveDeletedFiles(PreserveDeletedFiles preserveDeletedFiles) {
    this.preserveDeletedFiles = preserveDeletedFiles;
  }


  public CreateTaskRequestOptions preserveDevices(PreserveDevices preserveDevices) {
    this.preserveDevices = preserveDevices;
    return this;
  }

  /**
   * Get preserveDevices
   * @return preserveDevices
   */
  @javax.annotation.Nullable
  public PreserveDevices getPreserveDevices() {
    return preserveDevices;
  }

  public void setPreserveDevices(PreserveDevices preserveDevices) {
    this.preserveDevices = preserveDevices;
  }


  public CreateTaskRequestOptions posixPermissions(PosixPermissions posixPermissions) {
    this.posixPermissions = posixPermissions;
    return this;
  }

  /**
   * Get posixPermissions
   * @return posixPermissions
   */
  @javax.annotation.Nullable
  public PosixPermissions getPosixPermissions() {
    return posixPermissions;
  }

  public void setPosixPermissions(PosixPermissions posixPermissions) {
    this.posixPermissions = posixPermissions;
  }


  public CreateTaskRequestOptions bytesPerSecond(Integer bytesPerSecond) {
    this.bytesPerSecond = bytesPerSecond;
    return this;
  }

  /**
   * Get bytesPerSecond
   * @return bytesPerSecond
   */
  @javax.annotation.Nullable
  public Integer getBytesPerSecond() {
    return bytesPerSecond;
  }

  public void setBytesPerSecond(Integer bytesPerSecond) {
    this.bytesPerSecond = bytesPerSecond;
  }


  public CreateTaskRequestOptions taskQueueing(TaskQueueing taskQueueing) {
    this.taskQueueing = taskQueueing;
    return this;
  }

  /**
   * Get taskQueueing
   * @return taskQueueing
   */
  @javax.annotation.Nullable
  public TaskQueueing getTaskQueueing() {
    return taskQueueing;
  }

  public void setTaskQueueing(TaskQueueing taskQueueing) {
    this.taskQueueing = taskQueueing;
  }


  public CreateTaskRequestOptions logLevel(LogLevel logLevel) {
    this.logLevel = logLevel;
    return this;
  }

  /**
   * Get logLevel
   * @return logLevel
   */
  @javax.annotation.Nullable
  public LogLevel getLogLevel() {
    return logLevel;
  }

  public void setLogLevel(LogLevel logLevel) {
    this.logLevel = logLevel;
  }


  public CreateTaskRequestOptions transferMode(TransferMode transferMode) {
    this.transferMode = transferMode;
    return this;
  }

  /**
   * Get transferMode
   * @return transferMode
   */
  @javax.annotation.Nullable
  public TransferMode getTransferMode() {
    return transferMode;
  }

  public void setTransferMode(TransferMode transferMode) {
    this.transferMode = transferMode;
  }


  public CreateTaskRequestOptions securityDescriptorCopyFlags(SmbSecurityDescriptorCopyFlags securityDescriptorCopyFlags) {
    this.securityDescriptorCopyFlags = securityDescriptorCopyFlags;
    return this;
  }

  /**
   * Get securityDescriptorCopyFlags
   * @return securityDescriptorCopyFlags
   */
  @javax.annotation.Nullable
  public SmbSecurityDescriptorCopyFlags getSecurityDescriptorCopyFlags() {
    return securityDescriptorCopyFlags;
  }

  public void setSecurityDescriptorCopyFlags(SmbSecurityDescriptorCopyFlags securityDescriptorCopyFlags) {
    this.securityDescriptorCopyFlags = securityDescriptorCopyFlags;
  }


  public CreateTaskRequestOptions objectTags(ObjectTags objectTags) {
    this.objectTags = objectTags;
    return this;
  }

  /**
   * Get objectTags
   * @return objectTags
   */
  @javax.annotation.Nullable
  public ObjectTags getObjectTags() {
    return objectTags;
  }

  public void setObjectTags(ObjectTags objectTags) {
    this.objectTags = objectTags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTaskRequestOptions createTaskRequestOptions = (CreateTaskRequestOptions) o;
    return Objects.equals(this.verifyMode, createTaskRequestOptions.verifyMode) &&
        Objects.equals(this.overwriteMode, createTaskRequestOptions.overwriteMode) &&
        Objects.equals(this.atime, createTaskRequestOptions.atime) &&
        Objects.equals(this.mtime, createTaskRequestOptions.mtime) &&
        Objects.equals(this.uid, createTaskRequestOptions.uid) &&
        Objects.equals(this.gid, createTaskRequestOptions.gid) &&
        Objects.equals(this.preserveDeletedFiles, createTaskRequestOptions.preserveDeletedFiles) &&
        Objects.equals(this.preserveDevices, createTaskRequestOptions.preserveDevices) &&
        Objects.equals(this.posixPermissions, createTaskRequestOptions.posixPermissions) &&
        Objects.equals(this.bytesPerSecond, createTaskRequestOptions.bytesPerSecond) &&
        Objects.equals(this.taskQueueing, createTaskRequestOptions.taskQueueing) &&
        Objects.equals(this.logLevel, createTaskRequestOptions.logLevel) &&
        Objects.equals(this.transferMode, createTaskRequestOptions.transferMode) &&
        Objects.equals(this.securityDescriptorCopyFlags, createTaskRequestOptions.securityDescriptorCopyFlags) &&
        Objects.equals(this.objectTags, createTaskRequestOptions.objectTags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(verifyMode, overwriteMode, atime, mtime, uid, gid, preserveDeletedFiles, preserveDevices, posixPermissions, bytesPerSecond, taskQueueing, logLevel, transferMode, securityDescriptorCopyFlags, objectTags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTaskRequestOptions {\n");
    sb.append("    verifyMode: ").append(toIndentedString(verifyMode)).append("\n");
    sb.append("    overwriteMode: ").append(toIndentedString(overwriteMode)).append("\n");
    sb.append("    atime: ").append(toIndentedString(atime)).append("\n");
    sb.append("    mtime: ").append(toIndentedString(mtime)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    gid: ").append(toIndentedString(gid)).append("\n");
    sb.append("    preserveDeletedFiles: ").append(toIndentedString(preserveDeletedFiles)).append("\n");
    sb.append("    preserveDevices: ").append(toIndentedString(preserveDevices)).append("\n");
    sb.append("    posixPermissions: ").append(toIndentedString(posixPermissions)).append("\n");
    sb.append("    bytesPerSecond: ").append(toIndentedString(bytesPerSecond)).append("\n");
    sb.append("    taskQueueing: ").append(toIndentedString(taskQueueing)).append("\n");
    sb.append("    logLevel: ").append(toIndentedString(logLevel)).append("\n");
    sb.append("    transferMode: ").append(toIndentedString(transferMode)).append("\n");
    sb.append("    securityDescriptorCopyFlags: ").append(toIndentedString(securityDescriptorCopyFlags)).append("\n");
    sb.append("    objectTags: ").append(toIndentedString(objectTags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("VerifyMode");
    openapiFields.add("OverwriteMode");
    openapiFields.add("Atime");
    openapiFields.add("Mtime");
    openapiFields.add("Uid");
    openapiFields.add("Gid");
    openapiFields.add("PreserveDeletedFiles");
    openapiFields.add("PreserveDevices");
    openapiFields.add("PosixPermissions");
    openapiFields.add("BytesPerSecond");
    openapiFields.add("TaskQueueing");
    openapiFields.add("LogLevel");
    openapiFields.add("TransferMode");
    openapiFields.add("SecurityDescriptorCopyFlags");
    openapiFields.add("ObjectTags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateTaskRequestOptions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateTaskRequestOptions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateTaskRequestOptions is not found in the empty JSON string", CreateTaskRequestOptions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateTaskRequestOptions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateTaskRequestOptions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `VerifyMode`
      if (jsonObj.get("VerifyMode") != null && !jsonObj.get("VerifyMode").isJsonNull()) {
        VerifyMode.validateJsonElement(jsonObj.get("VerifyMode"));
      }
      // validate the optional field `OverwriteMode`
      if (jsonObj.get("OverwriteMode") != null && !jsonObj.get("OverwriteMode").isJsonNull()) {
        OverwriteMode.validateJsonElement(jsonObj.get("OverwriteMode"));
      }
      // validate the optional field `Atime`
      if (jsonObj.get("Atime") != null && !jsonObj.get("Atime").isJsonNull()) {
        Atime.validateJsonElement(jsonObj.get("Atime"));
      }
      // validate the optional field `Mtime`
      if (jsonObj.get("Mtime") != null && !jsonObj.get("Mtime").isJsonNull()) {
        Mtime.validateJsonElement(jsonObj.get("Mtime"));
      }
      // validate the optional field `Uid`
      if (jsonObj.get("Uid") != null && !jsonObj.get("Uid").isJsonNull()) {
        Uid.validateJsonElement(jsonObj.get("Uid"));
      }
      // validate the optional field `Gid`
      if (jsonObj.get("Gid") != null && !jsonObj.get("Gid").isJsonNull()) {
        Gid.validateJsonElement(jsonObj.get("Gid"));
      }
      // validate the optional field `PreserveDeletedFiles`
      if (jsonObj.get("PreserveDeletedFiles") != null && !jsonObj.get("PreserveDeletedFiles").isJsonNull()) {
        PreserveDeletedFiles.validateJsonElement(jsonObj.get("PreserveDeletedFiles"));
      }
      // validate the optional field `PreserveDevices`
      if (jsonObj.get("PreserveDevices") != null && !jsonObj.get("PreserveDevices").isJsonNull()) {
        PreserveDevices.validateJsonElement(jsonObj.get("PreserveDevices"));
      }
      // validate the optional field `PosixPermissions`
      if (jsonObj.get("PosixPermissions") != null && !jsonObj.get("PosixPermissions").isJsonNull()) {
        PosixPermissions.validateJsonElement(jsonObj.get("PosixPermissions"));
      }
      // validate the optional field `BytesPerSecond`
      if (jsonObj.get("BytesPerSecond") != null && !jsonObj.get("BytesPerSecond").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("BytesPerSecond"));
      }
      // validate the optional field `TaskQueueing`
      if (jsonObj.get("TaskQueueing") != null && !jsonObj.get("TaskQueueing").isJsonNull()) {
        TaskQueueing.validateJsonElement(jsonObj.get("TaskQueueing"));
      }
      // validate the optional field `LogLevel`
      if (jsonObj.get("LogLevel") != null && !jsonObj.get("LogLevel").isJsonNull()) {
        LogLevel.validateJsonElement(jsonObj.get("LogLevel"));
      }
      // validate the optional field `TransferMode`
      if (jsonObj.get("TransferMode") != null && !jsonObj.get("TransferMode").isJsonNull()) {
        TransferMode.validateJsonElement(jsonObj.get("TransferMode"));
      }
      // validate the optional field `SecurityDescriptorCopyFlags`
      if (jsonObj.get("SecurityDescriptorCopyFlags") != null && !jsonObj.get("SecurityDescriptorCopyFlags").isJsonNull()) {
        SmbSecurityDescriptorCopyFlags.validateJsonElement(jsonObj.get("SecurityDescriptorCopyFlags"));
      }
      // validate the optional field `ObjectTags`
      if (jsonObj.get("ObjectTags") != null && !jsonObj.get("ObjectTags").isJsonNull()) {
        ObjectTags.validateJsonElement(jsonObj.get("ObjectTags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateTaskRequestOptions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateTaskRequestOptions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateTaskRequestOptions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateTaskRequestOptions.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateTaskRequestOptions>() {
           @Override
           public void write(JsonWriter out, CreateTaskRequestOptions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateTaskRequestOptions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateTaskRequestOptions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateTaskRequestOptions
   * @throws IOException if the JSON string is invalid with respect to CreateTaskRequestOptions
   */
  public static CreateTaskRequestOptions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateTaskRequestOptions.class);
  }

  /**
   * Convert an instance of CreateTaskRequestOptions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

