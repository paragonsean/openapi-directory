/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DescribeStorageSystemResponseServerConfiguration;
import org.openapitools.client.model.DiscoverySystemType;
import org.openapitools.client.model.StorageSystemConnectivityStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeStorageSystemResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeStorageSystemResponse {
  public static final String SERIALIZED_NAME_STORAGE_SYSTEM_ARN = "StorageSystemArn";
  @SerializedName(SERIALIZED_NAME_STORAGE_SYSTEM_ARN)
  private String storageSystemArn;

  public static final String SERIALIZED_NAME_SERVER_CONFIGURATION = "ServerConfiguration";
  @SerializedName(SERIALIZED_NAME_SERVER_CONFIGURATION)
  private DescribeStorageSystemResponseServerConfiguration serverConfiguration;

  public static final String SERIALIZED_NAME_SYSTEM_TYPE = "SystemType";
  @SerializedName(SERIALIZED_NAME_SYSTEM_TYPE)
  private DiscoverySystemType systemType;

  public static final String SERIALIZED_NAME_AGENT_ARNS = "AgentArns";
  @SerializedName(SERIALIZED_NAME_AGENT_ARNS)
  private List agentArns;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE = "ErrorMessage";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE)
  private String errorMessage;

  public static final String SERIALIZED_NAME_CONNECTIVITY_STATUS = "ConnectivityStatus";
  @SerializedName(SERIALIZED_NAME_CONNECTIVITY_STATUS)
  private StorageSystemConnectivityStatus connectivityStatus;

  public static final String SERIALIZED_NAME_CLOUD_WATCH_LOG_GROUP_ARN = "CloudWatchLogGroupArn";
  @SerializedName(SERIALIZED_NAME_CLOUD_WATCH_LOG_GROUP_ARN)
  private String cloudWatchLogGroupArn;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_SECRETS_MANAGER_ARN = "SecretsManagerArn";
  @SerializedName(SERIALIZED_NAME_SECRETS_MANAGER_ARN)
  private String secretsManagerArn;

  public DescribeStorageSystemResponse() {
  }

  public DescribeStorageSystemResponse storageSystemArn(String storageSystemArn) {
    this.storageSystemArn = storageSystemArn;
    return this;
  }

  /**
   * Get storageSystemArn
   * @return storageSystemArn
   */
  @javax.annotation.Nullable
  public String getStorageSystemArn() {
    return storageSystemArn;
  }

  public void setStorageSystemArn(String storageSystemArn) {
    this.storageSystemArn = storageSystemArn;
  }


  public DescribeStorageSystemResponse serverConfiguration(DescribeStorageSystemResponseServerConfiguration serverConfiguration) {
    this.serverConfiguration = serverConfiguration;
    return this;
  }

  /**
   * Get serverConfiguration
   * @return serverConfiguration
   */
  @javax.annotation.Nullable
  public DescribeStorageSystemResponseServerConfiguration getServerConfiguration() {
    return serverConfiguration;
  }

  public void setServerConfiguration(DescribeStorageSystemResponseServerConfiguration serverConfiguration) {
    this.serverConfiguration = serverConfiguration;
  }


  public DescribeStorageSystemResponse systemType(DiscoverySystemType systemType) {
    this.systemType = systemType;
    return this;
  }

  /**
   * Get systemType
   * @return systemType
   */
  @javax.annotation.Nullable
  public DiscoverySystemType getSystemType() {
    return systemType;
  }

  public void setSystemType(DiscoverySystemType systemType) {
    this.systemType = systemType;
  }


  public DescribeStorageSystemResponse agentArns(List agentArns) {
    this.agentArns = agentArns;
    return this;
  }

  /**
   * Get agentArns
   * @return agentArns
   */
  @javax.annotation.Nullable
  public List getAgentArns() {
    return agentArns;
  }

  public void setAgentArns(List agentArns) {
    this.agentArns = agentArns;
  }


  public DescribeStorageSystemResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public DescribeStorageSystemResponse errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * Get errorMessage
   * @return errorMessage
   */
  @javax.annotation.Nullable
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  public DescribeStorageSystemResponse connectivityStatus(StorageSystemConnectivityStatus connectivityStatus) {
    this.connectivityStatus = connectivityStatus;
    return this;
  }

  /**
   * Get connectivityStatus
   * @return connectivityStatus
   */
  @javax.annotation.Nullable
  public StorageSystemConnectivityStatus getConnectivityStatus() {
    return connectivityStatus;
  }

  public void setConnectivityStatus(StorageSystemConnectivityStatus connectivityStatus) {
    this.connectivityStatus = connectivityStatus;
  }


  public DescribeStorageSystemResponse cloudWatchLogGroupArn(String cloudWatchLogGroupArn) {
    this.cloudWatchLogGroupArn = cloudWatchLogGroupArn;
    return this;
  }

  /**
   * Get cloudWatchLogGroupArn
   * @return cloudWatchLogGroupArn
   */
  @javax.annotation.Nullable
  public String getCloudWatchLogGroupArn() {
    return cloudWatchLogGroupArn;
  }

  public void setCloudWatchLogGroupArn(String cloudWatchLogGroupArn) {
    this.cloudWatchLogGroupArn = cloudWatchLogGroupArn;
  }


  public DescribeStorageSystemResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeStorageSystemResponse secretsManagerArn(String secretsManagerArn) {
    this.secretsManagerArn = secretsManagerArn;
    return this;
  }

  /**
   * Get secretsManagerArn
   * @return secretsManagerArn
   */
  @javax.annotation.Nullable
  public String getSecretsManagerArn() {
    return secretsManagerArn;
  }

  public void setSecretsManagerArn(String secretsManagerArn) {
    this.secretsManagerArn = secretsManagerArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeStorageSystemResponse describeStorageSystemResponse = (DescribeStorageSystemResponse) o;
    return Objects.equals(this.storageSystemArn, describeStorageSystemResponse.storageSystemArn) &&
        Objects.equals(this.serverConfiguration, describeStorageSystemResponse.serverConfiguration) &&
        Objects.equals(this.systemType, describeStorageSystemResponse.systemType) &&
        Objects.equals(this.agentArns, describeStorageSystemResponse.agentArns) &&
        Objects.equals(this.name, describeStorageSystemResponse.name) &&
        Objects.equals(this.errorMessage, describeStorageSystemResponse.errorMessage) &&
        Objects.equals(this.connectivityStatus, describeStorageSystemResponse.connectivityStatus) &&
        Objects.equals(this.cloudWatchLogGroupArn, describeStorageSystemResponse.cloudWatchLogGroupArn) &&
        Objects.equals(this.creationTime, describeStorageSystemResponse.creationTime) &&
        Objects.equals(this.secretsManagerArn, describeStorageSystemResponse.secretsManagerArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storageSystemArn, serverConfiguration, systemType, agentArns, name, errorMessage, connectivityStatus, cloudWatchLogGroupArn, creationTime, secretsManagerArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeStorageSystemResponse {\n");
    sb.append("    storageSystemArn: ").append(toIndentedString(storageSystemArn)).append("\n");
    sb.append("    serverConfiguration: ").append(toIndentedString(serverConfiguration)).append("\n");
    sb.append("    systemType: ").append(toIndentedString(systemType)).append("\n");
    sb.append("    agentArns: ").append(toIndentedString(agentArns)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    connectivityStatus: ").append(toIndentedString(connectivityStatus)).append("\n");
    sb.append("    cloudWatchLogGroupArn: ").append(toIndentedString(cloudWatchLogGroupArn)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    secretsManagerArn: ").append(toIndentedString(secretsManagerArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("StorageSystemArn");
    openapiFields.add("ServerConfiguration");
    openapiFields.add("SystemType");
    openapiFields.add("AgentArns");
    openapiFields.add("Name");
    openapiFields.add("ErrorMessage");
    openapiFields.add("ConnectivityStatus");
    openapiFields.add("CloudWatchLogGroupArn");
    openapiFields.add("CreationTime");
    openapiFields.add("SecretsManagerArn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeStorageSystemResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeStorageSystemResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeStorageSystemResponse is not found in the empty JSON string", DescribeStorageSystemResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeStorageSystemResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeStorageSystemResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `StorageSystemArn`
      if (jsonObj.get("StorageSystemArn") != null && !jsonObj.get("StorageSystemArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StorageSystemArn"));
      }
      // validate the optional field `ServerConfiguration`
      if (jsonObj.get("ServerConfiguration") != null && !jsonObj.get("ServerConfiguration").isJsonNull()) {
        DescribeStorageSystemResponseServerConfiguration.validateJsonElement(jsonObj.get("ServerConfiguration"));
      }
      // validate the optional field `SystemType`
      if (jsonObj.get("SystemType") != null && !jsonObj.get("SystemType").isJsonNull()) {
        DiscoverySystemType.validateJsonElement(jsonObj.get("SystemType"));
      }
      // validate the optional field `AgentArns`
      if (jsonObj.get("AgentArns") != null && !jsonObj.get("AgentArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("AgentArns"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `ErrorMessage`
      if (jsonObj.get("ErrorMessage") != null && !jsonObj.get("ErrorMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ErrorMessage"));
      }
      // validate the optional field `ConnectivityStatus`
      if (jsonObj.get("ConnectivityStatus") != null && !jsonObj.get("ConnectivityStatus").isJsonNull()) {
        StorageSystemConnectivityStatus.validateJsonElement(jsonObj.get("ConnectivityStatus"));
      }
      // validate the optional field `CloudWatchLogGroupArn`
      if (jsonObj.get("CloudWatchLogGroupArn") != null && !jsonObj.get("CloudWatchLogGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CloudWatchLogGroupArn"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `SecretsManagerArn`
      if (jsonObj.get("SecretsManagerArn") != null && !jsonObj.get("SecretsManagerArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SecretsManagerArn"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeStorageSystemResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeStorageSystemResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeStorageSystemResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeStorageSystemResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeStorageSystemResponse>() {
           @Override
           public void write(JsonWriter out, DescribeStorageSystemResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeStorageSystemResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeStorageSystemResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeStorageSystemResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeStorageSystemResponse
   */
  public static DescribeStorageSystemResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeStorageSystemResponse.class);
  }

  /**
   * Convert an instance of DescribeStorageSystemResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

