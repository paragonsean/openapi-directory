/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DescribeTaskResponseOptions;
import org.openapitools.client.model.DescribeTaskResponseSchedule;
import org.openapitools.client.model.TaskStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeTaskResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeTaskResponse {
  public static final String SERIALIZED_NAME_TASK_ARN = "TaskArn";
  @SerializedName(SERIALIZED_NAME_TASK_ARN)
  private String taskArn;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private TaskStatus status;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CURRENT_TASK_EXECUTION_ARN = "CurrentTaskExecutionArn";
  @SerializedName(SERIALIZED_NAME_CURRENT_TASK_EXECUTION_ARN)
  private String currentTaskExecutionArn;

  public static final String SERIALIZED_NAME_SOURCE_LOCATION_ARN = "SourceLocationArn";
  @SerializedName(SERIALIZED_NAME_SOURCE_LOCATION_ARN)
  private String sourceLocationArn;

  public static final String SERIALIZED_NAME_DESTINATION_LOCATION_ARN = "DestinationLocationArn";
  @SerializedName(SERIALIZED_NAME_DESTINATION_LOCATION_ARN)
  private String destinationLocationArn;

  public static final String SERIALIZED_NAME_CLOUD_WATCH_LOG_GROUP_ARN = "CloudWatchLogGroupArn";
  @SerializedName(SERIALIZED_NAME_CLOUD_WATCH_LOG_GROUP_ARN)
  private String cloudWatchLogGroupArn;

  public static final String SERIALIZED_NAME_SOURCE_NETWORK_INTERFACE_ARNS = "SourceNetworkInterfaceArns";
  @SerializedName(SERIALIZED_NAME_SOURCE_NETWORK_INTERFACE_ARNS)
  private List sourceNetworkInterfaceArns;

  public static final String SERIALIZED_NAME_DESTINATION_NETWORK_INTERFACE_ARNS = "DestinationNetworkInterfaceArns";
  @SerializedName(SERIALIZED_NAME_DESTINATION_NETWORK_INTERFACE_ARNS)
  private List destinationNetworkInterfaceArns;

  public static final String SERIALIZED_NAME_OPTIONS = "Options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private DescribeTaskResponseOptions options;

  public static final String SERIALIZED_NAME_EXCLUDES = "Excludes";
  @SerializedName(SERIALIZED_NAME_EXCLUDES)
  private List excludes;

  public static final String SERIALIZED_NAME_SCHEDULE = "Schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private DescribeTaskResponseSchedule schedule;

  public static final String SERIALIZED_NAME_ERROR_CODE = "ErrorCode";
  @SerializedName(SERIALIZED_NAME_ERROR_CODE)
  private String errorCode;

  public static final String SERIALIZED_NAME_ERROR_DETAIL = "ErrorDetail";
  @SerializedName(SERIALIZED_NAME_ERROR_DETAIL)
  private String errorDetail;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_INCLUDES = "Includes";
  @SerializedName(SERIALIZED_NAME_INCLUDES)
  private List includes;

  public DescribeTaskResponse() {
  }

  public DescribeTaskResponse taskArn(String taskArn) {
    this.taskArn = taskArn;
    return this;
  }

  /**
   * Get taskArn
   * @return taskArn
   */
  @javax.annotation.Nullable
  public String getTaskArn() {
    return taskArn;
  }

  public void setTaskArn(String taskArn) {
    this.taskArn = taskArn;
  }


  public DescribeTaskResponse status(TaskStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public TaskStatus getStatus() {
    return status;
  }

  public void setStatus(TaskStatus status) {
    this.status = status;
  }


  public DescribeTaskResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public DescribeTaskResponse currentTaskExecutionArn(String currentTaskExecutionArn) {
    this.currentTaskExecutionArn = currentTaskExecutionArn;
    return this;
  }

  /**
   * Get currentTaskExecutionArn
   * @return currentTaskExecutionArn
   */
  @javax.annotation.Nullable
  public String getCurrentTaskExecutionArn() {
    return currentTaskExecutionArn;
  }

  public void setCurrentTaskExecutionArn(String currentTaskExecutionArn) {
    this.currentTaskExecutionArn = currentTaskExecutionArn;
  }


  public DescribeTaskResponse sourceLocationArn(String sourceLocationArn) {
    this.sourceLocationArn = sourceLocationArn;
    return this;
  }

  /**
   * Get sourceLocationArn
   * @return sourceLocationArn
   */
  @javax.annotation.Nullable
  public String getSourceLocationArn() {
    return sourceLocationArn;
  }

  public void setSourceLocationArn(String sourceLocationArn) {
    this.sourceLocationArn = sourceLocationArn;
  }


  public DescribeTaskResponse destinationLocationArn(String destinationLocationArn) {
    this.destinationLocationArn = destinationLocationArn;
    return this;
  }

  /**
   * Get destinationLocationArn
   * @return destinationLocationArn
   */
  @javax.annotation.Nullable
  public String getDestinationLocationArn() {
    return destinationLocationArn;
  }

  public void setDestinationLocationArn(String destinationLocationArn) {
    this.destinationLocationArn = destinationLocationArn;
  }


  public DescribeTaskResponse cloudWatchLogGroupArn(String cloudWatchLogGroupArn) {
    this.cloudWatchLogGroupArn = cloudWatchLogGroupArn;
    return this;
  }

  /**
   * Get cloudWatchLogGroupArn
   * @return cloudWatchLogGroupArn
   */
  @javax.annotation.Nullable
  public String getCloudWatchLogGroupArn() {
    return cloudWatchLogGroupArn;
  }

  public void setCloudWatchLogGroupArn(String cloudWatchLogGroupArn) {
    this.cloudWatchLogGroupArn = cloudWatchLogGroupArn;
  }


  public DescribeTaskResponse sourceNetworkInterfaceArns(List sourceNetworkInterfaceArns) {
    this.sourceNetworkInterfaceArns = sourceNetworkInterfaceArns;
    return this;
  }

  /**
   * Get sourceNetworkInterfaceArns
   * @return sourceNetworkInterfaceArns
   */
  @javax.annotation.Nullable
  public List getSourceNetworkInterfaceArns() {
    return sourceNetworkInterfaceArns;
  }

  public void setSourceNetworkInterfaceArns(List sourceNetworkInterfaceArns) {
    this.sourceNetworkInterfaceArns = sourceNetworkInterfaceArns;
  }


  public DescribeTaskResponse destinationNetworkInterfaceArns(List destinationNetworkInterfaceArns) {
    this.destinationNetworkInterfaceArns = destinationNetworkInterfaceArns;
    return this;
  }

  /**
   * Get destinationNetworkInterfaceArns
   * @return destinationNetworkInterfaceArns
   */
  @javax.annotation.Nullable
  public List getDestinationNetworkInterfaceArns() {
    return destinationNetworkInterfaceArns;
  }

  public void setDestinationNetworkInterfaceArns(List destinationNetworkInterfaceArns) {
    this.destinationNetworkInterfaceArns = destinationNetworkInterfaceArns;
  }


  public DescribeTaskResponse options(DescribeTaskResponseOptions options) {
    this.options = options;
    return this;
  }

  /**
   * Get options
   * @return options
   */
  @javax.annotation.Nullable
  public DescribeTaskResponseOptions getOptions() {
    return options;
  }

  public void setOptions(DescribeTaskResponseOptions options) {
    this.options = options;
  }


  public DescribeTaskResponse excludes(List excludes) {
    this.excludes = excludes;
    return this;
  }

  /**
   * Get excludes
   * @return excludes
   */
  @javax.annotation.Nullable
  public List getExcludes() {
    return excludes;
  }

  public void setExcludes(List excludes) {
    this.excludes = excludes;
  }


  public DescribeTaskResponse schedule(DescribeTaskResponseSchedule schedule) {
    this.schedule = schedule;
    return this;
  }

  /**
   * Get schedule
   * @return schedule
   */
  @javax.annotation.Nullable
  public DescribeTaskResponseSchedule getSchedule() {
    return schedule;
  }

  public void setSchedule(DescribeTaskResponseSchedule schedule) {
    this.schedule = schedule;
  }


  public DescribeTaskResponse errorCode(String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

  /**
   * Get errorCode
   * @return errorCode
   */
  @javax.annotation.Nullable
  public String getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }


  public DescribeTaskResponse errorDetail(String errorDetail) {
    this.errorDetail = errorDetail;
    return this;
  }

  /**
   * Get errorDetail
   * @return errorDetail
   */
  @javax.annotation.Nullable
  public String getErrorDetail() {
    return errorDetail;
  }

  public void setErrorDetail(String errorDetail) {
    this.errorDetail = errorDetail;
  }


  public DescribeTaskResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeTaskResponse includes(List includes) {
    this.includes = includes;
    return this;
  }

  /**
   * Get includes
   * @return includes
   */
  @javax.annotation.Nullable
  public List getIncludes() {
    return includes;
  }

  public void setIncludes(List includes) {
    this.includes = includes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeTaskResponse describeTaskResponse = (DescribeTaskResponse) o;
    return Objects.equals(this.taskArn, describeTaskResponse.taskArn) &&
        Objects.equals(this.status, describeTaskResponse.status) &&
        Objects.equals(this.name, describeTaskResponse.name) &&
        Objects.equals(this.currentTaskExecutionArn, describeTaskResponse.currentTaskExecutionArn) &&
        Objects.equals(this.sourceLocationArn, describeTaskResponse.sourceLocationArn) &&
        Objects.equals(this.destinationLocationArn, describeTaskResponse.destinationLocationArn) &&
        Objects.equals(this.cloudWatchLogGroupArn, describeTaskResponse.cloudWatchLogGroupArn) &&
        Objects.equals(this.sourceNetworkInterfaceArns, describeTaskResponse.sourceNetworkInterfaceArns) &&
        Objects.equals(this.destinationNetworkInterfaceArns, describeTaskResponse.destinationNetworkInterfaceArns) &&
        Objects.equals(this.options, describeTaskResponse.options) &&
        Objects.equals(this.excludes, describeTaskResponse.excludes) &&
        Objects.equals(this.schedule, describeTaskResponse.schedule) &&
        Objects.equals(this.errorCode, describeTaskResponse.errorCode) &&
        Objects.equals(this.errorDetail, describeTaskResponse.errorDetail) &&
        Objects.equals(this.creationTime, describeTaskResponse.creationTime) &&
        Objects.equals(this.includes, describeTaskResponse.includes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taskArn, status, name, currentTaskExecutionArn, sourceLocationArn, destinationLocationArn, cloudWatchLogGroupArn, sourceNetworkInterfaceArns, destinationNetworkInterfaceArns, options, excludes, schedule, errorCode, errorDetail, creationTime, includes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeTaskResponse {\n");
    sb.append("    taskArn: ").append(toIndentedString(taskArn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    currentTaskExecutionArn: ").append(toIndentedString(currentTaskExecutionArn)).append("\n");
    sb.append("    sourceLocationArn: ").append(toIndentedString(sourceLocationArn)).append("\n");
    sb.append("    destinationLocationArn: ").append(toIndentedString(destinationLocationArn)).append("\n");
    sb.append("    cloudWatchLogGroupArn: ").append(toIndentedString(cloudWatchLogGroupArn)).append("\n");
    sb.append("    sourceNetworkInterfaceArns: ").append(toIndentedString(sourceNetworkInterfaceArns)).append("\n");
    sb.append("    destinationNetworkInterfaceArns: ").append(toIndentedString(destinationNetworkInterfaceArns)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    excludes: ").append(toIndentedString(excludes)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorDetail: ").append(toIndentedString(errorDetail)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    includes: ").append(toIndentedString(includes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TaskArn");
    openapiFields.add("Status");
    openapiFields.add("Name");
    openapiFields.add("CurrentTaskExecutionArn");
    openapiFields.add("SourceLocationArn");
    openapiFields.add("DestinationLocationArn");
    openapiFields.add("CloudWatchLogGroupArn");
    openapiFields.add("SourceNetworkInterfaceArns");
    openapiFields.add("DestinationNetworkInterfaceArns");
    openapiFields.add("Options");
    openapiFields.add("Excludes");
    openapiFields.add("Schedule");
    openapiFields.add("ErrorCode");
    openapiFields.add("ErrorDetail");
    openapiFields.add("CreationTime");
    openapiFields.add("Includes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeTaskResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeTaskResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeTaskResponse is not found in the empty JSON string", DescribeTaskResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeTaskResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeTaskResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `TaskArn`
      if (jsonObj.get("TaskArn") != null && !jsonObj.get("TaskArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TaskArn"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        TaskStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `CurrentTaskExecutionArn`
      if (jsonObj.get("CurrentTaskExecutionArn") != null && !jsonObj.get("CurrentTaskExecutionArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CurrentTaskExecutionArn"));
      }
      // validate the optional field `SourceLocationArn`
      if (jsonObj.get("SourceLocationArn") != null && !jsonObj.get("SourceLocationArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SourceLocationArn"));
      }
      // validate the optional field `DestinationLocationArn`
      if (jsonObj.get("DestinationLocationArn") != null && !jsonObj.get("DestinationLocationArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DestinationLocationArn"));
      }
      // validate the optional field `CloudWatchLogGroupArn`
      if (jsonObj.get("CloudWatchLogGroupArn") != null && !jsonObj.get("CloudWatchLogGroupArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CloudWatchLogGroupArn"));
      }
      // validate the optional field `SourceNetworkInterfaceArns`
      if (jsonObj.get("SourceNetworkInterfaceArns") != null && !jsonObj.get("SourceNetworkInterfaceArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SourceNetworkInterfaceArns"));
      }
      // validate the optional field `DestinationNetworkInterfaceArns`
      if (jsonObj.get("DestinationNetworkInterfaceArns") != null && !jsonObj.get("DestinationNetworkInterfaceArns").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("DestinationNetworkInterfaceArns"));
      }
      // validate the optional field `Options`
      if (jsonObj.get("Options") != null && !jsonObj.get("Options").isJsonNull()) {
        DescribeTaskResponseOptions.validateJsonElement(jsonObj.get("Options"));
      }
      // validate the optional field `Excludes`
      if (jsonObj.get("Excludes") != null && !jsonObj.get("Excludes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Excludes"));
      }
      // validate the optional field `Schedule`
      if (jsonObj.get("Schedule") != null && !jsonObj.get("Schedule").isJsonNull()) {
        DescribeTaskResponseSchedule.validateJsonElement(jsonObj.get("Schedule"));
      }
      // validate the optional field `ErrorCode`
      if (jsonObj.get("ErrorCode") != null && !jsonObj.get("ErrorCode").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ErrorCode"));
      }
      // validate the optional field `ErrorDetail`
      if (jsonObj.get("ErrorDetail") != null && !jsonObj.get("ErrorDetail").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ErrorDetail"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `Includes`
      if (jsonObj.get("Includes") != null && !jsonObj.get("Includes").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Includes"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeTaskResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeTaskResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeTaskResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeTaskResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeTaskResponse>() {
           @Override
           public void write(JsonWriter out, DescribeTaskResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeTaskResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeTaskResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeTaskResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeTaskResponse
   */
  public static DescribeTaskResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeTaskResponse.class);
  }

  /**
   * Convert an instance of DescribeTaskResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

