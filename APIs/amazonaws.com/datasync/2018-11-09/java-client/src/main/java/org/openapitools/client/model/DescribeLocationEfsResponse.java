/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.Ec2Config;
import org.openapitools.client.model.EfsInTransitEncryption;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeLocationEfsResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeLocationEfsResponse {
  public static final String SERIALIZED_NAME_LOCATION_ARN = "LocationArn";
  @SerializedName(SERIALIZED_NAME_LOCATION_ARN)
  private String locationArn;

  public static final String SERIALIZED_NAME_LOCATION_URI = "LocationUri";
  @SerializedName(SERIALIZED_NAME_LOCATION_URI)
  private String locationUri;

  public static final String SERIALIZED_NAME_EC2_CONFIG = "Ec2Config";
  @SerializedName(SERIALIZED_NAME_EC2_CONFIG)
  private Ec2Config ec2Config;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_ACCESS_POINT_ARN = "AccessPointArn";
  @SerializedName(SERIALIZED_NAME_ACCESS_POINT_ARN)
  private String accessPointArn;

  public static final String SERIALIZED_NAME_FILE_SYSTEM_ACCESS_ROLE_ARN = "FileSystemAccessRoleArn";
  @SerializedName(SERIALIZED_NAME_FILE_SYSTEM_ACCESS_ROLE_ARN)
  private String fileSystemAccessRoleArn;

  public static final String SERIALIZED_NAME_IN_TRANSIT_ENCRYPTION = "InTransitEncryption";
  @SerializedName(SERIALIZED_NAME_IN_TRANSIT_ENCRYPTION)
  private EfsInTransitEncryption inTransitEncryption;

  public DescribeLocationEfsResponse() {
  }

  public DescribeLocationEfsResponse locationArn(String locationArn) {
    this.locationArn = locationArn;
    return this;
  }

  /**
   * Get locationArn
   * @return locationArn
   */
  @javax.annotation.Nullable
  public String getLocationArn() {
    return locationArn;
  }

  public void setLocationArn(String locationArn) {
    this.locationArn = locationArn;
  }


  public DescribeLocationEfsResponse locationUri(String locationUri) {
    this.locationUri = locationUri;
    return this;
  }

  /**
   * Get locationUri
   * @return locationUri
   */
  @javax.annotation.Nullable
  public String getLocationUri() {
    return locationUri;
  }

  public void setLocationUri(String locationUri) {
    this.locationUri = locationUri;
  }


  public DescribeLocationEfsResponse ec2Config(Ec2Config ec2Config) {
    this.ec2Config = ec2Config;
    return this;
  }

  /**
   * Get ec2Config
   * @return ec2Config
   */
  @javax.annotation.Nullable
  public Ec2Config getEc2Config() {
    return ec2Config;
  }

  public void setEc2Config(Ec2Config ec2Config) {
    this.ec2Config = ec2Config;
  }


  public DescribeLocationEfsResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeLocationEfsResponse accessPointArn(String accessPointArn) {
    this.accessPointArn = accessPointArn;
    return this;
  }

  /**
   * Get accessPointArn
   * @return accessPointArn
   */
  @javax.annotation.Nullable
  public String getAccessPointArn() {
    return accessPointArn;
  }

  public void setAccessPointArn(String accessPointArn) {
    this.accessPointArn = accessPointArn;
  }


  public DescribeLocationEfsResponse fileSystemAccessRoleArn(String fileSystemAccessRoleArn) {
    this.fileSystemAccessRoleArn = fileSystemAccessRoleArn;
    return this;
  }

  /**
   * Get fileSystemAccessRoleArn
   * @return fileSystemAccessRoleArn
   */
  @javax.annotation.Nullable
  public String getFileSystemAccessRoleArn() {
    return fileSystemAccessRoleArn;
  }

  public void setFileSystemAccessRoleArn(String fileSystemAccessRoleArn) {
    this.fileSystemAccessRoleArn = fileSystemAccessRoleArn;
  }


  public DescribeLocationEfsResponse inTransitEncryption(EfsInTransitEncryption inTransitEncryption) {
    this.inTransitEncryption = inTransitEncryption;
    return this;
  }

  /**
   * Get inTransitEncryption
   * @return inTransitEncryption
   */
  @javax.annotation.Nullable
  public EfsInTransitEncryption getInTransitEncryption() {
    return inTransitEncryption;
  }

  public void setInTransitEncryption(EfsInTransitEncryption inTransitEncryption) {
    this.inTransitEncryption = inTransitEncryption;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeLocationEfsResponse describeLocationEfsResponse = (DescribeLocationEfsResponse) o;
    return Objects.equals(this.locationArn, describeLocationEfsResponse.locationArn) &&
        Objects.equals(this.locationUri, describeLocationEfsResponse.locationUri) &&
        Objects.equals(this.ec2Config, describeLocationEfsResponse.ec2Config) &&
        Objects.equals(this.creationTime, describeLocationEfsResponse.creationTime) &&
        Objects.equals(this.accessPointArn, describeLocationEfsResponse.accessPointArn) &&
        Objects.equals(this.fileSystemAccessRoleArn, describeLocationEfsResponse.fileSystemAccessRoleArn) &&
        Objects.equals(this.inTransitEncryption, describeLocationEfsResponse.inTransitEncryption);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationArn, locationUri, ec2Config, creationTime, accessPointArn, fileSystemAccessRoleArn, inTransitEncryption);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeLocationEfsResponse {\n");
    sb.append("    locationArn: ").append(toIndentedString(locationArn)).append("\n");
    sb.append("    locationUri: ").append(toIndentedString(locationUri)).append("\n");
    sb.append("    ec2Config: ").append(toIndentedString(ec2Config)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    accessPointArn: ").append(toIndentedString(accessPointArn)).append("\n");
    sb.append("    fileSystemAccessRoleArn: ").append(toIndentedString(fileSystemAccessRoleArn)).append("\n");
    sb.append("    inTransitEncryption: ").append(toIndentedString(inTransitEncryption)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("LocationArn");
    openapiFields.add("LocationUri");
    openapiFields.add("Ec2Config");
    openapiFields.add("CreationTime");
    openapiFields.add("AccessPointArn");
    openapiFields.add("FileSystemAccessRoleArn");
    openapiFields.add("InTransitEncryption");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeLocationEfsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeLocationEfsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeLocationEfsResponse is not found in the empty JSON string", DescribeLocationEfsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeLocationEfsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeLocationEfsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `LocationArn`
      if (jsonObj.get("LocationArn") != null && !jsonObj.get("LocationArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LocationArn"));
      }
      // validate the optional field `LocationUri`
      if (jsonObj.get("LocationUri") != null && !jsonObj.get("LocationUri").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LocationUri"));
      }
      // validate the optional field `Ec2Config`
      if (jsonObj.get("Ec2Config") != null && !jsonObj.get("Ec2Config").isJsonNull()) {
        Ec2Config.validateJsonElement(jsonObj.get("Ec2Config"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `AccessPointArn`
      if (jsonObj.get("AccessPointArn") != null && !jsonObj.get("AccessPointArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AccessPointArn"));
      }
      // validate the optional field `FileSystemAccessRoleArn`
      if (jsonObj.get("FileSystemAccessRoleArn") != null && !jsonObj.get("FileSystemAccessRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("FileSystemAccessRoleArn"));
      }
      // validate the optional field `InTransitEncryption`
      if (jsonObj.get("InTransitEncryption") != null && !jsonObj.get("InTransitEncryption").isJsonNull()) {
        EfsInTransitEncryption.validateJsonElement(jsonObj.get("InTransitEncryption"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeLocationEfsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeLocationEfsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeLocationEfsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeLocationEfsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeLocationEfsResponse>() {
           @Override
           public void write(JsonWriter out, DescribeLocationEfsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeLocationEfsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeLocationEfsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeLocationEfsResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeLocationEfsResponse
   */
  public static DescribeLocationEfsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeLocationEfsResponse.class);
  }

  /**
   * Convert an instance of DescribeLocationEfsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

