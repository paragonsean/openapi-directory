/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NetAppONTAPClusterMaxP95Performance;
import org.openapitools.client.model.RecommendationStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The information that DataSync Discovery collects about an on-premises storage system cluster.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NetAppONTAPCluster {
  public static final String SERIALIZED_NAME_CIFS_SHARE_COUNT = "CifsShareCount";
  @SerializedName(SERIALIZED_NAME_CIFS_SHARE_COUNT)
  private Integer cifsShareCount;

  public static final String SERIALIZED_NAME_NFS_EXPORTED_VOLUMES = "NfsExportedVolumes";
  @SerializedName(SERIALIZED_NAME_NFS_EXPORTED_VOLUMES)
  private Integer nfsExportedVolumes;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "ResourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_CLUSTER_NAME = "ClusterName";
  @SerializedName(SERIALIZED_NAME_CLUSTER_NAME)
  private String clusterName;

  public static final String SERIALIZED_NAME_MAX_P95_PERFORMANCE = "MaxP95Performance";
  @SerializedName(SERIALIZED_NAME_MAX_P95_PERFORMANCE)
  private NetAppONTAPClusterMaxP95Performance maxP95Performance;

  public static final String SERIALIZED_NAME_CLUSTER_BLOCK_STORAGE_SIZE = "ClusterBlockStorageSize";
  @SerializedName(SERIALIZED_NAME_CLUSTER_BLOCK_STORAGE_SIZE)
  private Integer clusterBlockStorageSize;

  public static final String SERIALIZED_NAME_CLUSTER_BLOCK_STORAGE_USED = "ClusterBlockStorageUsed";
  @SerializedName(SERIALIZED_NAME_CLUSTER_BLOCK_STORAGE_USED)
  private Integer clusterBlockStorageUsed;

  public static final String SERIALIZED_NAME_CLUSTER_BLOCK_STORAGE_LOGICAL_USED = "ClusterBlockStorageLogicalUsed";
  @SerializedName(SERIALIZED_NAME_CLUSTER_BLOCK_STORAGE_LOGICAL_USED)
  private Integer clusterBlockStorageLogicalUsed;

  public static final String SERIALIZED_NAME_RECOMMENDATIONS = "Recommendations";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATIONS)
  private List recommendations;

  public static final String SERIALIZED_NAME_RECOMMENDATION_STATUS = "RecommendationStatus";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATION_STATUS)
  private RecommendationStatus recommendationStatus;

  public static final String SERIALIZED_NAME_LUN_COUNT = "LunCount";
  @SerializedName(SERIALIZED_NAME_LUN_COUNT)
  private Integer lunCount;

  public static final String SERIALIZED_NAME_CLUSTER_CLOUD_STORAGE_USED = "ClusterCloudStorageUsed";
  @SerializedName(SERIALIZED_NAME_CLUSTER_CLOUD_STORAGE_USED)
  private Integer clusterCloudStorageUsed;

  public NetAppONTAPCluster() {
  }

  public NetAppONTAPCluster cifsShareCount(Integer cifsShareCount) {
    this.cifsShareCount = cifsShareCount;
    return this;
  }

  /**
   * Get cifsShareCount
   * @return cifsShareCount
   */
  @javax.annotation.Nullable
  public Integer getCifsShareCount() {
    return cifsShareCount;
  }

  public void setCifsShareCount(Integer cifsShareCount) {
    this.cifsShareCount = cifsShareCount;
  }


  public NetAppONTAPCluster nfsExportedVolumes(Integer nfsExportedVolumes) {
    this.nfsExportedVolumes = nfsExportedVolumes;
    return this;
  }

  /**
   * Get nfsExportedVolumes
   * @return nfsExportedVolumes
   */
  @javax.annotation.Nullable
  public Integer getNfsExportedVolumes() {
    return nfsExportedVolumes;
  }

  public void setNfsExportedVolumes(Integer nfsExportedVolumes) {
    this.nfsExportedVolumes = nfsExportedVolumes;
  }


  public NetAppONTAPCluster resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nullable
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public NetAppONTAPCluster clusterName(String clusterName) {
    this.clusterName = clusterName;
    return this;
  }

  /**
   * Get clusterName
   * @return clusterName
   */
  @javax.annotation.Nullable
  public String getClusterName() {
    return clusterName;
  }

  public void setClusterName(String clusterName) {
    this.clusterName = clusterName;
  }


  public NetAppONTAPCluster maxP95Performance(NetAppONTAPClusterMaxP95Performance maxP95Performance) {
    this.maxP95Performance = maxP95Performance;
    return this;
  }

  /**
   * Get maxP95Performance
   * @return maxP95Performance
   */
  @javax.annotation.Nullable
  public NetAppONTAPClusterMaxP95Performance getMaxP95Performance() {
    return maxP95Performance;
  }

  public void setMaxP95Performance(NetAppONTAPClusterMaxP95Performance maxP95Performance) {
    this.maxP95Performance = maxP95Performance;
  }


  public NetAppONTAPCluster clusterBlockStorageSize(Integer clusterBlockStorageSize) {
    this.clusterBlockStorageSize = clusterBlockStorageSize;
    return this;
  }

  /**
   * Get clusterBlockStorageSize
   * @return clusterBlockStorageSize
   */
  @javax.annotation.Nullable
  public Integer getClusterBlockStorageSize() {
    return clusterBlockStorageSize;
  }

  public void setClusterBlockStorageSize(Integer clusterBlockStorageSize) {
    this.clusterBlockStorageSize = clusterBlockStorageSize;
  }


  public NetAppONTAPCluster clusterBlockStorageUsed(Integer clusterBlockStorageUsed) {
    this.clusterBlockStorageUsed = clusterBlockStorageUsed;
    return this;
  }

  /**
   * Get clusterBlockStorageUsed
   * @return clusterBlockStorageUsed
   */
  @javax.annotation.Nullable
  public Integer getClusterBlockStorageUsed() {
    return clusterBlockStorageUsed;
  }

  public void setClusterBlockStorageUsed(Integer clusterBlockStorageUsed) {
    this.clusterBlockStorageUsed = clusterBlockStorageUsed;
  }


  public NetAppONTAPCluster clusterBlockStorageLogicalUsed(Integer clusterBlockStorageLogicalUsed) {
    this.clusterBlockStorageLogicalUsed = clusterBlockStorageLogicalUsed;
    return this;
  }

  /**
   * Get clusterBlockStorageLogicalUsed
   * @return clusterBlockStorageLogicalUsed
   */
  @javax.annotation.Nullable
  public Integer getClusterBlockStorageLogicalUsed() {
    return clusterBlockStorageLogicalUsed;
  }

  public void setClusterBlockStorageLogicalUsed(Integer clusterBlockStorageLogicalUsed) {
    this.clusterBlockStorageLogicalUsed = clusterBlockStorageLogicalUsed;
  }


  public NetAppONTAPCluster recommendations(List recommendations) {
    this.recommendations = recommendations;
    return this;
  }

  /**
   * Get recommendations
   * @return recommendations
   */
  @javax.annotation.Nullable
  public List getRecommendations() {
    return recommendations;
  }

  public void setRecommendations(List recommendations) {
    this.recommendations = recommendations;
  }


  public NetAppONTAPCluster recommendationStatus(RecommendationStatus recommendationStatus) {
    this.recommendationStatus = recommendationStatus;
    return this;
  }

  /**
   * Get recommendationStatus
   * @return recommendationStatus
   */
  @javax.annotation.Nullable
  public RecommendationStatus getRecommendationStatus() {
    return recommendationStatus;
  }

  public void setRecommendationStatus(RecommendationStatus recommendationStatus) {
    this.recommendationStatus = recommendationStatus;
  }


  public NetAppONTAPCluster lunCount(Integer lunCount) {
    this.lunCount = lunCount;
    return this;
  }

  /**
   * Get lunCount
   * @return lunCount
   */
  @javax.annotation.Nullable
  public Integer getLunCount() {
    return lunCount;
  }

  public void setLunCount(Integer lunCount) {
    this.lunCount = lunCount;
  }


  public NetAppONTAPCluster clusterCloudStorageUsed(Integer clusterCloudStorageUsed) {
    this.clusterCloudStorageUsed = clusterCloudStorageUsed;
    return this;
  }

  /**
   * Get clusterCloudStorageUsed
   * @return clusterCloudStorageUsed
   */
  @javax.annotation.Nullable
  public Integer getClusterCloudStorageUsed() {
    return clusterCloudStorageUsed;
  }

  public void setClusterCloudStorageUsed(Integer clusterCloudStorageUsed) {
    this.clusterCloudStorageUsed = clusterCloudStorageUsed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetAppONTAPCluster netAppONTAPCluster = (NetAppONTAPCluster) o;
    return Objects.equals(this.cifsShareCount, netAppONTAPCluster.cifsShareCount) &&
        Objects.equals(this.nfsExportedVolumes, netAppONTAPCluster.nfsExportedVolumes) &&
        Objects.equals(this.resourceId, netAppONTAPCluster.resourceId) &&
        Objects.equals(this.clusterName, netAppONTAPCluster.clusterName) &&
        Objects.equals(this.maxP95Performance, netAppONTAPCluster.maxP95Performance) &&
        Objects.equals(this.clusterBlockStorageSize, netAppONTAPCluster.clusterBlockStorageSize) &&
        Objects.equals(this.clusterBlockStorageUsed, netAppONTAPCluster.clusterBlockStorageUsed) &&
        Objects.equals(this.clusterBlockStorageLogicalUsed, netAppONTAPCluster.clusterBlockStorageLogicalUsed) &&
        Objects.equals(this.recommendations, netAppONTAPCluster.recommendations) &&
        Objects.equals(this.recommendationStatus, netAppONTAPCluster.recommendationStatus) &&
        Objects.equals(this.lunCount, netAppONTAPCluster.lunCount) &&
        Objects.equals(this.clusterCloudStorageUsed, netAppONTAPCluster.clusterCloudStorageUsed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cifsShareCount, nfsExportedVolumes, resourceId, clusterName, maxP95Performance, clusterBlockStorageSize, clusterBlockStorageUsed, clusterBlockStorageLogicalUsed, recommendations, recommendationStatus, lunCount, clusterCloudStorageUsed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetAppONTAPCluster {\n");
    sb.append("    cifsShareCount: ").append(toIndentedString(cifsShareCount)).append("\n");
    sb.append("    nfsExportedVolumes: ").append(toIndentedString(nfsExportedVolumes)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    clusterName: ").append(toIndentedString(clusterName)).append("\n");
    sb.append("    maxP95Performance: ").append(toIndentedString(maxP95Performance)).append("\n");
    sb.append("    clusterBlockStorageSize: ").append(toIndentedString(clusterBlockStorageSize)).append("\n");
    sb.append("    clusterBlockStorageUsed: ").append(toIndentedString(clusterBlockStorageUsed)).append("\n");
    sb.append("    clusterBlockStorageLogicalUsed: ").append(toIndentedString(clusterBlockStorageLogicalUsed)).append("\n");
    sb.append("    recommendations: ").append(toIndentedString(recommendations)).append("\n");
    sb.append("    recommendationStatus: ").append(toIndentedString(recommendationStatus)).append("\n");
    sb.append("    lunCount: ").append(toIndentedString(lunCount)).append("\n");
    sb.append("    clusterCloudStorageUsed: ").append(toIndentedString(clusterCloudStorageUsed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CifsShareCount");
    openapiFields.add("NfsExportedVolumes");
    openapiFields.add("ResourceId");
    openapiFields.add("ClusterName");
    openapiFields.add("MaxP95Performance");
    openapiFields.add("ClusterBlockStorageSize");
    openapiFields.add("ClusterBlockStorageUsed");
    openapiFields.add("ClusterBlockStorageLogicalUsed");
    openapiFields.add("Recommendations");
    openapiFields.add("RecommendationStatus");
    openapiFields.add("LunCount");
    openapiFields.add("ClusterCloudStorageUsed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NetAppONTAPCluster
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NetAppONTAPCluster.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NetAppONTAPCluster is not found in the empty JSON string", NetAppONTAPCluster.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NetAppONTAPCluster.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NetAppONTAPCluster` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CifsShareCount`
      if (jsonObj.get("CifsShareCount") != null && !jsonObj.get("CifsShareCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("CifsShareCount"));
      }
      // validate the optional field `NfsExportedVolumes`
      if (jsonObj.get("NfsExportedVolumes") != null && !jsonObj.get("NfsExportedVolumes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NfsExportedVolumes"));
      }
      // validate the optional field `ResourceId`
      if (jsonObj.get("ResourceId") != null && !jsonObj.get("ResourceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceId"));
      }
      // validate the optional field `ClusterName`
      if (jsonObj.get("ClusterName") != null && !jsonObj.get("ClusterName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ClusterName"));
      }
      // validate the optional field `MaxP95Performance`
      if (jsonObj.get("MaxP95Performance") != null && !jsonObj.get("MaxP95Performance").isJsonNull()) {
        NetAppONTAPClusterMaxP95Performance.validateJsonElement(jsonObj.get("MaxP95Performance"));
      }
      // validate the optional field `ClusterBlockStorageSize`
      if (jsonObj.get("ClusterBlockStorageSize") != null && !jsonObj.get("ClusterBlockStorageSize").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ClusterBlockStorageSize"));
      }
      // validate the optional field `ClusterBlockStorageUsed`
      if (jsonObj.get("ClusterBlockStorageUsed") != null && !jsonObj.get("ClusterBlockStorageUsed").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ClusterBlockStorageUsed"));
      }
      // validate the optional field `ClusterBlockStorageLogicalUsed`
      if (jsonObj.get("ClusterBlockStorageLogicalUsed") != null && !jsonObj.get("ClusterBlockStorageLogicalUsed").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ClusterBlockStorageLogicalUsed"));
      }
      // validate the optional field `Recommendations`
      if (jsonObj.get("Recommendations") != null && !jsonObj.get("Recommendations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Recommendations"));
      }
      // validate the optional field `RecommendationStatus`
      if (jsonObj.get("RecommendationStatus") != null && !jsonObj.get("RecommendationStatus").isJsonNull()) {
        RecommendationStatus.validateJsonElement(jsonObj.get("RecommendationStatus"));
      }
      // validate the optional field `LunCount`
      if (jsonObj.get("LunCount") != null && !jsonObj.get("LunCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("LunCount"));
      }
      // validate the optional field `ClusterCloudStorageUsed`
      if (jsonObj.get("ClusterCloudStorageUsed") != null && !jsonObj.get("ClusterCloudStorageUsed").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ClusterCloudStorageUsed"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NetAppONTAPCluster.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NetAppONTAPCluster' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NetAppONTAPCluster> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NetAppONTAPCluster.class));

       return (TypeAdapter<T>) new TypeAdapter<NetAppONTAPCluster>() {
           @Override
           public void write(JsonWriter out, NetAppONTAPCluster value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NetAppONTAPCluster read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NetAppONTAPCluster given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NetAppONTAPCluster
   * @throws IOException if the JSON string is invalid with respect to NetAppONTAPCluster
   */
  public static NetAppONTAPCluster fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NetAppONTAPCluster.class);
  }

  /**
   * Convert an instance of NetAppONTAPCluster to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

