/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DiscoveryResourceType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeStorageSystemResourceMetricsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeStorageSystemResourceMetricsRequest {
  public static final String SERIALIZED_NAME_DISCOVERY_JOB_ARN = "DiscoveryJobArn";
  @SerializedName(SERIALIZED_NAME_DISCOVERY_JOB_ARN)
  private String discoveryJobArn;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "ResourceType";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private DiscoveryResourceType resourceType;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "ResourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_MAX_RESULTS = "MaxResults";
  @SerializedName(SERIALIZED_NAME_MAX_RESULTS)
  private Integer maxResults;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public DescribeStorageSystemResourceMetricsRequest() {
  }

  public DescribeStorageSystemResourceMetricsRequest discoveryJobArn(String discoveryJobArn) {
    this.discoveryJobArn = discoveryJobArn;
    return this;
  }

  /**
   * Get discoveryJobArn
   * @return discoveryJobArn
   */
  @javax.annotation.Nonnull
  public String getDiscoveryJobArn() {
    return discoveryJobArn;
  }

  public void setDiscoveryJobArn(String discoveryJobArn) {
    this.discoveryJobArn = discoveryJobArn;
  }


  public DescribeStorageSystemResourceMetricsRequest resourceType(DiscoveryResourceType resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Get resourceType
   * @return resourceType
   */
  @javax.annotation.Nonnull
  public DiscoveryResourceType getResourceType() {
    return resourceType;
  }

  public void setResourceType(DiscoveryResourceType resourceType) {
    this.resourceType = resourceType;
  }


  public DescribeStorageSystemResourceMetricsRequest resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nonnull
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public DescribeStorageSystemResourceMetricsRequest startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public DescribeStorageSystemResourceMetricsRequest endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public DescribeStorageSystemResourceMetricsRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

  /**
   * Get maxResults
   * @return maxResults
   */
  @javax.annotation.Nullable
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }


  public DescribeStorageSystemResourceMetricsRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * Get nextToken
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeStorageSystemResourceMetricsRequest describeStorageSystemResourceMetricsRequest = (DescribeStorageSystemResourceMetricsRequest) o;
    return Objects.equals(this.discoveryJobArn, describeStorageSystemResourceMetricsRequest.discoveryJobArn) &&
        Objects.equals(this.resourceType, describeStorageSystemResourceMetricsRequest.resourceType) &&
        Objects.equals(this.resourceId, describeStorageSystemResourceMetricsRequest.resourceId) &&
        Objects.equals(this.startTime, describeStorageSystemResourceMetricsRequest.startTime) &&
        Objects.equals(this.endTime, describeStorageSystemResourceMetricsRequest.endTime) &&
        Objects.equals(this.maxResults, describeStorageSystemResourceMetricsRequest.maxResults) &&
        Objects.equals(this.nextToken, describeStorageSystemResourceMetricsRequest.nextToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(discoveryJobArn, resourceType, resourceId, startTime, endTime, maxResults, nextToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeStorageSystemResourceMetricsRequest {\n");
    sb.append("    discoveryJobArn: ").append(toIndentedString(discoveryJobArn)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DiscoveryJobArn");
    openapiFields.add("ResourceType");
    openapiFields.add("ResourceId");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("MaxResults");
    openapiFields.add("NextToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("DiscoveryJobArn");
    openapiRequiredFields.add("ResourceType");
    openapiRequiredFields.add("ResourceId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeStorageSystemResourceMetricsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeStorageSystemResourceMetricsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeStorageSystemResourceMetricsRequest is not found in the empty JSON string", DescribeStorageSystemResourceMetricsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeStorageSystemResourceMetricsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeStorageSystemResourceMetricsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DescribeStorageSystemResourceMetricsRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `DiscoveryJobArn`
      String.validateJsonElement(jsonObj.get("DiscoveryJobArn"));
      // validate the required field `ResourceType`
      DiscoveryResourceType.validateJsonElement(jsonObj.get("ResourceType"));
      // validate the required field `ResourceId`
      String.validateJsonElement(jsonObj.get("ResourceId"));
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the optional field `MaxResults`
      if (jsonObj.get("MaxResults") != null && !jsonObj.get("MaxResults").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxResults"));
      }
      // validate the optional field `NextToken`
      if (jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NextToken"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeStorageSystemResourceMetricsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeStorageSystemResourceMetricsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeStorageSystemResourceMetricsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeStorageSystemResourceMetricsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeStorageSystemResourceMetricsRequest>() {
           @Override
           public void write(JsonWriter out, DescribeStorageSystemResourceMetricsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeStorageSystemResourceMetricsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeStorageSystemResourceMetricsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeStorageSystemResourceMetricsRequest
   * @throws IOException if the JSON string is invalid with respect to DescribeStorageSystemResourceMetricsRequest
   */
  public static DescribeStorageSystemResourceMetricsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeStorageSystemResourceMetricsRequest.class);
  }

  /**
   * Convert an instance of DescribeStorageSystemResourceMetricsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

