/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NetAppONTAPVolumeMaxP95Performance;
import org.openapitools.client.model.RecommendationStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The information that DataSync Discovery collects about a volume in your on-premises storage system.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NetAppONTAPVolume {
  public static final String SERIALIZED_NAME_VOLUME_NAME = "VolumeName";
  @SerializedName(SERIALIZED_NAME_VOLUME_NAME)
  private String volumeName;

  public static final String SERIALIZED_NAME_RESOURCE_ID = "ResourceId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private String resourceId;

  public static final String SERIALIZED_NAME_CIFS_SHARE_COUNT = "CifsShareCount";
  @SerializedName(SERIALIZED_NAME_CIFS_SHARE_COUNT)
  private Integer cifsShareCount;

  public static final String SERIALIZED_NAME_SECURITY_STYLE = "SecurityStyle";
  @SerializedName(SERIALIZED_NAME_SECURITY_STYLE)
  private String securityStyle;

  public static final String SERIALIZED_NAME_SVM_UUID = "SvmUuid";
  @SerializedName(SERIALIZED_NAME_SVM_UUID)
  private String svmUuid;

  public static final String SERIALIZED_NAME_SVM_NAME = "SvmName";
  @SerializedName(SERIALIZED_NAME_SVM_NAME)
  private String svmName;

  public static final String SERIALIZED_NAME_CAPACITY_USED = "CapacityUsed";
  @SerializedName(SERIALIZED_NAME_CAPACITY_USED)
  private Integer capacityUsed;

  public static final String SERIALIZED_NAME_CAPACITY_PROVISIONED = "CapacityProvisioned";
  @SerializedName(SERIALIZED_NAME_CAPACITY_PROVISIONED)
  private Integer capacityProvisioned;

  public static final String SERIALIZED_NAME_LOGICAL_CAPACITY_USED = "LogicalCapacityUsed";
  @SerializedName(SERIALIZED_NAME_LOGICAL_CAPACITY_USED)
  private Integer logicalCapacityUsed;

  public static final String SERIALIZED_NAME_NFS_EXPORTED = "NfsExported";
  @SerializedName(SERIALIZED_NAME_NFS_EXPORTED)
  private Boolean nfsExported;

  public static final String SERIALIZED_NAME_SNAPSHOT_CAPACITY_USED = "SnapshotCapacityUsed";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_CAPACITY_USED)
  private Integer snapshotCapacityUsed;

  public static final String SERIALIZED_NAME_MAX_P95_PERFORMANCE = "MaxP95Performance";
  @SerializedName(SERIALIZED_NAME_MAX_P95_PERFORMANCE)
  private NetAppONTAPVolumeMaxP95Performance maxP95Performance;

  public static final String SERIALIZED_NAME_RECOMMENDATIONS = "Recommendations";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATIONS)
  private List recommendations;

  public static final String SERIALIZED_NAME_RECOMMENDATION_STATUS = "RecommendationStatus";
  @SerializedName(SERIALIZED_NAME_RECOMMENDATION_STATUS)
  private RecommendationStatus recommendationStatus;

  public static final String SERIALIZED_NAME_LUN_COUNT = "LunCount";
  @SerializedName(SERIALIZED_NAME_LUN_COUNT)
  private Integer lunCount;

  public NetAppONTAPVolume() {
  }

  public NetAppONTAPVolume volumeName(String volumeName) {
    this.volumeName = volumeName;
    return this;
  }

  /**
   * Get volumeName
   * @return volumeName
   */
  @javax.annotation.Nullable
  public String getVolumeName() {
    return volumeName;
  }

  public void setVolumeName(String volumeName) {
    this.volumeName = volumeName;
  }


  public NetAppONTAPVolume resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Get resourceId
   * @return resourceId
   */
  @javax.annotation.Nullable
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }


  public NetAppONTAPVolume cifsShareCount(Integer cifsShareCount) {
    this.cifsShareCount = cifsShareCount;
    return this;
  }

  /**
   * Get cifsShareCount
   * @return cifsShareCount
   */
  @javax.annotation.Nullable
  public Integer getCifsShareCount() {
    return cifsShareCount;
  }

  public void setCifsShareCount(Integer cifsShareCount) {
    this.cifsShareCount = cifsShareCount;
  }


  public NetAppONTAPVolume securityStyle(String securityStyle) {
    this.securityStyle = securityStyle;
    return this;
  }

  /**
   * Get securityStyle
   * @return securityStyle
   */
  @javax.annotation.Nullable
  public String getSecurityStyle() {
    return securityStyle;
  }

  public void setSecurityStyle(String securityStyle) {
    this.securityStyle = securityStyle;
  }


  public NetAppONTAPVolume svmUuid(String svmUuid) {
    this.svmUuid = svmUuid;
    return this;
  }

  /**
   * Get svmUuid
   * @return svmUuid
   */
  @javax.annotation.Nullable
  public String getSvmUuid() {
    return svmUuid;
  }

  public void setSvmUuid(String svmUuid) {
    this.svmUuid = svmUuid;
  }


  public NetAppONTAPVolume svmName(String svmName) {
    this.svmName = svmName;
    return this;
  }

  /**
   * Get svmName
   * @return svmName
   */
  @javax.annotation.Nullable
  public String getSvmName() {
    return svmName;
  }

  public void setSvmName(String svmName) {
    this.svmName = svmName;
  }


  public NetAppONTAPVolume capacityUsed(Integer capacityUsed) {
    this.capacityUsed = capacityUsed;
    return this;
  }

  /**
   * Get capacityUsed
   * @return capacityUsed
   */
  @javax.annotation.Nullable
  public Integer getCapacityUsed() {
    return capacityUsed;
  }

  public void setCapacityUsed(Integer capacityUsed) {
    this.capacityUsed = capacityUsed;
  }


  public NetAppONTAPVolume capacityProvisioned(Integer capacityProvisioned) {
    this.capacityProvisioned = capacityProvisioned;
    return this;
  }

  /**
   * Get capacityProvisioned
   * @return capacityProvisioned
   */
  @javax.annotation.Nullable
  public Integer getCapacityProvisioned() {
    return capacityProvisioned;
  }

  public void setCapacityProvisioned(Integer capacityProvisioned) {
    this.capacityProvisioned = capacityProvisioned;
  }


  public NetAppONTAPVolume logicalCapacityUsed(Integer logicalCapacityUsed) {
    this.logicalCapacityUsed = logicalCapacityUsed;
    return this;
  }

  /**
   * Get logicalCapacityUsed
   * @return logicalCapacityUsed
   */
  @javax.annotation.Nullable
  public Integer getLogicalCapacityUsed() {
    return logicalCapacityUsed;
  }

  public void setLogicalCapacityUsed(Integer logicalCapacityUsed) {
    this.logicalCapacityUsed = logicalCapacityUsed;
  }


  public NetAppONTAPVolume nfsExported(Boolean nfsExported) {
    this.nfsExported = nfsExported;
    return this;
  }

  /**
   * Get nfsExported
   * @return nfsExported
   */
  @javax.annotation.Nullable
  public Boolean getNfsExported() {
    return nfsExported;
  }

  public void setNfsExported(Boolean nfsExported) {
    this.nfsExported = nfsExported;
  }


  public NetAppONTAPVolume snapshotCapacityUsed(Integer snapshotCapacityUsed) {
    this.snapshotCapacityUsed = snapshotCapacityUsed;
    return this;
  }

  /**
   * Get snapshotCapacityUsed
   * @return snapshotCapacityUsed
   */
  @javax.annotation.Nullable
  public Integer getSnapshotCapacityUsed() {
    return snapshotCapacityUsed;
  }

  public void setSnapshotCapacityUsed(Integer snapshotCapacityUsed) {
    this.snapshotCapacityUsed = snapshotCapacityUsed;
  }


  public NetAppONTAPVolume maxP95Performance(NetAppONTAPVolumeMaxP95Performance maxP95Performance) {
    this.maxP95Performance = maxP95Performance;
    return this;
  }

  /**
   * Get maxP95Performance
   * @return maxP95Performance
   */
  @javax.annotation.Nullable
  public NetAppONTAPVolumeMaxP95Performance getMaxP95Performance() {
    return maxP95Performance;
  }

  public void setMaxP95Performance(NetAppONTAPVolumeMaxP95Performance maxP95Performance) {
    this.maxP95Performance = maxP95Performance;
  }


  public NetAppONTAPVolume recommendations(List recommendations) {
    this.recommendations = recommendations;
    return this;
  }

  /**
   * Get recommendations
   * @return recommendations
   */
  @javax.annotation.Nullable
  public List getRecommendations() {
    return recommendations;
  }

  public void setRecommendations(List recommendations) {
    this.recommendations = recommendations;
  }


  public NetAppONTAPVolume recommendationStatus(RecommendationStatus recommendationStatus) {
    this.recommendationStatus = recommendationStatus;
    return this;
  }

  /**
   * Get recommendationStatus
   * @return recommendationStatus
   */
  @javax.annotation.Nullable
  public RecommendationStatus getRecommendationStatus() {
    return recommendationStatus;
  }

  public void setRecommendationStatus(RecommendationStatus recommendationStatus) {
    this.recommendationStatus = recommendationStatus;
  }


  public NetAppONTAPVolume lunCount(Integer lunCount) {
    this.lunCount = lunCount;
    return this;
  }

  /**
   * Get lunCount
   * @return lunCount
   */
  @javax.annotation.Nullable
  public Integer getLunCount() {
    return lunCount;
  }

  public void setLunCount(Integer lunCount) {
    this.lunCount = lunCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetAppONTAPVolume netAppONTAPVolume = (NetAppONTAPVolume) o;
    return Objects.equals(this.volumeName, netAppONTAPVolume.volumeName) &&
        Objects.equals(this.resourceId, netAppONTAPVolume.resourceId) &&
        Objects.equals(this.cifsShareCount, netAppONTAPVolume.cifsShareCount) &&
        Objects.equals(this.securityStyle, netAppONTAPVolume.securityStyle) &&
        Objects.equals(this.svmUuid, netAppONTAPVolume.svmUuid) &&
        Objects.equals(this.svmName, netAppONTAPVolume.svmName) &&
        Objects.equals(this.capacityUsed, netAppONTAPVolume.capacityUsed) &&
        Objects.equals(this.capacityProvisioned, netAppONTAPVolume.capacityProvisioned) &&
        Objects.equals(this.logicalCapacityUsed, netAppONTAPVolume.logicalCapacityUsed) &&
        Objects.equals(this.nfsExported, netAppONTAPVolume.nfsExported) &&
        Objects.equals(this.snapshotCapacityUsed, netAppONTAPVolume.snapshotCapacityUsed) &&
        Objects.equals(this.maxP95Performance, netAppONTAPVolume.maxP95Performance) &&
        Objects.equals(this.recommendations, netAppONTAPVolume.recommendations) &&
        Objects.equals(this.recommendationStatus, netAppONTAPVolume.recommendationStatus) &&
        Objects.equals(this.lunCount, netAppONTAPVolume.lunCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(volumeName, resourceId, cifsShareCount, securityStyle, svmUuid, svmName, capacityUsed, capacityProvisioned, logicalCapacityUsed, nfsExported, snapshotCapacityUsed, maxP95Performance, recommendations, recommendationStatus, lunCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetAppONTAPVolume {\n");
    sb.append("    volumeName: ").append(toIndentedString(volumeName)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    cifsShareCount: ").append(toIndentedString(cifsShareCount)).append("\n");
    sb.append("    securityStyle: ").append(toIndentedString(securityStyle)).append("\n");
    sb.append("    svmUuid: ").append(toIndentedString(svmUuid)).append("\n");
    sb.append("    svmName: ").append(toIndentedString(svmName)).append("\n");
    sb.append("    capacityUsed: ").append(toIndentedString(capacityUsed)).append("\n");
    sb.append("    capacityProvisioned: ").append(toIndentedString(capacityProvisioned)).append("\n");
    sb.append("    logicalCapacityUsed: ").append(toIndentedString(logicalCapacityUsed)).append("\n");
    sb.append("    nfsExported: ").append(toIndentedString(nfsExported)).append("\n");
    sb.append("    snapshotCapacityUsed: ").append(toIndentedString(snapshotCapacityUsed)).append("\n");
    sb.append("    maxP95Performance: ").append(toIndentedString(maxP95Performance)).append("\n");
    sb.append("    recommendations: ").append(toIndentedString(recommendations)).append("\n");
    sb.append("    recommendationStatus: ").append(toIndentedString(recommendationStatus)).append("\n");
    sb.append("    lunCount: ").append(toIndentedString(lunCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("VolumeName");
    openapiFields.add("ResourceId");
    openapiFields.add("CifsShareCount");
    openapiFields.add("SecurityStyle");
    openapiFields.add("SvmUuid");
    openapiFields.add("SvmName");
    openapiFields.add("CapacityUsed");
    openapiFields.add("CapacityProvisioned");
    openapiFields.add("LogicalCapacityUsed");
    openapiFields.add("NfsExported");
    openapiFields.add("SnapshotCapacityUsed");
    openapiFields.add("MaxP95Performance");
    openapiFields.add("Recommendations");
    openapiFields.add("RecommendationStatus");
    openapiFields.add("LunCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NetAppONTAPVolume
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NetAppONTAPVolume.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NetAppONTAPVolume is not found in the empty JSON string", NetAppONTAPVolume.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NetAppONTAPVolume.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NetAppONTAPVolume` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `VolumeName`
      if (jsonObj.get("VolumeName") != null && !jsonObj.get("VolumeName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VolumeName"));
      }
      // validate the optional field `ResourceId`
      if (jsonObj.get("ResourceId") != null && !jsonObj.get("ResourceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceId"));
      }
      // validate the optional field `CifsShareCount`
      if (jsonObj.get("CifsShareCount") != null && !jsonObj.get("CifsShareCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("CifsShareCount"));
      }
      // validate the optional field `SecurityStyle`
      if (jsonObj.get("SecurityStyle") != null && !jsonObj.get("SecurityStyle").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SecurityStyle"));
      }
      // validate the optional field `SvmUuid`
      if (jsonObj.get("SvmUuid") != null && !jsonObj.get("SvmUuid").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SvmUuid"));
      }
      // validate the optional field `SvmName`
      if (jsonObj.get("SvmName") != null && !jsonObj.get("SvmName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SvmName"));
      }
      // validate the optional field `CapacityUsed`
      if (jsonObj.get("CapacityUsed") != null && !jsonObj.get("CapacityUsed").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("CapacityUsed"));
      }
      // validate the optional field `CapacityProvisioned`
      if (jsonObj.get("CapacityProvisioned") != null && !jsonObj.get("CapacityProvisioned").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("CapacityProvisioned"));
      }
      // validate the optional field `LogicalCapacityUsed`
      if (jsonObj.get("LogicalCapacityUsed") != null && !jsonObj.get("LogicalCapacityUsed").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("LogicalCapacityUsed"));
      }
      // validate the optional field `NfsExported`
      if (jsonObj.get("NfsExported") != null && !jsonObj.get("NfsExported").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("NfsExported"));
      }
      // validate the optional field `SnapshotCapacityUsed`
      if (jsonObj.get("SnapshotCapacityUsed") != null && !jsonObj.get("SnapshotCapacityUsed").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SnapshotCapacityUsed"));
      }
      // validate the optional field `MaxP95Performance`
      if (jsonObj.get("MaxP95Performance") != null && !jsonObj.get("MaxP95Performance").isJsonNull()) {
        NetAppONTAPVolumeMaxP95Performance.validateJsonElement(jsonObj.get("MaxP95Performance"));
      }
      // validate the optional field `Recommendations`
      if (jsonObj.get("Recommendations") != null && !jsonObj.get("Recommendations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Recommendations"));
      }
      // validate the optional field `RecommendationStatus`
      if (jsonObj.get("RecommendationStatus") != null && !jsonObj.get("RecommendationStatus").isJsonNull()) {
        RecommendationStatus.validateJsonElement(jsonObj.get("RecommendationStatus"));
      }
      // validate the optional field `LunCount`
      if (jsonObj.get("LunCount") != null && !jsonObj.get("LunCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("LunCount"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NetAppONTAPVolume.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NetAppONTAPVolume' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NetAppONTAPVolume> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NetAppONTAPVolume.class));

       return (TypeAdapter<T>) new TypeAdapter<NetAppONTAPVolume>() {
           @Override
           public void write(JsonWriter out, NetAppONTAPVolume value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NetAppONTAPVolume read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NetAppONTAPVolume given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NetAppONTAPVolume
   * @throws IOException if the JSON string is invalid with respect to NetAppONTAPVolume
   */
  public static NetAppONTAPVolume fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NetAppONTAPVolume.class);
  }

  /**
   * Convert an instance of NetAppONTAPVolume to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

