/*
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StartDiscoveryJobRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:05.755663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StartDiscoveryJobRequest {
  public static final String SERIALIZED_NAME_STORAGE_SYSTEM_ARN = "StorageSystemArn";
  @SerializedName(SERIALIZED_NAME_STORAGE_SYSTEM_ARN)
  private String storageSystemArn;

  public static final String SERIALIZED_NAME_COLLECTION_DURATION_MINUTES = "CollectionDurationMinutes";
  @SerializedName(SERIALIZED_NAME_COLLECTION_DURATION_MINUTES)
  private Integer collectionDurationMinutes;

  public static final String SERIALIZED_NAME_CLIENT_TOKEN = "ClientToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOKEN)
  private String clientToken;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public StartDiscoveryJobRequest() {
  }

  public StartDiscoveryJobRequest storageSystemArn(String storageSystemArn) {
    this.storageSystemArn = storageSystemArn;
    return this;
  }

  /**
   * Get storageSystemArn
   * @return storageSystemArn
   */
  @javax.annotation.Nonnull
  public String getStorageSystemArn() {
    return storageSystemArn;
  }

  public void setStorageSystemArn(String storageSystemArn) {
    this.storageSystemArn = storageSystemArn;
  }


  public StartDiscoveryJobRequest collectionDurationMinutes(Integer collectionDurationMinutes) {
    this.collectionDurationMinutes = collectionDurationMinutes;
    return this;
  }

  /**
   * Get collectionDurationMinutes
   * @return collectionDurationMinutes
   */
  @javax.annotation.Nonnull
  public Integer getCollectionDurationMinutes() {
    return collectionDurationMinutes;
  }

  public void setCollectionDurationMinutes(Integer collectionDurationMinutes) {
    this.collectionDurationMinutes = collectionDurationMinutes;
  }


  public StartDiscoveryJobRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

  /**
   * Get clientToken
   * @return clientToken
   */
  @javax.annotation.Nonnull
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }


  public StartDiscoveryJobRequest tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartDiscoveryJobRequest startDiscoveryJobRequest = (StartDiscoveryJobRequest) o;
    return Objects.equals(this.storageSystemArn, startDiscoveryJobRequest.storageSystemArn) &&
        Objects.equals(this.collectionDurationMinutes, startDiscoveryJobRequest.collectionDurationMinutes) &&
        Objects.equals(this.clientToken, startDiscoveryJobRequest.clientToken) &&
        Objects.equals(this.tags, startDiscoveryJobRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storageSystemArn, collectionDurationMinutes, clientToken, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartDiscoveryJobRequest {\n");
    sb.append("    storageSystemArn: ").append(toIndentedString(storageSystemArn)).append("\n");
    sb.append("    collectionDurationMinutes: ").append(toIndentedString(collectionDurationMinutes)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("StorageSystemArn");
    openapiFields.add("CollectionDurationMinutes");
    openapiFields.add("ClientToken");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("StorageSystemArn");
    openapiRequiredFields.add("CollectionDurationMinutes");
    openapiRequiredFields.add("ClientToken");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartDiscoveryJobRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartDiscoveryJobRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartDiscoveryJobRequest is not found in the empty JSON string", StartDiscoveryJobRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartDiscoveryJobRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartDiscoveryJobRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StartDiscoveryJobRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `StorageSystemArn`
      String.validateJsonElement(jsonObj.get("StorageSystemArn"));
      // validate the required field `CollectionDurationMinutes`
      Integer.validateJsonElement(jsonObj.get("CollectionDurationMinutes"));
      // validate the required field `ClientToken`
      String.validateJsonElement(jsonObj.get("ClientToken"));
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartDiscoveryJobRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartDiscoveryJobRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartDiscoveryJobRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartDiscoveryJobRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<StartDiscoveryJobRequest>() {
           @Override
           public void write(JsonWriter out, StartDiscoveryJobRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartDiscoveryJobRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartDiscoveryJobRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartDiscoveryJobRequest
   * @throws IOException if the JSON string is invalid with respect to StartDiscoveryJobRequest
   */
  public static StartDiscoveryJobRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartDiscoveryJobRequest.class);
  }

  /**
   * Convert an instance of StartDiscoveryJobRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

