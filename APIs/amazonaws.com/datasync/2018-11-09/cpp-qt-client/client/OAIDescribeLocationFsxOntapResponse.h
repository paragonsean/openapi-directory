/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeLocationFsxOntapResponse.h
 *
 * 
 */

#ifndef OAIDescribeLocationFsxOntapResponse_H
#define OAIDescribeLocationFsxOntapResponse_H

#include <QJsonObject>

#include "OAIFsxProtocol.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFsxProtocol;

class OAIDescribeLocationFsxOntapResponse : public OAIObject {
public:
    OAIDescribeLocationFsxOntapResponse();
    OAIDescribeLocationFsxOntapResponse(QString json);
    ~OAIDescribeLocationFsxOntapResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getLocationArn() const;
    void setLocationArn(const QString &location_arn);
    bool is_location_arn_Set() const;
    bool is_location_arn_Valid() const;

    QString getLocationUri() const;
    void setLocationUri(const QString &location_uri);
    bool is_location_uri_Set() const;
    bool is_location_uri_Valid() const;

    OAIFsxProtocol getProtocol() const;
    void setProtocol(const OAIFsxProtocol &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    QList getSecurityGroupArns() const;
    void setSecurityGroupArns(const QList &security_group_arns);
    bool is_security_group_arns_Set() const;
    bool is_security_group_arns_Valid() const;

    QString getStorageVirtualMachineArn() const;
    void setStorageVirtualMachineArn(const QString &storage_virtual_machine_arn);
    bool is_storage_virtual_machine_arn_Set() const;
    bool is_storage_virtual_machine_arn_Valid() const;

    QString getFsxFilesystemArn() const;
    void setFsxFilesystemArn(const QString &fsx_filesystem_arn);
    bool is_fsx_filesystem_arn_Set() const;
    bool is_fsx_filesystem_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_location_arn;
    bool m_location_arn_isSet;
    bool m_location_arn_isValid;

    QString m_location_uri;
    bool m_location_uri_isSet;
    bool m_location_uri_isValid;

    OAIFsxProtocol m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    QList m_security_group_arns;
    bool m_security_group_arns_isSet;
    bool m_security_group_arns_isValid;

    QString m_storage_virtual_machine_arn;
    bool m_storage_virtual_machine_arn_isSet;
    bool m_storage_virtual_machine_arn_isValid;

    QString m_fsx_filesystem_arn;
    bool m_fsx_filesystem_arn_isSet;
    bool m_fsx_filesystem_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeLocationFsxOntapResponse)

#endif // OAIDescribeLocationFsxOntapResponse_H
