/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeLocationHdfsResponse_QopConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeLocationHdfsResponse_QopConfiguration::OAIDescribeLocationHdfsResponse_QopConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeLocationHdfsResponse_QopConfiguration::OAIDescribeLocationHdfsResponse_QopConfiguration() {
    this->initializeModel();
}

OAIDescribeLocationHdfsResponse_QopConfiguration::~OAIDescribeLocationHdfsResponse_QopConfiguration() {}

void OAIDescribeLocationHdfsResponse_QopConfiguration::initializeModel() {

    m_rpc_protection_isSet = false;
    m_rpc_protection_isValid = false;

    m_data_transfer_protection_isSet = false;
    m_data_transfer_protection_isValid = false;
}

void OAIDescribeLocationHdfsResponse_QopConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeLocationHdfsResponse_QopConfiguration::fromJsonObject(QJsonObject json) {

    m_rpc_protection_isValid = ::OpenAPI::fromJsonValue(m_rpc_protection, json[QString("RpcProtection")]);
    m_rpc_protection_isSet = !json[QString("RpcProtection")].isNull() && m_rpc_protection_isValid;

    m_data_transfer_protection_isValid = ::OpenAPI::fromJsonValue(m_data_transfer_protection, json[QString("DataTransferProtection")]);
    m_data_transfer_protection_isSet = !json[QString("DataTransferProtection")].isNull() && m_data_transfer_protection_isValid;
}

QString OAIDescribeLocationHdfsResponse_QopConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeLocationHdfsResponse_QopConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_rpc_protection.isSet()) {
        obj.insert(QString("RpcProtection"), ::OpenAPI::toJsonValue(m_rpc_protection));
    }
    if (m_data_transfer_protection.isSet()) {
        obj.insert(QString("DataTransferProtection"), ::OpenAPI::toJsonValue(m_data_transfer_protection));
    }
    return obj;
}

OAIHdfsRpcProtection OAIDescribeLocationHdfsResponse_QopConfiguration::getRpcProtection() const {
    return m_rpc_protection;
}
void OAIDescribeLocationHdfsResponse_QopConfiguration::setRpcProtection(const OAIHdfsRpcProtection &rpc_protection) {
    m_rpc_protection = rpc_protection;
    m_rpc_protection_isSet = true;
}

bool OAIDescribeLocationHdfsResponse_QopConfiguration::is_rpc_protection_Set() const{
    return m_rpc_protection_isSet;
}

bool OAIDescribeLocationHdfsResponse_QopConfiguration::is_rpc_protection_Valid() const{
    return m_rpc_protection_isValid;
}

OAIHdfsDataTransferProtection OAIDescribeLocationHdfsResponse_QopConfiguration::getDataTransferProtection() const {
    return m_data_transfer_protection;
}
void OAIDescribeLocationHdfsResponse_QopConfiguration::setDataTransferProtection(const OAIHdfsDataTransferProtection &data_transfer_protection) {
    m_data_transfer_protection = data_transfer_protection;
    m_data_transfer_protection_isSet = true;
}

bool OAIDescribeLocationHdfsResponse_QopConfiguration::is_data_transfer_protection_Set() const{
    return m_data_transfer_protection_isSet;
}

bool OAIDescribeLocationHdfsResponse_QopConfiguration::is_data_transfer_protection_Valid() const{
    return m_data_transfer_protection_isValid;
}

bool OAIDescribeLocationHdfsResponse_QopConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rpc_protection.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_transfer_protection.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeLocationHdfsResponse_QopConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
