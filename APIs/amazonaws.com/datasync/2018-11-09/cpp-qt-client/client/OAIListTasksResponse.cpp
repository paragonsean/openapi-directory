/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListTasksResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListTasksResponse::OAIListTasksResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListTasksResponse::OAIListTasksResponse() {
    this->initializeModel();
}

OAIListTasksResponse::~OAIListTasksResponse() {}

void OAIListTasksResponse::initializeModel() {

    m_tasks_isSet = false;
    m_tasks_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListTasksResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListTasksResponse::fromJsonObject(QJsonObject json) {

    m_tasks_isValid = ::OpenAPI::fromJsonValue(m_tasks, json[QString("Tasks")]);
    m_tasks_isSet = !json[QString("Tasks")].isNull() && m_tasks_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListTasksResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListTasksResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_tasks.isSet()) {
        obj.insert(QString("Tasks"), ::OpenAPI::toJsonValue(m_tasks));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListTasksResponse::getTasks() const {
    return m_tasks;
}
void OAIListTasksResponse::setTasks(const QList &tasks) {
    m_tasks = tasks;
    m_tasks_isSet = true;
}

bool OAIListTasksResponse::is_tasks_Set() const{
    return m_tasks_isSet;
}

bool OAIListTasksResponse::is_tasks_Valid() const{
    return m_tasks_isValid;
}

QString OAIListTasksResponse::getNextToken() const {
    return m_next_token;
}
void OAIListTasksResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListTasksResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListTasksResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListTasksResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tasks.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListTasksResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
