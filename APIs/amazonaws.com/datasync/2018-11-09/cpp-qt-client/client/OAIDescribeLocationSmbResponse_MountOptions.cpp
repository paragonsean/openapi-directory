/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeLocationSmbResponse_MountOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeLocationSmbResponse_MountOptions::OAIDescribeLocationSmbResponse_MountOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeLocationSmbResponse_MountOptions::OAIDescribeLocationSmbResponse_MountOptions() {
    this->initializeModel();
}

OAIDescribeLocationSmbResponse_MountOptions::~OAIDescribeLocationSmbResponse_MountOptions() {}

void OAIDescribeLocationSmbResponse_MountOptions::initializeModel() {

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIDescribeLocationSmbResponse_MountOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeLocationSmbResponse_MountOptions::fromJsonObject(QJsonObject json) {

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("Version")]);
    m_version_isSet = !json[QString("Version")].isNull() && m_version_isValid;
}

QString OAIDescribeLocationSmbResponse_MountOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeLocationSmbResponse_MountOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_version.isSet()) {
        obj.insert(QString("Version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

OAISmbVersion OAIDescribeLocationSmbResponse_MountOptions::getVersion() const {
    return m_version;
}
void OAIDescribeLocationSmbResponse_MountOptions::setVersion(const OAISmbVersion &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIDescribeLocationSmbResponse_MountOptions::is_version_Set() const{
    return m_version_isSet;
}

bool OAIDescribeLocationSmbResponse_MountOptions::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIDescribeLocationSmbResponse_MountOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_version.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeLocationSmbResponse_MountOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
