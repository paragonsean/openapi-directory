/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeLocationEfsResponse.h
 *
 * DescribeLocationEfsResponse
 */

#ifndef OAIDescribeLocationEfsResponse_H
#define OAIDescribeLocationEfsResponse_H

#include <QJsonObject>

#include "OAIEc2Config.h"
#include "OAIEfsInTransitEncryption.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEc2Config;

class OAIDescribeLocationEfsResponse : public OAIObject {
public:
    OAIDescribeLocationEfsResponse();
    OAIDescribeLocationEfsResponse(QString json);
    ~OAIDescribeLocationEfsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLocationArn() const;
    void setLocationArn(const QString &location_arn);
    bool is_location_arn_Set() const;
    bool is_location_arn_Valid() const;

    QString getLocationUri() const;
    void setLocationUri(const QString &location_uri);
    bool is_location_uri_Set() const;
    bool is_location_uri_Valid() const;

    OAIEc2Config getEc2Config() const;
    void setEc2Config(const OAIEc2Config &ec2_config);
    bool is_ec2_config_Set() const;
    bool is_ec2_config_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getAccessPointArn() const;
    void setAccessPointArn(const QString &access_point_arn);
    bool is_access_point_arn_Set() const;
    bool is_access_point_arn_Valid() const;

    QString getFileSystemAccessRoleArn() const;
    void setFileSystemAccessRoleArn(const QString &file_system_access_role_arn);
    bool is_file_system_access_role_arn_Set() const;
    bool is_file_system_access_role_arn_Valid() const;

    OAIEfsInTransitEncryption getInTransitEncryption() const;
    void setInTransitEncryption(const OAIEfsInTransitEncryption &in_transit_encryption);
    bool is_in_transit_encryption_Set() const;
    bool is_in_transit_encryption_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_location_arn;
    bool m_location_arn_isSet;
    bool m_location_arn_isValid;

    QString m_location_uri;
    bool m_location_uri_isSet;
    bool m_location_uri_isValid;

    OAIEc2Config m_ec2_config;
    bool m_ec2_config_isSet;
    bool m_ec2_config_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_access_point_arn;
    bool m_access_point_arn_isSet;
    bool m_access_point_arn_isValid;

    QString m_file_system_access_role_arn;
    bool m_file_system_access_role_arn_isSet;
    bool m_file_system_access_role_arn_isValid;

    OAIEfsInTransitEncryption m_in_transit_encryption;
    bool m_in_transit_encryption_isSet;
    bool m_in_transit_encryption_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeLocationEfsResponse)

#endif // OAIDescribeLocationEfsResponse_H
