/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDiscoveryResourceFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDiscoveryResourceFilter::OAIDiscoveryResourceFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDiscoveryResourceFilter::OAIDiscoveryResourceFilter() {
    this->initializeModel();
}

OAIDiscoveryResourceFilter::~OAIDiscoveryResourceFilter() {}

void OAIDiscoveryResourceFilter::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDiscoveryResourceFilter::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDiscoveryResourceFilter::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SVM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDiscoveryResourceFilter::SVM;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDiscoveryResourceFilter::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDiscoveryResourceFilter::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDiscoveryResourceFilter::SVM:
            val = "SVM";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDiscoveryResourceFilter::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDiscoveryResourceFilter::eOAIDiscoveryResourceFilter OAIDiscoveryResourceFilter::getValue() const {
    return m_value;
}

void OAIDiscoveryResourceFilter::setValue(const OAIDiscoveryResourceFilter::eOAIDiscoveryResourceFilter& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDiscoveryResourceFilter::isSet() const {
    
    return m_value_isSet;
}

bool OAIDiscoveryResourceFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
