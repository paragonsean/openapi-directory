/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateLocationAzureBlobRequest.h
 *
 * 
 */

#ifndef OAIUpdateLocationAzureBlobRequest_H
#define OAIUpdateLocationAzureBlobRequest_H

#include <QJsonObject>

#include "OAIAzureAccessTier.h"
#include "OAIAzureBlobAuthenticationType.h"
#include "OAIAzureBlobType.h"
#include "OAICreateLocationAzureBlobRequest_SasConfiguration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateLocationAzureBlobRequest_SasConfiguration;

class OAIUpdateLocationAzureBlobRequest : public OAIObject {
public:
    OAIUpdateLocationAzureBlobRequest();
    OAIUpdateLocationAzureBlobRequest(QString json);
    ~OAIUpdateLocationAzureBlobRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLocationArn() const;
    void setLocationArn(const QString &location_arn);
    bool is_location_arn_Set() const;
    bool is_location_arn_Valid() const;

    QString getSubdirectory() const;
    void setSubdirectory(const QString &subdirectory);
    bool is_subdirectory_Set() const;
    bool is_subdirectory_Valid() const;

    OAIAzureBlobAuthenticationType getAuthenticationType() const;
    void setAuthenticationType(const OAIAzureBlobAuthenticationType &authentication_type);
    bool is_authentication_type_Set() const;
    bool is_authentication_type_Valid() const;

    OAICreateLocationAzureBlobRequest_SasConfiguration getSasConfiguration() const;
    void setSasConfiguration(const OAICreateLocationAzureBlobRequest_SasConfiguration &sas_configuration);
    bool is_sas_configuration_Set() const;
    bool is_sas_configuration_Valid() const;

    OAIAzureBlobType getBlobType() const;
    void setBlobType(const OAIAzureBlobType &blob_type);
    bool is_blob_type_Set() const;
    bool is_blob_type_Valid() const;

    OAIAzureAccessTier getAccessTier() const;
    void setAccessTier(const OAIAzureAccessTier &access_tier);
    bool is_access_tier_Set() const;
    bool is_access_tier_Valid() const;

    QList getAgentArns() const;
    void setAgentArns(const QList &agent_arns);
    bool is_agent_arns_Set() const;
    bool is_agent_arns_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_location_arn;
    bool m_location_arn_isSet;
    bool m_location_arn_isValid;

    QString m_subdirectory;
    bool m_subdirectory_isSet;
    bool m_subdirectory_isValid;

    OAIAzureBlobAuthenticationType m_authentication_type;
    bool m_authentication_type_isSet;
    bool m_authentication_type_isValid;

    OAICreateLocationAzureBlobRequest_SasConfiguration m_sas_configuration;
    bool m_sas_configuration_isSet;
    bool m_sas_configuration_isValid;

    OAIAzureBlobType m_blob_type;
    bool m_blob_type_isSet;
    bool m_blob_type_isValid;

    OAIAzureAccessTier m_access_tier;
    bool m_access_tier_isSet;
    bool m_access_tier_isValid;

    QList m_agent_arns;
    bool m_agent_arns_isSet;
    bool m_agent_arns_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateLocationAzureBlobRequest)

#endif // OAIUpdateLocationAzureBlobRequest_H
