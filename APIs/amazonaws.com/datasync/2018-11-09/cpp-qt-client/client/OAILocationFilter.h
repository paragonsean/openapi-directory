/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILocationFilter.h
 *
 * &lt;p&gt;Narrow down the list of resources returned by &lt;code&gt;ListLocations&lt;/code&gt;. For example, to see all your Amazon S3 locations, create a filter using &lt;code&gt;\&quot;Name\&quot;: \&quot;LocationType\&quot;&lt;/code&gt;, &lt;code&gt;\&quot;Operator\&quot;: \&quot;Equals\&quot;&lt;/code&gt;, and &lt;code&gt;\&quot;Values\&quot;: \&quot;S3\&quot;&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/datasync/latest/userguide/query-resources.html\&quot;&gt;filtering resources&lt;/a&gt;.&lt;/p&gt;
 */

#ifndef OAILocationFilter_H
#define OAILocationFilter_H

#include <QJsonObject>

#include "OAILocationFilterName.h"
#include "OAIOperator.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILocationFilter : public OAIObject {
public:
    OAILocationFilter();
    OAILocationFilter(QString json);
    ~OAILocationFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILocationFilterName getName() const;
    void setName(const OAILocationFilterName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList getValues() const;
    void setValues(const QList &values);
    bool is_values_Set() const;
    bool is_values_Valid() const;

    OAIOperator getROperator() const;
    void setROperator(const OAIOperator &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILocationFilterName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList m_values;
    bool m_values_isSet;
    bool m_values_isValid;

    OAIOperator m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILocationFilter)

#endif // OAILocationFilter_H
