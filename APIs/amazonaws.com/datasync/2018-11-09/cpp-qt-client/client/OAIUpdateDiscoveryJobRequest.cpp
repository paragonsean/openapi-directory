/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateDiscoveryJobRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateDiscoveryJobRequest::OAIUpdateDiscoveryJobRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateDiscoveryJobRequest::OAIUpdateDiscoveryJobRequest() {
    this->initializeModel();
}

OAIUpdateDiscoveryJobRequest::~OAIUpdateDiscoveryJobRequest() {}

void OAIUpdateDiscoveryJobRequest::initializeModel() {

    m_discovery_job_arn_isSet = false;
    m_discovery_job_arn_isValid = false;

    m_collection_duration_minutes_isSet = false;
    m_collection_duration_minutes_isValid = false;
}

void OAIUpdateDiscoveryJobRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateDiscoveryJobRequest::fromJsonObject(QJsonObject json) {

    m_discovery_job_arn_isValid = ::OpenAPI::fromJsonValue(m_discovery_job_arn, json[QString("DiscoveryJobArn")]);
    m_discovery_job_arn_isSet = !json[QString("DiscoveryJobArn")].isNull() && m_discovery_job_arn_isValid;

    m_collection_duration_minutes_isValid = ::OpenAPI::fromJsonValue(m_collection_duration_minutes, json[QString("CollectionDurationMinutes")]);
    m_collection_duration_minutes_isSet = !json[QString("CollectionDurationMinutes")].isNull() && m_collection_duration_minutes_isValid;
}

QString OAIUpdateDiscoveryJobRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateDiscoveryJobRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_discovery_job_arn_isSet) {
        obj.insert(QString("DiscoveryJobArn"), ::OpenAPI::toJsonValue(m_discovery_job_arn));
    }
    if (m_collection_duration_minutes_isSet) {
        obj.insert(QString("CollectionDurationMinutes"), ::OpenAPI::toJsonValue(m_collection_duration_minutes));
    }
    return obj;
}

QString OAIUpdateDiscoveryJobRequest::getDiscoveryJobArn() const {
    return m_discovery_job_arn;
}
void OAIUpdateDiscoveryJobRequest::setDiscoveryJobArn(const QString &discovery_job_arn) {
    m_discovery_job_arn = discovery_job_arn;
    m_discovery_job_arn_isSet = true;
}

bool OAIUpdateDiscoveryJobRequest::is_discovery_job_arn_Set() const{
    return m_discovery_job_arn_isSet;
}

bool OAIUpdateDiscoveryJobRequest::is_discovery_job_arn_Valid() const{
    return m_discovery_job_arn_isValid;
}

qint32 OAIUpdateDiscoveryJobRequest::getCollectionDurationMinutes() const {
    return m_collection_duration_minutes;
}
void OAIUpdateDiscoveryJobRequest::setCollectionDurationMinutes(const qint32 &collection_duration_minutes) {
    m_collection_duration_minutes = collection_duration_minutes;
    m_collection_duration_minutes_isSet = true;
}

bool OAIUpdateDiscoveryJobRequest::is_collection_duration_minutes_Set() const{
    return m_collection_duration_minutes_isSet;
}

bool OAIUpdateDiscoveryJobRequest::is_collection_duration_minutes_Valid() const{
    return m_collection_duration_minutes_isValid;
}

bool OAIUpdateDiscoveryJobRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_discovery_job_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_collection_duration_minutes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateDiscoveryJobRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_discovery_job_arn_isValid && m_collection_duration_minutes_isValid && true;
}

} // namespace OpenAPI
