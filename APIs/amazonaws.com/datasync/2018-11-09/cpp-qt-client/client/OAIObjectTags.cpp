/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIObjectTags.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIObjectTags::OAIObjectTags(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIObjectTags::OAIObjectTags() {
    this->initializeModel();
}

OAIObjectTags::~OAIObjectTags() {}

void OAIObjectTags::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIObjectTags::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIObjectTags::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PRESERVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectTags::PRESERVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectTags::NONE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIObjectTags::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIObjectTags::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIObjectTags::PRESERVE:
            val = "PRESERVE";
            break;
        case eOAIObjectTags::NONE:
            val = "NONE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIObjectTags::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIObjectTags::eOAIObjectTags OAIObjectTags::getValue() const {
    return m_value;
}

void OAIObjectTags::setValue(const OAIObjectTags::eOAIObjectTags& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIObjectTags::isSet() const {
    
    return m_value_isSet;
}

bool OAIObjectTags::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
