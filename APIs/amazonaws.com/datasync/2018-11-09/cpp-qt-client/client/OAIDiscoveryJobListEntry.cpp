/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDiscoveryJobListEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDiscoveryJobListEntry::OAIDiscoveryJobListEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDiscoveryJobListEntry::OAIDiscoveryJobListEntry() {
    this->initializeModel();
}

OAIDiscoveryJobListEntry::~OAIDiscoveryJobListEntry() {}

void OAIDiscoveryJobListEntry::initializeModel() {

    m_discovery_job_arn_isSet = false;
    m_discovery_job_arn_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIDiscoveryJobListEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDiscoveryJobListEntry::fromJsonObject(QJsonObject json) {

    m_discovery_job_arn_isValid = ::OpenAPI::fromJsonValue(m_discovery_job_arn, json[QString("DiscoveryJobArn")]);
    m_discovery_job_arn_isSet = !json[QString("DiscoveryJobArn")].isNull() && m_discovery_job_arn_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIDiscoveryJobListEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDiscoveryJobListEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_discovery_job_arn_isSet) {
        obj.insert(QString("DiscoveryJobArn"), ::OpenAPI::toJsonValue(m_discovery_job_arn));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIDiscoveryJobListEntry::getDiscoveryJobArn() const {
    return m_discovery_job_arn;
}
void OAIDiscoveryJobListEntry::setDiscoveryJobArn(const QString &discovery_job_arn) {
    m_discovery_job_arn = discovery_job_arn;
    m_discovery_job_arn_isSet = true;
}

bool OAIDiscoveryJobListEntry::is_discovery_job_arn_Set() const{
    return m_discovery_job_arn_isSet;
}

bool OAIDiscoveryJobListEntry::is_discovery_job_arn_Valid() const{
    return m_discovery_job_arn_isValid;
}

OAIDiscoveryJobStatus OAIDiscoveryJobListEntry::getStatus() const {
    return m_status;
}
void OAIDiscoveryJobListEntry::setStatus(const OAIDiscoveryJobStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDiscoveryJobListEntry::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDiscoveryJobListEntry::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIDiscoveryJobListEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_discovery_job_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDiscoveryJobListEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
