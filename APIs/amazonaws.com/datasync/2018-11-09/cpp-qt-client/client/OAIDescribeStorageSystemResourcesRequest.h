/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeStorageSystemResourcesRequest.h
 *
 * 
 */

#ifndef OAIDescribeStorageSystemResourcesRequest_H
#define OAIDescribeStorageSystemResourcesRequest_H

#include <QJsonObject>

#include "OAIDiscoveryResourceType.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeStorageSystemResourcesRequest : public OAIObject {
public:
    OAIDescribeStorageSystemResourcesRequest();
    OAIDescribeStorageSystemResourcesRequest(QString json);
    ~OAIDescribeStorageSystemResourcesRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDiscoveryJobArn() const;
    void setDiscoveryJobArn(const QString &discovery_job_arn);
    bool is_discovery_job_arn_Set() const;
    bool is_discovery_job_arn_Valid() const;

    OAIDiscoveryResourceType getResourceType() const;
    void setResourceType(const OAIDiscoveryResourceType &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QList getResourceIds() const;
    void setResourceIds(const QList &resource_ids);
    bool is_resource_ids_Set() const;
    bool is_resource_ids_Valid() const;

    QMap getFilter() const;
    void setFilter(const QMap &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_discovery_job_arn;
    bool m_discovery_job_arn_isSet;
    bool m_discovery_job_arn_isValid;

    OAIDiscoveryResourceType m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QList m_resource_ids;
    bool m_resource_ids_isSet;
    bool m_resource_ids_isValid;

    QMap m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeStorageSystemResourcesRequest)

#endif // OAIDescribeStorageSystemResourcesRequest_H
