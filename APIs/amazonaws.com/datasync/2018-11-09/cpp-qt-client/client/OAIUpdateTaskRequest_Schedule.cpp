/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTaskRequest_Schedule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTaskRequest_Schedule::OAIUpdateTaskRequest_Schedule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTaskRequest_Schedule::OAIUpdateTaskRequest_Schedule() {
    this->initializeModel();
}

OAIUpdateTaskRequest_Schedule::~OAIUpdateTaskRequest_Schedule() {}

void OAIUpdateTaskRequest_Schedule::initializeModel() {

    m_schedule_expression_isSet = false;
    m_schedule_expression_isValid = false;
}

void OAIUpdateTaskRequest_Schedule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTaskRequest_Schedule::fromJsonObject(QJsonObject json) {

    m_schedule_expression_isValid = ::OpenAPI::fromJsonValue(m_schedule_expression, json[QString("ScheduleExpression")]);
    m_schedule_expression_isSet = !json[QString("ScheduleExpression")].isNull() && m_schedule_expression_isValid;
}

QString OAIUpdateTaskRequest_Schedule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTaskRequest_Schedule::asJsonObject() const {
    QJsonObject obj;
    if (m_schedule_expression_isSet) {
        obj.insert(QString("ScheduleExpression"), ::OpenAPI::toJsonValue(m_schedule_expression));
    }
    return obj;
}

QString OAIUpdateTaskRequest_Schedule::getScheduleExpression() const {
    return m_schedule_expression;
}
void OAIUpdateTaskRequest_Schedule::setScheduleExpression(const QString &schedule_expression) {
    m_schedule_expression = schedule_expression;
    m_schedule_expression_isSet = true;
}

bool OAIUpdateTaskRequest_Schedule::is_schedule_expression_Set() const{
    return m_schedule_expression_isSet;
}

bool OAIUpdateTaskRequest_Schedule::is_schedule_expression_Valid() const{
    return m_schedule_expression_isValid;
}

bool OAIUpdateTaskRequest_Schedule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_schedule_expression_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTaskRequest_Schedule::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_schedule_expression_isValid && true;
}

} // namespace OpenAPI
