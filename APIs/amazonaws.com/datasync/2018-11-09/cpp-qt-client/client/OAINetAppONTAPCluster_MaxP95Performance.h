/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetAppONTAPCluster_MaxP95Performance.h
 *
 * 
 */

#ifndef OAINetAppONTAPCluster_MaxP95Performance_H
#define OAINetAppONTAPCluster_MaxP95Performance_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetAppONTAPCluster_MaxP95Performance : public OAIObject {
public:
    OAINetAppONTAPCluster_MaxP95Performance();
    OAINetAppONTAPCluster_MaxP95Performance(QString json);
    ~OAINetAppONTAPCluster_MaxP95Performance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getIopsRead() const;
    void setIopsRead(const double &iops_read);
    bool is_iops_read_Set() const;
    bool is_iops_read_Valid() const;

    double getIopsWrite() const;
    void setIopsWrite(const double &iops_write);
    bool is_iops_write_Set() const;
    bool is_iops_write_Valid() const;

    double getIopsOther() const;
    void setIopsOther(const double &iops_other);
    bool is_iops_other_Set() const;
    bool is_iops_other_Valid() const;

    double getIopsTotal() const;
    void setIopsTotal(const double &iops_total);
    bool is_iops_total_Set() const;
    bool is_iops_total_Valid() const;

    double getThroughputRead() const;
    void setThroughputRead(const double &throughput_read);
    bool is_throughput_read_Set() const;
    bool is_throughput_read_Valid() const;

    double getThroughputWrite() const;
    void setThroughputWrite(const double &throughput_write);
    bool is_throughput_write_Set() const;
    bool is_throughput_write_Valid() const;

    double getThroughputOther() const;
    void setThroughputOther(const double &throughput_other);
    bool is_throughput_other_Set() const;
    bool is_throughput_other_Valid() const;

    double getThroughputTotal() const;
    void setThroughputTotal(const double &throughput_total);
    bool is_throughput_total_Set() const;
    bool is_throughput_total_Valid() const;

    double getLatencyRead() const;
    void setLatencyRead(const double &latency_read);
    bool is_latency_read_Set() const;
    bool is_latency_read_Valid() const;

    double getLatencyWrite() const;
    void setLatencyWrite(const double &latency_write);
    bool is_latency_write_Set() const;
    bool is_latency_write_Valid() const;

    double getLatencyOther() const;
    void setLatencyOther(const double &latency_other);
    bool is_latency_other_Set() const;
    bool is_latency_other_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_iops_read;
    bool m_iops_read_isSet;
    bool m_iops_read_isValid;

    double m_iops_write;
    bool m_iops_write_isSet;
    bool m_iops_write_isValid;

    double m_iops_other;
    bool m_iops_other_isSet;
    bool m_iops_other_isValid;

    double m_iops_total;
    bool m_iops_total_isSet;
    bool m_iops_total_isValid;

    double m_throughput_read;
    bool m_throughput_read_isSet;
    bool m_throughput_read_isValid;

    double m_throughput_write;
    bool m_throughput_write_isSet;
    bool m_throughput_write_isValid;

    double m_throughput_other;
    bool m_throughput_other_isSet;
    bool m_throughput_other_isValid;

    double m_throughput_total;
    bool m_throughput_total_isSet;
    bool m_throughput_total_isValid;

    double m_latency_read;
    bool m_latency_read_isSet;
    bool m_latency_read_isValid;

    double m_latency_write;
    bool m_latency_write_isSet;
    bool m_latency_write_isValid;

    double m_latency_other;
    bool m_latency_other_isSet;
    bool m_latency_other_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetAppONTAPCluster_MaxP95Performance)

#endif // OAINetAppONTAPCluster_MaxP95Performance_H
