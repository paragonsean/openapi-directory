/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEc2Config.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEc2Config::OAIEc2Config(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEc2Config::OAIEc2Config() {
    this->initializeModel();
}

OAIEc2Config::~OAIEc2Config() {}

void OAIEc2Config::initializeModel() {

    m_subnet_arn_isSet = false;
    m_subnet_arn_isValid = false;

    m_security_group_arns_isSet = false;
    m_security_group_arns_isValid = false;
}

void OAIEc2Config::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEc2Config::fromJsonObject(QJsonObject json) {

    m_subnet_arn_isValid = ::OpenAPI::fromJsonValue(m_subnet_arn, json[QString("SubnetArn")]);
    m_subnet_arn_isSet = !json[QString("SubnetArn")].isNull() && m_subnet_arn_isValid;

    m_security_group_arns_isValid = ::OpenAPI::fromJsonValue(m_security_group_arns, json[QString("SecurityGroupArns")]);
    m_security_group_arns_isSet = !json[QString("SecurityGroupArns")].isNull() && m_security_group_arns_isValid;
}

QString OAIEc2Config::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEc2Config::asJsonObject() const {
    QJsonObject obj;
    if (m_subnet_arn_isSet) {
        obj.insert(QString("SubnetArn"), ::OpenAPI::toJsonValue(m_subnet_arn));
    }
    if (m_security_group_arns.isSet()) {
        obj.insert(QString("SecurityGroupArns"), ::OpenAPI::toJsonValue(m_security_group_arns));
    }
    return obj;
}

QString OAIEc2Config::getSubnetArn() const {
    return m_subnet_arn;
}
void OAIEc2Config::setSubnetArn(const QString &subnet_arn) {
    m_subnet_arn = subnet_arn;
    m_subnet_arn_isSet = true;
}

bool OAIEc2Config::is_subnet_arn_Set() const{
    return m_subnet_arn_isSet;
}

bool OAIEc2Config::is_subnet_arn_Valid() const{
    return m_subnet_arn_isValid;
}

QList OAIEc2Config::getSecurityGroupArns() const {
    return m_security_group_arns;
}
void OAIEc2Config::setSecurityGroupArns(const QList &security_group_arns) {
    m_security_group_arns = security_group_arns;
    m_security_group_arns_isSet = true;
}

bool OAIEc2Config::is_security_group_arns_Set() const{
    return m_security_group_arns_isSet;
}

bool OAIEc2Config::is_security_group_arns_Valid() const{
    return m_security_group_arns_isValid;
}

bool OAIEc2Config::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_subnet_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_group_arns.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEc2Config::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_subnet_arn_isValid && m_security_group_arns_isValid && true;
}

} // namespace OpenAPI
