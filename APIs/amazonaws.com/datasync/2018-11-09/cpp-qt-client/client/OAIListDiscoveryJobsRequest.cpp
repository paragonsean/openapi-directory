/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListDiscoveryJobsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListDiscoveryJobsRequest::OAIListDiscoveryJobsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListDiscoveryJobsRequest::OAIListDiscoveryJobsRequest() {
    this->initializeModel();
}

OAIListDiscoveryJobsRequest::~OAIListDiscoveryJobsRequest() {}

void OAIListDiscoveryJobsRequest::initializeModel() {

    m_storage_system_arn_isSet = false;
    m_storage_system_arn_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListDiscoveryJobsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListDiscoveryJobsRequest::fromJsonObject(QJsonObject json) {

    m_storage_system_arn_isValid = ::OpenAPI::fromJsonValue(m_storage_system_arn, json[QString("StorageSystemArn")]);
    m_storage_system_arn_isSet = !json[QString("StorageSystemArn")].isNull() && m_storage_system_arn_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("MaxResults")]);
    m_max_results_isSet = !json[QString("MaxResults")].isNull() && m_max_results_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListDiscoveryJobsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListDiscoveryJobsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_storage_system_arn_isSet) {
        obj.insert(QString("StorageSystemArn"), ::OpenAPI::toJsonValue(m_storage_system_arn));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("MaxResults"), ::OpenAPI::toJsonValue(m_max_results));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QString OAIListDiscoveryJobsRequest::getStorageSystemArn() const {
    return m_storage_system_arn;
}
void OAIListDiscoveryJobsRequest::setStorageSystemArn(const QString &storage_system_arn) {
    m_storage_system_arn = storage_system_arn;
    m_storage_system_arn_isSet = true;
}

bool OAIListDiscoveryJobsRequest::is_storage_system_arn_Set() const{
    return m_storage_system_arn_isSet;
}

bool OAIListDiscoveryJobsRequest::is_storage_system_arn_Valid() const{
    return m_storage_system_arn_isValid;
}

qint32 OAIListDiscoveryJobsRequest::getMaxResults() const {
    return m_max_results;
}
void OAIListDiscoveryJobsRequest::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAIListDiscoveryJobsRequest::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIListDiscoveryJobsRequest::is_max_results_Valid() const{
    return m_max_results_isValid;
}

QString OAIListDiscoveryJobsRequest::getNextToken() const {
    return m_next_token;
}
void OAIListDiscoveryJobsRequest::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListDiscoveryJobsRequest::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListDiscoveryJobsRequest::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListDiscoveryJobsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_storage_system_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListDiscoveryJobsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
