/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAgentListEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAgentListEntry::OAIAgentListEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAgentListEntry::OAIAgentListEntry() {
    this->initializeModel();
}

OAIAgentListEntry::~OAIAgentListEntry() {}

void OAIAgentListEntry::initializeModel() {

    m_agent_arn_isSet = false;
    m_agent_arn_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIAgentListEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAgentListEntry::fromJsonObject(QJsonObject json) {

    m_agent_arn_isValid = ::OpenAPI::fromJsonValue(m_agent_arn, json[QString("AgentArn")]);
    m_agent_arn_isSet = !json[QString("AgentArn")].isNull() && m_agent_arn_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIAgentListEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAgentListEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_agent_arn_isSet) {
        obj.insert(QString("AgentArn"), ::OpenAPI::toJsonValue(m_agent_arn));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIAgentListEntry::getAgentArn() const {
    return m_agent_arn;
}
void OAIAgentListEntry::setAgentArn(const QString &agent_arn) {
    m_agent_arn = agent_arn;
    m_agent_arn_isSet = true;
}

bool OAIAgentListEntry::is_agent_arn_Set() const{
    return m_agent_arn_isSet;
}

bool OAIAgentListEntry::is_agent_arn_Valid() const{
    return m_agent_arn_isValid;
}

QString OAIAgentListEntry::getName() const {
    return m_name;
}
void OAIAgentListEntry::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAgentListEntry::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAgentListEntry::is_name_Valid() const{
    return m_name_isValid;
}

OAIAgentStatus OAIAgentListEntry::getStatus() const {
    return m_status;
}
void OAIAgentListEntry::setStatus(const OAIAgentStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAgentListEntry::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAgentListEntry::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIAgentListEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agent_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAgentListEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
