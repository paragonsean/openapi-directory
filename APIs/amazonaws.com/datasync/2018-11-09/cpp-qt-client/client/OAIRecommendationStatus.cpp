/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecommendationStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecommendationStatus::OAIRecommendationStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecommendationStatus::OAIRecommendationStatus() {
    this->initializeModel();
}

OAIRecommendationStatus::~OAIRecommendationStatus() {}

void OAIRecommendationStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRecommendationStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRecommendationStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationStatus::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IN_PROGRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationStatus::IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COMPLETED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationStatus::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecommendationStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRecommendationStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRecommendationStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRecommendationStatus::NONE:
            val = "NONE";
            break;
        case eOAIRecommendationStatus::IN_PROGRESS:
            val = "IN_PROGRESS";
            break;
        case eOAIRecommendationStatus::COMPLETED:
            val = "COMPLETED";
            break;
        case eOAIRecommendationStatus::FAILED:
            val = "FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRecommendationStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRecommendationStatus::eOAIRecommendationStatus OAIRecommendationStatus::getValue() const {
    return m_value;
}

void OAIRecommendationStatus::setValue(const OAIRecommendationStatus::eOAIRecommendationStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRecommendationStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIRecommendationStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
