/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateLocationEfsRequest.h
 *
 * CreateLocationEfsRequest
 */

#ifndef OAICreateLocationEfsRequest_H
#define OAICreateLocationEfsRequest_H

#include <QJsonObject>

#include "OAICreateLocationEfsRequest_Ec2Config.h"
#include "OAIEfsInTransitEncryption.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateLocationEfsRequest_Ec2Config;

class OAICreateLocationEfsRequest : public OAIObject {
public:
    OAICreateLocationEfsRequest();
    OAICreateLocationEfsRequest(QString json);
    ~OAICreateLocationEfsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSubdirectory() const;
    void setSubdirectory(const QString &subdirectory);
    bool is_subdirectory_Set() const;
    bool is_subdirectory_Valid() const;

    QString getEfsFilesystemArn() const;
    void setEfsFilesystemArn(const QString &efs_filesystem_arn);
    bool is_efs_filesystem_arn_Set() const;
    bool is_efs_filesystem_arn_Valid() const;

    OAICreateLocationEfsRequest_Ec2Config getEc2Config() const;
    void setEc2Config(const OAICreateLocationEfsRequest_Ec2Config &ec2_config);
    bool is_ec2_config_Set() const;
    bool is_ec2_config_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getAccessPointArn() const;
    void setAccessPointArn(const QString &access_point_arn);
    bool is_access_point_arn_Set() const;
    bool is_access_point_arn_Valid() const;

    QString getFileSystemAccessRoleArn() const;
    void setFileSystemAccessRoleArn(const QString &file_system_access_role_arn);
    bool is_file_system_access_role_arn_Set() const;
    bool is_file_system_access_role_arn_Valid() const;

    OAIEfsInTransitEncryption getInTransitEncryption() const;
    void setInTransitEncryption(const OAIEfsInTransitEncryption &in_transit_encryption);
    bool is_in_transit_encryption_Set() const;
    bool is_in_transit_encryption_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_subdirectory;
    bool m_subdirectory_isSet;
    bool m_subdirectory_isValid;

    QString m_efs_filesystem_arn;
    bool m_efs_filesystem_arn_isSet;
    bool m_efs_filesystem_arn_isValid;

    OAICreateLocationEfsRequest_Ec2Config m_ec2_config;
    bool m_ec2_config_isSet;
    bool m_ec2_config_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_access_point_arn;
    bool m_access_point_arn_isSet;
    bool m_access_point_arn_isValid;

    QString m_file_system_access_role_arn;
    bool m_file_system_access_role_arn_isSet;
    bool m_file_system_access_role_arn_isValid;

    OAIEfsInTransitEncryption m_in_transit_encryption;
    bool m_in_transit_encryption_isSet;
    bool m_in_transit_encryption_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateLocationEfsRequest)

#endif // OAICreateLocationEfsRequest_H
