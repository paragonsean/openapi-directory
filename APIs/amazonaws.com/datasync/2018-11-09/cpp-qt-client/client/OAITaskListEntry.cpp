/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITaskListEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITaskListEntry::OAITaskListEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITaskListEntry::OAITaskListEntry() {
    this->initializeModel();
}

OAITaskListEntry::~OAITaskListEntry() {}

void OAITaskListEntry::initializeModel() {

    m_task_arn_isSet = false;
    m_task_arn_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAITaskListEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITaskListEntry::fromJsonObject(QJsonObject json) {

    m_task_arn_isValid = ::OpenAPI::fromJsonValue(m_task_arn, json[QString("TaskArn")]);
    m_task_arn_isSet = !json[QString("TaskArn")].isNull() && m_task_arn_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;
}

QString OAITaskListEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITaskListEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_task_arn_isSet) {
        obj.insert(QString("TaskArn"), ::OpenAPI::toJsonValue(m_task_arn));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAITaskListEntry::getTaskArn() const {
    return m_task_arn;
}
void OAITaskListEntry::setTaskArn(const QString &task_arn) {
    m_task_arn = task_arn;
    m_task_arn_isSet = true;
}

bool OAITaskListEntry::is_task_arn_Set() const{
    return m_task_arn_isSet;
}

bool OAITaskListEntry::is_task_arn_Valid() const{
    return m_task_arn_isValid;
}

OAITaskStatus OAITaskListEntry::getStatus() const {
    return m_status;
}
void OAITaskListEntry::setStatus(const OAITaskStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAITaskListEntry::is_status_Set() const{
    return m_status_isSet;
}

bool OAITaskListEntry::is_status_Valid() const{
    return m_status_isValid;
}

QString OAITaskListEntry::getName() const {
    return m_name;
}
void OAITaskListEntry::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITaskListEntry::is_name_Set() const{
    return m_name_isSet;
}

bool OAITaskListEntry::is_name_Valid() const{
    return m_name_isValid;
}

bool OAITaskListEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_task_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITaskListEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
