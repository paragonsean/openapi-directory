/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeTaskResponse.h
 *
 * DescribeTaskResponse
 */

#ifndef OAIDescribeTaskResponse_H
#define OAIDescribeTaskResponse_H

#include <QJsonObject>

#include "OAIDescribeTaskResponse_Options.h"
#include "OAIDescribeTaskResponse_Schedule.h"
#include "OAITaskStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeTaskResponse_Options;
class OAIDescribeTaskResponse_Schedule;

class OAIDescribeTaskResponse : public OAIObject {
public:
    OAIDescribeTaskResponse();
    OAIDescribeTaskResponse(QString json);
    ~OAIDescribeTaskResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTaskArn() const;
    void setTaskArn(const QString &task_arn);
    bool is_task_arn_Set() const;
    bool is_task_arn_Valid() const;

    OAITaskStatus getStatus() const;
    void setStatus(const OAITaskStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getCurrentTaskExecutionArn() const;
    void setCurrentTaskExecutionArn(const QString &current_task_execution_arn);
    bool is_current_task_execution_arn_Set() const;
    bool is_current_task_execution_arn_Valid() const;

    QString getSourceLocationArn() const;
    void setSourceLocationArn(const QString &source_location_arn);
    bool is_source_location_arn_Set() const;
    bool is_source_location_arn_Valid() const;

    QString getDestinationLocationArn() const;
    void setDestinationLocationArn(const QString &destination_location_arn);
    bool is_destination_location_arn_Set() const;
    bool is_destination_location_arn_Valid() const;

    QString getCloudWatchLogGroupArn() const;
    void setCloudWatchLogGroupArn(const QString &cloud_watch_log_group_arn);
    bool is_cloud_watch_log_group_arn_Set() const;
    bool is_cloud_watch_log_group_arn_Valid() const;

    QList getSourceNetworkInterfaceArns() const;
    void setSourceNetworkInterfaceArns(const QList &source_network_interface_arns);
    bool is_source_network_interface_arns_Set() const;
    bool is_source_network_interface_arns_Valid() const;

    QList getDestinationNetworkInterfaceArns() const;
    void setDestinationNetworkInterfaceArns(const QList &destination_network_interface_arns);
    bool is_destination_network_interface_arns_Set() const;
    bool is_destination_network_interface_arns_Valid() const;

    OAIDescribeTaskResponse_Options getOptions() const;
    void setOptions(const OAIDescribeTaskResponse_Options &options);
    bool is_options_Set() const;
    bool is_options_Valid() const;

    QList getExcludes() const;
    void setExcludes(const QList &excludes);
    bool is_excludes_Set() const;
    bool is_excludes_Valid() const;

    OAIDescribeTaskResponse_Schedule getSchedule() const;
    void setSchedule(const OAIDescribeTaskResponse_Schedule &schedule);
    bool is_schedule_Set() const;
    bool is_schedule_Valid() const;

    QString getErrorCode() const;
    void setErrorCode(const QString &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getErrorDetail() const;
    void setErrorDetail(const QString &error_detail);
    bool is_error_detail_Set() const;
    bool is_error_detail_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QList getIncludes() const;
    void setIncludes(const QList &includes);
    bool is_includes_Set() const;
    bool is_includes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_task_arn;
    bool m_task_arn_isSet;
    bool m_task_arn_isValid;

    OAITaskStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_current_task_execution_arn;
    bool m_current_task_execution_arn_isSet;
    bool m_current_task_execution_arn_isValid;

    QString m_source_location_arn;
    bool m_source_location_arn_isSet;
    bool m_source_location_arn_isValid;

    QString m_destination_location_arn;
    bool m_destination_location_arn_isSet;
    bool m_destination_location_arn_isValid;

    QString m_cloud_watch_log_group_arn;
    bool m_cloud_watch_log_group_arn_isSet;
    bool m_cloud_watch_log_group_arn_isValid;

    QList m_source_network_interface_arns;
    bool m_source_network_interface_arns_isSet;
    bool m_source_network_interface_arns_isValid;

    QList m_destination_network_interface_arns;
    bool m_destination_network_interface_arns_isSet;
    bool m_destination_network_interface_arns_isValid;

    OAIDescribeTaskResponse_Options m_options;
    bool m_options_isSet;
    bool m_options_isValid;

    QList m_excludes;
    bool m_excludes_isSet;
    bool m_excludes_isValid;

    OAIDescribeTaskResponse_Schedule m_schedule;
    bool m_schedule_isSet;
    bool m_schedule_isValid;

    QString m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_error_detail;
    bool m_error_detail_isSet;
    bool m_error_detail_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QList m_includes;
    bool m_includes_isSet;
    bool m_includes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeTaskResponse)

#endif // OAIDescribeTaskResponse_H
