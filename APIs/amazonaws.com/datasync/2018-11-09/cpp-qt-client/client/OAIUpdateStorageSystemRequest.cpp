/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateStorageSystemRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateStorageSystemRequest::OAIUpdateStorageSystemRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateStorageSystemRequest::OAIUpdateStorageSystemRequest() {
    this->initializeModel();
}

OAIUpdateStorageSystemRequest::~OAIUpdateStorageSystemRequest() {}

void OAIUpdateStorageSystemRequest::initializeModel() {

    m_storage_system_arn_isSet = false;
    m_storage_system_arn_isValid = false;

    m_server_configuration_isSet = false;
    m_server_configuration_isValid = false;

    m_agent_arns_isSet = false;
    m_agent_arns_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_cloud_watch_log_group_arn_isSet = false;
    m_cloud_watch_log_group_arn_isValid = false;

    m_credentials_isSet = false;
    m_credentials_isValid = false;
}

void OAIUpdateStorageSystemRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateStorageSystemRequest::fromJsonObject(QJsonObject json) {

    m_storage_system_arn_isValid = ::OpenAPI::fromJsonValue(m_storage_system_arn, json[QString("StorageSystemArn")]);
    m_storage_system_arn_isSet = !json[QString("StorageSystemArn")].isNull() && m_storage_system_arn_isValid;

    m_server_configuration_isValid = ::OpenAPI::fromJsonValue(m_server_configuration, json[QString("ServerConfiguration")]);
    m_server_configuration_isSet = !json[QString("ServerConfiguration")].isNull() && m_server_configuration_isValid;

    m_agent_arns_isValid = ::OpenAPI::fromJsonValue(m_agent_arns, json[QString("AgentArns")]);
    m_agent_arns_isSet = !json[QString("AgentArns")].isNull() && m_agent_arns_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_cloud_watch_log_group_arn_isValid = ::OpenAPI::fromJsonValue(m_cloud_watch_log_group_arn, json[QString("CloudWatchLogGroupArn")]);
    m_cloud_watch_log_group_arn_isSet = !json[QString("CloudWatchLogGroupArn")].isNull() && m_cloud_watch_log_group_arn_isValid;

    m_credentials_isValid = ::OpenAPI::fromJsonValue(m_credentials, json[QString("Credentials")]);
    m_credentials_isSet = !json[QString("Credentials")].isNull() && m_credentials_isValid;
}

QString OAIUpdateStorageSystemRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateStorageSystemRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_storage_system_arn_isSet) {
        obj.insert(QString("StorageSystemArn"), ::OpenAPI::toJsonValue(m_storage_system_arn));
    }
    if (m_server_configuration.isSet()) {
        obj.insert(QString("ServerConfiguration"), ::OpenAPI::toJsonValue(m_server_configuration));
    }
    if (m_agent_arns.isSet()) {
        obj.insert(QString("AgentArns"), ::OpenAPI::toJsonValue(m_agent_arns));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_cloud_watch_log_group_arn_isSet) {
        obj.insert(QString("CloudWatchLogGroupArn"), ::OpenAPI::toJsonValue(m_cloud_watch_log_group_arn));
    }
    if (m_credentials.isSet()) {
        obj.insert(QString("Credentials"), ::OpenAPI::toJsonValue(m_credentials));
    }
    return obj;
}

QString OAIUpdateStorageSystemRequest::getStorageSystemArn() const {
    return m_storage_system_arn;
}
void OAIUpdateStorageSystemRequest::setStorageSystemArn(const QString &storage_system_arn) {
    m_storage_system_arn = storage_system_arn;
    m_storage_system_arn_isSet = true;
}

bool OAIUpdateStorageSystemRequest::is_storage_system_arn_Set() const{
    return m_storage_system_arn_isSet;
}

bool OAIUpdateStorageSystemRequest::is_storage_system_arn_Valid() const{
    return m_storage_system_arn_isValid;
}

OAIUpdateStorageSystemRequest_ServerConfiguration OAIUpdateStorageSystemRequest::getServerConfiguration() const {
    return m_server_configuration;
}
void OAIUpdateStorageSystemRequest::setServerConfiguration(const OAIUpdateStorageSystemRequest_ServerConfiguration &server_configuration) {
    m_server_configuration = server_configuration;
    m_server_configuration_isSet = true;
}

bool OAIUpdateStorageSystemRequest::is_server_configuration_Set() const{
    return m_server_configuration_isSet;
}

bool OAIUpdateStorageSystemRequest::is_server_configuration_Valid() const{
    return m_server_configuration_isValid;
}

QList OAIUpdateStorageSystemRequest::getAgentArns() const {
    return m_agent_arns;
}
void OAIUpdateStorageSystemRequest::setAgentArns(const QList &agent_arns) {
    m_agent_arns = agent_arns;
    m_agent_arns_isSet = true;
}

bool OAIUpdateStorageSystemRequest::is_agent_arns_Set() const{
    return m_agent_arns_isSet;
}

bool OAIUpdateStorageSystemRequest::is_agent_arns_Valid() const{
    return m_agent_arns_isValid;
}

QString OAIUpdateStorageSystemRequest::getName() const {
    return m_name;
}
void OAIUpdateStorageSystemRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateStorageSystemRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateStorageSystemRequest::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIUpdateStorageSystemRequest::getCloudWatchLogGroupArn() const {
    return m_cloud_watch_log_group_arn;
}
void OAIUpdateStorageSystemRequest::setCloudWatchLogGroupArn(const QString &cloud_watch_log_group_arn) {
    m_cloud_watch_log_group_arn = cloud_watch_log_group_arn;
    m_cloud_watch_log_group_arn_isSet = true;
}

bool OAIUpdateStorageSystemRequest::is_cloud_watch_log_group_arn_Set() const{
    return m_cloud_watch_log_group_arn_isSet;
}

bool OAIUpdateStorageSystemRequest::is_cloud_watch_log_group_arn_Valid() const{
    return m_cloud_watch_log_group_arn_isValid;
}

OAIAddStorageSystemRequest_Credentials OAIUpdateStorageSystemRequest::getCredentials() const {
    return m_credentials;
}
void OAIUpdateStorageSystemRequest::setCredentials(const OAIAddStorageSystemRequest_Credentials &credentials) {
    m_credentials = credentials;
    m_credentials_isSet = true;
}

bool OAIUpdateStorageSystemRequest::is_credentials_Set() const{
    return m_credentials_isSet;
}

bool OAIUpdateStorageSystemRequest::is_credentials_Valid() const{
    return m_credentials_isValid;
}

bool OAIUpdateStorageSystemRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_storage_system_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_server_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_agent_arns.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_watch_log_group_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_credentials.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateStorageSystemRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_storage_system_arn_isValid && true;
}

} // namespace OpenAPI
