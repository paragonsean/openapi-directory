/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFsxProtocol_NFS.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFsxProtocol_NFS::OAIFsxProtocol_NFS(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFsxProtocol_NFS::OAIFsxProtocol_NFS() {
    this->initializeModel();
}

OAIFsxProtocol_NFS::~OAIFsxProtocol_NFS() {}

void OAIFsxProtocol_NFS::initializeModel() {

    m_mount_options_isSet = false;
    m_mount_options_isValid = false;
}

void OAIFsxProtocol_NFS::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFsxProtocol_NFS::fromJsonObject(QJsonObject json) {

    m_mount_options_isValid = ::OpenAPI::fromJsonValue(m_mount_options, json[QString("MountOptions")]);
    m_mount_options_isSet = !json[QString("MountOptions")].isNull() && m_mount_options_isValid;
}

QString OAIFsxProtocol_NFS::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFsxProtocol_NFS::asJsonObject() const {
    QJsonObject obj;
    if (m_mount_options.isSet()) {
        obj.insert(QString("MountOptions"), ::OpenAPI::toJsonValue(m_mount_options));
    }
    return obj;
}

OAINfsMountOptions OAIFsxProtocol_NFS::getMountOptions() const {
    return m_mount_options;
}
void OAIFsxProtocol_NFS::setMountOptions(const OAINfsMountOptions &mount_options) {
    m_mount_options = mount_options;
    m_mount_options_isSet = true;
}

bool OAIFsxProtocol_NFS::is_mount_options_Set() const{
    return m_mount_options_isSet;
}

bool OAIFsxProtocol_NFS::is_mount_options_Valid() const{
    return m_mount_options_isValid;
}

bool OAIFsxProtocol_NFS::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mount_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFsxProtocol_NFS::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
