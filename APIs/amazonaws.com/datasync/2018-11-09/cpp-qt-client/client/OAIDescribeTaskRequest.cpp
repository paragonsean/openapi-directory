/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeTaskRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeTaskRequest::OAIDescribeTaskRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeTaskRequest::OAIDescribeTaskRequest() {
    this->initializeModel();
}

OAIDescribeTaskRequest::~OAIDescribeTaskRequest() {}

void OAIDescribeTaskRequest::initializeModel() {

    m_task_arn_isSet = false;
    m_task_arn_isValid = false;
}

void OAIDescribeTaskRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeTaskRequest::fromJsonObject(QJsonObject json) {

    m_task_arn_isValid = ::OpenAPI::fromJsonValue(m_task_arn, json[QString("TaskArn")]);
    m_task_arn_isSet = !json[QString("TaskArn")].isNull() && m_task_arn_isValid;
}

QString OAIDescribeTaskRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeTaskRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_task_arn_isSet) {
        obj.insert(QString("TaskArn"), ::OpenAPI::toJsonValue(m_task_arn));
    }
    return obj;
}

QString OAIDescribeTaskRequest::getTaskArn() const {
    return m_task_arn;
}
void OAIDescribeTaskRequest::setTaskArn(const QString &task_arn) {
    m_task_arn = task_arn;
    m_task_arn_isSet = true;
}

bool OAIDescribeTaskRequest::is_task_arn_Set() const{
    return m_task_arn_isSet;
}

bool OAIDescribeTaskRequest::is_task_arn_Valid() const{
    return m_task_arn_isValid;
}

bool OAIDescribeTaskRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_task_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeTaskRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_task_arn_isValid && true;
}

} // namespace OpenAPI
