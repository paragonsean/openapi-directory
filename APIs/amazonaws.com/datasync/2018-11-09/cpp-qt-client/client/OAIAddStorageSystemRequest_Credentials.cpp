/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddStorageSystemRequest_Credentials.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddStorageSystemRequest_Credentials::OAIAddStorageSystemRequest_Credentials(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddStorageSystemRequest_Credentials::OAIAddStorageSystemRequest_Credentials() {
    this->initializeModel();
}

OAIAddStorageSystemRequest_Credentials::~OAIAddStorageSystemRequest_Credentials() {}

void OAIAddStorageSystemRequest_Credentials::initializeModel() {

    m_username_isSet = false;
    m_username_isValid = false;

    m_password_isSet = false;
    m_password_isValid = false;
}

void OAIAddStorageSystemRequest_Credentials::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddStorageSystemRequest_Credentials::fromJsonObject(QJsonObject json) {

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("Username")]);
    m_username_isSet = !json[QString("Username")].isNull() && m_username_isValid;

    m_password_isValid = ::OpenAPI::fromJsonValue(m_password, json[QString("Password")]);
    m_password_isSet = !json[QString("Password")].isNull() && m_password_isValid;
}

QString OAIAddStorageSystemRequest_Credentials::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddStorageSystemRequest_Credentials::asJsonObject() const {
    QJsonObject obj;
    if (m_username_isSet) {
        obj.insert(QString("Username"), ::OpenAPI::toJsonValue(m_username));
    }
    if (m_password_isSet) {
        obj.insert(QString("Password"), ::OpenAPI::toJsonValue(m_password));
    }
    return obj;
}

QString OAIAddStorageSystemRequest_Credentials::getUsername() const {
    return m_username;
}
void OAIAddStorageSystemRequest_Credentials::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAIAddStorageSystemRequest_Credentials::is_username_Set() const{
    return m_username_isSet;
}

bool OAIAddStorageSystemRequest_Credentials::is_username_Valid() const{
    return m_username_isValid;
}

QString OAIAddStorageSystemRequest_Credentials::getPassword() const {
    return m_password;
}
void OAIAddStorageSystemRequest_Credentials::setPassword(const QString &password) {
    m_password = password;
    m_password_isSet = true;
}

bool OAIAddStorageSystemRequest_Credentials::is_password_Set() const{
    return m_password_isSet;
}

bool OAIAddStorageSystemRequest_Credentials::is_password_Valid() const{
    return m_password_isValid;
}

bool OAIAddStorageSystemRequest_Credentials::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddStorageSystemRequest_Credentials::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_username_isValid && m_password_isValid && true;
}

} // namespace OpenAPI
