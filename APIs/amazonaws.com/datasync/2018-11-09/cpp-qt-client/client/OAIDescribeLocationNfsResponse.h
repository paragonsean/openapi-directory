/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeLocationNfsResponse.h
 *
 * DescribeLocationNfsResponse
 */

#ifndef OAIDescribeLocationNfsResponse_H
#define OAIDescribeLocationNfsResponse_H

#include <QJsonObject>

#include "OAIDescribeLocationNfsResponse_MountOptions.h"
#include "OAIOnPremConfig.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOnPremConfig;
class OAIDescribeLocationNfsResponse_MountOptions;

class OAIDescribeLocationNfsResponse : public OAIObject {
public:
    OAIDescribeLocationNfsResponse();
    OAIDescribeLocationNfsResponse(QString json);
    ~OAIDescribeLocationNfsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLocationArn() const;
    void setLocationArn(const QString &location_arn);
    bool is_location_arn_Set() const;
    bool is_location_arn_Valid() const;

    QString getLocationUri() const;
    void setLocationUri(const QString &location_uri);
    bool is_location_uri_Set() const;
    bool is_location_uri_Valid() const;

    OAIOnPremConfig getOnPremConfig() const;
    void setOnPremConfig(const OAIOnPremConfig &on_prem_config);
    bool is_on_prem_config_Set() const;
    bool is_on_prem_config_Valid() const;

    OAIDescribeLocationNfsResponse_MountOptions getMountOptions() const;
    void setMountOptions(const OAIDescribeLocationNfsResponse_MountOptions &mount_options);
    bool is_mount_options_Set() const;
    bool is_mount_options_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_location_arn;
    bool m_location_arn_isSet;
    bool m_location_arn_isValid;

    QString m_location_uri;
    bool m_location_uri_isSet;
    bool m_location_uri_isValid;

    OAIOnPremConfig m_on_prem_config;
    bool m_on_prem_config_isSet;
    bool m_on_prem_config_isValid;

    OAIDescribeLocationNfsResponse_MountOptions m_mount_options;
    bool m_mount_options_isSet;
    bool m_mount_options_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeLocationNfsResponse)

#endif // OAIDescribeLocationNfsResponse_H
