/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAgentRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAgentRequest::OAIDescribeAgentRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAgentRequest::OAIDescribeAgentRequest() {
    this->initializeModel();
}

OAIDescribeAgentRequest::~OAIDescribeAgentRequest() {}

void OAIDescribeAgentRequest::initializeModel() {

    m_agent_arn_isSet = false;
    m_agent_arn_isValid = false;
}

void OAIDescribeAgentRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAgentRequest::fromJsonObject(QJsonObject json) {

    m_agent_arn_isValid = ::OpenAPI::fromJsonValue(m_agent_arn, json[QString("AgentArn")]);
    m_agent_arn_isSet = !json[QString("AgentArn")].isNull() && m_agent_arn_isValid;
}

QString OAIDescribeAgentRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAgentRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_agent_arn_isSet) {
        obj.insert(QString("AgentArn"), ::OpenAPI::toJsonValue(m_agent_arn));
    }
    return obj;
}

QString OAIDescribeAgentRequest::getAgentArn() const {
    return m_agent_arn;
}
void OAIDescribeAgentRequest::setAgentArn(const QString &agent_arn) {
    m_agent_arn = agent_arn;
    m_agent_arn_isSet = true;
}

bool OAIDescribeAgentRequest::is_agent_arn_Set() const{
    return m_agent_arn_isSet;
}

bool OAIDescribeAgentRequest::is_agent_arn_Valid() const{
    return m_agent_arn_isValid;
}

bool OAIDescribeAgentRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agent_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAgentRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_agent_arn_isValid && true;
}

} // namespace OpenAPI
