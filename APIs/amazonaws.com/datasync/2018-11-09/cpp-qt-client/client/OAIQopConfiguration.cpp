/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQopConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQopConfiguration::OAIQopConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQopConfiguration::OAIQopConfiguration() {
    this->initializeModel();
}

OAIQopConfiguration::~OAIQopConfiguration() {}

void OAIQopConfiguration::initializeModel() {

    m_rpc_protection_isSet = false;
    m_rpc_protection_isValid = false;

    m_data_transfer_protection_isSet = false;
    m_data_transfer_protection_isValid = false;
}

void OAIQopConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQopConfiguration::fromJsonObject(QJsonObject json) {

    m_rpc_protection_isValid = ::OpenAPI::fromJsonValue(m_rpc_protection, json[QString("RpcProtection")]);
    m_rpc_protection_isSet = !json[QString("RpcProtection")].isNull() && m_rpc_protection_isValid;

    m_data_transfer_protection_isValid = ::OpenAPI::fromJsonValue(m_data_transfer_protection, json[QString("DataTransferProtection")]);
    m_data_transfer_protection_isSet = !json[QString("DataTransferProtection")].isNull() && m_data_transfer_protection_isValid;
}

QString OAIQopConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQopConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_rpc_protection.isSet()) {
        obj.insert(QString("RpcProtection"), ::OpenAPI::toJsonValue(m_rpc_protection));
    }
    if (m_data_transfer_protection.isSet()) {
        obj.insert(QString("DataTransferProtection"), ::OpenAPI::toJsonValue(m_data_transfer_protection));
    }
    return obj;
}

OAIHdfsRpcProtection OAIQopConfiguration::getRpcProtection() const {
    return m_rpc_protection;
}
void OAIQopConfiguration::setRpcProtection(const OAIHdfsRpcProtection &rpc_protection) {
    m_rpc_protection = rpc_protection;
    m_rpc_protection_isSet = true;
}

bool OAIQopConfiguration::is_rpc_protection_Set() const{
    return m_rpc_protection_isSet;
}

bool OAIQopConfiguration::is_rpc_protection_Valid() const{
    return m_rpc_protection_isValid;
}

OAIHdfsDataTransferProtection OAIQopConfiguration::getDataTransferProtection() const {
    return m_data_transfer_protection;
}
void OAIQopConfiguration::setDataTransferProtection(const OAIHdfsDataTransferProtection &data_transfer_protection) {
    m_data_transfer_protection = data_transfer_protection;
    m_data_transfer_protection_isSet = true;
}

bool OAIQopConfiguration::is_data_transfer_protection_Set() const{
    return m_data_transfer_protection_isSet;
}

bool OAIQopConfiguration::is_data_transfer_protection_Valid() const{
    return m_data_transfer_protection_isValid;
}

bool OAIQopConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rpc_protection.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_transfer_protection.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQopConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
