/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeDiscoveryJobRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeDiscoveryJobRequest::OAIDescribeDiscoveryJobRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeDiscoveryJobRequest::OAIDescribeDiscoveryJobRequest() {
    this->initializeModel();
}

OAIDescribeDiscoveryJobRequest::~OAIDescribeDiscoveryJobRequest() {}

void OAIDescribeDiscoveryJobRequest::initializeModel() {

    m_discovery_job_arn_isSet = false;
    m_discovery_job_arn_isValid = false;
}

void OAIDescribeDiscoveryJobRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeDiscoveryJobRequest::fromJsonObject(QJsonObject json) {

    m_discovery_job_arn_isValid = ::OpenAPI::fromJsonValue(m_discovery_job_arn, json[QString("DiscoveryJobArn")]);
    m_discovery_job_arn_isSet = !json[QString("DiscoveryJobArn")].isNull() && m_discovery_job_arn_isValid;
}

QString OAIDescribeDiscoveryJobRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeDiscoveryJobRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_discovery_job_arn_isSet) {
        obj.insert(QString("DiscoveryJobArn"), ::OpenAPI::toJsonValue(m_discovery_job_arn));
    }
    return obj;
}

QString OAIDescribeDiscoveryJobRequest::getDiscoveryJobArn() const {
    return m_discovery_job_arn;
}
void OAIDescribeDiscoveryJobRequest::setDiscoveryJobArn(const QString &discovery_job_arn) {
    m_discovery_job_arn = discovery_job_arn;
    m_discovery_job_arn_isSet = true;
}

bool OAIDescribeDiscoveryJobRequest::is_discovery_job_arn_Set() const{
    return m_discovery_job_arn_isSet;
}

bool OAIDescribeDiscoveryJobRequest::is_discovery_job_arn_Valid() const{
    return m_discovery_job_arn_isValid;
}

bool OAIDescribeDiscoveryJobRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_discovery_job_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeDiscoveryJobRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_discovery_job_arn_isValid && true;
}

} // namespace OpenAPI
