/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTaskExecutionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTaskExecutionRequest::OAIUpdateTaskExecutionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTaskExecutionRequest::OAIUpdateTaskExecutionRequest() {
    this->initializeModel();
}

OAIUpdateTaskExecutionRequest::~OAIUpdateTaskExecutionRequest() {}

void OAIUpdateTaskExecutionRequest::initializeModel() {

    m_task_execution_arn_isSet = false;
    m_task_execution_arn_isValid = false;

    m_options_isSet = false;
    m_options_isValid = false;
}

void OAIUpdateTaskExecutionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTaskExecutionRequest::fromJsonObject(QJsonObject json) {

    m_task_execution_arn_isValid = ::OpenAPI::fromJsonValue(m_task_execution_arn, json[QString("TaskExecutionArn")]);
    m_task_execution_arn_isSet = !json[QString("TaskExecutionArn")].isNull() && m_task_execution_arn_isValid;

    m_options_isValid = ::OpenAPI::fromJsonValue(m_options, json[QString("Options")]);
    m_options_isSet = !json[QString("Options")].isNull() && m_options_isValid;
}

QString OAIUpdateTaskExecutionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTaskExecutionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_task_execution_arn_isSet) {
        obj.insert(QString("TaskExecutionArn"), ::OpenAPI::toJsonValue(m_task_execution_arn));
    }
    if (m_options.isSet()) {
        obj.insert(QString("Options"), ::OpenAPI::toJsonValue(m_options));
    }
    return obj;
}

QString OAIUpdateTaskExecutionRequest::getTaskExecutionArn() const {
    return m_task_execution_arn;
}
void OAIUpdateTaskExecutionRequest::setTaskExecutionArn(const QString &task_execution_arn) {
    m_task_execution_arn = task_execution_arn;
    m_task_execution_arn_isSet = true;
}

bool OAIUpdateTaskExecutionRequest::is_task_execution_arn_Set() const{
    return m_task_execution_arn_isSet;
}

bool OAIUpdateTaskExecutionRequest::is_task_execution_arn_Valid() const{
    return m_task_execution_arn_isValid;
}

OAIOptions OAIUpdateTaskExecutionRequest::getOptions() const {
    return m_options;
}
void OAIUpdateTaskExecutionRequest::setOptions(const OAIOptions &options) {
    m_options = options;
    m_options_isSet = true;
}

bool OAIUpdateTaskExecutionRequest::is_options_Set() const{
    return m_options_isSet;
}

bool OAIUpdateTaskExecutionRequest::is_options_Valid() const{
    return m_options_isValid;
}

bool OAIUpdateTaskExecutionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_task_execution_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_options.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTaskExecutionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_task_execution_arn_isValid && m_options_isValid && true;
}

} // namespace OpenAPI
