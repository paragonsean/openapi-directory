/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILogLevel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILogLevel::OAILogLevel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILogLevel::OAILogLevel() {
    this->initializeModel();
}

OAILogLevel::~OAILogLevel() {}

void OAILogLevel::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAILogLevel::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAILogLevel::fromJson(QString jsonString) {
    
    if ( jsonString.compare("OFF", Qt::CaseInsensitive) == 0) {
        m_value = eOAILogLevel::OFF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BASIC", Qt::CaseInsensitive) == 0) {
        m_value = eOAILogLevel::BASIC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TRANSFER", Qt::CaseInsensitive) == 0) {
        m_value = eOAILogLevel::TRANSFER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAILogLevel::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAILogLevel::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAILogLevel::OFF:
            val = "OFF";
            break;
        case eOAILogLevel::BASIC:
            val = "BASIC";
            break;
        case eOAILogLevel::TRANSFER:
            val = "TRANSFER";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAILogLevel::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAILogLevel::eOAILogLevel OAILogLevel::getValue() const {
    return m_value;
}

void OAILogLevel::setValue(const OAILogLevel::eOAILogLevel& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAILogLevel::isSet() const {
    
    return m_value_isSet;
}

bool OAILogLevel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
