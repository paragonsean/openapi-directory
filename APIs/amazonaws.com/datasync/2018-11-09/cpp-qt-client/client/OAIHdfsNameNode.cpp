/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHdfsNameNode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHdfsNameNode::OAIHdfsNameNode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHdfsNameNode::OAIHdfsNameNode() {
    this->initializeModel();
}

OAIHdfsNameNode::~OAIHdfsNameNode() {}

void OAIHdfsNameNode::initializeModel() {

    m_hostname_isSet = false;
    m_hostname_isValid = false;

    m_port_isSet = false;
    m_port_isValid = false;
}

void OAIHdfsNameNode::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHdfsNameNode::fromJsonObject(QJsonObject json) {

    m_hostname_isValid = ::OpenAPI::fromJsonValue(m_hostname, json[QString("Hostname")]);
    m_hostname_isSet = !json[QString("Hostname")].isNull() && m_hostname_isValid;

    m_port_isValid = ::OpenAPI::fromJsonValue(m_port, json[QString("Port")]);
    m_port_isSet = !json[QString("Port")].isNull() && m_port_isValid;
}

QString OAIHdfsNameNode::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHdfsNameNode::asJsonObject() const {
    QJsonObject obj;
    if (m_hostname_isSet) {
        obj.insert(QString("Hostname"), ::OpenAPI::toJsonValue(m_hostname));
    }
    if (m_port_isSet) {
        obj.insert(QString("Port"), ::OpenAPI::toJsonValue(m_port));
    }
    return obj;
}

QString OAIHdfsNameNode::getHostname() const {
    return m_hostname;
}
void OAIHdfsNameNode::setHostname(const QString &hostname) {
    m_hostname = hostname;
    m_hostname_isSet = true;
}

bool OAIHdfsNameNode::is_hostname_Set() const{
    return m_hostname_isSet;
}

bool OAIHdfsNameNode::is_hostname_Valid() const{
    return m_hostname_isValid;
}

qint32 OAIHdfsNameNode::getPort() const {
    return m_port;
}
void OAIHdfsNameNode::setPort(const qint32 &port) {
    m_port = port;
    m_port_isSet = true;
}

bool OAIHdfsNameNode::is_port_Set() const{
    return m_port_isSet;
}

bool OAIHdfsNameNode::is_port_Valid() const{
    return m_port_isValid;
}

bool OAIHdfsNameNode::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hostname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_port_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHdfsNameNode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_hostname_isValid && m_port_isValid && true;
}

} // namespace OpenAPI
