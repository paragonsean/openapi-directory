/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeLocationFsxWindowsResponse.h
 *
 * 
 */

#ifndef OAIDescribeLocationFsxWindowsResponse_H
#define OAIDescribeLocationFsxWindowsResponse_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeLocationFsxWindowsResponse : public OAIObject {
public:
    OAIDescribeLocationFsxWindowsResponse();
    OAIDescribeLocationFsxWindowsResponse(QString json);
    ~OAIDescribeLocationFsxWindowsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLocationArn() const;
    void setLocationArn(const QString &location_arn);
    bool is_location_arn_Set() const;
    bool is_location_arn_Valid() const;

    QString getLocationUri() const;
    void setLocationUri(const QString &location_uri);
    bool is_location_uri_Set() const;
    bool is_location_uri_Valid() const;

    QList getSecurityGroupArns() const;
    void setSecurityGroupArns(const QList &security_group_arns);
    bool is_security_group_arns_Set() const;
    bool is_security_group_arns_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getUser() const;
    void setUser(const QString &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_location_arn;
    bool m_location_arn_isSet;
    bool m_location_arn_isValid;

    QString m_location_uri;
    bool m_location_uri_isSet;
    bool m_location_uri_isValid;

    QList m_security_group_arns;
    bool m_security_group_arns_isSet;
    bool m_security_group_arns_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeLocationFsxWindowsResponse)

#endif // OAIDescribeLocationFsxWindowsResponse_H
