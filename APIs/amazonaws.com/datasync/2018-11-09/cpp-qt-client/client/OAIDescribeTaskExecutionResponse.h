/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeTaskExecutionResponse.h
 *
 * DescribeTaskExecutionResponse
 */

#ifndef OAIDescribeTaskExecutionResponse_H
#define OAIDescribeTaskExecutionResponse_H

#include <QJsonObject>

#include "OAIDescribeTaskExecutionResponse_Result.h"
#include "OAIOptions.h"
#include "OAITaskExecutionStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOptions;
class OAIDescribeTaskExecutionResponse_Result;

class OAIDescribeTaskExecutionResponse : public OAIObject {
public:
    OAIDescribeTaskExecutionResponse();
    OAIDescribeTaskExecutionResponse(QString json);
    ~OAIDescribeTaskExecutionResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTaskExecutionArn() const;
    void setTaskExecutionArn(const QString &task_execution_arn);
    bool is_task_execution_arn_Set() const;
    bool is_task_execution_arn_Valid() const;

    OAITaskExecutionStatus getStatus() const;
    void setStatus(const OAITaskExecutionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIOptions getOptions() const;
    void setOptions(const OAIOptions &options);
    bool is_options_Set() const;
    bool is_options_Valid() const;

    QList getExcludes() const;
    void setExcludes(const QList &excludes);
    bool is_excludes_Set() const;
    bool is_excludes_Valid() const;

    QList getIncludes() const;
    void setIncludes(const QList &includes);
    bool is_includes_Set() const;
    bool is_includes_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    qint32 getEstimatedFilesToTransfer() const;
    void setEstimatedFilesToTransfer(const qint32 &estimated_files_to_transfer);
    bool is_estimated_files_to_transfer_Set() const;
    bool is_estimated_files_to_transfer_Valid() const;

    qint32 getEstimatedBytesToTransfer() const;
    void setEstimatedBytesToTransfer(const qint32 &estimated_bytes_to_transfer);
    bool is_estimated_bytes_to_transfer_Set() const;
    bool is_estimated_bytes_to_transfer_Valid() const;

    qint32 getFilesTransferred() const;
    void setFilesTransferred(const qint32 &files_transferred);
    bool is_files_transferred_Set() const;
    bool is_files_transferred_Valid() const;

    qint32 getBytesWritten() const;
    void setBytesWritten(const qint32 &bytes_written);
    bool is_bytes_written_Set() const;
    bool is_bytes_written_Valid() const;

    qint32 getBytesTransferred() const;
    void setBytesTransferred(const qint32 &bytes_transferred);
    bool is_bytes_transferred_Set() const;
    bool is_bytes_transferred_Valid() const;

    OAIDescribeTaskExecutionResponse_Result getResult() const;
    void setResult(const OAIDescribeTaskExecutionResponse_Result &result);
    bool is_result_Set() const;
    bool is_result_Valid() const;

    qint32 getBytesCompressed() const;
    void setBytesCompressed(const qint32 &bytes_compressed);
    bool is_bytes_compressed_Set() const;
    bool is_bytes_compressed_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_task_execution_arn;
    bool m_task_execution_arn_isSet;
    bool m_task_execution_arn_isValid;

    OAITaskExecutionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIOptions m_options;
    bool m_options_isSet;
    bool m_options_isValid;

    QList m_excludes;
    bool m_excludes_isSet;
    bool m_excludes_isValid;

    QList m_includes;
    bool m_includes_isSet;
    bool m_includes_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    qint32 m_estimated_files_to_transfer;
    bool m_estimated_files_to_transfer_isSet;
    bool m_estimated_files_to_transfer_isValid;

    qint32 m_estimated_bytes_to_transfer;
    bool m_estimated_bytes_to_transfer_isSet;
    bool m_estimated_bytes_to_transfer_isValid;

    qint32 m_files_transferred;
    bool m_files_transferred_isSet;
    bool m_files_transferred_isValid;

    qint32 m_bytes_written;
    bool m_bytes_written_isSet;
    bool m_bytes_written_isValid;

    qint32 m_bytes_transferred;
    bool m_bytes_transferred_isSet;
    bool m_bytes_transferred_isValid;

    OAIDescribeTaskExecutionResponse_Result m_result;
    bool m_result_isSet;
    bool m_result_isValid;

    qint32 m_bytes_compressed;
    bool m_bytes_compressed_isSet;
    bool m_bytes_compressed_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeTaskExecutionResponse)

#endif // OAIDescribeTaskExecutionResponse_H
