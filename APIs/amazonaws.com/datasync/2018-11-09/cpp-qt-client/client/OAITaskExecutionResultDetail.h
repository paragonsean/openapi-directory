/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskExecutionResultDetail.h
 *
 * Describes the detailed result of a &lt;code&gt;TaskExecution&lt;/code&gt; operation. This result includes the time in milliseconds spent in each phase, the status of the task execution, and the errors encountered.
 */

#ifndef OAITaskExecutionResultDetail_H
#define OAITaskExecutionResultDetail_H

#include <QJsonObject>

#include "OAIPhaseStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITaskExecutionResultDetail : public OAIObject {
public:
    OAITaskExecutionResultDetail();
    OAITaskExecutionResultDetail(QString json);
    ~OAITaskExecutionResultDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPrepareDuration() const;
    void setPrepareDuration(const qint32 &prepare_duration);
    bool is_prepare_duration_Set() const;
    bool is_prepare_duration_Valid() const;

    OAIPhaseStatus getPrepareStatus() const;
    void setPrepareStatus(const OAIPhaseStatus &prepare_status);
    bool is_prepare_status_Set() const;
    bool is_prepare_status_Valid() const;

    qint32 getTotalDuration() const;
    void setTotalDuration(const qint32 &total_duration);
    bool is_total_duration_Set() const;
    bool is_total_duration_Valid() const;

    qint32 getTransferDuration() const;
    void setTransferDuration(const qint32 &transfer_duration);
    bool is_transfer_duration_Set() const;
    bool is_transfer_duration_Valid() const;

    OAIPhaseStatus getTransferStatus() const;
    void setTransferStatus(const OAIPhaseStatus &transfer_status);
    bool is_transfer_status_Set() const;
    bool is_transfer_status_Valid() const;

    qint32 getVerifyDuration() const;
    void setVerifyDuration(const qint32 &verify_duration);
    bool is_verify_duration_Set() const;
    bool is_verify_duration_Valid() const;

    OAIPhaseStatus getVerifyStatus() const;
    void setVerifyStatus(const OAIPhaseStatus &verify_status);
    bool is_verify_status_Set() const;
    bool is_verify_status_Valid() const;

    QString getErrorCode() const;
    void setErrorCode(const QString &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getErrorDetail() const;
    void setErrorDetail(const QString &error_detail);
    bool is_error_detail_Set() const;
    bool is_error_detail_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_prepare_duration;
    bool m_prepare_duration_isSet;
    bool m_prepare_duration_isValid;

    OAIPhaseStatus m_prepare_status;
    bool m_prepare_status_isSet;
    bool m_prepare_status_isValid;

    qint32 m_total_duration;
    bool m_total_duration_isSet;
    bool m_total_duration_isValid;

    qint32 m_transfer_duration;
    bool m_transfer_duration_isSet;
    bool m_transfer_duration_isValid;

    OAIPhaseStatus m_transfer_status;
    bool m_transfer_status_isSet;
    bool m_transfer_status_isValid;

    qint32 m_verify_duration;
    bool m_verify_duration_isSet;
    bool m_verify_duration_isValid;

    OAIPhaseStatus m_verify_status;
    bool m_verify_status_isSet;
    bool m_verify_status_isValid;

    QString m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_error_detail;
    bool m_error_detail_isSet;
    bool m_error_detail_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskExecutionResultDetail)

#endif // OAITaskExecutionResultDetail_H
