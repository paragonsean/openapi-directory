/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeLocationS3Response.h
 *
 * DescribeLocationS3Response
 */

#ifndef OAIDescribeLocationS3Response_H
#define OAIDescribeLocationS3Response_H

#include <QJsonObject>

#include "OAIS3Config.h"
#include "OAIS3StorageClass.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIS3Config;

class OAIDescribeLocationS3Response : public OAIObject {
public:
    OAIDescribeLocationS3Response();
    OAIDescribeLocationS3Response(QString json);
    ~OAIDescribeLocationS3Response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLocationArn() const;
    void setLocationArn(const QString &location_arn);
    bool is_location_arn_Set() const;
    bool is_location_arn_Valid() const;

    QString getLocationUri() const;
    void setLocationUri(const QString &location_uri);
    bool is_location_uri_Set() const;
    bool is_location_uri_Valid() const;

    OAIS3StorageClass getS3StorageClass() const;
    void setS3StorageClass(const OAIS3StorageClass &s3_storage_class);
    bool is_s3_storage_class_Set() const;
    bool is_s3_storage_class_Valid() const;

    OAIS3Config getS3Config() const;
    void setS3Config(const OAIS3Config &s3_config);
    bool is_s3_config_Set() const;
    bool is_s3_config_Valid() const;

    QList getAgentArns() const;
    void setAgentArns(const QList &agent_arns);
    bool is_agent_arns_Set() const;
    bool is_agent_arns_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_location_arn;
    bool m_location_arn_isSet;
    bool m_location_arn_isValid;

    QString m_location_uri;
    bool m_location_uri_isSet;
    bool m_location_uri_isValid;

    OAIS3StorageClass m_s3_storage_class;
    bool m_s3_storage_class_isSet;
    bool m_s3_storage_class_isValid;

    OAIS3Config m_s3_config;
    bool m_s3_config_isSet;
    bool m_s3_config_isValid;

    QList m_agent_arns;
    bool m_agent_arns_isSet;
    bool m_agent_arns_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeLocationS3Response)

#endif // OAIDescribeLocationS3Response_H
