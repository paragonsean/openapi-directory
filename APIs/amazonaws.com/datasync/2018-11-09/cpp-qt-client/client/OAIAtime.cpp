/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAtime.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAtime::OAIAtime(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAtime::OAIAtime() {
    this->initializeModel();
}

OAIAtime::~OAIAtime() {}

void OAIAtime::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAtime::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAtime::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAtime::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BEST_EFFORT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAtime::BEST_EFFORT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAtime::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAtime::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAtime::NONE:
            val = "NONE";
            break;
        case eOAIAtime::BEST_EFFORT:
            val = "BEST_EFFORT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAtime::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAtime::eOAIAtime OAIAtime::getValue() const {
    return m_value;
}

void OAIAtime::setValue(const OAIAtime::eOAIAtime& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAtime::isSet() const {
    
    return m_value_isSet;
}

bool OAIAtime::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
