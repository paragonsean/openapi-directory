/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateAgentRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateAgentRequest::OAIUpdateAgentRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateAgentRequest::OAIUpdateAgentRequest() {
    this->initializeModel();
}

OAIUpdateAgentRequest::~OAIUpdateAgentRequest() {}

void OAIUpdateAgentRequest::initializeModel() {

    m_agent_arn_isSet = false;
    m_agent_arn_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIUpdateAgentRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateAgentRequest::fromJsonObject(QJsonObject json) {

    m_agent_arn_isValid = ::OpenAPI::fromJsonValue(m_agent_arn, json[QString("AgentArn")]);
    m_agent_arn_isSet = !json[QString("AgentArn")].isNull() && m_agent_arn_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;
}

QString OAIUpdateAgentRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateAgentRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_agent_arn_isSet) {
        obj.insert(QString("AgentArn"), ::OpenAPI::toJsonValue(m_agent_arn));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIUpdateAgentRequest::getAgentArn() const {
    return m_agent_arn;
}
void OAIUpdateAgentRequest::setAgentArn(const QString &agent_arn) {
    m_agent_arn = agent_arn;
    m_agent_arn_isSet = true;
}

bool OAIUpdateAgentRequest::is_agent_arn_Set() const{
    return m_agent_arn_isSet;
}

bool OAIUpdateAgentRequest::is_agent_arn_Valid() const{
    return m_agent_arn_isValid;
}

QString OAIUpdateAgentRequest::getName() const {
    return m_name;
}
void OAIUpdateAgentRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateAgentRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateAgentRequest::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIUpdateAgentRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agent_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateAgentRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_agent_arn_isValid && true;
}

} // namespace OpenAPI
