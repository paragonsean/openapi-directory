/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPrivateLinkConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPrivateLinkConfig::OAIPrivateLinkConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPrivateLinkConfig::OAIPrivateLinkConfig() {
    this->initializeModel();
}

OAIPrivateLinkConfig::~OAIPrivateLinkConfig() {}

void OAIPrivateLinkConfig::initializeModel() {

    m_vpc_endpoint_id_isSet = false;
    m_vpc_endpoint_id_isValid = false;

    m_private_link_endpoint_isSet = false;
    m_private_link_endpoint_isValid = false;

    m_subnet_arns_isSet = false;
    m_subnet_arns_isValid = false;

    m_security_group_arns_isSet = false;
    m_security_group_arns_isValid = false;
}

void OAIPrivateLinkConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPrivateLinkConfig::fromJsonObject(QJsonObject json) {

    m_vpc_endpoint_id_isValid = ::OpenAPI::fromJsonValue(m_vpc_endpoint_id, json[QString("VpcEndpointId")]);
    m_vpc_endpoint_id_isSet = !json[QString("VpcEndpointId")].isNull() && m_vpc_endpoint_id_isValid;

    m_private_link_endpoint_isValid = ::OpenAPI::fromJsonValue(m_private_link_endpoint, json[QString("PrivateLinkEndpoint")]);
    m_private_link_endpoint_isSet = !json[QString("PrivateLinkEndpoint")].isNull() && m_private_link_endpoint_isValid;

    m_subnet_arns_isValid = ::OpenAPI::fromJsonValue(m_subnet_arns, json[QString("SubnetArns")]);
    m_subnet_arns_isSet = !json[QString("SubnetArns")].isNull() && m_subnet_arns_isValid;

    m_security_group_arns_isValid = ::OpenAPI::fromJsonValue(m_security_group_arns, json[QString("SecurityGroupArns")]);
    m_security_group_arns_isSet = !json[QString("SecurityGroupArns")].isNull() && m_security_group_arns_isValid;
}

QString OAIPrivateLinkConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPrivateLinkConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_vpc_endpoint_id_isSet) {
        obj.insert(QString("VpcEndpointId"), ::OpenAPI::toJsonValue(m_vpc_endpoint_id));
    }
    if (m_private_link_endpoint_isSet) {
        obj.insert(QString("PrivateLinkEndpoint"), ::OpenAPI::toJsonValue(m_private_link_endpoint));
    }
    if (m_subnet_arns.isSet()) {
        obj.insert(QString("SubnetArns"), ::OpenAPI::toJsonValue(m_subnet_arns));
    }
    if (m_security_group_arns.isSet()) {
        obj.insert(QString("SecurityGroupArns"), ::OpenAPI::toJsonValue(m_security_group_arns));
    }
    return obj;
}

QString OAIPrivateLinkConfig::getVpcEndpointId() const {
    return m_vpc_endpoint_id;
}
void OAIPrivateLinkConfig::setVpcEndpointId(const QString &vpc_endpoint_id) {
    m_vpc_endpoint_id = vpc_endpoint_id;
    m_vpc_endpoint_id_isSet = true;
}

bool OAIPrivateLinkConfig::is_vpc_endpoint_id_Set() const{
    return m_vpc_endpoint_id_isSet;
}

bool OAIPrivateLinkConfig::is_vpc_endpoint_id_Valid() const{
    return m_vpc_endpoint_id_isValid;
}

QString OAIPrivateLinkConfig::getPrivateLinkEndpoint() const {
    return m_private_link_endpoint;
}
void OAIPrivateLinkConfig::setPrivateLinkEndpoint(const QString &private_link_endpoint) {
    m_private_link_endpoint = private_link_endpoint;
    m_private_link_endpoint_isSet = true;
}

bool OAIPrivateLinkConfig::is_private_link_endpoint_Set() const{
    return m_private_link_endpoint_isSet;
}

bool OAIPrivateLinkConfig::is_private_link_endpoint_Valid() const{
    return m_private_link_endpoint_isValid;
}

QList OAIPrivateLinkConfig::getSubnetArns() const {
    return m_subnet_arns;
}
void OAIPrivateLinkConfig::setSubnetArns(const QList &subnet_arns) {
    m_subnet_arns = subnet_arns;
    m_subnet_arns_isSet = true;
}

bool OAIPrivateLinkConfig::is_subnet_arns_Set() const{
    return m_subnet_arns_isSet;
}

bool OAIPrivateLinkConfig::is_subnet_arns_Valid() const{
    return m_subnet_arns_isValid;
}

QList OAIPrivateLinkConfig::getSecurityGroupArns() const {
    return m_security_group_arns;
}
void OAIPrivateLinkConfig::setSecurityGroupArns(const QList &security_group_arns) {
    m_security_group_arns = security_group_arns;
    m_security_group_arns_isSet = true;
}

bool OAIPrivateLinkConfig::is_security_group_arns_Set() const{
    return m_security_group_arns_isSet;
}

bool OAIPrivateLinkConfig::is_security_group_arns_Valid() const{
    return m_security_group_arns_isValid;
}

bool OAIPrivateLinkConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vpc_endpoint_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_link_endpoint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subnet_arns.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_group_arns.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPrivateLinkConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
