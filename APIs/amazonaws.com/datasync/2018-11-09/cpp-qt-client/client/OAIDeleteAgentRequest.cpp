/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteAgentRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteAgentRequest::OAIDeleteAgentRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteAgentRequest::OAIDeleteAgentRequest() {
    this->initializeModel();
}

OAIDeleteAgentRequest::~OAIDeleteAgentRequest() {}

void OAIDeleteAgentRequest::initializeModel() {

    m_agent_arn_isSet = false;
    m_agent_arn_isValid = false;
}

void OAIDeleteAgentRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteAgentRequest::fromJsonObject(QJsonObject json) {

    m_agent_arn_isValid = ::OpenAPI::fromJsonValue(m_agent_arn, json[QString("AgentArn")]);
    m_agent_arn_isSet = !json[QString("AgentArn")].isNull() && m_agent_arn_isValid;
}

QString OAIDeleteAgentRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteAgentRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_agent_arn_isSet) {
        obj.insert(QString("AgentArn"), ::OpenAPI::toJsonValue(m_agent_arn));
    }
    return obj;
}

QString OAIDeleteAgentRequest::getAgentArn() const {
    return m_agent_arn;
}
void OAIDeleteAgentRequest::setAgentArn(const QString &agent_arn) {
    m_agent_arn = agent_arn;
    m_agent_arn_isSet = true;
}

bool OAIDeleteAgentRequest::is_agent_arn_Set() const{
    return m_agent_arn_isSet;
}

bool OAIDeleteAgentRequest::is_agent_arn_Valid() const{
    return m_agent_arn_isValid;
}

bool OAIDeleteAgentRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agent_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteAgentRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_agent_arn_isValid && true;
}

} // namespace OpenAPI
