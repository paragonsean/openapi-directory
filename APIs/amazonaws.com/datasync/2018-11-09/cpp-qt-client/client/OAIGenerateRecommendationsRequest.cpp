/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGenerateRecommendationsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGenerateRecommendationsRequest::OAIGenerateRecommendationsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGenerateRecommendationsRequest::OAIGenerateRecommendationsRequest() {
    this->initializeModel();
}

OAIGenerateRecommendationsRequest::~OAIGenerateRecommendationsRequest() {}

void OAIGenerateRecommendationsRequest::initializeModel() {

    m_discovery_job_arn_isSet = false;
    m_discovery_job_arn_isValid = false;

    m_resource_ids_isSet = false;
    m_resource_ids_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;
}

void OAIGenerateRecommendationsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGenerateRecommendationsRequest::fromJsonObject(QJsonObject json) {

    m_discovery_job_arn_isValid = ::OpenAPI::fromJsonValue(m_discovery_job_arn, json[QString("DiscoveryJobArn")]);
    m_discovery_job_arn_isSet = !json[QString("DiscoveryJobArn")].isNull() && m_discovery_job_arn_isValid;

    m_resource_ids_isValid = ::OpenAPI::fromJsonValue(m_resource_ids, json[QString("ResourceIds")]);
    m_resource_ids_isSet = !json[QString("ResourceIds")].isNull() && m_resource_ids_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("ResourceType")]);
    m_resource_type_isSet = !json[QString("ResourceType")].isNull() && m_resource_type_isValid;
}

QString OAIGenerateRecommendationsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGenerateRecommendationsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_discovery_job_arn_isSet) {
        obj.insert(QString("DiscoveryJobArn"), ::OpenAPI::toJsonValue(m_discovery_job_arn));
    }
    if (m_resource_ids.isSet()) {
        obj.insert(QString("ResourceIds"), ::OpenAPI::toJsonValue(m_resource_ids));
    }
    if (m_resource_type.isSet()) {
        obj.insert(QString("ResourceType"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    return obj;
}

QString OAIGenerateRecommendationsRequest::getDiscoveryJobArn() const {
    return m_discovery_job_arn;
}
void OAIGenerateRecommendationsRequest::setDiscoveryJobArn(const QString &discovery_job_arn) {
    m_discovery_job_arn = discovery_job_arn;
    m_discovery_job_arn_isSet = true;
}

bool OAIGenerateRecommendationsRequest::is_discovery_job_arn_Set() const{
    return m_discovery_job_arn_isSet;
}

bool OAIGenerateRecommendationsRequest::is_discovery_job_arn_Valid() const{
    return m_discovery_job_arn_isValid;
}

QList OAIGenerateRecommendationsRequest::getResourceIds() const {
    return m_resource_ids;
}
void OAIGenerateRecommendationsRequest::setResourceIds(const QList &resource_ids) {
    m_resource_ids = resource_ids;
    m_resource_ids_isSet = true;
}

bool OAIGenerateRecommendationsRequest::is_resource_ids_Set() const{
    return m_resource_ids_isSet;
}

bool OAIGenerateRecommendationsRequest::is_resource_ids_Valid() const{
    return m_resource_ids_isValid;
}

OAIDiscoveryResourceType OAIGenerateRecommendationsRequest::getResourceType() const {
    return m_resource_type;
}
void OAIGenerateRecommendationsRequest::setResourceType(const OAIDiscoveryResourceType &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAIGenerateRecommendationsRequest::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAIGenerateRecommendationsRequest::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

bool OAIGenerateRecommendationsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_discovery_job_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGenerateRecommendationsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_discovery_job_arn_isValid && m_resource_ids_isValid && m_resource_type_isValid && true;
}

} // namespace OpenAPI
