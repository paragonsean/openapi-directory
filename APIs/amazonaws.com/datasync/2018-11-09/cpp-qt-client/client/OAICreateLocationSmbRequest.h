/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateLocationSmbRequest.h
 *
 * CreateLocationSmbRequest
 */

#ifndef OAICreateLocationSmbRequest_H
#define OAICreateLocationSmbRequest_H

#include <QJsonObject>

#include "OAICreateLocationSmbRequest_MountOptions.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateLocationSmbRequest_MountOptions;

class OAICreateLocationSmbRequest : public OAIObject {
public:
    OAICreateLocationSmbRequest();
    OAICreateLocationSmbRequest(QString json);
    ~OAICreateLocationSmbRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSubdirectory() const;
    void setSubdirectory(const QString &subdirectory);
    bool is_subdirectory_Set() const;
    bool is_subdirectory_Valid() const;

    QString getServerHostname() const;
    void setServerHostname(const QString &server_hostname);
    bool is_server_hostname_Set() const;
    bool is_server_hostname_Valid() const;

    QString getUser() const;
    void setUser(const QString &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QList getAgentArns() const;
    void setAgentArns(const QList &agent_arns);
    bool is_agent_arns_Set() const;
    bool is_agent_arns_Valid() const;

    OAICreateLocationSmbRequest_MountOptions getMountOptions() const;
    void setMountOptions(const OAICreateLocationSmbRequest_MountOptions &mount_options);
    bool is_mount_options_Set() const;
    bool is_mount_options_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_subdirectory;
    bool m_subdirectory_isSet;
    bool m_subdirectory_isValid;

    QString m_server_hostname;
    bool m_server_hostname_isSet;
    bool m_server_hostname_isValid;

    QString m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QList m_agent_arns;
    bool m_agent_arns_isSet;
    bool m_agent_arns_isValid;

    OAICreateLocationSmbRequest_MountOptions m_mount_options;
    bool m_mount_options_isSet;
    bool m_mount_options_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateLocationSmbRequest)

#endif // OAICreateLocationSmbRequest_H
