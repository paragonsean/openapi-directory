/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetAppONTAPVolume.h
 *
 * The information that DataSync Discovery collects about a volume in your on-premises storage system.
 */

#ifndef OAINetAppONTAPVolume_H
#define OAINetAppONTAPVolume_H

#include <QJsonObject>

#include "OAINetAppONTAPVolume_MaxP95Performance.h"
#include "OAIRecommendationStatus.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINetAppONTAPVolume_MaxP95Performance;

class OAINetAppONTAPVolume : public OAIObject {
public:
    OAINetAppONTAPVolume();
    OAINetAppONTAPVolume(QString json);
    ~OAINetAppONTAPVolume() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getVolumeName() const;
    void setVolumeName(const QString &volume_name);
    bool is_volume_name_Set() const;
    bool is_volume_name_Valid() const;

    QString getResourceId() const;
    void setResourceId(const QString &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    qint32 getCifsShareCount() const;
    void setCifsShareCount(const qint32 &cifs_share_count);
    bool is_cifs_share_count_Set() const;
    bool is_cifs_share_count_Valid() const;

    QString getSecurityStyle() const;
    void setSecurityStyle(const QString &security_style);
    bool is_security_style_Set() const;
    bool is_security_style_Valid() const;

    QString getSvmUuid() const;
    void setSvmUuid(const QString &svm_uuid);
    bool is_svm_uuid_Set() const;
    bool is_svm_uuid_Valid() const;

    QString getSvmName() const;
    void setSvmName(const QString &svm_name);
    bool is_svm_name_Set() const;
    bool is_svm_name_Valid() const;

    qint32 getCapacityUsed() const;
    void setCapacityUsed(const qint32 &capacity_used);
    bool is_capacity_used_Set() const;
    bool is_capacity_used_Valid() const;

    qint32 getCapacityProvisioned() const;
    void setCapacityProvisioned(const qint32 &capacity_provisioned);
    bool is_capacity_provisioned_Set() const;
    bool is_capacity_provisioned_Valid() const;

    qint32 getLogicalCapacityUsed() const;
    void setLogicalCapacityUsed(const qint32 &logical_capacity_used);
    bool is_logical_capacity_used_Set() const;
    bool is_logical_capacity_used_Valid() const;

    bool getNfsExported() const;
    void setNfsExported(const bool &nfs_exported);
    bool is_nfs_exported_Set() const;
    bool is_nfs_exported_Valid() const;

    qint32 getSnapshotCapacityUsed() const;
    void setSnapshotCapacityUsed(const qint32 &snapshot_capacity_used);
    bool is_snapshot_capacity_used_Set() const;
    bool is_snapshot_capacity_used_Valid() const;

    OAINetAppONTAPVolume_MaxP95Performance getMaxP95Performance() const;
    void setMaxP95Performance(const OAINetAppONTAPVolume_MaxP95Performance &max_p95_performance);
    bool is_max_p95_performance_Set() const;
    bool is_max_p95_performance_Valid() const;

    QList getRecommendations() const;
    void setRecommendations(const QList &recommendations);
    bool is_recommendations_Set() const;
    bool is_recommendations_Valid() const;

    OAIRecommendationStatus getRecommendationStatus() const;
    void setRecommendationStatus(const OAIRecommendationStatus &recommendation_status);
    bool is_recommendation_status_Set() const;
    bool is_recommendation_status_Valid() const;

    qint32 getLunCount() const;
    void setLunCount(const qint32 &lun_count);
    bool is_lun_count_Set() const;
    bool is_lun_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_volume_name;
    bool m_volume_name_isSet;
    bool m_volume_name_isValid;

    QString m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    qint32 m_cifs_share_count;
    bool m_cifs_share_count_isSet;
    bool m_cifs_share_count_isValid;

    QString m_security_style;
    bool m_security_style_isSet;
    bool m_security_style_isValid;

    QString m_svm_uuid;
    bool m_svm_uuid_isSet;
    bool m_svm_uuid_isValid;

    QString m_svm_name;
    bool m_svm_name_isSet;
    bool m_svm_name_isValid;

    qint32 m_capacity_used;
    bool m_capacity_used_isSet;
    bool m_capacity_used_isValid;

    qint32 m_capacity_provisioned;
    bool m_capacity_provisioned_isSet;
    bool m_capacity_provisioned_isValid;

    qint32 m_logical_capacity_used;
    bool m_logical_capacity_used_isSet;
    bool m_logical_capacity_used_isValid;

    bool m_nfs_exported;
    bool m_nfs_exported_isSet;
    bool m_nfs_exported_isValid;

    qint32 m_snapshot_capacity_used;
    bool m_snapshot_capacity_used_isSet;
    bool m_snapshot_capacity_used_isValid;

    OAINetAppONTAPVolume_MaxP95Performance m_max_p95_performance;
    bool m_max_p95_performance_isSet;
    bool m_max_p95_performance_isValid;

    QList m_recommendations;
    bool m_recommendations_isSet;
    bool m_recommendations_isValid;

    OAIRecommendationStatus m_recommendation_status;
    bool m_recommendation_status_isSet;
    bool m_recommendation_status_isValid;

    qint32 m_lun_count;
    bool m_lun_count_isSet;
    bool m_lun_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetAppONTAPVolume)

#endif // OAINetAppONTAPVolume_H
