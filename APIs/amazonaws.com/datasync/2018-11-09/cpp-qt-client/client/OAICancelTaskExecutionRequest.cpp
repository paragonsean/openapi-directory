/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICancelTaskExecutionRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICancelTaskExecutionRequest::OAICancelTaskExecutionRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICancelTaskExecutionRequest::OAICancelTaskExecutionRequest() {
    this->initializeModel();
}

OAICancelTaskExecutionRequest::~OAICancelTaskExecutionRequest() {}

void OAICancelTaskExecutionRequest::initializeModel() {

    m_task_execution_arn_isSet = false;
    m_task_execution_arn_isValid = false;
}

void OAICancelTaskExecutionRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICancelTaskExecutionRequest::fromJsonObject(QJsonObject json) {

    m_task_execution_arn_isValid = ::OpenAPI::fromJsonValue(m_task_execution_arn, json[QString("TaskExecutionArn")]);
    m_task_execution_arn_isSet = !json[QString("TaskExecutionArn")].isNull() && m_task_execution_arn_isValid;
}

QString OAICancelTaskExecutionRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICancelTaskExecutionRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_task_execution_arn_isSet) {
        obj.insert(QString("TaskExecutionArn"), ::OpenAPI::toJsonValue(m_task_execution_arn));
    }
    return obj;
}

QString OAICancelTaskExecutionRequest::getTaskExecutionArn() const {
    return m_task_execution_arn;
}
void OAICancelTaskExecutionRequest::setTaskExecutionArn(const QString &task_execution_arn) {
    m_task_execution_arn = task_execution_arn;
    m_task_execution_arn_isSet = true;
}

bool OAICancelTaskExecutionRequest::is_task_execution_arn_Set() const{
    return m_task_execution_arn_isSet;
}

bool OAICancelTaskExecutionRequest::is_task_execution_arn_Valid() const{
    return m_task_execution_arn_isValid;
}

bool OAICancelTaskExecutionRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_task_execution_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICancelTaskExecutionRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_task_execution_arn_isValid && true;
}

} // namespace OpenAPI
