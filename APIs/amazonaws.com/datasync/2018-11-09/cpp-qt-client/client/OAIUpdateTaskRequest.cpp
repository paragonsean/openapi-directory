/**
 * AWS DataSync
 * <fullname>DataSync</fullname> <p>DataSync is an online data movement and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between Amazon Web Services storage services.</p> <p>This API interface reference includes documentation for using DataSync programmatically. For complete information, see the <i> <a href=\"https://docs.aws.amazon.com/datasync/latest/userguide/what-is-datasync.html\">DataSync User Guide</a> </i>.</p>
 *
 * The version of the OpenAPI document: 2018-11-09
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTaskRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTaskRequest::OAIUpdateTaskRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTaskRequest::OAIUpdateTaskRequest() {
    this->initializeModel();
}

OAIUpdateTaskRequest::~OAIUpdateTaskRequest() {}

void OAIUpdateTaskRequest::initializeModel() {

    m_task_arn_isSet = false;
    m_task_arn_isValid = false;

    m_options_isSet = false;
    m_options_isValid = false;

    m_excludes_isSet = false;
    m_excludes_isValid = false;

    m_schedule_isSet = false;
    m_schedule_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_cloud_watch_log_group_arn_isSet = false;
    m_cloud_watch_log_group_arn_isValid = false;

    m_includes_isSet = false;
    m_includes_isValid = false;
}

void OAIUpdateTaskRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTaskRequest::fromJsonObject(QJsonObject json) {

    m_task_arn_isValid = ::OpenAPI::fromJsonValue(m_task_arn, json[QString("TaskArn")]);
    m_task_arn_isSet = !json[QString("TaskArn")].isNull() && m_task_arn_isValid;

    m_options_isValid = ::OpenAPI::fromJsonValue(m_options, json[QString("Options")]);
    m_options_isSet = !json[QString("Options")].isNull() && m_options_isValid;

    m_excludes_isValid = ::OpenAPI::fromJsonValue(m_excludes, json[QString("Excludes")]);
    m_excludes_isSet = !json[QString("Excludes")].isNull() && m_excludes_isValid;

    m_schedule_isValid = ::OpenAPI::fromJsonValue(m_schedule, json[QString("Schedule")]);
    m_schedule_isSet = !json[QString("Schedule")].isNull() && m_schedule_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_cloud_watch_log_group_arn_isValid = ::OpenAPI::fromJsonValue(m_cloud_watch_log_group_arn, json[QString("CloudWatchLogGroupArn")]);
    m_cloud_watch_log_group_arn_isSet = !json[QString("CloudWatchLogGroupArn")].isNull() && m_cloud_watch_log_group_arn_isValid;

    m_includes_isValid = ::OpenAPI::fromJsonValue(m_includes, json[QString("Includes")]);
    m_includes_isSet = !json[QString("Includes")].isNull() && m_includes_isValid;
}

QString OAIUpdateTaskRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTaskRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_task_arn_isSet) {
        obj.insert(QString("TaskArn"), ::OpenAPI::toJsonValue(m_task_arn));
    }
    if (m_options.isSet()) {
        obj.insert(QString("Options"), ::OpenAPI::toJsonValue(m_options));
    }
    if (m_excludes.isSet()) {
        obj.insert(QString("Excludes"), ::OpenAPI::toJsonValue(m_excludes));
    }
    if (m_schedule.isSet()) {
        obj.insert(QString("Schedule"), ::OpenAPI::toJsonValue(m_schedule));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_cloud_watch_log_group_arn_isSet) {
        obj.insert(QString("CloudWatchLogGroupArn"), ::OpenAPI::toJsonValue(m_cloud_watch_log_group_arn));
    }
    if (m_includes.isSet()) {
        obj.insert(QString("Includes"), ::OpenAPI::toJsonValue(m_includes));
    }
    return obj;
}

QString OAIUpdateTaskRequest::getTaskArn() const {
    return m_task_arn;
}
void OAIUpdateTaskRequest::setTaskArn(const QString &task_arn) {
    m_task_arn = task_arn;
    m_task_arn_isSet = true;
}

bool OAIUpdateTaskRequest::is_task_arn_Set() const{
    return m_task_arn_isSet;
}

bool OAIUpdateTaskRequest::is_task_arn_Valid() const{
    return m_task_arn_isValid;
}

OAIOptions OAIUpdateTaskRequest::getOptions() const {
    return m_options;
}
void OAIUpdateTaskRequest::setOptions(const OAIOptions &options) {
    m_options = options;
    m_options_isSet = true;
}

bool OAIUpdateTaskRequest::is_options_Set() const{
    return m_options_isSet;
}

bool OAIUpdateTaskRequest::is_options_Valid() const{
    return m_options_isValid;
}

QList OAIUpdateTaskRequest::getExcludes() const {
    return m_excludes;
}
void OAIUpdateTaskRequest::setExcludes(const QList &excludes) {
    m_excludes = excludes;
    m_excludes_isSet = true;
}

bool OAIUpdateTaskRequest::is_excludes_Set() const{
    return m_excludes_isSet;
}

bool OAIUpdateTaskRequest::is_excludes_Valid() const{
    return m_excludes_isValid;
}

OAIUpdateTaskRequest_Schedule OAIUpdateTaskRequest::getSchedule() const {
    return m_schedule;
}
void OAIUpdateTaskRequest::setSchedule(const OAIUpdateTaskRequest_Schedule &schedule) {
    m_schedule = schedule;
    m_schedule_isSet = true;
}

bool OAIUpdateTaskRequest::is_schedule_Set() const{
    return m_schedule_isSet;
}

bool OAIUpdateTaskRequest::is_schedule_Valid() const{
    return m_schedule_isValid;
}

QString OAIUpdateTaskRequest::getName() const {
    return m_name;
}
void OAIUpdateTaskRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateTaskRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateTaskRequest::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIUpdateTaskRequest::getCloudWatchLogGroupArn() const {
    return m_cloud_watch_log_group_arn;
}
void OAIUpdateTaskRequest::setCloudWatchLogGroupArn(const QString &cloud_watch_log_group_arn) {
    m_cloud_watch_log_group_arn = cloud_watch_log_group_arn;
    m_cloud_watch_log_group_arn_isSet = true;
}

bool OAIUpdateTaskRequest::is_cloud_watch_log_group_arn_Set() const{
    return m_cloud_watch_log_group_arn_isSet;
}

bool OAIUpdateTaskRequest::is_cloud_watch_log_group_arn_Valid() const{
    return m_cloud_watch_log_group_arn_isValid;
}

QList OAIUpdateTaskRequest::getIncludes() const {
    return m_includes;
}
void OAIUpdateTaskRequest::setIncludes(const QList &includes) {
    m_includes = includes;
    m_includes_isSet = true;
}

bool OAIUpdateTaskRequest::is_includes_Set() const{
    return m_includes_isSet;
}

bool OAIUpdateTaskRequest::is_includes_Valid() const{
    return m_includes_isValid;
}

bool OAIUpdateTaskRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_task_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_options.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_excludes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_watch_log_group_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_includes.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTaskRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_task_arn_isValid && true;
}

} // namespace OpenAPI
