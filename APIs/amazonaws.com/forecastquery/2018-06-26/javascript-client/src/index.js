/**
 * Amazon Forecast Query Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import DataPoint from './model/DataPoint';
import Forecast from './model/Forecast';
import QueryForecastRequest from './model/QueryForecastRequest';
import QueryForecastResponse from './model/QueryForecastResponse';
import QueryForecastResponseForecast from './model/QueryForecastResponseForecast';
import QueryWhatIfForecastRequest from './model/QueryWhatIfForecastRequest';
import QueryWhatIfForecastResponse from './model/QueryWhatIfForecastResponse';
import DefaultApi from './api/DefaultApi';


/**
* Provides APIs for creating and managing Amazon Forecast resources..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AmazonForecastQueryService = require('index'); // See note below*.
* var xxxSvc = new AmazonForecastQueryService.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AmazonForecastQueryService.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AmazonForecastQueryService.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AmazonForecastQueryService.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-06-26
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The DataPoint model constructor.
     * @property {module:model/DataPoint}
     */
    DataPoint,

    /**
     * The Forecast model constructor.
     * @property {module:model/Forecast}
     */
    Forecast,

    /**
     * The QueryForecastRequest model constructor.
     * @property {module:model/QueryForecastRequest}
     */
    QueryForecastRequest,

    /**
     * The QueryForecastResponse model constructor.
     * @property {module:model/QueryForecastResponse}
     */
    QueryForecastResponse,

    /**
     * The QueryForecastResponseForecast model constructor.
     * @property {module:model/QueryForecastResponseForecast}
     */
    QueryForecastResponseForecast,

    /**
     * The QueryWhatIfForecastRequest model constructor.
     * @property {module:model/QueryWhatIfForecastRequest}
     */
    QueryWhatIfForecastRequest,

    /**
     * The QueryWhatIfForecastResponse model constructor.
     * @property {module:model/QueryWhatIfForecastResponse}
     */
    QueryWhatIfForecastResponse,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
