/**
 * Amazon Forecast Query Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQueryWhatIfForecastRequest.h
 *
 * 
 */

#ifndef OAIQueryWhatIfForecastRequest_H
#define OAIQueryWhatIfForecastRequest_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIQueryWhatIfForecastRequest : public OAIObject {
public:
    OAIQueryWhatIfForecastRequest();
    OAIQueryWhatIfForecastRequest(QString json);
    ~OAIQueryWhatIfForecastRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getWhatIfForecastArn() const;
    void setWhatIfForecastArn(const QString &what_if_forecast_arn);
    bool is_what_if_forecast_arn_Set() const;
    bool is_what_if_forecast_arn_Valid() const;

    QString getStartDate() const;
    void setStartDate(const QString &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getEndDate() const;
    void setEndDate(const QString &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QMap getFilters() const;
    void setFilters(const QMap &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_what_if_forecast_arn;
    bool m_what_if_forecast_arn_isSet;
    bool m_what_if_forecast_arn_isValid;

    QString m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QMap m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQueryWhatIfForecastRequest)

#endif // OAIQueryWhatIfForecastRequest_H
