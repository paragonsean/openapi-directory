/**
 * Amazon Forecast Query Service
 * Provides APIs for creating and managing Amazon Forecast resources.
 *
 * The version of the OpenAPI document: 2018-06-26
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueryForecastResponse_Forecast.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueryForecastResponse_Forecast::OAIQueryForecastResponse_Forecast(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueryForecastResponse_Forecast::OAIQueryForecastResponse_Forecast() {
    this->initializeModel();
}

OAIQueryForecastResponse_Forecast::~OAIQueryForecastResponse_Forecast() {}

void OAIQueryForecastResponse_Forecast::initializeModel() {

    m_predictions_isSet = false;
    m_predictions_isValid = false;
}

void OAIQueryForecastResponse_Forecast::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQueryForecastResponse_Forecast::fromJsonObject(QJsonObject json) {

    m_predictions_isValid = ::OpenAPI::fromJsonValue(m_predictions, json[QString("Predictions")]);
    m_predictions_isSet = !json[QString("Predictions")].isNull() && m_predictions_isValid;
}

QString OAIQueryForecastResponse_Forecast::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQueryForecastResponse_Forecast::asJsonObject() const {
    QJsonObject obj;
    if (m_predictions.isSet()) {
        obj.insert(QString("Predictions"), ::OpenAPI::toJsonValue(m_predictions));
    }
    return obj;
}

QMap OAIQueryForecastResponse_Forecast::getPredictions() const {
    return m_predictions;
}
void OAIQueryForecastResponse_Forecast::setPredictions(const QMap &predictions) {
    m_predictions = predictions;
    m_predictions_isSet = true;
}

bool OAIQueryForecastResponse_Forecast::is_predictions_Set() const{
    return m_predictions_isSet;
}

bool OAIQueryForecastResponse_Forecast::is_predictions_Valid() const{
    return m_predictions_isValid;
}

bool OAIQueryForecastResponse_Forecast::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_predictions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQueryForecastResponse_Forecast::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
