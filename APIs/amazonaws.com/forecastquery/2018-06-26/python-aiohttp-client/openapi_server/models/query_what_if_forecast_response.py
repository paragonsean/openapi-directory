# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.forecast import Forecast
from openapi_server import util


class QueryWhatIfForecastResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, forecast: Forecast=None):
        """QueryWhatIfForecastResponse - a model defined in OpenAPI

        :param forecast: The forecast of this QueryWhatIfForecastResponse.
        """
        self.openapi_types = {
            'forecast': Forecast
        }

        self.attribute_map = {
            'forecast': 'Forecast'
        }

        self._forecast = forecast

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryWhatIfForecastResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryWhatIfForecastResponse of this QueryWhatIfForecastResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def forecast(self):
        """Gets the forecast of this QueryWhatIfForecastResponse.


        :return: The forecast of this QueryWhatIfForecastResponse.
        :rtype: Forecast
        """
        return self._forecast

    @forecast.setter
    def forecast(self, forecast):
        """Sets the forecast of this QueryWhatIfForecastResponse.


        :param forecast: The forecast of this QueryWhatIfForecastResponse.
        :type forecast: Forecast
        """

        self._forecast = forecast
