/**
 * Amazon CodeGuru Security
 * <note> <p>Amazon CodeGuru Security is in preview release and is subject to change.</p> </note> <p>This section provides documentation for the Amazon CodeGuru Security API operations. CodeGuru Security is a service that uses program analysis and machine learning to detect security policy violations and vulnerabilities, and recommends ways to address these security risks.</p> <p>By proactively detecting and providing recommendations for addressing security risks, CodeGuru Security improves the overall security of your application code. For more information about CodeGuru Security, see the <a href=\"https://docs.aws.amazon.com/codeguru/latest/security-ug/what-is-codeguru-security.html\">Amazon CodeGuru Security User Guide</a>. </p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FindingRemediation from './FindingRemediation';
import FindingResource from './FindingResource';
import FindingVulnerability from './FindingVulnerability';
import Severity from './Severity';
import Status from './Status';

/**
 * The Finding model module.
 * @module model/Finding
 * @version 2018-05-10
 */
class Finding {
    /**
     * Constructs a new <code>Finding</code>.
     * Information about a finding that was detected in your code.
     * @alias module:model/Finding
     */
    constructor() { 
        
        Finding.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Finding</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Finding} obj Optional instance to populate.
     * @return {module:model/Finding} The populated <code>Finding</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Finding();

            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('detectorId')) {
                obj['detectorId'] = ApiClient.convertToType(data['detectorId'], 'String');
            }
            if (data.hasOwnProperty('detectorName')) {
                obj['detectorName'] = ApiClient.convertToType(data['detectorName'], 'String');
            }
            if (data.hasOwnProperty('detectorTags')) {
                obj['detectorTags'] = ApiClient.convertToType(data['detectorTags'], Array);
            }
            if (data.hasOwnProperty('generatorId')) {
                obj['generatorId'] = ApiClient.convertToType(data['generatorId'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('remediation')) {
                obj['remediation'] = FindingRemediation.constructFromObject(data['remediation']);
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = FindingResource.constructFromObject(data['resource']);
            }
            if (data.hasOwnProperty('ruleId')) {
                obj['ruleId'] = ApiClient.convertToType(data['ruleId'], 'String');
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], Severity);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], Status);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
            if (data.hasOwnProperty('vulnerability')) {
                obj['vulnerability'] = FindingVulnerability.constructFromObject(data['vulnerability']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Finding</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Finding</code>.
     */
    static validateJSON(data) {
        // validate the optional field `createdAt`
        if (data['createdAt']) { // data not null
          Date.validateJSON(data['createdAt']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `detectorId`
        if (data['detectorId']) { // data not null
          String.validateJSON(data['detectorId']);
        }
        // validate the optional field `detectorName`
        if (data['detectorName']) { // data not null
          String.validateJSON(data['detectorName']);
        }
        // validate the optional field `detectorTags`
        if (data['detectorTags']) { // data not null
          Array.validateJSON(data['detectorTags']);
        }
        // validate the optional field `generatorId`
        if (data['generatorId']) { // data not null
          String.validateJSON(data['generatorId']);
        }
        // validate the optional field `id`
        if (data['id']) { // data not null
          String.validateJSON(data['id']);
        }
        // validate the optional field `remediation`
        if (data['remediation']) { // data not null
          FindingRemediation.validateJSON(data['remediation']);
        }
        // validate the optional field `resource`
        if (data['resource']) { // data not null
          FindingResource.validateJSON(data['resource']);
        }
        // validate the optional field `ruleId`
        if (data['ruleId']) { // data not null
          String.validateJSON(data['ruleId']);
        }
        // validate the optional field `severity`
        if (data['severity']) { // data not null
          Severity.validateJSON(data['severity']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          Status.validateJSON(data['status']);
        }
        // validate the optional field `title`
        if (data['title']) { // data not null
          String.validateJSON(data['title']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          String.validateJSON(data['type']);
        }
        // validate the optional field `updatedAt`
        if (data['updatedAt']) { // data not null
          Date.validateJSON(data['updatedAt']);
        }
        // validate the optional field `vulnerability`
        if (data['vulnerability']) { // data not null
          FindingVulnerability.validateJSON(data['vulnerability']);
        }

        return true;
    }


}



/**
 * @member {Date} createdAt
 */
Finding.prototype['createdAt'] = undefined;

/**
 * @member {String} description
 */
Finding.prototype['description'] = undefined;

/**
 * @member {String} detectorId
 */
Finding.prototype['detectorId'] = undefined;

/**
 * @member {String} detectorName
 */
Finding.prototype['detectorName'] = undefined;

/**
 * @member {Array} detectorTags
 */
Finding.prototype['detectorTags'] = undefined;

/**
 * @member {String} generatorId
 */
Finding.prototype['generatorId'] = undefined;

/**
 * @member {String} id
 */
Finding.prototype['id'] = undefined;

/**
 * @member {module:model/FindingRemediation} remediation
 */
Finding.prototype['remediation'] = undefined;

/**
 * @member {module:model/FindingResource} resource
 */
Finding.prototype['resource'] = undefined;

/**
 * @member {String} ruleId
 */
Finding.prototype['ruleId'] = undefined;

/**
 * @member {module:model/Severity} severity
 */
Finding.prototype['severity'] = undefined;

/**
 * @member {module:model/Status} status
 */
Finding.prototype['status'] = undefined;

/**
 * @member {String} title
 */
Finding.prototype['title'] = undefined;

/**
 * @member {String} type
 */
Finding.prototype['type'] = undefined;

/**
 * @member {Date} updatedAt
 */
Finding.prototype['updatedAt'] = undefined;

/**
 * @member {module:model/FindingVulnerability} vulnerability
 */
Finding.prototype['vulnerability'] = undefined;






export default Finding;

