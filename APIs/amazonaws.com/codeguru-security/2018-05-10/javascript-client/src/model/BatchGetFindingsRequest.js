/**
 * Amazon CodeGuru Security
 * <note> <p>Amazon CodeGuru Security is in preview release and is subject to change.</p> </note> <p>This section provides documentation for the Amazon CodeGuru Security API operations. CodeGuru Security is a service that uses program analysis and machine learning to detect security policy violations and vulnerabilities, and recommends ways to address these security risks.</p> <p>By proactively detecting and providing recommendations for addressing security risks, CodeGuru Security improves the overall security of your application code. For more information about CodeGuru Security, see the <a href=\"https://docs.aws.amazon.com/codeguru/latest/security-ug/what-is-codeguru-security.html\">Amazon CodeGuru Security User Guide</a>. </p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FindingIdentifier from './FindingIdentifier';

/**
 * The BatchGetFindingsRequest model module.
 * @module model/BatchGetFindingsRequest
 * @version 2018-05-10
 */
class BatchGetFindingsRequest {
    /**
     * Constructs a new <code>BatchGetFindingsRequest</code>.
     * @alias module:model/BatchGetFindingsRequest
     * @param findingIdentifiers {Array.<module:model/FindingIdentifier>} A list of finding identifiers. Each identifier consists of a <code>scanName</code> and a <code>findingId</code>. You retrieve the <code>findingId</code> when you call <code>GetFindings</code>.
     */
    constructor(findingIdentifiers) { 
        
        BatchGetFindingsRequest.initialize(this, findingIdentifiers);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, findingIdentifiers) { 
        obj['findingIdentifiers'] = findingIdentifiers;
    }

    /**
     * Constructs a <code>BatchGetFindingsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchGetFindingsRequest} obj Optional instance to populate.
     * @return {module:model/BatchGetFindingsRequest} The populated <code>BatchGetFindingsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchGetFindingsRequest();

            if (data.hasOwnProperty('findingIdentifiers')) {
                obj['findingIdentifiers'] = ApiClient.convertToType(data['findingIdentifiers'], [FindingIdentifier]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchGetFindingsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchGetFindingsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BatchGetFindingsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['findingIdentifiers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['findingIdentifiers'])) {
                throw new Error("Expected the field `findingIdentifiers` to be an array in the JSON data but got " + data['findingIdentifiers']);
            }
            // validate the optional field `findingIdentifiers` (array)
            for (const item of data['findingIdentifiers']) {
                FindingIdentifier.validateJSON(item);
            };
        }

        return true;
    }


}

BatchGetFindingsRequest.RequiredProperties = ["findingIdentifiers"];

/**
 * A list of finding identifiers. Each identifier consists of a <code>scanName</code> and a <code>findingId</code>. You retrieve the <code>findingId</code> when you call <code>GetFindings</code>.
 * @member {Array.<module:model/FindingIdentifier>} findingIdentifiers
 */
BatchGetFindingsRequest.prototype['findingIdentifiers'] = undefined;






export default BatchGetFindingsRequest;

