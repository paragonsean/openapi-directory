# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VulnerabilityFilePath(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code_snippet: List=None, end_line: int=None, name: str=None, path: str=None, start_line: int=None):
        """VulnerabilityFilePath - a model defined in OpenAPI

        :param code_snippet: The code_snippet of this VulnerabilityFilePath.
        :param end_line: The end_line of this VulnerabilityFilePath.
        :param name: The name of this VulnerabilityFilePath.
        :param path: The path of this VulnerabilityFilePath.
        :param start_line: The start_line of this VulnerabilityFilePath.
        """
        self.openapi_types = {
            'code_snippet': List,
            'end_line': int,
            'name': str,
            'path': str,
            'start_line': int
        }

        self.attribute_map = {
            'code_snippet': 'codeSnippet',
            'end_line': 'endLine',
            'name': 'name',
            'path': 'path',
            'start_line': 'startLine'
        }

        self._code_snippet = code_snippet
        self._end_line = end_line
        self._name = name
        self._path = path
        self._start_line = start_line

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VulnerabilityFilePath':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Vulnerability_filePath of this VulnerabilityFilePath.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_snippet(self):
        """Gets the code_snippet of this VulnerabilityFilePath.


        :return: The code_snippet of this VulnerabilityFilePath.
        :rtype: List
        """
        return self._code_snippet

    @code_snippet.setter
    def code_snippet(self, code_snippet):
        """Sets the code_snippet of this VulnerabilityFilePath.


        :param code_snippet: The code_snippet of this VulnerabilityFilePath.
        :type code_snippet: List
        """

        self._code_snippet = code_snippet

    @property
    def end_line(self):
        """Gets the end_line of this VulnerabilityFilePath.


        :return: The end_line of this VulnerabilityFilePath.
        :rtype: int
        """
        return self._end_line

    @end_line.setter
    def end_line(self, end_line):
        """Sets the end_line of this VulnerabilityFilePath.


        :param end_line: The end_line of this VulnerabilityFilePath.
        :type end_line: int
        """

        self._end_line = end_line

    @property
    def name(self):
        """Gets the name of this VulnerabilityFilePath.


        :return: The name of this VulnerabilityFilePath.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VulnerabilityFilePath.


        :param name: The name of this VulnerabilityFilePath.
        :type name: str
        """

        self._name = name

    @property
    def path(self):
        """Gets the path of this VulnerabilityFilePath.


        :return: The path of this VulnerabilityFilePath.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this VulnerabilityFilePath.


        :param path: The path of this VulnerabilityFilePath.
        :type path: str
        """

        self._path = path

    @property
    def start_line(self):
        """Gets the start_line of this VulnerabilityFilePath.


        :return: The start_line of this VulnerabilityFilePath.
        :rtype: int
        """
        return self._start_line

    @start_line.setter
    def start_line(self, start_line):
        """Sets the start_line of this VulnerabilityFilePath.


        :param start_line: The start_line of this VulnerabilityFilePath.
        :type start_line: int
        """

        self._start_line = start_line
