# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.finding_remediation import FindingRemediation
from openapi_server.models.finding_resource import FindingResource
from openapi_server.models.finding_vulnerability import FindingVulnerability
from openapi_server.models.severity import Severity
from openapi_server.models.status import Status
from openapi_server import util


class Finding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, description: str=None, detector_id: str=None, detector_name: str=None, detector_tags: List=None, generator_id: str=None, id: str=None, remediation: FindingRemediation=None, resource: FindingResource=None, rule_id: str=None, severity: Severity=None, status: Status=None, title: str=None, type: str=None, updated_at: datetime=None, vulnerability: FindingVulnerability=None):
        """Finding - a model defined in OpenAPI

        :param created_at: The created_at of this Finding.
        :param description: The description of this Finding.
        :param detector_id: The detector_id of this Finding.
        :param detector_name: The detector_name of this Finding.
        :param detector_tags: The detector_tags of this Finding.
        :param generator_id: The generator_id of this Finding.
        :param id: The id of this Finding.
        :param remediation: The remediation of this Finding.
        :param resource: The resource of this Finding.
        :param rule_id: The rule_id of this Finding.
        :param severity: The severity of this Finding.
        :param status: The status of this Finding.
        :param title: The title of this Finding.
        :param type: The type of this Finding.
        :param updated_at: The updated_at of this Finding.
        :param vulnerability: The vulnerability of this Finding.
        """
        self.openapi_types = {
            'created_at': datetime,
            'description': str,
            'detector_id': str,
            'detector_name': str,
            'detector_tags': List,
            'generator_id': str,
            'id': str,
            'remediation': FindingRemediation,
            'resource': FindingResource,
            'rule_id': str,
            'severity': Severity,
            'status': Status,
            'title': str,
            'type': str,
            'updated_at': datetime,
            'vulnerability': FindingVulnerability
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'description': 'description',
            'detector_id': 'detectorId',
            'detector_name': 'detectorName',
            'detector_tags': 'detectorTags',
            'generator_id': 'generatorId',
            'id': 'id',
            'remediation': 'remediation',
            'resource': 'resource',
            'rule_id': 'ruleId',
            'severity': 'severity',
            'status': 'status',
            'title': 'title',
            'type': 'type',
            'updated_at': 'updatedAt',
            'vulnerability': 'vulnerability'
        }

        self._created_at = created_at
        self._description = description
        self._detector_id = detector_id
        self._detector_name = detector_name
        self._detector_tags = detector_tags
        self._generator_id = generator_id
        self._id = id
        self._remediation = remediation
        self._resource = resource
        self._rule_id = rule_id
        self._severity = severity
        self._status = status
        self._title = title
        self._type = type
        self._updated_at = updated_at
        self._vulnerability = vulnerability

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Finding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Finding of this Finding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Finding.


        :return: The created_at of this Finding.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Finding.


        :param created_at: The created_at of this Finding.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this Finding.


        :return: The description of this Finding.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Finding.


        :param description: The description of this Finding.
        :type description: str
        """

        self._description = description

    @property
    def detector_id(self):
        """Gets the detector_id of this Finding.


        :return: The detector_id of this Finding.
        :rtype: str
        """
        return self._detector_id

    @detector_id.setter
    def detector_id(self, detector_id):
        """Sets the detector_id of this Finding.


        :param detector_id: The detector_id of this Finding.
        :type detector_id: str
        """

        self._detector_id = detector_id

    @property
    def detector_name(self):
        """Gets the detector_name of this Finding.


        :return: The detector_name of this Finding.
        :rtype: str
        """
        return self._detector_name

    @detector_name.setter
    def detector_name(self, detector_name):
        """Sets the detector_name of this Finding.


        :param detector_name: The detector_name of this Finding.
        :type detector_name: str
        """

        self._detector_name = detector_name

    @property
    def detector_tags(self):
        """Gets the detector_tags of this Finding.


        :return: The detector_tags of this Finding.
        :rtype: List
        """
        return self._detector_tags

    @detector_tags.setter
    def detector_tags(self, detector_tags):
        """Sets the detector_tags of this Finding.


        :param detector_tags: The detector_tags of this Finding.
        :type detector_tags: List
        """

        self._detector_tags = detector_tags

    @property
    def generator_id(self):
        """Gets the generator_id of this Finding.


        :return: The generator_id of this Finding.
        :rtype: str
        """
        return self._generator_id

    @generator_id.setter
    def generator_id(self, generator_id):
        """Sets the generator_id of this Finding.


        :param generator_id: The generator_id of this Finding.
        :type generator_id: str
        """

        self._generator_id = generator_id

    @property
    def id(self):
        """Gets the id of this Finding.


        :return: The id of this Finding.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Finding.


        :param id: The id of this Finding.
        :type id: str
        """

        self._id = id

    @property
    def remediation(self):
        """Gets the remediation of this Finding.


        :return: The remediation of this Finding.
        :rtype: FindingRemediation
        """
        return self._remediation

    @remediation.setter
    def remediation(self, remediation):
        """Sets the remediation of this Finding.


        :param remediation: The remediation of this Finding.
        :type remediation: FindingRemediation
        """

        self._remediation = remediation

    @property
    def resource(self):
        """Gets the resource of this Finding.


        :return: The resource of this Finding.
        :rtype: FindingResource
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this Finding.


        :param resource: The resource of this Finding.
        :type resource: FindingResource
        """

        self._resource = resource

    @property
    def rule_id(self):
        """Gets the rule_id of this Finding.


        :return: The rule_id of this Finding.
        :rtype: str
        """
        return self._rule_id

    @rule_id.setter
    def rule_id(self, rule_id):
        """Sets the rule_id of this Finding.


        :param rule_id: The rule_id of this Finding.
        :type rule_id: str
        """

        self._rule_id = rule_id

    @property
    def severity(self):
        """Gets the severity of this Finding.


        :return: The severity of this Finding.
        :rtype: Severity
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this Finding.


        :param severity: The severity of this Finding.
        :type severity: Severity
        """

        self._severity = severity

    @property
    def status(self):
        """Gets the status of this Finding.


        :return: The status of this Finding.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Finding.


        :param status: The status of this Finding.
        :type status: Status
        """

        self._status = status

    @property
    def title(self):
        """Gets the title of this Finding.


        :return: The title of this Finding.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Finding.


        :param title: The title of this Finding.
        :type title: str
        """

        self._title = title

    @property
    def type(self):
        """Gets the type of this Finding.


        :return: The type of this Finding.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Finding.


        :param type: The type of this Finding.
        :type type: str
        """

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this Finding.


        :return: The updated_at of this Finding.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Finding.


        :param updated_at: The updated_at of this Finding.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def vulnerability(self):
        """Gets the vulnerability of this Finding.


        :return: The vulnerability of this Finding.
        :rtype: FindingVulnerability
        """
        return self._vulnerability

    @vulnerability.setter
    def vulnerability(self, vulnerability):
        """Sets the vulnerability of this Finding.


        :param vulnerability: The vulnerability of this Finding.
        :type vulnerability: FindingVulnerability
        """

        self._vulnerability = vulnerability
