# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.metrics_summary_open_findings import MetricsSummaryOpenFindings
from openapi_server import util


class MetricsSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, categories_with_most_findings: List=None, _date: datetime=None, open_findings: MetricsSummaryOpenFindings=None, scans_with_most_open_critical_findings: List=None, scans_with_most_open_findings: List=None):
        """MetricsSummary - a model defined in OpenAPI

        :param categories_with_most_findings: The categories_with_most_findings of this MetricsSummary.
        :param _date: The _date of this MetricsSummary.
        :param open_findings: The open_findings of this MetricsSummary.
        :param scans_with_most_open_critical_findings: The scans_with_most_open_critical_findings of this MetricsSummary.
        :param scans_with_most_open_findings: The scans_with_most_open_findings of this MetricsSummary.
        """
        self.openapi_types = {
            'categories_with_most_findings': List,
            '_date': datetime,
            'open_findings': MetricsSummaryOpenFindings,
            'scans_with_most_open_critical_findings': List,
            'scans_with_most_open_findings': List
        }

        self.attribute_map = {
            'categories_with_most_findings': 'categoriesWithMostFindings',
            '_date': 'date',
            'open_findings': 'openFindings',
            'scans_with_most_open_critical_findings': 'scansWithMostOpenCriticalFindings',
            'scans_with_most_open_findings': 'scansWithMostOpenFindings'
        }

        self._categories_with_most_findings = categories_with_most_findings
        self.__date = _date
        self._open_findings = open_findings
        self._scans_with_most_open_critical_findings = scans_with_most_open_critical_findings
        self._scans_with_most_open_findings = scans_with_most_open_findings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricsSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricsSummary of this MetricsSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categories_with_most_findings(self):
        """Gets the categories_with_most_findings of this MetricsSummary.


        :return: The categories_with_most_findings of this MetricsSummary.
        :rtype: List
        """
        return self._categories_with_most_findings

    @categories_with_most_findings.setter
    def categories_with_most_findings(self, categories_with_most_findings):
        """Sets the categories_with_most_findings of this MetricsSummary.


        :param categories_with_most_findings: The categories_with_most_findings of this MetricsSummary.
        :type categories_with_most_findings: List
        """

        self._categories_with_most_findings = categories_with_most_findings

    @property
    def _date(self):
        """Gets the _date of this MetricsSummary.


        :return: The _date of this MetricsSummary.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this MetricsSummary.


        :param _date: The _date of this MetricsSummary.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def open_findings(self):
        """Gets the open_findings of this MetricsSummary.


        :return: The open_findings of this MetricsSummary.
        :rtype: MetricsSummaryOpenFindings
        """
        return self._open_findings

    @open_findings.setter
    def open_findings(self, open_findings):
        """Sets the open_findings of this MetricsSummary.


        :param open_findings: The open_findings of this MetricsSummary.
        :type open_findings: MetricsSummaryOpenFindings
        """

        self._open_findings = open_findings

    @property
    def scans_with_most_open_critical_findings(self):
        """Gets the scans_with_most_open_critical_findings of this MetricsSummary.


        :return: The scans_with_most_open_critical_findings of this MetricsSummary.
        :rtype: List
        """
        return self._scans_with_most_open_critical_findings

    @scans_with_most_open_critical_findings.setter
    def scans_with_most_open_critical_findings(self, scans_with_most_open_critical_findings):
        """Sets the scans_with_most_open_critical_findings of this MetricsSummary.


        :param scans_with_most_open_critical_findings: The scans_with_most_open_critical_findings of this MetricsSummary.
        :type scans_with_most_open_critical_findings: List
        """

        self._scans_with_most_open_critical_findings = scans_with_most_open_critical_findings

    @property
    def scans_with_most_open_findings(self):
        """Gets the scans_with_most_open_findings of this MetricsSummary.


        :return: The scans_with_most_open_findings of this MetricsSummary.
        :rtype: List
        """
        return self._scans_with_most_open_findings

    @scans_with_most_open_findings.setter
    def scans_with_most_open_findings(self, scans_with_most_open_findings):
        """Sets the scans_with_most_open_findings of this MetricsSummary.


        :param scans_with_most_open_findings: The scans_with_most_open_findings of this MetricsSummary.
        :type scans_with_most_open_findings: List
        """

        self._scans_with_most_open_findings = scans_with_most_open_findings
