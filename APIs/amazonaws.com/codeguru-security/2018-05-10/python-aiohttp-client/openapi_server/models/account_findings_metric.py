# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_findings_metric_closed_findings import AccountFindingsMetricClosedFindings
from openapi_server.models.account_findings_metric_mean_time_to_close import AccountFindingsMetricMeanTimeToClose
from openapi_server.models.account_findings_metric_new_findings import AccountFindingsMetricNewFindings
from openapi_server.models.account_findings_metric_open_findings import AccountFindingsMetricOpenFindings
from openapi_server import util


class AccountFindingsMetric(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, closed_findings: AccountFindingsMetricClosedFindings=None, _date: datetime=None, mean_time_to_close: AccountFindingsMetricMeanTimeToClose=None, new_findings: AccountFindingsMetricNewFindings=None, open_findings: AccountFindingsMetricOpenFindings=None):
        """AccountFindingsMetric - a model defined in OpenAPI

        :param closed_findings: The closed_findings of this AccountFindingsMetric.
        :param _date: The _date of this AccountFindingsMetric.
        :param mean_time_to_close: The mean_time_to_close of this AccountFindingsMetric.
        :param new_findings: The new_findings of this AccountFindingsMetric.
        :param open_findings: The open_findings of this AccountFindingsMetric.
        """
        self.openapi_types = {
            'closed_findings': AccountFindingsMetricClosedFindings,
            '_date': datetime,
            'mean_time_to_close': AccountFindingsMetricMeanTimeToClose,
            'new_findings': AccountFindingsMetricNewFindings,
            'open_findings': AccountFindingsMetricOpenFindings
        }

        self.attribute_map = {
            'closed_findings': 'closedFindings',
            '_date': 'date',
            'mean_time_to_close': 'meanTimeToClose',
            'new_findings': 'newFindings',
            'open_findings': 'openFindings'
        }

        self._closed_findings = closed_findings
        self.__date = _date
        self._mean_time_to_close = mean_time_to_close
        self._new_findings = new_findings
        self._open_findings = open_findings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountFindingsMetric':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountFindingsMetric of this AccountFindingsMetric.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def closed_findings(self):
        """Gets the closed_findings of this AccountFindingsMetric.


        :return: The closed_findings of this AccountFindingsMetric.
        :rtype: AccountFindingsMetricClosedFindings
        """
        return self._closed_findings

    @closed_findings.setter
    def closed_findings(self, closed_findings):
        """Sets the closed_findings of this AccountFindingsMetric.


        :param closed_findings: The closed_findings of this AccountFindingsMetric.
        :type closed_findings: AccountFindingsMetricClosedFindings
        """

        self._closed_findings = closed_findings

    @property
    def _date(self):
        """Gets the _date of this AccountFindingsMetric.


        :return: The _date of this AccountFindingsMetric.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this AccountFindingsMetric.


        :param _date: The _date of this AccountFindingsMetric.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def mean_time_to_close(self):
        """Gets the mean_time_to_close of this AccountFindingsMetric.


        :return: The mean_time_to_close of this AccountFindingsMetric.
        :rtype: AccountFindingsMetricMeanTimeToClose
        """
        return self._mean_time_to_close

    @mean_time_to_close.setter
    def mean_time_to_close(self, mean_time_to_close):
        """Sets the mean_time_to_close of this AccountFindingsMetric.


        :param mean_time_to_close: The mean_time_to_close of this AccountFindingsMetric.
        :type mean_time_to_close: AccountFindingsMetricMeanTimeToClose
        """

        self._mean_time_to_close = mean_time_to_close

    @property
    def new_findings(self):
        """Gets the new_findings of this AccountFindingsMetric.


        :return: The new_findings of this AccountFindingsMetric.
        :rtype: AccountFindingsMetricNewFindings
        """
        return self._new_findings

    @new_findings.setter
    def new_findings(self, new_findings):
        """Sets the new_findings of this AccountFindingsMetric.


        :param new_findings: The new_findings of this AccountFindingsMetric.
        :type new_findings: AccountFindingsMetricNewFindings
        """

        self._new_findings = new_findings

    @property
    def open_findings(self):
        """Gets the open_findings of this AccountFindingsMetric.


        :return: The open_findings of this AccountFindingsMetric.
        :rtype: AccountFindingsMetricOpenFindings
        """
        return self._open_findings

    @open_findings.setter
    def open_findings(self, open_findings):
        """Sets the open_findings of this AccountFindingsMetric.


        :param open_findings: The open_findings of this AccountFindingsMetric.
        :type open_findings: AccountFindingsMetricOpenFindings
        """

        self._open_findings = open_findings
