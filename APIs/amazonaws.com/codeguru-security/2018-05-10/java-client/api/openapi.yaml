openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<note> <p>Amazon CodeGuru Security is in preview release and is subject\
    \ to change.</p> </note> <p>This section provides documentation for the Amazon\
    \ CodeGuru Security API operations. CodeGuru Security is a service that uses program\
    \ analysis and machine learning to detect security policy violations and vulnerabilities,\
    \ and recommends ways to address these security risks.</p> <p>By proactively detecting\
    \ and providing recommendations for addressing security risks, CodeGuru Security\
    \ improves the overall security of your application code. For more information\
    \ about CodeGuru Security, see the <a href=\"https://docs.aws.amazon.com/codeguru/latest/security-ug/what-is-codeguru-security.html\"\
    >Amazon CodeGuru Security User Guide</a>. </p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon CodeGuru Security
  version: 2018-05-10
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: codeguru-security
  x-aws-signingName: codeguru-security
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codeguru-security-2018-05-10.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/codeguru-security/
servers:
- description: The Amazon CodeGuru Security multi-region endpoint
  url: "http://codeguru-security.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon CodeGuru Security multi-region endpoint
  url: "https://codeguru-security.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon CodeGuru Security endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://codeguru-security.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon CodeGuru Security endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://codeguru-security.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /batchGetFindings:
    post:
      description: Returns a list of all requested findings.
      operationId: BatchGetFindings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetFindings_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetFindingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /scans:
    get:
      description: Returns a list of all the standard scans in an account. Does not
        return express scans.
      operationId: ListScans
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of results to return in the response. Use\
          \ this parameter when paginating results. If additional results exist beyond\
          \ the number you specify, the <code>nextToken</code> element is returned\
          \ in the response. Use <code>nextToken</code> in a subsequent request to\
          \ retrieve additional results."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "A token to use for paginating results that are returned in the\
          \ response. Set the value of this parameter to null for the first request.\
          \ For subsequent calls, use the <code>nextToken</code> value returned from\
          \ the previous request to continue listing results after the first page."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          pattern: "^[\\S]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScansResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: Use to create a scan using code uploaded to an S3 bucket.
      operationId: CreateScan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScan_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateScanResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /uploadUrl:
    post:
      description: <p>Generates a pre-signed URL and request headers used to upload
        a code resource.</p> <p>You can upload your code resource to the URL and add
        the request headers using any HTTP client.</p>
      operationId: CreateUploadUrl
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUploadUrl_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUploadUrlResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /accountConfiguration/get:
    get:
      description: Use to get account level configuration.
      operationId: GetAccountConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /findings/{scanName}:
    get:
      description: Returns a list of all findings generated by a particular scan.
      operationId: GetFindings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of results to return in the response. Use\
          \ this parameter when paginating results. If additional results exist beyond\
          \ the number you specify, the <code>nextToken</code> element is returned\
          \ in the response. Use <code>nextToken</code> in a subsequent request to\
          \ retrieve additional results."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "A token to use for paginating results that are returned in the\
          \ response. Set the value of this parameter to null for the first request.\
          \ For subsequent calls, use the <code>nextToken</code> value returned from\
          \ the previous request to continue listing results after the first page."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          pattern: "^[\\S]+$"
          type: string
        style: form
      - description: The name of the scan you want to retrieve findings from.
        explode: false
        in: path
        name: scanName
        required: true
        schema:
          maxLength: 140
          minLength: 1
          pattern: "^[a-zA-Z0-9-_$:.]*$"
          type: string
        style: simple
      - description: "The status of the findings you want to get. Pass either <code>Open</code>,\
          \ <code>Closed</code>, or <code>All</code>."
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - Closed
          - Open
          - All
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFindingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /metrics/summary#date:
    get:
      description: "Returns top level metrics about an account from a specified date,\
        \ including number of open findings, the categories with most findings, the\
        \ scans with most open findings, and scans with most open critical findings. "
      operationId: GetMetricsSummary
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The date you want to retrieve summary metrics from, rounded\
          \ to the nearest day. The date must be within the past two years since metrics\
          \ data is only stored for two years. If a date outside of this range is\
          \ passed, the response will be empty."
        explode: true
        in: query
        name: date
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMetricsSummaryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /scans/{scanName}:
    get:
      description: "Returns details about a scan, including whether or not a scan\
        \ has completed."
      operationId: GetScan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: UUID that identifies the individual scan run you want to view
          details about. You retrieve this when you call the <code>CreateScan</code>
          operation. Defaults to the latest scan run if missing.
        explode: true
        in: query
        name: runId
        required: false
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          type: string
        style: form
      - description: The name of the scan you want to view details about.
        explode: false
        in: path
        name: scanName
        required: true
        schema:
          maxLength: 140
          minLength: 1
          pattern: "^[a-zA-Z0-9-_$:.]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScanResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /metrics/findings#endDate&startDate:
    get:
      description: Returns metrics about all findings in an account within a specified
        time range.
      operationId: ListFindingsMetrics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The end date of the interval which you want to retrieve metrics
          from.
        explode: true
        in: query
        name: endDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: "The maximum number of results to return in the response. Use\
          \ this parameter when paginating results. If additional results exist beyond\
          \ the number you specify, the <code>nextToken</code> element is returned\
          \ in the response. Use <code>nextToken</code> in a subsequent request to\
          \ retrieve additional results."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: "A token to use for paginating results that are returned in the\
          \ response. Set the value of this parameter to null for the first request.\
          \ For subsequent calls, use the <code>nextToken</code> value returned from\
          \ the previous request to continue listing results after the first page."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 1
          pattern: "^[\\S]+$"
          type: string
        style: form
      - description: The start date of the interval which you want to retrieve metrics
          from.
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingsMetricsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: Returns a list of all tags associated with a scan.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>ScanName</code> object. You can retrieve
          this ARN by calling <code>ListScans</code> or <code>GetScan</code>.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 300
          minLength: 1
          pattern: "^arn:aws:codeguru-security:[\\S]+:[\\d]{12}:scans\\/[a-zA-Z0-9-_$:.]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: Use to add one or more tags to an existing scan.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>ScanName</code> object. You can retrieve
          this ARN by calling <code>ListScans</code> or <code>GetScan</code>.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 300
          minLength: 1
          pattern: "^arn:aws:codeguru-security:[\\S]+:[\\d]{12}:scans\\/[a-zA-Z0-9-_$:.]*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Use to remove one or more tags from an existing scan.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the <code>ScanName</code> object. You can retrieve
          this ARN by calling <code>ListScans</code> or <code>GetScan</code>.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 300
          minLength: 1
          pattern: "^arn:aws:codeguru-security:[\\S]+:[\\d]{12}:scans\\/[a-zA-Z0-9-_$:.]*$"
          type: string
        style: simple
      - description: A list of keys for each tag you want to remove from a scan.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 200
          minItems: 0
          type: array
        style: form
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /updateAccountConfiguration:
    put:
      description: Use to update account-level configuration with an encryption key.
      operationId: UpdateAccountConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BatchGetFindingsResponse:
      example:
        findings: ""
        failedFindings: ""
      properties:
        failedFindings:
          allOf:
          - $ref: '#/components/schemas/BatchGetFindingsErrors'
          - description: "A list of errors for individual findings which were not\
              \ fetched. Each BatchGetFindingsError contains the <code>scanName</code>,\
              \ <code>findingId</code>, <code>errorCode</code> and error <code>message</code>."
        findings:
          allOf:
          - $ref: '#/components/schemas/Findings'
          - description: ' A list of all requested findings.'
      required:
      - failedFindings
      - findings
      type: object
    FindingIdentifier:
      description: 'An object that contains information about a finding and the scan
        that generated it. '
      properties:
        findingId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier for a finding.
        scanName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The name of the scan that generated the finding. '
      required:
      - findingId
      - scanName
      type: object
    InternalServerException: {}
    ThrottlingException: {}
    ValidationException: {}
    AccessDeniedException: {}
    CreateScanResponse:
      example:
        scanName: ""
        resourceId:
          codeArtifactId: ""
        scanNameArn: ""
        runId: ""
        scanState: ""
      properties:
        resourceId:
          $ref: '#/components/schemas/CreateScanResponse_resourceId'
        runId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: UUID that identifies the individual scan run.
        scanName:
          allOf:
          - $ref: '#/components/schemas/ScanName'
          - description: The name of the scan.
        scanNameArn:
          allOf:
          - $ref: '#/components/schemas/ScanNameArn'
          - description: The ARN for the scan name.
        scanState:
          allOf:
          - $ref: '#/components/schemas/ScanState'
          - description: "The current state of the scan. Returns either <code>InProgress</code>,\
              \ <code>Successful</code>, or <code>Failed</code>."
      required:
      - resourceId
      - runId
      - scanName
      - scanState
      type: object
    Uuid:
      pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    ConflictException: {}
    ResourceNotFoundException: {}
    CreateUploadUrlResponse:
      example:
        s3Url: ""
        requestHeaders: ""
        codeArtifactId: ""
      properties:
        codeArtifactId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: 'The identifier for the uploaded code resource. '
        requestHeaders:
          allOf:
          - $ref: '#/components/schemas/RequestHeaderMap'
          - description: A set of key-value pairs that contain the required headers
              when uploading your resource.
        s3Url:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          - description: A pre-signed S3 URL. You can upload the code file you want
              to scan and add the required <code>requestHeaders</code> using any HTTP
              client.
      required:
      - codeArtifactId
      - requestHeaders
      - s3Url
      type: object
    GetAccountConfigurationResponse:
      example:
        encryptionConfig:
          kmsKeyArn: ""
      properties:
        encryptionConfig:
          $ref: '#/components/schemas/GetAccountConfigurationResponse_encryptionConfig'
      required:
      - encryptionConfig
      type: object
    GetFindingsResponse:
      example:
        nextToken: ""
        findings: ""
      properties:
        findings:
          allOf:
          - $ref: '#/components/schemas/Findings'
          - description: A list of findings generated by the specified scan.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'A pagination token. You can use this in future calls to
              <code>GetFindings</code> to continue listing results after the current
              page. '
      type: object
    GetMetricsSummaryResponse:
      example:
        metricsSummary:
          date: ""
          scansWithMostOpenCriticalFindings: ""
          scansWithMostOpenFindings: ""
          categoriesWithMostFindings: ""
          openFindings:
            high: ""
            critical: ""
            low: ""
            medium: ""
            info: ""
      properties:
        metricsSummary:
          $ref: '#/components/schemas/GetMetricsSummaryResponse_metricsSummary'
      type: object
    GetScanResponse:
      example:
        createdAt: ""
        scanName: ""
        scanNameArn: ""
        numberOfRevisions: ""
        runId: ""
        analysisType: ""
        scanState: ""
        updatedAt: ""
      properties:
        analysisType:
          allOf:
          - $ref: '#/components/schemas/AnalysisType'
          - description: "The type of analysis CodeGuru Security performed in the\
              \ scan, either <code>Security</code> or <code>All</code>. The <code>Security</code>\
              \ type only generates findings related to security. The <code>All</code>\
              \ type generates both security findings and quality findings."
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the scan was created.
        numberOfRevisions:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of times a scan has been re-run on a revised resource.
        runId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: UUID that identifies the individual scan run.
        scanName:
          allOf:
          - $ref: '#/components/schemas/ScanName'
          - description: The name of the scan.
        scanNameArn:
          allOf:
          - $ref: '#/components/schemas/ScanNameArn'
          - description: The ARN for the scan name.
        scanState:
          allOf:
          - $ref: '#/components/schemas/ScanState'
          - description: "The current state of the scan. Pass either <code>InProgress</code>,\
              \ <code>Successful</code>, or <code>Failed</code>."
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the scan was last updated. Only available for
              <code>STANDARD</code> scan types.
      required:
      - analysisType
      - createdAt
      - runId
      - scanName
      - scanState
      type: object
    ListFindingsMetricsResponse:
      example:
        nextToken: ""
        findingsMetrics: ""
      properties:
        findingsMetrics:
          allOf:
          - $ref: '#/components/schemas/FindingsMetricList'
          - description: A list of <code>AccountFindingsMetric</code> objects retrieved
              from the specified time interval.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: 'A pagination token. You can use this in future calls to
              <code>ListFindingMetrics</code> to continue listing results after the
              current page. '
      type: object
    ListScansResponse:
      example:
        nextToken: ""
        summaries: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A pagination token. You can use this in future calls to <code>ListScans</code>
              to continue listing results after the current page.
        summaries:
          allOf:
          - $ref: '#/components/schemas/ScanSummaries'
          - description: A list of <code>ScanSummary</code> objects with information
              about all scans in an account.
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>An array of key-value pairs used to tag an existing scan.\
              \ A tag is a custom attribute label with two parts:</p> <ul> <li> <p>A\
              \ tag key. For example, <code>CostCenter</code>, <code>Environment</code>,\
              \ or <code>Secret</code>. Tag keys are case sensitive.</p> </li> <li>\
              \ <p>An optional tag value field. For example, <code>111122223333</code>,\
              \ <code>Production</code>, or a team name. Omitting the tag value is\
              \ the same as using an empty string. Tag values are case sensitive.</p>\
              \ </li> </ul>"
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    UpdateAccountConfigurationResponse:
      example:
        encryptionConfig:
          kmsKeyArn: ""
      properties:
        encryptionConfig:
          $ref: '#/components/schemas/UpdateAccountConfigurationResponse_encryptionConfig'
      required:
      - encryptionConfig
      type: object
    KmsKeyArn:
      maxLength: 2048
      minLength: 1
      pattern: "^arn:aws:kms:[\\S]+:[\\d]{12}:key\\/(([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})|(mrk-[0-9a-zA-Z]{32}))$"
      type: string
    FindingMetricsValuePerSeverity:
      description: The severity of the issue in the code that generated a finding.
      properties:
        critical:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The severity of the finding is critical and should be addressed
              immediately.
        high:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The severity of the finding is high and should be addressed
              as a near-term priority.
        info:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The finding is related to quality or readability improvements
              and not considered actionable.
        low:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The severity of the finding is low and does require action
              on its own.
        medium:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The severity of the finding is medium and should be addressed
              as a mid-term priority.
      type: object
    Timestamp:
      format: date-time
      type: string
    AccountFindingsMetric:
      description: A summary of findings metrics in an account.
      properties:
        closedFindings:
          $ref: '#/components/schemas/AccountFindingsMetric_closedFindings'
        date:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date from which the finding metrics were retrieved.
        meanTimeToClose:
          $ref: '#/components/schemas/AccountFindingsMetric_meanTimeToClose'
        newFindings:
          $ref: '#/components/schemas/AccountFindingsMetric_newFindings'
        openFindings:
          $ref: '#/components/schemas/AccountFindingsMetric_openFindings'
      type: object
    AnalysisType:
      enum:
      - Security
      - All
      type: string
    ErrorCode:
      enum:
      - DUPLICATE_IDENTIFIER
      - ITEM_DOES_NOT_EXIST
      - INTERNAL_ERROR
      - INVALID_FINDING_ID
      - INVALID_SCAN_NAME
      type: string
    String:
      type: string
    ScanName:
      maxLength: 140
      minLength: 1
      pattern: "^[a-zA-Z0-9-_$:.]*$"
      type: string
    BatchGetFindingsError:
      description: Contains information about the error that caused a finding to fail
        to be retrieved.
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: A code associated with the type of error.
        findingId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The finding ID of the finding that was not fetched.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Describes the error.
        scanName:
          allOf:
          - $ref: '#/components/schemas/ScanName'
          - description: The name of the scan that generated the finding.
      required:
      - errorCode
      - findingId
      - message
      - scanName
      type: object
    BatchGetFindingsErrors:
      items:
        $ref: '#/components/schemas/BatchGetFindingsError'
      type: array
    FindingIdentifiers:
      items:
        $ref: '#/components/schemas/FindingIdentifier'
      maxItems: 25
      minItems: 1
      type: array
    BatchGetFindingsRequest:
      example:
        findingIdentifiers: ""
      properties:
        findingIdentifiers:
          allOf:
          - $ref: '#/components/schemas/FindingIdentifiers'
          - description: A list of finding identifiers. Each identifier consists of
              a <code>scanName</code> and a <code>findingId</code>. You retrieve the
              <code>findingId</code> when you call <code>GetFindings</code>.
      required:
      - findingIdentifiers
      title: BatchGetFindingsRequest
      type: object
    Findings:
      items:
        $ref: '#/components/schemas/Finding'
      type: array
    CategoryWithFindingNum:
      description: Information about a finding category with open findings.
      properties:
        categoryName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the finding category. A finding category is determined
              by the detector that detected the finding.
        findingNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of open findings in the category.
      type: object
    CategoriesWithMostFindings:
      items:
        $ref: '#/components/schemas/CategoryWithFindingNum'
      maxItems: 5
      minItems: 0
      type: array
    Integer:
      type: integer
    ClientToken:
      maxLength: 64
      minLength: 1
      pattern: "^[\\S]+$"
      type: string
    CodeLine:
      description: The line of code where a finding was detected.
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The code that contains a vulnerability.
        number:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The code line number.
      type: object
    CodeSnippet:
      items:
        $ref: '#/components/schemas/CodeLine'
      type: array
    ResourceId:
      description: The identifier for a resource object that contains resources where
        a finding was detected.
      properties:
        codeArtifactId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier for the code file uploaded to the resource
              where a finding was detected.
      type: object
    ScanType:
      enum:
      - Standard
      - Express
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 200
      minProperties: 0
      type: object
    CreateScanRequest:
      example:
        scanName: ""
        resourceId:
          codeArtifactId: ""
        clientToken: ""
        scanType: ""
        analysisType: ""
        tags: ""
      properties:
        analysisType:
          allOf:
          - $ref: '#/components/schemas/AnalysisType'
          - description: "The type of analysis you want CodeGuru Security to perform\
              \ in the scan, either <code>Security</code> or <code>All</code>. The\
              \ <code>Security</code> type only generates findings related to security.\
              \ The <code>All</code> type generates both security findings and quality\
              \ findings. Defaults to <code>Security</code> type if missing."
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The idempotency token for the request. Amazon CodeGuru Security
              uses this value to prevent the accidental creation of duplicate scans
              if there are failures and retries.
        resourceId:
          $ref: '#/components/schemas/CreateScanRequest_resourceId'
        scanName:
          allOf:
          - $ref: '#/components/schemas/ScanName'
          - description: "The unique name that CodeGuru Security uses to track revisions\
              \ across multiple scans of the same resource. Only allowed for a <code>STANDARD</code>\
              \ scan type. If not specified, it will be auto generated. "
        scanType:
          allOf:
          - $ref: '#/components/schemas/ScanType'
          - description: "<p>The type of scan, either <code>Standard</code> or <code>Express</code>.\
              \ Defaults to <code>Standard</code> type if missing.</p> <p> <code>Express</code>\
              \ scans run on limited resources and use a limited set of detectors\
              \ to analyze your code in near-real time. <code>Standard</code> scans\
              \ have standard resource limits and use the full set of detectors to\
              \ analyze your code.</p>"
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>An array of key-value pairs used to tag a scan. A tag\
              \ is a custom attribute label with two parts:</p> <ul> <li> <p>A tag\
              \ key. For example, <code>CostCenter</code>, <code>Environment</code>,\
              \ or <code>Secret</code>. Tag keys are case sensitive.</p> </li> <li>\
              \ <p>An optional tag value field. For example, <code>111122223333</code>,\
              \ <code>Production</code>, or a team name. Omitting the tag value is\
              \ the same as using an empty string. Tag values are case sensitive.</p>\
              \ </li> </ul>"
      required:
      - resourceId
      - scanName
      title: CreateScanRequest
      type: object
    ScanNameArn:
      maxLength: 300
      minLength: 1
      pattern: "^arn:aws:codeguru-security:[\\S]+:[\\d]{12}:scans\\/[a-zA-Z0-9-_$:.]*$"
      type: string
    ScanState:
      enum:
      - InProgress
      - Successful
      - Failed
      type: string
    CreateUploadUrlRequest:
      example:
        scanName: ""
      properties:
        scanName:
          allOf:
          - $ref: '#/components/schemas/ScanName'
          - description: The name of the scan that will use the uploaded resource.
              CodeGuru Security uses the unique scan name to track revisions across
              multiple scans of the same resource. Use this <code>scanName</code>
              when you call <code>CreateScan</code> on the code resource you upload
              to this URL.
      required:
      - scanName
      title: CreateUploadUrlRequest
      type: object
    RequestHeaderMap:
      additionalProperties:
        $ref: '#/components/schemas/HeaderValue'
      type: object
    S3Url:
      format: password
      minLength: 1
      type: string
    DetectorTags:
      items:
        $ref: '#/components/schemas/String'
      type: array
    Double:
      format: double
      type: number
    EncryptionConfig:
      description: Information about account-level configuration.
      properties:
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The KMS key ARN to use for encryption. This must be provided
              as a header when uploading your code resource.
      type: object
    FilePath:
      description: Information about the location of security vulnerabilities that
        Amazon CodeGuru Security detected in your code.
      properties:
        codeSnippet:
          allOf:
          - $ref: '#/components/schemas/CodeSnippet'
          - description: A list of <code>CodeLine</code> objects that describe where
              the security vulnerability appears in your code.
        endLine:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The last line number of the code snippet where the security
              vulnerability appears in your code.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the file.
        path:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The path to the resource with the security vulnerability.
        startLine:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The first line number of the code snippet where the security
              vulnerability appears in your code.
      type: object
    Remediation:
      description: Information about how to remediate a finding.
      properties:
        recommendation:
          $ref: '#/components/schemas/Remediation_recommendation'
        suggestedFixes:
          allOf:
          - $ref: '#/components/schemas/SuggestedFixes'
          - description: A list of <code>SuggestedFix</code> objects. Each object
              contains information about a suggested code fix to remediate the finding.
      type: object
    Resource:
      description: "Information about a resource, such as an Amazon S3 bucket or AWS\
        \ Lambda function, that contains a finding."
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier for the resource.
        subResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The identifier for a section of the resource, such as an\
              \ AWS Lambda layer."
      type: object
    Severity:
      enum:
      - Critical
      - High
      - Medium
      - Low
      - Info
      type: string
    Status:
      enum:
      - Closed
      - Open
      - All
      type: string
    Vulnerability:
      description: Information about a security vulnerability that Amazon CodeGuru
        Security detected.
      properties:
        filePath:
          $ref: '#/components/schemas/Vulnerability_filePath'
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier for the vulnerability.
        itemCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The number of times the vulnerability appears in your code.'
        referenceUrls:
          allOf:
          - $ref: '#/components/schemas/ReferenceUrls'
          - description: One or more URL addresses that contain details about a vulnerability.
        relatedVulnerabilities:
          allOf:
          - $ref: '#/components/schemas/RelatedVulnerabilities'
          - description: One or more vulnerabilities that are related to the vulnerability
              being described.
      type: object
    Finding:
      description: Information about a finding that was detected in your code.
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time when the finding was created.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of the finding.
        detectorId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The identifier for the detector that detected the finding
              in your code. A detector is a defined rule based on industry standards
              and AWS best practices. '
        detectorName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The name of the detector that identified the security vulnerability
              in your code. '
        detectorTags:
          allOf:
          - $ref: '#/components/schemas/DetectorTags'
          - description: "One or more tags or categorizations that are associated\
              \ with a detector. These tags are defined by type, programming language,\
              \ or other classification such as maintainability or consistency."
        generatorId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier for the component that generated a finding
              such as AWSCodeGuruSecurity or AWSInspector.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier for a finding.
        remediation:
          $ref: '#/components/schemas/Finding_remediation'
        resource:
          $ref: '#/components/schemas/Finding_resource'
        ruleId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier for the rule that generated the finding.
        severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          - description: The severity of the finding.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: 'The status of the finding. A finding status can be open
              or closed. '
        title:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The title of the finding.
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The type of finding. '
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'The time when the finding was last updated. Findings are
              updated when you remediate them or when the finding code location changes. '
        vulnerability:
          $ref: '#/components/schemas/Finding_vulnerability'
      type: object
    FindingsMetricList:
      items:
        $ref: '#/components/schemas/AccountFindingsMetric'
      type: array
    GetAccountConfigurationRequest:
      properties: {}
      title: GetAccountConfigurationRequest
      type: object
    GetFindingsRequestMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: "^[\\S]+$"
      type: string
    GetFindingsRequest:
      properties: {}
      title: GetFindingsRequest
      type: object
    GetMetricsSummaryRequest:
      properties: {}
      title: GetMetricsSummaryRequest
      type: object
    MetricsSummary:
      description: Information about summary metrics in an account.
      properties:
        categoriesWithMostFindings:
          allOf:
          - $ref: '#/components/schemas/CategoriesWithMostFindings'
          - description: A list of <code>CategoryWithFindingNum</code> objects for
              the top 5 finding categories with the most open findings in an account.
        date:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date from which the metrics summary information was retrieved.
        openFindings:
          $ref: '#/components/schemas/MetricsSummary_openFindings'
        scansWithMostOpenCriticalFindings:
          allOf:
          - $ref: '#/components/schemas/ScansWithMostOpenCriticalFindings'
          - description: A list of <code>ScanNameWithFindingNum</code> objects for
              the top 3 scans with the most number of open findings in an account.
        scansWithMostOpenFindings:
          allOf:
          - $ref: '#/components/schemas/ScansWithMostOpenFindings'
          - description: A list of <code>ScanNameWithFindingNum</code> objects for
              the top 3 scans with the most number of open critical findings in an
              account.
      type: object
    GetScanRequest:
      properties: {}
      title: GetScanRequest
      type: object
    Long:
      type: integer
    HeaderKey:
      minLength: 1
      type: string
    HeaderValue:
      minLength: 1
      type: string
    ListFindingsMetricsRequestMaxResultsInteger:
      maximum: 1000
      minimum: 1
      type: integer
    ListFindingsMetricsRequest:
      properties: {}
      title: ListFindingsMetricsRequest
      type: object
    ListScansRequestMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    ListScansRequest:
      properties: {}
      title: ListScansRequest
      type: object
    ScanSummaries:
      items:
        $ref: '#/components/schemas/ScanSummary'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    ScansWithMostOpenCriticalFindings:
      items:
        $ref: '#/components/schemas/ScanNameWithFindingNum'
      maxItems: 3
      minItems: 0
      type: array
    ScansWithMostOpenFindings:
      items:
        $ref: '#/components/schemas/ScanNameWithFindingNum'
      maxItems: 3
      minItems: 0
      type: array
    Recommendation:
      description: Information about the recommended course of action to remediate
        a finding.
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The recommended course of action to remediate the finding.
        url:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The URL address to the recommendation for remediating the
              finding. '
      type: object
    ReferenceUrls:
      items:
        $ref: '#/components/schemas/String'
      type: array
    RelatedVulnerabilities:
      items:
        $ref: '#/components/schemas/String'
      type: array
    SuggestedFixes:
      items:
        $ref: '#/components/schemas/SuggestedFix'
      type: array
    ScanNameWithFindingNum:
      description: Information about a scan with open findings.
      properties:
        findingNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of open findings generated by a scan.
        scanName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the scan.
      type: object
    ScanSummary:
      description: 'Information about a scan. '
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The time when the scan was created. '
        runId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: 'The identifier for the scan run. '
        scanName:
          allOf:
          - $ref: '#/components/schemas/ScanName'
          - description: 'The name of the scan. '
        scanNameArn:
          allOf:
          - $ref: '#/components/schemas/ScanNameArn'
          - description: The ARN for the scan name.
        scanState:
          allOf:
          - $ref: '#/components/schemas/ScanState'
          - description: "The state of the scan. A scan can be <code>In Progress</code>,\
              \ <code>Complete</code>, or <code>Failed</code>. "
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the scan was last updated. A scan is updated when
              it is re-run.
      required:
      - createdAt
      - runId
      - scanName
      - scanState
      type: object
    SuggestedFix:
      description: Information about the suggested code fix to remediate a finding.
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The suggested code to add to your file. '
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'A description of the suggested code fix and why it is being
              suggested. '
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>An array of key-value pairs used to tag an existing scan.\
              \ A tag is a custom attribute label with two parts:</p> <ul> <li> <p>A\
              \ tag key. For example, <code>CostCenter</code>, <code>Environment</code>,\
              \ or <code>Secret</code>. Tag keys are case sensitive.</p> </li> <li>\
              \ <p>An optional tag value field. For example, <code>111122223333</code>,\
              \ <code>Production</code>, or a team name. Omitting the tag value is\
              \ the same as using an empty string. Tag values are case sensitive.</p>\
              \ </li> </ul>"
      required:
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateAccountConfigurationRequest:
      example:
        encryptionConfig:
          kmsKeyArn: ""
      properties:
        encryptionConfig:
          $ref: '#/components/schemas/UpdateAccountConfigurationRequest_encryptionConfig'
      required:
      - encryptionConfig
      title: UpdateAccountConfigurationRequest
      type: object
    BatchGetFindings_request:
      properties:
        findingIdentifiers:
          description: A list of finding identifiers. Each identifier consists of
            a <code>scanName</code> and a <code>findingId</code>. You retrieve the
            <code>findingId</code> when you call <code>GetFindings</code>.
          items:
            $ref: '#/components/schemas/FindingIdentifier'
          maxItems: 25
          minItems: 1
          type: array
      required:
      - findingIdentifiers
      type: object
    CreateScan_request_resourceId:
      description: The identifier for a resource object that contains resources where
        a finding was detected.
      properties:
        codeArtifactId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The identifier for the code file uploaded to the resource
              where a finding was detected.
      type: object
    CreateScan_request:
      properties:
        analysisType:
          description: "The type of analysis you want CodeGuru Security to perform\
            \ in the scan, either <code>Security</code> or <code>All</code>. The <code>Security</code>\
            \ type only generates findings related to security. The <code>All</code>\
            \ type generates both security findings and quality findings. Defaults\
            \ to <code>Security</code> type if missing."
          enum:
          - Security
          - All
          type: string
        clientToken:
          description: The idempotency token for the request. Amazon CodeGuru Security
            uses this value to prevent the accidental creation of duplicate scans
            if there are failures and retries.
          maxLength: 64
          minLength: 1
          pattern: "^[\\S]+$"
          type: string
        resourceId:
          $ref: '#/components/schemas/CreateScan_request_resourceId'
        scanName:
          description: "The unique name that CodeGuru Security uses to track revisions\
            \ across multiple scans of the same resource. Only allowed for a <code>STANDARD</code>\
            \ scan type. If not specified, it will be auto generated. "
          maxLength: 140
          minLength: 1
          pattern: "^[a-zA-Z0-9-_$:.]*$"
          type: string
        scanType:
          description: "<p>The type of scan, either <code>Standard</code> or <code>Express</code>.\
            \ Defaults to <code>Standard</code> type if missing.</p> <p> <code>Express</code>\
            \ scans run on limited resources and use a limited set of detectors to\
            \ analyze your code in near-real time. <code>Standard</code> scans have\
            \ standard resource limits and use the full set of detectors to analyze\
            \ your code.</p>"
          enum:
          - Standard
          - Express
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "<p>An array of key-value pairs used to tag a scan. A tag is\
            \ a custom attribute label with two parts:</p> <ul> <li> <p>A tag key.\
            \ For example, <code>CostCenter</code>, <code>Environment</code>, or <code>Secret</code>.\
            \ Tag keys are case sensitive.</p> </li> <li> <p>An optional tag value\
            \ field. For example, <code>111122223333</code>, <code>Production</code>,\
            \ or a team name. Omitting the tag value is the same as using an empty\
            \ string. Tag values are case sensitive.</p> </li> </ul>"
          maxProperties: 200
          minProperties: 0
          type: object
      required:
      - resourceId
      - scanName
      type: object
    CreateUploadUrl_request:
      properties:
        scanName:
          description: The name of the scan that will use the uploaded resource. CodeGuru
            Security uses the unique scan name to track revisions across multiple
            scans of the same resource. Use this <code>scanName</code> when you call
            <code>CreateScan</code> on the code resource you upload to this URL.
          maxLength: 140
          minLength: 1
          pattern: "^[a-zA-Z0-9-_$:.]*$"
          type: string
      required:
      - scanName
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "<p>An array of key-value pairs used to tag an existing scan.\
            \ A tag is a custom attribute label with two parts:</p> <ul> <li> <p>A\
            \ tag key. For example, <code>CostCenter</code>, <code>Environment</code>,\
            \ or <code>Secret</code>. Tag keys are case sensitive.</p> </li> <li>\
            \ <p>An optional tag value field. For example, <code>111122223333</code>,\
            \ <code>Production</code>, or a team name. Omitting the tag value is the\
            \ same as using an empty string. Tag values are case sensitive.</p> </li>\
            \ </ul>"
          maxProperties: 200
          minProperties: 0
          type: object
      required:
      - tags
      type: object
    UpdateAccountConfiguration_request_encryptionConfig:
      description: Information about account-level configuration.
      properties:
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          - description: The KMS key ARN to use for encryption. This must be provided
              as a header when uploading your code resource.
      type: object
    UpdateAccountConfiguration_request:
      properties:
        encryptionConfig:
          $ref: '#/components/schemas/UpdateAccountConfiguration_request_encryptionConfig'
      required:
      - encryptionConfig
      type: object
    CreateScanResponse_resourceId:
      allOf:
      - $ref: '#/components/schemas/ResourceId'
      - description: The identifier for the resource object that contains resources
          that were scanned.
      example:
        codeArtifactId: ""
    GetAccountConfigurationResponse_encryptionConfig:
      allOf:
      - $ref: '#/components/schemas/EncryptionConfig'
      - description: "An <code>EncryptionConfig</code> object that contains the KMS\
          \ key ARN to use for encryption. By default, CodeGuru Security uses an AWS-managed\
          \ key for encryption. To specify your own key, call <code>UpdateAccountConfiguration</code>."
      example:
        kmsKeyArn: ""
    GetMetricsSummaryResponse_metricsSummary:
      allOf:
      - $ref: '#/components/schemas/MetricsSummary'
      - description: The summary metrics from the specified date.
      example:
        date: ""
        scansWithMostOpenCriticalFindings: ""
        scansWithMostOpenFindings: ""
        categoriesWithMostFindings: ""
        openFindings:
          high: ""
          critical: ""
          low: ""
          medium: ""
          info: ""
    UpdateAccountConfigurationResponse_encryptionConfig:
      allOf:
      - $ref: '#/components/schemas/EncryptionConfig'
      - description: An <code>EncryptionConfig</code> object that contains the KMS
          key ARN to use for encryption.
      example:
        kmsKeyArn: ""
    AccountFindingsMetric_closedFindings:
      allOf:
      - $ref: '#/components/schemas/FindingMetricsValuePerSeverity'
      - description: The number of closed findings of each severity in an account
          on the specified date.
    AccountFindingsMetric_meanTimeToClose:
      allOf:
      - $ref: '#/components/schemas/FindingMetricsValuePerSeverity'
      - description: The average time it takes to close findings of each severity
          in days.
    AccountFindingsMetric_newFindings:
      allOf:
      - $ref: '#/components/schemas/FindingMetricsValuePerSeverity'
      - description: The number of new findings of each severity in account on the
          specified date.
    AccountFindingsMetric_openFindings:
      allOf:
      - $ref: '#/components/schemas/FindingMetricsValuePerSeverity'
      - description: The number of open findings of each severity in an account as
          of the specified date.
    CreateScanRequest_resourceId:
      allOf:
      - $ref: '#/components/schemas/ResourceId'
      - description: The identifier for an input resource used to create a scan.
      example:
        codeArtifactId: ""
    Remediation_recommendation:
      allOf:
      - $ref: '#/components/schemas/Recommendation'
      - description: An object that contains information about the recommended course
          of action to remediate a finding.
    Vulnerability_filePath:
      allOf:
      - $ref: '#/components/schemas/FilePath'
      - description: ' An object that describes the location of the detected security
          vulnerability in your code.'
    Finding_remediation:
      allOf:
      - $ref: '#/components/schemas/Remediation'
      - description: An object that contains the details about how to remediate a
          finding.
    Finding_resource:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - description: The resource where Amazon CodeGuru Security detected a finding.
    Finding_vulnerability:
      allOf:
      - $ref: '#/components/schemas/Vulnerability'
      - description: An object that describes the detected security vulnerability.
    MetricsSummary_openFindings:
      allOf:
      - $ref: '#/components/schemas/FindingMetricsValuePerSeverity'
      - description: The number of open findings of each severity in an account.
      example:
        high: ""
        critical: ""
        low: ""
        medium: ""
        info: ""
    UpdateAccountConfigurationRequest_encryptionConfig:
      allOf:
      - $ref: '#/components/schemas/EncryptionConfig'
      - description: The KMS key ARN you want to use for encryption. Defaults to service-side
          encryption if missing.
      example:
        kmsKeyArn: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

