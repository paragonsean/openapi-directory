/**
 * Amazon CodeGuru Security
 * <note> <p>Amazon CodeGuru Security is in preview release and is subject to change.</p> </note> <p>This section provides documentation for the Amazon CodeGuru Security API operations. CodeGuru Security is a service that uses program analysis and machine learning to detect security policy violations and vulnerabilities, and recommends ways to address these security risks.</p> <p>By proactively detecting and providing recommendations for addressing security risks, CodeGuru Security improves the overall security of your application code. For more information about CodeGuru Security, see the <a href=\"https://docs.aws.amazon.com/codeguru/latest/security-ug/what-is-codeguru-security.html\">Amazon CodeGuru Security User Guide</a>. </p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFinding.h
 *
 * Information about a finding that was detected in your code.
 */

#ifndef OAIFinding_H
#define OAIFinding_H

#include <QJsonObject>

#include "OAIFinding_remediation.h"
#include "OAIFinding_resource.h"
#include "OAIFinding_vulnerability.h"
#include "OAISeverity.h"
#include "OAIStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFinding_remediation;
class OAIFinding_resource;
class OAIFinding_vulnerability;

class OAIFinding : public OAIObject {
public:
    OAIFinding();
    OAIFinding(QString json);
    ~OAIFinding() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDetectorId() const;
    void setDetectorId(const QString &detector_id);
    bool is_detector_id_Set() const;
    bool is_detector_id_Valid() const;

    QString getDetectorName() const;
    void setDetectorName(const QString &detector_name);
    bool is_detector_name_Set() const;
    bool is_detector_name_Valid() const;

    QList getDetectorTags() const;
    void setDetectorTags(const QList &detector_tags);
    bool is_detector_tags_Set() const;
    bool is_detector_tags_Valid() const;

    QString getGeneratorId() const;
    void setGeneratorId(const QString &generator_id);
    bool is_generator_id_Set() const;
    bool is_generator_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIFinding_remediation getRemediation() const;
    void setRemediation(const OAIFinding_remediation &remediation);
    bool is_remediation_Set() const;
    bool is_remediation_Valid() const;

    OAIFinding_resource getResource() const;
    void setResource(const OAIFinding_resource &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    QString getRuleId() const;
    void setRuleId(const QString &rule_id);
    bool is_rule_id_Set() const;
    bool is_rule_id_Valid() const;

    OAISeverity getSeverity() const;
    void setSeverity(const OAISeverity &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    OAIStatus getStatus() const;
    void setStatus(const OAIStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIFinding_vulnerability getVulnerability() const;
    void setVulnerability(const OAIFinding_vulnerability &vulnerability);
    bool is_vulnerability_Set() const;
    bool is_vulnerability_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_detector_id;
    bool m_detector_id_isSet;
    bool m_detector_id_isValid;

    QString m_detector_name;
    bool m_detector_name_isSet;
    bool m_detector_name_isValid;

    QList m_detector_tags;
    bool m_detector_tags_isSet;
    bool m_detector_tags_isValid;

    QString m_generator_id;
    bool m_generator_id_isSet;
    bool m_generator_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIFinding_remediation m_remediation;
    bool m_remediation_isSet;
    bool m_remediation_isValid;

    OAIFinding_resource m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    QString m_rule_id;
    bool m_rule_id_isSet;
    bool m_rule_id_isValid;

    OAISeverity m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    OAIStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIFinding_vulnerability m_vulnerability;
    bool m_vulnerability_isSet;
    bool m_vulnerability_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFinding)

#endif // OAIFinding_H
