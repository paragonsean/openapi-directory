/**
 * Amazon CodeGuru Security
 * <note> <p>Amazon CodeGuru Security is in preview release and is subject to change.</p> </note> <p>This section provides documentation for the Amazon CodeGuru Security API operations. CodeGuru Security is a service that uses program analysis and machine learning to detect security policy violations and vulnerabilities, and recommends ways to address these security risks.</p> <p>By proactively detecting and providing recommendations for addressing security risks, CodeGuru Security improves the overall security of your application code. For more information about CodeGuru Security, see the <a href=\"https://docs.aws.amazon.com/codeguru/latest/security-ug/what-is-codeguru-security.html\">Amazon CodeGuru Security User Guide</a>. </p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFinding_vulnerability.h
 *
 * 
 */

#ifndef OAIFinding_vulnerability_H
#define OAIFinding_vulnerability_H

#include <QJsonObject>

#include "OAIVulnerability_filePath.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVulnerability_filePath;

class OAIFinding_vulnerability : public OAIObject {
public:
    OAIFinding_vulnerability();
    OAIFinding_vulnerability(QString json);
    ~OAIFinding_vulnerability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVulnerability_filePath getFilePath() const;
    void setFilePath(const OAIVulnerability_filePath &file_path);
    bool is_file_path_Set() const;
    bool is_file_path_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getItemCount() const;
    void setItemCount(const qint32 &item_count);
    bool is_item_count_Set() const;
    bool is_item_count_Valid() const;

    QList getReferenceUrls() const;
    void setReferenceUrls(const QList &reference_urls);
    bool is_reference_urls_Set() const;
    bool is_reference_urls_Valid() const;

    QList getRelatedVulnerabilities() const;
    void setRelatedVulnerabilities(const QList &related_vulnerabilities);
    bool is_related_vulnerabilities_Set() const;
    bool is_related_vulnerabilities_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVulnerability_filePath m_file_path;
    bool m_file_path_isSet;
    bool m_file_path_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_item_count;
    bool m_item_count_isSet;
    bool m_item_count_isValid;

    QList m_reference_urls;
    bool m_reference_urls_isSet;
    bool m_reference_urls_isValid;

    QList m_related_vulnerabilities;
    bool m_related_vulnerabilities_isSet;
    bool m_related_vulnerabilities_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFinding_vulnerability)

#endif // OAIFinding_vulnerability_H
