/**
 * Amazon CodeGuru Security
 * <note> <p>Amazon CodeGuru Security is in preview release and is subject to change.</p> </note> <p>This section provides documentation for the Amazon CodeGuru Security API operations. CodeGuru Security is a service that uses program analysis and machine learning to detect security policy violations and vulnerabilities, and recommends ways to address these security risks.</p> <p>By proactively detecting and providing recommendations for addressing security risks, CodeGuru Security improves the overall security of your application code. For more information about CodeGuru Security, see the <a href=\"https://docs.aws.amazon.com/codeguru/latest/security-ug/what-is-codeguru-security.html\">Amazon CodeGuru Security User Guide</a>. </p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccountFindingsMetric.h
 *
 * A summary of findings metrics in an account.
 */

#ifndef OAIAccountFindingsMetric_H
#define OAIAccountFindingsMetric_H

#include <QJsonObject>

#include "OAIAccountFindingsMetric_closedFindings.h"
#include "OAIAccountFindingsMetric_meanTimeToClose.h"
#include "OAIAccountFindingsMetric_newFindings.h"
#include "OAIAccountFindingsMetric_openFindings.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccountFindingsMetric_closedFindings;
class OAIAccountFindingsMetric_meanTimeToClose;
class OAIAccountFindingsMetric_newFindings;
class OAIAccountFindingsMetric_openFindings;

class OAIAccountFindingsMetric : public OAIObject {
public:
    OAIAccountFindingsMetric();
    OAIAccountFindingsMetric(QString json);
    ~OAIAccountFindingsMetric() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccountFindingsMetric_closedFindings getClosedFindings() const;
    void setClosedFindings(const OAIAccountFindingsMetric_closedFindings &closed_findings);
    bool is_closed_findings_Set() const;
    bool is_closed_findings_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    OAIAccountFindingsMetric_meanTimeToClose getMeanTimeToClose() const;
    void setMeanTimeToClose(const OAIAccountFindingsMetric_meanTimeToClose &mean_time_to_close);
    bool is_mean_time_to_close_Set() const;
    bool is_mean_time_to_close_Valid() const;

    OAIAccountFindingsMetric_newFindings getNewFindings() const;
    void setNewFindings(const OAIAccountFindingsMetric_newFindings &new_findings);
    bool is_new_findings_Set() const;
    bool is_new_findings_Valid() const;

    OAIAccountFindingsMetric_openFindings getOpenFindings() const;
    void setOpenFindings(const OAIAccountFindingsMetric_openFindings &open_findings);
    bool is_open_findings_Set() const;
    bool is_open_findings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccountFindingsMetric_closedFindings m_closed_findings;
    bool m_closed_findings_isSet;
    bool m_closed_findings_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    OAIAccountFindingsMetric_meanTimeToClose m_mean_time_to_close;
    bool m_mean_time_to_close_isSet;
    bool m_mean_time_to_close_isValid;

    OAIAccountFindingsMetric_newFindings m_new_findings;
    bool m_new_findings_isSet;
    bool m_new_findings_isValid;

    OAIAccountFindingsMetric_openFindings m_open_findings;
    bool m_open_findings_isSet;
    bool m_open_findings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccountFindingsMetric)

#endif // OAIAccountFindingsMetric_H
