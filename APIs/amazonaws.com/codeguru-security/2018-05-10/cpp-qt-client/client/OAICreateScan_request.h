/**
 * Amazon CodeGuru Security
 * <note> <p>Amazon CodeGuru Security is in preview release and is subject to change.</p> </note> <p>This section provides documentation for the Amazon CodeGuru Security API operations. CodeGuru Security is a service that uses program analysis and machine learning to detect security policy violations and vulnerabilities, and recommends ways to address these security risks.</p> <p>By proactively detecting and providing recommendations for addressing security risks, CodeGuru Security improves the overall security of your application code. For more information about CodeGuru Security, see the <a href=\"https://docs.aws.amazon.com/codeguru/latest/security-ug/what-is-codeguru-security.html\">Amazon CodeGuru Security User Guide</a>. </p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateScan_request.h
 *
 * 
 */

#ifndef OAICreateScan_request_H
#define OAICreateScan_request_H

#include <QJsonObject>

#include "OAICreateScan_request_resourceId.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateScan_request_resourceId;

class OAICreateScan_request : public OAIObject {
public:
    OAICreateScan_request();
    OAICreateScan_request(QString json);
    ~OAICreateScan_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnalysisType() const;
    void setAnalysisType(const QString &analysis_type);
    bool is_analysis_type_Set() const;
    bool is_analysis_type_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    OAICreateScan_request_resourceId getResourceId() const;
    void setResourceId(const OAICreateScan_request_resourceId &resource_id);
    bool is_resource_id_Set() const;
    bool is_resource_id_Valid() const;

    QString getScanName() const;
    void setScanName(const QString &scan_name);
    bool is_scan_name_Set() const;
    bool is_scan_name_Valid() const;

    QString getScanType() const;
    void setScanType(const QString &scan_type);
    bool is_scan_type_Set() const;
    bool is_scan_type_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_analysis_type;
    bool m_analysis_type_isSet;
    bool m_analysis_type_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    OAICreateScan_request_resourceId m_resource_id;
    bool m_resource_id_isSet;
    bool m_resource_id_isValid;

    QString m_scan_name;
    bool m_scan_name_isSet;
    bool m_scan_name_isValid;

    QString m_scan_type;
    bool m_scan_type_isSet;
    bool m_scan_type_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateScan_request)

#endif // OAICreateScan_request_H
