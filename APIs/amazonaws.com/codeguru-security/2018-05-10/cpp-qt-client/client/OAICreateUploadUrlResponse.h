/**
 * Amazon CodeGuru Security
 * <note> <p>Amazon CodeGuru Security is in preview release and is subject to change.</p> </note> <p>This section provides documentation for the Amazon CodeGuru Security API operations. CodeGuru Security is a service that uses program analysis and machine learning to detect security policy violations and vulnerabilities, and recommends ways to address these security risks.</p> <p>By proactively detecting and providing recommendations for addressing security risks, CodeGuru Security improves the overall security of your application code. For more information about CodeGuru Security, see the <a href=\"https://docs.aws.amazon.com/codeguru/latest/security-ug/what-is-codeguru-security.html\">Amazon CodeGuru Security User Guide</a>. </p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateUploadUrlResponse.h
 *
 * 
 */

#ifndef OAICreateUploadUrlResponse_H
#define OAICreateUploadUrlResponse_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateUploadUrlResponse : public OAIObject {
public:
    OAICreateUploadUrlResponse();
    OAICreateUploadUrlResponse(QString json);
    ~OAICreateUploadUrlResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCodeArtifactId() const;
    void setCodeArtifactId(const QString &code_artifact_id);
    bool is_code_artifact_id_Set() const;
    bool is_code_artifact_id_Valid() const;

    QMap getRequestHeaders() const;
    void setRequestHeaders(const QMap &request_headers);
    bool is_request_headers_Set() const;
    bool is_request_headers_Valid() const;

    QString getS3Url() const;
    void setS3Url(const QString &s3_url);
    bool is_s3_url_Set() const;
    bool is_s3_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_code_artifact_id;
    bool m_code_artifact_id_isSet;
    bool m_code_artifact_id_isValid;

    QMap m_request_headers;
    bool m_request_headers_isSet;
    bool m_request_headers_isValid;

    QString m_s3_url;
    bool m_s3_url_isSet;
    bool m_s3_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateUploadUrlResponse)

#endif // OAICreateUploadUrlResponse_H
