/**
 * Amazon CodeGuru Security
 * <note> <p>Amazon CodeGuru Security is in preview release and is subject to change.</p> </note> <p>This section provides documentation for the Amazon CodeGuru Security API operations. CodeGuru Security is a service that uses program analysis and machine learning to detect security policy violations and vulnerabilities, and recommends ways to address these security risks.</p> <p>By proactively detecting and providing recommendations for addressing security risks, CodeGuru Security improves the overall security of your application code. For more information about CodeGuru Security, see the <a href=\"https://docs.aws.amazon.com/codeguru/latest/security-ug/what-is-codeguru-security.html\">Amazon CodeGuru Security User Guide</a>. </p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetScanResponse.h
 *
 * 
 */

#ifndef OAIGetScanResponse_H
#define OAIGetScanResponse_H

#include <QJsonObject>

#include "OAIAnalysisType.h"
#include "OAIScanState.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetScanResponse : public OAIObject {
public:
    OAIGetScanResponse();
    OAIGetScanResponse(QString json);
    ~OAIGetScanResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAnalysisType getAnalysisType() const;
    void setAnalysisType(const OAIAnalysisType &analysis_type);
    bool is_analysis_type_Set() const;
    bool is_analysis_type_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    qint32 getNumberOfRevisions() const;
    void setNumberOfRevisions(const qint32 &number_of_revisions);
    bool is_number_of_revisions_Set() const;
    bool is_number_of_revisions_Valid() const;

    QString getRunId() const;
    void setRunId(const QString &run_id);
    bool is_run_id_Set() const;
    bool is_run_id_Valid() const;

    QString getScanName() const;
    void setScanName(const QString &scan_name);
    bool is_scan_name_Set() const;
    bool is_scan_name_Valid() const;

    QString getScanNameArn() const;
    void setScanNameArn(const QString &scan_name_arn);
    bool is_scan_name_arn_Set() const;
    bool is_scan_name_arn_Valid() const;

    OAIScanState getScanState() const;
    void setScanState(const OAIScanState &scan_state);
    bool is_scan_state_Set() const;
    bool is_scan_state_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAnalysisType m_analysis_type;
    bool m_analysis_type_isSet;
    bool m_analysis_type_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    qint32 m_number_of_revisions;
    bool m_number_of_revisions_isSet;
    bool m_number_of_revisions_isValid;

    QString m_run_id;
    bool m_run_id_isSet;
    bool m_run_id_isValid;

    QString m_scan_name;
    bool m_scan_name_isSet;
    bool m_scan_name_isValid;

    QString m_scan_name_arn;
    bool m_scan_name_arn_isSet;
    bool m_scan_name_arn_isValid;

    OAIScanState m_scan_state;
    bool m_scan_state_isSet;
    bool m_scan_state_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetScanResponse)

#endif // OAIGetScanResponse_H
