/**
 * Amazon CodeGuru Security
 * <note> <p>Amazon CodeGuru Security is in preview release and is subject to change.</p> </note> <p>This section provides documentation for the Amazon CodeGuru Security API operations. CodeGuru Security is a service that uses program analysis and machine learning to detect security policy violations and vulnerabilities, and recommends ways to address these security risks.</p> <p>By proactively detecting and providing recommendations for addressing security risks, CodeGuru Security improves the overall security of your application code. For more information about CodeGuru Security, see the <a href=\"https://docs.aws.amazon.com/codeguru/latest/security-ug/what-is-codeguru-security.html\">Amazon CodeGuru Security User Guide</a>. </p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFilePath.h
 *
 * Information about the location of security vulnerabilities that Amazon CodeGuru Security detected in your code.
 */

#ifndef OAIFilePath_H
#define OAIFilePath_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFilePath : public OAIObject {
public:
    OAIFilePath();
    OAIFilePath(QString json);
    ~OAIFilePath() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getCodeSnippet() const;
    void setCodeSnippet(const QList &code_snippet);
    bool is_code_snippet_Set() const;
    bool is_code_snippet_Valid() const;

    qint32 getEndLine() const;
    void setEndLine(const qint32 &end_line);
    bool is_end_line_Set() const;
    bool is_end_line_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    qint32 getStartLine() const;
    void setStartLine(const qint32 &start_line);
    bool is_start_line_Set() const;
    bool is_start_line_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_code_snippet;
    bool m_code_snippet_isSet;
    bool m_code_snippet_isValid;

    qint32 m_end_line;
    bool m_end_line_isSet;
    bool m_end_line_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    qint32 m_start_line;
    bool m_start_line_isSet;
    bool m_start_line_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFilePath)

#endif // OAIFilePath_H
