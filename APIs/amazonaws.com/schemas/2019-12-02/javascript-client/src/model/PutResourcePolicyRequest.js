/**
 * Schemas
 * Amazon EventBridge Schema Registry
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PutResourcePolicyRequest model module.
 * @module model/PutResourcePolicyRequest
 * @version 2019-12-02
 */
class PutResourcePolicyRequest {
    /**
     * Constructs a new <code>PutResourcePolicyRequest</code>.
     * @alias module:model/PutResourcePolicyRequest
     * @param policy {String} The resource-based policy.
     */
    constructor(policy) { 
        
        PutResourcePolicyRequest.initialize(this, policy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, policy) { 
        obj['Policy'] = policy;
    }

    /**
     * Constructs a <code>PutResourcePolicyRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutResourcePolicyRequest} obj Optional instance to populate.
     * @return {module:model/PutResourcePolicyRequest} The populated <code>PutResourcePolicyRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutResourcePolicyRequest();

            if (data.hasOwnProperty('Policy')) {
                obj['Policy'] = ApiClient.convertToType(data['Policy'], 'String');
            }
            if (data.hasOwnProperty('RevisionId')) {
                obj['RevisionId'] = ApiClient.convertToType(data['RevisionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutResourcePolicyRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutResourcePolicyRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PutResourcePolicyRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Policy'] && !(typeof data['Policy'] === 'string' || data['Policy'] instanceof String)) {
            throw new Error("Expected the field `Policy` to be a primitive type in the JSON string but got " + data['Policy']);
        }
        // ensure the json data is a string
        if (data['RevisionId'] && !(typeof data['RevisionId'] === 'string' || data['RevisionId'] instanceof String)) {
            throw new Error("Expected the field `RevisionId` to be a primitive type in the JSON string but got " + data['RevisionId']);
        }

        return true;
    }


}

PutResourcePolicyRequest.RequiredProperties = ["Policy"];

/**
 * The resource-based policy.
 * @member {String} Policy
 */
PutResourcePolicyRequest.prototype['Policy'] = undefined;

/**
 * The revision ID of the policy.
 * @member {String} RevisionId
 */
PutResourcePolicyRequest.prototype['RevisionId'] = undefined;






export default PutResourcePolicyRequest;

