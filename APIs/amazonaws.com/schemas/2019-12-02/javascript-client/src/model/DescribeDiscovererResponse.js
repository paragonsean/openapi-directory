/**
 * Schemas
 * Amazon EventBridge Schema Registry
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DiscovererState from './DiscovererState';

/**
 * The DescribeDiscovererResponse model module.
 * @module model/DescribeDiscovererResponse
 * @version 2019-12-02
 */
class DescribeDiscovererResponse {
    /**
     * Constructs a new <code>DescribeDiscovererResponse</code>.
     * @alias module:model/DescribeDiscovererResponse
     */
    constructor() { 
        
        DescribeDiscovererResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeDiscovererResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeDiscovererResponse} obj Optional instance to populate.
     * @return {module:model/DescribeDiscovererResponse} The populated <code>DescribeDiscovererResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeDiscovererResponse();

            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('DiscovererArn')) {
                obj['DiscovererArn'] = ApiClient.convertToType(data['DiscovererArn'], 'String');
            }
            if (data.hasOwnProperty('DiscovererId')) {
                obj['DiscovererId'] = ApiClient.convertToType(data['DiscovererId'], 'String');
            }
            if (data.hasOwnProperty('SourceArn')) {
                obj['SourceArn'] = ApiClient.convertToType(data['SourceArn'], 'String');
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], DiscovererState);
            }
            if (data.hasOwnProperty('CrossAccount')) {
                obj['CrossAccount'] = ApiClient.convertToType(data['CrossAccount'], 'Boolean');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeDiscovererResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeDiscovererResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `DiscovererArn`
        if (data['DiscovererArn']) { // data not null
          String.validateJSON(data['DiscovererArn']);
        }
        // validate the optional field `DiscovererId`
        if (data['DiscovererId']) { // data not null
          String.validateJSON(data['DiscovererId']);
        }
        // validate the optional field `SourceArn`
        if (data['SourceArn']) { // data not null
          String.validateJSON(data['SourceArn']);
        }
        // validate the optional field `State`
        if (data['State']) { // data not null
          DiscovererState.validateJSON(data['State']);
        }
        // validate the optional field `CrossAccount`
        if (data['CrossAccount']) { // data not null
          Boolean.validateJSON(data['CrossAccount']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Object.validateJSON(data['Tags']);
        }

        return true;
    }


}



/**
 * @member {String} Description
 */
DescribeDiscovererResponse.prototype['Description'] = undefined;

/**
 * @member {String} DiscovererArn
 */
DescribeDiscovererResponse.prototype['DiscovererArn'] = undefined;

/**
 * @member {String} DiscovererId
 */
DescribeDiscovererResponse.prototype['DiscovererId'] = undefined;

/**
 * @member {String} SourceArn
 */
DescribeDiscovererResponse.prototype['SourceArn'] = undefined;

/**
 * @member {module:model/DiscovererState} State
 */
DescribeDiscovererResponse.prototype['State'] = undefined;

/**
 * @member {Boolean} CrossAccount
 */
DescribeDiscovererResponse.prototype['CrossAccount'] = undefined;

/**
 * @member {Object} Tags
 */
DescribeDiscovererResponse.prototype['Tags'] = undefined;






export default DescribeDiscovererResponse;

