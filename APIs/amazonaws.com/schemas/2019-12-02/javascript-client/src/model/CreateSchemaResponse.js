/**
 * Schemas
 * Amazon EventBridge Schema Registry
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateSchemaResponse model module.
 * @module model/CreateSchemaResponse
 * @version 2019-12-02
 */
class CreateSchemaResponse {
    /**
     * Constructs a new <code>CreateSchemaResponse</code>.
     * @alias module:model/CreateSchemaResponse
     */
    constructor() { 
        
        CreateSchemaResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateSchemaResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateSchemaResponse} obj Optional instance to populate.
     * @return {module:model/CreateSchemaResponse} The populated <code>CreateSchemaResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateSchemaResponse();

            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('LastModified')) {
                obj['LastModified'] = ApiClient.convertToType(data['LastModified'], 'Date');
            }
            if (data.hasOwnProperty('SchemaArn')) {
                obj['SchemaArn'] = ApiClient.convertToType(data['SchemaArn'], 'String');
            }
            if (data.hasOwnProperty('SchemaName')) {
                obj['SchemaName'] = ApiClient.convertToType(data['SchemaName'], 'String');
            }
            if (data.hasOwnProperty('SchemaVersion')) {
                obj['SchemaVersion'] = ApiClient.convertToType(data['SchemaVersion'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Object);
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
            if (data.hasOwnProperty('VersionCreatedDate')) {
                obj['VersionCreatedDate'] = ApiClient.convertToType(data['VersionCreatedDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateSchemaResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateSchemaResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `LastModified`
        if (data['LastModified']) { // data not null
          Date.validateJSON(data['LastModified']);
        }
        // validate the optional field `SchemaArn`
        if (data['SchemaArn']) { // data not null
          String.validateJSON(data['SchemaArn']);
        }
        // validate the optional field `SchemaName`
        if (data['SchemaName']) { // data not null
          String.validateJSON(data['SchemaName']);
        }
        // validate the optional field `SchemaVersion`
        if (data['SchemaVersion']) { // data not null
          String.validateJSON(data['SchemaVersion']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Object.validateJSON(data['Tags']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          String.validateJSON(data['Type']);
        }
        // validate the optional field `VersionCreatedDate`
        if (data['VersionCreatedDate']) { // data not null
          Date.validateJSON(data['VersionCreatedDate']);
        }

        return true;
    }


}



/**
 * @member {String} Description
 */
CreateSchemaResponse.prototype['Description'] = undefined;

/**
 * @member {Date} LastModified
 */
CreateSchemaResponse.prototype['LastModified'] = undefined;

/**
 * @member {String} SchemaArn
 */
CreateSchemaResponse.prototype['SchemaArn'] = undefined;

/**
 * @member {String} SchemaName
 */
CreateSchemaResponse.prototype['SchemaName'] = undefined;

/**
 * @member {String} SchemaVersion
 */
CreateSchemaResponse.prototype['SchemaVersion'] = undefined;

/**
 * @member {Object} Tags
 */
CreateSchemaResponse.prototype['Tags'] = undefined;

/**
 * @member {String} Type
 */
CreateSchemaResponse.prototype['Type'] = undefined;

/**
 * @member {Date} VersionCreatedDate
 */
CreateSchemaResponse.prototype['VersionCreatedDate'] = undefined;






export default CreateSchemaResponse;

