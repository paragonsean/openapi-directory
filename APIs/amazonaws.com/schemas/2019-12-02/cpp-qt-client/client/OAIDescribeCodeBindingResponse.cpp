/**
 * Schemas
 * Amazon EventBridge Schema Registry
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeCodeBindingResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeCodeBindingResponse::OAIDescribeCodeBindingResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeCodeBindingResponse::OAIDescribeCodeBindingResponse() {
    this->initializeModel();
}

OAIDescribeCodeBindingResponse::~OAIDescribeCodeBindingResponse() {}

void OAIDescribeCodeBindingResponse::initializeModel() {

    m_creation_date_isSet = false;
    m_creation_date_isValid = false;

    m_last_modified_isSet = false;
    m_last_modified_isValid = false;

    m_schema_version_isSet = false;
    m_schema_version_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIDescribeCodeBindingResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeCodeBindingResponse::fromJsonObject(QJsonObject json) {

    m_creation_date_isValid = ::OpenAPI::fromJsonValue(m_creation_date, json[QString("CreationDate")]);
    m_creation_date_isSet = !json[QString("CreationDate")].isNull() && m_creation_date_isValid;

    m_last_modified_isValid = ::OpenAPI::fromJsonValue(m_last_modified, json[QString("LastModified")]);
    m_last_modified_isSet = !json[QString("LastModified")].isNull() && m_last_modified_isValid;

    m_schema_version_isValid = ::OpenAPI::fromJsonValue(m_schema_version, json[QString("SchemaVersion")]);
    m_schema_version_isSet = !json[QString("SchemaVersion")].isNull() && m_schema_version_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIDescribeCodeBindingResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeCodeBindingResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_date_isSet) {
        obj.insert(QString("CreationDate"), ::OpenAPI::toJsonValue(m_creation_date));
    }
    if (m_last_modified_isSet) {
        obj.insert(QString("LastModified"), ::OpenAPI::toJsonValue(m_last_modified));
    }
    if (m_schema_version_isSet) {
        obj.insert(QString("SchemaVersion"), ::OpenAPI::toJsonValue(m_schema_version));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QDateTime OAIDescribeCodeBindingResponse::getCreationDate() const {
    return m_creation_date;
}
void OAIDescribeCodeBindingResponse::setCreationDate(const QDateTime &creation_date) {
    m_creation_date = creation_date;
    m_creation_date_isSet = true;
}

bool OAIDescribeCodeBindingResponse::is_creation_date_Set() const{
    return m_creation_date_isSet;
}

bool OAIDescribeCodeBindingResponse::is_creation_date_Valid() const{
    return m_creation_date_isValid;
}

QDateTime OAIDescribeCodeBindingResponse::getLastModified() const {
    return m_last_modified;
}
void OAIDescribeCodeBindingResponse::setLastModified(const QDateTime &last_modified) {
    m_last_modified = last_modified;
    m_last_modified_isSet = true;
}

bool OAIDescribeCodeBindingResponse::is_last_modified_Set() const{
    return m_last_modified_isSet;
}

bool OAIDescribeCodeBindingResponse::is_last_modified_Valid() const{
    return m_last_modified_isValid;
}

QString OAIDescribeCodeBindingResponse::getSchemaVersion() const {
    return m_schema_version;
}
void OAIDescribeCodeBindingResponse::setSchemaVersion(const QString &schema_version) {
    m_schema_version = schema_version;
    m_schema_version_isSet = true;
}

bool OAIDescribeCodeBindingResponse::is_schema_version_Set() const{
    return m_schema_version_isSet;
}

bool OAIDescribeCodeBindingResponse::is_schema_version_Valid() const{
    return m_schema_version_isValid;
}

OAICodeGenerationStatus OAIDescribeCodeBindingResponse::getStatus() const {
    return m_status;
}
void OAIDescribeCodeBindingResponse::setStatus(const OAICodeGenerationStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribeCodeBindingResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribeCodeBindingResponse::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIDescribeCodeBindingResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schema_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeCodeBindingResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
