/**
 * Schemas
 * Amazon EventBridge Schema Registry
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISchemaSummary.h
 *
 * A summary of schema details.
 */

#ifndef OAISchemaSummary_H
#define OAISchemaSummary_H

#include <QJsonObject>

#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISchemaSummary : public OAIObject {
public:
    OAISchemaSummary();
    OAISchemaSummary(QString json);
    ~OAISchemaSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getLastModified() const;
    void setLastModified(const QDateTime &last_modified);
    bool is_last_modified_Set() const;
    bool is_last_modified_Valid() const;

    QString getSchemaArn() const;
    void setSchemaArn(const QString &schema_arn);
    bool is_schema_arn_Set() const;
    bool is_schema_arn_Valid() const;

    QString getSchemaName() const;
    void setSchemaName(const QString &schema_name);
    bool is_schema_name_Set() const;
    bool is_schema_name_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    qint32 getVersionCount() const;
    void setVersionCount(const qint32 &version_count);
    bool is_version_count_Set() const;
    bool is_version_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_last_modified;
    bool m_last_modified_isSet;
    bool m_last_modified_isValid;

    QString m_schema_arn;
    bool m_schema_arn_isSet;
    bool m_schema_arn_isValid;

    QString m_schema_name;
    bool m_schema_name_isSet;
    bool m_schema_name_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    qint32 m_version_count;
    bool m_version_count_isSet;
    bool m_version_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISchemaSummary)

#endif // OAISchemaSummary_H
