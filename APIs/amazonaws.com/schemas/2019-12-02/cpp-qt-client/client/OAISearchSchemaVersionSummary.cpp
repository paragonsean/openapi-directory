/**
 * Schemas
 * Amazon EventBridge Schema Registry
 *
 * The version of the OpenAPI document: 2019-12-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchSchemaVersionSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchSchemaVersionSummary::OAISearchSchemaVersionSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchSchemaVersionSummary::OAISearchSchemaVersionSummary() {
    this->initializeModel();
}

OAISearchSchemaVersionSummary::~OAISearchSchemaVersionSummary() {}

void OAISearchSchemaVersionSummary::initializeModel() {

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_schema_version_isSet = false;
    m_schema_version_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAISearchSchemaVersionSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchSchemaVersionSummary::fromJsonObject(QJsonObject json) {

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("CreatedDate")]);
    m_created_date_isSet = !json[QString("CreatedDate")].isNull() && m_created_date_isValid;

    m_schema_version_isValid = ::OpenAPI::fromJsonValue(m_schema_version, json[QString("SchemaVersion")]);
    m_schema_version_isSet = !json[QString("SchemaVersion")].isNull() && m_schema_version_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;
}

QString OAISearchSchemaVersionSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchSchemaVersionSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_created_date_isSet) {
        obj.insert(QString("CreatedDate"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_schema_version_isSet) {
        obj.insert(QString("SchemaVersion"), ::OpenAPI::toJsonValue(m_schema_version));
    }
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QDateTime OAISearchSchemaVersionSummary::getCreatedDate() const {
    return m_created_date;
}
void OAISearchSchemaVersionSummary::setCreatedDate(const QDateTime &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAISearchSchemaVersionSummary::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAISearchSchemaVersionSummary::is_created_date_Valid() const{
    return m_created_date_isValid;
}

QString OAISearchSchemaVersionSummary::getSchemaVersion() const {
    return m_schema_version;
}
void OAISearchSchemaVersionSummary::setSchemaVersion(const QString &schema_version) {
    m_schema_version = schema_version;
    m_schema_version_isSet = true;
}

bool OAISearchSchemaVersionSummary::is_schema_version_Set() const{
    return m_schema_version_isSet;
}

bool OAISearchSchemaVersionSummary::is_schema_version_Valid() const{
    return m_schema_version_isValid;
}

OAIType OAISearchSchemaVersionSummary::getType() const {
    return m_type;
}
void OAISearchSchemaVersionSummary::setType(const OAIType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAISearchSchemaVersionSummary::is_type_Set() const{
    return m_type_isSet;
}

bool OAISearchSchemaVersionSummary::is_type_Valid() const{
    return m_type_isValid;
}

bool OAISearchSchemaVersionSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schema_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchSchemaVersionSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
