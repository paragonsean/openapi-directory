openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: Amazon EventBridge Schema Registry
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Schemas
  version: 2019-12-02
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: schemas
  x-aws-signingName: schemas
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/schemas-2019-12-02.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/schemas/
servers:
- description: The Schemas multi-region endpoint
  url: "http://schemas.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Schemas multi-region endpoint
  url: "https://schemas.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Schemas endpoint for China (Beijing) and China (Ningxia)
  url: "http://schemas.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Schemas endpoint for China (Beijing) and China (Ningxia)
  url: "https://schemas.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /tags/{resource-arn}:
    get:
      description: Get tags for resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource.
        explode: false
        in: path
        name: resource-arn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Add tags to a resource.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource.
        explode: false
        in: path
        name: resource-arn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resource-arn}#tagKeys:
    delete:
      description: Removes tags from a resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource.
        explode: false
        in: path
        name: resource-arn
        required: true
        schema:
          type: string
        style: simple
      - description: Keys of key-value pairs.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/__string'
          type: array
        style: form
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/discover:
    post:
      description: Get the discovered schema that was generated based on sampled events.
      operationId: get_discovered_schema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDiscoveredSchema_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDiscoveredSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/discoverers:
    get:
      description: List the discoverers.
      operationId: list_discoverers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Specifying this limits the results to only those discoverer IDs
          that start with the specified prefix.
        explode: true
        in: query
        name: discovererIdPrefix
        required: false
        schema:
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "The token that specifies the next page of results to return.\
          \ To request the first page, leave NextToken empty. The token will expire\
          \ in 24 hours, and cannot be shared with other accounts."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Specifying this limits the results to only those ARNs that start
          with the specified prefix.
        explode: true
        in: query
        name: sourceArnPrefix
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDiscoverersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a discoverer.
      operationId: create_discoverer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDiscoverer_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDiscovererResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/discoverers/id/{discovererId}:
    delete:
      description: Deletes a discoverer.
      operationId: delete_discoverer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the discoverer.
        explode: false
        in: path
        name: discovererId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Describes the discoverer.
      operationId: describe_discoverer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the discoverer.
        explode: false
        in: path
        name: discovererId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDiscovererResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates the discoverer
      operationId: update_discoverer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the discoverer.
        explode: false
        in: path
        name: discovererId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDiscoverer_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDiscovererResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/discoverers/id/{discovererId}/start:
    post:
      description: Starts the discoverer
      operationId: start_discoverer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the discoverer.
        explode: false
        in: path
        name: discovererId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDiscovererResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/discoverers/id/{discovererId}/stop:
    post:
      description: Stops the discoverer
      operationId: stop_discoverer
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the discoverer.
        explode: false
        in: path
        name: discovererId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopDiscovererResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/policy:
    delete:
      description: Delete the resource-based policy attached to the specified registry.
      operationId: delete_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: true
        in: query
        name: registryName
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves the resource-based policy attached to a given registry.
      operationId: get_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: true
        in: query
        name: registryName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: The name of the policy.
      operationId: put_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: true
        in: query
        name: registryName
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourcePolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourcePolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedException'
          description: PreconditionFailedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/registries:
    get:
      description: List the registries.
      operationId: list_registries
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "The token that specifies the next page of results to return.\
          \ To request the first page, leave NextToken empty. The token will expire\
          \ in 24 hours, and cannot be shared with other accounts."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Specifying this limits the results to only those registry names
          that start with the specified prefix.
        explode: true
        in: query
        name: registryNamePrefix
        required: false
        schema:
          type: string
        style: form
      - description: "Can be set to Local or AWS to limit responses to your custom\
          \ registries, or the ones provided by AWS."
        explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegistriesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/registries/name/{registryName}:
    delete:
      description: Deletes a Registry.
      operationId: delete_registry
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Describes the registry.
      operationId: describe_registry
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRegistryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a registry.
      operationId: create_registry
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRegistry_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRegistryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: Updates a registry.
      operationId: update_registry
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRegistry_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRegistryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/registries/name/{registryName}/schemas:
    get:
      description: List the schemas.
      operationId: list_schemas
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "The token that specifies the next page of results to return.\
          \ To request the first page, leave NextToken empty. The token will expire\
          \ in 24 hours, and cannot be shared with other accounts."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      - description: Specifying this limits the results to only those schema names
          that start with the specified prefix.
        explode: true
        in: query
        name: schemaNamePrefix
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchemasResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/registries/name/{registryName}/schemas/name/{schemaName}:
    delete:
      description: Delete a schema definition.
      operationId: delete_schema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the schema.
        explode: false
        in: path
        name: schemaName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieve the schema definition.
      operationId: describe_schema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the schema.
        explode: false
        in: path
        name: schemaName
        required: true
        schema:
          type: string
        style: simple
      - description: Specifying this limits the results to only this schema version.
        explode: true
        in: query
        name: schemaVersion
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: <p>Creates a schema definition.</p> <note><p>Inactive schemas will
        be deleted after two years.</p></note>
      operationId: create_schema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the schema.
        explode: false
        in: path
        name: schemaName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchema_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: <p>Updates the schema definition</p> <note><p>Inactive schemas
        will be deleted after two years.</p></note>
      operationId: update_schema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the schema.
        explode: false
        in: path
        name: schemaName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSchema_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /v1/registries/name/{registryName}/schemas/name/{schemaName}/export#type:
    get:
      description: ""
      operationId: export_schema
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the schema.
        explode: false
        in: path
        name: schemaName
        required: true
        schema:
          type: string
        style: simple
      - description: Specifying this limits the results to only this schema version.
        explode: true
        in: query
        name: schemaVersion
        required: false
        schema:
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportSchemaResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/registries/name/{registryName}/schemas/name/{schemaName}/language/{language}:
    get:
      description: Describe the code binding URI.
      operationId: describe_code_binding
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The language of the code binding.
        explode: false
        in: path
        name: language
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the schema.
        explode: false
        in: path
        name: schemaName
        required: true
        schema:
          type: string
        style: simple
      - description: Specifying this limits the results to only this schema version.
        explode: true
        in: query
        name: schemaVersion
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCodeBindingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Put code binding URI
      operationId: put_code_binding
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The language of the code binding.
        explode: false
        in: path
        name: language
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the schema.
        explode: false
        in: path
        name: schemaName
        required: true
        schema:
          type: string
        style: simple
      - description: Specifying this limits the results to only this schema version.
        explode: true
        in: query
        name: schemaVersion
        required: false
        schema:
          type: string
        style: form
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCodeBindingResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoneException'
          description: GoneException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/registries/name/{registryName}/schemas/name/{schemaName}/language/{language}/source:
    get:
      description: Get the code binding source URI.
      operationId: get_code_binding_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The language of the code binding.
        explode: false
        in: path
        name: language
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the schema.
        explode: false
        in: path
        name: schemaName
        required: true
        schema:
          type: string
        style: simple
      - description: Specifying this limits the results to only this schema version.
        explode: true
        in: query
        name: schemaVersion
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCodeBindingSourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/registries/name/{registryName}/schemas/name/{schemaName}/version/{schemaVersion}:
    delete:
      description: Delete the schema version definition
      operationId: delete_schema_version
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the schema.
        explode: false
        in: path
        name: schemaName
        required: true
        schema:
          type: string
        style: simple
      - description: The version number of the schema
        explode: false
        in: path
        name: schemaVersion
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/registries/name/{registryName}/schemas/name/{schemaName}/versions:
    get:
      description: Provides a list of the schema versions and related information.
      operationId: list_schema_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "The token that specifies the next page of results to return.\
          \ To request the first page, leave NextToken empty. The token will expire\
          \ in 24 hours, and cannot be shared with other accounts."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the schema.
        explode: false
        in: path
        name: schemaName
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchemaVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /v1/registries/name/{registryName}/schemas/search#keywords:
    get:
      description: Search the schemas
      operationId: search_schemas
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Specifying this limits the results to only schemas that include
          the provided keywords.
        explode: true
        in: query
        name: keywords
        required: true
        schema:
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "The token that specifies the next page of results to return.\
          \ To request the first page, leave NextToken empty. The token will expire\
          \ in 24 hours, and cannot be shared with other accounts."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The name of the registry.
        explode: false
        in: path
        name: registryName
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSchemasResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateDiscovererResponse:
      example:
        DiscovererArn: ""
        DiscovererId: ""
        CrossAccount: ""
        Description: ""
        SourceArn: ""
        State: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The description of the discoverer.
          title: Description
        DiscovererArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the discoverer.
          title: DiscovererArn
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the discoverer.
          title: DiscovererId
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the event bus.
          title: SourceArn
        State:
          allOf:
          - $ref: '#/components/schemas/DiscovererState'
          - description: The state of the discoverer.
          title: State
        CrossAccount:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: The Status if the discoverer will discover schemas from events
              sent from another account.
          title: CrossAccount
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Tags associated with the resource.
            xml:
              name: tags
          title: Tags
      title: CreateDiscovererResponse
      type: object
    __string:
      title: __string
      type: string
    BadRequestException: {}
    InternalServerErrorException: {}
    UnauthorizedException: {}
    ForbiddenException: {}
    ServiceUnavailableException: {}
    ConflictException: {}
    CreateRegistryResponse:
      example:
        Description: ""
        RegistryName: ""
        RegistryArn: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The description of the registry.
          title: Description
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the registry.
          title: RegistryArn
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the registry.
          title: RegistryName
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Tags associated with the registry.
            xml:
              name: tags
          title: Tags
      title: CreateRegistryResponse
      type: object
    CreateSchemaResponse:
      example:
        LastModified: ""
        Type: ""
        Description: ""
        SchemaVersion: ""
        VersionCreatedDate: ""
        SchemaArn: ""
        SchemaName: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The description of the schema.
          title: Description
        LastModified:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: The date and time that schema was modified.
          title: LastModified
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the schema.
          title: SchemaArn
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the schema.
          title: SchemaName
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The version number of the schema
          title: SchemaVersion
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
          title: Tags
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The type of the schema.
          title: Type
        VersionCreatedDate:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: The date the schema version was created.
          title: VersionCreatedDate
      title: CreateSchemaResponse
      type: object
    NotFoundException: {}
    DescribeCodeBindingResponse:
      example:
        LastModified: ""
        Status: ""
        CreationDate: ""
        SchemaVersion: ""
      properties:
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: The time and date that the code binding was created.
          title: CreationDate
        LastModified:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: The date and time that code bindings were modified.
          title: LastModified
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The version number of the schema.
          title: SchemaVersion
        Status:
          allOf:
          - $ref: '#/components/schemas/CodeGenerationStatus'
          - description: The current status of code binding generation.
          title: Status
      title: DescribeCodeBindingResponse
      type: object
    TooManyRequestsException: {}
    DescribeDiscovererResponse:
      example:
        DiscovererArn: ""
        DiscovererId: ""
        CrossAccount: ""
        Description: ""
        SourceArn: ""
        State: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The description of the discoverer.
          title: Description
        DiscovererArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the discoverer.
          title: DiscovererArn
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the discoverer.
          title: DiscovererId
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the event bus.
          title: SourceArn
        State:
          allOf:
          - $ref: '#/components/schemas/DiscovererState'
          - description: The state of the discoverer.
          title: State
        CrossAccount:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: The Status if the discoverer will discover schemas from events
              sent from another account.
          title: CrossAccount
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Tags associated with the resource.
            xml:
              name: tags
          title: Tags
      title: DescribeDiscovererResponse
      type: object
    DescribeRegistryResponse:
      example:
        Description: ""
        RegistryName: ""
        RegistryArn: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The description of the registry.
          title: Description
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the registry.
          title: RegistryArn
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the registry.
          title: RegistryName
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Tags associated with the registry.
            xml:
              name: tags
          title: Tags
      title: DescribeRegistryResponse
      type: object
    DescribeSchemaResponse:
      example:
        LastModified: ""
        Type: ""
        Description: ""
        SchemaVersion: ""
        Content: ""
        VersionCreatedDate: ""
        SchemaArn: ""
        SchemaName: ""
        Tags: ""
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The source of the schema definition.
          title: Content
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The description of the schema.
          title: Description
        LastModified:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: The date and time that schema was modified.
          title: LastModified
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the schema.
          title: SchemaArn
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the schema.
          title: SchemaName
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The version number of the schema
          title: SchemaVersion
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Tags associated with the resource.
            xml:
              name: tags
          title: Tags
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The type of the schema.
          title: Type
        VersionCreatedDate:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: The date the schema version was created.
          title: VersionCreatedDate
      title: DescribeSchemaResponse
      type: object
    ExportSchemaResponse:
      example:
        Type: Type
        SchemaVersion: SchemaVersion
        Content: Content
        SchemaArn: SchemaArn
        SchemaName: SchemaName
      properties:
        Content:
          title: __string
          type: string
        SchemaArn:
          title: __string
          type: string
        SchemaName:
          title: __string
          type: string
        SchemaVersion:
          title: __string
          type: string
        Type:
          title: __string
          type: string
      title: ExportSchemaResponse
      type: object
    GetCodeBindingSourceResponse:
      example:
        Body: Body
      properties:
        Body:
          title: Body
          type: string
      title: GetCodeBindingSourceResponse
      type: object
    GetDiscoveredSchemaResponse:
      example:
        Content: ""
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The source of the schema definition.
          title: Content
      title: GetDiscoveredSchemaResponse
      type: object
    GetDiscoveredSchemaVersionItemInput:
      maxLength: 100000
      minLength: 1
      title: GetDiscoveredSchemaVersionItemInput
      type: string
    GetResourcePolicyResponse:
      example:
        Policy: ""
        RevisionId: ""
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The resource-based policy.
          title: Policy
        RevisionId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The revision ID.
          title: RevisionId
      title: GetResourcePolicyResponse
      type: object
    ListDiscoverersResponse:
      example:
        NextToken: ""
        Discoverers: ""
      properties:
        Discoverers:
          allOf:
          - $ref: '#/components/schemas/__listOfDiscovererSummary'
          - description: An array of DiscovererSummary information.
          title: Discoverers
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The token that specifies the next page of results to return.\
              \ To request the first page, leave NextToken empty. The token will expire\
              \ in 24 hours, and cannot be shared with other accounts."
          title: NextToken
      title: ListDiscoverersResponse
      type: object
    ListRegistriesResponse:
      example:
        NextToken: ""
        Registries: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The token that specifies the next page of results to return.\
              \ To request the first page, leave NextToken empty. The token will expire\
              \ in 24 hours, and cannot be shared with other accounts."
          title: NextToken
        Registries:
          allOf:
          - $ref: '#/components/schemas/__listOfRegistrySummary'
          - description: An array of registry summaries.
          title: Registries
      title: ListRegistriesResponse
      type: object
    ListSchemaVersionsResponse:
      example:
        NextToken: ""
        SchemaVersions: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The token that specifies the next page of results to return.\
              \ To request the first page, leave NextToken empty. The token will expire\
              \ in 24 hours, and cannot be shared with other accounts."
          title: NextToken
        SchemaVersions:
          allOf:
          - $ref: '#/components/schemas/__listOfSchemaVersionSummary'
          - description: An array of schema version summaries.
          title: SchemaVersions
      title: ListSchemaVersionsResponse
      type: object
    ListSchemasResponse:
      example:
        NextToken: ""
        Schemas: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The token that specifies the next page of results to return.\
              \ To request the first page, leave NextToken empty. The token will expire\
              \ in 24 hours, and cannot be shared with other accounts."
          title: NextToken
        Schemas:
          allOf:
          - $ref: '#/components/schemas/__listOfSchemaSummary'
          - description: An array of schema summaries.
          title: Schemas
      title: ListSchemasResponse
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    PutCodeBindingResponse:
      example:
        LastModified: ""
        Status: ""
        CreationDate: ""
        SchemaVersion: ""
      properties:
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: The time and date that the code binding was created.
          title: CreationDate
        LastModified:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: The date and time that code bindings were modified.
          title: LastModified
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The version number of the schema.
          title: SchemaVersion
        Status:
          allOf:
          - $ref: '#/components/schemas/CodeGenerationStatus'
          - description: The current status of code binding generation.
          title: Status
      title: PutCodeBindingResponse
      type: object
    GoneException: {}
    PutResourcePolicyResponse:
      example:
        Policy: ""
        RevisionId: ""
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The resource-based policy.
          title: Policy
        RevisionId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The revision ID of the policy.
          title: RevisionId
      title: PutResourcePolicyResponse
      type: object
    PreconditionFailedException: {}
    SearchSchemasResponse:
      example:
        NextToken: ""
        Schemas: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The token that specifies the next page of results to return.\
              \ To request the first page, leave NextToken empty. The token will expire\
              \ in 24 hours, and cannot be shared with other accounts."
          title: NextToken
        Schemas:
          allOf:
          - $ref: '#/components/schemas/__listOfSearchSchemaSummary'
          - description: An array of SearchSchemaSummary information.
          title: Schemas
      title: SearchSchemasResponse
      type: object
    StartDiscovererResponse:
      example:
        DiscovererId: ""
        State: ""
      properties:
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the discoverer.
          title: DiscovererId
        State:
          allOf:
          - $ref: '#/components/schemas/DiscovererState'
          - description: The state of the discoverer.
          title: State
      title: StartDiscovererResponse
      type: object
    StopDiscovererResponse:
      example:
        DiscovererId: ""
        State: ""
      properties:
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the discoverer.
          title: DiscovererId
        State:
          allOf:
          - $ref: '#/components/schemas/DiscovererState'
          - description: The state of the discoverer.
          title: State
      title: StopDiscovererResponse
      type: object
    UpdateDiscovererResponse:
      example:
        DiscovererArn: ""
        DiscovererId: ""
        CrossAccount: ""
        Description: ""
        SourceArn: ""
        State: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The description of the discoverer.
          title: Description
        DiscovererArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the discoverer.
          title: DiscovererArn
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the discoverer.
          title: DiscovererId
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the event bus.
          title: SourceArn
        State:
          allOf:
          - $ref: '#/components/schemas/DiscovererState'
          - description: The state of the discoverer.
          title: State
        CrossAccount:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: The Status if the discoverer will discover schemas from events
              sent from another account.
          title: CrossAccount
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Tags associated with the resource.
            xml:
              name: tags
          title: Tags
      title: UpdateDiscovererResponse
      type: object
    UpdateRegistryResponse:
      example:
        Description: ""
        RegistryName: ""
        RegistryArn: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The description of the registry.
          title: Description
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the registry.
          title: RegistryArn
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the registry.
          title: RegistryName
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Tags associated with the registry.
            xml:
              name: tags
          title: Tags
      title: UpdateRegistryResponse
      type: object
    UpdateSchemaResponse:
      example:
        LastModified: ""
        Type: ""
        Description: ""
        SchemaVersion: ""
        VersionCreatedDate: ""
        SchemaArn: ""
        SchemaName: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The description of the schema.
          title: Description
        LastModified:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: The date and time that schema was modified.
          title: LastModified
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the schema.
          title: SchemaArn
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the schema.
          title: SchemaName
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The version number of the schema
          title: SchemaVersion
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
          title: Tags
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The type of the schema.
          title: Type
        VersionCreatedDate:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: The date the schema version was created.
          title: VersionCreatedDate
      title: UpdateSchemaResponse
      type: object
    CodeGenerationStatus:
      enum:
      - CREATE_IN_PROGRESS
      - CREATE_COMPLETE
      - CREATE_FAILED
      title: CodeGenerationStatus
      type: string
    __stringMin0Max256:
      maxLength: 256
      minLength: 0
      type: string
    __stringMin20Max1600:
      maxLength: 1600
      minLength: 20
      type: string
    __boolean:
      type: boolean
    Tags:
      additionalProperties:
        $ref: '#/components/schemas/__string'
      description: Key-value pairs associated with a resource.
      type: object
    CreateDiscovererRequest:
      description: ""
      example:
        CrossAccount: ""
        Description: ""
        SourceArn: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max256'
          - description: A description for the discoverer.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin20Max1600'
          - description: The ARN of the event bus.
        CrossAccount:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Support discovery of schemas in events sent to the bus from\
              \ another account. (default: true)."
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Tags associated with the resource.
            xml:
              name: tags
      required:
      - SourceArn
      title: CreateDiscovererRequest
      type: object
    DiscovererState:
      enum:
      - STARTED
      - STOPPED
      title: DiscovererState
      type: string
    CreateRegistryRequest:
      example:
        Description: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max256'
          - description: A description of the registry to be created.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Tags to associate with the registry.
            xml:
              name: tags
      title: CreateRegistryRequest
      type: object
    __stringMin1Max100000:
      maxLength: 100000
      minLength: 1
      type: string
    Type:
      enum:
      - OpenApi3
      - JSONSchemaDraft4
      title: Type
      type: string
    CreateSchemaRequest:
      example:
        Type: ""
        Description: ""
        Content: ""
        Tags: ""
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max100000'
          - description: The source of the schema definition.
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max256'
          - description: A description of the schema.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Tags associated with the schema.
            xml:
              name: tags
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - description: The type of schema.
      required:
      - Content
      - Type
      title: CreateSchemaRequest
      type: object
    __timestampIso8601:
      format: date-time
      type: string
    DeleteDiscovererRequest:
      properties: {}
      title: DeleteDiscovererRequest
      type: object
    DeleteRegistryRequest:
      properties: {}
      title: DeleteRegistryRequest
      type: object
    DeleteResourcePolicyRequest:
      properties: {}
      title: DeleteResourcePolicyRequest
      type: object
    DeleteSchemaRequest:
      properties: {}
      title: DeleteSchemaRequest
      type: object
    DeleteSchemaVersionRequest:
      properties: {}
      title: DeleteSchemaVersionRequest
      type: object
    DescribeCodeBindingRequest:
      properties: {}
      title: DescribeCodeBindingRequest
      type: object
    DescribeDiscovererRequest:
      properties: {}
      title: DescribeDiscovererRequest
      type: object
    DescribeRegistryRequest:
      properties: {}
      title: DescribeRegistryRequest
      type: object
    DescribeSchemaRequest:
      properties: {}
      title: DescribeSchemaRequest
      type: object
    DiscovererSummary:
      properties:
        DiscovererArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the discoverer.
          title: DiscovererArn
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the discoverer.
          title: DiscovererId
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the event bus.
          title: SourceArn
        State:
          allOf:
          - $ref: '#/components/schemas/DiscovererState'
          - description: The state of the discoverer.
          title: State
        CrossAccount:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: The Status if the discoverer will discover schemas from events
              sent from another account.
          title: CrossAccount
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Tags associated with the resource.
            xml:
              name: tags
          title: Tags
      title: DiscovererSummary
      type: object
    ExportSchemaRequest:
      properties: {}
      title: ExportSchemaRequest
      type: object
    GetCodeBindingSourceRequest:
      properties: {}
      title: GetCodeBindingSourceRequest
      type: object
    Body:
      title: Body
      type: string
    __listOfGetDiscoveredSchemaVersionItemInput:
      items:
        $ref: '#/components/schemas/GetDiscoveredSchemaVersionItemInput'
      maxItems: 10
      minItems: 1
      type: array
    GetDiscoveredSchemaRequest:
      example:
        Type: ""
        Events: ""
      properties:
        Events:
          allOf:
          - $ref: '#/components/schemas/__listOfGetDiscoveredSchemaVersionItemInput'
          - description: An array of strings where each string is a JSON event. These
              are the events that were used to generate the schema. The array includes
              a single type of event and has a maximum size of 10 events.
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - description: The type of event.
      required:
      - Events
      - Type
      title: GetDiscoveredSchemaRequest
      type: object
    GetResourcePolicyRequest:
      properties: {}
      title: GetResourcePolicyRequest
      type: object
    __integer:
      type: integer
    ListDiscoverersRequest:
      properties: {}
      title: ListDiscoverersRequest
      type: object
    __listOfDiscovererSummary:
      items:
        $ref: '#/components/schemas/DiscovererSummary'
      type: array
    ListRegistriesRequest:
      properties: {}
      title: ListRegistriesRequest
      type: object
    __listOfRegistrySummary:
      items:
        $ref: '#/components/schemas/RegistrySummary'
      type: array
    ListSchemaVersionsRequest:
      properties: {}
      title: ListSchemaVersionsRequest
      type: object
    __listOfSchemaVersionSummary:
      items:
        $ref: '#/components/schemas/SchemaVersionSummary'
      type: array
    ListSchemasRequest:
      properties: {}
      title: ListSchemasRequest
      type: object
    __listOfSchemaSummary:
      items:
        $ref: '#/components/schemas/SchemaSummary'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    PutCodeBindingRequest:
      properties: {}
      title: PutCodeBindingRequest
      type: object
    PutResourcePolicyRequest:
      description: The name of the policy.
      example:
        Policy: ""
        RevisionId: ""
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The resource-based policy.
        RevisionId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The revision ID of the policy.
      required:
      - Policy
      title: PutResourcePolicyRequest
      type: object
    RegistrySummary:
      properties:
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the registry.
          title: RegistryArn
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the registry.
          title: RegistryName
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Tags associated with the registry.
            xml:
              name: tags
          title: Tags
      title: RegistrySummary
      type: object
    __long:
      type: integer
    SchemaSummary:
      description: A summary of schema details.
      properties:
        LastModified:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: The date and time that schema was modified.
          title: LastModified
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the schema.
          title: SchemaArn
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the schema.
          title: SchemaName
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Tags associated with the schema.
            xml:
              name: tags
          title: Tags
        VersionCount:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: The number of versions available for the schema.
          title: VersionCount
      title: SchemaSummary
      type: object
    SchemaVersionSummary:
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the schema version.
          title: SchemaArn
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the schema.
          title: SchemaName
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The version number of the schema.
          title: SchemaVersion
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - description: The type of schema.
          title: Type
      title: SchemaVersionSummary
      type: object
    __listOfSearchSchemaVersionSummary:
      items:
        $ref: '#/components/schemas/SearchSchemaVersionSummary'
      type: array
    SearchSchemaSummary:
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the registry.
          title: RegistryName
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the schema.
          title: SchemaArn
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the schema.
          title: SchemaName
        SchemaVersions:
          allOf:
          - $ref: '#/components/schemas/__listOfSearchSchemaVersionSummary'
          - description: An array of schema version summaries.
          title: SchemaVersions
      title: SearchSchemaSummary
      type: object
    SearchSchemaVersionSummary:
      properties:
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: The date the schema version was created.
          title: CreatedDate
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The version number of the schema
          title: SchemaVersion
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - description: The type of schema.
          title: Type
      title: SearchSchemaVersionSummary
      type: object
    SearchSchemasRequest:
      properties: {}
      title: SearchSchemasRequest
      type: object
    __listOfSearchSchemaSummary:
      items:
        $ref: '#/components/schemas/SearchSchemaSummary'
      type: array
    StartDiscovererRequest:
      properties: {}
      title: StartDiscovererRequest
      type: object
    StopDiscovererRequest:
      properties: {}
      title: StopDiscovererRequest
      type: object
    TagResourceRequest:
      description: ""
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Tags associated with the resource.
            xml:
              name: tags
      required:
      - Tags
      title: TagResourceRequest
      type: object
    __listOf__string:
      items:
        $ref: '#/components/schemas/__string'
      type: array
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateDiscovererRequest:
      example:
        CrossAccount: ""
        Description: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max256'
          - description: The description of the discoverer to update.
        CrossAccount:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Support discovery of schemas in events sent to the bus from\
              \ another account. (default: true)"
      title: UpdateDiscovererRequest
      type: object
    UpdateRegistryRequest:
      description: Updates the registry.
      example:
        Description: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max256'
          - description: The description of the registry to update.
      title: UpdateRegistryRequest
      type: object
    __stringMin0Max36:
      maxLength: 36
      minLength: 0
      type: string
    UpdateSchemaRequest:
      example:
        Type: ""
        Description: ""
        ClientTokenId: ""
        Content: ""
      properties:
        ClientTokenId:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max36'
          - description: The ID of the client token.
        Content:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max100000'
          - description: The source of the schema definition.
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max256'
          - description: The description of the schema.
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - description: The schema type for the events schema.
      title: UpdateSchemaRequest
      type: object
    CreateDiscoverer_request:
      properties:
        Description:
          description: A description for the discoverer.
          maxLength: 256
          minLength: 0
          title: Description
          type: string
        SourceArn:
          description: The ARN of the event bus.
          maxLength: 1600
          minLength: 20
          title: SourceArn
          type: string
        CrossAccount:
          description: "Support discovery of schemas in events sent to the bus from\
            \ another account. (default: true)."
          title: CrossAccount
          type: boolean
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: Key-value pairs associated with a resource.
          title: tags
          type: object
      required:
      - SourceArn
      title: CreateDiscoverer_request
      type: object
    UpdateRegistry_request:
      properties:
        Description:
          description: The description of the registry to update.
          maxLength: 256
          minLength: 0
          title: Description
          type: string
      title: UpdateRegistry_request
      type: object
    CreateRegistry_request:
      properties:
        Description:
          description: A description of the registry to be created.
          maxLength: 256
          minLength: 0
          title: Description
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: Key-value pairs associated with a resource.
          title: tags
          type: object
      title: CreateRegistry_request
      type: object
    UpdateSchema_request:
      properties:
        ClientTokenId:
          description: The ID of the client token.
          maxLength: 36
          minLength: 0
          title: ClientTokenId
          type: string
        Content:
          description: The source of the schema definition.
          maxLength: 100000
          minLength: 1
          title: Content
          type: string
        Description:
          description: The description of the schema.
          maxLength: 256
          minLength: 0
          title: Description
          type: string
        Type:
          description: The schema type for the events schema.
          enum:
          - OpenApi3
          - JSONSchemaDraft4
          title: Type
          type: string
      title: UpdateSchema_request
      type: object
    CreateSchema_request:
      properties:
        Content:
          description: The source of the schema definition.
          maxLength: 100000
          minLength: 1
          title: Content
          type: string
        Description:
          description: A description of the schema.
          maxLength: 256
          minLength: 0
          title: Description
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: Key-value pairs associated with a resource.
          title: tags
          type: object
        Type:
          description: The type of schema.
          enum:
          - OpenApi3
          - JSONSchemaDraft4
          title: Type
          type: string
      required:
      - Content
      - Type
      title: CreateSchema_request
      type: object
    UpdateDiscoverer_request:
      properties:
        Description:
          description: The description of the discoverer to update.
          maxLength: 256
          minLength: 0
          title: Description
          type: string
        CrossAccount:
          description: "Support discovery of schemas in events sent to the bus from\
            \ another account. (default: true)"
          title: CrossAccount
          type: boolean
      title: UpdateDiscoverer_request
      type: object
    PutResourcePolicy_request:
      properties:
        Policy:
          description: The resource-based policy.
          title: Policy
          type: string
        RevisionId:
          description: The revision ID of the policy.
          title: RevisionId
          type: string
      required:
      - Policy
      title: PutResourcePolicy_request
      type: object
    GetDiscoveredSchema_request:
      properties:
        Events:
          description: An array of strings where each string is a JSON event. These
            are the events that were used to generate the schema. The array includes
            a single type of event and has a maximum size of 10 events.
          items:
            $ref: '#/components/schemas/GetDiscoveredSchemaVersionItemInput'
          maxItems: 10
          minItems: 1
          title: Events
          type: array
        Type:
          description: The type of event.
          enum:
          - OpenApi3
          - JSONSchemaDraft4
          title: Type
          type: string
      required:
      - Events
      - Type
      title: GetDiscoveredSchema_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: Key-value pairs associated with a resource.
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
