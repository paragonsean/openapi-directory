# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExportSchemaResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: str=None, schema_arn: str=None, schema_name: str=None, schema_version: str=None, type: str=None):
        """ExportSchemaResponse - a model defined in OpenAPI

        :param content: The content of this ExportSchemaResponse.
        :param schema_arn: The schema_arn of this ExportSchemaResponse.
        :param schema_name: The schema_name of this ExportSchemaResponse.
        :param schema_version: The schema_version of this ExportSchemaResponse.
        :param type: The type of this ExportSchemaResponse.
        """
        self.openapi_types = {
            'content': str,
            'schema_arn': str,
            'schema_name': str,
            'schema_version': str,
            'type': str
        }

        self.attribute_map = {
            'content': 'Content',
            'schema_arn': 'SchemaArn',
            'schema_name': 'SchemaName',
            'schema_version': 'SchemaVersion',
            'type': 'Type'
        }

        self._content = content
        self._schema_arn = schema_arn
        self._schema_name = schema_name
        self._schema_version = schema_version
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportSchemaResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportSchemaResponse of this ExportSchemaResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this ExportSchemaResponse.


        :return: The content of this ExportSchemaResponse.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this ExportSchemaResponse.


        :param content: The content of this ExportSchemaResponse.
        :type content: str
        """

        self._content = content

    @property
    def schema_arn(self):
        """Gets the schema_arn of this ExportSchemaResponse.


        :return: The schema_arn of this ExportSchemaResponse.
        :rtype: str
        """
        return self._schema_arn

    @schema_arn.setter
    def schema_arn(self, schema_arn):
        """Sets the schema_arn of this ExportSchemaResponse.


        :param schema_arn: The schema_arn of this ExportSchemaResponse.
        :type schema_arn: str
        """

        self._schema_arn = schema_arn

    @property
    def schema_name(self):
        """Gets the schema_name of this ExportSchemaResponse.


        :return: The schema_name of this ExportSchemaResponse.
        :rtype: str
        """
        return self._schema_name

    @schema_name.setter
    def schema_name(self, schema_name):
        """Sets the schema_name of this ExportSchemaResponse.


        :param schema_name: The schema_name of this ExportSchemaResponse.
        :type schema_name: str
        """

        self._schema_name = schema_name

    @property
    def schema_version(self):
        """Gets the schema_version of this ExportSchemaResponse.


        :return: The schema_version of this ExportSchemaResponse.
        :rtype: str
        """
        return self._schema_version

    @schema_version.setter
    def schema_version(self, schema_version):
        """Sets the schema_version of this ExportSchemaResponse.


        :param schema_version: The schema_version of this ExportSchemaResponse.
        :type schema_version: str
        """

        self._schema_version = schema_version

    @property
    def type(self):
        """Gets the type of this ExportSchemaResponse.


        :return: The type of this ExportSchemaResponse.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ExportSchemaResponse.


        :param type: The type of this ExportSchemaResponse.
        :type type: str
        """

        self._type = type
