# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchSchemaSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, registry_name: str=None, schema_arn: str=None, schema_name: str=None, schema_versions: List=None):
        """SearchSchemaSummary - a model defined in OpenAPI

        :param registry_name: The registry_name of this SearchSchemaSummary.
        :param schema_arn: The schema_arn of this SearchSchemaSummary.
        :param schema_name: The schema_name of this SearchSchemaSummary.
        :param schema_versions: The schema_versions of this SearchSchemaSummary.
        """
        self.openapi_types = {
            'registry_name': str,
            'schema_arn': str,
            'schema_name': str,
            'schema_versions': List
        }

        self.attribute_map = {
            'registry_name': 'RegistryName',
            'schema_arn': 'SchemaArn',
            'schema_name': 'SchemaName',
            'schema_versions': 'SchemaVersions'
        }

        self._registry_name = registry_name
        self._schema_arn = schema_arn
        self._schema_name = schema_name
        self._schema_versions = schema_versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchSchemaSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchSchemaSummary of this SearchSchemaSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def registry_name(self):
        """Gets the registry_name of this SearchSchemaSummary.


        :return: The registry_name of this SearchSchemaSummary.
        :rtype: str
        """
        return self._registry_name

    @registry_name.setter
    def registry_name(self, registry_name):
        """Sets the registry_name of this SearchSchemaSummary.


        :param registry_name: The registry_name of this SearchSchemaSummary.
        :type registry_name: str
        """

        self._registry_name = registry_name

    @property
    def schema_arn(self):
        """Gets the schema_arn of this SearchSchemaSummary.


        :return: The schema_arn of this SearchSchemaSummary.
        :rtype: str
        """
        return self._schema_arn

    @schema_arn.setter
    def schema_arn(self, schema_arn):
        """Sets the schema_arn of this SearchSchemaSummary.


        :param schema_arn: The schema_arn of this SearchSchemaSummary.
        :type schema_arn: str
        """

        self._schema_arn = schema_arn

    @property
    def schema_name(self):
        """Gets the schema_name of this SearchSchemaSummary.


        :return: The schema_name of this SearchSchemaSummary.
        :rtype: str
        """
        return self._schema_name

    @schema_name.setter
    def schema_name(self, schema_name):
        """Sets the schema_name of this SearchSchemaSummary.


        :param schema_name: The schema_name of this SearchSchemaSummary.
        :type schema_name: str
        """

        self._schema_name = schema_name

    @property
    def schema_versions(self):
        """Gets the schema_versions of this SearchSchemaSummary.


        :return: The schema_versions of this SearchSchemaSummary.
        :rtype: List
        """
        return self._schema_versions

    @schema_versions.setter
    def schema_versions(self, schema_versions):
        """Sets the schema_versions of this SearchSchemaSummary.


        :param schema_versions: The schema_versions of this SearchSchemaSummary.
        :type schema_versions: List
        """

        self._schema_versions = schema_versions
