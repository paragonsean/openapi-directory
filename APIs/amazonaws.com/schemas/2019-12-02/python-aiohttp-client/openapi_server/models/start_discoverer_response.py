# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.discoverer_state import DiscovererState
from openapi_server import util


class StartDiscovererResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, discoverer_id: str=None, state: DiscovererState=None):
        """StartDiscovererResponse - a model defined in OpenAPI

        :param discoverer_id: The discoverer_id of this StartDiscovererResponse.
        :param state: The state of this StartDiscovererResponse.
        """
        self.openapi_types = {
            'discoverer_id': str,
            'state': DiscovererState
        }

        self.attribute_map = {
            'discoverer_id': 'DiscovererId',
            'state': 'State'
        }

        self._discoverer_id = discoverer_id
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartDiscovererResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartDiscovererResponse of this StartDiscovererResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def discoverer_id(self):
        """Gets the discoverer_id of this StartDiscovererResponse.


        :return: The discoverer_id of this StartDiscovererResponse.
        :rtype: str
        """
        return self._discoverer_id

    @discoverer_id.setter
    def discoverer_id(self, discoverer_id):
        """Sets the discoverer_id of this StartDiscovererResponse.


        :param discoverer_id: The discoverer_id of this StartDiscovererResponse.
        :type discoverer_id: str
        """

        self._discoverer_id = discoverer_id

    @property
    def state(self):
        """Gets the state of this StartDiscovererResponse.


        :return: The state of this StartDiscovererResponse.
        :rtype: DiscovererState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this StartDiscovererResponse.


        :param state: The state of this StartDiscovererResponse.
        :type state: DiscovererState
        """

        self._state = state
