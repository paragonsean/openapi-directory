/**
 * CloudWatch RUM
 * <p>With Amazon CloudWatch RUM, you can perform real-user monitoring to collect client-side data about your web application performance from actual user sessions in real time. The data collected includes page load times, client-side errors, and user behavior. When you view this data, you can see it all aggregated together and also see breakdowns by the browsers and devices that your customers use.</p> <p>You can use the collected data to quickly identify and debug client-side performance issues. CloudWatch RUM helps you visualize anomalies in your application performance and find relevant debugging data such as error messages, stack traces, and user sessions. You can also use RUM to understand the range of end-user impact including the number of users, geolocations, and browsers used.</p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BatchDeleteRumMetricDefinitionsError model module.
 * @module model/BatchDeleteRumMetricDefinitionsError
 * @version 2018-05-10
 */
class BatchDeleteRumMetricDefinitionsError {
    /**
     * Constructs a new <code>BatchDeleteRumMetricDefinitionsError</code>.
     * A structure that defines one error caused by a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_BatchDeleteRumMetricsDefinitions.html\&quot;&gt;BatchCreateRumMetricsDefinitions&lt;/a&gt; operation.
     * @alias module:model/BatchDeleteRumMetricDefinitionsError
     * @param errorCode {String} 
     * @param errorMessage {String} 
     * @param metricDefinitionId {String} 
     */
    constructor(errorCode, errorMessage, metricDefinitionId) { 
        
        BatchDeleteRumMetricDefinitionsError.initialize(this, errorCode, errorMessage, metricDefinitionId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, errorCode, errorMessage, metricDefinitionId) { 
        obj['ErrorCode'] = errorCode;
        obj['ErrorMessage'] = errorMessage;
        obj['MetricDefinitionId'] = metricDefinitionId;
    }

    /**
     * Constructs a <code>BatchDeleteRumMetricDefinitionsError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchDeleteRumMetricDefinitionsError} obj Optional instance to populate.
     * @return {module:model/BatchDeleteRumMetricDefinitionsError} The populated <code>BatchDeleteRumMetricDefinitionsError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchDeleteRumMetricDefinitionsError();

            if (data.hasOwnProperty('ErrorCode')) {
                obj['ErrorCode'] = ApiClient.convertToType(data['ErrorCode'], 'String');
            }
            if (data.hasOwnProperty('ErrorMessage')) {
                obj['ErrorMessage'] = ApiClient.convertToType(data['ErrorMessage'], 'String');
            }
            if (data.hasOwnProperty('MetricDefinitionId')) {
                obj['MetricDefinitionId'] = ApiClient.convertToType(data['MetricDefinitionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchDeleteRumMetricDefinitionsError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchDeleteRumMetricDefinitionsError</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BatchDeleteRumMetricDefinitionsError.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ErrorCode`
        if (data['ErrorCode']) { // data not null
          String.validateJSON(data['ErrorCode']);
        }
        // validate the optional field `ErrorMessage`
        if (data['ErrorMessage']) { // data not null
          String.validateJSON(data['ErrorMessage']);
        }
        // validate the optional field `MetricDefinitionId`
        if (data['MetricDefinitionId']) { // data not null
          String.validateJSON(data['MetricDefinitionId']);
        }

        return true;
    }


}

BatchDeleteRumMetricDefinitionsError.RequiredProperties = ["ErrorCode", "ErrorMessage", "MetricDefinitionId"];

/**
 * @member {String} ErrorCode
 */
BatchDeleteRumMetricDefinitionsError.prototype['ErrorCode'] = undefined;

/**
 * @member {String} ErrorMessage
 */
BatchDeleteRumMetricDefinitionsError.prototype['ErrorMessage'] = undefined;

/**
 * @member {String} MetricDefinitionId
 */
BatchDeleteRumMetricDefinitionsError.prototype['MetricDefinitionId'] = undefined;






export default BatchDeleteRumMetricDefinitionsError;

