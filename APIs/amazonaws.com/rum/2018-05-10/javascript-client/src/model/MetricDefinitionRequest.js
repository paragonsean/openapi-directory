/**
 * CloudWatch RUM
 * <p>With Amazon CloudWatch RUM, you can perform real-user monitoring to collect client-side data about your web application performance from actual user sessions in real time. The data collected includes page load times, client-side errors, and user behavior. When you view this data, you can see it all aggregated together and also see breakdowns by the browsers and devices that your customers use.</p> <p>You can use the collected data to quickly identify and debug client-side performance issues. CloudWatch RUM helps you visualize anomalies in your application performance and find relevant debugging data such as error messages, stack traces, and user sessions. You can also use RUM to understand the range of end-user impact including the number of users, geolocations, and browsers used.</p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MetricDefinitionRequest model module.
 * @module model/MetricDefinitionRequest
 * @version 2018-05-10
 */
class MetricDefinitionRequest {
    /**
     * Constructs a new <code>MetricDefinitionRequest</code>.
     * &lt;p&gt;Use this structure to define one extended metric or custom metric that RUM will send to CloudWatch or CloudWatch Evidently. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-vended-metrics.html\&quot;&gt; Additional metrics that you can send to CloudWatch and CloudWatch Evidently&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;This structure is validated differently for extended metrics and custom metrics. For extended metrics that are sent to the &lt;code&gt;AWS/RUM&lt;/code&gt; namespace, the following validations apply:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;Namespace&lt;/code&gt; parameter must be omitted or set to &lt;code&gt;AWS/RUM&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Only certain combinations of values for &lt;code&gt;Name&lt;/code&gt;, &lt;code&gt;ValueKey&lt;/code&gt;, and &lt;code&gt;EventPattern&lt;/code&gt; are valid. In addition to what is displayed in the list below, the &lt;code&gt;EventPattern&lt;/code&gt; can also include information used by the &lt;code&gt;DimensionKeys&lt;/code&gt; field.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;Name&lt;/code&gt; is &lt;code&gt;PerformanceNavigationDuration&lt;/code&gt;, then &lt;code&gt;ValueKey&lt;/code&gt;must be &lt;code&gt;event_details.duration&lt;/code&gt; and the &lt;code&gt;EventPattern&lt;/code&gt; must include &lt;code&gt;{\&quot;event_type\&quot;:[\&quot;com.amazon.rum.performance_navigation_event\&quot;]}&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;Name&lt;/code&gt; is &lt;code&gt;PerformanceResourceDuration&lt;/code&gt;, then &lt;code&gt;ValueKey&lt;/code&gt;must be &lt;code&gt;event_details.duration&lt;/code&gt; and the &lt;code&gt;EventPattern&lt;/code&gt; must include &lt;code&gt;{\&quot;event_type\&quot;:[\&quot;com.amazon.rum.performance_resource_event\&quot;]}&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;Name&lt;/code&gt; is &lt;code&gt;NavigationSatisfiedTransaction&lt;/code&gt;, then &lt;code&gt;ValueKey&lt;/code&gt;must be null and the &lt;code&gt;EventPattern&lt;/code&gt; must include &lt;code&gt;{ \&quot;event_type\&quot;: [\&quot;com.amazon.rum.performance_navigation_event\&quot;], \&quot;event_details\&quot;: { \&quot;duration\&quot;: [{ \&quot;numeric\&quot;: [\&quot;&amp;gt;\&quot;,2000] }] } }&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;Name&lt;/code&gt; is &lt;code&gt;NavigationToleratedTransaction&lt;/code&gt;, then &lt;code&gt;ValueKey&lt;/code&gt;must be null and the &lt;code&gt;EventPattern&lt;/code&gt; must include &lt;code&gt;{ \&quot;event_type\&quot;: [\&quot;com.amazon.rum.performance_navigation_event\&quot;], \&quot;event_details\&quot;: { \&quot;duration\&quot;: [{ \&quot;numeric\&quot;: [\&quot;&amp;gt;&#x3D;\&quot;,2000,\&quot;&amp;lt;\&quot;8000] }] } }&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;Name&lt;/code&gt; is &lt;code&gt;NavigationFrustratedTransaction&lt;/code&gt;, then &lt;code&gt;ValueKey&lt;/code&gt;must be null and the &lt;code&gt;EventPattern&lt;/code&gt; must include &lt;code&gt;{ \&quot;event_type\&quot;: [\&quot;com.amazon.rum.performance_navigation_event\&quot;], \&quot;event_details\&quot;: { \&quot;duration\&quot;: [{ \&quot;numeric\&quot;: [\&quot;&amp;gt;&#x3D;\&quot;,8000] }] } }&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;Name&lt;/code&gt; is &lt;code&gt;WebVitalsCumulativeLayoutShift&lt;/code&gt;, then &lt;code&gt;ValueKey&lt;/code&gt;must be &lt;code&gt;event_details.value&lt;/code&gt; and the &lt;code&gt;EventPattern&lt;/code&gt; must include &lt;code&gt;{\&quot;event_type\&quot;:[\&quot;com.amazon.rum.cumulative_layout_shift_event\&quot;]}&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;Name&lt;/code&gt; is &lt;code&gt;WebVitalsFirstInputDelay&lt;/code&gt;, then &lt;code&gt;ValueKey&lt;/code&gt;must be &lt;code&gt;event_details.value&lt;/code&gt; and the &lt;code&gt;EventPattern&lt;/code&gt; must include &lt;code&gt;{\&quot;event_type\&quot;:[\&quot;com.amazon.rum.first_input_delay_event\&quot;]}&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;Name&lt;/code&gt; is &lt;code&gt;WebVitalsLargestContentfulPaint&lt;/code&gt;, then &lt;code&gt;ValueKey&lt;/code&gt;must be &lt;code&gt;event_details.value&lt;/code&gt; and the &lt;code&gt;EventPattern&lt;/code&gt; must include &lt;code&gt;{\&quot;event_type\&quot;:[\&quot;com.amazon.rum.largest_contentful_paint_event\&quot;]}&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;Name&lt;/code&gt; is &lt;code&gt;JsErrorCount&lt;/code&gt;, then &lt;code&gt;ValueKey&lt;/code&gt;must be null and the &lt;code&gt;EventPattern&lt;/code&gt; must include &lt;code&gt;{\&quot;event_type\&quot;:[\&quot;com.amazon.rum.js_error_event\&quot;]}&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;Name&lt;/code&gt; is &lt;code&gt;HttpErrorCount&lt;/code&gt;, then &lt;code&gt;ValueKey&lt;/code&gt;must be null and the &lt;code&gt;EventPattern&lt;/code&gt; must include &lt;code&gt;{\&quot;event_type\&quot;:[\&quot;com.amazon.rum.http_event\&quot;]}&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;Name&lt;/code&gt; is &lt;code&gt;SessionCount&lt;/code&gt;, then &lt;code&gt;ValueKey&lt;/code&gt;must be null and the &lt;code&gt;EventPattern&lt;/code&gt; must include &lt;code&gt;{\&quot;event_type\&quot;:[\&quot;com.amazon.rum.session_start_event\&quot;]}&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For custom metrics, the following validation rules apply:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The namespace can&#39;t be omitted and can&#39;t be &lt;code&gt;AWS/RUM&lt;/code&gt;. You can use the &lt;code&gt;AWS/RUM&lt;/code&gt; namespace only for extended metrics.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;All dimensions listed in the &lt;code&gt;DimensionKeys&lt;/code&gt; field must be present in the value of &lt;code&gt;EventPattern&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The values that you specify for &lt;code&gt;ValueKey&lt;/code&gt;, &lt;code&gt;EventPattern&lt;/code&gt;, and &lt;code&gt;DimensionKeys&lt;/code&gt; must be fields in RUM events, so all first-level keys in these fields must be one of the keys in the list later in this section.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you set a value for &lt;code&gt;EventPattern&lt;/code&gt;, it must be a JSON object.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For every non-empty &lt;code&gt;event_details&lt;/code&gt;, there must be a non-empty &lt;code&gt;event_type&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;EventPattern&lt;/code&gt; contains an &lt;code&gt;event_details&lt;/code&gt; field, it must also contain an &lt;code&gt;event_type&lt;/code&gt;. For every built-in &lt;code&gt;event_type&lt;/code&gt; that you use, you must use a value for &lt;code&gt;event_details&lt;/code&gt; that corresponds to that &lt;code&gt;event_type&lt;/code&gt;. For information about event details that correspond to event types, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-datacollected.html#CloudWatch-RUM-datacollected-eventDetails\&quot;&gt; RUM event details&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;In &lt;code&gt;EventPattern&lt;/code&gt;, any JSON array must contain only one value.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Valid key values for first-level keys in the &lt;code&gt;ValueKey&lt;/code&gt;, &lt;code&gt;EventPattern&lt;/code&gt;, and &lt;code&gt;DimensionKeys&lt;/code&gt; fields:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;account_id&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application_Id&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application_version&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application_name&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;batch_id&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;event_details&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;event_id&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;event_interaction&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;event_timestamp&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;event_type&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;event_version&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;log_stream&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;metadata&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;sessionId&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;user_details&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;userId&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     * @alias module:model/MetricDefinitionRequest
     * @param name {String} 
     */
    constructor(name) { 
        
        MetricDefinitionRequest.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['Name'] = name;
    }

    /**
     * Constructs a <code>MetricDefinitionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricDefinitionRequest} obj Optional instance to populate.
     * @return {module:model/MetricDefinitionRequest} The populated <code>MetricDefinitionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricDefinitionRequest();

            if (data.hasOwnProperty('DimensionKeys')) {
                obj['DimensionKeys'] = ApiClient.convertToType(data['DimensionKeys'], Object);
            }
            if (data.hasOwnProperty('EventPattern')) {
                obj['EventPattern'] = ApiClient.convertToType(data['EventPattern'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Namespace')) {
                obj['Namespace'] = ApiClient.convertToType(data['Namespace'], 'String');
            }
            if (data.hasOwnProperty('UnitLabel')) {
                obj['UnitLabel'] = ApiClient.convertToType(data['UnitLabel'], 'String');
            }
            if (data.hasOwnProperty('ValueKey')) {
                obj['ValueKey'] = ApiClient.convertToType(data['ValueKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetricDefinitionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetricDefinitionRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MetricDefinitionRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DimensionKeys`
        if (data['DimensionKeys']) { // data not null
          Object.validateJSON(data['DimensionKeys']);
        }
        // validate the optional field `EventPattern`
        if (data['EventPattern']) { // data not null
          String.validateJSON(data['EventPattern']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Namespace`
        if (data['Namespace']) { // data not null
          String.validateJSON(data['Namespace']);
        }
        // validate the optional field `UnitLabel`
        if (data['UnitLabel']) { // data not null
          String.validateJSON(data['UnitLabel']);
        }
        // validate the optional field `ValueKey`
        if (data['ValueKey']) { // data not null
          String.validateJSON(data['ValueKey']);
        }

        return true;
    }


}

MetricDefinitionRequest.RequiredProperties = ["Name"];

/**
 * @member {Object} DimensionKeys
 */
MetricDefinitionRequest.prototype['DimensionKeys'] = undefined;

/**
 * @member {String} EventPattern
 */
MetricDefinitionRequest.prototype['EventPattern'] = undefined;

/**
 * @member {String} Name
 */
MetricDefinitionRequest.prototype['Name'] = undefined;

/**
 * @member {String} Namespace
 */
MetricDefinitionRequest.prototype['Namespace'] = undefined;

/**
 * @member {String} UnitLabel
 */
MetricDefinitionRequest.prototype['UnitLabel'] = undefined;

/**
 * @member {String} ValueKey
 */
MetricDefinitionRequest.prototype['ValueKey'] = undefined;






export default MetricDefinitionRequest;

