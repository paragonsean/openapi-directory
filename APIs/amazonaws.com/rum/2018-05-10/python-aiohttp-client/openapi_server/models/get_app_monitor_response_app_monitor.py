# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_monitor_app_monitor_configuration import AppMonitorAppMonitorConfiguration
from openapi_server.models.app_monitor_custom_events import AppMonitorCustomEvents
from openapi_server.models.app_monitor_data_storage import AppMonitorDataStorage
from openapi_server.models.state_enum import StateEnum
from openapi_server import util


class GetAppMonitorResponseAppMonitor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_monitor_configuration: AppMonitorAppMonitorConfiguration=None, created: str=None, custom_events: AppMonitorCustomEvents=None, data_storage: AppMonitorDataStorage=None, domain: str=None, id: str=None, last_modified: str=None, name: str=None, state: StateEnum=None, tags: Dict=None):
        """GetAppMonitorResponseAppMonitor - a model defined in OpenAPI

        :param app_monitor_configuration: The app_monitor_configuration of this GetAppMonitorResponseAppMonitor.
        :param created: The created of this GetAppMonitorResponseAppMonitor.
        :param custom_events: The custom_events of this GetAppMonitorResponseAppMonitor.
        :param data_storage: The data_storage of this GetAppMonitorResponseAppMonitor.
        :param domain: The domain of this GetAppMonitorResponseAppMonitor.
        :param id: The id of this GetAppMonitorResponseAppMonitor.
        :param last_modified: The last_modified of this GetAppMonitorResponseAppMonitor.
        :param name: The name of this GetAppMonitorResponseAppMonitor.
        :param state: The state of this GetAppMonitorResponseAppMonitor.
        :param tags: The tags of this GetAppMonitorResponseAppMonitor.
        """
        self.openapi_types = {
            'app_monitor_configuration': AppMonitorAppMonitorConfiguration,
            'created': str,
            'custom_events': AppMonitorCustomEvents,
            'data_storage': AppMonitorDataStorage,
            'domain': str,
            'id': str,
            'last_modified': str,
            'name': str,
            'state': StateEnum,
            'tags': Dict
        }

        self.attribute_map = {
            'app_monitor_configuration': 'AppMonitorConfiguration',
            'created': 'Created',
            'custom_events': 'CustomEvents',
            'data_storage': 'DataStorage',
            'domain': 'Domain',
            'id': 'Id',
            'last_modified': 'LastModified',
            'name': 'Name',
            'state': 'State',
            'tags': 'Tags'
        }

        self._app_monitor_configuration = app_monitor_configuration
        self._created = created
        self._custom_events = custom_events
        self._data_storage = data_storage
        self._domain = domain
        self._id = id
        self._last_modified = last_modified
        self._name = name
        self._state = state
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAppMonitorResponseAppMonitor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAppMonitorResponse_AppMonitor of this GetAppMonitorResponseAppMonitor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_monitor_configuration(self):
        """Gets the app_monitor_configuration of this GetAppMonitorResponseAppMonitor.


        :return: The app_monitor_configuration of this GetAppMonitorResponseAppMonitor.
        :rtype: AppMonitorAppMonitorConfiguration
        """
        return self._app_monitor_configuration

    @app_monitor_configuration.setter
    def app_monitor_configuration(self, app_monitor_configuration):
        """Sets the app_monitor_configuration of this GetAppMonitorResponseAppMonitor.


        :param app_monitor_configuration: The app_monitor_configuration of this GetAppMonitorResponseAppMonitor.
        :type app_monitor_configuration: AppMonitorAppMonitorConfiguration
        """

        self._app_monitor_configuration = app_monitor_configuration

    @property
    def created(self):
        """Gets the created of this GetAppMonitorResponseAppMonitor.


        :return: The created of this GetAppMonitorResponseAppMonitor.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this GetAppMonitorResponseAppMonitor.


        :param created: The created of this GetAppMonitorResponseAppMonitor.
        :type created: str
        """

        self._created = created

    @property
    def custom_events(self):
        """Gets the custom_events of this GetAppMonitorResponseAppMonitor.


        :return: The custom_events of this GetAppMonitorResponseAppMonitor.
        :rtype: AppMonitorCustomEvents
        """
        return self._custom_events

    @custom_events.setter
    def custom_events(self, custom_events):
        """Sets the custom_events of this GetAppMonitorResponseAppMonitor.


        :param custom_events: The custom_events of this GetAppMonitorResponseAppMonitor.
        :type custom_events: AppMonitorCustomEvents
        """

        self._custom_events = custom_events

    @property
    def data_storage(self):
        """Gets the data_storage of this GetAppMonitorResponseAppMonitor.


        :return: The data_storage of this GetAppMonitorResponseAppMonitor.
        :rtype: AppMonitorDataStorage
        """
        return self._data_storage

    @data_storage.setter
    def data_storage(self, data_storage):
        """Sets the data_storage of this GetAppMonitorResponseAppMonitor.


        :param data_storage: The data_storage of this GetAppMonitorResponseAppMonitor.
        :type data_storage: AppMonitorDataStorage
        """

        self._data_storage = data_storage

    @property
    def domain(self):
        """Gets the domain of this GetAppMonitorResponseAppMonitor.


        :return: The domain of this GetAppMonitorResponseAppMonitor.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this GetAppMonitorResponseAppMonitor.


        :param domain: The domain of this GetAppMonitorResponseAppMonitor.
        :type domain: str
        """

        self._domain = domain

    @property
    def id(self):
        """Gets the id of this GetAppMonitorResponseAppMonitor.


        :return: The id of this GetAppMonitorResponseAppMonitor.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetAppMonitorResponseAppMonitor.


        :param id: The id of this GetAppMonitorResponseAppMonitor.
        :type id: str
        """

        self._id = id

    @property
    def last_modified(self):
        """Gets the last_modified of this GetAppMonitorResponseAppMonitor.


        :return: The last_modified of this GetAppMonitorResponseAppMonitor.
        :rtype: str
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this GetAppMonitorResponseAppMonitor.


        :param last_modified: The last_modified of this GetAppMonitorResponseAppMonitor.
        :type last_modified: str
        """

        self._last_modified = last_modified

    @property
    def name(self):
        """Gets the name of this GetAppMonitorResponseAppMonitor.


        :return: The name of this GetAppMonitorResponseAppMonitor.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetAppMonitorResponseAppMonitor.


        :param name: The name of this GetAppMonitorResponseAppMonitor.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this GetAppMonitorResponseAppMonitor.


        :return: The state of this GetAppMonitorResponseAppMonitor.
        :rtype: StateEnum
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GetAppMonitorResponseAppMonitor.


        :param state: The state of this GetAppMonitorResponseAppMonitor.
        :type state: StateEnum
        """

        self._state = state

    @property
    def tags(self):
        """Gets the tags of this GetAppMonitorResponseAppMonitor.


        :return: The tags of this GetAppMonitorResponseAppMonitor.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GetAppMonitorResponseAppMonitor.


        :param tags: The tags of this GetAppMonitorResponseAppMonitor.
        :type tags: Dict
        """

        self._tags = tags
