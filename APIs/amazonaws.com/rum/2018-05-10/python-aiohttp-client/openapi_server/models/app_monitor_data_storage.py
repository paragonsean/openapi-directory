# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_storage_cw_log import DataStorageCwLog
from openapi_server import util


class AppMonitorDataStorage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cw_log: DataStorageCwLog=None):
        """AppMonitorDataStorage - a model defined in OpenAPI

        :param cw_log: The cw_log of this AppMonitorDataStorage.
        """
        self.openapi_types = {
            'cw_log': DataStorageCwLog
        }

        self.attribute_map = {
            'cw_log': 'CwLog'
        }

        self._cw_log = cw_log

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppMonitorDataStorage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppMonitor_DataStorage of this AppMonitorDataStorage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cw_log(self):
        """Gets the cw_log of this AppMonitorDataStorage.


        :return: The cw_log of this AppMonitorDataStorage.
        :rtype: DataStorageCwLog
        """
        return self._cw_log

    @cw_log.setter
    def cw_log(self, cw_log):
        """Sets the cw_log of this AppMonitorDataStorage.


        :param cw_log: The cw_log of this AppMonitorDataStorage.
        :type cw_log: DataStorageCwLog
        """

        self._cw_log = cw_log
