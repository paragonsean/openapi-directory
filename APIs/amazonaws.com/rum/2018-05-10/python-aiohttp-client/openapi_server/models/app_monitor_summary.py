# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.state_enum import StateEnum
from openapi_server import util


class AppMonitorSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: str=None, id: str=None, last_modified: str=None, name: str=None, state: StateEnum=None):
        """AppMonitorSummary - a model defined in OpenAPI

        :param created: The created of this AppMonitorSummary.
        :param id: The id of this AppMonitorSummary.
        :param last_modified: The last_modified of this AppMonitorSummary.
        :param name: The name of this AppMonitorSummary.
        :param state: The state of this AppMonitorSummary.
        """
        self.openapi_types = {
            'created': str,
            'id': str,
            'last_modified': str,
            'name': str,
            'state': StateEnum
        }

        self.attribute_map = {
            'created': 'Created',
            'id': 'Id',
            'last_modified': 'LastModified',
            'name': 'Name',
            'state': 'State'
        }

        self._created = created
        self._id = id
        self._last_modified = last_modified
        self._name = name
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppMonitorSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppMonitorSummary of this AppMonitorSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this AppMonitorSummary.


        :return: The created of this AppMonitorSummary.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this AppMonitorSummary.


        :param created: The created of this AppMonitorSummary.
        :type created: str
        """

        self._created = created

    @property
    def id(self):
        """Gets the id of this AppMonitorSummary.


        :return: The id of this AppMonitorSummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AppMonitorSummary.


        :param id: The id of this AppMonitorSummary.
        :type id: str
        """

        self._id = id

    @property
    def last_modified(self):
        """Gets the last_modified of this AppMonitorSummary.


        :return: The last_modified of this AppMonitorSummary.
        :rtype: str
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this AppMonitorSummary.


        :param last_modified: The last_modified of this AppMonitorSummary.
        :type last_modified: str
        """

        self._last_modified = last_modified

    @property
    def name(self):
        """Gets the name of this AppMonitorSummary.


        :return: The name of this AppMonitorSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AppMonitorSummary.


        :param name: The name of this AppMonitorSummary.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this AppMonitorSummary.


        :return: The state of this AppMonitorSummary.
        :rtype: StateEnum
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this AppMonitorSummary.


        :param state: The state of this AppMonitorSummary.
        :type state: StateEnum
        """

        self._state = state
