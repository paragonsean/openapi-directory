openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>With Amazon CloudWatch RUM, you can perform real-user monitoring\
    \ to collect client-side data about your web application performance from actual\
    \ user sessions in real time. The data collected includes page load times, client-side\
    \ errors, and user behavior. When you view this data, you can see it all aggregated\
    \ together and also see breakdowns by the browsers and devices that your customers\
    \ use.</p> <p>You can use the collected data to quickly identify and debug client-side\
    \ performance issues. CloudWatch RUM helps you visualize anomalies in your application\
    \ performance and find relevant debugging data such as error messages, stack traces,\
    \ and user sessions. You can also use RUM to understand the range of end-user\
    \ impact including the number of users, geolocations, and browsers used.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: CloudWatch RUM
  version: 2018-05-10
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: rum
  x-aws-signingName: rum
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/rum-2018-05-10.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/rum/
servers:
- description: The CloudWatch RUM multi-region endpoint
  url: "http://rum.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The CloudWatch RUM multi-region endpoint
  url: "https://rum.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The CloudWatch RUM endpoint for China (Beijing) and China (Ningxia)
  url: "http://rum.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The CloudWatch RUM endpoint for China (Beijing) and China (Ningxia)
  url: "https://rum.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /appmonitor:
    post:
      description: "<p>Creates a Amazon CloudWatch RUM app monitor, which collects\
        \ telemetry data from your application and sends that data to RUM. The data\
        \ includes performance and reliability information such as page load time,\
        \ client-side errors, and user behavior.</p> <p>You use this operation only\
        \ to create a new app monitor. To update an existing app monitor, use <a href=\"\
        https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_UpdateAppMonitor.html\"\
        >UpdateAppMonitor</a> instead.</p> <p>After you create an app monitor, sign\
        \ in to the CloudWatch RUM console to get the JavaScript code snippet to add\
        \ to your web application. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-find-code-snippet.html\"\
        >How do I find a code snippet that I've already generated?</a> </p>"
      operationId: create_app_monitor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppMonitor_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppMonitorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /appmonitor/{Name}:
    delete:
      description: Deletes an existing app monitor. This immediately stops the collection
        of data.
      operationId: delete_app_monitor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the app monitor to delete.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^(?!\\.)[\\.\\-_#A-Za-z0-9]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppMonitorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Retrieves the complete configuration information for one app monitor.
      operationId: get_app_monitor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The app monitor to retrieve information for.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^(?!\\.)[\\.\\-_#A-Za-z0-9]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppMonitorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    patch:
      description: "<p>Updates the configuration of an existing app monitor. When\
        \ you use this operation, only the parts of the app monitor configuration\
        \ that you specify in this operation are changed. For any parameters that\
        \ you omit, the existing values are kept.</p> <p>You can't use this operation\
        \ to change the tags of an existing app monitor. To change the tags of an\
        \ existing app monitor, use <a href=\"https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_TagResource.html\"\
        >TagResource</a>.</p> <p>To create a new app monitor, use <a href=\"https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_CreateAppMonitor.html\"\
        >CreateAppMonitor</a>.</p> <p>After you update an app monitor, sign in to\
        \ the CloudWatch RUM console to get the updated JavaScript code snippet to\
        \ add to your web application. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-find-code-snippet.html\"\
        >How do I find a code snippet that I've already generated?</a> </p>"
      operationId: update_app_monitor
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the app monitor to update.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^(?!\\.)[\\.\\-_#A-Za-z0-9]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppMonitor_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppMonitorResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /appmonitor/{Name}/data:
    post:
      description: "Retrieves the raw performance events that RUM has collected from\
        \ your web application, so that you can do your own processing or analysis\
        \ of this data."
      operationId: get_app_monitor_data
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the app monitor that collected the data that you
          want to retrieve.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^(?!\\.)[\\.\\-_#A-Za-z0-9]+$"
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAppMonitorData_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppMonitorDataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /appmonitors:
    post:
      description: Returns a list of the Amazon CloudWatch RUM app monitors in the
        account.
      operationId: list_app_monitors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to return in one operation. The
          default is 50. The maximum that you can specify is 100.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Use the token returned by the previous operation to request the
          next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppMonitorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /appmonitors/{Id}/:
    post:
      description: <p>Sends telemetry events about your application performance and
        user behavior to CloudWatch RUM. The code snippet that RUM generates for you
        to add to your application includes <code>PutRumEvents</code> operations to
        send this data to RUM.</p> <p>Each <code>PutRumEvents</code> operation can
        send a batch of events from one user session.</p>
      operationId: put_rum_events
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the app monitor that is sending this data.
        explode: false
        in: path
        name: Id
        required: true
        schema:
          maxLength: 36
          minLength: 36
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRumEvents_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRumEventsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /rummetrics/{AppMonitorName}/metrics:
    patch:
      description: "Modifies one existing metric definition for CloudWatch RUM extended\
        \ metrics. For more information about extended metrics, see <a href=\"https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_BatchCreateRumMetricsDefinitions.html\"\
        >BatchCreateRumMetricsDefinitions</a>."
      operationId: update_rum_metric_definition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the CloudWatch RUM app monitor that sends these metrics.
        explode: false
        in: path
        name: AppMonitorName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^(?!\\.)[\\.\\-_#A-Za-z0-9]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRumMetricDefinition_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRumMetricDefinitionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    post:
      description: "<p>Specifies the extended metrics and custom metrics that you\
        \ want a CloudWatch RUM app monitor to send to a destination. Valid destinations\
        \ include CloudWatch and Evidently.</p> <p>By default, RUM app monitors send\
        \ some metrics to CloudWatch. These default metrics are listed in <a href=\"\
        https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-metrics.html\"\
        >CloudWatch metrics that you can collect with CloudWatch RUM</a>.</p> <p>In\
        \ addition to these default metrics, you can choose to send extended metrics\
        \ or custom metrics or both.</p> <ul> <li> <p>Extended metrics enable you\
        \ to send metrics with additional dimensions not included in the default metrics.\
        \ You can also send extended metrics to Evidently as well as CloudWatch. The\
        \ valid dimension names for the additional dimensions for extended metrics\
        \ are <code>BrowserName</code>, <code>CountryCode</code>, <code>DeviceType</code>,\
        \ <code>FileType</code>, <code>OSName</code>, and <code>PageId</code>. For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-vended-metrics.html\"\
        > Extended metrics that you can send to CloudWatch and CloudWatch Evidently</a>.</p>\
        \ </li> <li> <p>Custom metrics are metrics that you define. You can send custom\
        \ metrics to CloudWatch or to CloudWatch Evidently or to both. With custom\
        \ metrics, you can use any metric name and namespace, and to derive the metrics\
        \ you can use any custom events, built-in events, custom attributes, or default\
        \ attributes. </p> <p>You can't send custom metrics to the <code>AWS/RUM</code>\
        \ namespace. You must send custom metrics to a custom namespace that you define.\
        \ The namespace that you use can't start with <code>AWS/</code>. CloudWatch\
        \ RUM prepends <code>RUM/CustomMetrics/</code> to the custom namespace that\
        \ you define, so the final namespace for your metrics in CloudWatch is <code>RUM/CustomMetrics/<i>your-custom-namespace</i>\
        \ </code>.</p> </li> </ul> <p>The maximum number of metric definitions that\
        \ you can specify in one <code>BatchCreateRumMetricDefinitions</code> operation\
        \ is 200.</p> <p>The maximum number of metric definitions that one destination\
        \ can contain is 2000.</p> <p>Extended metrics sent to CloudWatch and RUM\
        \ custom metrics are charged as CloudWatch custom metrics. Each combination\
        \ of additional dimension name and dimension value counts as a custom metric.\
        \ For more information, see <a href=\"https://aws.amazon.com/cloudwatch/pricing/\"\
        >Amazon CloudWatch Pricing</a>.</p> <p>You must have already created a destination\
        \ for the metrics before you send them. For more information, see <a href=\"\
        https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_PutRumMetricsDestination.html\"\
        >PutRumMetricsDestination</a>.</p> <p>If some metric definitions specified\
        \ in a <code>BatchCreateRumMetricDefinitions</code> operations are not valid,\
        \ those metric definitions fail and return errors, but all valid metric definitions\
        \ in the same operation still succeed.</p>"
      operationId: batch_create_rum_metric_definitions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the CloudWatch RUM app monitor that is to send the
          metrics.
        explode: false
        in: path
        name: AppMonitorName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^(?!\\.)[\\.\\-_#A-Za-z0-9]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateRumMetricDefinitions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreateRumMetricDefinitionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /rummetrics/{AppMonitorName}/metrics#destination:
    get:
      description: Retrieves the list of metrics and dimensions that a RUM app monitor
        is sending to a single destination.
      operationId: batch_get_rum_metric_definitions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the CloudWatch RUM app monitor that is sending the
          metrics.
        explode: false
        in: path
        name: AppMonitorName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^(?!\\.)[\\.\\-_#A-Za-z0-9]+$"
          type: string
        style: simple
      - description: The type of destination that you want to view metrics for. Valid
          values are <code>CloudWatch</code> and <code>Evidently</code>.
        explode: true
        in: query
        name: destination
        required: true
        schema:
          enum:
          - CloudWatch
          - Evidently
          type: string
        style: form
      - description: "<p>This parameter is required if <code>Destination</code> is\
          \ <code>Evidently</code>. If <code>Destination</code> is <code>CloudWatch</code>,\
          \ do not use this parameter.</p> <p>This parameter specifies the ARN of\
          \ the Evidently experiment that corresponds to the destination.</p>"
        explode: true
        in: query
        name: destinationArn
        required: false
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
          type: string
        style: form
      - description: "<p>The maximum number of results to return in one operation.\
          \ The default is 50. The maximum that you can specify is 100.</p> <p>To\
          \ retrieve the remaining results, make another call with the returned <code>NextToken</code>\
          \ value. </p>"
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Use the token returned by the previous operation to request the
          next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetRumMetricDefinitionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rummetrics/{AppMonitorName}/metrics#destination&metricDefinitionIds:
    delete:
      description: "<p>Removes the specified metrics from being sent to an extended\
        \ metrics destination.</p> <p>If some metric definition IDs specified in a\
        \ <code>BatchDeleteRumMetricDefinitions</code> operations are not valid, those\
        \ metric definitions fail and return errors, but all valid metric definition\
        \ IDs in the same operation are still deleted.</p> <p>The maximum number of\
        \ metric definitions that you can specify in one <code>BatchDeleteRumMetricDefinitions</code>\
        \ operation is 200.</p>"
      operationId: batch_delete_rum_metric_definitions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the CloudWatch RUM app monitor that is sending these
          metrics.
        explode: false
        in: path
        name: AppMonitorName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^(?!\\.)[\\.\\-_#A-Za-z0-9]+$"
          type: string
        style: simple
      - description: "Defines the destination where you want to stop sending the specified\
          \ metrics. Valid values are <code>CloudWatch</code> and <code>Evidently</code>.\
          \ If you specify <code>Evidently</code>, you must also specify the ARN of\
          \ the CloudWatchEvidently experiment that is to be the destination and an\
          \ IAM role that has permission to write to the experiment."
        explode: true
        in: query
        name: destination
        required: true
        schema:
          enum:
          - CloudWatch
          - Evidently
          type: string
        style: form
      - description: "<p>This parameter is required if <code>Destination</code> is\
          \ <code>Evidently</code>. If <code>Destination</code> is <code>CloudWatch</code>,\
          \ do not use this parameter. </p> <p>This parameter specifies the ARN of\
          \ the Evidently experiment that was receiving the metrics that are being\
          \ deleted.</p>"
        explode: true
        in: query
        name: destinationArn
        required: false
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
          type: string
        style: form
      - description: An array of structures which define the metrics that you want
          to stop sending.
        explode: true
        in: query
        name: metricDefinitionIds
        required: true
        schema:
          items:
            $ref: '#/components/schemas/MetricDefinitionId'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeleteRumMetricDefinitionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /rummetrics/{AppMonitorName}/metricsdestination:
    get:
      description: "<p>Returns a list of destinations that you have created to receive\
        \ RUM extended metrics, for the specified app monitor.</p> <p>For more information\
        \ about extended metrics, see <a href=\"https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_AddRumMetrcs.html\"\
        >AddRumMetrics</a>.</p>"
      operationId: list_rum_metrics_destinations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the app monitor associated with the destinations
          that you want to retrieve.
        explode: false
        in: path
        name: AppMonitorName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^(?!\\.)[\\.\\-_#A-Za-z0-9]+$"
          type: string
        style: simple
      - description: "<p>The maximum number of results to return in one operation.\
          \ The default is 50. The maximum that you can specify is 100.</p> <p>To\
          \ retrieve the remaining results, make another call with the returned <code>NextToken</code>\
          \ value. </p>"
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Use the token returned by the previous operation to request the
          next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRumMetricsDestinationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Creates or updates a destination to receive extended metrics\
        \ from CloudWatch RUM. You can send extended metrics to CloudWatch or to a\
        \ CloudWatch Evidently experiment.</p> <p>For more information about extended\
        \ metrics, see <a href=\"https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_BatchCreateRumMetricDefinitions.html\"\
        >BatchCreateRumMetricDefinitions</a>.</p>"
      operationId: put_rum_metrics_destination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the CloudWatch RUM app monitor that will send the
          metrics.
        explode: false
        in: path
        name: AppMonitorName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^(?!\\.)[\\.\\-_#A-Za-z0-9]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRumMetricsDestination_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRumMetricsDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /rummetrics/{AppMonitorName}/metricsdestination#destination:
    delete:
      description: "Deletes a destination for CloudWatch RUM extended metrics, so\
        \ that the specified app monitor stops sending extended metrics to that destination."
      operationId: delete_rum_metrics_destination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the app monitor that is sending metrics to the destination
          that you want to delete.
        explode: false
        in: path
        name: AppMonitorName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^(?!\\.)[\\.\\-_#A-Za-z0-9]+$"
          type: string
        style: simple
      - description: The type of destination to delete. Valid values are <code>CloudWatch</code>
          and <code>Evidently</code>.
        explode: true
        in: query
        name: destination
        required: true
        schema:
          enum:
          - CloudWatch
          - Evidently
          type: string
        style: form
      - description: "This parameter is required if <code>Destination</code> is <code>Evidently</code>.\
          \ If <code>Destination</code> is <code>CloudWatch</code>, do not use this\
          \ parameter. This parameter specifies the ARN of the Evidently experiment\
          \ that corresponds to the destination to delete."
        explode: true
        in: query
        name: destinationArn
        required: false
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRumMetricsDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /tags/{ResourceArn}:
    get:
      description: Displays the tags associated with a CloudWatch RUM resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource that you want to see the tags of.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "<p>Assigns one or more tags (key-value pairs) to the specified\
        \ CloudWatch RUM resource. Currently, the only resources that can be tagged\
        \ app monitors.</p> <p>Tags can help you organize and categorize your resources.\
        \ You can also use them to scope user permissions by granting a user permission\
        \ to access or change only resources with certain tag values.</p> <p>Tags\
        \ don't have any semantic meaning to Amazon Web Services and are interpreted\
        \ strictly as strings of characters.</p> <p>You can use the <code>TagResource</code>\
        \ action with a resource that already has tags. If you specify a new tag key\
        \ for the resource, this tag is appended to the list of tags associated with\
        \ the alarm. If you specify a tag key that is already associated with the\
        \ resource, the new tag value that you specify replaces the previous value\
        \ for that tag.</p> <p>You can associate as many as 50 tags with a resource.</p>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
        >Tagging Amazon Web Services resources</a>.</p>"
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the CloudWatch RUM resource that you're adding tags
          to.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{ResourceArn}#tagKeys:
    delete:
      description: Removes one or more tags from the specified resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the CloudWatch RUM resource that you're removing tags
          from.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
          type: string
        style: simple
      - description: The list of tag keys to remove from the resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BatchCreateRumMetricDefinitionsResponse:
      example:
        Errors: ""
        MetricDefinitions: ""
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/BatchCreateRumMetricDefinitionsErrors'
          - description: "An array of error objects, if the operation caused any errors."
          title: Errors
        MetricDefinitions:
          allOf:
          - $ref: '#/components/schemas/MetricDefinitions'
          - description: An array of structures that define the extended metrics.
          title: MetricDefinitions
      required:
      - Errors
      title: BatchCreateRumMetricDefinitionsResponse
      type: object
    MetricDefinitionRequest:
      description: "<p>Use this structure to define one extended metric or custom\
        \ metric that RUM will send to CloudWatch or CloudWatch Evidently. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-vended-metrics.html\"\
        > Additional metrics that you can send to CloudWatch and CloudWatch Evidently</a>.</p>\
        \ <p>This structure is validated differently for extended metrics and custom\
        \ metrics. For extended metrics that are sent to the <code>AWS/RUM</code>\
        \ namespace, the following validations apply:</p> <ul> <li> <p>The <code>Namespace</code>\
        \ parameter must be omitted or set to <code>AWS/RUM</code>.</p> </li> <li>\
        \ <p>Only certain combinations of values for <code>Name</code>, <code>ValueKey</code>,\
        \ and <code>EventPattern</code> are valid. In addition to what is displayed\
        \ in the list below, the <code>EventPattern</code> can also include information\
        \ used by the <code>DimensionKeys</code> field.</p> <ul> <li> <p>If <code>Name</code>\
        \ is <code>PerformanceNavigationDuration</code>, then <code>ValueKey</code>must\
        \ be <code>event_details.duration</code> and the <code>EventPattern</code>\
        \ must include <code>{\"event_type\":[\"com.amazon.rum.performance_navigation_event\"\
        ]}</code> </p> </li> <li> <p>If <code>Name</code> is <code>PerformanceResourceDuration</code>,\
        \ then <code>ValueKey</code>must be <code>event_details.duration</code> and\
        \ the <code>EventPattern</code> must include <code>{\"event_type\":[\"com.amazon.rum.performance_resource_event\"\
        ]}</code> </p> </li> <li> <p>If <code>Name</code> is <code>NavigationSatisfiedTransaction</code>,\
        \ then <code>ValueKey</code>must be null and the <code>EventPattern</code>\
        \ must include <code>{ \"event_type\": [\"com.amazon.rum.performance_navigation_event\"\
        ], \"event_details\": { \"duration\": [{ \"numeric\": [\"&gt;\",2000] }] }\
        \ }</code> </p> </li> <li> <p>If <code>Name</code> is <code>NavigationToleratedTransaction</code>,\
        \ then <code>ValueKey</code>must be null and the <code>EventPattern</code>\
        \ must include <code>{ \"event_type\": [\"com.amazon.rum.performance_navigation_event\"\
        ], \"event_details\": { \"duration\": [{ \"numeric\": [\"&gt;=\",2000,\"&lt;\"\
        8000] }] } }</code> </p> </li> <li> <p>If <code>Name</code> is <code>NavigationFrustratedTransaction</code>,\
        \ then <code>ValueKey</code>must be null and the <code>EventPattern</code>\
        \ must include <code>{ \"event_type\": [\"com.amazon.rum.performance_navigation_event\"\
        ], \"event_details\": { \"duration\": [{ \"numeric\": [\"&gt;=\",8000] }]\
        \ } }</code> </p> </li> <li> <p>If <code>Name</code> is <code>WebVitalsCumulativeLayoutShift</code>,\
        \ then <code>ValueKey</code>must be <code>event_details.value</code> and the\
        \ <code>EventPattern</code> must include <code>{\"event_type\":[\"com.amazon.rum.cumulative_layout_shift_event\"\
        ]}</code> </p> </li> <li> <p>If <code>Name</code> is <code>WebVitalsFirstInputDelay</code>,\
        \ then <code>ValueKey</code>must be <code>event_details.value</code> and the\
        \ <code>EventPattern</code> must include <code>{\"event_type\":[\"com.amazon.rum.first_input_delay_event\"\
        ]}</code> </p> </li> <li> <p>If <code>Name</code> is <code>WebVitalsLargestContentfulPaint</code>,\
        \ then <code>ValueKey</code>must be <code>event_details.value</code> and the\
        \ <code>EventPattern</code> must include <code>{\"event_type\":[\"com.amazon.rum.largest_contentful_paint_event\"\
        ]}</code> </p> </li> <li> <p>If <code>Name</code> is <code>JsErrorCount</code>,\
        \ then <code>ValueKey</code>must be null and the <code>EventPattern</code>\
        \ must include <code>{\"event_type\":[\"com.amazon.rum.js_error_event\"]}</code>\
        \ </p> </li> <li> <p>If <code>Name</code> is <code>HttpErrorCount</code>,\
        \ then <code>ValueKey</code>must be null and the <code>EventPattern</code>\
        \ must include <code>{\"event_type\":[\"com.amazon.rum.http_event\"]}</code>\
        \ </p> </li> <li> <p>If <code>Name</code> is <code>SessionCount</code>, then\
        \ <code>ValueKey</code>must be null and the <code>EventPattern</code> must\
        \ include <code>{\"event_type\":[\"com.amazon.rum.session_start_event\"]}</code>\
        \ </p> </li> </ul> </li> </ul> <p>For custom metrics, the following validation\
        \ rules apply:</p> <ul> <li> <p>The namespace can't be omitted and can't be\
        \ <code>AWS/RUM</code>. You can use the <code>AWS/RUM</code> namespace only\
        \ for extended metrics.</p> </li> <li> <p>All dimensions listed in the <code>DimensionKeys</code>\
        \ field must be present in the value of <code>EventPattern</code>.</p> </li>\
        \ <li> <p>The values that you specify for <code>ValueKey</code>, <code>EventPattern</code>,\
        \ and <code>DimensionKeys</code> must be fields in RUM events, so all first-level\
        \ keys in these fields must be one of the keys in the list later in this section.</p>\
        \ </li> <li> <p>If you set a value for <code>EventPattern</code>, it must\
        \ be a JSON object.</p> </li> <li> <p>For every non-empty <code>event_details</code>,\
        \ there must be a non-empty <code>event_type</code>.</p> </li> <li> <p>If\
        \ <code>EventPattern</code> contains an <code>event_details</code> field,\
        \ it must also contain an <code>event_type</code>. For every built-in <code>event_type</code>\
        \ that you use, you must use a value for <code>event_details</code> that corresponds\
        \ to that <code>event_type</code>. For information about event details that\
        \ correspond to event types, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-datacollected.html#CloudWatch-RUM-datacollected-eventDetails\"\
        > RUM event details</a>.</p> </li> <li> <p>In <code>EventPattern</code>, any\
        \ JSON array must contain only one value.</p> </li> </ul> <p>Valid key values\
        \ for first-level keys in the <code>ValueKey</code>, <code>EventPattern</code>,\
        \ and <code>DimensionKeys</code> fields:</p> <ul> <li> <p> <code>account_id</code>\
        \ </p> </li> <li> <p> <code>application_Id</code> </p> </li> <li> <p> <code>application_version</code>\
        \ </p> </li> <li> <p> <code>application_name</code> </p> </li> <li> <p> <code>batch_id</code>\
        \ </p> </li> <li> <p> <code>event_details</code> </p> </li> <li> <p> <code>event_id</code>\
        \ </p> </li> <li> <p> <code>event_interaction</code> </p> </li> <li> <p> <code>event_timestamp</code>\
        \ </p> </li> <li> <p> <code>event_type</code> </p> </li> <li> <p> <code>event_version</code>\
        \ </p> </li> <li> <p> <code>log_stream</code> </p> </li> <li> <p> <code>metadata</code>\
        \ </p> </li> <li> <p> <code>sessionId</code> </p> </li> <li> <p> <code>user_details</code>\
        \ </p> </li> <li> <p> <code>userId</code> </p> </li> </ul>"
      properties:
        DimensionKeys:
          allOf:
          - $ref: '#/components/schemas/DimensionKeysMap'
          - description: "<p>Use this field only if you are sending the metric to\
              \ CloudWatch.</p> <p>This field is a map of field paths to dimension\
              \ names. It defines the dimensions to associate with this metric in\
              \ CloudWatch. For extended metrics, valid values for the entries in\
              \ this field are the following:</p> <ul> <li> <p> <code>\"metadata.pageId\"\
              : \"PageId\"</code> </p> </li> <li> <p> <code>\"metadata.browserName\"\
              : \"BrowserName\"</code> </p> </li> <li> <p> <code>\"metadata.deviceType\"\
              : \"DeviceType\"</code> </p> </li> <li> <p> <code>\"metadata.osName\"\
              : \"OSName\"</code> </p> </li> <li> <p> <code>\"metadata.countryCode\"\
              : \"CountryCode\"</code> </p> </li> <li> <p> <code>\"event_details.fileType\"\
              : \"FileType\"</code> </p> </li> </ul> <p> For both extended metrics\
              \ and custom metrics, all dimensions listed in this field must also\
              \ be included in <code>EventPattern</code>.</p>"
          title: DimensionKeys
        EventPattern:
          allOf:
          - $ref: '#/components/schemas/EventPattern'
          - description: "<p>The pattern that defines the metric, specified as a JSON\
              \ object. RUM checks events that happen in a user's session against\
              \ the pattern, and events that match the pattern are sent to the metric\
              \ destination.</p> <p>When you define extended metrics, the metric definition\
              \ is not valid if <code>EventPattern</code> is omitted.</p> <p>Example\
              \ event patterns:</p> <ul> <li> <p> <code>'{ \"event_type\": [\"com.amazon.rum.js_error_event\"\
              ], \"metadata\": { \"browserName\": [ \"Chrome\", \"Safari\" ], } }'</code>\
              \ </p> </li> <li> <p> <code>'{ \"event_type\": [\"com.amazon.rum.performance_navigation_event\"\
              ], \"metadata\": { \"browserName\": [ \"Chrome\", \"Firefox\" ] }, \"\
              event_details\": { \"duration\": [{ \"numeric\": [ \"&lt;\", 2000 ]\
              \ }] } }'</code> </p> </li> <li> <p> <code>'{ \"event_type\": [\"com.amazon.rum.performance_navigation_event\"\
              ], \"metadata\": { \"browserName\": [ \"Chrome\", \"Safari\" ], \"countryCode\"\
              : [ \"US\" ] }, \"event_details\": { \"duration\": [{ \"numeric\": [\
              \ \"&gt;=\", 2000, \"&lt;\", 8000 ] }] } }'</code> </p> </li> </ul>\
              \ <p>If the metrics destination' is <code>CloudWatch</code> and the\
              \ event also matches a value in <code>DimensionKeys</code>, then the\
              \ metric is published with the specified dimensions. </p>"
          title: EventPattern
        Name:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          - description: "<p>The name for the metric that is defined in this structure.\
              \ For custom metrics, you can specify any name that you like. For extended\
              \ metrics, valid values are the following:</p> <ul> <li> <p> <code>PerformanceNavigationDuration</code>\
              \ </p> </li> <li> <p> <code>PerformanceResourceDuration </code> </p>\
              \ </li> <li> <p> <code>NavigationSatisfiedTransaction</code> </p> </li>\
              \ <li> <p> <code>NavigationToleratedTransaction</code> </p> </li> <li>\
              \ <p> <code>NavigationFrustratedTransaction</code> </p> </li> <li> <p>\
              \ <code>WebVitalsCumulativeLayoutShift</code> </p> </li> <li> <p> <code>WebVitalsFirstInputDelay</code>\
              \ </p> </li> <li> <p> <code>WebVitalsLargestContentfulPaint</code> </p>\
              \ </li> <li> <p> <code>JsErrorCount</code> </p> </li> <li> <p> <code>HttpErrorCount</code>\
              \ </p> </li> <li> <p> <code>SessionCount</code> </p> </li> </ul>"
          title: Name
        Namespace:
          allOf:
          - $ref: '#/components/schemas/Namespace'
          - description: "<p>If this structure is for a custom metric instead of an\
              \ extended metrics, use this parameter to define the metric namespace\
              \ for that custom metric. Do not specify this parameter if this structure\
              \ is for an extended metric.</p> <p>You cannot use any string that starts\
              \ with <code>AWS/</code> for your namespace.</p>"
          title: Namespace
        UnitLabel:
          allOf:
          - $ref: '#/components/schemas/UnitLabel'
          - description: "The CloudWatch metric unit to use for this metric. If you\
              \ omit this field, the metric is recorded with no unit."
          title: UnitLabel
        ValueKey:
          allOf:
          - $ref: '#/components/schemas/ValueKey'
          - description: "<p>The field within the event object that the metric value\
              \ is sourced from.</p> <p>If you omit this field, a hardcoded value\
              \ of 1 is pushed as the metric value. This is useful if you just want\
              \ to count the number of events that the filter catches. </p> <p>If\
              \ this metric is sent to CloudWatch Evidently, this field will be passed\
              \ to Evidently raw and Evidently will handle data extraction from the\
              \ event.</p>"
          title: ValueKey
      required:
      - Name
      title: MetricDefinitionRequest
      type: object
    ConflictException: {}
    ServiceQuotaExceededException: {}
    ResourceNotFoundException: {}
    InternalServerException: {}
    ValidationException: {}
    ThrottlingException: {}
    AccessDeniedException: {}
    BatchDeleteRumMetricDefinitionsResponse:
      example:
        Errors: ""
        MetricDefinitionIds: ""
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/BatchDeleteRumMetricDefinitionsErrors'
          - description: "An array of error objects, if the operation caused any errors."
          title: Errors
        MetricDefinitionIds:
          allOf:
          - $ref: '#/components/schemas/MetricDefinitionIds'
          - description: The IDs of the metric definitions that were deleted.
          title: MetricDefinitionIds
      required:
      - Errors
      title: BatchDeleteRumMetricDefinitionsResponse
      type: object
    MetricDefinitionId:
      maxLength: 255
      minLength: 1
      title: MetricDefinitionId
      type: string
    BatchGetRumMetricDefinitionsResponse:
      example:
        NextToken: ""
        MetricDefinitions: ""
      properties:
        MetricDefinitions:
          allOf:
          - $ref: '#/components/schemas/MetricDefinitions'
          - description: An array of structures that display information about the
              metrics that are sent by the specified app monitor to the specified
              destination.
          title: MetricDefinitions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A token that you can use in a subsequent operation to retrieve
              the next set of results.
          title: NextToken
      title: BatchGetRumMetricDefinitionsResponse
      type: object
    CreateAppMonitorResponse:
      example:
        Id: ""
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/AppMonitorId'
          - description: The unique ID of the new app monitor.
          title: Id
      title: CreateAppMonitorResponse
      type: object
    Boolean:
      type: boolean
    Pages:
      items:
        $ref: '#/components/schemas/Url'
      maxItems: 50
      minItems: 0
      type: array
    FavoritePages:
      items:
        $ref: '#/components/schemas/String'
      maxItems: 50
      minItems: 0
      type: array
    Arn:
      pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
      type: string
    IdentityPoolId:
      maxLength: 55
      minLength: 1
      pattern: "[\\w-]+:[0-9a-f-]+"
      type: string
    SessionSampleRate:
      format: double
      maximum: 1
      minimum: 0
      type: number
    Telemetries:
      items:
        $ref: '#/components/schemas/Telemetry'
      type: array
    CustomEventsStatus:
      enum:
      - ENABLED
      - DISABLED
      title: CustomEventsStatus
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      title: TagValue
      type: string
    DeleteAppMonitorResponse:
      properties: {}
      type: object
    DeleteRumMetricsDestinationResponse:
      properties: {}
      type: object
    GetAppMonitorResponse:
      example:
        AppMonitor:
          CustomEvents:
            Status: ""
          LastModified: ""
          DataStorage:
            CwLog:
              CwLogEnabled: ""
              CwLogGroup: ""
          State: ""
          Id: ""
          Domain: ""
          AppMonitorConfiguration:
            IncludedPages: ""
            ExcludedPages: ""
            FavoritePages: ""
            SessionSampleRate: ""
            AllowCookies: ""
            Telemetries: ""
            IdentityPoolId: ""
            GuestRoleArn: ""
            EnableXRay: ""
          Tags: ""
          Created: ""
          Name: ""
      properties:
        AppMonitor:
          $ref: '#/components/schemas/GetAppMonitorResponse_AppMonitor'
      title: GetAppMonitorResponse
      type: object
    GetAppMonitorDataResponse:
      example:
        NextToken: ""
        Events: ""
      properties:
        Events:
          allOf:
          - $ref: '#/components/schemas/EventDataList'
          - description: The events that RUM collected that match your request.
          title: Events
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: A token that you can use in a subsequent operation to retrieve
              the next set of results.
          title: NextToken
      title: GetAppMonitorDataResponse
      type: object
    QueryFilter:
      description: "<p>A structure that defines a key and values that you can use\
        \ to filter the results. The only performance events that are returned are\
        \ those that have values matching the ones that you specify in one of your\
        \ <code>QueryFilter</code> structures.</p> <p>For example, you could specify\
        \ <code>Browser</code> as the <code>Name</code> and specify <code>Chrome,Firefox</code>\
        \ as the <code>Values</code> to return events generated only from those browsers.</p>\
        \ <p>Specifying <code>Invert</code> as the <code>Name</code> works as a \"\
        not equal to\" filter. For example, specify <code>Invert</code> as the <code>Name</code>\
        \ and specify <code>Chrome</code> as the value to return all events except\
        \ events from user sessions with the Chrome browser.</p>"
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/QueryFilterKey'
          - description: <p>The name of a key to search for. The filter returns only
              the events that match the <code>Name</code> and <code>Values</code>
              that you specify. </p> <p>Valid values for <code>Name</code> are <code>Browser</code>
              | <code>Device</code> | <code>Country</code> | <code>Page</code> | <code>OS</code>
              | <code>EventType</code> | <code>Invert</code> </p>
          title: Name
        Values:
          allOf:
          - $ref: '#/components/schemas/QueryFilterValueList'
          - description: The values of the <code>Name</code> that are to be be included
              in the returned results.
          title: Values
      title: QueryFilter
      type: object
    QueryTimestamp:
      type: integer
    ListAppMonitorsResponse:
      example:
        NextToken: ""
        AppMonitorSummaries: ""
      properties:
        AppMonitorSummaries:
          allOf:
          - $ref: '#/components/schemas/AppMonitorSummaryList'
          - description: An array of structures that contain information about the
              returned app monitors.
          title: AppMonitorSummaries
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A token that you can use in a subsequent operation to retrieve
              the next set of results.
          title: NextToken
      title: ListAppMonitorsResponse
      type: object
    ListRumMetricsDestinationsResponse:
      example:
        NextToken: ""
        Destinations: ""
      properties:
        Destinations:
          allOf:
          - $ref: '#/components/schemas/MetricDestinationSummaryList'
          - description: The list of CloudWatch RUM extended metrics destinations
              associated with the app monitor that you specified.
          title: Destinations
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A token that you can use in a subsequent operation to retrieve
              the next set of results.
          title: NextToken
      title: ListRumMetricsDestinationsResponse
      type: object
    ListTagsForResourceResponse:
      example:
        ResourceArn: ""
        Tags: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the resource that you are viewing.
          title: ResourceArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tag keys and values associated with the resource
              you specified.
          title: Tags
      required:
      - ResourceArn
      - Tags
      title: ListTagsForResourceResponse
      type: object
    PutRumEventsResponse:
      properties: {}
      type: object
    String:
      title: String
      type: string
    RumEvent:
      description: A structure that contains the information for one performance event
        that RUM collects from a user session with your application.
      properties:
        details:
          allOf:
          - $ref: '#/components/schemas/JsonValue'
          - description: A string containing details about the event.
          title: details
        id:
          allOf:
          - $ref: '#/components/schemas/RumEventIdString'
          - description: A unique ID for this event.
          title: id
        metadata:
          allOf:
          - $ref: '#/components/schemas/JsonValue'
          - description: "Metadata about this event, which contains a JSON serialization\
              \ of the identity of the user for this session. The user information\
              \ comes from information such as the HTTP user-agent request header\
              \ and document interface."
          title: metadata
        timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The exact time that this event occurred.
          title: timestamp
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The JSON schema that denotes the type of event this is,\
              \ such as a page load or a new session."
          title: type
      required:
      - details
      - id
      - timestamp
      - type
      title: RumEvent
      type: object
    UserDetailsSessionIdString:
      maxLength: 36
      minLength: 36
      pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      type: string
    UserDetailsUserIdString:
      maxLength: 36
      minLength: 36
      pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      type: string
    PutRumMetricsDestinationResponse:
      properties: {}
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(?!aws:)[a-zA-Z+-=._:/]+$"
      title: TagKey
      type: string
    UpdateAppMonitorResponse:
      properties: {}
      type: object
    UpdateRumMetricDefinitionResponse:
      properties: {}
      type: object
    DimensionKeysMap:
      additionalProperties:
        $ref: '#/components/schemas/DimensionName'
      maxProperties: 29
      minProperties: 0
      type: object
    EventPattern:
      maxLength: 4000
      minLength: 0
      type: string
    MetricName:
      maxLength: 255
      minLength: 1
      type: string
    Namespace:
      maxLength: 237
      minLength: 1
      pattern: "[a-zA-Z0-9-._/#:]+$"
      type: string
    UnitLabel:
      maxLength: 256
      minLength: 1
      type: string
    ValueKey:
      maxLength: 280
      minLength: 1
      type: string
    AppMonitorConfiguration:
      description: This structure contains much of the configuration data for the
        app monitor.
      properties:
        AllowCookies:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If you set this to <code>true</code>, the RUM web client\
              \ sets two cookies, a session cookie and a user cookie. The cookies\
              \ allow the RUM web client to collect data relating to the number of\
              \ users an application has and the behavior of the application across\
              \ a sequence of events. Cookies are stored in the top-level domain of\
              \ the current page."
          title: AllowCookies
        EnableXRay:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If you set this to <code>true</code>, RUM enables X-Ray\
              \ tracing for the user sessions that RUM samples. RUM adds an X-Ray\
              \ trace header to allowed HTTP requests. It also records an X-Ray segment\
              \ for allowed HTTP requests. You can see traces and segments from these\
              \ user sessions in the X-Ray console and the CloudWatch ServiceLens\
              \ console. For more information, see <a href=\"https://docs.aws.amazon.com/xray/latest/devguide/aws-xray.html\"\
              >What is X-Ray?</a> "
          title: EnableXRay
        ExcludedPages:
          allOf:
          - $ref: '#/components/schemas/Pages'
          - description: <p>A list of URLs in your website or application to exclude
              from RUM data collection.</p> <p>You can't include both <code>ExcludedPages</code>
              and <code>IncludedPages</code> in the same operation.</p>
          title: ExcludedPages
        FavoritePages:
          allOf:
          - $ref: '#/components/schemas/FavoritePages'
          - description: A list of pages in your application that are to be displayed
              with a "favorite" icon in the CloudWatch RUM console.
          title: FavoritePages
        GuestRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the guest IAM role that is attached to the Amazon
              Cognito identity pool that is used to authorize the sending of data
              to RUM.
          title: GuestRoleArn
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          - description: The ID of the Amazon Cognito identity pool that is used to
              authorize the sending of data to RUM.
          title: IdentityPoolId
        IncludedPages:
          allOf:
          - $ref: '#/components/schemas/Pages'
          - description: "<p>If this app monitor is to collect data from only certain\
              \ pages in your application, this structure lists those pages. </p>\
              \ <p>You can't include both <code>ExcludedPages</code> and <code>IncludedPages</code>\
              \ in the same operation.</p>"
          title: IncludedPages
        SessionSampleRate:
          allOf:
          - $ref: '#/components/schemas/SessionSampleRate'
          - description: "<p>Specifies the portion of user sessions to use for RUM\
              \ data collection. Choosing a higher portion gives you more data but\
              \ also incurs more costs.</p> <p>The range for this value is 0 to 1\
              \ inclusive. Setting this to 1 means that 100% of user sessions are\
              \ sampled, and setting it to 0.1 means that 10% of user sessions are\
              \ sampled.</p> <p>If you omit this parameter, the default of 0.1 is\
              \ used, and 10% of sessions will be sampled.</p>"
          title: SessionSampleRate
        Telemetries:
          allOf:
          - $ref: '#/components/schemas/Telemetries'
          - description: <p>An array that lists the types of telemetry data that this
              app monitor is to collect.</p> <ul> <li> <p> <code>errors</code> indicates
              that RUM collects data about unhandled JavaScript errors raised by your
              application.</p> </li> <li> <p> <code>performance</code> indicates that
              RUM collects performance data about how your application and its resources
              are loaded and rendered. This includes Core Web Vitals.</p> </li> <li>
              <p> <code>http</code> indicates that RUM collects data about HTTP errors
              thrown by your application.</p> </li> </ul>
          title: Telemetries
      title: AppMonitorConfiguration
      type: object
    ISOTimestampString:
      maxLength: 19
      minLength: 19
      type: string
    CustomEvents:
      description: A structure that contains information about custom events for this
        app monitor.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/CustomEventsStatus'
          - description: Specifies whether this app monitor allows the web client
              to define and send custom events. The default is for custom events to
              be <code>DISABLED</code>.
          title: Status
      title: CustomEvents
      type: object
    DataStorage:
      description: A structure that contains information about whether this app monitor
        stores a copy of the telemetry data that RUM collects using CloudWatch Logs.
      properties:
        CwLog:
          $ref: '#/components/schemas/DataStorage_CwLog'
      title: DataStorage
      type: object
    AppMonitorDomain:
      maxLength: 253
      minLength: 1
      pattern: "^(localhost)|^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?![-.])([A-Za-z0-9-\\\
        .\\-]{0,63})((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))\\.(?![-])[A-Za-z-0-9]{1,63}((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))|^(\\\
        *\\.)(?![-.])([A-Za-z0-9-\\.\\-]{0,63})((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))\\\
        .(?![-])[A-Za-z-0-9]{1,63}((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))"
      type: string
    AppMonitorId:
      maxLength: 36
      minLength: 36
      pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      type: string
    AppMonitorName:
      maxLength: 255
      minLength: 1
      pattern: "^(?!\\.)[\\.\\-_#A-Za-z0-9]+$"
      type: string
    StateEnum:
      enum:
      - CREATED
      - DELETING
      - ACTIVE
      title: StateEnum
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      type: object
    AppMonitor:
      description: "A RUM app monitor collects telemetry data from your application\
        \ and sends that data to RUM. The data includes performance and reliability\
        \ information such as page load time, client-side errors, and user behavior."
      properties:
        AppMonitorConfiguration:
          $ref: '#/components/schemas/AppMonitor_AppMonitorConfiguration'
        Created:
          allOf:
          - $ref: '#/components/schemas/ISOTimestampString'
          - description: The date and time that this app monitor was created.
          title: Created
        CustomEvents:
          $ref: '#/components/schemas/AppMonitor_CustomEvents'
        DataStorage:
          $ref: '#/components/schemas/AppMonitor_DataStorage'
        Domain:
          allOf:
          - $ref: '#/components/schemas/AppMonitorDomain'
          - description: The top-level internet domain name for which your application
              has administrative authority.
          title: Domain
        Id:
          allOf:
          - $ref: '#/components/schemas/AppMonitorId'
          - description: The unique ID of this app monitor.
          title: Id
        LastModified:
          allOf:
          - $ref: '#/components/schemas/ISOTimestampString'
          - description: The date and time of the most recent changes to this app
              monitor's configuration.
          title: LastModified
        Name:
          allOf:
          - $ref: '#/components/schemas/AppMonitorName'
          - description: The name of the app monitor.
          title: Name
        State:
          allOf:
          - $ref: '#/components/schemas/StateEnum'
          - description: The current state of the app monitor.
          title: State
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tag keys and values associated with this app
              monitor.
          title: Tags
      title: AppMonitor
      type: object
    AppMonitorDetails:
      description: A structure that contains information about the RUM app monitor.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the app monitor.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the app monitor.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the app monitor.
          title: version
      title: AppMonitorDetails
      type: object
    AppMonitorSummary:
      description: A structure that includes some data about app monitors and their
        settings.
      properties:
        Created:
          allOf:
          - $ref: '#/components/schemas/ISOTimestampString'
          - description: The date and time that the app monitor was created.
          title: Created
        Id:
          allOf:
          - $ref: '#/components/schemas/AppMonitorId'
          - description: The unique ID of this app monitor.
          title: Id
        LastModified:
          allOf:
          - $ref: '#/components/schemas/ISOTimestampString'
          - description: The date and time of the most recent changes to this app
              monitor's configuration.
          title: LastModified
        Name:
          allOf:
          - $ref: '#/components/schemas/AppMonitorName'
          - description: The name of this app monitor.
          title: Name
        State:
          allOf:
          - $ref: '#/components/schemas/StateEnum'
          - description: The current state of this app monitor.
          title: State
      title: AppMonitorSummary
      type: object
    AppMonitorSummaryList:
      items:
        $ref: '#/components/schemas/AppMonitorSummary'
      type: array
    BatchCreateRumMetricDefinitionsError:
      description: A structure that defines one error caused by a <a href="https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_BatchCreateRumMetricsDefinitions.html">BatchCreateRumMetricsDefinitions</a>
        operation.
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error code.
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message for this metric definition.
          title: ErrorMessage
        MetricDefinition:
          $ref: '#/components/schemas/BatchCreateRumMetricDefinitionsError_MetricDefinition'
      required:
      - ErrorCode
      - ErrorMessage
      - MetricDefinition
      title: BatchCreateRumMetricDefinitionsError
      type: object
    BatchCreateRumMetricDefinitionsErrors:
      items:
        $ref: '#/components/schemas/BatchCreateRumMetricDefinitionsError'
      type: array
    MetricDestination:
      enum:
      - CloudWatch
      - Evidently
      title: MetricDestination
      type: string
    DestinationArn:
      maxLength: 2048
      minLength: 0
      pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
      type: string
    MetricDefinitionsRequest:
      items:
        $ref: '#/components/schemas/MetricDefinitionRequest'
      type: array
    BatchCreateRumMetricDefinitionsRequest:
      example:
        Destination: ""
        MetricDefinitions: ""
        DestinationArn: ""
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/MetricDestination'
          - description: "The destination to send the metrics to. Valid values are\
              \ <code>CloudWatch</code> and <code>Evidently</code>. If you specify\
              \ <code>Evidently</code>, you must also specify the ARN of the CloudWatchEvidently\
              \ experiment that will receive the metrics and an IAM role that has\
              \ permission to write to the experiment."
        DestinationArn:
          allOf:
          - $ref: '#/components/schemas/DestinationArn'
          - description: "<p>This parameter is required if <code>Destination</code>\
              \ is <code>Evidently</code>. If <code>Destination</code> is <code>CloudWatch</code>,\
              \ do not use this parameter.</p> <p>This parameter specifies the ARN\
              \ of the Evidently experiment that is to receive the metrics. You must\
              \ have already defined this experiment as a valid destination. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_PutRumMetricsDestination.html\"\
              >PutRumMetricsDestination</a>.</p>"
        MetricDefinitions:
          allOf:
          - $ref: '#/components/schemas/MetricDefinitionsRequest'
          - description: An array of structures which define the metrics that you
              want to send.
      required:
      - Destination
      - MetricDefinitions
      title: BatchCreateRumMetricDefinitionsRequest
      type: object
    MetricDefinitions:
      items:
        $ref: '#/components/schemas/MetricDefinition'
      type: array
    BatchDeleteRumMetricDefinitionsError:
      description: A structure that defines one error caused by a <a href="https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_BatchDeleteRumMetricsDefinitions.html">BatchCreateRumMetricsDefinitions</a>
        operation.
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error code.
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message for this metric definition.
          title: ErrorMessage
        MetricDefinitionId:
          allOf:
          - $ref: '#/components/schemas/MetricDefinitionId'
          - description: The ID of the metric definition that caused this error.
          title: MetricDefinitionId
      required:
      - ErrorCode
      - ErrorMessage
      - MetricDefinitionId
      title: BatchDeleteRumMetricDefinitionsError
      type: object
    BatchDeleteRumMetricDefinitionsErrors:
      items:
        $ref: '#/components/schemas/BatchDeleteRumMetricDefinitionsError'
      type: array
    MetricDefinitionIds:
      items:
        $ref: '#/components/schemas/MetricDefinitionId'
      type: array
    BatchDeleteRumMetricDefinitionsRequest:
      properties: {}
      title: BatchDeleteRumMetricDefinitionsRequest
      type: object
    MaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    BatchGetRumMetricDefinitionsRequest:
      properties: {}
      title: BatchGetRumMetricDefinitionsRequest
      type: object
    CreateAppMonitorRequest:
      example:
        CustomEvents:
          Status: ""
        CwLogEnabled: ""
        Domain: ""
        AppMonitorConfiguration:
          IncludedPages: ""
          ExcludedPages: ""
          FavoritePages: ""
          SessionSampleRate: ""
          AllowCookies: ""
          Telemetries: ""
          IdentityPoolId: ""
          GuestRoleArn: ""
          EnableXRay: ""
        Tags: ""
        Name: ""
      properties:
        AppMonitorConfiguration:
          $ref: '#/components/schemas/CreateAppMonitorRequest_AppMonitorConfiguration'
        CustomEvents:
          $ref: '#/components/schemas/CreateAppMonitorRequest_CustomEvents'
        CwLogEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Data collected by RUM is kept by RUM for 30 days and\
              \ then deleted. This parameter specifies whether RUM sends a copy of\
              \ this telemetry data to Amazon CloudWatch Logs in your account. This\
              \ enables you to keep the telemetry data for more than 30 days, but\
              \ it does incur Amazon CloudWatch Logs charges.</p> <p>If you omit this\
              \ parameter, the default is <code>false</code>.</p>"
        Domain:
          allOf:
          - $ref: '#/components/schemas/AppMonitorDomain'
          - description: The top-level internet domain name for which your application
              has administrative authority.
        Name:
          allOf:
          - $ref: '#/components/schemas/AppMonitorName'
          - description: A name for the app monitor.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>Assigns one or more tags (key-value pairs) to the app\
              \ monitor.</p> <p>Tags can help you organize and categorize your resources.\
              \ You can also use them to scope user permissions by granting a user\
              \ permission to access or change only resources with certain tag values.</p>\
              \ <p>Tags don't have any semantic meaning to Amazon Web Services and\
              \ are interpreted strictly as strings of characters.</p> <p>You can\
              \ associate as many as 50 tags with an app monitor.</p> <p>For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
              >Tagging Amazon Web Services resources</a>.</p>"
      required:
      - Domain
      - Name
      title: CreateAppMonitorRequest
      type: object
    CwLog:
      description: "A structure that contains the information about whether the app\
        \ monitor stores copies of the data that RUM collects in CloudWatch Logs.\
        \ If it does, this structure also contains the name of the log group."
      properties:
        CwLogEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicated whether the app monitor stores copies of the data
              that RUM collects in CloudWatch Logs.
          title: CwLogEnabled
        CwLogGroup:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the log group where the copies are stored.
          title: CwLogGroup
      title: CwLog
      type: object
    DeleteAppMonitorRequest:
      properties: {}
      title: DeleteAppMonitorRequest
      type: object
    DeleteRumMetricsDestinationRequest:
      properties: {}
      title: DeleteRumMetricsDestinationRequest
      type: object
    DimensionKey:
      maxLength: 280
      minLength: 1
      type: string
    DimensionName:
      maxLength: 255
      minLength: 1
      pattern: "^(?!:).*[^\\s].*"
      title: DimensionName
      type: string
    EventData:
      title: EventData
      type: string
    EventDataList:
      items:
        $ref: '#/components/schemas/EventData'
      type: array
    QueryFilters:
      items:
        $ref: '#/components/schemas/QueryFilter'
      type: array
    MaxQueryResults:
      maximum: 100
      minimum: 0
      type: integer
    Token:
      type: string
    TimeRange:
      description: A structure that defines the time range that you want to retrieve
        results from.
      properties:
        After:
          allOf:
          - $ref: '#/components/schemas/QueryTimestamp'
          - description: The beginning of the time range to retrieve performance events
              from.
          title: After
        Before:
          allOf:
          - $ref: '#/components/schemas/QueryTimestamp'
          - description: "The end of the time range to retrieve performance events\
              \ from. If you omit this, the time range extends to the time that this\
              \ operation is performed."
          title: Before
      required:
      - After
      title: TimeRange
      type: object
    GetAppMonitorDataRequest:
      example:
        TimeRange:
          Before: ""
          After: ""
        Filters: ""
        NextToken: ""
        MaxResults: ""
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/QueryFilters'
          - description: An array of structures that you can use to filter the results
              to those that match one or more sets of key-value pairs that you specify.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxQueryResults'
          - description: 'The maximum number of results to return in one operation. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: Use the token returned by the previous operation to request
              the next page of results.
        TimeRange:
          $ref: '#/components/schemas/GetAppMonitorDataRequest_TimeRange'
      required:
      - TimeRange
      title: GetAppMonitorDataRequest
      type: object
    GetAppMonitorRequest:
      properties: {}
      title: GetAppMonitorRequest
      type: object
    IamRoleArn:
      pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
      type: string
    JsonValue:
      type: string
    ListAppMonitorsRequest:
      properties: {}
      title: ListAppMonitorsRequest
      type: object
    ListRumMetricsDestinationsRequest:
      properties: {}
      title: ListRumMetricsDestinationsRequest
      type: object
    MetricDestinationSummaryList:
      items:
        $ref: '#/components/schemas/MetricDestinationSummary'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    MetricDefinition:
      description: "A structure that displays the definition of one extended metric\
        \ that RUM sends to CloudWatch or CloudWatch Evidently. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-vended-metrics.html\"\
        > Additional metrics that you can send to CloudWatch and CloudWatch Evidently</a>."
      properties:
        DimensionKeys:
          allOf:
          - $ref: '#/components/schemas/DimensionKeysMap'
          - description: "This field is a map of field paths to dimension names. It\
              \ defines the dimensions to associate with this metric in CloudWatch\
              \ The value of this field is used only if the metric destination is\
              \ <code>CloudWatch</code>. If the metric destination is <code>Evidently</code>,\
              \ the value of <code>DimensionKeys</code> is ignored."
          title: DimensionKeys
        EventPattern:
          allOf:
          - $ref: '#/components/schemas/EventPattern'
          - description: "<p>The pattern that defines the metric. RUM checks events\
              \ that happen in a user's session against the pattern, and events that\
              \ match the pattern are sent to the metric destination.</p> <p>If the\
              \ metrics destination is <code>CloudWatch</code> and the event also\
              \ matches a value in <code>DimensionKeys</code>, then the metric is\
              \ published with the specified dimensions. </p>"
          title: EventPattern
        MetricDefinitionId:
          allOf:
          - $ref: '#/components/schemas/MetricDefinitionId'
          - description: The ID of this metric definition.
          title: MetricDefinitionId
        Name:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          - description: The name of the metric that is defined in this structure.
          title: Name
        Namespace:
          allOf:
          - $ref: '#/components/schemas/Namespace'
          - description: "If this metric definition is for a custom metric instead\
              \ of an extended metric, this field displays the metric namespace that\
              \ the custom metric is published to."
          title: Namespace
        UnitLabel:
          allOf:
          - $ref: '#/components/schemas/UnitLabel'
          - description: 'Use this field only if you are sending this metric to CloudWatch.
              It defines the CloudWatch metric unit that this metric is measured in. '
          title: UnitLabel
        ValueKey:
          allOf:
          - $ref: '#/components/schemas/ValueKey'
          - description: The field within the event object that the metric value is
              sourced from.
          title: ValueKey
      required:
      - MetricDefinitionId
      - Name
      title: MetricDefinition
      type: object
    MetricDestinationSummary:
      description: A structure that displays information about one destination that
        CloudWatch RUM sends extended metrics to.
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/MetricDestination'
          - description: Specifies whether the destination is <code>CloudWatch</code>
              or <code>Evidently</code>.
          title: Destination
        DestinationArn:
          allOf:
          - $ref: '#/components/schemas/DestinationArn'
          - description: "If the destination is <code>Evidently</code>, this specifies\
              \ the ARN of the Evidently experiment that receives the metrics."
          title: DestinationArn
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: This field appears only when the destination is <code>Evidently</code>.
              It specifies the ARN of the IAM role that is used to write to the Evidently
              experiment that receives the metrics.
          title: IamRoleArn
      title: MetricDestinationSummary
      type: object
    Url:
      maxLength: 1260
      minLength: 1
      pattern: "https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\\
        b([-a-zA-Z0-9()@:%_\\+.~#?&*//=]*)"
      title: Url
      type: string
    PutRumEventsRequestBatchIdString:
      maxLength: 36
      minLength: 36
      pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      type: string
    PutRumEventsRequestIdString:
      maxLength: 36
      minLength: 36
      pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      type: string
    RumEventList:
      items:
        $ref: '#/components/schemas/RumEvent'
      type: array
    UserDetails:
      description: A structure that contains information about the user session that
        this batch of events was collected from.
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UserDetailsSessionIdString'
          - description: The session ID that the performance events are from.
          title: sessionId
        userId:
          allOf:
          - $ref: '#/components/schemas/UserDetailsUserIdString'
          - description: The ID of the user for this user session. This ID is generated
              by RUM and does not include any personally identifiable information
              about the user.
          title: userId
      title: UserDetails
      type: object
    PutRumEventsRequest:
      example:
        UserDetails:
          sessionId: ""
          userId: ""
        BatchId: ""
        AppMonitorDetails:
          name: ""
          id: ""
          version: ""
        RumEvents: ""
      properties:
        AppMonitorDetails:
          $ref: '#/components/schemas/PutRumEventsRequest_AppMonitorDetails'
        BatchId:
          allOf:
          - $ref: '#/components/schemas/PutRumEventsRequestBatchIdString'
          - description: A unique identifier for this batch of RUM event data.
        RumEvents:
          allOf:
          - $ref: '#/components/schemas/RumEventList'
          - description: An array of structures that contain the telemetry event data.
        UserDetails:
          $ref: '#/components/schemas/PutRumEventsRequest_UserDetails'
      required:
      - AppMonitorDetails
      - BatchId
      - RumEvents
      - UserDetails
      title: PutRumEventsRequest
      type: object
    PutRumMetricsDestinationRequest:
      example:
        Destination: ""
        IamRoleArn: ""
        DestinationArn: ""
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/MetricDestination'
          - description: "Defines the destination to send the metrics to. Valid values\
              \ are <code>CloudWatch</code> and <code>Evidently</code>. If you specify\
              \ <code>Evidently</code>, you must also specify the ARN of the CloudWatchEvidently\
              \ experiment that is to be the destination and an IAM role that has\
              \ permission to write to the experiment."
        DestinationArn:
          allOf:
          - $ref: '#/components/schemas/DestinationArn'
          - description: Use this parameter only if <code>Destination</code> is <code>Evidently</code>.
              This parameter specifies the ARN of the Evidently experiment that will
              receive the extended metrics.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: "<p>This parameter is required if <code>Destination</code>\
              \ is <code>Evidently</code>. If <code>Destination</code> is <code>CloudWatch</code>,\
              \ do not use this parameter.</p> <p>This parameter specifies the ARN\
              \ of an IAM role that RUM will assume to write to the Evidently experiment\
              \ that you are sending metrics to. This role must have permission to\
              \ write to that experiment.</p>"
      required:
      - Destination
      title: PutRumMetricsDestinationRequest
      type: object
    QueryFilterKey:
      type: string
    QueryFilterValueList:
      items:
        $ref: '#/components/schemas/QueryFilterValue'
      type: array
    QueryFilterValue:
      title: QueryFilterValue
      type: string
    RumEventIdString:
      maxLength: 36
      minLength: 36
      pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      type: string
    Timestamp:
      format: date-time
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of key-value pairs to associate with the resource.
      required:
      - Tags
      title: TagResourceRequest
      type: object
    Telemetry:
      enum:
      - errors
      - performance
      - http
      title: Telemetry
      type: string
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateAppMonitorRequest:
      example:
        CustomEvents:
          Status: ""
        CwLogEnabled: ""
        Domain: ""
        AppMonitorConfiguration:
          IncludedPages: ""
          ExcludedPages: ""
          FavoritePages: ""
          SessionSampleRate: ""
          AllowCookies: ""
          Telemetries: ""
          IdentityPoolId: ""
          GuestRoleArn: ""
          EnableXRay: ""
      properties:
        AppMonitorConfiguration:
          $ref: '#/components/schemas/UpdateAppMonitorRequest_AppMonitorConfiguration'
        CustomEvents:
          $ref: '#/components/schemas/UpdateAppMonitorRequest_CustomEvents'
        CwLogEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Data collected by RUM is kept by RUM for 30 days and then\
              \ deleted. This parameter specifies whether RUM sends a copy of this\
              \ telemetry data to Amazon CloudWatch Logs in your account. This enables\
              \ you to keep the telemetry data for more than 30 days, but it does\
              \ incur Amazon CloudWatch Logs charges."
        Domain:
          allOf:
          - $ref: '#/components/schemas/AppMonitorDomain'
          - description: The top-level internet domain name for which your application
              has administrative authority.
      title: UpdateAppMonitorRequest
      type: object
    UpdateRumMetricDefinitionRequest:
      example:
        Destination: ""
        MetricDefinition:
          EventPattern: ""
          ValueKey: ""
          DimensionKeys: ""
          UnitLabel: ""
          Namespace: ""
          Name: ""
        MetricDefinitionId: ""
        DestinationArn: ""
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/MetricDestination'
          - description: "The destination to send the metrics to. Valid values are\
              \ <code>CloudWatch</code> and <code>Evidently</code>. If you specify\
              \ <code>Evidently</code>, you must also specify the ARN of the CloudWatchEvidently\
              \ experiment that will receive the metrics and an IAM role that has\
              \ permission to write to the experiment."
        DestinationArn:
          allOf:
          - $ref: '#/components/schemas/DestinationArn'
          - description: "<p>This parameter is required if <code>Destination</code>\
              \ is <code>Evidently</code>. If <code>Destination</code> is <code>CloudWatch</code>,\
              \ do not use this parameter.</p> <p>This parameter specifies the ARN\
              \ of the Evidently experiment that is to receive the metrics. You must\
              \ have already defined this experiment as a valid destination. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_PutRumMetricsDestination.html\"\
              >PutRumMetricsDestination</a>.</p>"
        MetricDefinition:
          $ref: '#/components/schemas/UpdateRumMetricDefinitionRequest_MetricDefinition'
        MetricDefinitionId:
          allOf:
          - $ref: '#/components/schemas/MetricDefinitionId'
          - description: The ID of the metric definition to update.
      required:
      - Destination
      - MetricDefinition
      - MetricDefinitionId
      title: UpdateRumMetricDefinitionRequest
      type: object
    BatchCreateRumMetricDefinitions_request:
      properties:
        Destination:
          description: "The destination to send the metrics to. Valid values are <code>CloudWatch</code>\
            \ and <code>Evidently</code>. If you specify <code>Evidently</code>, you\
            \ must also specify the ARN of the CloudWatchEvidently experiment that\
            \ will receive the metrics and an IAM role that has permission to write\
            \ to the experiment."
          enum:
          - CloudWatch
          - Evidently
          title: Destination
          type: string
        DestinationArn:
          description: "<p>This parameter is required if <code>Destination</code>\
            \ is <code>Evidently</code>. If <code>Destination</code> is <code>CloudWatch</code>,\
            \ do not use this parameter.</p> <p>This parameter specifies the ARN of\
            \ the Evidently experiment that is to receive the metrics. You must have\
            \ already defined this experiment as a valid destination. For more information,\
            \ see <a href=\"https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_PutRumMetricsDestination.html\"\
            >PutRumMetricsDestination</a>.</p>"
          maxLength: 2048
          minLength: 0
          pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
          title: DestinationArn
          type: string
        MetricDefinitions:
          description: An array of structures which define the metrics that you want
            to send.
          items:
            $ref: '#/components/schemas/MetricDefinitionRequest'
          title: MetricDefinitions
          type: array
      required:
      - Destination
      - MetricDefinitions
      title: BatchCreateRumMetricDefinitions_request
      type: object
    UpdateRumMetricDefinition_request_MetricDefinition:
      description: "<p>Use this structure to define one extended metric or custom\
        \ metric that RUM will send to CloudWatch or CloudWatch Evidently. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-vended-metrics.html\"\
        > Additional metrics that you can send to CloudWatch and CloudWatch Evidently</a>.</p>\
        \ <p>This structure is validated differently for extended metrics and custom\
        \ metrics. For extended metrics that are sent to the <code>AWS/RUM</code>\
        \ namespace, the following validations apply:</p> <ul> <li> <p>The <code>Namespace</code>\
        \ parameter must be omitted or set to <code>AWS/RUM</code>.</p> </li> <li>\
        \ <p>Only certain combinations of values for <code>Name</code>, <code>ValueKey</code>,\
        \ and <code>EventPattern</code> are valid. In addition to what is displayed\
        \ in the list below, the <code>EventPattern</code> can also include information\
        \ used by the <code>DimensionKeys</code> field.</p> <ul> <li> <p>If <code>Name</code>\
        \ is <code>PerformanceNavigationDuration</code>, then <code>ValueKey</code>must\
        \ be <code>event_details.duration</code> and the <code>EventPattern</code>\
        \ must include <code>{\"event_type\":[\"com.amazon.rum.performance_navigation_event\"\
        ]}</code> </p> </li> <li> <p>If <code>Name</code> is <code>PerformanceResourceDuration</code>,\
        \ then <code>ValueKey</code>must be <code>event_details.duration</code> and\
        \ the <code>EventPattern</code> must include <code>{\"event_type\":[\"com.amazon.rum.performance_resource_event\"\
        ]}</code> </p> </li> <li> <p>If <code>Name</code> is <code>NavigationSatisfiedTransaction</code>,\
        \ then <code>ValueKey</code>must be null and the <code>EventPattern</code>\
        \ must include <code>{ \"event_type\": [\"com.amazon.rum.performance_navigation_event\"\
        ], \"event_details\": { \"duration\": [{ \"numeric\": [\"&gt;\",2000] }] }\
        \ }</code> </p> </li> <li> <p>If <code>Name</code> is <code>NavigationToleratedTransaction</code>,\
        \ then <code>ValueKey</code>must be null and the <code>EventPattern</code>\
        \ must include <code>{ \"event_type\": [\"com.amazon.rum.performance_navigation_event\"\
        ], \"event_details\": { \"duration\": [{ \"numeric\": [\"&gt;=\",2000,\"&lt;\"\
        8000] }] } }</code> </p> </li> <li> <p>If <code>Name</code> is <code>NavigationFrustratedTransaction</code>,\
        \ then <code>ValueKey</code>must be null and the <code>EventPattern</code>\
        \ must include <code>{ \"event_type\": [\"com.amazon.rum.performance_navigation_event\"\
        ], \"event_details\": { \"duration\": [{ \"numeric\": [\"&gt;=\",8000] }]\
        \ } }</code> </p> </li> <li> <p>If <code>Name</code> is <code>WebVitalsCumulativeLayoutShift</code>,\
        \ then <code>ValueKey</code>must be <code>event_details.value</code> and the\
        \ <code>EventPattern</code> must include <code>{\"event_type\":[\"com.amazon.rum.cumulative_layout_shift_event\"\
        ]}</code> </p> </li> <li> <p>If <code>Name</code> is <code>WebVitalsFirstInputDelay</code>,\
        \ then <code>ValueKey</code>must be <code>event_details.value</code> and the\
        \ <code>EventPattern</code> must include <code>{\"event_type\":[\"com.amazon.rum.first_input_delay_event\"\
        ]}</code> </p> </li> <li> <p>If <code>Name</code> is <code>WebVitalsLargestContentfulPaint</code>,\
        \ then <code>ValueKey</code>must be <code>event_details.value</code> and the\
        \ <code>EventPattern</code> must include <code>{\"event_type\":[\"com.amazon.rum.largest_contentful_paint_event\"\
        ]}</code> </p> </li> <li> <p>If <code>Name</code> is <code>JsErrorCount</code>,\
        \ then <code>ValueKey</code>must be null and the <code>EventPattern</code>\
        \ must include <code>{\"event_type\":[\"com.amazon.rum.js_error_event\"]}</code>\
        \ </p> </li> <li> <p>If <code>Name</code> is <code>HttpErrorCount</code>,\
        \ then <code>ValueKey</code>must be null and the <code>EventPattern</code>\
        \ must include <code>{\"event_type\":[\"com.amazon.rum.http_event\"]}</code>\
        \ </p> </li> <li> <p>If <code>Name</code> is <code>SessionCount</code>, then\
        \ <code>ValueKey</code>must be null and the <code>EventPattern</code> must\
        \ include <code>{\"event_type\":[\"com.amazon.rum.session_start_event\"]}</code>\
        \ </p> </li> </ul> </li> </ul> <p>For custom metrics, the following validation\
        \ rules apply:</p> <ul> <li> <p>The namespace can't be omitted and can't be\
        \ <code>AWS/RUM</code>. You can use the <code>AWS/RUM</code> namespace only\
        \ for extended metrics.</p> </li> <li> <p>All dimensions listed in the <code>DimensionKeys</code>\
        \ field must be present in the value of <code>EventPattern</code>.</p> </li>\
        \ <li> <p>The values that you specify for <code>ValueKey</code>, <code>EventPattern</code>,\
        \ and <code>DimensionKeys</code> must be fields in RUM events, so all first-level\
        \ keys in these fields must be one of the keys in the list later in this section.</p>\
        \ </li> <li> <p>If you set a value for <code>EventPattern</code>, it must\
        \ be a JSON object.</p> </li> <li> <p>For every non-empty <code>event_details</code>,\
        \ there must be a non-empty <code>event_type</code>.</p> </li> <li> <p>If\
        \ <code>EventPattern</code> contains an <code>event_details</code> field,\
        \ it must also contain an <code>event_type</code>. For every built-in <code>event_type</code>\
        \ that you use, you must use a value for <code>event_details</code> that corresponds\
        \ to that <code>event_type</code>. For information about event details that\
        \ correspond to event types, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-datacollected.html#CloudWatch-RUM-datacollected-eventDetails\"\
        > RUM event details</a>.</p> </li> <li> <p>In <code>EventPattern</code>, any\
        \ JSON array must contain only one value.</p> </li> </ul> <p>Valid key values\
        \ for first-level keys in the <code>ValueKey</code>, <code>EventPattern</code>,\
        \ and <code>DimensionKeys</code> fields:</p> <ul> <li> <p> <code>account_id</code>\
        \ </p> </li> <li> <p> <code>application_Id</code> </p> </li> <li> <p> <code>application_version</code>\
        \ </p> </li> <li> <p> <code>application_name</code> </p> </li> <li> <p> <code>batch_id</code>\
        \ </p> </li> <li> <p> <code>event_details</code> </p> </li> <li> <p> <code>event_id</code>\
        \ </p> </li> <li> <p> <code>event_interaction</code> </p> </li> <li> <p> <code>event_timestamp</code>\
        \ </p> </li> <li> <p> <code>event_type</code> </p> </li> <li> <p> <code>event_version</code>\
        \ </p> </li> <li> <p> <code>log_stream</code> </p> </li> <li> <p> <code>metadata</code>\
        \ </p> </li> <li> <p> <code>sessionId</code> </p> </li> <li> <p> <code>user_details</code>\
        \ </p> </li> <li> <p> <code>userId</code> </p> </li> </ul>"
      properties:
        DimensionKeys:
          allOf:
          - $ref: '#/components/schemas/DimensionKeysMap'
          - description: "<p>Use this field only if you are sending the metric to\
              \ CloudWatch.</p> <p>This field is a map of field paths to dimension\
              \ names. It defines the dimensions to associate with this metric in\
              \ CloudWatch. For extended metrics, valid values for the entries in\
              \ this field are the following:</p> <ul> <li> <p> <code>\"metadata.pageId\"\
              : \"PageId\"</code> </p> </li> <li> <p> <code>\"metadata.browserName\"\
              : \"BrowserName\"</code> </p> </li> <li> <p> <code>\"metadata.deviceType\"\
              : \"DeviceType\"</code> </p> </li> <li> <p> <code>\"metadata.osName\"\
              : \"OSName\"</code> </p> </li> <li> <p> <code>\"metadata.countryCode\"\
              : \"CountryCode\"</code> </p> </li> <li> <p> <code>\"event_details.fileType\"\
              : \"FileType\"</code> </p> </li> </ul> <p> For both extended metrics\
              \ and custom metrics, all dimensions listed in this field must also\
              \ be included in <code>EventPattern</code>.</p>"
          title: DimensionKeys
        EventPattern:
          allOf:
          - $ref: '#/components/schemas/EventPattern'
          - description: "<p>The pattern that defines the metric, specified as a JSON\
              \ object. RUM checks events that happen in a user's session against\
              \ the pattern, and events that match the pattern are sent to the metric\
              \ destination.</p> <p>When you define extended metrics, the metric definition\
              \ is not valid if <code>EventPattern</code> is omitted.</p> <p>Example\
              \ event patterns:</p> <ul> <li> <p> <code>'{ \"event_type\": [\"com.amazon.rum.js_error_event\"\
              ], \"metadata\": { \"browserName\": [ \"Chrome\", \"Safari\" ], } }'</code>\
              \ </p> </li> <li> <p> <code>'{ \"event_type\": [\"com.amazon.rum.performance_navigation_event\"\
              ], \"metadata\": { \"browserName\": [ \"Chrome\", \"Firefox\" ] }, \"\
              event_details\": { \"duration\": [{ \"numeric\": [ \"&lt;\", 2000 ]\
              \ }] } }'</code> </p> </li> <li> <p> <code>'{ \"event_type\": [\"com.amazon.rum.performance_navigation_event\"\
              ], \"metadata\": { \"browserName\": [ \"Chrome\", \"Safari\" ], \"countryCode\"\
              : [ \"US\" ] }, \"event_details\": { \"duration\": [{ \"numeric\": [\
              \ \"&gt;=\", 2000, \"&lt;\", 8000 ] }] } }'</code> </p> </li> </ul>\
              \ <p>If the metrics destination' is <code>CloudWatch</code> and the\
              \ event also matches a value in <code>DimensionKeys</code>, then the\
              \ metric is published with the specified dimensions. </p>"
          title: EventPattern
        Name:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          - description: "<p>The name for the metric that is defined in this structure.\
              \ For custom metrics, you can specify any name that you like. For extended\
              \ metrics, valid values are the following:</p> <ul> <li> <p> <code>PerformanceNavigationDuration</code>\
              \ </p> </li> <li> <p> <code>PerformanceResourceDuration </code> </p>\
              \ </li> <li> <p> <code>NavigationSatisfiedTransaction</code> </p> </li>\
              \ <li> <p> <code>NavigationToleratedTransaction</code> </p> </li> <li>\
              \ <p> <code>NavigationFrustratedTransaction</code> </p> </li> <li> <p>\
              \ <code>WebVitalsCumulativeLayoutShift</code> </p> </li> <li> <p> <code>WebVitalsFirstInputDelay</code>\
              \ </p> </li> <li> <p> <code>WebVitalsLargestContentfulPaint</code> </p>\
              \ </li> <li> <p> <code>JsErrorCount</code> </p> </li> <li> <p> <code>HttpErrorCount</code>\
              \ </p> </li> <li> <p> <code>SessionCount</code> </p> </li> </ul>"
          title: Name
        Namespace:
          allOf:
          - $ref: '#/components/schemas/Namespace'
          - description: "<p>If this structure is for a custom metric instead of an\
              \ extended metrics, use this parameter to define the metric namespace\
              \ for that custom metric. Do not specify this parameter if this structure\
              \ is for an extended metric.</p> <p>You cannot use any string that starts\
              \ with <code>AWS/</code> for your namespace.</p>"
          title: Namespace
        UnitLabel:
          allOf:
          - $ref: '#/components/schemas/UnitLabel'
          - description: "The CloudWatch metric unit to use for this metric. If you\
              \ omit this field, the metric is recorded with no unit."
          title: UnitLabel
        ValueKey:
          allOf:
          - $ref: '#/components/schemas/ValueKey'
          - description: "<p>The field within the event object that the metric value\
              \ is sourced from.</p> <p>If you omit this field, a hardcoded value\
              \ of 1 is pushed as the metric value. This is useful if you just want\
              \ to count the number of events that the filter catches. </p> <p>If\
              \ this metric is sent to CloudWatch Evidently, this field will be passed\
              \ to Evidently raw and Evidently will handle data extraction from the\
              \ event.</p>"
          title: ValueKey
      title: UpdateRumMetricDefinition_request_MetricDefinition
      type: object
    UpdateRumMetricDefinition_request:
      properties:
        Destination:
          description: "The destination to send the metrics to. Valid values are <code>CloudWatch</code>\
            \ and <code>Evidently</code>. If you specify <code>Evidently</code>, you\
            \ must also specify the ARN of the CloudWatchEvidently experiment that\
            \ will receive the metrics and an IAM role that has permission to write\
            \ to the experiment."
          enum:
          - CloudWatch
          - Evidently
          title: Destination
          type: string
        DestinationArn:
          description: "<p>This parameter is required if <code>Destination</code>\
            \ is <code>Evidently</code>. If <code>Destination</code> is <code>CloudWatch</code>,\
            \ do not use this parameter.</p> <p>This parameter specifies the ARN of\
            \ the Evidently experiment that is to receive the metrics. You must have\
            \ already defined this experiment as a valid destination. For more information,\
            \ see <a href=\"https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_PutRumMetricsDestination.html\"\
            >PutRumMetricsDestination</a>.</p>"
          maxLength: 2048
          minLength: 0
          pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
          title: DestinationArn
          type: string
        MetricDefinition:
          $ref: '#/components/schemas/UpdateRumMetricDefinition_request_MetricDefinition'
        MetricDefinitionId:
          description: The ID of the metric definition to update.
          maxLength: 255
          minLength: 1
          title: MetricDefinitionId
          type: string
      required:
      - Destination
      - MetricDefinition
      - MetricDefinitionId
      title: UpdateRumMetricDefinition_request
      type: object
    CreateAppMonitor_request_AppMonitorConfiguration:
      description: This structure contains much of the configuration data for the
        app monitor.
      properties:
        AllowCookies:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If you set this to <code>true</code>, the RUM web client\
              \ sets two cookies, a session cookie and a user cookie. The cookies\
              \ allow the RUM web client to collect data relating to the number of\
              \ users an application has and the behavior of the application across\
              \ a sequence of events. Cookies are stored in the top-level domain of\
              \ the current page."
          title: AllowCookies
        EnableXRay:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If you set this to <code>true</code>, RUM enables X-Ray\
              \ tracing for the user sessions that RUM samples. RUM adds an X-Ray\
              \ trace header to allowed HTTP requests. It also records an X-Ray segment\
              \ for allowed HTTP requests. You can see traces and segments from these\
              \ user sessions in the X-Ray console and the CloudWatch ServiceLens\
              \ console. For more information, see <a href=\"https://docs.aws.amazon.com/xray/latest/devguide/aws-xray.html\"\
              >What is X-Ray?</a> "
          title: EnableXRay
        ExcludedPages:
          allOf:
          - $ref: '#/components/schemas/Pages'
          - description: <p>A list of URLs in your website or application to exclude
              from RUM data collection.</p> <p>You can't include both <code>ExcludedPages</code>
              and <code>IncludedPages</code> in the same operation.</p>
          title: ExcludedPages
        FavoritePages:
          allOf:
          - $ref: '#/components/schemas/FavoritePages'
          - description: A list of pages in your application that are to be displayed
              with a "favorite" icon in the CloudWatch RUM console.
          title: FavoritePages
        GuestRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the guest IAM role that is attached to the Amazon
              Cognito identity pool that is used to authorize the sending of data
              to RUM.
          title: GuestRoleArn
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          - description: The ID of the Amazon Cognito identity pool that is used to
              authorize the sending of data to RUM.
          title: IdentityPoolId
        IncludedPages:
          allOf:
          - $ref: '#/components/schemas/Pages'
          - description: "<p>If this app monitor is to collect data from only certain\
              \ pages in your application, this structure lists those pages. </p>\
              \ <p>You can't include both <code>ExcludedPages</code> and <code>IncludedPages</code>\
              \ in the same operation.</p>"
          title: IncludedPages
        SessionSampleRate:
          allOf:
          - $ref: '#/components/schemas/SessionSampleRate'
          - description: "<p>Specifies the portion of user sessions to use for RUM\
              \ data collection. Choosing a higher portion gives you more data but\
              \ also incurs more costs.</p> <p>The range for this value is 0 to 1\
              \ inclusive. Setting this to 1 means that 100% of user sessions are\
              \ sampled, and setting it to 0.1 means that 10% of user sessions are\
              \ sampled.</p> <p>If you omit this parameter, the default of 0.1 is\
              \ used, and 10% of sessions will be sampled.</p>"
          title: SessionSampleRate
        Telemetries:
          allOf:
          - $ref: '#/components/schemas/Telemetries'
          - description: <p>An array that lists the types of telemetry data that this
              app monitor is to collect.</p> <ul> <li> <p> <code>errors</code> indicates
              that RUM collects data about unhandled JavaScript errors raised by your
              application.</p> </li> <li> <p> <code>performance</code> indicates that
              RUM collects performance data about how your application and its resources
              are loaded and rendered. This includes Core Web Vitals.</p> </li> <li>
              <p> <code>http</code> indicates that RUM collects data about HTTP errors
              thrown by your application.</p> </li> </ul>
          title: Telemetries
      title: CreateAppMonitor_request_AppMonitorConfiguration
      type: object
    CreateAppMonitor_request_CustomEvents:
      description: A structure that contains information about custom events for this
        app monitor.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/CustomEventsStatus'
          - description: Specifies whether this app monitor allows the web client
              to define and send custom events. The default is for custom events to
              be <code>DISABLED</code>.
          title: Status
      title: CreateAppMonitor_request_CustomEvents
      type: object
    CreateAppMonitor_request:
      properties:
        AppMonitorConfiguration:
          $ref: '#/components/schemas/CreateAppMonitor_request_AppMonitorConfiguration'
        CustomEvents:
          $ref: '#/components/schemas/CreateAppMonitor_request_CustomEvents'
        CwLogEnabled:
          description: "<p>Data collected by RUM is kept by RUM for 30 days and then\
            \ deleted. This parameter specifies whether RUM sends a copy of this telemetry\
            \ data to Amazon CloudWatch Logs in your account. This enables you to\
            \ keep the telemetry data for more than 30 days, but it does incur Amazon\
            \ CloudWatch Logs charges.</p> <p>If you omit this parameter, the default\
            \ is <code>false</code>.</p>"
          title: CwLogEnabled
          type: boolean
        Domain:
          description: The top-level internet domain name for which your application
            has administrative authority.
          maxLength: 253
          minLength: 1
          pattern: "^(localhost)|^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?![-.])([A-Za-z0-9-\\\
            .\\-]{0,63})((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))\\.(?![-])[A-Za-z-0-9]{1,63}((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))|^(\\\
            *\\.)(?![-.])([A-Za-z0-9-\\.\\-]{0,63})((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))\\\
            .(?![-])[A-Za-z-0-9]{1,63}((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))"
          title: Domain
          type: string
        Name:
          description: A name for the app monitor.
          maxLength: 255
          minLength: 1
          pattern: "^(?!\\.)[\\.\\-_#A-Za-z0-9]+$"
          title: Name
          type: string
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "<p>Assigns one or more tags (key-value pairs) to the app monitor.</p>\
            \ <p>Tags can help you organize and categorize your resources. You can\
            \ also use them to scope user permissions by granting a user permission\
            \ to access or change only resources with certain tag values.</p> <p>Tags\
            \ don't have any semantic meaning to Amazon Web Services and are interpreted\
            \ strictly as strings of characters.</p> <p>You can associate as many\
            \ as 50 tags with an app monitor.</p> <p>For more information, see <a\
            \ href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
            >Tagging Amazon Web Services resources</a>.</p>"
          title: Tags
          type: object
      required:
      - Domain
      - Name
      title: CreateAppMonitor_request
      type: object
    UpdateAppMonitor_request:
      properties:
        AppMonitorConfiguration:
          $ref: '#/components/schemas/CreateAppMonitor_request_AppMonitorConfiguration'
        CustomEvents:
          $ref: '#/components/schemas/CreateAppMonitor_request_CustomEvents'
        CwLogEnabled:
          description: "Data collected by RUM is kept by RUM for 30 days and then\
            \ deleted. This parameter specifies whether RUM sends a copy of this telemetry\
            \ data to Amazon CloudWatch Logs in your account. This enables you to\
            \ keep the telemetry data for more than 30 days, but it does incur Amazon\
            \ CloudWatch Logs charges."
          title: CwLogEnabled
          type: boolean
        Domain:
          description: The top-level internet domain name for which your application
            has administrative authority.
          maxLength: 253
          minLength: 1
          pattern: "^(localhost)|^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?![-.])([A-Za-z0-9-\\\
            .\\-]{0,63})((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))\\.(?![-])[A-Za-z-0-9]{1,63}((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))|^(\\\
            *\\.)(?![-.])([A-Za-z0-9-\\.\\-]{0,63})((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))\\\
            .(?![-])[A-Za-z-0-9]{1,63}((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))"
          title: Domain
          type: string
      title: UpdateAppMonitor_request
      type: object
    GetAppMonitorData_request_TimeRange:
      description: A structure that defines the time range that you want to retrieve
        results from.
      properties:
        After:
          allOf:
          - $ref: '#/components/schemas/QueryTimestamp'
          - description: The beginning of the time range to retrieve performance events
              from.
          title: After
        Before:
          allOf:
          - $ref: '#/components/schemas/QueryTimestamp'
          - description: "The end of the time range to retrieve performance events\
              \ from. If you omit this, the time range extends to the time that this\
              \ operation is performed."
          title: Before
      title: GetAppMonitorData_request_TimeRange
      type: object
    GetAppMonitorData_request:
      properties:
        Filters:
          description: An array of structures that you can use to filter the results
            to those that match one or more sets of key-value pairs that you specify.
          items:
            $ref: '#/components/schemas/QueryFilter'
          title: Filters
          type: array
        MaxResults:
          description: 'The maximum number of results to return in one operation. '
          maximum: 100
          minimum: 0
          title: MaxResults
          type: integer
        NextToken:
          description: Use the token returned by the previous operation to request
            the next page of results.
          title: NextToken
          type: string
        TimeRange:
          $ref: '#/components/schemas/GetAppMonitorData_request_TimeRange'
      required:
      - TimeRange
      title: GetAppMonitorData_request
      type: object
    PutRumMetricsDestination_request:
      properties:
        Destination:
          description: "Defines the destination to send the metrics to. Valid values\
            \ are <code>CloudWatch</code> and <code>Evidently</code>. If you specify\
            \ <code>Evidently</code>, you must also specify the ARN of the CloudWatchEvidently\
            \ experiment that is to be the destination and an IAM role that has permission\
            \ to write to the experiment."
          enum:
          - CloudWatch
          - Evidently
          title: Destination
          type: string
        DestinationArn:
          description: Use this parameter only if <code>Destination</code> is <code>Evidently</code>.
            This parameter specifies the ARN of the Evidently experiment that will
            receive the extended metrics.
          maxLength: 2048
          minLength: 0
          pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
          title: DestinationArn
          type: string
        IamRoleArn:
          description: "<p>This parameter is required if <code>Destination</code>\
            \ is <code>Evidently</code>. If <code>Destination</code> is <code>CloudWatch</code>,\
            \ do not use this parameter.</p> <p>This parameter specifies the ARN of\
            \ an IAM role that RUM will assume to write to the Evidently experiment\
            \ that you are sending metrics to. This role must have permission to write\
            \ to that experiment.</p>"
          pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
          title: IamRoleArn
          type: string
      required:
      - Destination
      title: PutRumMetricsDestination_request
      type: object
    TagResource_request:
      properties:
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The list of key-value pairs to associate with the resource.
          title: Tags
          type: object
      required:
      - Tags
      title: TagResource_request
      type: object
    PutRumEvents_request_AppMonitorDetails:
      description: A structure that contains information about the RUM app monitor.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the app monitor.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the app monitor.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the app monitor.
          title: version
      title: PutRumEvents_request_AppMonitorDetails
      type: object
    PutRumEvents_request_UserDetails:
      description: A structure that contains information about the user session that
        this batch of events was collected from.
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UserDetailsSessionIdString'
          - description: The session ID that the performance events are from.
          title: sessionId
        userId:
          allOf:
          - $ref: '#/components/schemas/UserDetailsUserIdString'
          - description: The ID of the user for this user session. This ID is generated
              by RUM and does not include any personally identifiable information
              about the user.
          title: userId
      title: PutRumEvents_request_UserDetails
      type: object
    PutRumEvents_request:
      properties:
        AppMonitorDetails:
          $ref: '#/components/schemas/PutRumEvents_request_AppMonitorDetails'
        BatchId:
          description: A unique identifier for this batch of RUM event data.
          maxLength: 36
          minLength: 36
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          title: BatchId
          type: string
        RumEvents:
          description: An array of structures that contain the telemetry event data.
          items:
            $ref: '#/components/schemas/RumEvent'
          title: RumEvents
          type: array
        UserDetails:
          $ref: '#/components/schemas/PutRumEvents_request_UserDetails'
      required:
      - AppMonitorDetails
      - BatchId
      - RumEvents
      - UserDetails
      title: PutRumEvents_request
      type: object
    GetAppMonitorResponse_AppMonitor:
      allOf:
      - $ref: '#/components/schemas/AppMonitor'
      - description: A structure containing all the configuration information for
          the app monitor.
      example:
        CustomEvents:
          Status: ""
        LastModified: ""
        DataStorage:
          CwLog:
            CwLogEnabled: ""
            CwLogGroup: ""
        State: ""
        Id: ""
        Domain: ""
        AppMonitorConfiguration:
          IncludedPages: ""
          ExcludedPages: ""
          FavoritePages: ""
          SessionSampleRate: ""
          AllowCookies: ""
          Telemetries: ""
          IdentityPoolId: ""
          GuestRoleArn: ""
          EnableXRay: ""
        Tags: ""
        Created: ""
        Name: ""
      title: GetAppMonitorResponse_AppMonitor
    DataStorage_CwLog:
      allOf:
      - $ref: '#/components/schemas/CwLog'
      - description: "A structure that contains the information about whether the\
          \ app monitor stores copies of the data that RUM collects in CloudWatch\
          \ Logs. If it does, this structure also contains the name of the log group."
      example:
        CwLogEnabled: ""
        CwLogGroup: ""
      title: DataStorage_CwLog
    AppMonitor_AppMonitorConfiguration:
      allOf:
      - $ref: '#/components/schemas/AppMonitorConfiguration'
      - description: A structure that contains much of the configuration data for
          the app monitor.
      example:
        IncludedPages: ""
        ExcludedPages: ""
        FavoritePages: ""
        SessionSampleRate: ""
        AllowCookies: ""
        Telemetries: ""
        IdentityPoolId: ""
        GuestRoleArn: ""
        EnableXRay: ""
      title: AppMonitor_AppMonitorConfiguration
    AppMonitor_CustomEvents:
      allOf:
      - $ref: '#/components/schemas/CustomEvents'
      - description: "<p>Specifies whether this app monitor allows the web client\
          \ to define and send custom events.</p> <p>For more information about custom\
          \ events, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-custom-events.html\"\
          >Send custom events</a>.</p>"
      example:
        Status: ""
      title: AppMonitor_CustomEvents
    AppMonitor_DataStorage:
      allOf:
      - $ref: '#/components/schemas/DataStorage'
      - description: A structure that contains information about whether this app
          monitor stores a copy of the telemetry data that RUM collects using CloudWatch
          Logs.
      example:
        CwLog:
          CwLogEnabled: ""
          CwLogGroup: ""
      title: AppMonitor_DataStorage
    BatchCreateRumMetricDefinitionsError_MetricDefinition:
      allOf:
      - $ref: '#/components/schemas/MetricDefinitionRequest'
      - description: The metric definition that caused this error.
      title: BatchCreateRumMetricDefinitionsError_MetricDefinition
    CreateAppMonitorRequest_AppMonitorConfiguration:
      allOf:
      - $ref: '#/components/schemas/AppMonitorConfiguration'
      - description: "<p>A structure that contains much of the configuration data\
          \ for the app monitor. If you are using Amazon Cognito for authorization,\
          \ you must include this structure in your request, and it must include the\
          \ ID of the Amazon Cognito identity pool to use for authorization. If you\
          \ don't include <code>AppMonitorConfiguration</code>, you must set up your\
          \ own authorization method. For more information, see <a href=\"https://docs.aws.amazon.com/monitoring/CloudWatch-RUM-get-started-authorization.html\"\
          >Authorize your application to send data to Amazon Web Services</a>.</p>\
          \ <p>If you omit this argument, the sample rate used for RUM is set to 10%\
          \ of the user sessions.</p>"
      example:
        IncludedPages: ""
        ExcludedPages: ""
        FavoritePages: ""
        SessionSampleRate: ""
        AllowCookies: ""
        Telemetries: ""
        IdentityPoolId: ""
        GuestRoleArn: ""
        EnableXRay: ""
      title: CreateAppMonitorRequest_AppMonitorConfiguration
    CreateAppMonitorRequest_CustomEvents:
      allOf:
      - $ref: '#/components/schemas/CustomEvents'
      - description: "<p>Specifies whether this app monitor allows the web client\
          \ to define and send custom events. If you omit this parameter, custom events\
          \ are <code>DISABLED</code>.</p> <p>For more information about custom events,\
          \ see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-custom-events.html\"\
          >Send custom events</a>.</p>"
      example:
        Status: ""
      title: CreateAppMonitorRequest_CustomEvents
    GetAppMonitorDataRequest_TimeRange:
      allOf:
      - $ref: '#/components/schemas/TimeRange'
      - description: A structure that defines the time range that you want to retrieve
          results from.
      example:
        Before: ""
        After: ""
      title: GetAppMonitorDataRequest_TimeRange
    PutRumEventsRequest_AppMonitorDetails:
      allOf:
      - $ref: '#/components/schemas/AppMonitorDetails'
      - description: A structure that contains information about the app monitor that
          collected this telemetry information.
      example:
        name: ""
        id: ""
        version: ""
      title: PutRumEventsRequest_AppMonitorDetails
    PutRumEventsRequest_UserDetails:
      allOf:
      - $ref: '#/components/schemas/UserDetails'
      - description: A structure that contains information about the user session
          that this batch of events was collected from.
      example:
        sessionId: ""
        userId: ""
      title: PutRumEventsRequest_UserDetails
    UpdateAppMonitorRequest_AppMonitorConfiguration:
      allOf:
      - $ref: '#/components/schemas/AppMonitorConfiguration'
      - description: "A structure that contains much of the configuration data for\
          \ the app monitor. If you are using Amazon Cognito for authorization, you\
          \ must include this structure in your request, and it must include the ID\
          \ of the Amazon Cognito identity pool to use for authorization. If you don't\
          \ include <code>AppMonitorConfiguration</code>, you must set up your own\
          \ authorization method. For more information, see <a href=\"https://docs.aws.amazon.com/monitoring/CloudWatch-RUM-get-started-authorization.html\"\
          >Authorize your application to send data to Amazon Web Services</a>."
      example:
        IncludedPages: ""
        ExcludedPages: ""
        FavoritePages: ""
        SessionSampleRate: ""
        AllowCookies: ""
        Telemetries: ""
        IdentityPoolId: ""
        GuestRoleArn: ""
        EnableXRay: ""
      title: UpdateAppMonitorRequest_AppMonitorConfiguration
    UpdateAppMonitorRequest_CustomEvents:
      allOf:
      - $ref: '#/components/schemas/CustomEvents'
      - description: "<p>Specifies whether this app monitor allows the web client\
          \ to define and send custom events. The default is for custom events to\
          \ be <code>DISABLED</code>.</p> <p>For more information about custom events,\
          \ see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-custom-events.html\"\
          >Send custom events</a>.</p>"
      example:
        Status: ""
      title: UpdateAppMonitorRequest_CustomEvents
    UpdateRumMetricDefinitionRequest_MetricDefinition:
      allOf:
      - $ref: '#/components/schemas/MetricDefinitionRequest'
      - description: A structure that contains the new definition that you want to
          use for this metric.
      example:
        EventPattern: ""
        ValueKey: ""
        DimensionKeys: ""
        UnitLabel: ""
        Namespace: ""
        Name: ""
      title: UpdateRumMetricDefinitionRequest_MetricDefinition
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
