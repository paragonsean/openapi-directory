/**
 * CloudWatch RUM
 * <p>With Amazon CloudWatch RUM, you can perform real-user monitoring to collect client-side data about your web application performance from actual user sessions in real time. The data collected includes page load times, client-side errors, and user behavior. When you view this data, you can see it all aggregated together and also see breakdowns by the browsers and devices that your customers use.</p> <p>You can use the collected data to quickly identify and debug client-side performance issues. CloudWatch RUM helps you visualize anomalies in your application performance and find relevant debugging data such as error messages, stack traces, and user sessions. You can also use RUM to understand the range of end-user impact including the number of users, geolocations, and browsers used.</p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICwLog.h
 *
 * A structure that contains the information about whether the app monitor stores copies of the data that RUM collects in CloudWatch Logs. If it does, this structure also contains the name of the log group.
 */

#ifndef OAICwLog_H
#define OAICwLog_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICwLog : public OAIObject {
public:
    OAICwLog();
    OAICwLog(QString json);
    ~OAICwLog() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getCwLogEnabled() const;
    void setCwLogEnabled(const bool &cw_log_enabled);
    bool is_cw_log_enabled_Set() const;
    bool is_cw_log_enabled_Valid() const;

    QString getCwLogGroup() const;
    void setCwLogGroup(const QString &cw_log_group);
    bool is_cw_log_group_Set() const;
    bool is_cw_log_group_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_cw_log_enabled;
    bool m_cw_log_enabled_isSet;
    bool m_cw_log_enabled_isValid;

    QString m_cw_log_group;
    bool m_cw_log_group_isSet;
    bool m_cw_log_group_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICwLog)

#endif // OAICwLog_H
