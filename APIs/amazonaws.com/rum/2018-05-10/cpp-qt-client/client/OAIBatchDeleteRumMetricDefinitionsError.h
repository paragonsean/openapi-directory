/**
 * CloudWatch RUM
 * <p>With Amazon CloudWatch RUM, you can perform real-user monitoring to collect client-side data about your web application performance from actual user sessions in real time. The data collected includes page load times, client-side errors, and user behavior. When you view this data, you can see it all aggregated together and also see breakdowns by the browsers and devices that your customers use.</p> <p>You can use the collected data to quickly identify and debug client-side performance issues. CloudWatch RUM helps you visualize anomalies in your application performance and find relevant debugging data such as error messages, stack traces, and user sessions. You can also use RUM to understand the range of end-user impact including the number of users, geolocations, and browsers used.</p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBatchDeleteRumMetricDefinitionsError.h
 *
 * A structure that defines one error caused by a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_BatchDeleteRumMetricsDefinitions.html\&quot;&gt;BatchCreateRumMetricsDefinitions&lt;/a&gt; operation.
 */

#ifndef OAIBatchDeleteRumMetricDefinitionsError_H
#define OAIBatchDeleteRumMetricDefinitionsError_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBatchDeleteRumMetricDefinitionsError : public OAIObject {
public:
    OAIBatchDeleteRumMetricDefinitionsError();
    OAIBatchDeleteRumMetricDefinitionsError(QString json);
    ~OAIBatchDeleteRumMetricDefinitionsError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getErrorCode() const;
    void setErrorCode(const QString &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QString getMetricDefinitionId() const;
    void setMetricDefinitionId(const QString &metric_definition_id);
    bool is_metric_definition_id_Set() const;
    bool is_metric_definition_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QString m_metric_definition_id;
    bool m_metric_definition_id_isSet;
    bool m_metric_definition_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBatchDeleteRumMetricDefinitionsError)

#endif // OAIBatchDeleteRumMetricDefinitionsError_H
