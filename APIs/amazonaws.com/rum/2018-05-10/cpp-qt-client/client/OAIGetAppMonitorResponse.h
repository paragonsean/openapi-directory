/**
 * CloudWatch RUM
 * <p>With Amazon CloudWatch RUM, you can perform real-user monitoring to collect client-side data about your web application performance from actual user sessions in real time. The data collected includes page load times, client-side errors, and user behavior. When you view this data, you can see it all aggregated together and also see breakdowns by the browsers and devices that your customers use.</p> <p>You can use the collected data to quickly identify and debug client-side performance issues. CloudWatch RUM helps you visualize anomalies in your application performance and find relevant debugging data such as error messages, stack traces, and user sessions. You can also use RUM to understand the range of end-user impact including the number of users, geolocations, and browsers used.</p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetAppMonitorResponse.h
 *
 * 
 */

#ifndef OAIGetAppMonitorResponse_H
#define OAIGetAppMonitorResponse_H

#include <QJsonObject>

#include "OAIGetAppMonitorResponse_AppMonitor.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetAppMonitorResponse_AppMonitor;

class OAIGetAppMonitorResponse : public OAIObject {
public:
    OAIGetAppMonitorResponse();
    OAIGetAppMonitorResponse(QString json);
    ~OAIGetAppMonitorResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetAppMonitorResponse_AppMonitor getAppMonitor() const;
    void setAppMonitor(const OAIGetAppMonitorResponse_AppMonitor &app_monitor);
    bool is_app_monitor_Set() const;
    bool is_app_monitor_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetAppMonitorResponse_AppMonitor m_app_monitor;
    bool m_app_monitor_isSet;
    bool m_app_monitor_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetAppMonitorResponse)

#endif // OAIGetAppMonitorResponse_H
