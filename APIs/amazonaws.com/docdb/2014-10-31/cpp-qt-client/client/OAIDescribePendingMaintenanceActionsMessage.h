/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribePendingMaintenanceActionsMessage.h
 *
 * Represents the input to &lt;a&gt;DescribePendingMaintenanceActions&lt;/a&gt;.
 */

#ifndef OAIDescribePendingMaintenanceActionsMessage_H
#define OAIDescribePendingMaintenanceActionsMessage_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribePendingMaintenanceActionsMessage : public OAIObject {
public:
    OAIDescribePendingMaintenanceActionsMessage();
    OAIDescribePendingMaintenanceActionsMessage(QString json);
    ~OAIDescribePendingMaintenanceActionsMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getResourceIdentifier() const;
    void setResourceIdentifier(const QString &resource_identifier);
    bool is_resource_identifier_Set() const;
    bool is_resource_identifier_Valid() const;

    QList getFilters() const;
    void setFilters(const QList &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    QString getMarker() const;
    void setMarker(const QString &marker);
    bool is_marker_Set() const;
    bool is_marker_Valid() const;

    qint32 getMaxRecords() const;
    void setMaxRecords(const qint32 &max_records);
    bool is_max_records_Set() const;
    bool is_max_records_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_resource_identifier;
    bool m_resource_identifier_isSet;
    bool m_resource_identifier_isValid;

    QList m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;

    QString m_marker;
    bool m_marker_isSet;
    bool m_marker_isValid;

    qint32 m_max_records;
    bool m_max_records_isSet;
    bool m_max_records_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribePendingMaintenanceActionsMessage)

#endif // OAIDescribePendingMaintenanceActionsMessage_H
