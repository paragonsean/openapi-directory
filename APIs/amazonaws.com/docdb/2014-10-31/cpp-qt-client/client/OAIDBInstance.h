/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDBInstance.h
 *
 * Detailed information about an instance. 
 */

#ifndef OAIDBInstance_H
#define OAIDBInstance_H

#include <QJsonObject>

#include "OAIDBInstance_DBSubnetGroup.h"
#include "OAIDBInstance_Endpoint.h"
#include "OAIDBInstance_PendingModifiedValues.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDBInstance_Endpoint;
class OAIDBInstance_DBSubnetGroup;
class OAIDBInstance_PendingModifiedValues;

class OAIDBInstance : public OAIObject {
public:
    OAIDBInstance();
    OAIDBInstance(QString json);
    ~OAIDBInstance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDbInstanceIdentifier() const;
    void setDbInstanceIdentifier(const QString &db_instance_identifier);
    bool is_db_instance_identifier_Set() const;
    bool is_db_instance_identifier_Valid() const;

    QString getDbInstanceClass() const;
    void setDbInstanceClass(const QString &db_instance_class);
    bool is_db_instance_class_Set() const;
    bool is_db_instance_class_Valid() const;

    QString getEngine() const;
    void setEngine(const QString &engine);
    bool is_engine_Set() const;
    bool is_engine_Valid() const;

    QString getDbInstanceStatus() const;
    void setDbInstanceStatus(const QString &db_instance_status);
    bool is_db_instance_status_Set() const;
    bool is_db_instance_status_Valid() const;

    OAIDBInstance_Endpoint getEndpoint() const;
    void setEndpoint(const OAIDBInstance_Endpoint &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    QDateTime getInstanceCreateTime() const;
    void setInstanceCreateTime(const QDateTime &instance_create_time);
    bool is_instance_create_time_Set() const;
    bool is_instance_create_time_Valid() const;

    QString getPreferredBackupWindow() const;
    void setPreferredBackupWindow(const QString &preferred_backup_window);
    bool is_preferred_backup_window_Set() const;
    bool is_preferred_backup_window_Valid() const;

    qint32 getBackupRetentionPeriod() const;
    void setBackupRetentionPeriod(const qint32 &backup_retention_period);
    bool is_backup_retention_period_Set() const;
    bool is_backup_retention_period_Valid() const;

    QList getVpcSecurityGroups() const;
    void setVpcSecurityGroups(const QList &vpc_security_groups);
    bool is_vpc_security_groups_Set() const;
    bool is_vpc_security_groups_Valid() const;

    QString getAvailabilityZone() const;
    void setAvailabilityZone(const QString &availability_zone);
    bool is_availability_zone_Set() const;
    bool is_availability_zone_Valid() const;

    OAIDBInstance_DBSubnetGroup getDbSubnetGroup() const;
    void setDbSubnetGroup(const OAIDBInstance_DBSubnetGroup &db_subnet_group);
    bool is_db_subnet_group_Set() const;
    bool is_db_subnet_group_Valid() const;

    QString getPreferredMaintenanceWindow() const;
    void setPreferredMaintenanceWindow(const QString &preferred_maintenance_window);
    bool is_preferred_maintenance_window_Set() const;
    bool is_preferred_maintenance_window_Valid() const;

    OAIDBInstance_PendingModifiedValues getPendingModifiedValues() const;
    void setPendingModifiedValues(const OAIDBInstance_PendingModifiedValues &pending_modified_values);
    bool is_pending_modified_values_Set() const;
    bool is_pending_modified_values_Valid() const;

    QDateTime getLatestRestorableTime() const;
    void setLatestRestorableTime(const QDateTime &latest_restorable_time);
    bool is_latest_restorable_time_Set() const;
    bool is_latest_restorable_time_Valid() const;

    QString getEngineVersion() const;
    void setEngineVersion(const QString &engine_version);
    bool is_engine_version_Set() const;
    bool is_engine_version_Valid() const;

    bool getAutoMinorVersionUpgrade() const;
    void setAutoMinorVersionUpgrade(const bool &auto_minor_version_upgrade);
    bool is_auto_minor_version_upgrade_Set() const;
    bool is_auto_minor_version_upgrade_Valid() const;

    bool getPubliclyAccessible() const;
    void setPubliclyAccessible(const bool &publicly_accessible);
    bool is_publicly_accessible_Set() const;
    bool is_publicly_accessible_Valid() const;

    QList getStatusInfos() const;
    void setStatusInfos(const QList &status_infos);
    bool is_status_infos_Set() const;
    bool is_status_infos_Valid() const;

    QString getDbClusterIdentifier() const;
    void setDbClusterIdentifier(const QString &db_cluster_identifier);
    bool is_db_cluster_identifier_Set() const;
    bool is_db_cluster_identifier_Valid() const;

    bool getStorageEncrypted() const;
    void setStorageEncrypted(const bool &storage_encrypted);
    bool is_storage_encrypted_Set() const;
    bool is_storage_encrypted_Valid() const;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    QString getDbiResourceId() const;
    void setDbiResourceId(const QString &dbi_resource_id);
    bool is_dbi_resource_id_Set() const;
    bool is_dbi_resource_id_Valid() const;

    QString getCaCertificateIdentifier() const;
    void setCaCertificateIdentifier(const QString &ca_certificate_identifier);
    bool is_ca_certificate_identifier_Set() const;
    bool is_ca_certificate_identifier_Valid() const;

    bool getCopyTagsToSnapshot() const;
    void setCopyTagsToSnapshot(const bool &copy_tags_to_snapshot);
    bool is_copy_tags_to_snapshot_Set() const;
    bool is_copy_tags_to_snapshot_Valid() const;

    qint32 getPromotionTier() const;
    void setPromotionTier(const qint32 &promotion_tier);
    bool is_promotion_tier_Set() const;
    bool is_promotion_tier_Valid() const;

    QString getDbInstanceArn() const;
    void setDbInstanceArn(const QString &db_instance_arn);
    bool is_db_instance_arn_Set() const;
    bool is_db_instance_arn_Valid() const;

    QList getEnabledCloudwatchLogsExports() const;
    void setEnabledCloudwatchLogsExports(const QList &enabled_cloudwatch_logs_exports);
    bool is_enabled_cloudwatch_logs_exports_Set() const;
    bool is_enabled_cloudwatch_logs_exports_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_db_instance_identifier;
    bool m_db_instance_identifier_isSet;
    bool m_db_instance_identifier_isValid;

    QString m_db_instance_class;
    bool m_db_instance_class_isSet;
    bool m_db_instance_class_isValid;

    QString m_engine;
    bool m_engine_isSet;
    bool m_engine_isValid;

    QString m_db_instance_status;
    bool m_db_instance_status_isSet;
    bool m_db_instance_status_isValid;

    OAIDBInstance_Endpoint m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    QDateTime m_instance_create_time;
    bool m_instance_create_time_isSet;
    bool m_instance_create_time_isValid;

    QString m_preferred_backup_window;
    bool m_preferred_backup_window_isSet;
    bool m_preferred_backup_window_isValid;

    qint32 m_backup_retention_period;
    bool m_backup_retention_period_isSet;
    bool m_backup_retention_period_isValid;

    QList m_vpc_security_groups;
    bool m_vpc_security_groups_isSet;
    bool m_vpc_security_groups_isValid;

    QString m_availability_zone;
    bool m_availability_zone_isSet;
    bool m_availability_zone_isValid;

    OAIDBInstance_DBSubnetGroup m_db_subnet_group;
    bool m_db_subnet_group_isSet;
    bool m_db_subnet_group_isValid;

    QString m_preferred_maintenance_window;
    bool m_preferred_maintenance_window_isSet;
    bool m_preferred_maintenance_window_isValid;

    OAIDBInstance_PendingModifiedValues m_pending_modified_values;
    bool m_pending_modified_values_isSet;
    bool m_pending_modified_values_isValid;

    QDateTime m_latest_restorable_time;
    bool m_latest_restorable_time_isSet;
    bool m_latest_restorable_time_isValid;

    QString m_engine_version;
    bool m_engine_version_isSet;
    bool m_engine_version_isValid;

    bool m_auto_minor_version_upgrade;
    bool m_auto_minor_version_upgrade_isSet;
    bool m_auto_minor_version_upgrade_isValid;

    bool m_publicly_accessible;
    bool m_publicly_accessible_isSet;
    bool m_publicly_accessible_isValid;

    QList m_status_infos;
    bool m_status_infos_isSet;
    bool m_status_infos_isValid;

    QString m_db_cluster_identifier;
    bool m_db_cluster_identifier_isSet;
    bool m_db_cluster_identifier_isValid;

    bool m_storage_encrypted;
    bool m_storage_encrypted_isSet;
    bool m_storage_encrypted_isValid;

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;

    QString m_dbi_resource_id;
    bool m_dbi_resource_id_isSet;
    bool m_dbi_resource_id_isValid;

    QString m_ca_certificate_identifier;
    bool m_ca_certificate_identifier_isSet;
    bool m_ca_certificate_identifier_isValid;

    bool m_copy_tags_to_snapshot;
    bool m_copy_tags_to_snapshot_isSet;
    bool m_copy_tags_to_snapshot_isValid;

    qint32 m_promotion_tier;
    bool m_promotion_tier_isSet;
    bool m_promotion_tier_isValid;

    QString m_db_instance_arn;
    bool m_db_instance_arn_isSet;
    bool m_db_instance_arn_isValid;

    QList m_enabled_cloudwatch_logs_exports;
    bool m_enabled_cloudwatch_logs_exports_isSet;
    bool m_enabled_cloudwatch_logs_exports_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDBInstance)

#endif // OAIDBInstance_H
