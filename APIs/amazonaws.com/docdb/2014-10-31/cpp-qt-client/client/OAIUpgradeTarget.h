/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpgradeTarget.h
 *
 * The version of the database engine that an instance can be upgraded to.
 */

#ifndef OAIUpgradeTarget_H
#define OAIUpgradeTarget_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpgradeTarget : public OAIObject {
public:
    OAIUpgradeTarget();
    OAIUpgradeTarget(QString json);
    ~OAIUpgradeTarget() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEngine() const;
    void setEngine(const QString &engine);
    bool is_engine_Set() const;
    bool is_engine_Valid() const;

    QString getEngineVersion() const;
    void setEngineVersion(const QString &engine_version);
    bool is_engine_version_Set() const;
    bool is_engine_version_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool getAutoUpgrade() const;
    void setAutoUpgrade(const bool &auto_upgrade);
    bool is_auto_upgrade_Set() const;
    bool is_auto_upgrade_Valid() const;

    bool getIsMajorVersionUpgrade() const;
    void setIsMajorVersionUpgrade(const bool &is_major_version_upgrade);
    bool is_is_major_version_upgrade_Set() const;
    bool is_is_major_version_upgrade_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_engine;
    bool m_engine_isSet;
    bool m_engine_isValid;

    QString m_engine_version;
    bool m_engine_version_isSet;
    bool m_engine_version_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_auto_upgrade;
    bool m_auto_upgrade_isSet;
    bool m_auto_upgrade_isValid;

    bool m_is_major_version_upgrade;
    bool m_is_major_version_upgrade_isSet;
    bool m_is_major_version_upgrade_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpgradeTarget)

#endif // OAIUpgradeTarget_H
