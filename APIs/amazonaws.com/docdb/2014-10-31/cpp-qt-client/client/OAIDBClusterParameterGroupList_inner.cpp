/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDBClusterParameterGroupList_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDBClusterParameterGroupList_inner::OAIDBClusterParameterGroupList_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDBClusterParameterGroupList_inner::OAIDBClusterParameterGroupList_inner() {
    this->initializeModel();
}

OAIDBClusterParameterGroupList_inner::~OAIDBClusterParameterGroupList_inner() {}

void OAIDBClusterParameterGroupList_inner::initializeModel() {

    m_db_cluster_parameter_group_name_isSet = false;
    m_db_cluster_parameter_group_name_isValid = false;

    m_db_parameter_group_family_isSet = false;
    m_db_parameter_group_family_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_db_cluster_parameter_group_arn_isSet = false;
    m_db_cluster_parameter_group_arn_isValid = false;
}

void OAIDBClusterParameterGroupList_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDBClusterParameterGroupList_inner::fromJsonObject(QJsonObject json) {

    m_db_cluster_parameter_group_name_isValid = ::OpenAPI::fromJsonValue(m_db_cluster_parameter_group_name, json[QString("DBClusterParameterGroupName")]);
    m_db_cluster_parameter_group_name_isSet = !json[QString("DBClusterParameterGroupName")].isNull() && m_db_cluster_parameter_group_name_isValid;

    m_db_parameter_group_family_isValid = ::OpenAPI::fromJsonValue(m_db_parameter_group_family, json[QString("DBParameterGroupFamily")]);
    m_db_parameter_group_family_isSet = !json[QString("DBParameterGroupFamily")].isNull() && m_db_parameter_group_family_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_db_cluster_parameter_group_arn_isValid = ::OpenAPI::fromJsonValue(m_db_cluster_parameter_group_arn, json[QString("DBClusterParameterGroupArn")]);
    m_db_cluster_parameter_group_arn_isSet = !json[QString("DBClusterParameterGroupArn")].isNull() && m_db_cluster_parameter_group_arn_isValid;
}

QString OAIDBClusterParameterGroupList_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDBClusterParameterGroupList_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_db_cluster_parameter_group_name_isSet) {
        obj.insert(QString("DBClusterParameterGroupName"), ::OpenAPI::toJsonValue(m_db_cluster_parameter_group_name));
    }
    if (m_db_parameter_group_family_isSet) {
        obj.insert(QString("DBParameterGroupFamily"), ::OpenAPI::toJsonValue(m_db_parameter_group_family));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_db_cluster_parameter_group_arn_isSet) {
        obj.insert(QString("DBClusterParameterGroupArn"), ::OpenAPI::toJsonValue(m_db_cluster_parameter_group_arn));
    }
    return obj;
}

QString OAIDBClusterParameterGroupList_inner::getDbClusterParameterGroupName() const {
    return m_db_cluster_parameter_group_name;
}
void OAIDBClusterParameterGroupList_inner::setDbClusterParameterGroupName(const QString &db_cluster_parameter_group_name) {
    m_db_cluster_parameter_group_name = db_cluster_parameter_group_name;
    m_db_cluster_parameter_group_name_isSet = true;
}

bool OAIDBClusterParameterGroupList_inner::is_db_cluster_parameter_group_name_Set() const{
    return m_db_cluster_parameter_group_name_isSet;
}

bool OAIDBClusterParameterGroupList_inner::is_db_cluster_parameter_group_name_Valid() const{
    return m_db_cluster_parameter_group_name_isValid;
}

QString OAIDBClusterParameterGroupList_inner::getDbParameterGroupFamily() const {
    return m_db_parameter_group_family;
}
void OAIDBClusterParameterGroupList_inner::setDbParameterGroupFamily(const QString &db_parameter_group_family) {
    m_db_parameter_group_family = db_parameter_group_family;
    m_db_parameter_group_family_isSet = true;
}

bool OAIDBClusterParameterGroupList_inner::is_db_parameter_group_family_Set() const{
    return m_db_parameter_group_family_isSet;
}

bool OAIDBClusterParameterGroupList_inner::is_db_parameter_group_family_Valid() const{
    return m_db_parameter_group_family_isValid;
}

QString OAIDBClusterParameterGroupList_inner::getDescription() const {
    return m_description;
}
void OAIDBClusterParameterGroupList_inner::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDBClusterParameterGroupList_inner::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDBClusterParameterGroupList_inner::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIDBClusterParameterGroupList_inner::getDbClusterParameterGroupArn() const {
    return m_db_cluster_parameter_group_arn;
}
void OAIDBClusterParameterGroupList_inner::setDbClusterParameterGroupArn(const QString &db_cluster_parameter_group_arn) {
    m_db_cluster_parameter_group_arn = db_cluster_parameter_group_arn;
    m_db_cluster_parameter_group_arn_isSet = true;
}

bool OAIDBClusterParameterGroupList_inner::is_db_cluster_parameter_group_arn_Set() const{
    return m_db_cluster_parameter_group_arn_isSet;
}

bool OAIDBClusterParameterGroupList_inner::is_db_cluster_parameter_group_arn_Valid() const{
    return m_db_cluster_parameter_group_arn_isValid;
}

bool OAIDBClusterParameterGroupList_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_db_cluster_parameter_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_db_parameter_group_family_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_db_cluster_parameter_group_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDBClusterParameterGroupList_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
