/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRestoreDBClusterToPointInTimeMessage.h
 *
 * Represents the input to &lt;a&gt;RestoreDBClusterToPointInTime&lt;/a&gt;.
 */

#ifndef OAIRestoreDBClusterToPointInTimeMessage_H
#define OAIRestoreDBClusterToPointInTimeMessage_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRestoreDBClusterToPointInTimeMessage : public OAIObject {
public:
    OAIRestoreDBClusterToPointInTimeMessage();
    OAIRestoreDBClusterToPointInTimeMessage(QString json);
    ~OAIRestoreDBClusterToPointInTimeMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDbClusterIdentifier() const;
    void setDbClusterIdentifier(const QString &db_cluster_identifier);
    bool is_db_cluster_identifier_Set() const;
    bool is_db_cluster_identifier_Valid() const;

    QString getRestoreType() const;
    void setRestoreType(const QString &restore_type);
    bool is_restore_type_Set() const;
    bool is_restore_type_Valid() const;

    QString getSourceDbClusterIdentifier() const;
    void setSourceDbClusterIdentifier(const QString &source_db_cluster_identifier);
    bool is_source_db_cluster_identifier_Set() const;
    bool is_source_db_cluster_identifier_Valid() const;

    QDateTime getRestoreToTime() const;
    void setRestoreToTime(const QDateTime &restore_to_time);
    bool is_restore_to_time_Set() const;
    bool is_restore_to_time_Valid() const;

    bool getUseLatestRestorableTime() const;
    void setUseLatestRestorableTime(const bool &use_latest_restorable_time);
    bool is_use_latest_restorable_time_Set() const;
    bool is_use_latest_restorable_time_Valid() const;

    qint32 getPort() const;
    void setPort(const qint32 &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    QString getDbSubnetGroupName() const;
    void setDbSubnetGroupName(const QString &db_subnet_group_name);
    bool is_db_subnet_group_name_Set() const;
    bool is_db_subnet_group_name_Valid() const;

    QList getVpcSecurityGroupIds() const;
    void setVpcSecurityGroupIds(const QList &vpc_security_group_ids);
    bool is_vpc_security_group_ids_Set() const;
    bool is_vpc_security_group_ids_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    QList getEnableCloudwatchLogsExports() const;
    void setEnableCloudwatchLogsExports(const QList &enable_cloudwatch_logs_exports);
    bool is_enable_cloudwatch_logs_exports_Set() const;
    bool is_enable_cloudwatch_logs_exports_Valid() const;

    bool getDeletionProtection() const;
    void setDeletionProtection(const bool &deletion_protection);
    bool is_deletion_protection_Set() const;
    bool is_deletion_protection_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_db_cluster_identifier;
    bool m_db_cluster_identifier_isSet;
    bool m_db_cluster_identifier_isValid;

    QString m_restore_type;
    bool m_restore_type_isSet;
    bool m_restore_type_isValid;

    QString m_source_db_cluster_identifier;
    bool m_source_db_cluster_identifier_isSet;
    bool m_source_db_cluster_identifier_isValid;

    QDateTime m_restore_to_time;
    bool m_restore_to_time_isSet;
    bool m_restore_to_time_isValid;

    bool m_use_latest_restorable_time;
    bool m_use_latest_restorable_time_isSet;
    bool m_use_latest_restorable_time_isValid;

    qint32 m_port;
    bool m_port_isSet;
    bool m_port_isValid;

    QString m_db_subnet_group_name;
    bool m_db_subnet_group_name_isSet;
    bool m_db_subnet_group_name_isValid;

    QList m_vpc_security_group_ids;
    bool m_vpc_security_group_ids_isSet;
    bool m_vpc_security_group_ids_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;

    QList m_enable_cloudwatch_logs_exports;
    bool m_enable_cloudwatch_logs_exports_isSet;
    bool m_enable_cloudwatch_logs_exports_isValid;

    bool m_deletion_protection;
    bool m_deletion_protection_isSet;
    bool m_deletion_protection_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRestoreDBClusterToPointInTimeMessage)

#endif // OAIRestoreDBClusterToPointInTimeMessage_H
