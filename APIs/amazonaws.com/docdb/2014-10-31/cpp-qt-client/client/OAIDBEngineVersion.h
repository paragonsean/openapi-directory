/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDBEngineVersion.h
 *
 *  Detailed information about an engine version. 
 */

#ifndef OAIDBEngineVersion_H
#define OAIDBEngineVersion_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDBEngineVersion : public OAIObject {
public:
    OAIDBEngineVersion();
    OAIDBEngineVersion(QString json);
    ~OAIDBEngineVersion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEngine() const;
    void setEngine(const QString &engine);
    bool is_engine_Set() const;
    bool is_engine_Valid() const;

    QString getEngineVersion() const;
    void setEngineVersion(const QString &engine_version);
    bool is_engine_version_Set() const;
    bool is_engine_version_Valid() const;

    QString getDbParameterGroupFamily() const;
    void setDbParameterGroupFamily(const QString &db_parameter_group_family);
    bool is_db_parameter_group_family_Set() const;
    bool is_db_parameter_group_family_Valid() const;

    QString getDbEngineDescription() const;
    void setDbEngineDescription(const QString &db_engine_description);
    bool is_db_engine_description_Set() const;
    bool is_db_engine_description_Valid() const;

    QString getDbEngineVersionDescription() const;
    void setDbEngineVersionDescription(const QString &db_engine_version_description);
    bool is_db_engine_version_description_Set() const;
    bool is_db_engine_version_description_Valid() const;

    QList getValidUpgradeTarget() const;
    void setValidUpgradeTarget(const QList &valid_upgrade_target);
    bool is_valid_upgrade_target_Set() const;
    bool is_valid_upgrade_target_Valid() const;

    QList getExportableLogTypes() const;
    void setExportableLogTypes(const QList &exportable_log_types);
    bool is_exportable_log_types_Set() const;
    bool is_exportable_log_types_Valid() const;

    bool getSupportsLogExportsToCloudwatchLogs() const;
    void setSupportsLogExportsToCloudwatchLogs(const bool &supports_log_exports_to_cloudwatch_logs);
    bool is_supports_log_exports_to_cloudwatch_logs_Set() const;
    bool is_supports_log_exports_to_cloudwatch_logs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_engine;
    bool m_engine_isSet;
    bool m_engine_isValid;

    QString m_engine_version;
    bool m_engine_version_isSet;
    bool m_engine_version_isValid;

    QString m_db_parameter_group_family;
    bool m_db_parameter_group_family_isSet;
    bool m_db_parameter_group_family_isValid;

    QString m_db_engine_description;
    bool m_db_engine_description_isSet;
    bool m_db_engine_description_isValid;

    QString m_db_engine_version_description;
    bool m_db_engine_version_description_isSet;
    bool m_db_engine_version_description_isValid;

    QList m_valid_upgrade_target;
    bool m_valid_upgrade_target_isSet;
    bool m_valid_upgrade_target_isValid;

    QList m_exportable_log_types;
    bool m_exportable_log_types_isSet;
    bool m_exportable_log_types_isValid;

    bool m_supports_log_exports_to_cloudwatch_logs;
    bool m_supports_log_exports_to_cloudwatch_logs_isSet;
    bool m_supports_log_exports_to_cloudwatch_logs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDBEngineVersion)

#endif // OAIDBEngineVersion_H
