/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModifyDBClusterSnapshotAttributeMessage.h
 *
 * Represents the input to &lt;a&gt;ModifyDBClusterSnapshotAttribute&lt;/a&gt;.
 */

#ifndef OAIModifyDBClusterSnapshotAttributeMessage_H
#define OAIModifyDBClusterSnapshotAttributeMessage_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIModifyDBClusterSnapshotAttributeMessage : public OAIObject {
public:
    OAIModifyDBClusterSnapshotAttributeMessage();
    OAIModifyDBClusterSnapshotAttributeMessage(QString json);
    ~OAIModifyDBClusterSnapshotAttributeMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDbClusterSnapshotIdentifier() const;
    void setDbClusterSnapshotIdentifier(const QString &db_cluster_snapshot_identifier);
    bool is_db_cluster_snapshot_identifier_Set() const;
    bool is_db_cluster_snapshot_identifier_Valid() const;

    QString getAttributeName() const;
    void setAttributeName(const QString &attribute_name);
    bool is_attribute_name_Set() const;
    bool is_attribute_name_Valid() const;

    QList getValuesToAdd() const;
    void setValuesToAdd(const QList &values_to_add);
    bool is_values_to_add_Set() const;
    bool is_values_to_add_Valid() const;

    QList getValuesToRemove() const;
    void setValuesToRemove(const QList &values_to_remove);
    bool is_values_to_remove_Set() const;
    bool is_values_to_remove_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_db_cluster_snapshot_identifier;
    bool m_db_cluster_snapshot_identifier_isSet;
    bool m_db_cluster_snapshot_identifier_isValid;

    QString m_attribute_name;
    bool m_attribute_name_isSet;
    bool m_attribute_name_isValid;

    QList m_values_to_add;
    bool m_values_to_add_isSet;
    bool m_values_to_add_isValid;

    QList m_values_to_remove;
    bool m_values_to_remove_isSet;
    bool m_values_to_remove_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModifyDBClusterSnapshotAttributeMessage)

#endif // OAIModifyDBClusterSnapshotAttributeMessage_H
