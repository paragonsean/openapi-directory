/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPendingMaintenanceActions_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPendingMaintenanceActions_inner::OAIPendingMaintenanceActions_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPendingMaintenanceActions_inner::OAIPendingMaintenanceActions_inner() {
    this->initializeModel();
}

OAIPendingMaintenanceActions_inner::~OAIPendingMaintenanceActions_inner() {}

void OAIPendingMaintenanceActions_inner::initializeModel() {

    m_resource_identifier_isSet = false;
    m_resource_identifier_isValid = false;

    m_pending_maintenance_action_details_isSet = false;
    m_pending_maintenance_action_details_isValid = false;
}

void OAIPendingMaintenanceActions_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPendingMaintenanceActions_inner::fromJsonObject(QJsonObject json) {

    m_resource_identifier_isValid = ::OpenAPI::fromJsonValue(m_resource_identifier, json[QString("ResourceIdentifier")]);
    m_resource_identifier_isSet = !json[QString("ResourceIdentifier")].isNull() && m_resource_identifier_isValid;

    m_pending_maintenance_action_details_isValid = ::OpenAPI::fromJsonValue(m_pending_maintenance_action_details, json[QString("PendingMaintenanceActionDetails")]);
    m_pending_maintenance_action_details_isSet = !json[QString("PendingMaintenanceActionDetails")].isNull() && m_pending_maintenance_action_details_isValid;
}

QString OAIPendingMaintenanceActions_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPendingMaintenanceActions_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_identifier_isSet) {
        obj.insert(QString("ResourceIdentifier"), ::OpenAPI::toJsonValue(m_resource_identifier));
    }
    if (m_pending_maintenance_action_details.isSet()) {
        obj.insert(QString("PendingMaintenanceActionDetails"), ::OpenAPI::toJsonValue(m_pending_maintenance_action_details));
    }
    return obj;
}

QString OAIPendingMaintenanceActions_inner::getResourceIdentifier() const {
    return m_resource_identifier;
}
void OAIPendingMaintenanceActions_inner::setResourceIdentifier(const QString &resource_identifier) {
    m_resource_identifier = resource_identifier;
    m_resource_identifier_isSet = true;
}

bool OAIPendingMaintenanceActions_inner::is_resource_identifier_Set() const{
    return m_resource_identifier_isSet;
}

bool OAIPendingMaintenanceActions_inner::is_resource_identifier_Valid() const{
    return m_resource_identifier_isValid;
}

QList OAIPendingMaintenanceActions_inner::getPendingMaintenanceActionDetails() const {
    return m_pending_maintenance_action_details;
}
void OAIPendingMaintenanceActions_inner::setPendingMaintenanceActionDetails(const QList &pending_maintenance_action_details) {
    m_pending_maintenance_action_details = pending_maintenance_action_details;
    m_pending_maintenance_action_details_isSet = true;
}

bool OAIPendingMaintenanceActions_inner::is_pending_maintenance_action_details_Set() const{
    return m_pending_maintenance_action_details_isSet;
}

bool OAIPendingMaintenanceActions_inner::is_pending_maintenance_action_details_Valid() const{
    return m_pending_maintenance_action_details_isValid;
}

bool OAIPendingMaintenanceActions_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pending_maintenance_action_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPendingMaintenanceActions_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
