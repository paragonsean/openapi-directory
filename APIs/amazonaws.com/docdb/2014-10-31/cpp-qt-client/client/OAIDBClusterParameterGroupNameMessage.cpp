/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDBClusterParameterGroupNameMessage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDBClusterParameterGroupNameMessage::OAIDBClusterParameterGroupNameMessage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDBClusterParameterGroupNameMessage::OAIDBClusterParameterGroupNameMessage() {
    this->initializeModel();
}

OAIDBClusterParameterGroupNameMessage::~OAIDBClusterParameterGroupNameMessage() {}

void OAIDBClusterParameterGroupNameMessage::initializeModel() {

    m_db_cluster_parameter_group_name_isSet = false;
    m_db_cluster_parameter_group_name_isValid = false;
}

void OAIDBClusterParameterGroupNameMessage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDBClusterParameterGroupNameMessage::fromJsonObject(QJsonObject json) {

    m_db_cluster_parameter_group_name_isValid = ::OpenAPI::fromJsonValue(m_db_cluster_parameter_group_name, json[QString("DBClusterParameterGroupName")]);
    m_db_cluster_parameter_group_name_isSet = !json[QString("DBClusterParameterGroupName")].isNull() && m_db_cluster_parameter_group_name_isValid;
}

QString OAIDBClusterParameterGroupNameMessage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDBClusterParameterGroupNameMessage::asJsonObject() const {
    QJsonObject obj;
    if (m_db_cluster_parameter_group_name_isSet) {
        obj.insert(QString("DBClusterParameterGroupName"), ::OpenAPI::toJsonValue(m_db_cluster_parameter_group_name));
    }
    return obj;
}

QString OAIDBClusterParameterGroupNameMessage::getDbClusterParameterGroupName() const {
    return m_db_cluster_parameter_group_name;
}
void OAIDBClusterParameterGroupNameMessage::setDbClusterParameterGroupName(const QString &db_cluster_parameter_group_name) {
    m_db_cluster_parameter_group_name = db_cluster_parameter_group_name;
    m_db_cluster_parameter_group_name_isSet = true;
}

bool OAIDBClusterParameterGroupNameMessage::is_db_cluster_parameter_group_name_Set() const{
    return m_db_cluster_parameter_group_name_isSet;
}

bool OAIDBClusterParameterGroupNameMessage::is_db_cluster_parameter_group_name_Valid() const{
    return m_db_cluster_parameter_group_name_isValid;
}

bool OAIDBClusterParameterGroupNameMessage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_db_cluster_parameter_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDBClusterParameterGroupNameMessage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
