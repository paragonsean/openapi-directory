/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateDBInstanceMessage.h
 *
 * Represents the input to &lt;a&gt;CreateDBInstance&lt;/a&gt;.
 */

#ifndef OAICreateDBInstanceMessage_H
#define OAICreateDBInstanceMessage_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateDBInstanceMessage : public OAIObject {
public:
    OAICreateDBInstanceMessage();
    OAICreateDBInstanceMessage(QString json);
    ~OAICreateDBInstanceMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDbInstanceIdentifier() const;
    void setDbInstanceIdentifier(const QString &db_instance_identifier);
    bool is_db_instance_identifier_Set() const;
    bool is_db_instance_identifier_Valid() const;

    QString getDbInstanceClass() const;
    void setDbInstanceClass(const QString &db_instance_class);
    bool is_db_instance_class_Set() const;
    bool is_db_instance_class_Valid() const;

    QString getEngine() const;
    void setEngine(const QString &engine);
    bool is_engine_Set() const;
    bool is_engine_Valid() const;

    QString getAvailabilityZone() const;
    void setAvailabilityZone(const QString &availability_zone);
    bool is_availability_zone_Set() const;
    bool is_availability_zone_Valid() const;

    QString getPreferredMaintenanceWindow() const;
    void setPreferredMaintenanceWindow(const QString &preferred_maintenance_window);
    bool is_preferred_maintenance_window_Set() const;
    bool is_preferred_maintenance_window_Valid() const;

    bool getAutoMinorVersionUpgrade() const;
    void setAutoMinorVersionUpgrade(const bool &auto_minor_version_upgrade);
    bool is_auto_minor_version_upgrade_Set() const;
    bool is_auto_minor_version_upgrade_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getDbClusterIdentifier() const;
    void setDbClusterIdentifier(const QString &db_cluster_identifier);
    bool is_db_cluster_identifier_Set() const;
    bool is_db_cluster_identifier_Valid() const;

    bool getCopyTagsToSnapshot() const;
    void setCopyTagsToSnapshot(const bool &copy_tags_to_snapshot);
    bool is_copy_tags_to_snapshot_Set() const;
    bool is_copy_tags_to_snapshot_Valid() const;

    qint32 getPromotionTier() const;
    void setPromotionTier(const qint32 &promotion_tier);
    bool is_promotion_tier_Set() const;
    bool is_promotion_tier_Valid() const;

    bool getEnablePerformanceInsights() const;
    void setEnablePerformanceInsights(const bool &enable_performance_insights);
    bool is_enable_performance_insights_Set() const;
    bool is_enable_performance_insights_Valid() const;

    QString getPerformanceInsightsKmsKeyId() const;
    void setPerformanceInsightsKmsKeyId(const QString &performance_insights_kms_key_id);
    bool is_performance_insights_kms_key_id_Set() const;
    bool is_performance_insights_kms_key_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_db_instance_identifier;
    bool m_db_instance_identifier_isSet;
    bool m_db_instance_identifier_isValid;

    QString m_db_instance_class;
    bool m_db_instance_class_isSet;
    bool m_db_instance_class_isValid;

    QString m_engine;
    bool m_engine_isSet;
    bool m_engine_isValid;

    QString m_availability_zone;
    bool m_availability_zone_isSet;
    bool m_availability_zone_isValid;

    QString m_preferred_maintenance_window;
    bool m_preferred_maintenance_window_isSet;
    bool m_preferred_maintenance_window_isValid;

    bool m_auto_minor_version_upgrade;
    bool m_auto_minor_version_upgrade_isSet;
    bool m_auto_minor_version_upgrade_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_db_cluster_identifier;
    bool m_db_cluster_identifier_isSet;
    bool m_db_cluster_identifier_isValid;

    bool m_copy_tags_to_snapshot;
    bool m_copy_tags_to_snapshot_isSet;
    bool m_copy_tags_to_snapshot_isValid;

    qint32 m_promotion_tier;
    bool m_promotion_tier_isSet;
    bool m_promotion_tier_isValid;

    bool m_enable_performance_insights;
    bool m_enable_performance_insights_isSet;
    bool m_enable_performance_insights_isValid;

    QString m_performance_insights_kms_key_id;
    bool m_performance_insights_kms_key_id_isSet;
    bool m_performance_insights_kms_key_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateDBInstanceMessage)

#endif // OAICreateDBInstanceMessage_H
