/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventList_inner.h
 *
 * 
 */

#ifndef OAIEventList_inner_H
#define OAIEventList_inner_H

#include <QJsonObject>

#include "OAISourceType.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEventList_inner : public OAIObject {
public:
    OAIEventList_inner();
    OAIEventList_inner(QString json);
    ~OAIEventList_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSourceIdentifier() const;
    void setSourceIdentifier(const QString &source_identifier);
    bool is_source_identifier_Set() const;
    bool is_source_identifier_Valid() const;

    OAISourceType getSourceType() const;
    void setSourceType(const OAISourceType &source_type);
    bool is_source_type_Set() const;
    bool is_source_type_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QList getEventCategories() const;
    void setEventCategories(const QList &event_categories);
    bool is_event_categories_Set() const;
    bool is_event_categories_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getSourceArn() const;
    void setSourceArn(const QString &source_arn);
    bool is_source_arn_Set() const;
    bool is_source_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_source_identifier;
    bool m_source_identifier_isSet;
    bool m_source_identifier_isValid;

    OAISourceType m_source_type;
    bool m_source_type_isSet;
    bool m_source_type_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QList m_event_categories;
    bool m_event_categories_isSet;
    bool m_event_categories_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_source_arn;
    bool m_source_arn_isSet;
    bool m_source_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventList_inner)

#endif // OAIEventList_inner_H
