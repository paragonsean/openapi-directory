/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPendingModifiedValues_PendingCloudwatchLogsExports.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPendingModifiedValues_PendingCloudwatchLogsExports::OAIPendingModifiedValues_PendingCloudwatchLogsExports(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPendingModifiedValues_PendingCloudwatchLogsExports::OAIPendingModifiedValues_PendingCloudwatchLogsExports() {
    this->initializeModel();
}

OAIPendingModifiedValues_PendingCloudwatchLogsExports::~OAIPendingModifiedValues_PendingCloudwatchLogsExports() {}

void OAIPendingModifiedValues_PendingCloudwatchLogsExports::initializeModel() {

    m_log_types_to_enable_isSet = false;
    m_log_types_to_enable_isValid = false;

    m_log_types_to_disable_isSet = false;
    m_log_types_to_disable_isValid = false;
}

void OAIPendingModifiedValues_PendingCloudwatchLogsExports::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPendingModifiedValues_PendingCloudwatchLogsExports::fromJsonObject(QJsonObject json) {

    m_log_types_to_enable_isValid = ::OpenAPI::fromJsonValue(m_log_types_to_enable, json[QString("LogTypesToEnable")]);
    m_log_types_to_enable_isSet = !json[QString("LogTypesToEnable")].isNull() && m_log_types_to_enable_isValid;

    m_log_types_to_disable_isValid = ::OpenAPI::fromJsonValue(m_log_types_to_disable, json[QString("LogTypesToDisable")]);
    m_log_types_to_disable_isSet = !json[QString("LogTypesToDisable")].isNull() && m_log_types_to_disable_isValid;
}

QString OAIPendingModifiedValues_PendingCloudwatchLogsExports::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPendingModifiedValues_PendingCloudwatchLogsExports::asJsonObject() const {
    QJsonObject obj;
    if (m_log_types_to_enable.isSet()) {
        obj.insert(QString("LogTypesToEnable"), ::OpenAPI::toJsonValue(m_log_types_to_enable));
    }
    if (m_log_types_to_disable.isSet()) {
        obj.insert(QString("LogTypesToDisable"), ::OpenAPI::toJsonValue(m_log_types_to_disable));
    }
    return obj;
}

QList OAIPendingModifiedValues_PendingCloudwatchLogsExports::getLogTypesToEnable() const {
    return m_log_types_to_enable;
}
void OAIPendingModifiedValues_PendingCloudwatchLogsExports::setLogTypesToEnable(const QList &log_types_to_enable) {
    m_log_types_to_enable = log_types_to_enable;
    m_log_types_to_enable_isSet = true;
}

bool OAIPendingModifiedValues_PendingCloudwatchLogsExports::is_log_types_to_enable_Set() const{
    return m_log_types_to_enable_isSet;
}

bool OAIPendingModifiedValues_PendingCloudwatchLogsExports::is_log_types_to_enable_Valid() const{
    return m_log_types_to_enable_isValid;
}

QList OAIPendingModifiedValues_PendingCloudwatchLogsExports::getLogTypesToDisable() const {
    return m_log_types_to_disable;
}
void OAIPendingModifiedValues_PendingCloudwatchLogsExports::setLogTypesToDisable(const QList &log_types_to_disable) {
    m_log_types_to_disable = log_types_to_disable;
    m_log_types_to_disable_isSet = true;
}

bool OAIPendingModifiedValues_PendingCloudwatchLogsExports::is_log_types_to_disable_Set() const{
    return m_log_types_to_disable_isSet;
}

bool OAIPendingModifiedValues_PendingCloudwatchLogsExports::is_log_types_to_disable_Valid() const{
    return m_log_types_to_disable_isValid;
}

bool OAIPendingModifiedValues_PendingCloudwatchLogsExports::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_log_types_to_enable.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_types_to_disable.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPendingModifiedValues_PendingCloudwatchLogsExports::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
