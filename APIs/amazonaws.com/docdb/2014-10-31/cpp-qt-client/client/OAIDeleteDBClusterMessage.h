/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteDBClusterMessage.h
 *
 * Represents the input to &lt;a&gt;DeleteDBCluster&lt;/a&gt;.
 */

#ifndef OAIDeleteDBClusterMessage_H
#define OAIDeleteDBClusterMessage_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeleteDBClusterMessage : public OAIObject {
public:
    OAIDeleteDBClusterMessage();
    OAIDeleteDBClusterMessage(QString json);
    ~OAIDeleteDBClusterMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDbClusterIdentifier() const;
    void setDbClusterIdentifier(const QString &db_cluster_identifier);
    bool is_db_cluster_identifier_Set() const;
    bool is_db_cluster_identifier_Valid() const;

    bool getSkipFinalSnapshot() const;
    void setSkipFinalSnapshot(const bool &skip_final_snapshot);
    bool is_skip_final_snapshot_Set() const;
    bool is_skip_final_snapshot_Valid() const;

    QString getFinalDbSnapshotIdentifier() const;
    void setFinalDbSnapshotIdentifier(const QString &final_db_snapshot_identifier);
    bool is_final_db_snapshot_identifier_Set() const;
    bool is_final_db_snapshot_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_db_cluster_identifier;
    bool m_db_cluster_identifier_isSet;
    bool m_db_cluster_identifier_isValid;

    bool m_skip_final_snapshot;
    bool m_skip_final_snapshot_isSet;
    bool m_skip_final_snapshot_isValid;

    QString m_final_db_snapshot_identifier;
    bool m_final_db_snapshot_identifier_isSet;
    bool m_final_db_snapshot_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteDBClusterMessage)

#endif // OAIDeleteDBClusterMessage_H
