/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDBClusterList_inner.h
 *
 * 
 */

#ifndef OAIDBClusterList_inner_H
#define OAIDBClusterList_inner_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDBClusterList_inner : public OAIObject {
public:
    OAIDBClusterList_inner();
    OAIDBClusterList_inner(QString json);
    ~OAIDBClusterList_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAvailabilityZones() const;
    void setAvailabilityZones(const QList &availability_zones);
    bool is_availability_zones_Set() const;
    bool is_availability_zones_Valid() const;

    qint32 getBackupRetentionPeriod() const;
    void setBackupRetentionPeriod(const qint32 &backup_retention_period);
    bool is_backup_retention_period_Set() const;
    bool is_backup_retention_period_Valid() const;

    QString getDbClusterIdentifier() const;
    void setDbClusterIdentifier(const QString &db_cluster_identifier);
    bool is_db_cluster_identifier_Set() const;
    bool is_db_cluster_identifier_Valid() const;

    QString getDbClusterParameterGroup() const;
    void setDbClusterParameterGroup(const QString &db_cluster_parameter_group);
    bool is_db_cluster_parameter_group_Set() const;
    bool is_db_cluster_parameter_group_Valid() const;

    QString getDbSubnetGroup() const;
    void setDbSubnetGroup(const QString &db_subnet_group);
    bool is_db_subnet_group_Set() const;
    bool is_db_subnet_group_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getPercentProgress() const;
    void setPercentProgress(const QString &percent_progress);
    bool is_percent_progress_Set() const;
    bool is_percent_progress_Valid() const;

    QDateTime getEarliestRestorableTime() const;
    void setEarliestRestorableTime(const QDateTime &earliest_restorable_time);
    bool is_earliest_restorable_time_Set() const;
    bool is_earliest_restorable_time_Valid() const;

    QString getEndpoint() const;
    void setEndpoint(const QString &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    QString getReaderEndpoint() const;
    void setReaderEndpoint(const QString &reader_endpoint);
    bool is_reader_endpoint_Set() const;
    bool is_reader_endpoint_Valid() const;

    bool getMultiAz() const;
    void setMultiAz(const bool &multi_az);
    bool is_multi_az_Set() const;
    bool is_multi_az_Valid() const;

    QString getEngine() const;
    void setEngine(const QString &engine);
    bool is_engine_Set() const;
    bool is_engine_Valid() const;

    QString getEngineVersion() const;
    void setEngineVersion(const QString &engine_version);
    bool is_engine_version_Set() const;
    bool is_engine_version_Valid() const;

    QDateTime getLatestRestorableTime() const;
    void setLatestRestorableTime(const QDateTime &latest_restorable_time);
    bool is_latest_restorable_time_Set() const;
    bool is_latest_restorable_time_Valid() const;

    qint32 getPort() const;
    void setPort(const qint32 &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    QString getMasterUsername() const;
    void setMasterUsername(const QString &master_username);
    bool is_master_username_Set() const;
    bool is_master_username_Valid() const;

    QString getPreferredBackupWindow() const;
    void setPreferredBackupWindow(const QString &preferred_backup_window);
    bool is_preferred_backup_window_Set() const;
    bool is_preferred_backup_window_Valid() const;

    QString getPreferredMaintenanceWindow() const;
    void setPreferredMaintenanceWindow(const QString &preferred_maintenance_window);
    bool is_preferred_maintenance_window_Set() const;
    bool is_preferred_maintenance_window_Valid() const;

    QString getReplicationSourceIdentifier() const;
    void setReplicationSourceIdentifier(const QString &replication_source_identifier);
    bool is_replication_source_identifier_Set() const;
    bool is_replication_source_identifier_Valid() const;

    QList getReadReplicaIdentifiers() const;
    void setReadReplicaIdentifiers(const QList &read_replica_identifiers);
    bool is_read_replica_identifiers_Set() const;
    bool is_read_replica_identifiers_Valid() const;

    QList getDbClusterMembers() const;
    void setDbClusterMembers(const QList &db_cluster_members);
    bool is_db_cluster_members_Set() const;
    bool is_db_cluster_members_Valid() const;

    QList getVpcSecurityGroups() const;
    void setVpcSecurityGroups(const QList &vpc_security_groups);
    bool is_vpc_security_groups_Set() const;
    bool is_vpc_security_groups_Valid() const;

    QString getHostedZoneId() const;
    void setHostedZoneId(const QString &hosted_zone_id);
    bool is_hosted_zone_id_Set() const;
    bool is_hosted_zone_id_Valid() const;

    bool getStorageEncrypted() const;
    void setStorageEncrypted(const bool &storage_encrypted);
    bool is_storage_encrypted_Set() const;
    bool is_storage_encrypted_Valid() const;

    QString getKmsKeyId() const;
    void setKmsKeyId(const QString &kms_key_id);
    bool is_kms_key_id_Set() const;
    bool is_kms_key_id_Valid() const;

    QString getDbClusterResourceId() const;
    void setDbClusterResourceId(const QString &db_cluster_resource_id);
    bool is_db_cluster_resource_id_Set() const;
    bool is_db_cluster_resource_id_Valid() const;

    QString getDbClusterArn() const;
    void setDbClusterArn(const QString &db_cluster_arn);
    bool is_db_cluster_arn_Set() const;
    bool is_db_cluster_arn_Valid() const;

    QList getAssociatedRoles() const;
    void setAssociatedRoles(const QList &associated_roles);
    bool is_associated_roles_Set() const;
    bool is_associated_roles_Valid() const;

    QString getCloneGroupId() const;
    void setCloneGroupId(const QString &clone_group_id);
    bool is_clone_group_id_Set() const;
    bool is_clone_group_id_Valid() const;

    QDateTime getClusterCreateTime() const;
    void setClusterCreateTime(const QDateTime &cluster_create_time);
    bool is_cluster_create_time_Set() const;
    bool is_cluster_create_time_Valid() const;

    QList getEnabledCloudwatchLogsExports() const;
    void setEnabledCloudwatchLogsExports(const QList &enabled_cloudwatch_logs_exports);
    bool is_enabled_cloudwatch_logs_exports_Set() const;
    bool is_enabled_cloudwatch_logs_exports_Valid() const;

    bool getDeletionProtection() const;
    void setDeletionProtection(const bool &deletion_protection);
    bool is_deletion_protection_Set() const;
    bool is_deletion_protection_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_availability_zones;
    bool m_availability_zones_isSet;
    bool m_availability_zones_isValid;

    qint32 m_backup_retention_period;
    bool m_backup_retention_period_isSet;
    bool m_backup_retention_period_isValid;

    QString m_db_cluster_identifier;
    bool m_db_cluster_identifier_isSet;
    bool m_db_cluster_identifier_isValid;

    QString m_db_cluster_parameter_group;
    bool m_db_cluster_parameter_group_isSet;
    bool m_db_cluster_parameter_group_isValid;

    QString m_db_subnet_group;
    bool m_db_subnet_group_isSet;
    bool m_db_subnet_group_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_percent_progress;
    bool m_percent_progress_isSet;
    bool m_percent_progress_isValid;

    QDateTime m_earliest_restorable_time;
    bool m_earliest_restorable_time_isSet;
    bool m_earliest_restorable_time_isValid;

    QString m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    QString m_reader_endpoint;
    bool m_reader_endpoint_isSet;
    bool m_reader_endpoint_isValid;

    bool m_multi_az;
    bool m_multi_az_isSet;
    bool m_multi_az_isValid;

    QString m_engine;
    bool m_engine_isSet;
    bool m_engine_isValid;

    QString m_engine_version;
    bool m_engine_version_isSet;
    bool m_engine_version_isValid;

    QDateTime m_latest_restorable_time;
    bool m_latest_restorable_time_isSet;
    bool m_latest_restorable_time_isValid;

    qint32 m_port;
    bool m_port_isSet;
    bool m_port_isValid;

    QString m_master_username;
    bool m_master_username_isSet;
    bool m_master_username_isValid;

    QString m_preferred_backup_window;
    bool m_preferred_backup_window_isSet;
    bool m_preferred_backup_window_isValid;

    QString m_preferred_maintenance_window;
    bool m_preferred_maintenance_window_isSet;
    bool m_preferred_maintenance_window_isValid;

    QString m_replication_source_identifier;
    bool m_replication_source_identifier_isSet;
    bool m_replication_source_identifier_isValid;

    QList m_read_replica_identifiers;
    bool m_read_replica_identifiers_isSet;
    bool m_read_replica_identifiers_isValid;

    QList m_db_cluster_members;
    bool m_db_cluster_members_isSet;
    bool m_db_cluster_members_isValid;

    QList m_vpc_security_groups;
    bool m_vpc_security_groups_isSet;
    bool m_vpc_security_groups_isValid;

    QString m_hosted_zone_id;
    bool m_hosted_zone_id_isSet;
    bool m_hosted_zone_id_isValid;

    bool m_storage_encrypted;
    bool m_storage_encrypted_isSet;
    bool m_storage_encrypted_isValid;

    QString m_kms_key_id;
    bool m_kms_key_id_isSet;
    bool m_kms_key_id_isValid;

    QString m_db_cluster_resource_id;
    bool m_db_cluster_resource_id_isSet;
    bool m_db_cluster_resource_id_isValid;

    QString m_db_cluster_arn;
    bool m_db_cluster_arn_isSet;
    bool m_db_cluster_arn_isValid;

    QList m_associated_roles;
    bool m_associated_roles_isSet;
    bool m_associated_roles_isValid;

    QString m_clone_group_id;
    bool m_clone_group_id_isSet;
    bool m_clone_group_id_isValid;

    QDateTime m_cluster_create_time;
    bool m_cluster_create_time_isSet;
    bool m_cluster_create_time_isValid;

    QList m_enabled_cloudwatch_logs_exports;
    bool m_enabled_cloudwatch_logs_exports_isSet;
    bool m_enabled_cloudwatch_logs_exports_isValid;

    bool m_deletion_protection;
    bool m_deletion_protection_isSet;
    bool m_deletion_protection_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDBClusterList_inner)

#endif // OAIDBClusterList_inner_H
