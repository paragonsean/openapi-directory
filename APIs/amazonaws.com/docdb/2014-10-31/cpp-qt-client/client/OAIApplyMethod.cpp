/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplyMethod.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplyMethod::OAIApplyMethod(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplyMethod::OAIApplyMethod() {
    this->initializeModel();
}

OAIApplyMethod::~OAIApplyMethod() {}

void OAIApplyMethod::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIApplyMethod::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIApplyMethod::fromJson(QString jsonString) {
    
    if ( jsonString.compare("immediate", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApplyMethod::IMMEDIATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pending-reboot", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApplyMethod::PENDING_REBOOT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIApplyMethod::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIApplyMethod::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIApplyMethod::IMMEDIATE:
            val = "immediate";
            break;
        case eOAIApplyMethod::PENDING_REBOOT:
            val = "pending-reboot";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIApplyMethod::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIApplyMethod::eOAIApplyMethod OAIApplyMethod::getValue() const {
    return m_value;
}

void OAIApplyMethod::setValue(const OAIApplyMethod::eOAIApplyMethod& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIApplyMethod::isSet() const {
    
    return m_value_isSet;
}

bool OAIApplyMethod::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
