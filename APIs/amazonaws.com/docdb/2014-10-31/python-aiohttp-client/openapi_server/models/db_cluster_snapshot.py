# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DBClusterSnapshot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, availability_zones: List=None, db_cluster_snapshot_identifier: str=None, db_cluster_identifier: str=None, snapshot_create_time: datetime=None, engine: str=None, status: str=None, port: int=None, vpc_id: str=None, cluster_create_time: datetime=None, master_username: str=None, engine_version: str=None, snapshot_type: str=None, percent_progress: int=None, storage_encrypted: bool=None, kms_key_id: str=None, db_cluster_snapshot_arn: str=None, source_db_cluster_snapshot_arn: str=None):
        """DBClusterSnapshot - a model defined in OpenAPI

        :param availability_zones: The availability_zones of this DBClusterSnapshot.
        :param db_cluster_snapshot_identifier: The db_cluster_snapshot_identifier of this DBClusterSnapshot.
        :param db_cluster_identifier: The db_cluster_identifier of this DBClusterSnapshot.
        :param snapshot_create_time: The snapshot_create_time of this DBClusterSnapshot.
        :param engine: The engine of this DBClusterSnapshot.
        :param status: The status of this DBClusterSnapshot.
        :param port: The port of this DBClusterSnapshot.
        :param vpc_id: The vpc_id of this DBClusterSnapshot.
        :param cluster_create_time: The cluster_create_time of this DBClusterSnapshot.
        :param master_username: The master_username of this DBClusterSnapshot.
        :param engine_version: The engine_version of this DBClusterSnapshot.
        :param snapshot_type: The snapshot_type of this DBClusterSnapshot.
        :param percent_progress: The percent_progress of this DBClusterSnapshot.
        :param storage_encrypted: The storage_encrypted of this DBClusterSnapshot.
        :param kms_key_id: The kms_key_id of this DBClusterSnapshot.
        :param db_cluster_snapshot_arn: The db_cluster_snapshot_arn of this DBClusterSnapshot.
        :param source_db_cluster_snapshot_arn: The source_db_cluster_snapshot_arn of this DBClusterSnapshot.
        """
        self.openapi_types = {
            'availability_zones': List,
            'db_cluster_snapshot_identifier': str,
            'db_cluster_identifier': str,
            'snapshot_create_time': datetime,
            'engine': str,
            'status': str,
            'port': int,
            'vpc_id': str,
            'cluster_create_time': datetime,
            'master_username': str,
            'engine_version': str,
            'snapshot_type': str,
            'percent_progress': int,
            'storage_encrypted': bool,
            'kms_key_id': str,
            'db_cluster_snapshot_arn': str,
            'source_db_cluster_snapshot_arn': str
        }

        self.attribute_map = {
            'availability_zones': 'AvailabilityZones',
            'db_cluster_snapshot_identifier': 'DBClusterSnapshotIdentifier',
            'db_cluster_identifier': 'DBClusterIdentifier',
            'snapshot_create_time': 'SnapshotCreateTime',
            'engine': 'Engine',
            'status': 'Status',
            'port': 'Port',
            'vpc_id': 'VpcId',
            'cluster_create_time': 'ClusterCreateTime',
            'master_username': 'MasterUsername',
            'engine_version': 'EngineVersion',
            'snapshot_type': 'SnapshotType',
            'percent_progress': 'PercentProgress',
            'storage_encrypted': 'StorageEncrypted',
            'kms_key_id': 'KmsKeyId',
            'db_cluster_snapshot_arn': 'DBClusterSnapshotArn',
            'source_db_cluster_snapshot_arn': 'SourceDBClusterSnapshotArn'
        }

        self._availability_zones = availability_zones
        self._db_cluster_snapshot_identifier = db_cluster_snapshot_identifier
        self._db_cluster_identifier = db_cluster_identifier
        self._snapshot_create_time = snapshot_create_time
        self._engine = engine
        self._status = status
        self._port = port
        self._vpc_id = vpc_id
        self._cluster_create_time = cluster_create_time
        self._master_username = master_username
        self._engine_version = engine_version
        self._snapshot_type = snapshot_type
        self._percent_progress = percent_progress
        self._storage_encrypted = storage_encrypted
        self._kms_key_id = kms_key_id
        self._db_cluster_snapshot_arn = db_cluster_snapshot_arn
        self._source_db_cluster_snapshot_arn = source_db_cluster_snapshot_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DBClusterSnapshot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DBClusterSnapshot of this DBClusterSnapshot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def availability_zones(self):
        """Gets the availability_zones of this DBClusterSnapshot.


        :return: The availability_zones of this DBClusterSnapshot.
        :rtype: List
        """
        return self._availability_zones

    @availability_zones.setter
    def availability_zones(self, availability_zones):
        """Sets the availability_zones of this DBClusterSnapshot.


        :param availability_zones: The availability_zones of this DBClusterSnapshot.
        :type availability_zones: List
        """

        self._availability_zones = availability_zones

    @property
    def db_cluster_snapshot_identifier(self):
        """Gets the db_cluster_snapshot_identifier of this DBClusterSnapshot.


        :return: The db_cluster_snapshot_identifier of this DBClusterSnapshot.
        :rtype: str
        """
        return self._db_cluster_snapshot_identifier

    @db_cluster_snapshot_identifier.setter
    def db_cluster_snapshot_identifier(self, db_cluster_snapshot_identifier):
        """Sets the db_cluster_snapshot_identifier of this DBClusterSnapshot.


        :param db_cluster_snapshot_identifier: The db_cluster_snapshot_identifier of this DBClusterSnapshot.
        :type db_cluster_snapshot_identifier: str
        """

        self._db_cluster_snapshot_identifier = db_cluster_snapshot_identifier

    @property
    def db_cluster_identifier(self):
        """Gets the db_cluster_identifier of this DBClusterSnapshot.


        :return: The db_cluster_identifier of this DBClusterSnapshot.
        :rtype: str
        """
        return self._db_cluster_identifier

    @db_cluster_identifier.setter
    def db_cluster_identifier(self, db_cluster_identifier):
        """Sets the db_cluster_identifier of this DBClusterSnapshot.


        :param db_cluster_identifier: The db_cluster_identifier of this DBClusterSnapshot.
        :type db_cluster_identifier: str
        """

        self._db_cluster_identifier = db_cluster_identifier

    @property
    def snapshot_create_time(self):
        """Gets the snapshot_create_time of this DBClusterSnapshot.


        :return: The snapshot_create_time of this DBClusterSnapshot.
        :rtype: datetime
        """
        return self._snapshot_create_time

    @snapshot_create_time.setter
    def snapshot_create_time(self, snapshot_create_time):
        """Sets the snapshot_create_time of this DBClusterSnapshot.


        :param snapshot_create_time: The snapshot_create_time of this DBClusterSnapshot.
        :type snapshot_create_time: datetime
        """

        self._snapshot_create_time = snapshot_create_time

    @property
    def engine(self):
        """Gets the engine of this DBClusterSnapshot.


        :return: The engine of this DBClusterSnapshot.
        :rtype: str
        """
        return self._engine

    @engine.setter
    def engine(self, engine):
        """Sets the engine of this DBClusterSnapshot.


        :param engine: The engine of this DBClusterSnapshot.
        :type engine: str
        """

        self._engine = engine

    @property
    def status(self):
        """Gets the status of this DBClusterSnapshot.


        :return: The status of this DBClusterSnapshot.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DBClusterSnapshot.


        :param status: The status of this DBClusterSnapshot.
        :type status: str
        """

        self._status = status

    @property
    def port(self):
        """Gets the port of this DBClusterSnapshot.


        :return: The port of this DBClusterSnapshot.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this DBClusterSnapshot.


        :param port: The port of this DBClusterSnapshot.
        :type port: int
        """

        self._port = port

    @property
    def vpc_id(self):
        """Gets the vpc_id of this DBClusterSnapshot.


        :return: The vpc_id of this DBClusterSnapshot.
        :rtype: str
        """
        return self._vpc_id

    @vpc_id.setter
    def vpc_id(self, vpc_id):
        """Sets the vpc_id of this DBClusterSnapshot.


        :param vpc_id: The vpc_id of this DBClusterSnapshot.
        :type vpc_id: str
        """

        self._vpc_id = vpc_id

    @property
    def cluster_create_time(self):
        """Gets the cluster_create_time of this DBClusterSnapshot.


        :return: The cluster_create_time of this DBClusterSnapshot.
        :rtype: datetime
        """
        return self._cluster_create_time

    @cluster_create_time.setter
    def cluster_create_time(self, cluster_create_time):
        """Sets the cluster_create_time of this DBClusterSnapshot.


        :param cluster_create_time: The cluster_create_time of this DBClusterSnapshot.
        :type cluster_create_time: datetime
        """

        self._cluster_create_time = cluster_create_time

    @property
    def master_username(self):
        """Gets the master_username of this DBClusterSnapshot.


        :return: The master_username of this DBClusterSnapshot.
        :rtype: str
        """
        return self._master_username

    @master_username.setter
    def master_username(self, master_username):
        """Sets the master_username of this DBClusterSnapshot.


        :param master_username: The master_username of this DBClusterSnapshot.
        :type master_username: str
        """

        self._master_username = master_username

    @property
    def engine_version(self):
        """Gets the engine_version of this DBClusterSnapshot.


        :return: The engine_version of this DBClusterSnapshot.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this DBClusterSnapshot.


        :param engine_version: The engine_version of this DBClusterSnapshot.
        :type engine_version: str
        """

        self._engine_version = engine_version

    @property
    def snapshot_type(self):
        """Gets the snapshot_type of this DBClusterSnapshot.


        :return: The snapshot_type of this DBClusterSnapshot.
        :rtype: str
        """
        return self._snapshot_type

    @snapshot_type.setter
    def snapshot_type(self, snapshot_type):
        """Sets the snapshot_type of this DBClusterSnapshot.


        :param snapshot_type: The snapshot_type of this DBClusterSnapshot.
        :type snapshot_type: str
        """

        self._snapshot_type = snapshot_type

    @property
    def percent_progress(self):
        """Gets the percent_progress of this DBClusterSnapshot.


        :return: The percent_progress of this DBClusterSnapshot.
        :rtype: int
        """
        return self._percent_progress

    @percent_progress.setter
    def percent_progress(self, percent_progress):
        """Sets the percent_progress of this DBClusterSnapshot.


        :param percent_progress: The percent_progress of this DBClusterSnapshot.
        :type percent_progress: int
        """

        self._percent_progress = percent_progress

    @property
    def storage_encrypted(self):
        """Gets the storage_encrypted of this DBClusterSnapshot.


        :return: The storage_encrypted of this DBClusterSnapshot.
        :rtype: bool
        """
        return self._storage_encrypted

    @storage_encrypted.setter
    def storage_encrypted(self, storage_encrypted):
        """Sets the storage_encrypted of this DBClusterSnapshot.


        :param storage_encrypted: The storage_encrypted of this DBClusterSnapshot.
        :type storage_encrypted: bool
        """

        self._storage_encrypted = storage_encrypted

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this DBClusterSnapshot.


        :return: The kms_key_id of this DBClusterSnapshot.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this DBClusterSnapshot.


        :param kms_key_id: The kms_key_id of this DBClusterSnapshot.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def db_cluster_snapshot_arn(self):
        """Gets the db_cluster_snapshot_arn of this DBClusterSnapshot.


        :return: The db_cluster_snapshot_arn of this DBClusterSnapshot.
        :rtype: str
        """
        return self._db_cluster_snapshot_arn

    @db_cluster_snapshot_arn.setter
    def db_cluster_snapshot_arn(self, db_cluster_snapshot_arn):
        """Sets the db_cluster_snapshot_arn of this DBClusterSnapshot.


        :param db_cluster_snapshot_arn: The db_cluster_snapshot_arn of this DBClusterSnapshot.
        :type db_cluster_snapshot_arn: str
        """

        self._db_cluster_snapshot_arn = db_cluster_snapshot_arn

    @property
    def source_db_cluster_snapshot_arn(self):
        """Gets the source_db_cluster_snapshot_arn of this DBClusterSnapshot.


        :return: The source_db_cluster_snapshot_arn of this DBClusterSnapshot.
        :rtype: str
        """
        return self._source_db_cluster_snapshot_arn

    @source_db_cluster_snapshot_arn.setter
    def source_db_cluster_snapshot_arn(self, source_db_cluster_snapshot_arn):
        """Sets the source_db_cluster_snapshot_arn of this DBClusterSnapshot.


        :param source_db_cluster_snapshot_arn: The source_db_cluster_snapshot_arn of this DBClusterSnapshot.
        :type source_db_cluster_snapshot_arn: str
        """

        self._source_db_cluster_snapshot_arn = source_db_cluster_snapshot_arn
