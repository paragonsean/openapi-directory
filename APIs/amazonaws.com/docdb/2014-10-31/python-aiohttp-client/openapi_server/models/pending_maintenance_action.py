# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PendingMaintenanceAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, auto_applied_after_date: datetime=None, forced_apply_date: datetime=None, opt_in_status: str=None, current_apply_date: datetime=None, description: str=None):
        """PendingMaintenanceAction - a model defined in OpenAPI

        :param action: The action of this PendingMaintenanceAction.
        :param auto_applied_after_date: The auto_applied_after_date of this PendingMaintenanceAction.
        :param forced_apply_date: The forced_apply_date of this PendingMaintenanceAction.
        :param opt_in_status: The opt_in_status of this PendingMaintenanceAction.
        :param current_apply_date: The current_apply_date of this PendingMaintenanceAction.
        :param description: The description of this PendingMaintenanceAction.
        """
        self.openapi_types = {
            'action': str,
            'auto_applied_after_date': datetime,
            'forced_apply_date': datetime,
            'opt_in_status': str,
            'current_apply_date': datetime,
            'description': str
        }

        self.attribute_map = {
            'action': 'Action',
            'auto_applied_after_date': 'AutoAppliedAfterDate',
            'forced_apply_date': 'ForcedApplyDate',
            'opt_in_status': 'OptInStatus',
            'current_apply_date': 'CurrentApplyDate',
            'description': 'Description'
        }

        self._action = action
        self._auto_applied_after_date = auto_applied_after_date
        self._forced_apply_date = forced_apply_date
        self._opt_in_status = opt_in_status
        self._current_apply_date = current_apply_date
        self._description = description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PendingMaintenanceAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PendingMaintenanceAction of this PendingMaintenanceAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this PendingMaintenanceAction.


        :return: The action of this PendingMaintenanceAction.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this PendingMaintenanceAction.


        :param action: The action of this PendingMaintenanceAction.
        :type action: str
        """

        self._action = action

    @property
    def auto_applied_after_date(self):
        """Gets the auto_applied_after_date of this PendingMaintenanceAction.


        :return: The auto_applied_after_date of this PendingMaintenanceAction.
        :rtype: datetime
        """
        return self._auto_applied_after_date

    @auto_applied_after_date.setter
    def auto_applied_after_date(self, auto_applied_after_date):
        """Sets the auto_applied_after_date of this PendingMaintenanceAction.


        :param auto_applied_after_date: The auto_applied_after_date of this PendingMaintenanceAction.
        :type auto_applied_after_date: datetime
        """

        self._auto_applied_after_date = auto_applied_after_date

    @property
    def forced_apply_date(self):
        """Gets the forced_apply_date of this PendingMaintenanceAction.


        :return: The forced_apply_date of this PendingMaintenanceAction.
        :rtype: datetime
        """
        return self._forced_apply_date

    @forced_apply_date.setter
    def forced_apply_date(self, forced_apply_date):
        """Sets the forced_apply_date of this PendingMaintenanceAction.


        :param forced_apply_date: The forced_apply_date of this PendingMaintenanceAction.
        :type forced_apply_date: datetime
        """

        self._forced_apply_date = forced_apply_date

    @property
    def opt_in_status(self):
        """Gets the opt_in_status of this PendingMaintenanceAction.


        :return: The opt_in_status of this PendingMaintenanceAction.
        :rtype: str
        """
        return self._opt_in_status

    @opt_in_status.setter
    def opt_in_status(self, opt_in_status):
        """Sets the opt_in_status of this PendingMaintenanceAction.


        :param opt_in_status: The opt_in_status of this PendingMaintenanceAction.
        :type opt_in_status: str
        """

        self._opt_in_status = opt_in_status

    @property
    def current_apply_date(self):
        """Gets the current_apply_date of this PendingMaintenanceAction.


        :return: The current_apply_date of this PendingMaintenanceAction.
        :rtype: datetime
        """
        return self._current_apply_date

    @current_apply_date.setter
    def current_apply_date(self, current_apply_date):
        """Sets the current_apply_date of this PendingMaintenanceAction.


        :param current_apply_date: The current_apply_date of this PendingMaintenanceAction.
        :type current_apply_date: datetime
        """

        self._current_apply_date = current_apply_date

    @property
    def description(self):
        """Gets the description of this PendingMaintenanceAction.


        :return: The description of this PendingMaintenanceAction.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PendingMaintenanceAction.


        :param description: The description of this PendingMaintenanceAction.
        :type description: str
        """

        self._description = description
