# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CertificateListInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, certificate_identifier: str=None, certificate_type: str=None, thumbprint: str=None, valid_from: datetime=None, valid_till: datetime=None, certificate_arn: str=None):
        """CertificateListInner - a model defined in OpenAPI

        :param certificate_identifier: The certificate_identifier of this CertificateListInner.
        :param certificate_type: The certificate_type of this CertificateListInner.
        :param thumbprint: The thumbprint of this CertificateListInner.
        :param valid_from: The valid_from of this CertificateListInner.
        :param valid_till: The valid_till of this CertificateListInner.
        :param certificate_arn: The certificate_arn of this CertificateListInner.
        """
        self.openapi_types = {
            'certificate_identifier': str,
            'certificate_type': str,
            'thumbprint': str,
            'valid_from': datetime,
            'valid_till': datetime,
            'certificate_arn': str
        }

        self.attribute_map = {
            'certificate_identifier': 'CertificateIdentifier',
            'certificate_type': 'CertificateType',
            'thumbprint': 'Thumbprint',
            'valid_from': 'ValidFrom',
            'valid_till': 'ValidTill',
            'certificate_arn': 'CertificateArn'
        }

        self._certificate_identifier = certificate_identifier
        self._certificate_type = certificate_type
        self._thumbprint = thumbprint
        self._valid_from = valid_from
        self._valid_till = valid_till
        self._certificate_arn = certificate_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CertificateListInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CertificateList_inner of this CertificateListInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def certificate_identifier(self):
        """Gets the certificate_identifier of this CertificateListInner.


        :return: The certificate_identifier of this CertificateListInner.
        :rtype: str
        """
        return self._certificate_identifier

    @certificate_identifier.setter
    def certificate_identifier(self, certificate_identifier):
        """Sets the certificate_identifier of this CertificateListInner.


        :param certificate_identifier: The certificate_identifier of this CertificateListInner.
        :type certificate_identifier: str
        """

        self._certificate_identifier = certificate_identifier

    @property
    def certificate_type(self):
        """Gets the certificate_type of this CertificateListInner.


        :return: The certificate_type of this CertificateListInner.
        :rtype: str
        """
        return self._certificate_type

    @certificate_type.setter
    def certificate_type(self, certificate_type):
        """Sets the certificate_type of this CertificateListInner.


        :param certificate_type: The certificate_type of this CertificateListInner.
        :type certificate_type: str
        """

        self._certificate_type = certificate_type

    @property
    def thumbprint(self):
        """Gets the thumbprint of this CertificateListInner.


        :return: The thumbprint of this CertificateListInner.
        :rtype: str
        """
        return self._thumbprint

    @thumbprint.setter
    def thumbprint(self, thumbprint):
        """Sets the thumbprint of this CertificateListInner.


        :param thumbprint: The thumbprint of this CertificateListInner.
        :type thumbprint: str
        """

        self._thumbprint = thumbprint

    @property
    def valid_from(self):
        """Gets the valid_from of this CertificateListInner.


        :return: The valid_from of this CertificateListInner.
        :rtype: datetime
        """
        return self._valid_from

    @valid_from.setter
    def valid_from(self, valid_from):
        """Sets the valid_from of this CertificateListInner.


        :param valid_from: The valid_from of this CertificateListInner.
        :type valid_from: datetime
        """

        self._valid_from = valid_from

    @property
    def valid_till(self):
        """Gets the valid_till of this CertificateListInner.


        :return: The valid_till of this CertificateListInner.
        :rtype: datetime
        """
        return self._valid_till

    @valid_till.setter
    def valid_till(self, valid_till):
        """Sets the valid_till of this CertificateListInner.


        :param valid_till: The valid_till of this CertificateListInner.
        :type valid_till: datetime
        """

        self._valid_till = valid_till

    @property
    def certificate_arn(self):
        """Gets the certificate_arn of this CertificateListInner.


        :return: The certificate_arn of this CertificateListInner.
        :rtype: str
        """
        return self._certificate_arn

    @certificate_arn.setter
    def certificate_arn(self, certificate_arn):
        """Sets the certificate_arn of this CertificateListInner.


        :param certificate_arn: The certificate_arn of this CertificateListInner.
        :type certificate_arn: str
        """

        self._certificate_arn = certificate_arn
